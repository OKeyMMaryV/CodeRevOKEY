#Область ОписаниеПеременных

// Хранит текущий выбранный тип значения элемента ПВХ.
&НаКлиенте
Перем мТекТипЗначения;

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Процедура - обработчик события "ПриОткрытии" формы.
// 
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	мТекТипЗначения = Объект.ТипЗначения;
	
КонецПроцедуры

// Процедура - обработчик события "ПриСозданииНаСервере" формы.
// 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МетаданныеОбъекта = Объект.Ссылка.Метаданные();
	
	// Вызов механизма защиты
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 	
	
	УстановитьВидимость();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события "ПриИзменении" поля ввода "Наименование".
// 
&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Если ПустаяСтрока(Объект.Код) Тогда
	
		Объект.Код = СтрЗаменить(ТРег(Объект.Наименование)," ","");
	
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Код".
// 
&НаКлиенте
Процедура КодПриИзменении(Элемент)
	
	Объект.Код = СтрЗаменить(Объект.Код," ","");
	СпецСимволы = " ,;:[]{}'""/\?!@#$%^&*+=<>~`|()1234567890№";
	Объект.Код = бит_ОбщегоНазначенияКлиентСервер.ПроверитьСпецСимволы(Объект.Код,СпецСимволы,"Имя");
	
	Если ПустаяСтрока(Объект.Наименование) Тогда
	
		Объект.Наименование = Объект.Код;
	
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "ТипЗначения".
// 
&НаКлиенте
Процедура ТипЗначенияПриИзменении(Элемент)
	
	МассивТипов = Объект.ТипЗначения.Типы();
	
	Если МассивТипов.Количество() > 1 Тогда
		
		ТекстСообщения = НСтр("ru = 'Вид объекта адресации не может быть составного типа!'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		
		Объект.ТипЗначения = мТекТипЗначения; 
		
	ИначеЕсли МассивТипов.Количество() = 1 Тогда	
		
		Если ПустаяСтрока(Объект.Наименование) Тогда
			
			 ТекТип = МассивТипов[0];
			 ЗаполнитьКодНаименование(ТекТип);
			
		КонецЕсли; 
		
	КонецЕсли; 
	
	мТекТипЗначения = Объект.ТипЗначения;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает видимость/доступность элементов формы.
// 
&НаСервере
Процедура УстановитьВидимость()

	Элементы.Код.ТолькоПросмотр         = Объект.Предопределенный;
	Элементы.ТипЗначения.ТолькоПросмотр = Объект.Предопределенный;

КонецПроцедуры // УстановитьВидимость()

// Процедура заполняет код и наименование элемента по метаданным выбранного типа.
// 
// Параметры:
//  ТекТип - Тип.
// 
&НаСервере
Процедура ЗаполнитьКодНаименование(ТекТип)
	
	МетаОбъект = Метаданные.НайтиПоТипу(ТекТип);
	
	Если МетаОбъект <> Неопределено Тогда
	
		Имя =  СтрЗаменить(МетаОбъект.Имя, "бит_", "");
		Если ВРег(Имя) = ВРег("Организации") Тогда
		
			Имя = "Организация";
			
		ИначеЕсли ВРег(Имя) = ВРег("Проекты") Тогда
			
			Имя = "Проект";
			
		ИначеЕсли ВРег(Имя) = ВРег("Подразделения") Тогда
			
			Имя = "ЦФО";
			
		ИначеЕсли ВРег(Имя) = ВРег("СтатьиОборотов") Тогда
			
			Имя = "СтатьяОборотов";
		
		КонецЕсли; 
		
		Объект.Код          = Имя;
		Объект.Наименование = Имя;
	
	КонецЕсли; 
	
КонецПроцедуры // ЗаполнитьКодНаименование()

#КонецОбласти

