
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрименитьНастройкиОбработки(Параметры.НастройкиОбработки);
	ДоступныеРешения = Параметры.ДоступныеРешения;
	Период           = Параметры.Период;
	
	УстановитьДекорациюРешение();
	УправлениеЭлементамиФормы();	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	
	ПриИзмененииПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	
	ПриИзмененииПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура РешениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("РешениеНачалоВыбораЗавершение", ЭтотОбъект, Элемент); 
	ПоказатьВыборИзСписка(Оповещение,ДоступныеРешения,Элемент);
	
КонецПроцедуры

// Процедура обработчик оповещения "РешениеНачалоВыбораОкончание". 
// 
// Параметры:
//  РезультатВыбора - ЭлементСпискаЗначений.
//  Элемент - ПолеФормы.
// 
&НаКлиенте 
Процедура РешениеНачалоВыбораЗавершение(РезультатВыбора, Элемент) Экспорт
	
	Если НЕ РезультатВыбора = Неопределено Тогда
		Объект.Решение = РезультатВыбора.Значение;
		РешениеПриИзменении(Элемент);
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Решение".
//
&НаКлиенте
Процедура РешениеПриИзменении(Элемент)
	
	ИзменениеРешения();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимФильтраВизПриИзменении(Элемент)
	
	Если Не Объект.РежимФильтраВиз = 3 Тогда
		Объект.Виза = ПредопределенноеЗначение("Справочник.бит_Визы.ПустаяСсылка");
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура - действие команды "КомандаОК".
//
&НаКлиенте
Процедура КомандаОК(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Команда",			   "ОК");
	СтруктураПараметров.Вставить("НастройкиОбработки", ТекущиеНастройкиОбработки());
	Закрыть(СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	Диалог.Период = Период;
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

// Процедура - Выбрать период завершение
//
// Параметры:
//  РезультатВыбора	 - Структура - структура с ключами:
//  * НачалоПериода - Дата - Начало периода.
//  * КонецПериода - Дата - Конец периода.
//  ДопПараметры	 - Структура - Структура из дополнительных параметров.
//
&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		Период = РезультатВыбора;
		Объект.НачалоПериода= РезультатВыбора.ДатаНачала;
		Объект.КонецПериода	= РезультатВыбора.ДатаОкончания;
		ТекущаяНастройкаПериода = ТекущаяНастройкаПериода();
		Если ТекущаяНастройкаПериода <> Неопределено Тогда
			ТекущаяНастройкаПериода.Значение = Период;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура обрабатывает изменение решения.
//
&НаСервере
Процедура ИзменениеРешения()
	
	УстановитьДекорациюРешение();
	
КонецПроцедуры

// Процедура устанавливает декорацию решения.
//
&НаСервере
Процедура УстановитьДекорациюРешение()
	
	Если ЗначениеЗаполнено(Объект.Решение) Тогда
		Элементы.ДекорацияРешение.Заголовок = "";
	Иначе	
		Элементы.ДекорацияРешение.Заголовок = НСтр("ru = 'Будут очищены решения по доступным визам.'"); 
	КонецЕсли; 
	
КонецПроцедуры

// Процедура управляет видимостью/доступность элементов формы.
// 
&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	Элементы.Виза.Видимость = ?(Объект.РежимФильтраВиз = 3, Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте 
Функция ТекущаяНастройкаПериода()
	
	ТекущаяНастройкаПериода	= Неопределено;
	Компоновщик		= Объект.Компоновщик;
	ПараметрПериод	= Компоновщик.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	Если ТипЗнч(ПараметрПериод) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
		ТекущаяНастройкаПериода = Компоновщик.ПользовательскиеНастройки.Элементы.Найти(ПараметрПериод.ИдентификаторПользовательскойНастройки);
	КонецЕсли;
	
	Возврат ТекущаяНастройкаПериода;
	
КонецФункции

&НаКлиенте
Процедура ПриИзмененииПериода()
	
	Период = Новый СтандартныйПериод(Объект.НачалоПериода, КонецДня(Объект.КонецПериода));
	ТекущаяНастройкаПериода = ТекущаяНастройкаПериода();
	Если ТекущаяНастройкаПериода <> Неопределено Тогда
		ТекущаяНастройкаПериода.Значение = Период;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ТекущиеНастройкиОбработки()
	
	Возврат Обработки.бит_РабочееМестоВизирования.ТекущиеНастройкиОбработки(Объект);
	
КонецФункции

&НаСервере
Процедура ПрименитьНастройкиОбработки(НастройкиОбработки)
	
	Обработки.бит_РабочееМестоВизирования.ПрименитьНастройкиОбработки(Объект, НастройкиОбработки);
	
КонецПроцедуры

#КонецОбласти
