
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	
	МетаданныеОбъекта = Метаданные.Обработки.бит_КонвертацияОборотовПоБюджету;
	
	// Вызов механизма защиты
	
	
	Если фОтказ Тогда
		Возврат;
	КонецЕсли;
	
	фСтатьиОборотовНДС = Новый Структура("НДС10xРасходование
										|, НДС10xПоступление
										|, НДС18xРасходование
										|, НДС18xПоступление");
		
	ЗаполнитьКэшЗначений();
		
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если фОтказ Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Период.ДатаНачала) Тогда
		Объект.Период.ДатаНачала = Дата('19800101');
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.Период.ДатаОкончания) Тогда
		Объект.Период.ДатаОкончания = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура действиеЗаполнитьРесурсСуммаПриИзменении(Элемент)
	
	Если Не действиеЗаполнитьРесурсСумма Тогда
		действиеВыполнитьПереносДанныхНДС = Ложь;	
	КонецЕсли;
	
КонецПроцедуры // ДействиеЗаполнитьРесурсСуммаПриИзменении()

&НаКлиенте
Процедура действиеВыполнитьПереносДанныхНДСПриИзменении(Элемент)
	
	Если действиеВыполнитьПереносДанныхНДС Тогда
		действиеЗаполнитьРесурсСумма = Истина;	
	КонецЕсли;
	
КонецПроцедуры // ДействиеВыполнитьПереносДанныхНДСПриИзменении

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаНастроитьПериод(Команда)
	
	бит_РаботаСДиалогамиКлиент.ОткрытьДиалогСтандартногоПериода(Объект);
	
КонецПроцедуры // КомандаНастроитьПериод()

&НаКлиенте
Процедура ВыполнитьДействия(Команда)

	Если Не ЗначениеЗаполнено(Объект.Период.ДатаОкончания) Тогда
		Объект.Период.ДатаОкончания = ТекущаяДата();
	КонецЕсли;
	
	// Очистка шаблонов проводок статей оборотов (НДС, без НДС).
	Если действиеОчиститьШаблоныПроводокСтатейОборотов Тогда
		
		ОчиститьШаблоныПроводокСтатейОборотов();	 	
	
	КонецЕсли;
	
	// Конвертация движений документов
	Если действиеЗаполнитьРесурсСумма ИЛИ действиеВыполнитьПереносДанныхНДС Тогда
		
		Если Объект.Период.ДатаНачала > Объект.Период.ДатаОкончания И ЗначениеЗаполнено(Объект.Период.ДатаОкончания) Тогда
		 	ТекстСообщения = Нстр("ru = 'Нет данных, удовлетворяющих отбору. Дата начала периода больше даты окончания.'");
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		ВыполнитьКонвертациюДвижений(действиеВыполнитьПереносДанныхНДС);	 	
	
	КонецЕсли;
	
	// Создание документа установки зависимых оборотов.
	Если действиеСоздатьДокументУстановкиЗависимыхОборотов Тогда
		
		СоздатьДокументыЗависимыхОборотов();	 	
	
	КонецЕсли;  	
	     	
КонецПроцедуры // ВыполнитьДействия()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура заполняет кэш значений, необходимый при работе на клиенте.
// 
&НаСервере
Процедура ЗаполнитьКэшЗначений()

	фКэшЗначений = Новый Структура;
	
	фКэшЗначений.Вставить("ИмяТипаОбъекта", "ОбработкаОбъект.бит_КонвертацияОборотовПоБюджету");
	
	// Валюты регламентированного и управленческого учетов.
	СтруктураВалют = Новый Структура("ВалютаРеглУчета, ВалютаУпрлУчета"
									, Константы.ВалютаРегламентированногоУчета.Получить()
									, Константы.бит_ВалютаУправленческогоУчета.Получить());
	фКэшЗначений.Вставить("СтруктураВалют", СтруктураВалют);
	
	РеквизитыУчета = Новый Массив;
	Для каждого РеквизитСтатьи Из Метаданные.Справочники.бит_СтатьиОборотов.Реквизиты Цикл
		ИмяРеквизита = РеквизитСтатьи.Имя;
		Если Лев(ИмяРеквизита, 5) = "Учет_" И ИмяРеквизита <> "Учет_Количество" Тогда
			РеквизитыУчета.Добавить(ИмяРеквизита);				
		КонецЕсли;			                                
	КонецЦикла;
	фКэшЗначений.Вставить("РеквизитыУчета", РеквизитыУчета);
	
КонецПроцедуры // ЗаполнитьКэшЗначений()

// ----------------------------------------------------------------------
// ДЕЙСТВИЯ

// Процедура очищает шаблоны проводок статей оборотов (НДС, без НДС).
// 
// Параметры:
//  Нет
// 
&НаСервере
Процедура ОчиститьШаблоныПроводокСтатейОборотов()

	ТекстСообщения = Нстр("ru = 'Начало очистки шаблонов статей оборотов.'");
	Протокол.ДобавитьСтроку(ТекстСообщения);
	
	ОбрОбъект = ДанныеФормыВЗначение(Объект, Тип(фКэшЗначений.ИмяТипаОбъекта));
	ОбрОбъект.ОчиститьШаблоныПроводокСтатейОборотовМодуль(Протокол);
													
	ТекстСообщения = Нстр("ru = 'Завершена очистка шаблонов статей оборотов.'");
	Протокол.ДобавитьСтроку(ТекстСообщения);
	Протокол.ДобавитьСтроку(Символы.ПС);	

КонецПроцедуры // ОчиститьШаблоныПроводокСтатейОборотов()

// Процедура выполняет конвертацию движений.
// 
// Параметры:
//  ВыполнитьПереносДанныхНДС - Булево.
// 
&НаСервере
Процедура ВыполнитьКонвертациюДвижений(ВыполнитьПереносДанныхНДС)
	
	ТекстПериод = "";
	Если ЗначениеЗаполнено(Объект.Период.ДатаНачала) Тогда
		ТекстПериод = "(" + Нстр("ru = 'с '") + Объект.Период.ДатаНачала;	
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Период.ДатаОкончания) Тогда
		ТекстПериод = ?(ЗначениеЗаполнено(ТекстПериод), ТекстПериод + " ", "(") 
						+ Нстр("ru = 'по '") + Объект.Период.ДатаОкончания;	
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекстПериод) Тогда
		ТекстПериод = ТекстПериод + ")";	
	КонецЕсли;
	
	ТекстСообщения = Нстр("ru = 'Начало выполнения конвертации движений документов'") + ТекстПериод + ".";
	Протокол.ДобавитьСтроку(ТекстСообщения);
	
	ОбрОбъект = ДанныеФормыВЗначение(Объект, Тип(фКэшЗначений.ИмяТипаОбъекта));
	ОбрОбъект.ВыполнитьКонвертациюДвиженийМодуль(фКэшЗначений.СтруктураВалют
												, фКэшЗначений.РеквизитыУчета
												, фСтатьиОборотовНДС
												, фВидСтатьи
												, фГруппаСтатейНДС
												, Протокол
												, ВыполнитьПереносДанныхНДС);
												
	ТекстСообщения = Нстр("ru = 'Завершено выполнение конвертации движений документов'") + ТекстПериод + ".";
	Протокол.ДобавитьСтроку(ТекстСообщения);
	
	Протокол.ДобавитьСтроку(Символы.ПС);
	
КонецПроцедуры // ВыполнитьКонвертациюДвижений()

// Процедура создает документы "Установка зависимых оборотов (БИТ)".
// 
// Параметры:
//  Нет
// 
&НаСервере
Процедура СоздатьДокументыЗависимыхОборотов()
	
	ТекстСообщения = Нстр("ru = 'Начало создания документа установки зависимых оборотов.'");
	Протокол.ДобавитьСтроку(ТекстСообщения);
	
	ОбрОбъект = ДанныеФормыВЗначение(Объект, Тип(фКэшЗначений.ИмяТипаОбъекта));
	ОбрОбъект.СоздатьДокументыЗависимыхОборотовМодуль(фКэшЗначений.РеквизитыУчета
													, фСтатьиОборотовНДС
													, фВидСтатьи
													, фГруппаСтатейНДС
													, Протокол);
													
	ТекстСообщения = Нстр("ru = 'Завершено создание документов установки зависимых оборотов.'");
	Протокол.ДобавитьСтроку(ТекстСообщения);
	Протокол.ДобавитьСтроку(Символы.ПС);
	
КонецПроцедуры // СоздатьДокументыЗависимыхОборотов()

#КонецОбласти

