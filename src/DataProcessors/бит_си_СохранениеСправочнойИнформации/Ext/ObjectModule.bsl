#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

#Область ПеременныеМодуля




#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ СОХРАНЕНИЯ СПРАВОЧНОЙ ИНФОРМАЦИИ В XML

#Область ПроцедурыСохраненияСправочнойИнформацииВXml


// ДЛЯ ПОСЛЕДУЮЩЕЙ ЗАГРУЗКИ В СПРАВОЧНИК СТАТЕЙ

// Добавляет метку и ее родителей в запись XML.
// 
// Параметры 
// 	Метка       		 -	СправочникСсылка.бит_си_ Метка из справочника меток
// 							МеткиСтатей.
// 	ЗаписьXML          	 -	ЗаписьXML              	 Объект записи XML в файл.                                         
// 	СохраненныеМетки	 -	Массив                 	 Массив ранее сохраненных меток.
// 
Процедура СохранитьМетку(Метка, ЗаписьXML, СохраненныеМетки)
	Если НЕ ТипЗнч(СохраненныеМетки) = Тип("Массив") Тогда
		СохраненныеМетки = Новый Массив();
	КонецЕсли;
	Если НЕ СохраненныеМетки.Найти(Метка) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВремДанные = Метка.ПолучитьОбъект();
	ЗаписатьXML(ЗаписьXML, ВремДанные);
	СохраненныеМетки.Добавить(Метка);
	
	Если ЗначениеЗаполнено(Метка.Родитель) Тогда
		СохранитьМетку(Метка.Родитель, ЗаписьXML, СохраненныеМетки);
	КонецЕсли;
КонецПроцедуры // СохранитьМетку

// Добавляет данные раздела справки текущей строки дерева разделов в запись XML.
// 
// Параметры 
// 	СтрокаДерева       	 -	СтрокаДереваЗначений   	 Строка дерева разделов справки для сохранения.                    
// 	ЗаписьXML          	 -	ЗаписьXML              	 Объект записи XML в файл.                                         
// 	ПодчиненныеСохранял	 -	Булево                 	 Истина - выполнялось сохранение подчиненных разделов/статей      
// 	ись                	  	                       	 справки; Ложь - в противном случае.                               
// 	СохранятьОтборы		 -	Булево                 	 Истина - сохранить отборы статей.
// 	СохранятьПривязки	 -	Булево                 	 Истина - сохранить привязки объектов к статьям.
// 
Процедура СохранениеРаздела(СтрокаДерева,
							ЗаписьXML,
							ПодчиненныеСохранялись = Ложь,
							СохраненныеМетки = Неопределено,
							СохранятьОтборы = Ложь,
							СохранятьПривязки = Ложь)
	ВремПодчиненныеСохранялись = Ложь;
	Если НЕ ТипЗнч(СохраненныеМетки) = Тип("Массив") Тогда
		СохраненныеМетки = Новый Массив();
	КонецЕсли;
	Для Каждого ВремСтрокаДерева Из СтрокаДерева.Строки Цикл
		Если ВремСтрокаДерева.Сохранять = 0 Тогда
			Продолжить;
		КонецЕсли;
		СохранениеРаздела(ВремСтрокаДерева, ЗаписьXML, ВремПодчиненныеСохранялись, СохраненныеМетки, СохранятьОтборы, СохранятьПривязки);
	КонецЦикла;
	Если ВремПодчиненныеСохранялись ИЛИ СтрокаДерева.Сохранять = 1 Тогда
		ВремДанные = СтрокаДерева.Раздел.ПолучитьОбъект();
		ЗаписатьXML(ЗаписьXML, ВремДанные);
		ВремДанные = РегистрыСведений.бит_си_УстановленныеМеткиСтатей.СоздатьНаборЗаписей();
		ВремДанные.Отбор.Статья.Значение = СтрокаДерева.Раздел;
		ВремДанные.Отбор.Статья.Использование = Истина;
		ВремДанные.Прочитать();
		Если НЕ ВремДанные.Количество() = 0 Тогда
			ЗаписатьXML(ЗаписьXML, ВремДанные);
			Для Каждого ТекЗапись Из ВремДанные Цикл
				СохранитьМетку(ТекЗапись.Метка, ЗаписьXML, СохраненныеМетки);
			КонецЦикла;
		КонецЕсли;
		Если СохранятьОтборы ИЛИ СохранятьПривязки Тогда
			ВремДанные = РегистрыСведений.бит_си_СвязанныеОбъекты.СоздатьНаборЗаписей();
			ВремДанные.Отбор.Статья.Значение = СтрокаДерева.Раздел;
			ВремДанные.Отбор.Статья.Использование = Истина;
			Если СохранятьОтборы И НЕ СохранятьПривязки Тогда
				ВремДанные.Отбор.ДляОтборов.Значение = Истина;
				ВремДанные.Отбор.ДляОтборов.Использование = Истина;
			ИначеЕсли НЕ СохранятьОтборы И СохранятьПривязки Тогда
				ВремДанные.Отбор.ДляОтборов.Значение = Ложь;
				ВремДанные.Отбор.ДляОтборов.Использование = Истина;
			КонецЕсли;
			ВремДанные.Прочитать();
			Если НЕ ВремДанные.Количество() = 0 Тогда
				ЗаписатьXML(ЗаписьXML, ВремДанные);
			КонецЕсли;
		КонецЕсли;
		ПодчиненныеСохранялись = Истина;
	КонецЕсли;
КонецПроцедуры // СохранениеРаздела()

// Сохраняет разделы справки, отмеченные в дереве разделов, в файл XML (или сжатый XML-файл, ZIP).
// 
// Параметры 
// 	ДеревоРазделов     	 -	ДеревоЗначений         	 Дерево разделов с пометками для сохранения.                      
// 		Поля 
// 			Сохранять  	 -	Число		         	 1 - Сохранять раздел/статью; 0 - не сохранять;
// 													 2 - сохраняются дочерние разделы/статьи.
// 			Раздел  	 -	СправочникСсылка
// 							.бит_си_Статьи         	 Ссылка на элемент справочника статей.
// 	СохранятьОтборы		 -	Булево                 	 Истина - сохранить отборы статей.
// 	СохранятьПривязки	 -	Булево                 	 Истина - сохранить привязки объектов к статьям.
// 
Процедура СохранитьСправочнуюИнформацию(ДеревоРазделов, СохранятьОтборы = Ложь, СохранятьПривязки = Ложь) Экспорт


	#Если Клиент Тогда
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогОткрытияФайла.Фильтр = "Файлы разделов справки (*.xml)|*.xml|Упакованные файлы разделов справки (*.zip)|*.zip";
	ДиалогОткрытияФайла.Расширение = "zip";
	ДиалогОткрытияФайла.МножественныйВыбор = ложь;
	
	Если НЕ ДиалогОткрытияФайла.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьXML = Новый ЗаписьXML;
	ВремФайл = ?(Прав(ДиалогОткрытияФайла.ПолноеИмяФайла,4)=".zip",
				 ПолучитьИмяВременногоФайла("xml"),
				 ДиалогОткрытияФайла.ПолноеИмяФайла);
				 
	ЗаписьXML.ОткрытьФайл(ВремФайл);
	
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("бит_си_СправочнаяИнформация");
	
	// Для сокращения размера файла сообщения записываем соответствие пространств имен
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("xsd", "http://www.w3.org/2001/XMLSchema");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("xsi", "http://www.w3.org/2001/XMLSchema-instance");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("v8", "http://v8.1c.ru/data");
	
	Попытка
		
		// Получаем выборку сохраняемых данных	
		Для Каждого СтрокаДерева Из ДеревоРазделов.Строки Цикл
			Если СтрокаДерева.Сохранять = 0 Тогда
				Продолжить;
			КонецЕсли;
			СохранениеРаздела(СтрокаДерева, ЗаписьXML, , , СохранятьОтборы, СохранятьПривязки);
		КонецЦикла;
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.Закрыть();
		
	Исключение
		
		ТекстОшибки = ОписаниеОшибки();
		
		ТекстСообщения = НСтр("ru = '%1'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ТекстОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		ВызватьИсключение (ТекстОшибки);
		
	КонецПопытки;
	
	Если Прав(ДиалогОткрытияФайла.ПолноеИмяФайла,4)=".zip" Тогда
		Попытка
			Архиватор = Новый ЗаписьZipФайла(ДиалогОткрытияФайла.ПолноеИмяФайла, , "Файл разделов справки");
			Архиватор.Добавить(ВремФайл);
			Архиватор.Записать();
		
		Исключение
			ТекстСообщения = НСтр("ru = 'Ошибка архивации файла разделов справки: %1'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, ОписаниеОшибки());
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	    КонецПопытки;
		
	КонецЕсли;
	#КонецЕсли
КонецПроцедуры // СохранитьСправочнуюИнформацию()

#КонецОбласти


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ СОХРАНЕНИЯ СПРАВОЧНОЙ ИНФОРМАЦИИ В HTML.

#Область ПроцедурыСохраненияСправочнойИнформацииВHtml



// Добавляет раздел справки в содержание HTML-документа.
// 
// Параметры 
// 	СтрокаДерева       	 -	СтрокаДереваЗначений   	 Добавляемая строка дерева разделов.                               
// 	НомерСсылки        	 -	Число                  	 Порядковый номер ссылки на сохраняемый раздел.                    
// 	ТекстДокумента     	 -	ТекстовыйДокумент      	 Текст сохраняемого HTML-документа.                                
// 
Процедура ДобавлениеРазделаСодержания(СтрокаДерева, ТекстДокумента, КаталогИзображений)
	Для Каждого ТекСтрока Из СтрокаДерева.Строки Цикл
		Если ТекСтрока.Сохранять = 0 Тогда
			Продолжить;
		КонецЕсли;
		НаименованиеСтатьи = ?(ТекСтрока.Раздел.ЭтоГруппа, ТекСтрока.Раздел.Наименование, ТекСтрока.Раздел.НазваниеСтатьи);
		СтатьяОбъект = ТекСтрока.Раздел.ПолучитьОбъект();
		Метки = СтатьяОбъект.ПолучитьМеткиСтатьи(Истина, КаталогИзображений);
		ТекстМетки = "";
		Для Каждого ТекМетка Из Метки Цикл
			ТекстМетки = ТекстМетки +
						 "&nbsp;<img alt=""" + ТекМетка.Наименование + """ title=""" +
						 ТекМетка.Наименование + """ src = """ + ТекМетка.Картинка + """ />";
		КонецЦикла;
		ТекстДокумента.ДобавитьСтроку("<div style=""display:block;text-align:left;text-indent:" +
									  СокрЛП(10 + 20 * ТекСтрока.Уровень()) + "pt;font-size:" +
									  ?(ТекСтрока.Раздел.ЭтоГруппа,"12","10") + "pt;font-weight:" +
									  ?(ТекСтрока.Раздел.ЭтоГруппа,"bolder","normal") + ";padding-top:" +
									  ?(ТекСтрока.Раздел.ЭтоГруппа,"10","0") + """><a href=""" + "#link" +
									  СокрЛП(ТекСтрока.Раздел.УникальныйИдентификатор()) + """>" + НаименованиеСтатьи + "</a>" +
									  ТекстМетки + "</div>");
		ДобавлениеРазделаСодержания(ТекСтрока, ТекстДокумента, КаталогИзображений);
	КонецЦикла;
КонецПроцедуры // ДобавлениеРазделаСодержания()

// Добавляет раздел справки в HTML-документ
// 
// Параметры 
// 	СтрокаДерева       	 -	СтрокаДереваЗначений   	 Добавляемая строка дерева разделов.                               
// 	НомерСсылки        	 -	Число                  	 Порядковый номер ссылки на сохраняемый раздел.                    
// 	ТекстДокумента     	 -	ТекстовыйДокумент      	 Текст сохраняемого HTML-документа.                                
// 	КаталогИзображений 	 -	Строка                 	 Путь к каталогу для сохранения изображений.                       
// 
Процедура ДобавлениеРаздела(СтрокаДерева, ТекстДокумента, КаталогИзображений)
	Для Каждого ТекСтрока Из СтрокаДерева.Строки Цикл
		Если ТекСтрока.Сохранять = 0 Тогда
			Продолжить;
		КонецЕсли;
		Если ТекСтрока.Раздел.ЭтоГруппа Тогда
			ТекстДокумента.ДобавитьСтроку("<div style=""display:block;text-align:left;text-indent:" +
										  СокрЛП(10 + 20 * ТекСтрока.Уровень()) +
										  "pt;font-size:18pt;font-weight:bold;padding-top:20""><a name=""" +
										  "link" + СокрЛП(ТекСтрока.Раздел.УникальныйИдентификатор()) + """>" +
										  ТекСтрока.Раздел.Наименование + "</a></div>");
			ДобавлениеРаздела(ТекСтрока, ТекстДокумента, КаталогИзображений);
		Иначе
			СтатьяОбъект = ТекСтрока.Раздел.ПолучитьОбъект();
			ТекстСтатьи = СтатьяОбъект.ЗагрузитьИзображенияИзБД(КаталогИзображений);
			
			Метки = СтатьяОбъект.ПолучитьМеткиСтатьи(Истина, КаталогИзображений);
			ТекстМетки = "";
			Для Каждого ТекМетка Из Метки Цикл
				ТекстМетки = ТекстМетки +
							 "&nbsp;<img alt=""" + ТекМетка.Наименование + """ title=""" +
							 ТекМетка.Наименование + """ src = """ + ТекМетка.Картинка + """ />";
			КонецЦикла;
			
			Позиция = Найти(ВРЕГ(ТекстСтатьи), "<BODY>");
			ТекстСтатьи = ?(Позиция = 0, ТекстСтатьи, Сред(ТекстСтатьи,Позиция+6));
			Позиция = Найти(ВРЕГ(ТекстСтатьи), "</BODY>");
			ТекстСтатьи = ?(Позиция = 0, ТекстСтатьи, Лев(ТекстСтатьи,Позиция-1));
			ТекстДокумента.ДобавитьСтроку("<div style=""display:block;text-align:left;text-indent:" +
										  СокрЛП(10 + 20 * ТекСтрока.Уровень()) + "pt;"">" + ТекстМетки + "<a name=""link" +
										  СокрЛП(ТекСтрока.Раздел.УникальныйИдентификатор()) + """></a>" + ТекстСтатьи + "</div>");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // ДобавлениеРаздела()

// Сохраняет разделы справки, отмеченные в дереве разделов, в HTML-документ.
// 
// Параметры 
// 	ДеревоРазделов     	 -	ДеревоЗначений         	 Дерево разделов с пометками для сохранения.                       
// 		Поля 
// 			Сохранять  	 -	Число		         	 1 - Сохранять раздел/статью; 0 - не сохранять;
// 													 2 - сохраняются дочерние разделы/статьи.
// 			Раздел  	 -	СправочникСсылка
// 							.бит_си_Статьи         	 Ссылка на элемент справочника статей.
// 
Процедура СохранитьСправочнуюИнформациюHTML(ДеревоРазделов) Экспорт


	#Если Клиент Тогда
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = "Текст(*.htm)|*.htm";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
		ИмяФайла = МассивФайлов[0];
	Иначе
		Возврат;
	КонецЕсли;
	
	ТекДок = Новый ТекстовыйДокумент;
	ТекДок.ДобавитьСтроку("<html><head><title></title></head><body>");
	
	// Определяем каталог для сохранения изображений.
	ВремКаталог = "";
	ВремФайл = "";
	бит_си_ИсточникСправочникСтатьи.бит_си_ПолучитьКаталогИИмяФайла(ИмяФайла, ВремКаталог, ВремФайл);
	бит_си_ИсточникСправочникСтатьи.бит_си_УстановитьРасширениеФайла(ВремФайл, ".files");
	ВремКаталог = ВремКаталог + "\" + ВремФайл;
	
	// Формируем оглавление
	ДобавлениеРазделаСодержания(ДеревоРазделов, ТекДок, ВремКаталог);
	
	// Формируем содержание
	ДобавлениеРаздела(ДеревоРазделов, ТекДок, ВремКаталог);
	
	ТекДок.ДобавитьСтроку("</BODY></html>");
	ТекДок.Записать(ИмяФайла);
	#КонецЕсли
КонецПроцедуры // СохранитьСправочнуюИнформациюHTML()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

#Область ОператорыОсновнойПрограммы

#КонецОбласти



#КонецЕсли
