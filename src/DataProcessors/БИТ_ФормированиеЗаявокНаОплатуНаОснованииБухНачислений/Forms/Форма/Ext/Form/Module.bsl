
&НаКлиенте
Процедура СформироватьЗаявки(Команда)
	СформироватьЗаявкиНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьЗаявкиНаСервере()
	
	ТаблицаДляСоздания = Объект.СписокЗаявок.Выгрузить(Новый Структура("Отбор",Истина));
	
	// БИТ НАГолубева 25.01.2016 ++
	//СписокДоговоров = ТаблицаДляСоздания.ВыгрузитьКолонку("ДоговорКонтрагента");
	//СписокДоговоров = бит_РаботаСКоллекциями.УдалитьПовторяющиесяЭлементыМассива(СписокДоговоров);		
	//
	//Для Каждого Договор Из СписокДоговоров Цикл
	//	
	//	СтрокиПоДоговору = ТаблицаДляСоздания.НайтиСтроки(Новый Структура("ДоговорКонтрагента",Договор));
	//ДокОб = СоздатьДокументЗаявкаНаРасходДС(СтрокиПоДоговору[0]);
	
	//Для Каждого Строка Из СтрокиПоДоговору Цикл
	СписокЗакрывающихДокументов = ТаблицаДляСоздания.ВыгрузитьКолонку("ЗакрывающийДокумент");
	СписокЗакрывающихДокументов = бит_РаботаСКоллекциями.УдалитьПовторяющиесяЭлементыМассива(СписокЗакрывающихДокументов);
	
	Для каждого СтрокаДок из СписокЗакрывающихДокументов Цикл
		СтрокиДляСоздания = ТаблицаДляСоздания.НайтиСтроки(Новый Структура("ЗакрывающийДокумент", СтрокаДок));
		
		ДокОб = СоздатьДокументЗаявкаНаРасходДС(СтрокиДляСоздания[0]);
		
		Для Каждого Строка из СтрокиДляСоздания Цикл
			
			// БИТ НАГолубева 25.01.2016 --
			
			НовСтрока = ДокОб.Распределение.Добавить();
			
			ЗаполнитьЗначенияСвойств(НовСтрока, Строка);
			
			НовСтрока.Аналитика_1 = Строка.ЗаявкаНаРасход;
			НовСтрока.СтатьяОборотов = Строка.СтатьяДДС;
			// БИТ_YK_н 01/16
			НовСтрока.Аналитика_2 = Строка.Объект;
			// БИТ_YK_к
			
			НовСтрока.Сумма = Строка.СуммаКОплате;				
			
			ДокОб.РассчитатьСуммуНДС(НовСтрока);			
			
			СформироватьНазначениеПлатежа(Строка, ДокОб); // БИТ НАГолубева 25.01.2016 ++
			
		КонецЦикла;
		
		ТаблицаДляСвертки = ДокОб.Распределение.Выгрузить();
		ТаблицаДляСвертки.Свернуть("ЦФО,СтатьяОборотов,Проект,ДоговорКонтрагента,СтавкаНДС,НоменклатурнаяГруппа,Аналитика_1,Аналитика_2,Аналитика_3,Аналитика_4,Аналитика_5,Аналитика_6,Аналитика_7","Сумма,НДС");
		ДокОб.Распределение.Загрузить(ТаблицаДляСвертки);
		
		Для Каждого Строка Из ДокОб.Распределение Цикл
			ДокОб.УстановитьИДСтроки(Строка);
		КонецЦикла;
		
		// БИТ НАГолубева 25.01.2016 ++
		ДокОб.Сумма = ДокОб.Распределение.Итог("Сумма");
		ДокОб.НДС = ДокОб.Распределение.Итог("НДС");
		ДокОб.СуммаРегл = ДокОб.Сумма;
		ДокОб.НДСРегл = ДокОб.НДС;
		ДокОб.СуммаУпр = ДокОб.Сумма;
		ДокОб.НДСУпр = ДокОб.НДС;
		// БИТ НАГолубева 25.01.2016 ++
		
		// БИТ_YK_н 01/16
		бит_ОбщегоНазначения.ЗаписатьПровестиДокумент(ДокОб, РежимЗаписиДокумента.Запись,,"Ошибки");
		// БИТ_YK_к
		
		ДобавленнаяСтрока = Объект.СозданныеДокументы.Добавить();
		ДобавленнаяСтрока.Документ = ДокОб.Ссылка;		
		
	КонецЦикла;
	
	Сообщить("Формирование заявок завершено");
	
	
КонецПроцедуры


&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Если ЭтотОбъект.ПроверитьЗаполнение() Тогда
		
		Объект.СписокЗаявок.Очистить();
		
		// БИТ_YK_н 01/16
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	бит_ОборотыПоБюджетамОбороты.Аналитика_1 КАК ЗаявкаНаРасход,
		|	бит_ОборотыПоБюджетамОбороты.СтатьяОборотов,
		|	ЕСТЬNULL(бит_ОборотыПоБюджетамОбороты.Регистратор.ВалютаДокумента, ВалютаРегламентированногоУчета.Значение) КАК ВалютаДокумента,
		|	бит_ОборотыПоБюджетамОбороты.СуммаОборот КАК СуммаЗакрывающегоДокумента,
		|	бит_ОборотыПоБюджетамОбороты.Контрагент КАК Контрагент,
		|	бит_ОборотыПоБюджетамОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	бит_ОборотыПоБюджетамОбороты.Регистратор.Дата КАК ДатаЗакрывающегоДокумента,
		|	бит_ОборотыПоБюджетамОбороты.Аналитика_1.бит_БК_Инициатор КАК Инициатор,
		|	бит_ОборотыПоБюджетамОбороты.Аналитика_1.Ответственный КАК Ответственный,
		|	бит_ОборотыПоБюджетамОбороты.Регистратор КАК ЗакрывающийДокумент,
		|	бит_ОборотыПоБюджетамОбороты.ЦФО,
		|	бит_ОборотыПоБюджетамОбороты.Регистратор.Организация КАК Организация,
		|	бит_ОборотыПоБюджетамОбороты.Аналитика_2 КАК Объект,
		|	битСтатьиОборотовПоЗависимымОборотам.СтатьяОборотовБДР КАК СтатьяОборотовБДР
		|ПОМЕСТИТЬ ВТ_Обороты
		|ИЗ
		|	РегистрНакопления.бит_ОборотыПоБюджетам.Обороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			Запись,
		|			Сценарий В (&СписокСценариев)
		|				И СтатьяОборотов.ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.бит_ТипыСтатейОборотов.БДДС)) КАК бит_ОборотыПоБюджетамОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.битСтатьиОборотовПоЗависимымОборотам КАК битСтатьиОборотовПоЗависимымОборотам
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_ОборотыПоБюджетам.Обороты(&ДатаНач, &ДатаКон, Запись, ) КАК бит_ОборотыПоБюджетамОборотыБДР
		|			ПО (бит_ОборотыПоБюджетамОборотыБДР.НомерСтроки = битСтатьиОборотовПоЗависимымОборотам.НомерСтрокиИсходный)
		|				И (бит_ОборотыПоБюджетамОборотыБДР.Регистратор = битСтатьиОборотовПоЗависимымОборотам.ПоступлениеТоваровУслуг)
		|		ПО бит_ОборотыПоБюджетамОбороты.НомерСтроки = битСтатьиОборотовПоЗависимымОборотам.НомерСтрокиБДДС
		|			И бит_ОборотыПоБюджетамОбороты.Регистратор = битСтатьиОборотовПоЗависимымОборотам.ПоступлениеТоваровУслуг,
		|	Константа.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1,
		|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов,
		|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) КАК СуммаСценарийКонтрольОборот
		|ПОМЕСТИТЬ ВТ_ДанныеПоБюджету
		|ИЗ
		|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
		|			,
		|			,
		|			,
		|			Сценарий В (&ЗаявкаУ)
		|				И Аналитика_1 В
		|					(ВЫБРАТЬ
		|						ВТ_Обороты.ЗаявкаНаРасход
		|					ИЗ
		|						ВТ_Обороты КАК ВТ_Обороты)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов,
		|	бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Обороты.ЗаявкаНаРасход КАК ЗаявкаНаРасход,
		|	ВТ_Обороты.СтатьяОборотов КАК СтатьяДДС,
		|	ВТ_Обороты.ВалютаДокумента,
		|	ВТ_Обороты.СуммаЗакрывающегоДокумента,
		|	ВТ_Обороты.Контрагент,
		|	ВТ_Обороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВТ_Обороты.ДатаЗакрывающегоДокумента,
		|	ВТ_Обороты.Инициатор,
		|	ВТ_Обороты.Ответственный,
		|	ВТ_Обороты.ЗакрывающийДокумент КАК ЗакрывающийДокумент,
		|	ВТ_Обороты.ЦФО,
		|	ВТ_Обороты.Организация,
		|	рс_ДокументыПоID.ID,
		|	ЕСТЬNULL(ВТ_ДанныеПоБюджету.СуммаСценарийКонтрольОборот, 0) КАК СуммаЗаявкиНаРасход,
		|	ВТ_Обороты.СтатьяОборотовБДР КАК СтатьяОборотов,
		|	ВТ_Обороты.Объект,
		|	ЕСТЬNULL(бит_ПланируемыйРасходДенежныхСредствОстатки.СуммаОстаток, 0) КАК ОстатокПоОплате
		|ИЗ
		|	ВТ_Обороты КАК ВТ_Обороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.рс_ДокументыПоID КАК рс_ДокументыПоID
		|		ПО ВТ_Обороты.ЗакрывающийДокумент = рс_ДокументыПоID.Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеПоБюджету КАК ВТ_ДанныеПоБюджету
		|		ПО ВТ_Обороты.СтатьяОборотовБДР = ВТ_ДанныеПоБюджету.СтатьяОборотов
		|			И ВТ_Обороты.ЗаявкаНаРасход = ВТ_ДанныеПоБюджету.Аналитика_1
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_ПланируемыйРасходДенежныхСредств.Остатки(, СтатьяОборотов.ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.бит_ТипыСтатейОборотов.БДДС)) КАК бит_ПланируемыйРасходДенежныхСредствОстатки
		|		ПО ВТ_Обороты.ДоговорКонтрагента = бит_ПланируемыйРасходДенежныхСредствОстатки.ДоговорКонтрагента
		|			И ВТ_Обороты.Контрагент = бит_ПланируемыйРасходДенежныхСредствОстатки.Контрагент
		| %Условия%
		|ИТОГИ ПО
		|	ДоговорКонтрагента,
		|	ЗакрывающийДокумент");
		//  БИТ_YK_к 
		
		Запрос.УстановитьПараметр("ДатаНач", Объект.ДатаНач);					  
		Запрос.УстановитьПараметр("ДатаКон", Объект.ДатаКон);                             
		
		СписокЗА = Новый СписокЗначений;
		СписокЗа.Добавить(Справочники.СценарииПланирования.Заявка_Инвест);            
		СписокЗа.Добавить(Справочники.СценарииПланирования.Заявка_У);		
		Запрос.УстановитьПараметр("ЗаявкаУ", СписокЗа);	
		
		ТекстДопУсловий = "";
		
		Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
			ТекстДопУсловий = ТекстДопУсловий + " И ВТ_Обороты.Контрагент = &Контрагент";
			Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);				
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
			ТекстДопУсловий = ТекстДопУсловий + " И ВТ_Обороты.ДоговорКонтрагента = &ДоговорКонтрагента";
			Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);				
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Организация) Тогда
			ТекстДопУсловий = ТекстДопУсловий + " И ВТ_Обороты.Организация = &Организация";
			Запрос.УстановитьПараметр("Организация", Объект.Организация);				
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ID) Тогда
			ТекстДопУсловий = ТекстДопУсловий + " И рс_ДокументыПоID.ID = &ID";
			Запрос.УстановитьПараметр("ID", Объект.ID);				
		КонецЕсли;
		
		Если Объект.НомерЗаявки = "Выбрать заявку" Тогда
			ТекстДопУсловий = ТекстДопУсловий + " И ВТ_Обороты.ЗаявкаНаРасход = &НомерЗаявки";
			Запрос.УстановитьПараметр("НомерЗаявки", Объект.ЗаявкаОтбор);				
		КонецЕсли;
		
		Запрос.Текст  = СтрЗаменить(Запрос.Текст, "%Условия%", "ГДЕ ИСТИНА " + ТекстДопУсловий);
		
		СписокЗн = Новый СписокЗначений;
		Если ЗначениеЗаполнено(Объект.Сценарий) Тогда
			СписокЗн.Добавить(Объект.Сценарий);						
		Иначе
			СписокЗн.Добавить(Справочники.СценарииПланирования.Факт_У);
			СписокЗн.Добавить(Справочники.СценарииПланирования.Факт_А);
			СписокЗн.Добавить(Справочники.СценарииПланирования.Факт_Инвест);
		КонецЕсли;
		Запрос.УстановитьПараметр("СписокСценариев", СписокЗн);					  
		
		Результат = Запрос.Выполнить();		
		СписокЗаявок = Результат.Выгрузить().ВыгрузитьКолонку("ЗаявкаНаРасход");
		
		
		ЗапросОплатПоЗаявкам = Новый Запрос("ВЫБРАТЬ
		                                    |	бит_ОборотыПоБюджетамОбороты.Аналитика_1 КАК ЗаявкаНаРасход,
		                                    |	СУММА(бит_ОборотыПоБюджетамОбороты.СуммаОборот) КАК СуммаЗакрывающегоДокумента,
		                                    |	бит_ОборотыПоБюджетамОбороты.Контрагент КАК Контрагент,
		                                    |	бит_ОборотыПоБюджетамОбороты.СтатьяОборотов
		                                    |ПОМЕСТИТЬ ВТ_Обороты
		                                    |ИЗ
		                                    |	РегистрНакопления.бит_ОборотыПоБюджетам.Обороты(
		                                    |			&ДатаКон,
		                                    |			,
		                                    |			Регистратор,
		                                    |			Сценарий В (&СписокСценариев)
		                                    |				И СтатьяОборотов.ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.бит_ТипыСтатейОборотов.БДДС)
		                                    |				И Аналитика_1 В (&СписокЗаявок)) КАК бит_ОборотыПоБюджетамОбороты
		                                    |
		                                    |СГРУППИРОВАТЬ ПО
		                                    |	бит_ОборотыПоБюджетамОбороты.Аналитика_1,
		                                    |	бит_ОборотыПоБюджетамОбороты.Контрагент,
		                                    |	бит_ОборотыПоБюджетамОбороты.СтатьяОборотов
		                                    |;
		                                    |
		                                    |////////////////////////////////////////////////////////////////////////////////
		                                    |ВЫБРАТЬ
		                                    |	СУММА(бит_ПланируемыйРасходДенежныхСредствОбороты.СуммаПриход) КАК СуммаПриход,
		                                    |	бит_ПланируемыйРасходДенежныхСредствОбороты.Аналитика_1,
		                                    |	бит_ПланируемыйРасходДенежныхСредствОбороты.Контрагент,
		                                    |	бит_ПланируемыйРасходДенежныхСредствОбороты.СтатьяОборотов
		                                    |ПОМЕСТИТЬ ВТ_ЗаявкиНаПредоплату
		                                    |ИЗ
		                                    |	РегистрНакопления.бит_ПланируемыйРасходДенежныхСредств.Обороты(&Начало2016, , Регистратор, Аналитика_1 В (&СписокЗаявок)) КАК бит_ПланируемыйРасходДенежныхСредствОбороты
		                                    |ГДЕ
		                                    |	бит_ПланируемыйРасходДенежныхСредствОбороты.Регистратор ССЫЛКА Документ.бит_ЗаявкаНаРасходованиеСредств
		                                    |
		                                    |СГРУППИРОВАТЬ ПО
		                                    |	бит_ПланируемыйРасходДенежныхСредствОбороты.Контрагент,
		                                    |	бит_ПланируемыйРасходДенежныхСредствОбороты.Аналитика_1,
		                                    |	бит_ПланируемыйРасходДенежныхСредствОбороты.СтатьяОборотов
		                                    |;
		                                    |
		                                    |////////////////////////////////////////////////////////////////////////////////
		                                    |ВЫБРАТЬ
		                                    |	ВТ_ЗаявкиНаПредоплату.Контрагент,
		                                    |	ВТ_ЗаявкиНаПредоплату.Аналитика_1,
		                                    |	СУММА(ВЫБОР
		                                    |			КОГДА ЕСТЬNULL(ВТ_ЗаявкиНаПредоплату.СуммаПриход, 0) - ЕСТЬNULL(ВТ_Обороты.СуммаЗакрывающегоДокумента, 0) > 0
		                                    |				ТОГДА ЕСТЬNULL(ВТ_ЗаявкиНаПредоплату.СуммаПриход, 0) - ЕСТЬNULL(ВТ_Обороты.СуммаЗакрывающегоДокумента, 0)
		                                    |			ИНАЧЕ 0
		                                    |		КОНЕЦ) КАК СуммаПредоплаты,
		                                    |	ВТ_ЗаявкиНаПредоплату.СтатьяОборотов
		                                    |ИЗ
		                                    |	ВТ_ЗаявкиНаПредоплату КАК ВТ_ЗаявкиНаПредоплату
		                                    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Обороты КАК ВТ_Обороты
		                                    |		ПО ВТ_ЗаявкиНаПредоплату.Аналитика_1 = ВТ_Обороты.ЗаявкаНаРасход
		                                    |			И ВТ_ЗаявкиНаПредоплату.Контрагент = ВТ_Обороты.Контрагент
		                                    |			И ВТ_ЗаявкиНаПредоплату.СтатьяОборотов = ВТ_Обороты.СтатьяОборотов
		                                    |
		                                    |СГРУППИРОВАТЬ ПО
		                                    |	ВТ_ЗаявкиНаПредоплату.Аналитика_1,
		                                    |	ВТ_ЗаявкиНаПредоплату.Контрагент,
		                                    |	ВТ_ЗаявкиНаПредоплату.СтатьяОборотов");
		
		СписокЗн.Добавить(Справочники.СценарииПланирования.Факт_У);
		СписокЗн.Добавить(Справочники.СценарииПланирования.Факт_А);
		СписокЗн.Добавить(Справочники.СценарииПланирования.Факт_Инвест);
		ЗапросОплатПоЗаявкам.УстановитьПараметр("СписокСценариев", СписокЗн);					  
		ЗапросОплатПоЗаявкам.УстановитьПараметр("СписокЗаявок", СписокЗаявок);
		ЗапросОплатПоЗаявкам.УстановитьПараметр("ДатаКон", Объект.ДатаКон);
		ЗапросОплатПоЗаявкам.УстановитьПараметр("Начало2016", '20160101');
		
		ТаблицаОплат = ЗапросОплатПоЗаявкам.Выполнить().Выгрузить();
		
		
		ВыборкаПоДоговору = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДоговорКонтрагента");
		
		Пока ВыборкаПоДоговору.Следующий() Цикл
			
			ВыборкаПоДокументам = ВыборкаПоДоговору.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЗакрывающийДокумент");
			
			Пока ВыборкаПоДокументам.Следующий() Цикл
				
				Выборка = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока Выборка.Следующий() Цикл
					
					
					Если Объект.НомерЗаявки = "Не заполнен" И ЗначениеЗаполнено(Выборка.ЗаявкаНаРасход) Тогда
						Продолжить;
					КонецЕсли;
					
					Если Объект.НомерЗаявки = "Заполнен" И НЕ ЗначениеЗаполнено(Выборка.ЗаявкаНаРасход) Тогда
						Продолжить;
					КонецЕсли;
					
					Если Объект.СуммаФакта = "В пределах заявки" И НЕ (Выборка.СуммаЗаявкиНаРасход > Выборка.СуммаЗакрывающегоДокумента) Тогда
						Продолжить;
					КонецЕсли;
					
					Если Объект.СуммаФакта = "За пределами заявки" И НЕ (Выборка.СуммаЗаявкиНаРасход < Выборка.СуммаЗакрывающегоДокумента) Тогда
						Продолжить;
					КонецЕсли;
					
					//БИТ АКриштопов 09.02.2016 -->>
					//Добавляем проверку на сумму оплаты по документа расходования ДС
					Если Выборка.ОстатокПоОплате = 0 И Выборка.СуммаЗаявкиНаРасход <> 0 Тогда
						Продолжить;
					КонецЕсли;
					//БИТ АКриштопов 09.02.2016 <<--
					
					//БИТ НАГолубева 26.01.2016 ++
					//сюда добавить проверку на сумму документа
					
					ДобавленнаяСтрока = Объект.СписокЗаявок.Добавить();
					ЗаполнитьЗначенияСвойств(ДобавленнаяСтрока,Выборка);
					ДобавленнаяСтрока.СуммаКОплате = ДобавленнаяСтрока.СуммаЗакрывающегоДокумента;
					
					Если ЗначениеЗаполнено(Выборка.ЗакрывающийДокумент) Тогда
						
						МетаданныеОбъекта = Выборка.ЗакрывающийДокумент.Метаданные();
						Если ОбщегоНазначенияБП.ЕстьТабЧастьДокумента("Товары",МетаданныеОбъекта) И Выборка.ЗакрывающийДокумент.Товары.Количество() Тогда
							ДобавленнаяСтрока.СтавкаНДС = Выборка.ЗакрывающийДокумент.Товары[0].СтавкаНДС;	
						КонецЕсли;						
						
						Если ОбщегоНазначенияБП.ЕстьТабЧастьДокумента("Услуги",МетаданныеОбъекта) И Выборка.ЗакрывающийДокумент.Услуги.Количество() Тогда
							ДобавленнаяСтрока.СтавкаНДС = Выборка.ЗакрывающийДокумент.Услуги[0].СтавкаНДС;	
						КонецЕсли;	
						
						Если ОбщегоНазначенияБП.ЕстьТабЧастьДокумента("ОбъектыСтроительства",МетаданныеОбъекта) И Выборка.ЗакрывающийДокумент.ОбъектыСтроительства.Количество() Тогда
							ДобавленнаяСтрока.СтавкаНДС = Выборка.ЗакрывающийДокумент.ОбъектыСтроительства[0].СтавкаНДС;	
						КонецЕсли;	
					
						Если ОбщегоНазначенияБП.ЕстьТабЧастьДокумента("Оборудование",МетаданныеОбъекта) И Выборка.ЗакрывающийДокумент.Оборудование.Количество() Тогда
							ДобавленнаяСтрока.СтавкаНДС = Выборка.ЗакрывающийДокумент.Оборудование[0].СтавкаНДС;	
						КонецЕсли;	
										
						
						// БИТ_YK_н 01/16
						// В случае ОперацииАксапты нужно проанализовать есть ли НДС в документе вообще, если да - тогда ставка 18%.
						Если ОбщегоНазначенияБП.ЕстьТабЧастьДокумента("ОборотыАксапты",МетаданныеОбъекта) Тогда
							МассивСчетовНДС = Новый Массив;
							МассивСчетовНДС.Добавить("19.01");
							МассивСчетовНДС.Добавить("19.02");
							МассивСчетовНДС.Добавить("19.03");
							МассивСчетовНДС.Добавить("19.04");
							МассивСчетовНДС.Добавить("19.05");
							МассивСчетовНДС.Добавить("19.06");
							МассивСчетовНДС.Добавить("19.07");
							МассивСчетовНДС.Добавить("19.08");
							МассивСчетовНДС.Добавить("19.09");
							МассивСчетовНДС.Добавить("19.10");
							
							Для каждого Стр из Выборка.ЗакрывающийДокумент.ОборотыАксапты Цикл
								Если МассивСчетовНДС.Найти(Стр.СчетДт) <> Неопределено Тогда
									ДобавленнаяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
									Прервать;
								КонецЕсли;
							КонецЦикла;	
							Если НЕ ЗначениеЗаполнено(ДобавленнаяСтрока.СтавкаНДС) Тогда
								ДобавленнаяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
							КонецЕсли;
						КонецЕсли;	
						// БИТ_YK_к
						
						Если ДобавленнаяСтрока.СтавкаНДС 	= Перечисления.СтавкиНДС.НДС18 Тогда						
							СуммаКОплате 					= ДобавленнаяСтрока.СуммаКОплате*1.18;
							СуммаЗакрывающегоДокумента 		= ДобавленнаяСтрока.СуммаЗакрывающегоДокумента*1.18;
						Иначе
							СуммаКОплате 					= ДобавленнаяСтрока.СуммаКОплате;
							СуммаЗакрывающегоДокумента 		= ДобавленнаяСтрока.СуммаЗакрывающегоДокумента;							
						КонецЕсли;
						
						
						Отбор = Новый Структура;
						Отбор.Вставить("Контрагент",Выборка.Контрагент );
						Отбор.Вставить("Аналитика_1", Выборка.ЗаявкаНаРасход);
						Отбор.Вставить("СтатьяОборотов", Выборка.СтатьяДДС);
						СтрокиПредоплаты = ТаблицаОплат.НайтиСтроки(Отбор);
						
						Если СтрокиПредоплаты.Количество() Тогда
							
							СуммаСписать = Мин(СтрокиПредоплаты[0].СуммаПредоплаты, СуммаКОплате);													
							СуммаКОплате = СуммаКОплате - СуммаСписать;
							СтрокиПредоплаты[0].СуммаПредоплаты = СтрокиПредоплаты[0].СуммаПредоплаты - СуммаСписать; 
						КонецЕсли;
						
						
						ДобавленнаяСтрока.СуммаКОплате 					= СуммаКОплате;
						ДобавленнаяСтрока.СуммаЗакрывающегоДокумента 	= СуммаЗакрывающегоДокумента;
						
						//БИТ НАГолубева 26.01.2016 ++
						//Ищем была ли создана Заявка на расходование ДС ранее на случай, если она возможно еще не попала в регистр.
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	бит_ЗаявкаНаРасходованиеСредств.Ссылка
							|ИЗ
							|	Документ.бит_ЗаявкаНаРасходованиеСредств КАК бит_ЗаявкаНаРасходованиеСредств
							|ГДЕ
							|	бит_ЗаявкаНаРасходованиеСредств.ДокументОснование = &ДокументОснование
							|	И НЕ бит_ЗаявкаНаРасходованиеСредств.ПометкаУдаления";
						
						Запрос.УстановитьПараметр("ДокументОснование", Выборка.ЗакрывающийДокумент);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						
						Если ВыборкаДетальныеЗаписи.Следующий() Тогда
							ДобавленнаяСтрока.СвязаннаяЗаявка = ВыборкаДетальныеЗаписи.Ссылка;
						КонецЕсли;
						//БИТ НАГолубева 26.01.2016 --
						
					КонецЕсли;
					
					Если ДобавленнаяСтрока.СуммаКОплате = 0 Тогда
						Объект.СписокЗаявок.Удалить(ДобавленнаяСтрока.НомерСтроки -1);
						Продолжить;
					КонецЕсли;
					
					
					Если Объект.СвязаннаяЗаявка = "Не заполнен" И ЗначениеЗаполнено(ДобавленнаяСтрока.СвязаннаяЗаявка) Тогда
						Объект.СписокЗаявок.Удалить(ДобавленнаяСтрока.НомерСтроки -1);
						Продолжить;
					КонецЕсли;
					
					Если Объект.СвязаннаяЗаявка = "Заполнен" И НЕ ЗначениеЗаполнено(ДобавленнаяСтрока.СвязаннаяЗаявка) Тогда
						Объект.СписокЗаявок.Удалить(ДобавленнаяСтрока.НомерСтроки -1);
						Продолжить;
					КонецЕсли;

					Если Объект.СвязаннаяЗаявка = "Выбрать заявку" И ДобавленнаяСтрока.СвязаннаяЗаявка <> Объект.СвязаннаяЗаявкаОтбор Тогда
						Объект.СписокЗаявок.Удалить(ДобавленнаяСтрока.НомерСтроки -1);
						Продолжить;
					КонецЕсли;
					
					
				КонецЦикла;
				
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;
	
	//БИТ НАГолубева 25.01.2016 ++
	//Проверка ТЧ на наличие документов Поступления и их сторно
	МассивСторно = Новый Массив;
	Для каждого СтрокаТЧ из Объект.СписокЗаявок Цикл
		Если ТипЗнч(СтрокаТЧ.ЗакрывающийДокумент) = Тип("ДокументСсылка.ОперацияБух") и 
			ЗначениеЗаполнено(СтрокаТЧ.ЗакрывающийДокумент.СторнируемыйДокумент) Тогда
			СтрокиСторнируемогоДокумента = Объект.СписокЗаявок.НайтиСтроки(Новый Структура("ЗакрывающийДокумент", СтрокаТЧ.ЗакрывающийДокумент.СторнируемыйДокумент));
			Для каждого СтрокаСДокументом из СтрокиСторнируемогоДокумента Цикл
				Объект.СписокЗаявок.Удалить(СтрокаСДокументом);
			КонецЦикла;
			Объект.СписокЗаявок.Удалить(СтрокаТЧ);
		КонецЕсли;
	КонецЦикла;
	
	//БИТ НАГолубева 25.01.2016 --
	
КонецПроцедуры


&НаСервере
Функция СоздатьДокументЗаявкаНаРасходДС(ДанныеШапки)
	
	СтрКурса = бит_КурсыВалют.ПолучитьКурсВалюты(ДанныеШапки.ВалютаДокумента, ТекущаяДатаСеанса());
	
	ДокОб = Документы.бит_ЗаявкаНаРасходованиеСредств.СоздатьДокумент();
	
	//ОКЕЙ Рычаков А.С.(СофтЛаб) 2019-10-29 Начало (#3423)
	ДокОб.ок_СпособСоздания = 2;
	//ОКЕЙ Рычаков А.С.(СофтЛаб) 2019-10-29 Конец (#3423)
	
	ДокОб.Дата				 = ТекущаяДатаСеанса();
	ДокОб.ВидОперации		 = Перечисления.бит_ВидыОперацийЗаявкаНаРасходование.ОплатаПоставщику;
	// БИТ_YK_н Доработка #2063
	ТипПлатежа               = Справочники.бит_ТипыПлатежей.НайтиПоНаименованию("Оплата");
	Если ЗначениеЗаполнено(ТипПлатежа) Тогда
		ДокОб.ТипПлатежа     = ТипПлатежа;
	КонецЕсли;
	ДокОб.Аналитика_2        = ДанныеШапки.Объект;
	ДокОб.СБ_Инициатор       = ДанныеШапки.ЗаявкаНаРасход.бит_БК_Инициатор;
	// БИТ_YK_к
	ДокОб.ФормаОплаты		 = Перечисления.бит_ВидыДенежныхСредств.Безналичные;
	ДокОб.Сценарий			 = Объект.СценарийДляЗаявок;
	ДокОб.ТипЗаявки			 = Перечисления.бит_ТипыЗаявокНаРасходованиеСредств.Плановая;
	ДокОб.ВалютаДокумента	 = ДанныеШапки.ВалютаДокумента;
	ДокОб.КурсДокумента		 = СтрКурса.Курс;
	ДокОб.КратностьДокумента = СтрКурса.Кратность;
	ДокОб.СуммаВключаетНДС	 = Истина;
	ДокОб.Важность			 = Перечисления.бит_Важность.Средняя;
	ДокОб.СБ_ПрофильРазноски = ДанныеШапки.ДоговорКонтрагента.СБ_ПрофильРазноски;
	ДокОб.ЦФО				 = ДанныеШапки.ЦФО;
	ДокОб.ДокументОснование	 = ДанныеШапки.ЗакрывающийДокумент;
	
	МетаданныеОбъекта = ДанныеШапки.ЗакрывающийДокумент.Метаданные();
	Если ОбщегоНазначенияБП.ЕстьРеквизитДокумента("Организация",МетаданныеОбъекта) Тогда	
		ДокОб.Организация		 = ДанныеШапки.ЗакрывающийДокумент.Организация;
	КонецЕсли;
	
	ДокОб.Контрагент		 = ДанныеШапки.Контрагент;
	ДокОб.ДоговорКонтрагента = ДанныеШапки.ДоговорКонтрагента;
	ДокОб.ДатаРасхода		 = Объект.ДатаРасхода;
	ДокОб.Ответственный		 = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
	
	Возврат ДокОб;
	
КонецФункции


&НаСервере

Процедура СформироватьНазначениеПлатежа(ДанныеШапки, ДокОб)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Предмет", 		ПредметОплаты(ДанныеШапки.СтатьяОборотов, ДанныеШапки.СтатьяОборотов.ВидСтатьи));
	СтруктураПараметров.Вставить("ВидДокумента", 	"Акт");//ВыборкаДокументРазнесения.НазначениеПлатежаВидДокумента);
	СтруктураПараметров.Вставить("НомерДокумента",	ДанныеШапки.ЗакрывающийДокумент.Номер);
	СтруктураПараметров.Вставить("ДатаДокумента",	ДанныеШапки.ЗакрывающийДокумент.Дата);
	
	СтруктураПараметров.Вставить("СтавкаНДС",		ДанныеШапки.СтавкаНДС);
	СтруктураПараметров.Вставить("СуммаНДС",		Формат(ДокОб.Распределение.Итог("НДС"),"ЧДЦ=2"));
	
	ДокОб.НазначениеПлатежа=ТекстНазначенияПлатежа(СтруктураПараметров); 
	ДокОб.НазначениеПлатежаУпр=ТекстНазначенияПлатежа(СтруктураПараметров);	
	
	
КонецПроцедуры




&НаСервере
Функция ТекстНазначенияПлатежа(Параметры)
	
	Шаблон = "Оплата за %1 по %2 № %3 от %4, в т.ч. НДС %5.";
	
	Результат = СтрЗаменить(Шаблон, 	"%1", Параметры.Предмет);
	Результат = СтрЗаменить(Результат, 	"%2", Параметры.ВидДокумента);
	Результат = СтрЗаменить(Результат, 	"%3", Параметры.НомерДокумента);
	Результат = СтрЗаменить(Результат, 	"%4", Формат(Параметры.ДатаДокумента, "ДФ=dd.MM.yyyy"));
	//10.12.14
	Если Параметры.СтавкаНДС=ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС") тогда
		Результат = СтрЗаменить(Результат, 	", в т.ч. НДС %5.", " без НДС");
	Иначе
		Результат = СтрЗаменить(Результат, 	"%5", Параметры.СуммаНДС);
	КонецЕсли;
	Возврат Результат;	
	
КонецФункции // ()

&НаСервере
Функция ПредметОплаты(СтатьяОборотов, ВидСтатьи)
	
	ЗначениеПоУмолчанию = "";
	
	Если Не ЗначениеЗаполнено(СтатьяОборотов) Тогда
		Возврат ЗначениеПоУмолчанию;	
	КонецЕсли; 
	
	ОперативнаяДеятельность 	= ПредопределенноеЗначение("Справочник.бит_ВидыСтатейОборотов.Выручка");
	ИнвестиционнаяДеятельность 	= ПредопределенноеЗначение("Справочник.бит_ВидыСтатейОборотов.ИнвестиционнаяДеятельность");
	
	Если ВидСтатьи = ОперативнаяДеятельность Тогда
		Возврат "услуги";
	ИначеЕсли СтатьяОборотов = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("СтатьяОборотов_ПриобретениеЗданий") Тогда	
		Возврат "здания";
	ИначеЕсли СтатьяОборотов = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("СтатьяОборотов_ПриобретениеЗемли") Тогда	
		Возврат "землю";
	ИначеЕсли СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("СписокСтатейОборотов_ПриобритениеОборудования").НайтиПоЗначению(СтатьяОборотов) <> Неопределено Тогда	
		Возврат "оборудование";
	ИначеЕсли ВидСтатьи = ИнвестиционнаяДеятельность Тогда
		Возврат "услуги";
	Иначе 
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли; 
	
КонецФункции // ()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.ДатаРасхода = ТекущаяДата() + 24*3600;
КонецПроцедуры


&НаКлиенте
Процедура СнятьВсеФлаги(Команда)
	Для Каждого Стр Из Объект.СписокЗаявок Цикл
		Стр.Отбор = Ложь;	
	КонецЦикла;
	
	//БИТ НАГолубева 26.01.2016 ++
	Итоги = СписокЗаявокОтборПриИзмененииНаСервере();
	Элементы.НадписьКоличество.Заголовок = "Количество: " + Итоги.Количество;
	Элементы.НадписьСумма.Заголовок = "Сумма к оплате: " + Итоги.Сумма;
	//БИТ НАГолубева 26.01.2016 --
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВсеФлаги(Команда)
	Для Каждого Стр Из Объект.СписокЗаявок Цикл
		Стр.Отбор = Истина;	
	КонецЦикла;	
	
	//БИТ НАГолубева 26.01.2016 ++
	Итоги = СписокЗаявокОтборПриИзмененииНаСервере();
	Элементы.НадписьКоличество.Заголовок = "Количество: " + Итоги.Количество;
	Элементы.НадписьСумма.Заголовок = "Сумма к оплате: " + Итоги.Сумма;
	//БИТ НАГолубева 26.01.2016 --
КонецПроцедуры


&НаКлиенте
Процедура НомерЗаявкиПриИзменении(Элемент)
	
	Если Объект.НомерЗаявки = "Выбрать заявку" Тогда
		
		ВвестиЗначение(Объект.ЗаявкаОтбор);
		
		Элементы.НомерЗаявки.Видимость = Ложь;		
		Элементы.ЗаявкаОтбор.Видимость = Истина;	
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура СвязаннаяЗаявкаПриИзменении(Элемент)
	
	Если Объект.СвязаннаяЗаявка = "Выбрать заявку" Тогда
		
		ВвестиЗначение(Объект.СвязаннаяЗаявкаОтбор);
		
		Элементы.СвязаннаяЗаявка.Видимость = Ложь;		
		Элементы.СвязаннаяЗаявкаОтбор.Видимость = Истина;	
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ЗаявкаОтборОчистка(Элемент, СтандартнаяОбработка)
	
	
	Элементы.НомерЗаявки.Видимость = Истина;		
	Элементы.ЗаявкаОтбор.Видимость = Ложь;
	Объект.НомерЗаявки = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура СвязаннаяЗаявкаОтборОчистка(Элемент, СтандартнаяОбработка)
		
	Элементы.СвязаннаяЗаявка.Видимость = Истина;		
	Элементы.СвязаннаяЗаявкаОтбор.Видимость = Ложь;
	Объект.СвязаннаяЗаявка = Неопределено;
	

КонецПроцедуры


//БИТ НАГолубева 22.01.2016 ++
&НаКлиенте
Процедура СписокЗаявокОтборПриИзменении(Элемент)
	
	Элементы.НадписьКоличество.Заголовок = "";
	Элементы.НадписьСумма.Заголовок = "";	
	Итоги = СписокЗаявокОтборПриИзмененииНаСервере();
	Элементы.НадписьКоличество.Заголовок = "Количество: " + Итоги.Количество;
	Элементы.НадписьСумма.Заголовок = "Сумма к оплате: " + Итоги.Сумма;
	
КонецПроцедуры


&НаСервере
Функция СписокЗаявокОтборПриИзмененииНаСервере()
	
	Количество = 0;
	Сумма = 0;
	Отбор = Новый Структура;
	Отбор.Вставить("Отбор",Истина);
	ВыделенныеСтроки = Объект.СписокЗаявок.НайтиСтроки(Отбор);
	Количество = ВыделенныеСтроки.Количество();
	Для каждого СтрМассива из ВыделенныеСтроки Цикл
		Сумма = Сумма + СтрМассива.СуммаКОплате;
	КонецЦикла;
	
	Итоги = Новый Структура;
	Итоги.Вставить("Сумма", Сумма);
	Итоги.Вставить("Количество", Количество);
	
	Возврат(Итоги);
	
КонецФункции


&НаКлиенте
Процедура УстановитьОтбор(Команда)
	
	Элементы.СписокЗаявок.ОтборСтрок = Неопределено;
	Для каждого Строка из Объект.СписокЗаявок Цикл
		Строка.Скрытый = Ложь;
	КонецЦикла;
	Если Объект.ПоказательОтбора = "Равно" Тогда
		Элементы.СписокЗаявок.ОтборСтрок = Новый ФиксированнаяСтруктура("СуммаЗакрывающегоДокумента", Объект.СуммаОтбора);
	ИначеЕсли Объект.ПоказательОтбора = "Больше" Тогда
		Для Каждого Строка из Объект.СписокЗаявок Цикл
			Если Строка.СуммаЗакрывающегоДокумента <= Объект.СуммаОтбора Тогда
				Строка.Скрытый = Истина;				
			КонецЕсли;
		КонецЦикла;
		Элементы.СписокЗаявок.ОтборСтрок = Новый ФиксированнаяСтруктура("Скрытый", Ложь);
	ИначеЕсли Объект.ПоказательОтбора = "Меньше" Тогда
		Для Каждого Строка из Объект.СписокЗаявок Цикл
			Если Строка.СуммаЗакрывающегоДокумента >= Объект.СуммаОтбора Тогда
				Строка.Скрытый = Истина;				
			КонецЕсли;
		КонецЦикла;
		Элементы.СписокЗаявок.ОтборСтрок = Новый ФиксированнаяСтруктура("Скрытый", Ложь);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СнятьОтбор(Команда)
	Элементы.СписокЗаявок.ОтборСтрок = Неопределено;
	Для каждого Строка из Объект.СписокЗаявок Цикл
		Строка.Скрытый = Ложь;
	КонецЦикла;
КонецПроцедуры


//БИТ НАГолубева 22.01.2016 --
