
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Окей 			= ПредопределннаяОрганизация("Организация ОКЕЙ");
	Окей_Лоджистик 	= ПредопределннаяОрганизация("Организация Лоджистикс");
	
	СписокОрганизаций.Добавить(Окей);
	СписокОрганизаций.Добавить(Окей_Лоджистик);
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ТекущаяДата = ТекущаяДатаСеанса();
	
	//ПериодОтбораЗакрытыхЗаявок 		= ТекущаяДата;
	//ПериодОтбораБанковскихВыписок 	= ТекущаяДата;
	//БИТ АКриштопов 19022016 	
	НачалоПериодаОтбораБанковскихВыписок = НачалоМесяца(ТекущаяДата());
	КонецПериодаОтбораБанковскихВыписок = КонецМесяца(ТекущаяДата());
	НачалоПериодаОтбораЗакрытыхЗаявок = НачалоМесяца(ТекущаяДата());
	КонецПериодаОтбораЗакрытыхЗаявок = КонецМесяца(ТекущаяДата());
	//ПериодОтбораБанковскихВыписок.Вариант = ВариантСтандартногоПериода.Сегодня;
	Организация 					= Окей;
	
	ДоступнаВыгрузкаДанныхЗаявок = Истина;
	
	ПроверитьСостояниеСоединенияСВнешнимИсточником();
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Начало 2021-05-22 (#НТП_МП_ФР06)
	ок_УстановитьОтображениеЭлементов();
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Конец 2021-05-22 (#НТП_МП_ФР06)
	
	//ОКЕЙ Первухин В.С. (ПервыйБИТ) Начало 2021-07-13 (ФР-МП-08)      
	ок_МодификацияКонфигурацииПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	//ОКЕЙ Первухин В.С. (ПервыйБИТ) Конец 2021-07-13 (ФР-МП-08)
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступностьМеханизмов();
	УстановитьДоступностьВыбораИзСпискаЗаявок();
	УстановитьДоступностьВыбораИзСпискаБанковскихВыписок();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СБ_ОбновленыПараметрыВнешнегоИсточника"
	   И Параметр = "СБ_БанковскиеВыпискиAXAPTA" Тогда
	   
	   ПроверитьСостояниеСоединенияСВнешнимИсточником();
	   
	КонецЕсли; 
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ДоступнаВыгрузкаДанныхЗаявок = (Организация = Окей);
	
	ПроверитьСостояниеСоединенияСВнешнимИсточником();	
	
	СписокБанковскихВыписок.Очистить();
	СписокЗакрытыхЗаявок.Очистить();
	
	УстановитьДоступностьМеханизмов();
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Начало 2021-05-22 (#НТП_МП_ФР06)
	ок_УстановитьОтображениеЭлементов();
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Конец 2021-05-22 (#НТП_МП_ФР06)
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранноеЗначение = ВыбратьИзСписка(СписокОрганизаций, Элемент);
	Если ВыбранноеЗначение <> Неопределено Тогда
		Организация = ВыбранноеЗначение.Значение;
		ОрганизацияПриИзменении(Элемент);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура АлгоритмВыгрузкиЗакрытыхЗаявокПриИзменении(Элемент)
	УстановитьДоступностьВыбораИзСпискаЗаявок();
КонецПроцедуры

&НаКлиенте
Процедура АлгоритмВыгрузкиБанковскихВыписокПриИзменении(Элемент)
	УстановитьДоступностьВыбораИзСпискаБанковскихВыписок();
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Начало 2021-05-22 (#НТП_МП_ФР06)
	ок_УстановитьОтображениеЭлементов();
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Конец 2021-05-22 (#НТП_МП_ФР06)
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ

&НаКлиенте
Процедура СписокЗакрытыхЗаявокЗаявкаСсылкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокЗакрытыхЗаявок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли; 
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеЗаявки(ТекущиеДанные.ЗаявкаСсылка));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокБанковскихВыписокДокументСсылкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокБанковскихВыписок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;     
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-28 (#3202)
	//ДокументСсылка = ТекущиеДанные.ДокументСсылка;
	//Заменено на:
	ДокументСсылка = ТекущиеДанные.ДокументДвижения;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-28 (#3202)
	
	//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
	//Если ДокументСсылка <> Неопределено И ДокументСсылка.Пустая() Тогда
	//	Возврат;

	//КонецЕсли; 
	//
	//ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеБанковскойВыписки(ДокументСсылка, Организация, ВалютаРеглУчета));	
	
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		Рез = ДанныеБанковскойВыписки(ДокументСсылка, Организация, ВалютаРеглУчета);
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, Рез);
	КонецЕсли;
	//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077)
		
КонецПроцедуры

&НаКлиенте
Процедура БанковскиеВыпискиAXAPTAВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаполнитьСписокЗакрытыхЗаявок(Команда)
	ЗаполнитьСписокЗакрытыхЗаявокНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЗакрытыеЗаявки(Команда)
	
	Если Не ДоступнаВыгрузкаДанныхЗаявок Тогда
		Сообщить("По выбранной организации не доступна выгрузка данных заявок");
		Возврат;	
	КонецЕсли; 
	
	ВыгрузитьЗакрытыеЗаявкиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрыСоединения(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", Организация);
	
	ОткрытьФорму("Обработка.СБ_ВыгрузкаБанковскихВыписокВAXAPTA.Форма.НастройкаПараметровСоединения", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьБанковскиеВыписки(Команда)
	
	ВыгрузитьБанковскиеВыпискиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокБанковскихВыписок(Команда)
	ЗаполнитьСписокБанковскихВыписокНаСервере();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ОПОВЕЩЕНИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
Функция ДанныеЗаявки(ЗаявкаСсылка)

	Результат = Новый Структура(
	"RECID,
	|Статус,
	|ЗаявкаСсылка");
	
	Если НЕ ЗначениеЗаполнено(ЗаявкаСсылка) Тогда
		Возврат Результат;	
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	бит_ЗаявкаНаРасходованиеСредств.СБ_ИдентификаторЗаписиAXAPTA КАК RECID,
	|	бит_СтатусыОбъектов.Статус,
	|	бит_ЗаявкаНаРасходованиеСредств.Ссылка КАК ЗаявкаСсылка,
	|	бит_ЗаявкаНаРасходованиеСредств.Представление,
	|	ПРЕДСТАВЛЕНИЕ(бит_СтатусыОбъектов.Статус) КАК СтатусПредставление
	|ИЗ
	|	Документ.бит_ЗаявкаНаРасходованиеСредств КАК бит_ЗаявкаНаРасходованиеСредств
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СтатусыОбъектов КАК бит_СтатусыОбъектов
	|		ПО (бит_СтатусыОбъектов.Объект = бит_ЗаявкаНаРасходованиеСредств.Ссылка)
	|			И (бит_СтатусыОбъектов.ВидСтатуса = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСтатусовОбъектов.Статус))
	|ГДЕ
	|	бит_ЗаявкаНаРасходованиеСредств.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ЗаявкаСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;	
	КонецЕсли; 
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Если Выборка.RECID = 0  Тогда
		Сообщить("Выбранный документ " + Выборка.Представление + " не был загружен из AXAPTA (Пустое поле RECID)");
		Возврат Результат;
	КонецЕсли; 
	
	Если Выборка.Статус <> Справочники.бит_СтатусыОбъектов.Заявка_Закрыта Тогда
		Сообщить("Статус выбранного документа " + Выборка.Представление + ": " + СокрЛП(Выборка.СтатусПредставление));
		Возврат Результат;
	КонецЕсли; 
	
	ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	Возврат Результат;

КонецФункции // ()

&НаСервереБезКонтекста
Функция ДанныеБанковскойВыписки(ДокументСсылка, Организация, ВалютаРеглУчета)

	Результат = Новый Структура(
	"ДокументСсылка,
	|Выгружен,
	|Выгружен_Актуальный,
	|POSTINGPROFILE,
	|WRITEOFFNUM,
	|TRANSDATE,
	|ORDERID,
	|TXT,
	|RECID,
	|AMOUNTCUR,
	|AMOUNTMST,
	|DUEDATE,
	|ACCOUNTTYPE,
	|ACCOUNTNUM,
	|RCONTRACTACCOUNT,
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-16 (#МДМ)
	//|CONTRACTRECID,
	|CONTRACTCODE1C,
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-16 (#МДМ)
	|CURRENCYCODE,
	|BANKACCOUNTNUM,
	|BankBIC,
	|DIMENSION2_,
	|TAXTYPE,
	|TAXAMOUNTCUR,
	|UID1C,
	//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
	|DOCTYPE,
	//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077)
	|OPERTYPE");
	
	Если НЕ ЗначениеЗаполнено(ДокументСсылка) Тогда
		Возврат Результат;	
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
	//Запрос.Текст = ТекстЗапросаДанныеБанковскихВыписокДляВыгрузки();
	ТекстЗапроса = ТекстЗапросаДанныеБанковскихВыписокДляВыгрузки(Организация);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//Отбор_По_Документу", "И Регистратор В (&Ссылка)");
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("НачалоПериода", 				Дата(0001, 01, 01));
    Запрос.УстановитьПараметр("КонецПериода", 				Дата(0001, 01, 01));
	//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077)
	Запрос.УстановитьПараметр("Ссылка", 					ДокументСсылка);
	//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
	//Запрос.УстановитьПараметр("ВалютаРеглУчета",			ВалютаРеглУчета);	 //Валюты
	Запрос.УстановитьПараметр("ВалютаРегУчета",			ВалютаРеглУчета);	 //Валюты
	//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077)
	Запрос.УстановитьПараметр("Организация",				Организация);	
	Запрос.УстановитьПараметр("Свойство_СрокИсполнения",	СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("Свойство_СрокИсполнения"));	 //Дополнительные реквизиты
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;	
	КонецЕсли; 
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
		
	ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	ПрефиксОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "Префикс");
	
	ORDERID = Результат.ORDERID;
	Префикс = ПрефиксОрганизации;
	
	Если Лев(ORDERID, СтрДлина(Префикс)) = Префикс Тогда
		ORDERID = Сред(ORDERID, СтрДлина(Префикс) + 1); 	
	КонецЕсли; 
	
	Пока Лев(ORDERID, 1) = "0" Цикл
		ORDERID = Сред(ORDERID, 2); 	
	КонецЦикла; 
	
	Результат.ORDERID 	= ORDERID;
	Результат.UID1C 	= XMLСтрока(Результат.ДокументСсылка);
	
	Возврат Результат;

КонецФункции // ()

&НаКлиенте
Процедура УстановитьДоступностьВыбораИзСпискаЗаявок()
	
    ДоступенВыборИзСписка = (АлгоритмВыгрузкиЗакрытыхЗаявок = 1);
	
	Элементы.СписокЗакрытыхЗаявок.ТолькоПросмотр = НЕ ДоступенВыборИзСписка;
	Элементы.СписокЗакрытыхЗаявокЗаполнитьСписокЗакрытыхЗаявок.Доступность = ДоступенВыборИзСписка;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьВыбораИзСпискаБанковскихВыписок()
	
    ДоступенВыборИзСписка = (АлгоритмВыгрузкиБанковскихВыписок = 1);
	
	Элементы.СписокБанковскихВыписок.ТолькоПросмотр 								= НЕ ДоступенВыборИзСписка;
	Элементы.СписокБанковскихВыписокЗаполнитьСписокБанковскихВыписок.Доступность 	= ДоступенВыборИзСписка;
	
	//ОКЕЙ Первухин В.С. (ПервыйБИТ) Начало 2021-07-13 (ФР-МП-08)      
	Элементы.ок_ПодобратьСписокБанковскихВыписок.Доступность 						= ДоступенВыборИзСписка;
	//ОКЕЙ Первухин В.С. (ПервыйБИТ) Конец 2021-07-13 (ФР-МП-08)
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьМеханизмов()

	Элементы.СтраницаОтправкаЗакрытыхЗаявок.Доступность = ДоступнаВыгрузкаДанныхЗаявок;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокЗакрытыхЗаявокНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_ЗаявкаНаРасходованиеСредств.СБ_ИдентификаторЗаписиAXAPTA КАК RECID,
	|	бит_ЗаявкаНаРасходованиеСредств.Ссылка КАК ЗаявкаСсылка
	|ИЗ
	|	РегистрСведений.бит_СтатусыОбъектов КАК бит_СтатусыОбъектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ЗаявкаНаРасходованиеСредств КАК бит_ЗаявкаНаРасходованиеСредств
	|		ПО бит_СтатусыОбъектов.Объект = бит_ЗаявкаНаРасходованиеСредств.Ссылка
	|			И (бит_СтатусыОбъектов.ВидСтатуса = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСтатусовОбъектов.Статус))
	|ГДЕ
	|	бит_СтатусыОбъектов.ДатаИзмененияСтатуса МЕЖДУ &НачалоПериода И &КонецПериода
	|	И бит_СтатусыОбъектов.Статус = ЗНАЧЕНИЕ(Справочник.бит_СтатусыОбъектов.Заявка_Закрыта)
	|	И бит_ЗаявкаНаРасходованиеСредств.СБ_ИдентификаторЗаписиAXAPTA <> 0
	|	И бит_ЗаявкаНаРасходованиеСредств.Организация = &Организация";
    Запрос.УстановитьПараметр("НачалоПериода", 	НачалоДня(НачалоПериодаОтбораЗакрытыхЗаявок));
    Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(КонецПериодаОтбораЗакрытыхЗаявок));
	Запрос.УстановитьПараметр("Организация",	Организация);	
	
	СписокЗакрытыхЗаявок.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
//Функция ТекстЗапросаДанныеБанковскихВыписокДляВыгрузки()
Функция _ТекстЗапросаДанныеБанковскихВыписокДляВыгрузки()
//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077)
	Возврат 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписокДокументов.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА СписокДокументов.ВалютаДокумента <> &ВалютаРеглУчета
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДокументВВалюте,
	|	СписокДокументов.СчетБанк
	|ПОМЕСТИТЬ ДокументыСписания
	|ИЗ
	|	Документ.СписаниеСРасчетногоСчета КАК СписокДокументов
	|ГДЕ
	|	СписокДокументов.Ссылка В(&Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписокДокументов.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА СписокДокументов.ВалютаДокумента <> &ВалютаРеглУчета
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДокументВВалюте,
	|	СписокДокументов.СчетБанк
	|ПОМЕСТИТЬ ДокументыПоступления
	|ИЗ
	|	Документ.ПоступлениеНаРасчетныйСчет КАК СписокДокументов
	|ГДЕ
	|	СписокДокументов.Ссылка В(&Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бит_ок_СопоставлениеАналитики.Аналитика1С КАК Аналитика1С,
	|	МАКСИМУМ(бит_ок_СопоставлениеАналитики.КодАналитикиАксапты) КАК КодАналитикиАксапты
	|ПОМЕСТИТЬ СоответствиеАналитики_СтатьиДДС
	|ИЗ
	|	РегистрСведений.бит_ок_СопоставлениеАналитики КАК бит_ок_СопоставлениеАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.СБ_ЗагрузкаПД_AXAPTA_ТипОбъектаСтатьяДДС КАК СБ_ЗагрузкаПД_AXAPTA_ТипОбъектаСтатьяДДС
	|		ПО бит_ок_СопоставлениеАналитики.Тип1С = СБ_ЗагрузкаПД_AXAPTA_ТипОбъектаСтатьяДДС.Значение
	|ГДЕ
	|	бит_ок_СопоставлениеАналитики.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_ок_СопоставлениеАналитики.Аналитика1С
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Аналитика1С
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(бит_ДополнительныеАналитики.ЗначениеАналитики КАК Документ.бит_ПлатежнаяПозиция) КАК ПлатежнаяПозиция,
	|	ДокументыСписания.Ссылка КАК ПлатежныйДокумент
	|ПОМЕСТИТЬ ПлатежныеДокументы
	|ИЗ
	|	ДокументыСписания КАК ДокументыСписания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_ДополнительныеАналитики КАК бит_ДополнительныеАналитики
	|		ПО ДокументыСписания.Ссылка = бит_ДополнительныеАналитики.Объект
	|ГДЕ
	|	бит_ДополнительныеАналитики.Аналитика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_ВидыДополнительныхАналитик.ПлатежнаяПозиция)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	бит_ДокументыМножественнойОплаты.ПлатежнаяПозиция,
	|	ДокументыСписания.Ссылка
	|ИЗ
	|	ДокументыСписания КАК ДокументыСписания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_ДокументыМножественнойОплаты КАК бит_ДокументыМножественнойОплаты
	|		ПО ДокументыСписания.Ссылка = бит_ДокументыМножественнойОплаты.ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(бит_ЗаявкаНаРасходованиеСредств.СБ_ИдентификаторЗаписиAXAPTA) КАК СБ_ИдентификаторЗаписиAXAPTA,
	|	ПлатежныеДокументы.ПлатежныйДокумент КАК ПлатежныйДокумент
	|ПОМЕСТИТЬ ДанныеЗаявки
	|ИЗ
	|	ПлатежныеДокументы КАК ПлатежныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ПлатежнаяПозиция КАК бит_ПлатежнаяПозиция
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ЗаявкаНаРасходованиеСредств КАК бит_ЗаявкаНаРасходованиеСредств
	|			ПО бит_ПлатежнаяПозиция.ДокументОснование = бит_ЗаявкаНаРасходованиеСредств.Ссылка
	|		ПО ПлатежныеДокументы.ПлатежнаяПозиция = бит_ПлатежнаяПозиция.Ссылка
	|ГДЕ
	|	бит_ЗаявкаНаРасходованиеСредств.СБ_ИдентификаторЗаписиAXAPTA <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлатежныеДокументы.ПлатежныйДокумент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыСписания.Ссылка КАК Ссылка,
	|	СУММА(ТаблицаПлатежей.СуммаПлатежа) КАК ВалютнаяСумма,
	|	СУММА(ВЫБОР
	|			КОГДА ДокументыСписания.ДокументВВалюте
	|				ТОГДА ТаблицаПлатежей.СуммаВзаиморасчетов * ТаблицаПлатежей.КурсВзаиморасчетов / ТаблицаПлатежей.КратностьВзаиморасчетов
	|			ИНАЧЕ ТаблицаПлатежей.СуммаПлатежа
	|		КОНЕЦ) КАК СуммаВРублях,
	|	МАКСИМУМ(ТаблицаПлатежей.СтатьяДвиженияДенежныхСредств) КАК СтатьяДвиженияДенежныхСредств,
	|	МАКСИМУМ(ТаблицаПлатежей.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	|	ТаблицаПлатежей.СтавкаНДС,
	|	ТаблицаПлатежей.СуммаНДС
	|ПОМЕСТИТЬ РасшифровкаСписания
	|ИЗ
	|	ДокументыСписания КАК ДокументыСписания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеСРасчетногоСчета.РасшифровкаПлатежа КАК ТаблицаПлатежей
	|		ПО ДокументыСписания.Ссылка = ТаблицаПлатежей.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыСписания.Ссылка,
	|	ТаблицаПлатежей.СтавкаНДС,
	|	ТаблицаПлатежей.СуммаНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыПоступления.Ссылка КАК Ссылка,
	|	СУММА(ТаблицаПлатежей.СуммаПлатежа) КАК ВалютнаяСумма,
	|	СУММА(ВЫБОР
	|			КОГДА ДокументыПоступления.ДокументВВалюте
	|				ТОГДА ВЫБОР
	|						КОГДА ТаблицаПлатежей.КратностьВзаиморасчетов = 0
	|							ТОГДА 1
	|						ИНАЧЕ ТаблицаПлатежей.КурсВзаиморасчетов / ТаблицаПлатежей.КратностьВзаиморасчетов
	|					КОНЕЦ * ТаблицаПлатежей.СуммаВзаиморасчетов
	|			ИНАЧЕ ТаблицаПлатежей.СуммаПлатежа
	|		КОНЕЦ) КАК СуммаВРублях,
	|	МАКСИМУМ(ТаблицаПлатежей.СтатьяДвиженияДенежныхСредств) КАК СтатьяДвиженияДенежныхСредств,
	|	МАКСИМУМ(ТаблицаПлатежей.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	|	ТаблицаПлатежей.СтавкаНДС,
	|	ТаблицаПлатежей.СуммаНДС
	|ПОМЕСТИТЬ РасшифровкаПоступления
	|ИЗ
	|	ДокументыПоступления КАК ДокументыПоступления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеНаРасчетныйСчет.РасшифровкаПлатежа КАК ТаблицаПлатежей
	|		ПО ДокументыПоступления.Ссылка = ТаблицаПлатежей.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыПоступления.Ссылка,
	|	ТаблицаПлатежей.СтавкаНДС,
	|	ТаблицаПлатежей.СуммаНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Регистратор,
	|	СУММА(Хозрасчетный.Сумма) КАК Сумма
	|ПОМЕСТИТЬ СуммыСписанияБУ
	|ИЗ
	|	ДокументыСписания КАК ДокументыСписания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ПО ДокументыСписания.Ссылка = Хозрасчетный.Регистратор
	|			И ДокументыСписания.СчетБанк = Хозрасчетный.СчетКт
	|ГДЕ
	|	НЕ Хозрасчетный.СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходы), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходы))
	|	И ДокументыСписания.ДокументВВалюте
	|
	|СГРУППИРОВАТЬ ПО
	|	Хозрасчетный.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Регистратор,
	|	СУММА(Хозрасчетный.Сумма) КАК Сумма
	|ПОМЕСТИТЬ СуммыПоступленияБУ
	|ИЗ
	|	ДокументыПоступления КАК ДокументыПоступления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ПО ДокументыПоступления.Ссылка = Хозрасчетный.Регистратор
	|			И ДокументыПоступления.СчетБанк = Хозрасчетный.СчетДт
	|ГДЕ
	|	НЕ Хозрасчетный.СчетКт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходы), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходы))
	|	И ДокументыПоступления.ДокументВВалюте
	|
	|СГРУППИРОВАТЬ ПО
	|	Хозрасчетный.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписаниеСРасчетногоСчета.Ссылка,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA КАК Выгружен,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA_Актуальный КАК Выгружен_Актуальный,
	|	СписаниеСРасчетногоСчета.СБ_ПрофильРазноски КАК ПрофильРазноски,
	|	СписаниеСРасчетногоСчета.Номер КАК WRITEOFFNUM,
	|	СписаниеСРасчетногоСчета.Дата КАК TRANSDATE,
	|	СписаниеСРасчетногоСчета.СчетОрганизации,
	|	ПлатежноеПоручение.Номер КАК ORDERID,
	|	СписаниеСРасчетногоСчета.ВалютаДокумента,
	|	ПОДСТРОКА(СписаниеСРасчетногоСчета.НазначениеПлатежа, 1, 250) КАК TXT,
	|	СписаниеСРасчетногоСчета.Контрагент,
	|	ДанныеЗаявки.СБ_ИдентификаторЗаписиAXAPTA КАК RECID,
	|	РасшифровкаСписания.ДоговорКонтрагента,
	|	РасшифровкаСписания.СтатьяДвиженияДенежныхСредств,
	|	РасшифровкаСписания.ВалютнаяСумма КАК AMOUNTCUR,
	|	ЕСТЬNULL(СуммыСписанияБУ.Сумма, РасшифровкаСписания.СуммаВРублях) КАК AMOUNTMST,
	|	ЗначенияСвойствОбъектов.Значение КАК DUEDATE,
	|	1 КАК OPERTYPE,
	|	РасшифровкаСписания.СтавкаНДС,
	|	РасшифровкаСписания.СуммаНДС
	|ПОМЕСТИТЬ ДанныеДокументов
	|ИЗ
	|	ДокументыСписания КАК ДокументыСписания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ЗначенияСвойствОбъектов
	|				ПО ПлатежноеПоручение.Ссылка = ЗначенияСвойствОбъектов.Объект
	|					И (ЗначенияСвойствОбъектов.Свойство = &Свойство_СрокИсполнения)
	|			ПО СписаниеСРасчетногоСчета.ДокументОснование = ПлатежноеПоручение.Ссылка
	|		ПО ДокументыСписания.Ссылка = СписаниеСРасчетногоСчета.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеЗаявки КАК ДанныеЗаявки
	|		ПО ДокументыСписания.Ссылка = ДанныеЗаявки.ПлатежныйДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасшифровкаСписания КАК РасшифровкаСписания
	|		ПО ДокументыСписания.Ссылка = РасшифровкаСписания.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыСписанияБУ КАК СуммыСписанияБУ
	|		ПО ДокументыСписания.Ссылка = СуммыСписанияБУ.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеНаРасчетныйСчет.Ссылка,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA_Актуальный,
	|	ПоступлениеНаРасчетныйСчет.СБ_ПрофильРазноски,
	|	ПоступлениеНаРасчетныйСчет.Номер,
	|	ПоступлениеНаРасчетныйСчет.Дата,
	|	ПоступлениеНаРасчетныйСчет.СчетОрганизации,
	|	"""",
	|	ПоступлениеНаРасчетныйСчет.ВалютаДокумента,
	|	ПОДСТРОКА(ПоступлениеНаРасчетныйСчет.НазначениеПлатежа, 1, 250),
	|	ПоступлениеНаРасчетныйСчет.Контрагент,
	|	0,
	|	РасшифровкаПоступления.ДоговорКонтрагента,
	|	РасшифровкаПоступления.СтатьяДвиженияДенежныхСредств,
	|	РасшифровкаПоступления.ВалютнаяСумма,
	|	ЕСТЬNULL(СуммыПоступленияБУ.Сумма, РасшифровкаПоступления.СуммаВРублях),
	|	NULL,
	|	0,
	|	РасшифровкаПоступления.СтавкаНДС,
	|	РасшифровкаПоступления.СуммаНДС
	|ИЗ
	|	ДокументыПоступления КАК ДокументыПоступления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеНаРасчетныйСчет КАК ПоступлениеНаРасчетныйСчет
	|		ПО ДокументыПоступления.Ссылка = ПоступлениеНаРасчетныйСчет.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасшифровкаПоступления КАК РасшифровкаПоступления
	|		ПО ДокументыПоступления.Ссылка = РасшифровкаПоступления.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыПоступленияБУ КАК СуммыПоступленияБУ
	|		ПО ДокументыПоступления.Ссылка = СуммыПоступленияБУ.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК ДокументСсылка,
	|	ДанныеДокументов.Выгружен,
	|	ДанныеДокументов.Выгружен_Актуальный,
	|	ДанныеДокументов.ПрофильРазноски КАК POSTINGPROFILE,
	|	ДанныеДокументов.WRITEOFFNUM,
	|	ДанныеДокументов.TRANSDATE,
	|	ДанныеДокументов.ORDERID,
	|	ДанныеДокументов.TXT,
	|	ДанныеДокументов.RECID,
	|	ДанныеДокументов.AMOUNTCUR,
	|	ДанныеДокументов.AMOUNTMST,
	|	ДанныеДокументов.DUEDATE,
	|	ВЫБОР
	|		КОГДА СопоставлениеТипКонрагента.ЗначениеАналитики = ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.СчетГлавнойКниги)
	|			ТОГДА ДанныеДокументов.ПрофильРазноски
	|		КОГДА СопоставлениеТипКонрагента.ЗначениеАналитики = ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.ПодотчетноеЛицо)
	|			ТОГДА ДанныеДокументов.ПрофильРазноски
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	|					ТОГДА Контрагенты.НомДокИмпорт2
	|				ИНАЧЕ Контрагенты.НомДокИмпорт
	|		КОНЕЦ
	|	КОНЕЦ КАК ACCOUNTNUM,
	|	ДоговорыКонтрагентов.бит_НомерАХ КАК RCONTRACTACCOUNT,
	|	ДоговорыКонтрагентов.бит_RECID КАК CONTRACTRECID,
	|	СопоставлениеВалюты.Аналитика КАК CURRENCYCODE,
	|	БанковскиеСчета.НомерСчета КАК BANKACCOUNTNUM,
	|	Банки.Код КАК BankBIC,
	|	СоответствиеАналитики_СтатьиДДС.КодАналитикиАксапты КАК DIMENSION2_,
	|	ДанныеДокументов.OPERTYPE,
	|	ВЫБОР СопоставлениеТипКонрагента.ЗначениеАналитики
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.Поставщик)
	|			ТОГДА 1
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.Клиент)
	|			ТОГДА 2
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.СчетГлавнойКниги)
	|			ТОГДА 3
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.ПодотчетноеЛицо)
	|			ТОГДА 4
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ACCOUNTTYPE,
	|	ДанныеДокументов.СуммаНДС КАК TAXAMOUNTCUR,
	|	ВЫБОР ДанныеДокументов.СтавкаНДС
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА 15
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА 15
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА 5
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА 5
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА 1
	|	КОНЕЦ КАК TAXTYPE
	|ИЗ
	|	ДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ДанныеДокументов.Контрагент = Контрагенты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО ДанныеДокументов.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СБ_ЗагрузкаПД_СопоставлениеКодовАналитикиAXAPTA КАК СопоставлениеВалюты
	|		ПО (СопоставлениеВалюты.ЗначениеАналитики = ДанныеДокументов.ВалютаДокумента)
	|			И (СопоставлениеВалюты.ВидАналитики = ЗНАЧЕНИЕ(Перечисление.СБ_ЗагрузкаПД_ВидыАналитикКодовAXAPTA.Валюта))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Банки КАК Банки
	|			ПО БанковскиеСчета.Банк = Банки.Ссылка
	|		ПО ДанныеДокументов.СчетОрганизации = БанковскиеСчета.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеАналитики_СтатьиДДС КАК СоответствиеАналитики_СтатьиДДС
	|		ПО ДанныеДокументов.СтатьяДвиженияДенежныхСредств = СоответствиеАналитики_СтатьиДДС.Аналитика1С
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СБ_ЗагрузкаПД_СопоставлениеКодовАналитикиAXAPTA КАК СопоставлениеТипКонрагента
	|		ПО (СопоставлениеТипКонрагента.ВидАналитики = ЗНАЧЕНИЕ(Перечисление.СБ_ЗагрузкаПД_ВидыАналитикКодовAXAPTA.ТипКонтрагента))
	|			И ДанныеДокументов.ПрофильРазноски = СопоставлениеТипКонрагента.Аналитика";


КонецФункции // ()

//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
&НаКлиентеНаСервереБезКонтекста
Функция ТекстЗапросаДанныеБанковскихВыписокДляВыгрузки(ОрганизацияОбработки)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	1 КАК ТипДокумента,
	|	1 КАК ТипОперации,
	|	ХозрасчетныйДвиженияССубконто.Регистратор КАК Регистратор,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК БанковскийСчет,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт2 КАК СтатьяДДС,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-12 (#3132)
	//|	ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК Контрагент,
	//|	ХозрасчетныйДвиженияССубконто.СубконтоДт2 КАК ДоговорКонтрагента,
	//Заменено на:
	|	ВЫБОР КОГДА ЕстьNULL(Контрагенты.Ссылка,Значение(Справочник.Контрагенты.ПустаяСсылка)) = Значение(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		СписаниеСРасчетногоСчета.Контрагент
	|	ИНАЧЕ
	|		Контрагенты.Ссылка
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР КОГДА ЕстьNULL(ДоговорыКонтрагентов.Ссылка,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) = Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) ТОГДА
	|		ЕСТЬNULL(СписаниеРасшифровкаПлатежа.ДоговорКонтрагента,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) 
	|	ИНАЧЕ
	|		ДоговорыКонтрагентов.Ссылка
	|	КОНЕЦ КАК ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-12 (#3132)	
	|	СУММА(ХозрасчетныйДвиженияССубконто.Сумма) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйДвиженияССубконто.ВалютаКт ЕСТЬ NULL
	|				ТОГДА ХозрасчетныйДвиженияССубконто.Сумма
	|			ИНАЧЕ ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаКт
	|		КОНЕЦ) КАК ВалютнаяСумма,
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.ВалютаКт, &ВалютаРегУчета) КАК Валюта,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA КАК Выгружен,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA_Актуальный КАК Выгружен_Актуальный,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA КАК ДокументДвижения_Выгружен,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA_Актуальный КАК ДокументДвижения_Выгружен_Актуальный,
	|	СписаниеСРасчетногоСчета.СБ_ПрофильРазноски КАК ПрофильРазноски,
	|	СписаниеСРасчетногоСчета.Номер КАК WRITEOFFNUM,
	|	СписаниеСРасчетногоСчета.Дата КАК TRANSDATE,
	|	ПОДСТРОКА(СписаниеСРасчетногоСчета.НазначениеПлатежа, 1, 250) КАК TXT,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-25 (#3088)
	//|	ЕСТЬNULL(ПлатежноеПоручение.Номер, """") КАК ORDERID,
	//Заменено на:
	|	СписаниеСРасчетногоСчета.НомерВходящегоДокумента КАК ORDERID,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-25 (#3088)
	|	ЗначенияСвойствОбъектов.Значение КАК DUEDATE,
	|	ХозрасчетныйДвиженияССубконто.Регистратор КАК ДокументВыгрузки
	|ПОМЕСТИТЬ Т_Документов
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Активность
	|				И Регистратор ССЫЛКА Документ.СписаниеСРасчетногоСчета
	|				//Отбор_По_Документу
	|				И Организация = &Организация
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-13 (#3132)
	//|				И СчетКт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВалютныеСчета)),
	//Заменено на:
	|				И (ВидСубконтоКт1 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета)
	|					ИЛИ ВидСубконтоКт2 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета)
	|					ИЛИ ВидСубконтоКт3 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета)),
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-13 (#3132)	
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|		ПО ((ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.СписаниеСРасчетногоСчета)) = СписаниеСРасчетногоСчета.Ссылка)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-12 (#3132)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеСРасчетногоСчета.РасшифровкаПлатежа КАК СписаниеРасшифровкаПлатежа
	|		ПО ((ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.СписаниеСРасчетногоСчета)) = СписаниеРасшифровкаПлатежа.Ссылка И
	|			СписаниеРасшифровкаПлатежа.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО (ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК Справочник.Контрагенты)) = Контрагенты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО (ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.СубконтоДт2 КАК Справочник.ДоговорыКонтрагентов)) = ДоговорыКонтрагентов.Ссылка
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-12 (#3132)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ЗначенияСвойствОбъектов
	|			ПО ПлатежноеПоручение.Ссылка = ЗначенияСвойствОбъектов.Объект
	|				И (ЗначенияСвойствОбъектов.Свойство = &Свойство_СрокИсполнения)
	|		ПО (СписаниеСРасчетногоСчета.ДокументОснование = ПлатежноеПоручение.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйДвиженияССубконто.Регистратор,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-12 (#3132)
	//|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	//|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	//Заменено на:
	|	ВЫБОР КОГДА ЕстьNULL(Контрагенты.Ссылка,Значение(Справочник.Контрагенты.ПустаяСсылка)) = Значение(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		СписаниеСРасчетногоСчета.Контрагент
	|	ИНАЧЕ
	|		Контрагенты.Ссылка
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ЕстьNULL(ДоговорыКонтрагентов.Ссылка,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) = Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) ТОГДА
	|		ЕСТЬNULL(СписаниеРасшифровкаПлатежа.ДоговорКонтрагента,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) 
	|	ИНАЧЕ
	|		ДоговорыКонтрагентов.Ссылка
	|	КОНЕЦ,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-12 (#3132)	
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.ВалютаКт, &ВалютаРегУчета),
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA_Актуальный,
	|	СписаниеСРасчетногоСчета.СБ_ПрофильРазноски,
	|	СписаниеСРасчетногоСчета.Номер,
	|	СписаниеСРасчетногоСчета.Дата,
	|	ПОДСТРОКА(СписаниеСРасчетногоСчета.НазначениеПлатежа, 1, 250),
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-25 (#3088)
	//|	ЕСТЬNULL(ПлатежноеПоручение.Номер, """"),
	//Заменено на:
	|	СписаниеСРасчетногоСчета.НомерВходящегоДокумента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-25 (#3088)
	|	ЗначенияСвойствОбъектов.Значение,
	|	ХозрасчетныйДвиженияССубконто.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	ХозрасчетныйДвиженияССубконто.Регистратор,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-12 (#3132)
	//|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	//|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	//Заменено на:
	|	ВЫБОР КОГДА ЕстьNULL(Контрагенты.Ссылка,Значение(Справочник.Контрагенты.ПустаяСсылка)) = Значение(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		ПоступлениеНаРасчетныйСчет.Контрагент
	|	ИНАЧЕ
	|		Контрагенты.Ссылка
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ЕстьNULL(ДоговорыКонтрагентов.Ссылка,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) = Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) ТОГДА
	|		ЕСТЬNULL(ПоступлениеРасшифровкаПлатежа.ДоговорКонтрагента,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) 
	|	ИНАЧЕ
	|		ДоговорыКонтрагентов.Ссылка
	|	КОНЕЦ,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-12 (#3132)	
	|	СУММА(ХозрасчетныйДвиженияССубконто.Сумма),
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйДвиженияССубконто.ВалютаДт ЕСТЬ NULL
	|				ТОГДА ХозрасчетныйДвиженияССубконто.Сумма
	|			ИНАЧЕ ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаДт
	|		КОНЕЦ),
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.ВалютаДт, &ВалютаРегУчета),
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA_Актуальный,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA КАК ДокументДвижения_Выгружен,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA_Актуальный КАК ДокументДвижения_Выгружен_Актуальный,
	|	ПоступлениеНаРасчетныйСчет.СБ_ПрофильРазноски,
	|	ПоступлениеНаРасчетныйСчет.Номер,
	|	ПоступлениеНаРасчетныйСчет.Дата,
	|	ПОДСТРОКА(ПоступлениеНаРасчетныйСчет.НазначениеПлатежа, 1, 250),
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-25 (#3088)
	//|	"""",
	//Заменено на:
	|	ПоступлениеНаРасчетныйСчет.НомерВходящегоДокумента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-25 (#3088)
	|	NULL,
	|	ХозрасчетныйДвиженияССубконто.Регистратор
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Активность
	|				И Регистратор ССЫЛКА Документ.ПоступлениеНаРасчетныйСчет
	|				//Отбор_По_Документу
	|				И Организация = &Организация	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-13 (#3132)
	//|				И СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВалютныеСчета)),
	//Заменено на:
	|				И (ВидСубконтоДт1 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета)
	|					ИЛИ ВидСубконтоДт2 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета)
	|					ИЛИ ВидСубконтоДт3 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета)),
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-13 (#3132)
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеНаРасчетныйСчет КАК ПоступлениеНаРасчетныйСчет
	|		ПО ((ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ПоступлениеНаРасчетныйСчет)) = ПоступлениеНаРасчетныйСчет.Ссылка)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-12 (#3132)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеНаРасчетныйСчет.РасшифровкаПлатежа КАК ПоступлениеРасшифровкаПлатежа
	|		ПО ((ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ПоступлениеНаРасчетныйСчет)) = ПоступлениеРасшифровкаПлатежа.Ссылка И
	|			ПоступлениеРасшифровкаПлатежа.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО (ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК Справочник.Контрагенты)) = Контрагенты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО (ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.СубконтоКт2 КАК Справочник.ДоговорыКонтрагентов)) = ДоговорыКонтрагентов.Ссылка
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-12 (#3132)
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйДвиженияССубконто.Регистратор,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-12 (#3132)
	//|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	//|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	//Заменено на:
	|	ВЫБОР КОГДА ЕстьNULL(Контрагенты.Ссылка,Значение(Справочник.Контрагенты.ПустаяСсылка)) = Значение(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		ПоступлениеНаРасчетныйСчет.Контрагент
	|	ИНАЧЕ
	|		Контрагенты.Ссылка
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ЕстьNULL(ДоговорыКонтрагентов.Ссылка,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) = Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) ТОГДА
	|		ЕСТЬNULL(ПоступлениеРасшифровкаПлатежа.ДоговорКонтрагента,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) 
	|	ИНАЧЕ
	|		ДоговорыКонтрагентов.Ссылка
	|	КОНЕЦ,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-12 (#3132)
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.ВалютаДт, &ВалютаРегУчета),
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA_Актуальный,
	|	ПоступлениеНаРасчетныйСчет.СБ_ПрофильРазноски,
	|	ПоступлениеНаРасчетныйСчет.Номер,
	|	ПоступлениеНаРасчетныйСчет.Дата,
	|	ПОДСТРОКА(ПоступлениеНаРасчетныйСчет.НазначениеПлатежа, 1, 250),
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-25 (#3088)
	|	ПоступлениеНаРасчетныйСчет.НомерВходящегоДокумента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-25 (#3088)
	|	ХозрасчетныйДвиженияССубконто.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	1,
	|	ХозрасчетныйДвиженияССубконто.Регистратор,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-12 (#3132)
	//|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	//|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	//Заменено на:
	|	ВЫБОР КОГДА ЕстьNULL(Контрагенты.Ссылка,Значение(Справочник.Контрагенты.ПустаяСсылка)) = Значение(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		СписаниеСРасчетногоСчета.Контрагент
	|	ИНАЧЕ
	|		Контрагенты.Ссылка
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ЕстьNULL(ДоговорыКонтрагентов.Ссылка,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) = Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) ТОГДА
	|		ЕСТЬNULL(СписаниеРасшифровкаПлатежа.ДоговорКонтрагента,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) 
	|	ИНАЧЕ
	|		ДоговорыКонтрагентов.Ссылка
	|	КОНЕЦ,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-12 (#3132)		
	|	СУММА(ХозрасчетныйДвиженияССубконто.Сумма),
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйДвиженияССубконто.ВалютаКт ЕСТЬ NULL
	|				ТОГДА ХозрасчетныйДвиженияССубконто.Сумма
	|			ИНАЧЕ ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаКт
	|		КОНЕЦ),
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.ВалютаКт, &ВалютаРегУчета),
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA_Актуальный,
	|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СБ_ВыгруженВAXAPTA,
	|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СБ_ВыгруженВAXAPTA_Актуальный,
	|	ХозрасчетныйДвиженияССубконто.ПодразделениеКт.Наименование,
	|	ВЫРАЗИТЬ(Регистратор КАК Документ.ОперацияБух).Номер,
	|	ВЫРАЗИТЬ(Регистратор КАК Документ.ОперацияБух).Дата,
	|	ПОДСТРОКА(СписаниеСРасчетногоСчета.НазначениеПлатежа, 1, 250),
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-25 (#3088)
	//|	ЕСТЬNULL(ПлатежноеПоручение.Номер, """"),
	//Заменено на:
	|	СписаниеСРасчетногоСчета.НомерВходящегоДокумента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-25 (#3088)
	|	ЗначенияСвойствОбъектов.Значение,
	|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СторнируемыйДокумент
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Активность
	|				И Сумма > 0
	|				И Регистратор ССЫЛКА Документ.ОперацияБух
	|				//Отбор_По_Документу
	|				И ВЫРАЗИТЬ(Регистратор КАК Документ.ОперацияБух).СторнируемыйДокумент ССЫЛКА Документ.СписаниеСРасчетногоСчета
	|				И Организация = &Организация	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-13 (#3132)
	//|				И СчетКт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВалютныеСчета)),
	//Заменено на:
	|				И (ВидСубконтоКт1 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета)
	|					ИЛИ ВидСубконтоКт2 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета)
	|					ИЛИ ВидСубконтоКт3 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета)),
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-13 (#3132)
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|		ПО (ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СторнируемыйДокумент = СписаниеСРасчетногоСчета.Ссылка)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-12 (#3132)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеСРасчетногоСчета.РасшифровкаПлатежа КАК СписаниеРасшифровкаПлатежа
	|		ПО (ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СторнируемыйДокумент = СписаниеРасшифровкаПлатежа.Ссылка И
	|			СписаниеРасшифровкаПлатежа.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО (ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК Справочник.Контрагенты)) = Контрагенты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО (ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.СубконтоДт2 КАК Справочник.ДоговорыКонтрагентов)) = ДоговорыКонтрагентов.Ссылка
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-12 (#3132)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ЗначенияСвойствОбъектов
	|			ПО ПлатежноеПоручение.Ссылка = ЗначенияСвойствОбъектов.Объект
	|				И (ЗначенияСвойствОбъектов.Свойство = &Свойство_СрокИсполнения)
	|		ПО (ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СторнируемыйДокумент.ДокументОснование = ПлатежноеПоручение.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйДвиженияССубконто.Регистратор,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-12 (#3132)
	//|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	//|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	//Заменено на:
	|	ВЫБОР КОГДА ЕстьNULL(Контрагенты.Ссылка,Значение(Справочник.Контрагенты.ПустаяСсылка)) = Значение(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		СписаниеСРасчетногоСчета.Контрагент
	|	ИНАЧЕ
	|		Контрагенты.Ссылка
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ЕстьNULL(ДоговорыКонтрагентов.Ссылка,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) = Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) ТОГДА
	|		ЕСТЬNULL(СписаниеРасшифровкаПлатежа.ДоговорКонтрагента,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) 
	|	ИНАЧЕ
	|		ДоговорыКонтрагентов.Ссылка
	|	КОНЕЦ,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-12 (#3132)
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.ВалютаКт, &ВалютаРегУчета),
	|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СБ_ВыгруженВAXAPTA,
	|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СБ_ВыгруженВAXAPTA_Актуальный,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA_Актуальный,
	|	ХозрасчетныйДвиженияССубконто.ПодразделениеКт.Наименование,
	|	ВЫРАЗИТЬ(Регистратор КАК Документ.ОперацияБух).Номер,
	|	ВЫРАЗИТЬ(Регистратор КАК Документ.ОперацияБух).Дата,
	|	ПОДСТРОКА(СписаниеСРасчетногоСчета.НазначениеПлатежа, 1, 250),
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-25 (#3088)     			
	//|	ЕСТЬNULL(ПлатежноеПоручение.Номер, """"),
	//Заменено на:
	|	СписаниеСРасчетногоСчета.НомерВходящегоДокумента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-25 (#3088)     			
	|	ЗначенияСвойствОбъектов.Значение,
	|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СторнируемыйДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	0,
	|	ХозрасчетныйДвиженияССубконто.Регистратор,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-12 (#3132)
	//|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	//|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	//Заменено на:
	|	ВЫБОР КОГДА ЕстьNULL(Контрагенты.Ссылка,Значение(Справочник.Контрагенты.ПустаяСсылка)) = Значение(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		ПоступлениеНаРасчетныйСчет.Контрагент
	|	ИНАЧЕ
	|		Контрагенты.Ссылка
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ЕстьNULL(ДоговорыКонтрагентов.Ссылка,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) = Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) ТОГДА
	|		ЕСТЬNULL(ПоступлениеРасшифровкаПлатежа.ДоговорКонтрагента,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) 
	|	ИНАЧЕ
	|		ДоговорыКонтрагентов.Ссылка
	|	КОНЕЦ,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-12 (#3132)
	|	СУММА(ХозрасчетныйДвиженияССубконто.Сумма),
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйДвиженияССубконто.ВалютаДт ЕСТЬ NULL
	|				ТОГДА ХозрасчетныйДвиженияССубконто.Сумма
	|			ИНАЧЕ ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаДт
	|		КОНЕЦ),
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.ВалютаДт, &ВалютаРегУчета),
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA_Актуальный,
	|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СБ_ВыгруженВAXAPTA,
	|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СБ_ВыгруженВAXAPTA_Актуальный,
	|	ХозрасчетныйДвиженияССубконто.ПодразделениеДт.Наименование,
	|	ВЫРАЗИТЬ(Регистратор КАК Документ.ОперацияБух).Номер,
	|	ВЫРАЗИТЬ(Регистратор КАК Документ.ОперацияБух).Дата,
	|	ПОДСТРОКА(ПоступлениеНаРасчетныйСчет.НазначениеПлатежа, 1, 250),
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-25 (#3088)
	//|	"""",
	//Заменено на:
	|	ПоступлениеНаРасчетныйСчет.НомерВходящегоДокумента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-25 (#3088)
	|	NULL,
	|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СторнируемыйДокумент
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Активность
	|				И Сумма > 0
	|				И Регистратор ССЫЛКА Документ.ОперацияБух
	|				//Отбор_По_Документу
	|				И ВЫРАЗИТЬ(Регистратор КАК Документ.ОперацияБух).СторнируемыйДокумент ССЫЛКА Документ.ПоступлениеНаРасчетныйСчет
	|				И Организация = &Организация	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-13 (#3132)
	//|				И СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВалютныеСчета)),
	//Заменено на:
	|				И (ВидСубконтоДт1 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета)
	|					ИЛИ ВидСубконтоДт2 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета)
	|					ИЛИ ВидСубконтоДт3 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета)),
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-13 (#3132)
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеНаРасчетныйСчет КАК ПоступлениеНаРасчетныйСчет
	|		ПО (ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СторнируемыйДокумент = ПоступлениеНаРасчетныйСчет.Ссылка)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-12 (#3132)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеНаРасчетныйСчет.РасшифровкаПлатежа КАК ПоступлениеРасшифровкаПлатежа
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-28 (#3202)	
	//|		ПО (ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СторнируемыйДокумент = ПоступлениеНаРасчетныйСчет.Ссылка И
	//Заменено на:
	|		ПО (ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СторнируемыйДокумент = ПоступлениеРасшифровкаПлатежа.Ссылка И
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-28 (#3202)
	|			ПоступлениеРасшифровкаПлатежа.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО (ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК Справочник.Контрагенты)) = Контрагенты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО (ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.СубконтоКт2 КАК Справочник.ДоговорыКонтрагентов)) = ДоговорыКонтрагентов.Ссылка
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-12 (#3132)
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйДвиженияССубконто.Регистратор,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-12 (#3132)
	//|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	//|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	//Заменено на:
	|	ВЫБОР КОГДА ЕстьNULL(Контрагенты.Ссылка,Значение(Справочник.Контрагенты.ПустаяСсылка)) = Значение(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		ПоступлениеНаРасчетныйСчет.Контрагент
	|	ИНАЧЕ
	|		Контрагенты.Ссылка
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ЕстьNULL(ДоговорыКонтрагентов.Ссылка,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) = Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) ТОГДА
	|		ЕСТЬNULL(ПоступлениеРасшифровкаПлатежа.ДоговорКонтрагента,Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) 
	|	ИНАЧЕ
	|		ДоговорыКонтрагентов.Ссылка
	|	КОНЕЦ,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-12 (#3132)
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.ВалютаДт, &ВалютаРегУчета),
	|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СБ_ВыгруженВAXAPTA,
	|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ОперацияБух).СБ_ВыгруженВAXAPTA_Актуальный,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA_Актуальный,
	|	ХозрасчетныйДвиженияССубконто.ПодразделениеДт.Наименование,
	|	ВЫРАЗИТЬ(Регистратор КАК Документ.ОперацияБух).Номер,
	|	ВЫРАЗИТЬ(Регистратор КАК Документ.ОперацияБух).Дата,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-25 (#3088)
	|	ПоступлениеНаРасчетныйСчет.НомерВходящегоДокумента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-25 (#3088)
	|	ПОДСТРОКА(ПоступлениеНаРасчетныйСчет.НазначениеПлатежа, 1, 250)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Т_Документов.СтатьяДДС КАК СтатьяДДС,
	|	МАКСИМУМ(бит_ок_СопоставлениеАналитики.КодАналитикиАксапты) КАК КодАксаптыСтатьиДДС
	|ПОМЕСТИТЬ Т_СоответствиеАналитики_СтатьиДДС
	|ИЗ
	|	Т_Документов КАК Т_Документов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ок_СопоставлениеАналитики КАК бит_ок_СопоставлениеАналитики
	|		ПО Т_Документов.СтатьяДДС = бит_ок_СопоставлениеАналитики.Аналитика1С
	|			И (бит_ок_СопоставлениеАналитики.Организация = &Организация)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.СБ_ЗагрузкаПД_AXAPTA_ТипОбъектаСтатьяДДС КАК СБ_ЗагрузкаПД_AXAPTA_ТипОбъектаСтатьяДДС
	|		ПО (бит_ок_СопоставлениеАналитики.Тип1С = СБ_ЗагрузкаПД_AXAPTA_ТипОбъектаСтатьяДДС.Значение)
	|
	|СГРУППИРОВАТЬ ПО
	|	Т_Документов.СтатьяДДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(бит_ДополнительныеАналитики.ЗначениеАналитики КАК Документ.бит_ПлатежнаяПозиция) КАК ПлатежнаяПозиция,
	|	ДокументыСписания.ДокументВыгрузки КАК ПлатежныйДокумент
	|ПОМЕСТИТЬ Т_ПлатежПозиции
	|ИЗ
	|	Т_Документов КАК ДокументыСписания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_ДополнительныеАналитики КАК бит_ДополнительныеАналитики
	|		ПО ДокументыСписания.ДокументВыгрузки = бит_ДополнительныеАналитики.Объект
	|			И (бит_ДополнительныеАналитики.Аналитика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_ВидыДополнительныхАналитик.ПлатежнаяПозиция))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	бит_ДокументыМножественнойОплаты.ПлатежнаяПозиция,
	|	ДокументыСписания.ДокументВыгрузки
	|ИЗ
	|	Т_Документов КАК ДокументыСписания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_ДокументыМножественнойОплаты КАК бит_ДокументыМножественнойОплаты
	|		ПО ДокументыСписания.ДокументВыгрузки = бит_ДокументыМножественнойОплаты.ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(бит_ЗаявкаНаРасходованиеСредств.СБ_ИдентификаторЗаписиAXAPTA) КАК СБ_ИдентификаторЗаписиAXAPTA,
	|	ПлатежныеДокументы.ПлатежныйДокумент КАК ПлатежныйДокумент
	|ПОМЕСТИТЬ Т_ЗаявкаНаРасходАксапта
	|ИЗ
	|	Т_ПлатежПозиции КАК ПлатежныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ПлатежнаяПозиция КАК бит_ПлатежнаяПозиция
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ЗаявкаНаРасходованиеСредств КАК бит_ЗаявкаНаРасходованиеСредств
	|			ПО бит_ПлатежнаяПозиция.ДокументОснование = бит_ЗаявкаНаРасходованиеСредств.Ссылка
	|		ПО ПлатежныеДокументы.ПлатежнаяПозиция = бит_ПлатежнаяПозиция.Ссылка
	|ГДЕ
	|	бит_ЗаявкаНаРасходованиеСредств.СБ_ИдентификаторЗаписиAXAPTA <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлатежныеДокументы.ПлатежныйДокумент
	|;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-06 (#МДМ)
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанныхДляОбраотки.ДоговорКонтрагента КАК Договор
	|ПОМЕСТИТЬ ВТ_Договора
	|ИЗ
	|	Т_Документов КАК ТаблицаДанныхДляОбраотки
	|ГДЕ
	|	ТаблицаДанныхДляОбраотки.ДоговорКонтрагента ССЫЛКА Справочник.ДоговорыКонтрагентов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанныхДляОбраотки.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Договора.Договор КАК Договор,
	|	МАКСИМУМ(ЕСТЬNULL(СопоставлениеАналитики_ОсновноеСопоставление.КодАналитикиАксапты, СопоставлениеАналитики_НеОсновноеСопоставление.КодАналитикиАксапты)) КАК КодАналитикиАксапты
	|ПОМЕСТИТЬ ВТ_Договоры_СопоставлениеАналитики
	|ИЗ
	|	ВТ_Договора КАК Договора
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ок_СопоставлениеАналитики КАК СопоставлениеАналитики_ОсновноеСопоставление
	|		ПО (СопоставлениеАналитики_ОсновноеСопоставление.Организация = &Организация)
	|			И Договора.Договор = СопоставлениеАналитики_ОсновноеСопоставление.Аналитика1С
	|			И (СопоставлениеАналитики_ОсновноеСопоставление.ок_ОсновноеСопоставление)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ок_СопоставлениеАналитики КАК СопоставлениеАналитики_НеОсновноеСопоставление
	|		ПО (СопоставлениеАналитики_ОсновноеСопоставление.КодАналитикиАксапты ЕСТЬ NULL)
	|			И (СопоставлениеАналитики_НеОсновноеСопоставление.Организация = &Организация)
	|			И Договора.Договор = СопоставлениеАналитики_НеОсновноеСопоставление.Аналитика1С
	|			И (НЕ СопоставлениеАналитики_НеОсновноеСопоставление.ок_ОсновноеСопоставление)
	|
	|СГРУППИРОВАТЬ ПО
	|	Договора.Договор
	|;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-06 (#МДМ)
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Т_Документов.ТипДокумента КАК DOCTYPE,
	|	Т_Документов.ТипОперации КАК OPERTYPE,
	|	Т_Документов.ДокументВыгрузки КАК ДокументСсылка,
	|	Т_Документов.Регистратор КАК ДокументДвижения,
	|	Т_Документов.СтатьяДДС КАК СтатьяДвиженияДенежныхСредств,
	|	Т_Документов.Контрагент КАК Контрагент,
	|	Т_Документов.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Т_Документов.Сумма КАК AMOUNTMST,
	|	Т_Документов.ВалютнаяСумма КАК AMOUNTCUR,
	|	Т_Документов.Выгружен КАК Выгружен,
	|	Т_Документов.Выгружен_Актуальный КАК Выгружен_Актуальный,
	|	Т_Документов.ДокументДвижения_Выгружен КАК ДокументДвижения_Выгружен,
	|	Т_Документов.ДокументДвижения_Выгружен_Актуальный КАК ДокументДвижения_Выгружен_Актуальный,
	|	Т_Документов.ПрофильРазноски КАК POSTINGPROFILE,
	|	Т_Документов.WRITEOFFNUM КАК WRITEOFFNUM,
	|	Т_Документов.TRANSDATE КАК TRANSDATE,
	|	Т_Документов.TXT КАК TXT,
	|	Т_Документов.ORDERID КАК ORDERID,
	|	Т_Документов.DUEDATE КАК DUEDATE,
	|	ВЫБОР СопоставлениеТипКонрагента.ЗначениеАналитики
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.Поставщик)
	|			ТОГДА 1
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.Клиент)
	|			ТОГДА 2
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.СчетГлавнойКниги)
	|			ТОГДА 3
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.ПодотчетноеЛицо)
	|			ТОГДА 4
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ACCOUNTTYPE,
	|	ВЫБОР
	|		КОГДА СопоставлениеТипКонрагента.ЗначениеАналитики = ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.СчетГлавнойКниги)
	|			ТОГДА Т_Документов.ПрофильРазноски
	|		КОГДА СопоставлениеТипКонрагента.ЗначениеАналитики = ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.ПодотчетноеЛицо)
	|			ТОГДА Т_Документов.ПрофильРазноски
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Т_Документов.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	|					ТОГДА Т_Документов.Контрагент.НомДокИмпорт2
	|				ИНАЧЕ Т_Документов.Контрагент.НомДокИмпорт
	|			КОНЕЦ
	|	КОНЕЦ КАК ACCOUNTNUM,
	|	Т_СоответствиеАналитики_СтатьиДДС.КодАксаптыСтатьиДДС КАК DIMENSION2_,
	|	ЕСТЬNULL(Т_ЗаявкаНаРасходАксапта.СБ_ИдентификаторЗаписиAXAPTA, 0) КАК RECID,
	|	Т_Документов.ДоговорКонтрагента.бит_НомерАХ КАК RCONTRACTACCOUNT,
	|	Т_Документов.ДоговорКонтрагента.бит_RECID КАК CONTRACTRECID,
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-06 (#МДМ)
	|	ЕСТЬNULL(Договоры_СопоставлениеАналитики.КодАналитикиАксапты, """") КАК CONTRACTCODE1C,
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-06 (#МДМ)
	|	Т_Документов.БанковскийСчет.НомерСчета КАК BANKACCOUNTNUM,
	|	Т_Документов.БанковскийСчет.Банк.Код КАК BankBIC,
	|	СопоставлениеВалюты.Аналитика КАК CURRENCYCODE,
	|	0 КАК TAXTYPE,
	|	0 КАК TAXAMOUNTCUR
	|ИЗ
	|	Т_Документов КАК Т_Документов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СБ_ЗагрузкаПД_СопоставлениеКодовАналитикиAXAPTA КАК СопоставлениеТипКонрагента
	|		ПО Т_Документов.ПрофильРазноски = СопоставлениеТипКонрагента.Аналитика
	|			И (СопоставлениеТипКонрагента.ВидАналитики = ЗНАЧЕНИЕ(Перечисление.СБ_ЗагрузкаПД_ВидыАналитикКодовAXAPTA.ТипКонтрагента))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Т_СоответствиеАналитики_СтатьиДДС КАК Т_СоответствиеАналитики_СтатьиДДС
	|		ПО Т_Документов.СтатьяДДС = Т_СоответствиеАналитики_СтатьиДДС.СтатьяДДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Т_ЗаявкаНаРасходАксапта КАК Т_ЗаявкаНаРасходАксапта
	|		ПО Т_Документов.ДокументВыгрузки = Т_ЗаявкаНаРасходАксапта.ПлатежныйДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СБ_ЗагрузкаПД_СопоставлениеКодовАналитикиAXAPTA КАК СопоставлениеВалюты
	|		ПО (СопоставлениеВалюты.ЗначениеАналитики = Т_Документов.Валюта)
	|			И (СопоставлениеВалюты.ВидАналитики = ЗНАЧЕНИЕ(Перечисление.СБ_ЗагрузкаПД_ВидыАналитикКодовAXAPTA.Валюта))
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-06 (#МДМ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Договоры_СопоставлениеАналитики КАК Договоры_СопоставлениеАналитики
	|		ПО Т_Документов.ДоговорКонтрагента = Договоры_СопоставлениеАналитики.Договор
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-06 (#МДМ)
	|ГДЕ
	|	НЕ ЕСТЬNULL(Т_Документов.ДокументДвижения_Выгружен_Актуальный, ИСТИНА)
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Начало 2021-05-22 (#НТП_МП_ФР06)
	|	//&ОтборПоПрофилям
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Конец 2021-05-22 (#НТП_МП_ФР06)
	|"
	;
		
	Организация_Лоджистикс = бит_БК_Общий.ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных("Организации", "Организация Лоджистикс", ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"));
	Если ОрганизацияОбработки = Организация_Лоджистикс Тогда
		// для организации Окей Лоджистик выгружаем ставку НДС, 15 = 18% или 20% (с 2019)
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "0 КАК TAXTYPE,", "15 КАК TAXTYPE,");
	КонецЕсли;	
			
	Возврат ТекстЗапроса;
	
КонецФункции	
//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077)

&НаСервере
Процедура ЗаполнитьСписокБанковскихВыписокНаСервере()

	
	//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
	//ТекстУсловиеНаСписок = " 
	//|	СписокДокументов.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	//|	И СписокДокументов.Организация = &Организация
	//|	И НЕ СписокДокументов.СБ_ВыгруженВAXAPTA_Актуальный
	//|	И СписокДокументов.Проведен";

	//ТекстУсловиеНаДокумент = "
	//|	СписокДокументов.Ссылка В(&Ссылка)";
	
	//ТекстЗапроса = СтрЗаменить(ТекстЗапросаДанныеБанковскихВыписокДляВыгрузки(), ТекстУсловиеНаДокумент, ТекстУсловиеНаСписок);
	ТекстЗапроса = ТекстЗапросаДанныеБанковскихВыписокДляВыгрузки(Организация);
	//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077)
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
	//Запрос.УстановитьПараметр("ВалютаРеглУчета",			ВалютаРеглУчета);	 //Валюты
	Запрос.УстановитьПараметр("ВалютаРегУчета",			ВалютаРеглУчета);	 //Валюты
	//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077) 
    Запрос.УстановитьПараметр("НачалоПериода", 				НачалоДня(НачалоПериодаОтбораБанковскихВыписок));
    Запрос.УстановитьПараметр("КонецПериода", 				КонецДня(КонецПериодаОтбораБанковскихВыписок));
	Запрос.УстановитьПараметр("Организация",				Организация);	
	Запрос.УстановитьПараметр("Свойство_СрокИсполнения",	СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("Свойство_СрокИсполнения"));	 //Дополнительные реквизиты
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Начало 2021-05-22 (#НТП_МП_ФР06)
	Если Организация = Окей
		И АлгоритмВыгрузкиБанковскихВыписок = 1 Тогда
		
		СписокПрофилей = Обработки.ок_НастройкиОтборовДляОчисткиСубконто3.ПолучитьЗначениеКонстанты("Ок_СписокПрофилейРазноскиДляВыгрузкиВАХАРТА", Неопределено);
	
		Если СписокПрофилей <> Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ОтборПоПрофилям", "И Т_Документов.ПрофильРазноски В (&ПрофильРазноски)");
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("ПрофильРазноски", СписокПрофилей);
		КонецЕсли;
		
	КонецЕсли;
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Конец 2021-05-22 (#НТП_МП_ФР06)
	СписокБанковскихВыписок.Загрузить(Запрос.Выполнить().Выгрузить());

	ПрефиксОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "Префикс");
	
	Для каждого СтрокаДанных Из СписокБанковскихВыписок Цикл
		
		ORDERID = СтрокаДанных.ORDERID;
		Префикс = ПрефиксОрганизации;
		
		Если Лев(ORDERID, СтрДлина(Префикс)) = Префикс Тогда
			ORDERID = Сред(ORDERID, СтрДлина(Префикс) + 1); 	
		КонецЕсли; 
		
		Пока Лев(ORDERID, 1) = "0" Цикл
			ORDERID = Сред(ORDERID, 2); 	
		КонецЦикла; 
		
		СтрокаДанных.ORDERID 	= ORDERID;
		СтрокаДанных.UID1C 		= XMLСтрока(СтрокаДанных.ДокументСсылка);	
	
	КонецЦикла; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПредопределннаяОрганизация(ИД)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	бит_ок_НастройкиМеханизмаИмпортаДанных.Значение
	|ИЗ
	|	РегистрСведений.бит_ок_НастройкиМеханизмаИмпортаДанных КАК бит_ок_НастройкиМеханизмаИмпортаДанных
	|ГДЕ
	|	бит_ок_НастройкиМеханизмаИмпортаДанных.Группа = &Группа
	|	И бит_ок_НастройкиМеханизмаИмпортаДанных.ИмяНастройки = &ИмяНастройки";
	Запрос.УстановитьПараметр("Группа", "Организации");
	Запрос.УстановитьПараметр("ИмяНастройки", ИД);

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли; 
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Значение;
	
КонецФункции // ()

&НаСервере
Процедура ВыгрузитьЗакрытыеЗаявкиНаСервере()
	
	Отказ = Ложь;
	ТекстЗапросаSQL = "
	|USE %1
	|UPDATE %2
	|SET POSTED1C8 = 4
	|WHERE RECID IN(%3)";
	
	Попытка
		
		Соединение = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.СоединениеКИсточникуСредствамиSQL();
		ЗапросSQL = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.ОбъектЗапросSQL(Соединение);
	
	Исключение
		
		Сообщить("Не удалось инициализовать подключение к внешнему источнику для записи данных: " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Отказ = Истина;
		
	КонецПопытки;
	
	Если НЕ Отказ Тогда
		
		Если АлгоритмВыгрузкиЗакрытыхЗаявок = 0 Тогда
			ЗаполнитьСписокЗакрытыхЗаявокНаСервере();
		КонецЕсли; 
		
		СтрокаИдентификаторов = "";
		Для каждого СтрокаСписка Из СписокЗакрытыхЗаявок Цикл
			
			ЗаявкаID = СтрокаСписка.RECID;
			
			Если ЗаявкаID = 0 Тогда
				Продолжить;	
			КонецЕсли; 
			
			Если ПустаяСтрока(СтрокаИдентификаторов) Тогда
				СтрокаИдентификаторов = Формат(ЗаявкаID, "ЧГ=");				
			Иначе
				СтрокаИдентификаторов = СтрокаИдентификаторов + ", " + Формат(ЗаявкаID, "ЧГ=");
			КонецЕсли; 
			
		КонецЦикла; 
		
		Если НЕ ПустаяСтрока(СтрокаИдентификаторов) Тогда
			
			ПараметрыСоединения = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.ПолучитьПараметрыСоединения();
			ЗапросSQL.CommandText = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										ТекстЗапросаSQL,
										ПараметрыСоединения.База,
										"ExportDataTo1cPaymOrder",
										СтрокаИдентификаторов);
										
			Попытка
			
				ЗапросSQL.Execute();										
			
			Исключение
				Сообщить("Не удалось выполнить запрос обновления признаков загрузки (POSTED1C8): " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки; 	
			
		КонецЕсли; 
	
	КонецЕсли; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция SQL_Число(Знач ПреобразуемоеЗначение)

	Возврат Формат(ПреобразуемоеЗначение, "ЧРД=.; ЧН=0; ЧГ=0");	

КонецФункции 

&НаСервереБезКонтекста
Функция SQL_Дата(Знач ПреобразуемоеЗначение)

	Возврат "'" + Формат(ПреобразуемоеЗначение, "ДФ='ггггММдд чч:мм:сс'") + "'";	

КонецФункции 

&НаСервереБезКонтекста
Функция SQL_Строка(Знач ПреобразуемоеЗначение)

	Возврат "'" + СтрЗаменить(ПреобразуемоеЗначение, "'", "''") + "'";	

КонецФункции 

&НаСервере
Процедура ВыгрузитьБанковскиеВыпискиНаСервере()
	
	МенеджерОбработки = Обработки.СБ_ВыгрузкаБанковскихВыписокВAXAPTA;
	
	Отказ = Ложь;
	
	Попытка
		
		Соединение = МенеджерОбработки.СоединениеКИсточникуСредствамиSQL(Организация);
		ЗапросSQL = МенеджерОбработки.ОбъектЗапросSQL(Соединение);
	
	Исключение
		
		Сообщить("Не удалось инициализовать подключение к внешнему источнику для записи данных: " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Отказ = Истина;
		
	КонецПопытки;
	
	ПараметрыСоединения = МенеджерОбработки.ПолучитьПараметрыСоединения(Организация);
	
	Если НЕ Отказ Тогда
		
		Если АлгоритмВыгрузкиБанковскихВыписок = 0 Тогда
			ЗаполнитьСписокБанковскихВыписокНаСервере();
		КонецЕсли; 
		
		МассивВыгружаемыхПолей = Новый Массив;
		МассивВыгружаемыхПолей.Добавить("POSTED");
		МассивВыгружаемыхПолей.Добавить("POSTINGPROFILE");
		МассивВыгружаемыхПолей.Добавить("WRITEOFFNUM");
		МассивВыгружаемыхПолей.Добавить("TRANSDATE");
		МассивВыгружаемыхПолей.Добавить("ORDERID");
		МассивВыгружаемыхПолей.Добавить("TXT");
		МассивВыгружаемыхПолей.Добавить("RECID");
		МассивВыгружаемыхПолей.Добавить("AMOUNTCUR");
		МассивВыгружаемыхПолей.Добавить("AMOUNTMST");
		МассивВыгружаемыхПолей.Добавить("DUEDATE");
		МассивВыгружаемыхПолей.Добавить("ACCOUNTTYPE");
		МассивВыгружаемыхПолей.Добавить("ACCOUNTNUM");
		МассивВыгружаемыхПолей.Добавить("RCONTRACTACCOUNT");
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-16 (#МДМ)
		//МассивВыгружаемыхПолей.Добавить("CONTRACTRECID");
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-16 (#МДМ)
		МассивВыгружаемыхПолей.Добавить("CURRENCYCODE");
		МассивВыгружаемыхПолей.Добавить("BANKACCOUNTNUM");
		МассивВыгружаемыхПолей.Добавить("BankBIC");
		МассивВыгружаемыхПолей.Добавить("DIMENSION2_");
		МассивВыгружаемыхПолей.Добавить("OPERTYPE");
		МассивВыгружаемыхПолей.Добавить("UID1C");
		МассивВыгружаемыхПолей.Добавить("TAXAMOUNTCUR");
		МассивВыгружаемыхПолей.Добавить("TAXTYPE");
		//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
		// добавим в выгружаемые поля DOCTYPE, только для организации ОКЕЙ
		Организация_ОКЕЙ = бит_БК_Общий.ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных("Организации", "Организация ОКЕЙ", ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"));
		Если Организация = Организация_ОКЕЙ Тогда
			МассивВыгружаемыхПолей.Добавить("DOCTYPE");
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-05-26 (#МДМ)
			МассивВыгружаемыхПолей.Добавить("CONTRACTCODE1C");
		Иначе
			МассивВыгружаемыхПолей.Добавить("CONTRACTRECID");
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-05-26 (#МДМ)
		КонецЕсли;	
		//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077) 
		
		СписокБанковскихВыписок_Обновить = СписокБанковскихВыписок.НайтиСтроки(Новый Структура("Выгружен", Истина));
		СписокБанковскихВыписок_Добавить = СписокБанковскихВыписок.НайтиСтроки(Новый Структура("Выгружен", Ложь));
		
		ТипЧисло 	= Тип("Число");
		ТипСтрока 	= Тип("Строка");
		ТипДата		= Тип("Дата");
		
		РазмерПорции = 100;
		
		//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
		// добавление новых документов
		//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077)
		Если СписокБанковскихВыписок_Добавить.Количество() > 0 Тогда
		
			ШаблонТекстЗапросаSQL_Добавление =
			"USE %BaseName
			|INSERT INTO %TableName (%ТекстСписокПолей)
			|VALUES %ТекстСписокЗначенийТаблицы";
			
			ТекстСписокПолей = "";
			Для каждого ИмяПоля Из МассивВыгружаемыхПолей Цикл
				
				ТекстСписокПолей = ТекстСписокПолей 
										+ ?(ПустаяСтрока(ТекстСписокПолей), "", ",") 
										+ ИмяПоля;	
										
			КонецЦикла; 
			
			КоличествоПорций 	= Цел(СписокБанковскихВыписок_Добавить.Количество() / РазмерПорции) + 1;
			МаксимальныйИндекс 	= СписокБанковскихВыписок_Добавить.ВГраница(); 
			
			ОтработанныеСтроки = Новый Массив;
			
			Для НомерПорции = 1 По КоличествоПорций Цикл
			
				ТекстСписокЗначенийТаблицы = "";
				
				Для Сч = 0 По РазмерПорции - 1 Цикл
				
					ТекИндекс = (НомерПорции - 1) * РазмерПорции + Сч;
					Если ТекИндекс > МаксимальныйИндекс Тогда
						Прервать;					
					КонецЕсли; 
					
					СтрокаДанных = СписокБанковскихВыписок_Добавить[ТекИндекс];
					
					Если Не ЗначениеЗаполнено(СтрокаДанных.ДокументСсылка) Тогда
						Продолжить;			
					КонецЕсли; 
					
					ОтработанныеСтроки.Добавить(СтрокаДанных);
					
					ТекстЗначенийСтроки = "";
					
					Для каждого ИмяПоля Из МассивВыгружаемыхПолей Цикл
					
						ЗначениеПоля = СтрокаДанных[ИмяПоля];
						
						ТипЗначения = ТипЗнч(ЗначениеПоля);
						
						Если ТипЗначения = ТипЧисло Тогда
							ТекстЗначения = SQL_Число(ЗначениеПоля);
						ИначеЕсли ТипЗначения = ТипДата Тогда
							ТекстЗначения = SQL_Дата(ЗначениеПоля);
						Иначе
							ТекстЗначения = SQL_Строка(ЗначениеПоля); 
						КонецЕсли; 
						
						ТекстЗначенийСтроки = ТекстЗначенийСтроки 
												+ ?(ПустаяСтрока(ТекстЗначенийСтроки), "", ",") 
												+ ТекстЗначения;	
						
					КонецЦикла;
					
					ТекстСписокЗначенийТаблицы = ТекстСписокЗначенийТаблицы 
													+ ?(ПустаяСтрока(ТекстСписокЗначенийТаблицы), "", ",")
													+ "("
													+ ТекстЗначенийСтроки
													+ ")"
				
				КонецЦикла; 
				
				Если НЕ ПустаяСтрока(ТекстСписокЗначенийТаблицы) Тогда
					
					ТекстЗапросаSQL_Добавление = СтрЗаменить(ШаблонТекстЗапросаSQL_Добавление, 	"%BaseName", ПараметрыСоединения.База); 
					ТекстЗапросаSQL_Добавление = СтрЗаменить(ТекстЗапросаSQL_Добавление, 		"%TableName", "dbo.ExportDataFrom1cLedgerTrans"); 
					ТекстЗапросаSQL_Добавление = СтрЗаменить(ТекстЗапросаSQL_Добавление, 		"%ТекстСписокПолей", ТекстСписокПолей); 
					ТекстЗапросаSQL_Добавление = СтрЗаменить(ТекстЗапросаSQL_Добавление, 		"%ТекстСписокЗначенийТаблицы", ТекстСписокЗначенийТаблицы); 
					
					ЗапросSQL.CommandText = ТекстЗапросаSQL_Добавление;
					
					Попытка
						
						ЗапросSQL.Execute();										
						
					Исключение
						Сообщить("Не удалось выполнить запрос добавления строк в таблицу банковских выписок: " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
						Отказ = Истина;
					КонецПопытки;
				КонецЕсли; 
			
			КонецЦикла; 
			
			Если Не Отказ Тогда
				Для каждого СтрокаДанных Из ОтработанныеСтроки Цикл
					
					//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
					//ДокументСсылка = СтрокаДанных.ДокументСсылка;
					ДокументСсылка = СтрокаДанных.ДокументДвижения;
					//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077)
					
					Если Не ЗначениеЗаполнено(ДокументСсылка) Тогда
						Продолжить;			
					КонецЕсли; 
					
					ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
					ДокументОбъект.ОбменДанными.Загрузка = Истина;
					
					ДокументОбъект.ДополнительныеСвойства.Вставить("НеСбрасыватьПризнакВыгрузки");
					
					ДокументОбъект.СБ_ВыгруженВAXAPTA 				= Истина;
					ДокументОбъект.СБ_ВыгруженВAXAPTA_Актуальный 	= Истина;
					
					ДокументОбъект.Записать();
					
					//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
					//СтрокаДанных.Выгружен 				= Истина;
					//СтрокаДанных.Выгружен_Актуальный 	= Истина;
					СтрокаДанных.ДокументДвижения_Выгружен 				= Истина;
					СтрокаДанных.ДокументДвижения_Выгружен_Актуальный 	= Истина;
					//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077)
					
				КонецЦикла; 
			КонецЕсли; 
			
		КонецЕсли; 
		
		Если СписокБанковскихВыписок_Обновить.Количество() > 0 И Не Отказ Тогда
			
			ШаблонЗначенияПоля = 
			"%1 = (CASE %2 END)";
			
			ШаблонУсловногоЗначения  = 
			//"WHEN A.WRITEOFFNUM = %1 AND A.TRANSDATE = %2 THEN %3 ";
			"WHEN A.UID1C = %1 AND A.OPERTYPE = %2 THEN %3 ";
			
			ШаблонТаблицаИдентифкаторов = 
			//"SELECT
			//|	%1 AS WRITEOFFNUM,
			//|	%2 AS TRANSDATE";
			"SELECT
			|	%1 AS UID1C,
			|	%2 AS OPERTYPE";
			
			ТекстОбъединение = 
			"
			|
			|UNION ALL
			|
			|";
			
			МассивВыгружаемыхПолей.Удалить(МассивВыгружаемыхПолей.Найти("POSTED")); //Особый алгоритм
			
			КоличествоПорций 	= Цел(СписокБанковскихВыписок_Обновить.Количество() / РазмерПорции) + 1;
			МаксимальныйИндекс 	= СписокБанковскихВыписок_Обновить.ВГраница(); 
			
			ОтработанныеСтроки = Новый Массив;
			
			Для НомерПорции = 1 По КоличествоПорций Цикл
			
				ТекстыУсловныеЗначенийПолей = Новый Структура;
				
				Для каждого ИмяПоля Из МассивВыгружаемыхПолей Цикл
					
					ТекстыУсловныеЗначенийПолей.Вставить(ИмяПоля, "");		
					
				КонецЦикла; 
				
				ТекстТаблицаИдентификаторов = "";
				
				Для Сч = 0 По РазмерПорции - 1 Цикл
				
					ТекИндекс = (НомерПорции - 1) * РазмерПорции + Сч;
					Если ТекИндекс > МаксимальныйИндекс Тогда
						Прервать;					
					КонецЕсли; 
					
					СтрокаДанных = СписокБанковскихВыписок_Обновить[ТекИндекс];
				
					Если Не ЗначениеЗаполнено(СтрокаДанных.ДокументСсылка) Тогда
						Продолжить;			
					КонецЕсли; 
					
					ОтработанныеСтроки.Добавить(СтрокаДанных);
					
					ТекстТаблицаИдентификаторов = ТекстТаблицаИдентификаторов
													+ ?(ПустаяСтрока(ТекстТаблицаИдентификаторов)
														, ""
														, ТекстОбъединение
														)
													+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТаблицаИдентифкаторов
														//, SQL_Строка(СтрокаДанных.WRITEOFFNUM)
														//, SQL_Дата(СтрокаДанных.TRANSDATE)
														, SQL_Строка(СтрокаДанных.UID1C)
														, SQL_Число(СтрокаДанных.OPERTYPE)
														)
													;
													
					Для каждого ИмяПоля Из МассивВыгружаемыхПолей Цикл
						
						ЗначениеПоля = СтрокаДанных[ИмяПоля];
						
						ТипЗначения = ТипЗнч(ЗначениеПоля);
						
						Если ТипЗначения = ТипЧисло Тогда
							ТекстЗначения = SQL_Число(ЗначениеПоля);
						ИначеЕсли ТипЗначения = ТипДата Тогда
							ТекстЗначения = SQL_Дата(ЗначениеПоля);
						Иначе
							ТекстЗначения = SQL_Строка(ЗначениеПоля); 
						КонецЕсли; 
						
						ТекстУсловногоЗначения = ТекстыУсловныеЗначенийПолей[ИмяПоля];
						ТекстУсловногоЗначения = ТекстУсловногоЗначения
													+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонУсловногоЗначения
														//, SQL_Строка(СтрокаДанных.WRITEOFFNUM)
														//, SQL_Дата(СтрокаДанных.TRANSDATE)
														, SQL_Строка(СтрокаДанных.UID1C)
														, SQL_Число(СтрокаДанных.OPERTYPE)
														, ТекстЗначения
														)
													;
													
						ТекстыУсловныеЗначенийПолей.Вставить(ИмяПоля, ТекстУсловногоЗначения);
					
					КонецЦикла; 								
													
				КонецЦикла;
			
				ТекстОбновляемыеПоля = "";
				
				Для каждого ИмяПоля Из МассивВыгружаемыхПолей Цикл
				
					ТекстОбновляемыеПоля = ТекстОбновляемыеПоля
											+ ?(ПустаяСтрока(ТекстОбновляемыеПоля)
												, ""
												, ","
												)
											+  СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗначенияПоля
												, ИмяПоля
												, ТекстыУсловныеЗначенийПолей[ИмяПоля]
												)
											;
				
				КонецЦикла; 
				
				//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
				Если ТипЗнч(СтрокаДанных.ДокументДвижения) = Тип("ДокументСсылка.ОперацияБух") Тогда
					Если СтрокаДанных.ДокументДвижения_Выгружен Тогда
						ТестПоле_POSTED = "SET POSTED = (CASE WHEN POSTED = 4 THEN 4 ELSE 2 END)";
					Иначе
						//ТестПоле_POSTED = "SET POSTED = (CASE WHEN POSTED = 1 THEN 4 ELSE 2 END)";
						ТестПоле_POSTED = "SET POSTED = 4";
					КонецЕсли;	
				Иначе
					ТестПоле_POSTED = "SET POSTED = (CASE WHEN POSTED = 0 THEN 0 ELSE 2 END)";
				КонецЕсли;	
				//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077)
				
				ШаблонЗапросаSQL_Обновление = 
				"USE %BaseName
				|UPDATE %TableName
				//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
				//|SET POSTED = (CASE WHEN POSTED = 0 THEN 0 ELSE 2 END),
				|" + ТестПоле_POSTED + ",
				//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077)
				|%ТекстОбновляемыеПоля
				|FROM %TableName AS A
				|INNER JOIN (%ТекстТаблицаИдентификаторов) AS B
				//|ON A.WRITEOFFNUM = B.WRITEOFFNUM AND A.TRANSDATE = B.TRANSDATE";
				|ON A.UID1C = B.UID1C AND A.OPERTYPE = B.OPERTYPE";
				
				ТекстЗапросаSQL_Обновление = СтрЗаменить(ШаблонЗапросаSQL_Обновление, "%BaseName", ПараметрыСоединения.База); 
				ТекстЗапросаSQL_Обновление = СтрЗаменить(ТекстЗапросаSQL_Обновление, "%TableName", "dbo.ExportDataFrom1cLedgerTrans"); 
				ТекстЗапросаSQL_Обновление = СтрЗаменить(ТекстЗапросаSQL_Обновление, "%ТекстОбновляемыеПоля", ТекстОбновляемыеПоля); 
				ТекстЗапросаSQL_Обновление = СтрЗаменить(ТекстЗапросаSQL_Обновление, "%ТекстТаблицаИдентификаторов", ТекстТаблицаИдентификаторов); 
				
				ЗапросSQL.CommandText = ТекстЗапросаSQL_Обновление;
				
				Попытка
					
					ЗапросSQL.Execute();										
					
				Исключение
					Сообщить("Не удалось выполнить запрос обновления полей таблицы банковских выписок: " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					Отказ = Истина;
				КонецПопытки;
				
			КонецЦикла;
			
			Если Не Отказ Тогда
				Для каждого СтрокаДанных Из ОтработанныеСтроки Цикл
					
					//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
					//ДокументСсылка = СтрокаДанных.ДокументСсылка;
					ДокументСсылка = СтрокаДанных.ДокументДвижения;
					//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077)
					
					Если Не ЗначениеЗаполнено(ДокументСсылка) Тогда
						Продолжить;			
					КонецЕсли; 
					
					ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
					ДокументОбъект.ОбменДанными.Загрузка = Истина;
					
					ДокументОбъект.ДополнительныеСвойства.Вставить("НеСбрасыватьПризнакВыгрузки");
					
					ДокументОбъект.СБ_ВыгруженВAXAPTA 				= Истина;
					ДокументОбъект.СБ_ВыгруженВAXAPTA_Актуальный 	= Истина;
					
					ДокументОбъект.Записать();
					
					//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
					//СтрокаДанных.Выгружен 				= Истина;
					//СтрокаДанных.Выгружен_Актуальный 	= Истина;
					СтрокаДанных.ДокументДвижения_Выгружен 				= Истина;
					СтрокаДанных.ДокументДвижения_Выгружен_Актуальный 	= Истина;
					//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077)
					
				КонецЦикла; 
			КонецЕсли; 
		КонецЕсли; 
	
	КонецЕсли;
	
	Если Не Отказ Тогда
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-05-21 (#МДМ)
		//Элементы.БанковскиеВыпискиAXAPTA.Обновить();
		Если ДоступнаВыгрузкаДанныхЗаявок Тогда
			Элементы.БанковскиеВыпискиAXAPTA.Обновить();
		Иначе
			Элементы.БанковскиеВыпискиAXAPTAЛоджистикс.Обновить();
		КонецЕсли;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-05-21 (#МДМ)
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСостояниеСоединенияСВнешнимИсточником()

	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-05-21 (#МДМ)
	Элементы.ТаблицаЭкспортаДанныхAXAPTA.Видимость = ДоступнаВыгрузкаДанныхЗаявок;
	Элементы.ТаблицаЭкспортаДанныхAXAPTAЛоджистикс.Видимость = НЕ ДоступнаВыгрузкаДанныхЗаявок;
	Элементы.СписокБанковскихВыписокCONTRACTCODE1C.Видимость = ДоступнаВыгрузкаДанныхЗаявок;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-05-21 (#МДМ)
	
	ЕстьПодлючение = Ложь;
	
	//СостояниеПодключения = ВнешниеИсточникиДанных.СБ_БанковскиеВыпискиAXAPTA.ПолучитьСостояние();
	//Если СостояниеПодключения = СостояниеВнешнегоИсточникаДанных.Отключен Тогда
	//	
		ОписаниеПроблемы = "";
		Если НЕ Обработки.СБ_ВыгрузкаБанковскихВыписокВAXAPTA.УстановитьСоединение(Организация, ОписаниеПроблемы) Тогда
			
			ОписаниеОшибкиПодключения = ОписаниеПроблемы;
			
		Иначе
			
			ЕстьПодлючение = Истина;
			
		КонецЕсли;
	//Иначе
	//	
	//	ЕстьПодлючение = Истина;
	//	
	//КонецЕсли;
	
	Элементы.ГруппаСостояниеПодключения.ТекущаяСтраница = ?(ЕстьПодлючение
																, Элементы.СтраницаЕстьПодключение
																, Элементы.СтраницаНетПодключения);
	Элементы.СтраницаЕстьПодключение.Видимость = ЕстьПодлючение;
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-05-21 (#МДМ)
	// Для Лоджистикс создана отдельное табличное поле, на котором скрыто поле DOCTYPE
	////ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-08-29 (#3077)
	//// для Лоджистик нет поля DocType, его надо убрать из табличного поля
	//Организация_ОКЕЙ = бит_БК_Общий.ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных("Организации", "Организация ОКЕЙ", ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"));
	//Элементы.БанковскиеВыпискиAXAPTADOCTYPE.Видимость = (Организация = Организация_ОКЕЙ);	
	////ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-08-29 (#3077)
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-05-21 (#МДМ)
		
КонецПроцедуры

&НаКлиенте
Процедура ВыбПериодЗаявкиНажатие(Команда)
	ДиалогРедактированияПериода = Новый ДиалогРедактированияСтандартногоПериода;	
	
	ДиалогРедактированияПериода.Период.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
	ДиалогРедактированияПериода.Период.ДатаНачала = НачалоПериодаОтбораЗакрытыхЗаявок;
	ДиалогРедактированияПериода.Период.ДатаОкончания = КонецПериодаОтбораЗакрытыхЗаявок;
	
	Если ДиалогРедактированияПериода.Редактировать() Тогда
		НачалоПериодаОтбораЗакрытыхЗаявок = НачалоДня(ДиалогРедактированияПериода.Период.ДатаНачала);
		КонецПериодаОтбораЗакрытыхЗаявок = КонецДня(ДиалогРедактированияПериода.Период.ДатаОкончания);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбПериодБВНажатие(Команда)
	ДиалогРедактированияПериода = Новый ДиалогРедактированияСтандартногоПериода;	
	
	ДиалогРедактированияПериода.Период.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
	ДиалогРедактированияПериода.Период.ДатаНачала = НачалоПериодаОтбораБанковскихВыписок;
	ДиалогРедактированияПериода.Период.ДатаОкончания = КонецПериодаОтбораБанковскихВыписок;
	
	Если ДиалогРедактированияПериода.Редактировать() Тогда
		НачалоПериодаОтбораБанковскихВыписок = НачалоДня(ДиалогРедактированияПериода.Период.ДатаНачала);
		КонецПериодаОтбораБанковскихВыписок = КонецДня(ДиалогРедактированияПериода.Период.ДатаОкончания);
	КонецЕсли;
КонецПроцедуры
//БИТ АКриштопов 19022016 <<--

//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Начало 2021-05-22 (#НТП_МП_ФР06)
&НаКлиенте
Процедура ок_НастройкиСпискаПрофилейРазноскиНажатие(Элемент)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Организация", Организация);
	
	ОткрытьФорму("Обработка.СБ_ВыгрузкаБанковскихВыписокВAXAPTA.Форма.ок_НастройкаСпискаПрофилейРазноски", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры
//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Конец 2021-05-22 (#НТП_МП_ФР06)

//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Начало 2021-05-22 (#НТП_МП_ФР06)
&НаСервере
Процедура ок_УстановитьОтображениеЭлементов()
	
	Если Организация = Окей
		И АлгоритмВыгрузкиБанковскихВыписок = 1 Тогда
		
		Элементы.ок_НастройкиСпискаПрофилейРазноски.Видимость = Истина;
	Иначе
		Элементы.ок_НастройкиСпискаПрофилейРазноски.Видимость = Ложь;	
	КонецЕсли;
	
КонецПроцедуры
//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Конец 2021-05-22 (#НТП_МП_ФР06)

//ОКЕЙ Первухин В.С. (ПервыйБИТ) Начало 2021-07-13 (ФР-МП-08)      
&НаКлиенте
Процедура Подключаемый_ПодобратьСписокБанковскихВыписок(Команда)
	
	СписокВыбора	=	Новый СписокЗначений;
	СписокВыбора.Добавить("ОперацияБух", 				"Операция");
	СписокВыбора.Добавить("ПоступлениеНаРасчетныйСчет", "Поступление на расчетный счет");
	СписокВыбора.Добавить("СписаниеСРасчетногоСчета",	"Списание с расчетного счета");
	
	ОписаниеОповещения	=	Новый ОписаниеОповещения("ок_ВыборТипаДокументаЗавершение", ЭтаФорма);
	
	СписокВыбора.ПоказатьВыборЭлемента(ОписаниеОповещения, "Выберите тип документа");
	
КонецПроцедуры

&НаКлиенте
Процедура ок_ВыборТипаДокументаЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ТипДокумента		=	ВыбранныйЭлемент.Значение;
	ПараметрыОткрытия	=	Новый Структура;
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);
	
	ОписаниеОповещения	=	Новый ОписаниеОповещения("ок_ПодобратьСписокБанковскихВыписокЗавершение", ЭтаФорма);
	ОткрытьФорму("Документ." + ТипДокумента + ".ФормаВыбора", ПараметрыОткрытия, ЭтаФорма, 
		Новый УникальныйИдентификатор, , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ок_ПодобратьСписокБанковскихВыписокЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Если Не ТипЗнч(РезультатЗакрытия) = Тип("Массив") Тогда
		Возврат;	
	КонецЕсли;
	
	ок_ПодобратьСписокБанковскихВыписокНаСервере(РезультатЗакрытия);
	
КонецПроцедуры

&НаСервере
Процедура ок_ПодобратьСписокБанковскихВыписокНаСервере(МассивСсылок)
	
	Запрос 			=	Новый Запрос;
	Запрос.Текст	=	ок_ТекстЗапросаДанныеПодбораБанковскихВыписокДляВыгрузки(Организация);
	Запрос.УстановитьПараметр("ВалютаРегУчета",				ВалютаРеглУчета);
    Запрос.УстановитьПараметр("НачалоПериода",				НачалоДня(НачалоПериодаОтбораБанковскихВыписок));
    Запрос.УстановитьПараметр("КонецПериода",				КонецДня(КонецПериодаОтбораБанковскихВыписок));
	Запрос.УстановитьПараметр("Свойство_СрокИсполнения",	СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("Свойство_СрокИсполнения"));
	Запрос.УстановитьПараметр("МассивЗапрещенныхСсылок",	СписокБанковскихВыписок.Выгрузить(, "ДокументСсылка").ВыгрузитьКолонку("ДокументСсылка"));
	Запрос.УстановитьПараметр("Организация",				Организация);
	Запрос.УстановитьПараметр("МассивСсылок",				МассивСсылок);
	
	Результат	=	Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		ПрефиксОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "Префикс");
		
		Выборка	=	Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока	=	СписокБанковскихВыписок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			ORDERID = НоваяСтрока.ORDERID;
			Префикс = ПрефиксОрганизации;
			
			Если Лев(ORDERID, СтрДлина(Префикс)) = Префикс Тогда
				ORDERID = Сред(ORDERID, СтрДлина(Префикс) + 1); 	
			КонецЕсли; 
			
			Пока Лев(ORDERID, 1) = "0" Цикл
				ORDERID = Сред(ORDERID, 2); 	
			КонецЦикла; 
			
			НоваяСтрока.ORDERID 	= ORDERID;
			НоваяСтрока.UID1C 		= XMLСтрока(НоваяСтрока.ДокументСсылка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ок_ТекстЗапросаДанныеПодбораБанковскихВыписокДляВыгрузки(ОрганизацияОбработки)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	1 КАК ТипДокумента,
	|	1 КАК ТипОперации,
	|	СписаниеСРасчетногоСчета.Ссылка КАК Регистратор,
	|	СписаниеСРасчетногоСчета.СчетОрганизации КАК БанковскийСчет,
	|	ЕСТЬNULL(СписаниеРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств, ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)) КАК СтатьяДДС,
	|	СписаниеСРасчетногоСчета.Контрагент КАК Контрагент,
	|	ЕСТЬNULL(СписаниеРасшифровкаПлатежа.ДоговорКонтрагента, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК ДоговорКонтрагента,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(СписаниеРасшифровкаПлатежа.КратностьВзаиморасчетов, 0) = 0
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(СписаниеРасшифровкаПлатежа.СуммаПлатежа, 0) * ЕСТЬNULL(СписаниеРасшифровкаПлатежа.КурсВзаиморасчетов, 0) / ЕСТЬNULL(СписаниеРасшифровкаПлатежа.КратностьВзаиморасчетов, 0)
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ЕСТЬNULL(СписаниеРасшифровкаПлатежа.СуммаПлатежа, 0)) КАК ВалютнаяСумма,
	|	СписаниеСРасчетногоСчета.ВалютаДокумента КАК Валюта,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA КАК Выгружен,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA_Актуальный КАК Выгружен_Актуальный,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA КАК ДокументДвижения_Выгружен,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA_Актуальный КАК ДокументДвижения_Выгружен_Актуальный,
	|	СписаниеСРасчетногоСчета.СБ_ПрофильРазноски КАК ПрофильРазноски,
	|	СписаниеСРасчетногоСчета.Номер КАК WRITEOFFNUM,
	|	СписаниеСРасчетногоСчета.Дата КАК TRANSDATE,
	|	ПОДСТРОКА(СписаниеСРасчетногоСчета.НазначениеПлатежа, 1, 250) КАК TXT,
	|	СписаниеСРасчетногоСчета.НомерВходящегоДокумента КАК ORDERID,
	|	ЗначенияСвойствОбъектов.Значение КАК DUEDATE,
	|	СписаниеСРасчетногоСчета.Ссылка КАК ДокументВыгрузки
	|ПОМЕСТИТЬ Т_Документов
	|ИЗ
	|	Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеСРасчетногоСчета.РасшифровкаПлатежа КАК СписаниеРасшифровкаПлатежа
	|		ПО СписаниеСРасчетногоСчета.Ссылка = СписаниеРасшифровкаПлатежа.Ссылка
	|			И (СписаниеРасшифровкаПлатежа.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ЗначенияСвойствОбъектов
	|			ПО ПлатежноеПоручение.Ссылка = ЗначенияСвойствОбъектов.Объект
	|				И (ЗначенияСвойствОбъектов.Свойство = &Свойство_СрокИсполнения)
	|		ПО СписаниеСРасчетногоСчета.Ссылка = ПлатежноеПоручение.ДокументОснование
	|ГДЕ
	|	СписаниеСРасчетногоСчета.Ссылка В(&МассивСсылок)
	|	И НЕ СписаниеСРасчетногоСчета.Ссылка В (&МассивЗапрещенныхСсылок)
	|
	|СГРУППИРОВАТЬ ПО
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA_Актуальный,
	|	СписаниеСРасчетногоСчета.СБ_ПрофильРазноски,
	|	СписаниеСРасчетногоСчета.Номер,
	|	СписаниеСРасчетногоСчета.Дата,
	|	ПОДСТРОКА(СписаниеСРасчетногоСчета.НазначениеПлатежа, 1, 250),
	|	СписаниеСРасчетногоСчета.НомерВходящегоДокумента,
	|	ЗначенияСвойствОбъектов.Значение,
	|	СписаниеСРасчетногоСчета.Ссылка,
	|	СписаниеСРасчетногоСчета.СчетОрганизации,
	|	ЕСТЬNULL(СписаниеРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств, ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)),
	|	СписаниеСРасчетногоСчета.Контрагент,
	|	ЕСТЬNULL(СписаниеРасшифровкаПлатежа.ДоговорКонтрагента, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)),
	|	СписаниеСРасчетногоСчета.ВалютаДокумента,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA,
	|	СписаниеСРасчетногоСчета.СБ_ВыгруженВAXAPTA_Актуальный,
	|	СписаниеСРасчетногоСчета.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	ПоступлениеНаРасчетныйСчет.Ссылка,
	|	ПоступлениеНаРасчетныйСчет.СчетОрганизации,
	|	ЕСТЬNULL(ПоступлениеРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств, ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)),
	|	ПоступлениеНаРасчетныйСчет.Контрагент,
	|	ЕСТЬNULL(ПоступлениеРасшифровкаПлатежа.ДоговорКонтрагента, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)),
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ПоступлениеРасшифровкаПлатежа.КратностьВзаиморасчетов, 0) = 0
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(ПоступлениеРасшифровкаПлатежа.СуммаПлатежа, 0) * ЕСТЬNULL(ПоступлениеРасшифровкаПлатежа.КурсВзаиморасчетов, 0) / ЕСТЬNULL(ПоступлениеРасшифровкаПлатежа.КратностьВзаиморасчетов, 0)
	|		КОНЕЦ),
	|	СУММА(ЕСТЬNULL(ПоступлениеРасшифровкаПлатежа.СуммаПлатежа, 0)),
	|	ПоступлениеНаРасчетныйСчет.ВалютаДокумента,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA_Актуальный,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA_Актуальный,
	|	ПоступлениеНаРасчетныйСчет.СБ_ПрофильРазноски,
	|	ПоступлениеНаРасчетныйСчет.Номер,
	|	ПоступлениеНаРасчетныйСчет.Дата,
	|	ПОДСТРОКА(ПоступлениеНаРасчетныйСчет.НазначениеПлатежа, 1, 250),
	|	ПоступлениеНаРасчетныйСчет.НомерВходящегоДокумента,
	|	NULL,
	|	ПоступлениеНаРасчетныйСчет.Ссылка
	|ИЗ
	|	Документ.ПоступлениеНаРасчетныйСчет КАК ПоступлениеНаРасчетныйСчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеНаРасчетныйСчет.РасшифровкаПлатежа КАК ПоступлениеРасшифровкаПлатежа
	|		ПО ПоступлениеНаРасчетныйСчет.Ссылка = ПоступлениеРасшифровкаПлатежа.Ссылка
	|			И (ПоступлениеРасшифровкаПлатежа.НомерСтроки = 1)
	|ГДЕ
	|	ПоступлениеНаРасчетныйСчет.Ссылка В(&МассивСсылок)
	|	И НЕ ПоступлениеНаРасчетныйСчет.Ссылка В (&МассивЗапрещенныхСсылок)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA_Актуальный,
	|	ПоступлениеНаРасчетныйСчет.СБ_ПрофильРазноски,
	|	ПоступлениеНаРасчетныйСчет.Номер,
	|	ПоступлениеНаРасчетныйСчет.Дата,
	|	ПОДСТРОКА(ПоступлениеНаРасчетныйСчет.НазначениеПлатежа, 1, 250),
	|	ПоступлениеНаРасчетныйСчет.НомерВходящегоДокумента,
	|	ПоступлениеНаРасчетныйСчет.Ссылка,
	|	ПоступлениеНаРасчетныйСчет.СчетОрганизации,
	|	ЕСТЬNULL(ПоступлениеРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств, ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)),
	|	ПоступлениеНаРасчетныйСчет.Контрагент,
	|	ЕСТЬNULL(ПоступлениеРасшифровкаПлатежа.ДоговорКонтрагента, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)),
	|	ПоступлениеНаРасчетныйСчет.ВалютаДокумента,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA,
	|	ПоступлениеНаРасчетныйСчет.СБ_ВыгруженВAXAPTA_Актуальный,
	|	ПоступлениеНаРасчетныйСчет.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Т_Документов.СтатьяДДС КАК СтатьяДДС,
	|	МАКСИМУМ(бит_ок_СопоставлениеАналитики.КодАналитикиАксапты) КАК КодАксаптыСтатьиДДС
	|ПОМЕСТИТЬ Т_СоответствиеАналитики_СтатьиДДС
	|ИЗ
	|	Т_Документов КАК Т_Документов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ок_СопоставлениеАналитики КАК бит_ок_СопоставлениеАналитики
	|		ПО Т_Документов.СтатьяДДС = бит_ок_СопоставлениеАналитики.Аналитика1С
	|			И (бит_ок_СопоставлениеАналитики.Организация = &Организация)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.СБ_ЗагрузкаПД_AXAPTA_ТипОбъектаСтатьяДДС КАК СБ_ЗагрузкаПД_AXAPTA_ТипОбъектаСтатьяДДС
	|		ПО (бит_ок_СопоставлениеАналитики.Тип1С = СБ_ЗагрузкаПД_AXAPTA_ТипОбъектаСтатьяДДС.Значение)
	|
	|СГРУППИРОВАТЬ ПО
	|	Т_Документов.СтатьяДДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(бит_ДополнительныеАналитики.ЗначениеАналитики КАК Документ.бит_ПлатежнаяПозиция) КАК ПлатежнаяПозиция,
	|	ДокументыСписания.ДокументВыгрузки КАК ПлатежныйДокумент
	|ПОМЕСТИТЬ Т_ПлатежПозиции
	|ИЗ
	|	Т_Документов КАК ДокументыСписания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_ДополнительныеАналитики КАК бит_ДополнительныеАналитики
	|		ПО ДокументыСписания.ДокументВыгрузки = бит_ДополнительныеАналитики.Объект
	|			И (бит_ДополнительныеАналитики.Аналитика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_ВидыДополнительныхАналитик.ПлатежнаяПозиция))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	бит_ДокументыМножественнойОплаты.ПлатежнаяПозиция,
	|	ДокументыСписания.ДокументВыгрузки
	|ИЗ
	|	Т_Документов КАК ДокументыСписания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_ДокументыМножественнойОплаты КАК бит_ДокументыМножественнойОплаты
	|		ПО ДокументыСписания.ДокументВыгрузки = бит_ДокументыМножественнойОплаты.ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(бит_ЗаявкаНаРасходованиеСредств.СБ_ИдентификаторЗаписиAXAPTA) КАК СБ_ИдентификаторЗаписиAXAPTA,
	|	ПлатежныеДокументы.ПлатежныйДокумент КАК ПлатежныйДокумент
	|ПОМЕСТИТЬ Т_ЗаявкаНаРасходАксапта
	|ИЗ
	|	Т_ПлатежПозиции КАК ПлатежныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ПлатежнаяПозиция КАК бит_ПлатежнаяПозиция
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ЗаявкаНаРасходованиеСредств КАК бит_ЗаявкаНаРасходованиеСредств
	|			ПО бит_ПлатежнаяПозиция.ДокументОснование = бит_ЗаявкаНаРасходованиеСредств.Ссылка
	|		ПО ПлатежныеДокументы.ПлатежнаяПозиция = бит_ПлатежнаяПозиция.Ссылка
	|ГДЕ
	|	бит_ЗаявкаНаРасходованиеСредств.СБ_ИдентификаторЗаписиAXAPTA <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлатежныеДокументы.ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанныхДляОбраотки.ДоговорКонтрагента КАК Договор
	|ПОМЕСТИТЬ ВТ_Договора
	|ИЗ
	|	Т_Документов КАК ТаблицаДанныхДляОбраотки
	|ГДЕ
	|	ТаблицаДанныхДляОбраотки.ДоговорКонтрагента ССЫЛКА Справочник.ДоговорыКонтрагентов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанныхДляОбраотки.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Договора.Договор КАК Договор,
	|	МАКСИМУМ(ЕСТЬNULL(СопоставлениеАналитики_ОсновноеСопоставление.КодАналитикиАксапты, СопоставлениеАналитики_НеОсновноеСопоставление.КодАналитикиАксапты)) КАК КодАналитикиАксапты
	|ПОМЕСТИТЬ ВТ_Договоры_СопоставлениеАналитики
	|ИЗ
	|	ВТ_Договора КАК Договора
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ок_СопоставлениеАналитики КАК СопоставлениеАналитики_ОсновноеСопоставление
	|		ПО (СопоставлениеАналитики_ОсновноеСопоставление.Организация = &Организация)
	|			И Договора.Договор = СопоставлениеАналитики_ОсновноеСопоставление.Аналитика1С
	|			И (СопоставлениеАналитики_ОсновноеСопоставление.ок_ОсновноеСопоставление)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ок_СопоставлениеАналитики КАК СопоставлениеАналитики_НеОсновноеСопоставление
	|		ПО (СопоставлениеАналитики_ОсновноеСопоставление.КодАналитикиАксапты ЕСТЬ NULL)
	|			И (СопоставлениеАналитики_НеОсновноеСопоставление.Организация = &Организация)
	|			И Договора.Договор = СопоставлениеАналитики_НеОсновноеСопоставление.Аналитика1С
	|			И (НЕ СопоставлениеАналитики_НеОсновноеСопоставление.ок_ОсновноеСопоставление)
	|
	|СГРУППИРОВАТЬ ПО
	|	Договора.Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Т_Документов.ТипДокумента КАК DOCTYPE,
	|	Т_Документов.ТипОперации КАК OPERTYPE,
	|	Т_Документов.ДокументВыгрузки КАК ДокументСсылка,
	|	Т_Документов.Регистратор КАК ДокументДвижения,
	|	Т_Документов.СтатьяДДС КАК СтатьяДвиженияДенежныхСредств,
	|	Т_Документов.Контрагент КАК Контрагент,
	|	Т_Документов.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Т_Документов.Сумма КАК AMOUNTMST,
	|	Т_Документов.ВалютнаяСумма КАК AMOUNTCUR,
	|	Т_Документов.Выгружен КАК Выгружен,
	|	Т_Документов.Выгружен_Актуальный КАК Выгружен_Актуальный,
	|	Т_Документов.ДокументДвижения_Выгружен КАК ДокументДвижения_Выгружен,
	|	Т_Документов.ДокументДвижения_Выгружен_Актуальный КАК ДокументДвижения_Выгружен_Актуальный,
	|	Т_Документов.ПрофильРазноски КАК POSTINGPROFILE,
	|	Т_Документов.WRITEOFFNUM КАК WRITEOFFNUM,
	|	Т_Документов.TRANSDATE КАК TRANSDATE,
	|	Т_Документов.TXT КАК TXT,
	|	Т_Документов.ORDERID КАК ORDERID,
	|	Т_Документов.DUEDATE КАК DUEDATE,
	|	ВЫБОР СопоставлениеТипКонрагента.ЗначениеАналитики
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.Поставщик)
	|			ТОГДА 1
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.Клиент)
	|			ТОГДА 2
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.СчетГлавнойКниги)
	|			ТОГДА 3
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.ПодотчетноеЛицо)
	|			ТОГДА 4
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ACCOUNTTYPE,
	|	ВЫБОР
	|		КОГДА СопоставлениеТипКонрагента.ЗначениеАналитики = ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.СчетГлавнойКниги)
	|			ТОГДА Т_Документов.ПрофильРазноски
	|		КОГДА СопоставлениеТипКонрагента.ЗначениеАналитики = ЗНАЧЕНИЕ(Перечисление.СБ_ТипСчетаAXAPTA.ПодотчетноеЛицо)
	|			ТОГДА Т_Документов.ПрофильРазноски
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Т_Документов.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	|					ТОГДА Т_Документов.Контрагент.НомДокИмпорт2
	|				ИНАЧЕ Т_Документов.Контрагент.НомДокИмпорт
	|			КОНЕЦ
	|	КОНЕЦ КАК ACCOUNTNUM,
	|	Т_СоответствиеАналитики_СтатьиДДС.КодАксаптыСтатьиДДС КАК DIMENSION2_,
	|	ЕСТЬNULL(Т_ЗаявкаНаРасходАксапта.СБ_ИдентификаторЗаписиAXAPTA, 0) КАК RECID,
	|	Т_Документов.ДоговорКонтрагента.бит_НомерАХ КАК RCONTRACTACCOUNT,
	|	Т_Документов.ДоговорКонтрагента.бит_RECID КАК CONTRACTRECID,
	|	ЕСТЬNULL(Договоры_СопоставлениеАналитики.КодАналитикиАксапты, """") КАК CONTRACTCODE1C,
	|	Т_Документов.БанковскийСчет.НомерСчета КАК BANKACCOUNTNUM,
	|	Т_Документов.БанковскийСчет.Банк.Код КАК BankBIC,
	|	СопоставлениеВалюты.Аналитика КАК CURRENCYCODE,
	|	0 КАК TAXTYPE,
	|	0 КАК TAXAMOUNTCUR
	|ИЗ
	|	Т_Документов КАК Т_Документов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СБ_ЗагрузкаПД_СопоставлениеКодовАналитикиAXAPTA КАК СопоставлениеТипКонрагента
	|		ПО Т_Документов.ПрофильРазноски = СопоставлениеТипКонрагента.Аналитика
	|			И (СопоставлениеТипКонрагента.ВидАналитики = ЗНАЧЕНИЕ(Перечисление.СБ_ЗагрузкаПД_ВидыАналитикКодовAXAPTA.ТипКонтрагента))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Т_СоответствиеАналитики_СтатьиДДС КАК Т_СоответствиеАналитики_СтатьиДДС
	|		ПО Т_Документов.СтатьяДДС = Т_СоответствиеАналитики_СтатьиДДС.СтатьяДДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Т_ЗаявкаНаРасходАксапта КАК Т_ЗаявкаНаРасходАксапта
	|		ПО Т_Документов.ДокументВыгрузки = Т_ЗаявкаНаРасходАксапта.ПлатежныйДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СБ_ЗагрузкаПД_СопоставлениеКодовАналитикиAXAPTA КАК СопоставлениеВалюты
	|		ПО (СопоставлениеВалюты.ЗначениеАналитики = Т_Документов.Валюта)
	|			И (СопоставлениеВалюты.ВидАналитики = ЗНАЧЕНИЕ(Перечисление.СБ_ЗагрузкаПД_ВидыАналитикКодовAXAPTA.Валюта))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Договоры_СопоставлениеАналитики КАК Договоры_СопоставлениеАналитики
	|		ПО Т_Документов.ДоговорКонтрагента = Договоры_СопоставлениеАналитики.Договор
	|ГДЕ
	|	НЕ ЕСТЬNULL(Т_Документов.ДокументДвижения_Выгружен_Актуальный, ИСТИНА)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	NULL,
	|	ОперацияБух.Ссылка,
	|	ОперацияБух.Ссылка,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.ОперацияБух КАК ОперацияБух
	|ГДЕ
	|	ОперацияБух.Ссылка В(&МассивСсылок)
	|	И НЕ ОперацияБух.Ссылка В (&МассивЗапрещенныхСсылок)"
	;
		
	Организация_Лоджистикс = бит_БК_Общий.ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных("Организации", "Организация Лоджистикс", ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"));
	Если ОрганизацияОбработки = Организация_Лоджистикс Тогда
		// для организации Окей Лоджистик выгружаем ставку НДС, 15 = 18% или 20% (с 2019)
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "0 КАК TAXTYPE,", "15 КАК TAXTYPE,");
	КонецЕсли;	
			
	Возврат ТекстЗапроса;
	
КонецФункции	

//ОКЕЙ Первухин В.С. (ПервыйБИТ) Конец 2021-07-13 (ФР-МП-08) 

//ОКЕЙ Первухин В.С. (ПервыйБИТ) Начало 2021-07-13 (ФР-МП-08)      

// Изменена колонка "ДокументСсылка" реквизита формы "СписокБанковскихВыписок" - расширен тип на документ ОперацияБух

//ОКЕЙ Первухин В.С. (ПервыйБИТ) Конец 2021-07-13 (ФР-МП-08)
