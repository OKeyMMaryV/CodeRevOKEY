#Область ОписаниеПеременных

&НаКлиенте 
Перем мКэшРеквизитовФормы;

#КонецОбласти

&НаКлиенте
Процедура Заполнить(Команда)
	Если ПроверитьЗаполнение() Тогда
	ЗаполнитьДанныеДляДокументовНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	Если не ДанныеДляДокументов.Количество() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнена табличная часть для формирования документов.");
		возврат;
	КонецЕсли;
	
	СоздатьДокументыНаСервере();
	ОбщегоНазначенияКлиент.СообщитьПользователю("Формирование документов завершено");
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбработатьИзменениеРеквизита("Организация");
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеРеквизита(ИмяРеквизита)
	Если ИмяРеквизита<>"Контрагенты" Тогда
	ТекущееЗначениеРеквизита = мКэшРеквизитовФормы[ИмяРеквизита];
		Если ТекущееЗначениеРеквизита = ЭтотОбъект[ИмяРеквизита] Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ПараметрыОповещения = Новый Структура("ИмяРеквизита", ИмяРеквизита);
	ОповещениеВопрос = Новый ОписаниеОповещения("ВопросРеквизитПриИзменении", ЭтотОбъект, ПараметрыОповещения);
	Если ДанныеДляДокументов.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru = 'Изменен реквизит "+ИмяРеквизита+". Данные табличной части будут очищены. Продолжить?'");
		ПоказатьВопрос(ОповещениеВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 15, КодВозвратаДиалога.Нет);
	Иначе
		ДобавитьВКэш(ИмяРеквизита);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Организация = бит_БК_Общий.ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных("Организации", "Организация ОКЕЙ");
КонецПроцедуры

&НаКлиенте
Процедура ВыборПериодаНажатие(Элемент)
	
	ДиалогРедактированияПериода = Новый ДиалогРедактированияСтандартногоПериода;	
	
	ДиалогРедактированияПериода.Период.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
	ДиалогРедактированияПериода.Период.ДатаНачала = НачалоПериода;
	ДиалогРедактированияПериода.Период.ДатаОкончания = КонецПериода;
	
	Если ДиалогРедактированияПериода.Редактировать() Тогда
		
		НачалоПериода = НачалоДня(ДиалогРедактированияПериода.Период.ДатаНачала);
		КонецПериода = КонецДня(ДиалогРедактированияПериода.Период.ДатаОкончания);
		КонецПериодаПриИзменении(Элементы.КонецПериода);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеДляДокументовНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.Субконто1 КАК Контрагент,
	               |	ХозрасчетныйОстатки.Субконто2 КАК ДоговорКонтрагента,
   	               |	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).Объект КАК Объект,
	               |	ХозрасчетныйОстатки.СуммаОстатокКт КАК Сумма,
	               |	ХозрасчетныйОстатки.СуммаОстатокКт * &ПроцентВознаграждения/100 КАК СуммаВознаграждения,
	               |	МИНИМУМ(НоменклатурныеГруппы.Ссылка) КАК НоменклатурнаяГруппа
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПрочимиПокупателямиИЗаказчиками), , Организация = &Организация %УсловиеПоКонтрагентам%) КАК ХозрасчетныйОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
	               |		ПО (ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).Объект = НоменклатурныеГруппы.Объект
	               |				И НоменклатурныеГруппы.Ссылка В ИЕРАРХИИ (&Группа))
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ХозрасчетныйОстатки.Субконто1,
	               |	ХозрасчетныйОстатки.Субконто2,
				   |	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).Объект,
	               |	ХозрасчетныйОстатки.СуммаОстатокКт,
	               |	ХозрасчетныйОстатки.СуммаОстатокКт * &ПроцентВознаграждения/100";
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода)+1);
	Запрос.УстановитьПараметр("ПроцентВознаграждения", ПроцентВознаграждения);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	НоменклатурнаяГруппа = ОК_ОбщегоНазначения.ПолучитьЗначениеУниверсальнойНастройки("Розница","НоменклатурныеГруппы_Лотерея");
	Запрос.УстановитьПараметр("Группа", НоменклатурнаяГруппа);

	// %УсловиеПоКонтрагентам%
	Если Контрагенты.Количество() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеПоКонтрагентам%", " И ВЫРАЗИТЬ(Субконто1 КАК Справочник.Контрагенты) В (&СписокКонтрагентов)");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеПоКонтрагентам%"," И ВЫРАЗИТЬ(Субконто1 КАК Справочник.Контрагенты).бит_ГруппаКлиентов = ЗНАЧЕНИЕ(Перечисление.бит_ГруппаКлиентов.Розница)");
	КонецЕсли;
	Запрос.УстановитьПараметр("СписокКонтрагентов", Контрагенты.Выгрузить().ВыгрузитьКолонку("Контрагент"));
	
	ДанныеДляДокументов.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументыНаСервере()
	СоздатьДокументОперацияБух();
	СоздатьДокументРТиУ();
конецпроцедуры

&НаСервере
Процедура СоздатьДокументОперацияБух()
	ДокОбъект = Документы.ОперацияБух.СоздатьДокумент();
	ДокОбъект.Дата = КонецПериода;
	ДокОбъект.Содержание = "Перенос задолженности на Клиента Столото за период "+Формат(НачалоПериода, "ДЛФ = ДД")+" - "+Формат(КонецПериода, "ДЛФ = ДД");
	ДокОбъект.Организация = Организация;
	ДокОбъект.СуммаОперации = ДанныеДляДокументов.Итог("Сумма");
	ДокОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	Движения = ДокОбъект.Движения;
	Движения.Хозрасчетный.Записывать = Истина;
	Для каждого строка из ДанныеДляДокументов цикл
		НоваяСтрока =  Движения.Хозрасчетный.Добавить();
		
		НоваяСтрока.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПокупателямиИЗаказчиками;
		НоваяСтрока.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты] = строка.Контрагент;
		НоваяСтрока.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры] = строка.ДоговорКонтрагента;
		
		НоваяСтрока.СчетКт = СчетРасчетов;
		НоваяСтрока.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты] = НовыйКонтрагент;
		НоваяСтрока.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры] = НовыйДоговор;
		
		НоваяСтрока.Сумма = Строка.Сумма;
		НоваяСтрока.Активность = истина;
	КонецЦикла;
	
	ДокОбъект.Записать();
	
	Операция = ДокОбъект.Ссылка;
	
конецпроцедуры

&НаСервере
Процедура СоздатьДокументРТиУ()
	ДокОбъект = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	ДокОбъект.Дата = КонецПериода;
	ДокОбъект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Услуги;
	ДокОбъект.Контрагент = НовыйКонтрагент;
	ДокОбъект.ДоговорКонтрагента = НовыйДоговор;
	ДокОбъект.Организация = Организация;
	ДокОбъект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.НеЗачитывать;
	ДокОбъект.ВидЭлектронногоДокумента = Перечисления.ВидыЭД.АктИсполнитель;
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	СтруктураКурсаДокумента      = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРегламентированногоУчета, ДокОбъект.Дата);
	ПараметрыКурсаДокумента = Новый Структура("Валюта, Курс, Кратность", ДокОбъект.ВалютаДокумента, СтруктураКурсаДокумента.Курс, СтруктураКурсаДокумента.Кратность);
	
	ДокОбъект.ВалютаДокумента = ПараметрыКурсаДокумента.Валюта;
	ДокОбъект.КурсВзаиморасчетов = ПараметрыКурсаДокумента.Курс;
	ДокОбъект.КратностьВзаиморасчетов = ПараметрыКурсаДокумента.Кратность;
	ДокОбъект.СуммаВключаетНДС = Ложь;
	ДокОбъект.СчетУчетаРасчетовСКонтрагентом = СчетРасчетов;
	ДокОбъект.СчетУчетаРасчетовПоАвансам = СчетРасчетов;
	ДокОбъект.СчетУчетаРасчетовПоТаре = СчетРасчетов;
	ДокОбъект.СуммаДокумента = ДанныеДляДокументов.Итог("СуммаВознаграждения");
	ДокОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	ДокОбъект.Комментарий = "Агентское вознаграждение за период "+Формат(НачалоПериода, "ДЛФ = ДД")+" - "+Формат(КонецПериода, "ДЛФ = ДД");
	ДокОбъект.ок_ВключитьСчетВПакетЭДО = Ложь;
	
	Номенклатура = ОК_ОбщегоНазначения.ПолучитьЗначениеУниверсальнойНастройки("Розница","Номенклатура_АгентскоеВознаграждение");
	
	ДанныеДляРТиУ = ДанныеДляДокументов.Выгрузить();
	ДанныеДляРТиУ.Свернуть("НоменклатурнаяГруппа", "Сумма, СуммаВознаграждения");
	Для каждого строка из ДанныеДляРТиУ цикл
		НоваяСтрока = ДокОбъект.Услуги.Добавить();
		НоваяСтрока.Номенклатура = Номенклатура;
		НоваяСтрока.Содержание = ?(ЗначениеЗаполнено(Номенклатура),Номенклатура.Наименование,"");
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Цена = строка.СуммаВознаграждения;
		НоваяСтрока.Сумма = строка.СуммаВознаграждения;
		НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		НоваяСтрока.СчетДоходов = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
		НоваяСтрока.Субконто =  строка.НоменклатурнаяГруппа;
		НоваяСтрока.СчетУчетаНДСПоРеализации = ПланыСчетов.Хозрасчетный.Продажи_НДС;
		НоваяСтрока.СчетРасходов = ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД;
	КонецЦикла;
	
	Попытка
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецПопытки;
	
	РТиУ = ДокОбъект.Ссылка;
	
конецпроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Зададим имена реквизитов, подлежащих кешированию.
	мКэшРеквизитовФормы = Новый Структура;
	мКэшРеквизитовФормы.Вставить("НачалоПериода");
	мКэшРеквизитовФормы.Вставить("КонецПериода");
	мКэшРеквизитовФормы.Вставить("Организация");
	мКэшРеквизитовФормы.Вставить("КонецПериода");
	мКэшРеквизитовФормы.Вставить("ПроцентВознаграждения");
	мКэшРеквизитовФормы.Вставить("Контрагенты");

	// Запомним текущие значения реквизитов формы.
	ЗаполнитьТекущиеЗначенияРеквизитовФормы();

КонецПроцедуры

// Обработка оповещения вопроса пользователю. 
// 
// Параметры:
//  Ответ - Строка.
// 
&НаКлиенте
Процедура ВопросРеквизитПриИзменении(Ответ, ПараметрыОповещения) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда 
		ДанныеДляДокументов.Очистить();
		ДобавитьВКэш(ПараметрыОповещения.ИмяРеквизита);
	Иначе
		ИзвлечьИзКэша(ПараметрыОповещения.ИмяРеквизита);
	КонецЕсли;
	
КонецПроцедуры


#Область РаботаСКэшемРеквизитовФормы

// Процедура заполняет кэш реквизитов формы данными объекта.
// 
// Параметры:
//  Нет.
// 
&НаКлиенте 
Процедура ЗаполнитьТекущиеЗначенияРеквизитовФормы()
	
	Для Каждого КлючИЗначение Из мКэшРеквизитовФормы Цикл
		мКэшРеквизитовФормы[КлючИЗначение.Ключ] = ЭтотОбъект[КлючИЗначение.Ключ];
	КонецЦикла; 
	
КонецПроцедуры

// Процедура добавляет в кэш реквизитов текущее значение заданного реквизита.
// 
// Параметры:
// 	ИмяРеквизита - Строка.
// 
&НаКлиенте
Процедура ДобавитьВКэш(ИмяРеквизита)
	
	мКэшРеквизитовФормы[ИмяРеквизита] = ЭтотОбъект[ИмяРеквизита];	
	
КонецПроцедуры

// Процедура извлекает из кэша и присваивает объекту значение заданного реквизита.
// 
// Параметры:
// 	ИмяРеквизита - Строка.
// 
&НаКлиенте
Процедура ИзвлечьИзКэша(ИмяРеквизита)
	
	ЭтотОбъект[ИмяРеквизита] = мКэшРеквизитовФормы[ИмяРеквизита];
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентВознагражденияПриИзменении(Элемент)
	ОбработатьИзменениеРеквизита("ПроцентВознаграждения");
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	ОбработатьИзменениеРеквизита("КонецПериода");
КонецПроцедуры

#КонецОбласти


