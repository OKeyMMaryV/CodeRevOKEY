
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);

	ТекущаяИнформационнаяБаза = Справочники.бит_мпд_ВидыИнформационныхБаз.ТекущаяИнформационнаяБаза;
	
	Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияПравилаРегистрацииИзмененийНажатие(Элемент)
	
	ОткрытьФорму("РегистрСведений.бит_мдм_ПравилаРегистрацииИзменений.ФормаСписка");	
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПравилаПодготовкиОбменаНажатие(Элемент)
	
	ОткрытьФорму("РегистрСведений.бит_мдм_ПравилаПодготовкиОбмена.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМДМПриИзменении(Элемент)
	
	Если НЕ ИспользоватьМДМ Тогда
		
		ТекстВопроса =  НСтр("ru = 'Выключить использование подсистемы MDM?'");
		Оповещение = Новый ОписаниеОповещения("ИспользоватьВопросЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 15, КодВозвратаДиалога.Нет);
		
	Иначе
		
		ПереключитьИспользованиеМДМ();
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура обработчик оповещения "ИспользоватьВопросЗавершение".
// 
// Параметры:
// Ответ - КодВозвратаДиалога.
// ДополнительныеДанные - Структура.
// 
&НаКлиенте 
Процедура ИспользоватьВопросЗавершение(Ответ, ДополнительныеДанные) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ПереключитьИспользованиеМДМ();
		
	Иначе
		
		ИспользоватьМДМ = Истина;
		
	КонецЕсли; 
	
КонецПроцедуры	// ИспользоватьВопросЗавершение 

// Процедура обработчик события "Нажатие" декораций, представляющих списки объектов. 
// Назначается динамически. 
// 
&НаКлиенте
Процедура СписокОбъектовОбменаНажатие(Элемент)

	 ИмяЭлемента = Элемент.Имя;
	 
	 Парам = бит_СтрокиКлиентСервер.РазобратьСтрокуСРазделителями(ИмяЭлемента, "_");
	 
	 ИБ = ЭтотОбъект[Парам[0]];
	 ПараметрыФормы = Новый Структура;
	 Если ТипЗнч(ИБ) = Тип("СправочникСсылка.бит_мпд_ВидыИнформационныхБаз") Тогда
	 
	 	 ПараметрыФормы.Вставить("ВидИнформационнойБазы", ИБ);
		 
	 ИначеЕсли ТипЗнч(ИБ) = Тип("СправочникСсылка.бит_мпд_НастройкиВнешнихПодключений") Тогда
		 
		 ПараметрыФормы.Вставить("ИнформационнаяБаза", ИБ);
	 
	 КонецЕсли; 
	 
	 ВидОбъектаСтр = Парам[1];
	 
	 ПараметрыФормы.Вставить("Вид", ВидОбъектаСтр);
	 
	 ИмяОбъекта =  СтрЗаменить(Парам[2], "chr95", "_");
	 ПараметрыФормы.Вставить("Имя", ИмяОбъекта);
	 ПараметрыФормы.Вставить("Режим", "СписокОбъектов");
	 
	 ИмяХранилища = СтрЗаменить(Парам[3], "chr95", "_");
	 ИмяСписка = "Справочник.%1%.ФормаСписка";
	 ИмяСписка = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ИмяСписка, ИмяХранилища);
	 
	 ОткрытьФорму(ИмяСписка, ПараметрыФормы,,ИмяОбъекта);

КонецПроцедуры // СписокОбъектовОбменаНажатие()

// Процедура обработчик события "Нажатие" кнопки, открывающей подбор объектов обмена. 
// Назначается динамически. 
// 
&НаКлиенте
Процедура КнопкаДобавитьЭлементыНажатие(Элемент)

	 ИмяЭлемента = Элемент.Имя;
	 
	 Парам = бит_СтрокиКлиентСервер.РазобратьСтрокуСРазделителями(ИмяЭлемента, "_");
	 ИБ = ЭтотОбъект[Парам[1]];
	 ПараметрыФормы = Новый Структура;
	 Если ТипЗнч(ИБ) = Тип("СправочникСсылка.бит_мпд_ВидыИнформационныхБаз") Тогда
	 
	 	 ПараметрыФормы.Вставить("ВидИнформационнойБазы", ИБ);
		 
	 ИначеЕсли ТипЗнч(ИБ) = Тип("СправочникСсылка.бит_мпд_НастройкиВнешнихПодключений") Тогда
		 
		 ПараметрыФормы.Вставить("ИнформационнаяБаза", ИБ);
	 
	 КонецЕсли; 

	 Оповещение = Новый ОписаниеОповещения("ДобавлениеОбъектовОбменаЗавершение", ЭтотОбъект);
	 ОткрытьФорму("ОбщаяФорма.бит_мдм_ФормаВыбораОбъектовОбмена",ПараметрыФормы,ЭтотОбъект,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	 
КонецПроцедуры // КнопкаДобавитьЭлементыНажатие()


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОтправить(Команда)
	
	ТекстСообщения =  НСтр("ru = 'Выполняется обмен данными...'");
	Состояние(ТекстСообщения);
	
	
	КомандаОтправитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНазначить(Команда)
	
	ИмяКоманды = Команда.Имя;
	ИмяКоманды = СтрЗаменить(ИмяКоманды, "_Назначить", "");
	
	Парам = бит_СтрокиКлиентСервер.РазобратьСтрокуСРазделителями(ИмяКоманды, "_");
	
	ВидОбъектаСтр = Парам[1];
	ИмяОбъекта = Парам[2];
	ИмяОбъекта = СтрЗаменить(ИмяОбъекта, "chr95","_");
	
	 ИБ = ЭтотОбъект[Парам[0]];
	 Если ТипЗнч(ИБ) = Тип("СправочникСсылка.бит_мпд_ВидыИнформационныхБаз") Тогда
	 
	 	 КомандаНазначитьПравилаРегистрацииСервер(ВидОбъектаСтр, ИмяОбъекта);
		 
	 ИначеЕсли ТипЗнч(ИБ) = Тип("СправочникСсылка.бит_мпд_НастройкиВнешнихПодключений") Тогда
		 
		 КомандаНазначитьПравилаПодготовкиСервер(ИБ, ВидОбъектаСтр, ИмяОбъекта);
	 
	 КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗарегистрироватьВсе(Команда)
	
	ИмяКоманды = Команда.Имя;
	ИмяКоманды = СтрЗаменить(ИмяКоманды, "_Назначить", "");
	
	Парам = бит_СтрокиКлиентСервер.РазобратьСтрокуСРазделителями(ИмяКоманды, "_");
	
	ВидОбъектаСтр = Парам[1];
	ИмяОбъекта = Парам[2];
	ИмяОбъекта = СтрЗаменить(ИмяОбъекта, "chr95","_");
	
	 ИБ = ЭтотОбъект[Парам[0]];
	 
	 Состояние( НСтр("ru = 'Выполняется регистрация изменений...'"));
	 
	 ЗарегистрироватьВсеСервер(ИБ, ВидОбъектаСтр, ИмяОбъекта);	 
	
 КонецПроцедуры
 
 &НаКлиенте
Процедура КомандаОткрытьОписаниеОбъекта(Команда)
	
	ИмяКоманды = Команда.Имя;
	ИмяКоманды = СтрЗаменить(ИмяКоманды, "_ОписаниеОбъекта", "");
	
	Парам = бит_СтрокиКлиентСервер.РазобратьСтрокуСРазделителями(ИмяКоманды, "_");
	
	ВидОбъектаСтр = Парам[1];
	ИмяОбъекта = Парам[2];
	ИмяОбъекта = СтрЗаменить(ИмяОбъекта, "chr95","_");
	
	ИБ = ЭтотОбъект[Парам[0]];
	
	ОписаниеОбъекта = НайтиОписаниеОбъекта(ИБ, ВидОбъектаСтр, ИмяОбъекта);
	
	Если ЗначениеЗаполнено(ОписаниеОбъекта) Тогда
	
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ОписаниеОбъекта);
		ОткрытьФорму("Справочник.бит_мдм_ОписанияОбъектовОбмена.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
	КонецЕсли; 
	
 КонецПроцедуры

 &НаКлиенте
Процедура КомандаОбновить(Команда)
	
	Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура переключает использование МДМ.
// 
&НаСервере
Процедура ПереключитьИспользованиеМДМ()

	Константы.бит_мдм_Использовать.Установить(ИспользоватьМДМ);
	ОбновитьПовторноИспользуемыеЗначения();
	Обновить();

КонецПроцедуры // ПереключитьИспользованиеМДМ()

// Процедура обработчик оповещения "ДобавлениеОбъектовОбменаЗавершение".
// 
// Параметры:
// Результат - Структура.
// ДополнительныеДанные - Структура.
// 
&НаКлиенте 
Процедура ДобавлениеОбъектовОбменаЗавершение(Результат, ДополнительныеДанные) Экспорт
	
	Если бит_ОбщегоНазначенияКлиентСервер.ПроверитьИмяКласса(Результат, "РезультатВыбораОбъектовОбмена") Тогда
		
		ЗаполнитьОбъектыОбмена(Результат);
		ОповеститьОбИзменении(Тип("СправочникСсылка.бит_мдм_ОписанияОбъектовОбмена"));
		
		
	КонецЕсли; 
	
КонецПроцедуры	// ДобавлениеОбъектовОбменаЗавершение

&НаСервере
Процедура ЗаполнитьОбъектыОбмена(ДанныеВыбора)
	
	бит_мдм.ЗаполнитьОбъектыОбмена(ДанныеВыбора);
	Обновить();	
	
КонецПроцедуры // ЗаполнитьОбъектыОбмена()

// Процедура удаляет динамически созданные реквизиты и элементы формы.
// 
&НаСервере
Процедура УдалитьДинамическиеЭлементы()
	
	// Удаление "динамически созданных" реквизитов.
	МассивРеквизитов = ПолучитьРеквизиты();
	
	УдаляемыеРеквизиты = Новый Массив;
	Для каждого РеквФормы Из МассивРеквизитов Цикл
		
		Если Найти(РеквФормы.Имя,"ИБ") > 0 ИЛИ Найти(РеквФормы.Имя,"Таблица_") > 0 Тогда
			
			УдаляемыеРеквизиты.Добавить(РеквФормы.Имя);
			
		КонецЕсли; 
		
	КонецЦикла; // МассивРеквизитов
	
	ИзменитьРеквизиты(,УдаляемыеРеквизиты);
	
	// Удаление "динамически созданных" элементов управления.	
	УдаляемыеЭлементы = Новый Массив;
	Для каждого ЭлФормы Из Элементы Цикл
		
		Если ТипЗнч(ЭлФормы) = Тип("ГруппаФормы") И Найти(ЭлФормы.Имя,"ГруппаИБ_")>0 Тогда	
			
			// Достаточно удалить страницы на которых расположены таблицы.
			УдаляемыеЭлементы.Добавить(ЭлФормы);
			
		КонецЕсли; 
		
	КонецЦикла; // Элементы
	
	Для каждого ЭлФормы Из УдаляемыеЭлементы Цикл
		
		Элементы.Удалить(ЭлФормы);
		
	КонецЦикла; 
	
	// Удаление команд
	
	УдаляемыеКоманды = Новый Массив;
	Для каждого ТекКоманда Из Команды Цикл
	
		Если Лев(ТекКоманда.Имя,2) = "ИБ" Тогда
		
			УдаляемыеКоманды.Добавить(ТекКоманда);
		
		КонецЕсли; 
	
	КонецЦикла; 
	
	Для каждого ТекКоманда Из УдаляемыеКоманды Цикл
	
		Команды.Удалить(ТекКоманда);
	
	КонецЦикла; 
	
КонецПроцедуры // УдалитьДинамическиеЭлементы()

&НаСервере
Процедура Обновить()
	
	// Использование МДМ
	ИспользоватьМДМ = Константы.бит_мдм_Использовать.Получить();
	Элементы.ДекорацияИспользование.Видимость = НЕ  ИспользоватьМДМ;
	
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РасположениеБазы", Перечисления.бит_мпд_ВидыРасположенияИнформационныхБаз.RestСервис);
	Запрос.УстановитьПараметр("ВидТекущаяИБ", Справочники.бит_мпд_ВидыИнформационныхБаз.ТекущаяИнформационнаяБаза);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	бит_мдм_ОбъектыОбмена.ВидИнформационнойБазы,
	               |	бит_мдм_ОбъектыОбмена.ИнформационнаяБаза,
	               |	бит_мдм_ОбъектыОбмена.ОписаниеОбъекта,
	               |	СУММА(ВЫБОР
	               |			КОГДА бит_мдм_СостоянияОбъектов.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_мдм_СостоянияОбъектов.Изменен)
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КоличествоИзменено,
	               |	СУММА(1) КАК Количество
	               |ПОМЕСТИТЬ СостоянияОбъектов
	               |ИЗ
	               |	Справочник.бит_мдм_ОбъектыОбмена КАК бит_мдм_ОбъектыОбмена
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_мдм_СостоянияОбъектов КАК бит_мдм_СостоянияОбъектов
	               |		ПО бит_мдм_ОбъектыОбмена.Ссылка = бит_мдм_СостоянияОбъектов.Объект
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	бит_мдм_ОбъектыОбмена.ВидИнформационнойБазы,
	               |	бит_мдм_ОбъектыОбмена.ИнформационнаяБаза,
	               |	бит_мдм_ОбъектыОбмена.ОписаниеОбъекта
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	бит_мдм_ОбъектыОбменаИерархияЭлементов.ВидИнформационнойБазы,
	               |	бит_мдм_ОбъектыОбменаИерархияЭлементов.ИнформационнаяБаза,
	               |	бит_мдм_ОбъектыОбменаИерархияЭлементов.ОписаниеОбъекта,
	               |	ВЫБОР
	               |		КОГДА бит_мдм_СостоянияОбъектов.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_мдм_СостоянияОбъектов.Изменен)
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	1
	               |ИЗ
	               |	Справочник.бит_мдм_ОбъектыОбменаИерархияЭлементов КАК бит_мдм_ОбъектыОбменаИерархияЭлементов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_мдм_СостоянияОбъектов КАК бит_мдм_СостоянияОбъектов
	               |		ПО бит_мдм_ОбъектыОбменаИерархияЭлементов.Ссылка = бит_мдм_СостоянияОбъектов.Объект
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	бит_мдм_ПланыВидовХарактеристикОбмена.ВидИнформационнойБазы,
	               |	бит_мдм_ПланыВидовХарактеристикОбмена.ИнформационнаяБаза,
	               |	бит_мдм_ПланыВидовХарактеристикОбмена.ОписаниеОбъекта,
	               |	ВЫБОР
	               |		КОГДА бит_мдм_СостоянияОбъектов.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_мдм_СостоянияОбъектов.Изменен)
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	1
	               |ИЗ
	               |	Справочник.бит_мдм_ПланыВидовХарактеристикОбмена КАК бит_мдм_ПланыВидовХарактеристикОбмена
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_мдм_СостоянияОбъектов КАК бит_мдм_СостоянияОбъектов
	               |		ПО бит_мдм_ПланыВидовХарактеристикОбмена.Ссылка = бит_мдм_СостоянияОбъектов.Объект
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	бит_мдм_СчетаОбмена.ВидИнформационнойБазы,
	               |	бит_мдм_СчетаОбмена.ИнформационнаяБаза,
	               |	бит_мдм_СчетаОбмена.ОписаниеОбъекта,
	               |	ВЫБОР
	               |		КОГДА бит_мдм_СостоянияОбъектов.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_мдм_СостоянияОбъектов.Изменен)
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	1
	               |ИЗ
	               |	Справочник.бит_мдм_СчетаОбмена КАК бит_мдм_СчетаОбмена
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_мдм_СостоянияОбъектов КАК бит_мдм_СостоянияОбъектов
	               |		ПО бит_мдм_СчетаОбмена.Ссылка = бит_мдм_СостоянияОбъектов.Объект
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	бит_мдм_СведенияОбмена.ВидИнформационнойБазы,
	               |	бит_мдм_СведенияОбмена.ИнформационнаяБаза,
	               |	бит_мдм_СведенияОбмена.ОписаниеОбъекта,
	               |	ВЫБОР
	               |		КОГДА бит_мдм_СостоянияОбъектов.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_мдм_СостоянияОбъектов.Изменен)
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	1
	               |ИЗ
	               |	Справочник.бит_мдм_СведенияОбмена КАК бит_мдм_СведенияОбмена
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_мдм_СостоянияОбъектов КАК бит_мдм_СостоянияОбъектов
	               |		ПО бит_мдм_СведенияОбмена.Ссылка = бит_мдм_СостоянияОбъектов.Объект
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	бит_мпд_ВидыИнформационныхБаз.Ссылка КАК ВидИнформационнойБазы,
	               |	ЗНАЧЕНИЕ(Справочник.бит_мпд_НастройкиВнешнихПодключений.ПустаяСсылка) КАК ИнформационнаяБаза,
	               |	бит_мдм_ОписанияОбъектовОбмена.Ссылка КАК ОписаниеОбъекта,
	               |	0 КАК Приоритет
	               |ПОМЕСТИТЬ ОбъектыБаз
	               |ИЗ
	               |	Справочник.бит_мпд_ВидыИнформационныхБаз КАК бит_мпд_ВидыИнформационныхБаз
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_мдм_ОписанияОбъектовОбмена КАК бит_мдм_ОписанияОбъектовОбмена
	               |		ПО бит_мпд_ВидыИнформационныхБаз.Ссылка = бит_мдм_ОписанияОбъектовОбмена.Владелец
	               |ГДЕ
	               |	бит_мпд_ВидыИнформационныхБаз.Ссылка = &ВидТекущаяИБ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	бит_мпд_НастройкиВнешнихПодключений.ВидИнформационнойБазы,
	               |	бит_мпд_НастройкиВнешнихПодключений.Ссылка,
	               |	бит_мдм_ОписанияОбъектовОбмена.Ссылка,
	               |	1
	               |ИЗ
	               |	Справочник.бит_мпд_НастройкиВнешнихПодключений КАК бит_мпд_НастройкиВнешнихПодключений
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_мдм_ОписанияОбъектовОбмена КАК бит_мдм_ОписанияОбъектовОбмена
	               |		ПО бит_мпд_НастройкиВнешнихПодключений.ВидИнформационнойБазы = бит_мдм_ОписанияОбъектовОбмена.Владелец
	               |ГДЕ
	               |	бит_мпд_НастройкиВнешнихПодключений.РасположениеБазы = &РасположениеБазы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъектыБаз.ВидИнформационнойБазы КАК ВидИнформационнойБазы,
	               |	ОбъектыБаз.ИнформационнаяБаза КАК ИнформационнаяБаза,
	               |	ОбъектыБаз.ОписаниеОбъекта КАК ОписаниеОбъекта,
	               |	СУММА(ЕСТЬNULL(СостоянияОбъектов.КоличествоИзменено, 0)) КАК КоличествоИзменено,
	               |	СУММА(ЕСТЬNULL(СостоянияОбъектов.Количество, 0)) КАК Количество,
	               |	ОбъектыБаз.Приоритет КАК Приоритет,
	               |	ОбъектыБаз.ОписаниеОбъекта.Наименование КАК ОписаниеОбъектаНаименование,
	               |	ОбъектыБаз.ОписаниеОбъекта.Вид КАК ОписаниеОбъектаВид
	               |ИЗ
	               |	ОбъектыБаз КАК ОбъектыБаз
	               |		ЛЕВОЕ СОЕДИНЕНИЕ СостоянияОбъектов КАК СостоянияОбъектов
	               |		ПО ОбъектыБаз.ОписаниеОбъекта = СостоянияОбъектов.ОписаниеОбъекта
	               |			И ОбъектыБаз.ВидИнформационнойБазы = СостоянияОбъектов.ВидИнформационнойБазы
	               |			И ОбъектыБаз.ИнформационнаяБаза = СостоянияОбъектов.ИнформационнаяБаза
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъектыБаз.ОписаниеОбъекта,
	               |	ОбъектыБаз.ВидИнформационнойБазы,
	               |	ОбъектыБаз.ИнформационнаяБаза,
	               |	ОбъектыБаз.Приоритет,
	               |	ОбъектыБаз.ОписаниеОбъекта.Наименование,
	               |	ОбъектыБаз.ОписаниеОбъекта.Вид
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Приоритет,
	               |	ОписаниеОбъектаВид,
	               |	ОписаниеОбъектаНаименование
	               |ИТОГИ
	               |	СУММА(КоличествоИзменено),
	               |	СУММА(Количество)
	               |ПО
	               |	ИнформационнаяБаза,
	               |	ОписаниеОбъекта
	               |АВТОУПОРЯДОЧИВАНИЕ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ИСТИНА КАК ЕстьЗаписи,
	               |	""ДекорацияПравилаРегистрацииИзменений"" КАК Имя
	               |ИЗ
	               |	РегистрСведений.бит_мдм_ПравилаРегистрацииИзменений КАК бит_мдм_ПравилаРегистрацииИзменений
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ИСТИНА,
	               |	""ДекорацияПравилаПодготовкиОбмена""
	               |ИЗ
	               |	РегистрСведений.бит_мдм_ПравилаПодготовкиОбмена КАК бит_мдм_ПравилаПодготовкиОбмена";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Вывод информационных баз и объектов
	
	
	УдалитьДинамическиеЭлементы();
	
	Результат = МассивРезультатов[2];
	
	
	ВыборкаБаза = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	нб = 1; 
	ОписаниеТипаРеквизитИБ = бит_ОбщегоНазначенияКлиентСервер.ПолучитьОписаниеИзСтроки("СправочникСсылка.бит_мпд_ВидыИнформационныхБаз/СправочникСсылка.бит_мпд_НастройкиВнешнихПодключений");
	
	Пока ВыборкаБаза.Следующий() Цикл
		
		Выборка = ВыборкаБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ТекБаза = ?(ЗначениеЗаполнено(ВыборкаБаза.ИнформационнаяБаза), ВыборкаБаза.ИнформационнаяБаза, Справочники.бит_мпд_ВидыИнформационныхБаз.ТекущаяИнформационнаяБаза); 
		
		// Создаем реквизит формы для база
		ИмяРеквизитаБаза = "ИБ"+Формат(нб,"ЧГ=0");
		ИмяГруппы = "ГруппаИБ_"+Формат(нб,"ЧГ=0");
		ИмяГруппыОбъекты = "ГруппаОбъектыИБ_"+Формат(нб,"ЧГ=0");
		
		НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизитаБаза, ОписаниеТипаРеквизитИБ);
		
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		ЭтотОбъект[ИмяРеквизитаБаза] = ТекБаза;
		
		ГруппаБазы = Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"), Элементы.ГруппаИнформационныеБазы);
		ГруппаБазы.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаБазы.Отображение = ОтображениеОбычнойГруппы.Нет;
		
		ИБ = Элементы.Добавить(ИмяРеквизитаБаза, Тип("ПолеФормы"), ГруппаБазы);
		ИБ.Гиперссылка = Истина;
		ИБ.ПутьКДанным = ИмяРеквизитаБаза;
		ИБ.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		ГруппаОбъекты = Элементы.Добавить(ИмяГруппыОбъекты, Тип("ГруппаФормы"), ГруппаБазы);
		ГруппаОбъекты.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаОбъекты.Отображение = ОтображениеОбычнойГруппы.СильноеВыделение;
		ГруппаОбъекты.РастягиватьПоГоризонтали = Истина;
		
		
		Пока Выборка.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(Выборка.ОписаниеОбъекта) Тогда
			
				 Продолжить;
			
			КонецЕсли; 
			
			ИмяСсылки = СформироватьИмяСсылкиСписка(ИмяРеквизитаБаза, Выборка.ОписаниеОбъекта);
			НовыйЭл = Элементы.Добавить(ИмяСсылки, Тип("ДекорацияФормы"), ГруппаОбъекты);
			НовыйЭл.Заголовок = ДополнитьНаименованиеКоличеством(Строка(Выборка.ОписаниеОбъекта), Выборка.Количество, Выборка.КоличествоИзменено);
			НовыйЭл.Гиперссылка = Истина;
			НовыйЭл.УстановитьДействие("Нажатие", "СписокОбъектовОбменаНажатие");
			НовыйЭл.ЦветТекста = ?(Выборка.КоличествоИзменено > 0, WebЦвета.ТемноКрасный, WebЦвета.ТемноЗеленый);
			НовыйЭл.РастягиватьПоГоризонтали = Истина;
			
			// Команда для назначения правил регистрации/обработки.
			ИмяКоманды = ИмяСсылки+"_Назначить";
			НоваяКоманда = ЭтотОбъект.Команды.Добавить(ИмяКоманды);
			НоваяКоманда.Действие = "КомандаНазначить";
			НоваяКоманда.Заголовок =  НСтр("ru = 'Назначить правила'");
						
			ИмяКнопкиНазначить = ИмяСсылки+"КонтекстноеМенюНазначить";
			КнопкаНазначить = Элементы.Добавить(ИмяКнопкиНазначить, Тип("КнопкаФормы"), НовыйЭл.КонтекстноеМеню);
			КнопкаНазначить.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
			КнопкаНазначить.ИмяКоманды = ИмяКоманды;
			
			// Команда для регистрации всего справочника.
			ИмяКоманды = ИмяСсылки+"_ЗарегистрироватьВсе";
			НоваяКоманда = ЭтотОбъект.Команды.Добавить(ИмяКоманды);
			НоваяКоманда.Действие = "КомандаЗарегистрироватьВсе";
			НоваяКоманда.Заголовок =  НСтр("ru = 'Зарегистрировать все элементы'");
						
			ИмяКнопкиНазначить = ИмяСсылки+"КонтекстноеМенюЗарегистрироватьВсе";
			КнопкаНазначить = Элементы.Добавить(ИмяКнопкиНазначить, Тип("КнопкаФормы"), НовыйЭл.КонтекстноеМеню);
			КнопкаНазначить.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
			КнопкаНазначить.ИмяКоманды = ИмяКоманды;
			
			// Команда для открытия ОписанияОбъекта
			ИмяКоманды = ИмяСсылки+"_ОписаниеОбъекта";
			НоваяКоманда = ЭтотОбъект.Команды.Добавить(ИмяКоманды);
			НоваяКоманда.Действие = "КомандаОткрытьОписаниеОбъекта";
			НоваяКоманда.Заголовок =  НСтр("ru = 'Открыть описание объекта'");
						
			ИмяКнопкиНазначить = ИмяСсылки+"КонтекстноеМенюОткрытьОписаниеОбъекта";
			КнопкаНазначить = Элементы.Добавить(ИмяКнопкиНазначить, Тип("КнопкаФормы"), НовыйЭл.КонтекстноеМеню);
			КнопкаНазначить.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
			КнопкаНазначить.ИмяКоманды = ИмяКоманды;
			
			
		КонецЦикла; // Объект
		
		// Кнопка для добавления объектов
		ИмяКнопки = "ДобавитьЭлементы_"+ИмяРеквизитаБаза;
		НовыйЭл = Элементы.Добавить(ИмяКнопки, Тип("ДекорацияФормы"), ГруппаОбъекты);
		НовыйЭл.Заголовок = "Добавить";
		НовыйЭл.Гиперссылка = Истина;
		НовыйЭл.УстановитьДействие("Нажатие", "КнопкаДобавитьЭлементыНажатие");
		
		нб = нб + 1;
		
	КонецЦикла; // ИБ
	
	// Информация о назначенных правилах 
	Результат = МассивРезультатов[3];
	
	Выборка = Результат.Выбрать();
	
	Элементы.ДекорацияПравилаРегистрацииИзменений.ЦветТекста = WebЦвета.ТемноКрасный;
	Элементы.ДекорацияПравилаРегистрацииИзменений.Заголовок =  НСтр("ru = 'Правила регистрации изменений - не назначены'");
	
	Элементы.ДекорацияПравилаПодготовкиОбмена.ЦветТекста = WebЦвета.ТемноКрасный;
	Элементы.ДекорацияПравилаПодготовкиОбмена.Заголовок =  НСтр("ru = 'Правила подготовки обмена - не назначены'");
	
	Пока Выборка.Следующий() Цикл
	
		Если Выборка.ЕстьЗаписи Тогда
		
			Элементы[Выборка.Имя].ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
            Элементы[Выборка.Имя].Заголовок = ?(Выборка.Имя = "ДекорацияПравилаРегистрацииИзменений",  НСтр("ru = 'Правила регистрации изменений'"),  НСтр("ru = 'Правила подготовки обмена'"));			
		
		КонецЕсли; 
	
	КонецЦикла; 
	
	
КонецПроцедуры

// Функция дополняет наименование количеством объектов и количеством измененных.
// 
// Параметры:
//   Наименование - Строка
//   Количество - Число
//   КоличествоИзменено - Число
// 
// Возвращаемое значение:
//  СтрРезультат - Строка.
// 
&НаСервереБезКонтекста
Функция ДополнитьНаименованиеКоличеством(Наименование, Количество, КоличествоИзменено)

	СтрРезультат = Наименование;
	СтрРезультат = СтрРезультат + " "+?(КоличествоИзменено > 0, "(%2%/%1%)", "(%1%)");
	СтрРезультат = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(СтрРезультат, Количество, КоличествоИзменено);	

	Возврат СтрРезультат;
	
КонецФункции // ДополнитьНаименованиеКоличеством()

// Функция формирует имя для декорации, явлюющейся гиперссылкой списка.
// 
// Возвращаемое значение:
//  ИмяСсылки - Строка.
// 
&НаСервереБезКонтекста
Функция СформироватьИмяСсылкиСписка(ИмяБазы, ОписаниеОбъекта)
	
	ИмяСсылки = "%ИмяБазы%_%ВидОбъекта%_%ИмяОбъекта%_%ИмяХранилища%";
	
	ИмяОбъекта    = ОписаниеОбъекта.Имя;
	СтрВидОбъекта = бит_РаботаСМетаданными.ПолучитьИмяЗначенияПеречисления(Перечисления.бит_мдм_ВидыОбъектовОбмена, ОписаниеОбъекта.Вид);
	
	ИмяХранилища = бит_мдм.ИмяОбъектаХранения(ОписаниеОбъекта);
	
	СтрПарам = Новый Структура("ИмяБазы 
	                            |, ВидОбъекта
								|, ИмяОбъекта
								|, ИмяХранилища"
								, ИмяБазы
								, СтрВидОбъекта
								, СтрЗаменить(ИмяОбъекта,"_","chr95")  // Символ "_" используется для разделения параметров, поэтому заменям.
								, СтрЗаменить(ИмяХранилища,"_","chr95"));
								
	ИмяСсылки = бит_ОбщегоНазначенияКлиентСервер.ЗаполнитьПараметрыСтроки(ИмяСсылки, СтрПарам);
	
	Возврат ИмяСсылки;
	
КонецФункции // СформироватьИмяСсылкиСписка()

&НаСервере
Процедура КомандаОтправитьНаСервере()
	
	бит_мдм_Транспорт.ОтправитьИзмененные();
	Обновить();
	
КонецПроцедуры

&НаСервере
Процедура КомандаНазначитьПравилаРегистрацииСервер(ВидОбъектаСтр, ИмяОбъекта)

	РегистрыСведений.бит_мдм_ПравилаРегистрацииИзменений.НазначитьПравило(ВидОбъектаСтр, ИмяОбъекта);
    Обновить();	 	

КонецПроцедуры // КомандаНазначитьПравилаРегистрацииСервер()

&НаСервере
Процедура КомандаНазначитьПравилаПодготовкиСервер(ИБ, ВидОбъектаСтр, ИмяОбъекта)

	РегистрыСведений.бит_мдм_ПравилаПодготовкиОбмена.НазначитьПравило(ИБ, ВидОбъектаСтр, ИмяОбъекта);
    Обновить();	 	

КонецПроцедуры // КомандаНазначитьПравилаРегистрацииСервер()

&НаСервере
Процедура ЗарегистрироватьВсеСервер(ИБ, ВидОбъектаСтр, ИмяОбъекта)
	 
	 бит_мдм.ЗарегистрироватьВсе(ИБ, ВидОбъектаСтр, ИмяОбъекта);
     Обновить();	 
	 
 КонецПроцедуры // ЗарегистрироватьВсеСервер()

&НаСервереБезКонтекста
Функция НайтиОписаниеОбъекта(ИБ, ВидОбъектаСтр, ИмяОбъекта)
 
 	Если ТипЗнч(ИБ) = Тип("СправочникСсылка.бит_мпд_ВидыИнформационныхБаз") Тогда
		
		ВидИБ = ИБ;
		
	Иначе	
		
		ВидИБ = ИБ.ВидИнформационнойБазы;
		
	КонецЕсли; 
	
	ВидОбъекта = Перечисления.бит_мдм_ВидыОбъектовОбмена[ВидОбъектаСтр];
	ОписаниеОбъекта = Справочники.бит_мдм_ОписанияОбъектовОбмена.НайтиЭлемент(ВидИБ, ВидОбъекта, ИмяОбъекта);
	
 	Возврат ОписаниеОбъекта;
 	
 КонецФункции // НайтиОписаниеОбъекта()

#КонецОбласти







 
