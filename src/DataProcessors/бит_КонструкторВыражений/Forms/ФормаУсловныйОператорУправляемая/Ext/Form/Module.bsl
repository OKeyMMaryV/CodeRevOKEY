
#Область ОбработчикиСобытийФормы

// Процедура - обработчик события "ПриСозданииНаСервере" формы.
// 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Режим", Объект.Режим);
	
	Если Параметры.Свойство("Переменные") Тогда
	
		Для каждого элемент Из Параметры.Переменные Цикл
		
			СписокПеременных.Добавить(элемент.Значение);
		
		КонецЦикла; 
	
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события "ПриИзменении" поля ввода "ЛогическоеВыражение".
// 
&НаКлиенте
Процедура ЛогическоеВыражениеПриИзменении(Элемент)
	
	ОбновитьВыражениеРезультат();
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "ЛогическоеВыражение".
// 
&НаКлиенте
Процедура ЛогическоеВыражениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФормуВыбораПоля("ЛогическоеВыражение");
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "ВыражениеИстина".
// 
&НаКлиенте
Процедура ВыражениеИстинаПриИзменении(Элемент)
	
	ОбновитьВыражениеРезультат();
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "ВыражениеИстина".
// 
&НаКлиенте
Процедура ВыражениеИстинаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФормуВыбораПоля("ВыражениеИстина");
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "ВыражениеЛожь".
// 
&НаКлиенте
Процедура ВыражениеЛожьПриИзменении(Элемент)
	
	ОбновитьВыражениеРезультат();
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "ВыражениеЛожь".
// 
&НаКлиенте
Процедура ВыражениеЛожьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФормуВыбораПоля("ВыражениеЛожь");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура - действие команды "КомандаОК".
// 
&НаКлиенте
Процедура КомандаОК(Команда)
	
	ОбновитьВыражениеРезультат();
	Закрыть(ВыражениеРезультат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция выполняет обновление результирующего выражения.
// 
&НаКлиенте
Процедура ОбновитьВыражениеРезультат()

	ВыражениеРезультат = "?("+ЛогическоеВыражение+", "+ВыражениеИстина+", "+ВыражениеЛожь+");"
	
КонецПроцедуры // ОбновитьВыражениеРезультат()

// Функция открывает помошник для выбора поля.
// 
&НаКлиенте
Процедура ОткрытьФормуВыбораПоля(ИмяПриемника)
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("Режим",Объект.Режим);
	
	Если СписокПеременных.Количество() > 0  Тогда
	
		ПараметрыФормы.Вставить("Переменные",СписокПеременных.ВыгрузитьЗначения());
	
	КонецЕсли; 
	
	РежимОкна = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	ДопПараметры = Новый Структура("ИмяПриемника", ИмяПриемника);
	Оповещение = Новый ОписаниеОповещения("ВыборПоляЗавершение", ЭтотОбъект, ДопПараметры);
	ОткрытьФорму("ОбщаяФорма.бит_ФормаВыбораПоляУправляемая",ПараметрыФормы,ЭтаФорма,,,,Оповещение,РежимОкна);
	
	
 КонецПроцедуры // ОткрытьФормуВыбораПоля()

// Процедура обработчик оповещения "ВыборПоляЗавершение".
// 
// Параметры:
// РезСтруктура - КодВозвратаДиалога.
// ДополнительныеДанные - Структура.
// 
&НаКлиенте 
Процедура ВыборПоляЗавершение(РезСтруктура, ДополнительныеДанные) Экспорт

	Если ТипЗнч(РезСтруктура) = Тип("Структура") Тогда
		
		 Элементы[ДополнительныеДанные.ИмяПриемника].ВыделенныйТекст = РезСтруктура.Имя;
		 ОбновитьВыражениеРезультат();
		
	КонецЕсли; 
	
КонецПроцедуры	// ВыборПоляЗавершение 
 
#КонецОбласти

