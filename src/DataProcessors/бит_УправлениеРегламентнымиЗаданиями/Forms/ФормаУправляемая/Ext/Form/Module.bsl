
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	
	МетаданныеОбъекта = Метаданные.Обработки.бит_УправлениеРегламентнымиЗаданиями;
	
	// Вызов механизма защиты
	
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Обновим регламентные задания.
	ОбновитьРегламентныеЗаданияСервер();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРеглЗадания

&НаКлиенте
Процедура РеглЗаданияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.РеглЗадания.ТекущиеДанные;
    
    Если ТекущаяСтрока = Неопределено Тогда
        Возврат;
    КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Идентификатор", ТекущаяСтрока.ИД);
	
	Оповещение = Новый ОписаниеОповещения("ДиалогРегламентногоЗаданияЗакрытие", ЭтотОбъект); 
	ОткрытьФорму("Обработка.бит_УправлениеРегламентнымиЗаданиями.Форма.ДиалогРегламентногоЗадания"
				, ПараметрыФормы
				, ЭтаФорма
				,
				,
				,
				, Оповещение
				, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
	
КонецПроцедуры

// Процедура окончание процедуры "ДиалогРегламентногоЗаданияЗакрытие". 
// 
// Параметры:
//  РезультатВыбора - Структура.
//  ДополнительныеПараметры - Структура.
// 
&НаКлиенте 
Процедура ДиалогРегламентногоЗаданияЗакрытие(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	ОбновитьРегламентныеЗаданияСервер();
	
КонецПроцедуры // ДиалогРегламентногоЗаданияЗакрытие()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьРегламентныеЗадания(Команда)
	
	ОбновитьРегламентныеЗаданияСервер();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура обновляет регламентные задания.
// 
// Параметры:
//  Нет.
// 
&НаСервере
Процедура ОбновитьРегламентныеЗаданияСервер()
	
	Объект.РеглЗадания.Очистить();
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивЗаданий = РегламентныеЗадания.ПолучитьРегламентныеЗадания();
	
	УстановитьПривилегированныйРежим(Ложь);
	
    Для Каждого Задание Из МассивЗаданий Цикл
        
		НоваяСтрока = Объект.РеглЗадания.Добавить();
		НоваяСтрока.ИмяПользователя = Задание.ИмяПользователя;
		НоваяСтрока.Использование   = Задание.Использование;
		НоваяСтрока.Ключ            = Задание.Ключ;
		НоваяСтрока.Наименование    = Задание.Наименование;
		НоваяСтрока.Расписание      = Строка(Задание.Расписание);
		НоваяСтрока.Ид              = Строка(Задание.УникальныйИдентификатор); 
		
		Если ПустаяСтрока(НоваяСтрока.Наименование) Тогда
			НоваяСтрока.Наименование = Задание.Метаданные.Синоним;
		КонецЕсли;
		
    КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
