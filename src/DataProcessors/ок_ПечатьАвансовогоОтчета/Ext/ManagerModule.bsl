
//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Начало 2021-05-25 (#ТП_БП05_ФР12, #ТП_БП05_ФР13)
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Проверяем, нужно ли для макета ОтчетККМ формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Аванс_ОтчетСОстатком") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"Аванс_ОтчетСОстатком",
		"АО без учета остатка",
		ПечатьАвансовогоОтчета(МассивОбъектов, ОбъектыПечати, Истина),
		,
		"Обработка.ок_ПечатьАвансовогоОтчета.ПФ_MXL_АвансовыйОтчет");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Аванс_ОтчетБезОстатка") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"Аванс_ОтчетБезОстатка",
		"АО без учета остатка",
		ПечатьАвансовогоОтчета(МассивОбъектов, ОбъектыПечати, Ложь),
		,
		"Обработка.ок_ПечатьАвансовогоОтчета.ПФ_MXL_АвансовыйОтчет");
	КонецЕсли;
	
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьАвансовогоОтчета(МассивОбъектов, ОбъектыПечати, СОстатком = Истина)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб         = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АвансовыйОтчет_АвансовыйОтчет";
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов",  МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ПустойСчет",      ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АвансовыйОтчет.Дата КАК ДатаДокумента,
	|	АвансовыйОтчет.ФизЛицо КАК ПодотчетноеЛицо,
	|	АвансовыйОтчет.Организация КАК Организация
	|ПОМЕСТИТЬ втДаты
	|ИЗ
	|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
	|ГДЕ
	|	АвансовыйОтчет.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаДокумента,
	|	ПодотчетноеЛицо,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДаты.ДатаДокумента КАК ДатаДокумента,
	|	втДаты.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	втДаты.Организация КАК Организация,
	|	МАКСИМУМ(ок_ДанныеФизическихЛицБОСС.Период) КАК Период
	|ПОМЕСТИТЬ втМаксимумПериод
	|ИЗ
	|	втДаты КАК втДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ок_ДанныеФизическихЛицБОСС КАК ок_ДанныеФизическихЛицБОСС
	|		ПО втДаты.ДатаДокумента >= ок_ДанныеФизическихЛицБОСС.Период
	|			И втДаты.ПодотчетноеЛицо = ок_ДанныеФизическихЛицБОСС.ФизическоеЛицо
	|			И втДаты.Организация = ок_ДанныеФизическихЛицБОСС.Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	втДаты.ДатаДокумента,
	|	втДаты.ПодотчетноеЛицо,
	|	втДаты.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаДокумента,
	|	ПодотчетноеЛицо,
	|	Организация,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втМаксимумПериод.ДатаДокумента КАК ДатаДокумента,
	|	втМаксимумПериод.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	втМаксимумПериод.Организация КАК Организация,
	|	втМаксимумПериод.Период КАК Период,
	|	ок_ДанныеФизическихЛицБОСС.Объект КАК Объект,
	|	ок_ДанныеФизическихЛицБОСС.Объект.Код КАК КодОбъекта,
	|	ок_ДанныеФизическихЛицБОСС.ТабельныйНомер КАК ТабельныйНомер,
	|	ок_ДанныеФизическихЛицБОСС.Должность КАК ДолжностьПодотчетногоЛицаПредставление
	|ПОМЕСТИТЬ втОбъект
	|ИЗ
	|	втМаксимумПериод КАК втМаксимумПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ок_ДанныеФизическихЛицБОСС КАК ок_ДанныеФизическихЛицБОСС
	|		ПО втМаксимумПериод.Период = ок_ДанныеФизическихЛицБОСС.Период
	|			И втМаксимумПериод.ПодотчетноеЛицо = ок_ДанныеФизическихЛицБОСС.ФизическоеЛицо
	|			И втМаксимумПериод.Организация = ок_ДанныеФизическихЛицБОСС.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АвансовыйОтчет.Ссылка КАК Ссылка,
	|	АвансовыйОтчет.МоментВремени КАК МоментВремени,
	|	АвансовыйОтчет.Номер КАК Номер,
	|	АвансовыйОтчет.Дата КАК ДатаДокумента,
	|	АвансовыйОтчет.ФизЛицо КАК ПодотчетноеЛицо,
	|	АвансовыйОтчет.ФизЛицо КАК ПредставлениеПодотчетногоЛица,
	|	АвансовыйОтчет.Организация КАК Руководители,
	|	АвансовыйОтчет.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА АвансовыйОтчет.ПодразделениеОрганизации.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА АвансовыйОтчет.ПодразделениеОрганизации.Наименование
	|		ИНАЧЕ АвансовыйОтчет.ПодразделениеОрганизации.НаименованиеПолное
	|	КОНЕЦ КАК ПредставлениеПодразделения,
	|	АвансовыйОтчет.ПодразделениеОрганизации.Код КАК КодПодразделения,
	|	АвансовыйОтчет.Организация КАК Организация,
	|	АвансовыйОтчет.СчетЗатрат КАК СчетЗатрат,
	|	АвансовыйОтчет.НазначениеАванса КАК НазначениеАванса,
	|	АвансовыйОтчет.ВалютаДокумента КАК ВалютаДокумента,
	|	АвансовыйОтчет.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	АвансовыйОтчет.ВалютаДокумента.Представление КАК ПредставлениеВалюты,
	|	АвансовыйОтчет.СуммаДокумента КАК СуммаДокумента,
	|	АвансовыйОтчет.КоличествоДокументов КАК КоличествоДокументов,
	|	АвансовыйОтчет.КоличествоЛистов КАК КоличествоЛистов,
	|	втОбъект.Объект КАК Объект,
	|	втОбъект.КодОбъекта КАК КодОбъекта,
	|	втОбъект.ТабельныйНомер КАК ТабельныйНомер,
	|	втОбъект.ДолжностьПодотчетногоЛицаПредставление КАК Должность
	|ИЗ
	|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОбъект КАК втОбъект
	|		ПО АвансовыйОтчет.Организация = втОбъект.Организация
	|			И АвансовыйОтчет.ФизЛицо = втОбъект.ПодотчетноеЛицо
	|			И АвансовыйОтчет.Дата = втОбъект.ДатаДокумента
	|ГДЕ
	|	АвансовыйОтчет.Ссылка В(&МассивОбъектов)";
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	//ОКЕЙ Завьялова Е.А. (ПервыйБИТ) Начало 2021-07-27 (#ТП_БП05_ФР09)
	// Закомментировано
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	АвансовыйОтчетВыданныеАвансы.Ссылка КАК АвансовыйОтчет,
	//|	АвансовыйОтчетВыданныеАвансы.ДокументАванса КАК ДокументАванса,
	//|	ВЫБОР
	//|		КОГДА АвансовыйОтчетВыданныеАвансы.ДокументАванса ССЫЛКА Документ.СписаниеСРасчетногоСчета
	//|			ТОГДА ""БАНК""
	//|		ИНАЧЕ ""КАССА""
	//|	КОНЕЦ КАК ТипДокумента,
	//|	АвансовыйОтчетВыданныеАвансы.ДокументАванса.СуммаДокумента КАК Сумма
	//|ИЗ
	//|	Документ.АвансовыйОтчет.ВыданныеАвансы КАК АвансовыйОтчетВыданныеАвансы
	//|ГДЕ
	//|	АвансовыйОтчетВыданныеАвансы.Ссылка В(&МассивОбъектов)";
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АвансовыйОтчетВыданныеАвансы.Ссылка КАК АвансовыйОтчет,
	|	АвансовыйОтчетВыданныеАвансы.ДокументАванса КАК ДокументАванса,
	|	ВЫБОР
	|		КОГДА АвансовыйОтчетВыданныеАвансы.ДокументАванса ССЫЛКА Документ.СписаниеСРасчетногоСчета
	|			ТОГДА ""БАНК""
	|		ИНАЧЕ ""КАССА""
	|	КОНЕЦ КАК ТипДокумента,
	|	ВЫБОР
	|		КОГДА АвансовыйОтчетВыданныеАвансы.ДокументАванса ССЫЛКА Документ.СписаниеСРасчетногоСчета
	|			ТОГДА СписаниеСРасчетногоСчетаПодотчетныеЛица.Сумма
	|		ИНАЧЕ АвансовыйОтчетВыданныеАвансы.ДокументАванса.СуммаДокумента
	|	КОНЕЦ КАК СуммаДокумента,
	|	АвансовыйОтчетВыданныеАвансы.ок_СуммаАванса КАК Сумма
	|ИЗ
	|	Документ.АвансовыйОтчет.ВыданныеАвансы КАК АвансовыйОтчетВыданныеАвансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеСРасчетногоСчета.ПодотчетныеЛица КАК СписаниеСРасчетногоСчетаПодотчетныеЛица
	|		ПО АвансовыйОтчетВыданныеАвансы.ДокументАванса = СписаниеСРасчетногоСчетаПодотчетныеЛица.Ссылка
	|			И АвансовыйОтчетВыданныеАвансы.Ссылка.ФизЛицо = СписаниеСРасчетногоСчетаПодотчетныеЛица.ФизЛицо
	|ГДЕ
	|	АвансовыйОтчетВыданныеАвансы.Ссылка В(&МассивОбъектов)";

	//ОКЕЙ Завьялова Е.А. (ПервыйБИТ) Конец 2021-07-27 (#ТП_БП05_ФР09)
	
	ДокументыАвансов = Запрос.Выполнить().Выбрать();
	
	ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
	Если ДанныеДокументов.ЕстьВалютные Тогда
		
		Запрос.УстановитьПараметр("НачалоПериода",    ДанныеДокументов.НачалоПериода);
		Запрос.УстановитьПараметр("ОкончаниеПериода", ДанныеДокументов.ОкончаниеПериода);
		Запрос.УстановитьПараметр("Организации",      ДанныеДокументов.Организации);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаДт,
		|	0 КАК СуммаКт,
		|	ХозрасчетныйОборотыДтКт.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&ОкончаниеПериода,
		|			Регистратор,
		|			СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходы),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы),
		|			СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал),
		|			,
		|			Организация В (&Организации)
		|				И ВалютаКт <> &ВалютаРеглУчета
		|				И ВЫРАЗИТЬ(СубконтоДт1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.КурсовыеРазницы)) КАК ХозрасчетныйОборотыДтКт
		|ГДЕ
		|	ХозрасчетныйОборотыДтКт.Регистратор В(&МассивОбъектов)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	0,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот,
		|	ХозрасчетныйОборотыДтКт.Регистратор
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&ОкончаниеПериода,
		|			Регистратор,
		|			СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал),
		|			,
		|			СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходы),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы),
		|			Организация В (&Организации)
		|				И ВалютаДт <> &ВалютаРеглУчета
		|				И ВЫРАЗИТЬ(СубконтоКт1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.КурсовыеРазницы)) КАК ХозрасчетныйОборотыДтКт
		|ГДЕ
		|	ХозрасчетныйОборотыДтКт.Регистратор В(&МассивОбъектов)";
		
		ЗапросПоВалютнымПроводкам = Запрос.Выполнить().Выбрать();
		
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Регистратор,
	|	Хозрасчетный.СчетДт КАК СчетДт,
	|	Хозрасчетный.СчетКт КАК СчетКт,
	|	МИНИМУМ(Хозрасчетный.НомерСтроки) КАК НомерСтроки,
	|	СУММА(Хозрасчетный.Сумма) КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Регистратор В(&МассивОбъектов)
	|	И НЕ(Хозрасчетный.СчетДт.Забалансовый
	|				ИЛИ Хозрасчетный.СчетКт.Забалансовый)
	|
	|СГРУППИРОВАТЬ ПО
	|	Хозрасчетный.Регистратор,
	|	Хозрасчетный.СчетДт,
	|	Хозрасчетный.СчетКт
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ВыборкаПроводок = Запрос.Выполнить().Выбрать();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор,
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АвансовыйОтчет.Поставщик КАК Поставщик,
	|	АвансовыйОтчет.НомерВходящегоДокумента КАК ДокументНомер,
	|	АвансовыйОтчет.ДатаВходящегоДокумента КАК ДокументДата,
	|	АвансовыйОтчет.ВидДокВходящий КАК НаименованиеРасхода,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, ВЫБОР
	|				КОГДА АвансовыйОтчет.Ссылка.СуммаВключаетНДС
	|					ТОГДА ВЫБОР
	|							КОГДА АвансовыйОтчет.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
	|								ТОГДА АвансовыйОтчет.Сумма
	|							ИНАЧЕ АвансовыйОтчет.Сумма * (АвансовыйОтчет.Ссылка.КурсДокумента / АвансовыйОтчет.Ссылка.КратностьДокумента)
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА АвансовыйОтчет.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
	|							ТОГДА АвансовыйОтчет.Сумма + АвансовыйОтчет.СуммаНДС
	|						ИНАЧЕ (АвансовыйОтчет.Сумма + АвансовыйОтчет.СуммаНДС) * (АвансовыйОтчет.Ссылка.КурсДокумента / АвансовыйОтчет.Ссылка.КратностьДокумента)
	|					КОНЕЦ
	|			КОНЕЦ)) КАК ПоОтчету,
	|	СУММА(ВЫБОР
	|			КОГДА АвансовыйОтчет.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА АвансовыйОтчет.Ссылка.СуммаВключаетНДС = ИСТИНА
	|						ТОГДА АвансовыйОтчет.Сумма
	|					ИНАЧЕ АвансовыйОтчет.Сумма + АвансовыйОтчет.СуммаНДС
	|				КОНЕЦ
	|		КОНЕЦ) КАК ПоОтчетуВВалюте,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, ВЫБОР
	|				КОГДА АвансовыйОтчет.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
	|					ТОГДА АвансовыйОтчет.СуммаНДС
	|				ИНАЧЕ АвансовыйОтчет.СуммаНДС * (АвансовыйОтчет.Ссылка.КурсДокумента / АвансовыйОтчет.Ссылка.КратностьДокумента)
	|			КОНЕЦ)) КАК СуммаНДС,
	|	АвансовыйОтчет.СчетУчета.Код КАК СчетЗатрат,
	|	ВЫБОР
	|		КОГДА АвансовыйОтчет.Ссылка.НДСНеВыделять
	|					И АвансовыйОтчет.СуммаНДС = 0
	|				ИЛИ АвансовыйОтчет.Ссылка.НДСВключенВСтоимость
	|					И (АвансовыйОтчет.СуммаНДС = 0
	|						ИЛИ АвансовыйОтчет.ПредъявленСФ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ АвансовыйОтчет.СчетУчетаНДС.Код
	|	КОНЕЦ КАК СчетНДС,
	|	АвансовыйОтчет.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДанныеАвансовогоОтчета
	|ИЗ
	|	Документ.АвансовыйОтчет.Товары КАК АвансовыйОтчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО АвансовыйОтчет.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И АвансовыйОтчет.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|			И (АвансовыйОтчет.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	АвансовыйОтчет.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчет.Поставщик,
	|	АвансовыйОтчет.НомерВходящегоДокумента,
	|	АвансовыйОтчет.ДатаВходящегоДокумента,
	|	АвансовыйОтчет.ВидДокВходящий,
	|	АвансовыйОтчет.СчетУчета.Код,
	|	АвансовыйОтчет.Ссылка,
	|	ВЫБОР
	|		КОГДА АвансовыйОтчет.Ссылка.НДСНеВыделять
	|					И АвансовыйОтчет.СуммаНДС = 0
	|				ИЛИ АвансовыйОтчет.Ссылка.НДСВключенВСтоимость
	|					И (АвансовыйОтчет.СуммаНДС = 0
	|						ИЛИ АвансовыйОтчет.ПредъявленСФ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ АвансовыйОтчет.СчетУчетаНДС.Код
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансовыйОтчет.Контрагент,
	|	АвансовыйОтчет.НомерВходящегоДокумента,
	|	АвансовыйОтчет.ДатаВходящегоДокумента,
	|	АвансовыйОтчет.ВидДокВходящий,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, ВЫБОР
	|				КОГДА АвансовыйОтчет.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
	|					ТОГДА АвансовыйОтчет.Сумма
	|				ИНАЧЕ АвансовыйОтчет.СуммаВзаиморасчетов * (АвансовыйОтчет.КурсВзаиморасчетов / АвансовыйОтчет.КратностьВзаиморасчетов)
	|			КОНЕЦ)),
	|	СУММА(ВЫБОР
	|			КОГДА АвансовыйОтчет.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
	|				ТОГДА 0
	|			ИНАЧЕ АвансовыйОтчет.СуммаВзаиморасчетов
	|		КОНЕЦ),
	|	СУММА(0),
	|	ВЫБОР
	|		КОГДА АвансовыйОтчет.СчетУчетаРасчетовСКонтрагентом.Код = АвансовыйОтчет.СчетУчетаРасчетовПоАвансам.Код
	|			ТОГДА АвансовыйОтчет.СчетУчетаРасчетовСКонтрагентом.Код
	|		ИНАЧЕ ВЫБОР
	|				КОГДА АвансовыйОтчет.СчетУчетаРасчетовСКонтрагентом = &ПустойСчет
	|					ТОГДА """"
	|				ИНАЧЕ АвансовыйОтчет.СчетУчетаРасчетовСКонтрагентом.Код
	|			КОНЕЦ + ВЫБОР
	|				КОГДА НЕ АвансовыйОтчет.СчетУчетаРасчетовСКонтрагентом = &ПустойСчет
	|						И НЕ АвансовыйОтчет.СчетУчетаРасчетовПоАвансам = &ПустойСчет
	|					ТОГДА "", ""
	|				ИНАЧЕ """"
	|			КОНЕЦ + ВЫБОР
	|				КОГДА АвансовыйОтчет.СчетУчетаРасчетовПоАвансам = &ПустойСчет
	|					ТОГДА """"
	|				ИНАЧЕ АвансовыйОтчет.СчетУчетаРасчетовПоАвансам.Код
	|			КОНЕЦ
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	АвансовыйОтчет.Ссылка
	|ИЗ
	|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК АвансовыйОтчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО АвансовыйОтчет.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И АвансовыйОтчет.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ОплатаПоставщикам))
	|			И (АвансовыйОтчет.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	АвансовыйОтчет.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчет.Контрагент,
	|	АвансовыйОтчет.НомерВходящегоДокумента,
	|	АвансовыйОтчет.ДатаВходящегоДокумента,
	|	АвансовыйОтчет.ВидДокВходящий,
	|	ВЫБОР
	|		КОГДА АвансовыйОтчет.СчетУчетаРасчетовСКонтрагентом.Код = АвансовыйОтчет.СчетУчетаРасчетовПоАвансам.Код
	|			ТОГДА АвансовыйОтчет.СчетУчетаРасчетовСКонтрагентом.Код
	|		ИНАЧЕ ВЫБОР
	|				КОГДА АвансовыйОтчет.СчетУчетаРасчетовСКонтрагентом = &ПустойСчет
	|					ТОГДА """"
	|				ИНАЧЕ АвансовыйОтчет.СчетУчетаРасчетовСКонтрагентом.Код
	|			КОНЕЦ + ВЫБОР
	|				КОГДА НЕ АвансовыйОтчет.СчетУчетаРасчетовСКонтрагентом = &ПустойСчет
	|						И НЕ АвансовыйОтчет.СчетУчетаРасчетовПоАвансам = &ПустойСчет
	|					ТОГДА "", ""
	|				ИНАЧЕ """"
	|			КОНЕЦ + ВЫБОР
	|				КОГДА АвансовыйОтчет.СчетУчетаРасчетовПоАвансам = &ПустойСчет
	|					ТОГДА """"
	|				ИНАЧЕ АвансовыйОтчет.СчетУчетаРасчетовПоАвансам.Код
	|			КОНЕЦ
	|	КОНЕЦ,
	|	АвансовыйОтчет.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансовыйОтчет.Поставщик,
	|	АвансовыйОтчет.НомерВходящегоДокумента,
	|	АвансовыйОтчет.ДатаВходящегоДокумента,
	|	АвансовыйОтчет.ВидДокВходящий,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, ВЫБОР
	|				КОГДА АвансовыйОтчет.Ссылка.СуммаВключаетНДС
	|					ТОГДА ВЫБОР
	|							КОГДА АвансовыйОтчет.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
	|								ТОГДА АвансовыйОтчет.Сумма
	|							ИНАЧЕ АвансовыйОтчет.Сумма * (АвансовыйОтчет.Ссылка.КурсДокумента / АвансовыйОтчет.Ссылка.КратностьДокумента)
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА АвансовыйОтчет.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
	|							ТОГДА АвансовыйОтчет.Сумма + АвансовыйОтчет.СуммаНДС
	|						ИНАЧЕ (АвансовыйОтчет.Сумма + АвансовыйОтчет.СуммаНДС) * (АвансовыйОтчет.Ссылка.КурсДокумента / АвансовыйОтчет.Ссылка.КратностьДокумента)
	|					КОНЕЦ
	|			КОНЕЦ)),
	|	СУММА(ВЫБОР
	|			КОГДА АвансовыйОтчет.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА АвансовыйОтчет.Ссылка.СуммаВключаетНДС = ИСТИНА
	|						ТОГДА АвансовыйОтчет.Сумма
	|					ИНАЧЕ АвансовыйОтчет.Сумма + АвансовыйОтчет.СуммаНДС
	|				КОНЕЦ
	|		КОНЕЦ),
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, ВЫБОР
	|				КОГДА АвансовыйОтчет.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
	|					ТОГДА АвансовыйОтчет.СуммаНДС
	|				ИНАЧЕ АвансовыйОтчет.СуммаНДС * (АвансовыйОтчет.Ссылка.КурсДокумента / АвансовыйОтчет.Ссылка.КратностьДокумента)
	|			КОНЕЦ)),
	|	АвансовыйОтчет.СчетЗатрат.Код,
	|	ВЫБОР
	|		КОГДА АвансовыйОтчет.Ссылка.НДСНеВыделять
	|					И АвансовыйОтчет.СуммаНДС = 0
	|				ИЛИ АвансовыйОтчет.Ссылка.НДСВключенВСтоимость
	|					И (АвансовыйОтчет.СуммаНДС = 0
	|						ИЛИ АвансовыйОтчет.ПредъявленСФ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ АвансовыйОтчет.СчетУчетаНДС.Код
	|	КОНЕЦ,
	|	АвансовыйОтчет.Ссылка
	|ИЗ
	|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО АвансовыйОтчет.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И АвансовыйОтчет.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Прочее))
	|			И (АвансовыйОтчет.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	АвансовыйОтчет.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчет.Поставщик,
	|	АвансовыйОтчет.НомерВходящегоДокумента,
	|	АвансовыйОтчет.ДатаВходящегоДокумента,
	|	АвансовыйОтчет.ВидДокВходящий,
	|	АвансовыйОтчет.СчетЗатрат.Код,
	|	АвансовыйОтчет.Ссылка,
	|	ВЫБОР
	|		КОГДА АвансовыйОтчет.Ссылка.НДСНеВыделять
	|					И АвансовыйОтчет.СуммаНДС = 0
	|				ИЛИ АвансовыйОтчет.Ссылка.НДСВключенВСтоимость
	|					И (АвансовыйОтчет.СуммаНДС = 0
	|						ИЛИ АвансовыйОтчет.ПредъявленСФ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ АвансовыйОтчет.СчетУчетаНДС.Код
	|	КОНЕЦ";
	
	Запрос.Выполнить();
	
	// Свертка сумм по документам, подтверждающим расходы.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеАвансовогоОтчета.Ссылка КАК Ссылка,
	|	ДанныеАвансовогоОтчета.Поставщик КАК Поставщик,
	|	ДанныеАвансовогоОтчета.ДокументНомер КАК ДокументНомер,
	|	ДанныеАвансовогоОтчета.ДокументДата КАК ДокументДата,
	|	ДанныеАвансовогоОтчета.НаименованиеРасхода КАК НаименованиеРасхода,
	|	СУММА(ДанныеАвансовогоОтчета.ПоОтчету) КАК ПоОтчету,
	|	СУММА(ДанныеАвансовогоОтчета.ПоОтчетуВВалюте) КАК ПоОтчетуВВалюте,
	|	СУММА(ДанныеАвансовогоОтчета.СуммаНДС) КАК СуммаНДС
	|ИЗ
	|	ДанныеАвансовогоОтчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеАвансовогоОтчета.Ссылка,
	|	ДанныеАвансовогоОтчета.Поставщик,
	|	ДанныеАвансовогоОтчета.ДокументНомер,
	|	ДанныеАвансовогоОтчета.ДокументДата,
	|	ДанныеАвансовогоОтчета.НаименованиеРасхода
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументДата,
	|	ДокументНомер";
	
	ВыборкаПоТоварам = Запрос.Выполнить().Выбрать();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АвансовыйОтчет.Ссылка КАК Ссылка,
	|	АвансовыйОтчет.ЗаРубежом КАК ЗаРубежом,
	|	СУММА(АвансовыйОтчет.Сумма - АвансовыйОтчет.СуммаСверхНормы) КАК СуммаВПределахНормы,
	|	СУММА(АвансовыйОтчет.СуммаСверхНормы) КАК СуммаСверхНормы
	|ИЗ
	|	Документ.АвансовыйОтчет.Суточные КАК АвансовыйОтчет
	|ГДЕ
	|	АвансовыйОтчет.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчет.Ссылка,
	|	АвансовыйОтчет.ЗаРубежом
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ВыборкаСуточные = Запрос.Выполнить().Выбрать();
	
	// Выборка уникальных счетов учета по документам, подтверждающим расходы
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеАвансовогоОтчета.Ссылка КАК Ссылка,
	|	ДанныеАвансовогоОтчета.Поставщик КАК Поставщик,
	|	ДанныеАвансовогоОтчета.ДокументНомер КАК ДокументНомер,
	|	ДанныеАвансовогоОтчета.ДокументДата КАК ДокументДата,
	|	ДанныеАвансовогоОтчета.НаименованиеРасхода КАК НаименованиеРасхода,
	|	ДанныеАвансовогоОтчета.СчетЗатрат КАК Счет
	|ИЗ
	|	ДанныеАвансовогоОтчета КАК ДанныеАвансовогоОтчета
	|ГДЕ
	|	ДанныеАвансовогоОтчета.СчетЗатрат <> НЕОПРЕДЕЛЕНО
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДанныеАвансовогоОтчета.Ссылка,
	|	ДанныеАвансовогоОтчета.Поставщик,
	|	ДанныеАвансовогоОтчета.ДокументНомер,
	|	ДанныеАвансовогоОтчета.ДокументДата,
	|	ДанныеАвансовогоОтчета.НаименованиеРасхода,
	|	ДанныеАвансовогоОтчета.СчетНДС
	|ИЗ
	|	ДанныеАвансовогоОтчета КАК ДанныеАвансовогоОтчета
	|ГДЕ
	|	ДанныеАвансовогоОтчета.СчетНДС <> НЕОПРЕДЕЛЕНО
	|
	|УПОРЯДОЧИТЬ ПО
	|	Счет";
	
	ВыборкаСчетов  = Запрос.Выполнить().Выбрать();
	ПервыйДокумент = Истина;
	
	Субсчета71     = БухгалтерскийУчетПовтИсп.СчетаВИерархии(
	ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
	Субсчета71Вал  = БухгалтерскийУчетПовтИсп.СчетаВИерархии(
	ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал);
	
	Пока Шапка.Следующий() Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент    = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ок_ПечатьАвансовогоОтчета.ПФ_MXL_АвансовыйОтчет");
		
		// ТИТУЛЬНЫЙ ЛИСТ
		СтруктураРасчетаАванса = Документы.АвансовыйОтчет.НовыеПараметрыРасчетаОстаткаАванса();
		ЗаполнитьЗначенияСвойств(СтруктураРасчетаАванса, Шапка);
		
		Если Шапка.ВалютаДокумента <> ВалютаРегламентированногоУчета Тогда
			СтруктураРасчетаАванса.Вставить("Субсчета71", Субсчета71Вал);
		Иначе
			СтруктураРасчетаАванса.Вставить("Субсчета71", Субсчета71);
		КонецЕсли;
		
		СуммаДоДокумента = Документы.АвансовыйОтчет.ПредыдущийАвансПодотчетногоЛица(СтруктураРасчетаАванса);
		
		ДанныеВал  = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Шапка.ВалютаДокумента, Шапка.ДатаДокумента);
		
		Если НЕ ЗначениеЗаполнено(ДанныеВал.Кратность) Тогда
			ДанныеВал.Кратность = 1;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДанныеВал.Курс) Тогда
			ДанныеВал.Курс = 1;
		КонецЕсли;
		
		ПолученоИзКассы = 0;
		ПолученоПоКартам = 0;
		ПолученоПоДенежнымДокументам = 0;
		
		ДокументыАвансов.Сбросить();
		НачальныйОстаток = 0;
		Пока ДокументыАвансов.НайтиСледующий(Новый Структура("АвансовыйОтчет", Шапка.Ссылка)) Цикл
			ДобавленнаяСумма = ?(ЗначениеЗаполнено(ДокументыАвансов.Сумма), ДокументыАвансов.Сумма, 0);
			Если ДокументыАвансов.Сумма<> ДокументыАвансов.СуммаДокумента Тогда
				НачальныйОстаток = НачальныйОстаток+ДокументыАвансов.Сумма;
				Если СОстатком Тогда
					Продолжить;
				КонецЕсли;
				
			КонецЕсли;
			
			Если ТипЗнч(ДокументыАвансов.ДокументАванса) = Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда 				
				ПолученоИзКассы = ПолученоИзКассы + ДобавленнаяСумма;
			ИначеЕсли ТипЗнч(ДокументыАвансов.ДокументАванса) = Тип("ДокументСсылка.ВыдачаДенежныхДокументов") Тогда
				ПолученоПоДенежнымДокументам = ПолученоПоДенежнымДокументам + ДобавленнаяСумма;
			ИначеЕсли ТипЗнч(ДокументыАвансов.ДокументАванса) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета") Тогда
				ПолученоПоКартам = ПолученоПоКартам + ДобавленнаяСумма; 				
			КонецЕсли;
			
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Титул");
		
		КурсДока = ЗаполнениеДокументов.КурсДокумента(Шапка.Ссылка, ВалютаРегламентированногоУчета);
		КратДока = ЗаполнениеДокументов.КратностьДокумента(Шапка.Ссылка, ВалютаРегламентированногоУчета);
		КурсоваяРазница = 0;
		
		Если Шапка.ВалютаДокумента <> ВалютаРегламентированногоУчета Тогда
			ОбластьМакета.Параметры.ПредставлениеВалютыДокумента        = Шапка.ПредставлениеВалюты;
			ОбластьМакета.Параметры.ПолученоИзКассыВВалюте              = ПолученоИзКассы;
			ОбластьМакета.Параметры.ПолученоВВалютеПоКартам             = ПолученоПоКартам;
			ОбластьМакета.Параметры.ПолученоПоДенежнымДокументам        = ПолученоПоДенежнымДокументам;
			ОбластьМакета.Параметры.ПолученоВВалютеПоДенежнымДокументам = ПолученоПоДенежнымДокументам;
			ПолученоИзКассы         = ?(КратДока <> 0, Окр(ПолученоИзКассы * КурсДока / КратДока, 2), 0);
			ПолученоПоКартам        = ?(КратДока <> 0, Окр(ПолученоПоКартам * КурсДока / КратДока, 2), 0);
			ПолученоПоДенежнымДокументам = ?(КратДока <> 0, Окр(ПолученоПоДенежнымДокументам * КурсДока / КратДока, 2), 0);
			
			ЗапросПоВалютнымПроводкам.Сбросить();
			Если ЗапросПоВалютнымПроводкам.НайтиСледующий(Новый Структура("Регистратор", Шапка.Ссылка)) Тогда
				КурсоваяРазница = ЗапросПоВалютнымПроводкам.СуммаДт - ЗапросПоВалютнымПроводкам.СуммаКт;
			КонецЕсли;
			
			// курсовую разницу не разделяем по видам полученных средств
			Если ПолученоИзКассы > 0 Тогда
				ПолученоИзКассы = ПолученоИзКассы + КурсоваяРазница;
			Иначе
				ПолученоПоКартам = ПолученоПоКартам + КурсоваяРазница;
			КонецЕсли;
			
			Израсходовано = Окр(Шапка.СуммаДокумента * КурсДока / КратДока, 2) + КурсоваяРазница;
		Иначе
			Израсходовано = Шапка.СуммаДокумента;
		КонецЕсли;
		
		ИтогоПолучено = ПолученоИзКассы + ПолученоПоКартам + ПолученоПоДенежнымДокументам;
		
		СуммаДоДокумента = СуммаДоДокумента - ИтогоПолучено;
		
		// Выводим титульный лист авансового отчета
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ОбластьМакета.Параметры.НачальныйОстаток    =  НачальныйОстаток;
		ОбластьМакета.Параметры.НачальныйПерерасход = "";
		
		Если Не СОстатком Тогда 
			ОбластьМакета.Параметры.НачальныйОстаток = "";
		КонецЕсли;
		
		ОбластьМакета.Параметры.ИтогоПолучено = ИтогоПолучено;
		ОбластьМакета.Параметры.Израсходовано = Израсходовано;
		
		
		Если НЕ СОстатком Тогда
			ОстатокНаКонец = ИтогоПолучено - Израсходовано;
		Иначе
			ОстатокНаКонец = НачальныйОстаток + ИтогоПолучено - Израсходовано;
		КонецЕсли;  		
		
	
	
		//// ДОКУМЕНТ РАСЧЕТА
		//Если ОстатокНаКонец = 0 Тогда
		//	ОбластьМакета.Параметры.ДокументРасчета = "кассовому ордеру № ____  ""        "" _____________ 20 __ г.";
		//ИначеЕсли ОстатокНаКонец > 0 Тогда
		//	ДокументРасчета = ПолучитьДокументДляОстатка(Шапка.Ссылка);
		//	Если ДокументРасчета.Количество = 1 Тогда
		//		ДокументРасчетаНаименование = ПолучитьНаименованиеДокументаРасчетов(ДокументРасчета.Ссылка);
		//		ОбластьМакета.Параметры.ДокументРасчета = ДокументРасчетаНаименование;
		//	Иначе
		//		ОбластьМакета.Параметры.ДокументРасчета = "кассовому ордеру № ____  ""        "" _____________ 20 __ г.";
		//		Если ДокументРасчета.Количество = 2 Тогда
		//			ОбщегоНазначения.СообщитьПользователю("Найдено несколько документов расчета, закрывающих авансовый отчет " + Шапка.Ссылка);
		//		КонецЕсли;				
		//	КонецЕсли;
		//	
		//ИначеЕсли ОстатокНаКонец < 0 Тогда
		//	ДокументРасчета = ПолучитьДокументДляПерерасхода(Шапка.Ссылка);
		//	Если ДокументРасчета.Количество = 1 Тогда
		//		ДокументРасчетаНаименование = ПолучитьНаименованиеДокументаРасчетов(ДокументРасчета.Ссылка);
		//		ОбластьМакета.Параметры.ДокументРасчета = ДокументРасчетаНаименование;
		//	Иначе
		//		ОбластьМакета.Параметры.ДокументРасчета = "кассовому ордеру № ____  ""        "" _____________ 20 __ г.";
		//		Если ДокументРасчета.Количество = 2 Тогда
		//			ОбщегоНазначения.СообщитьПользователю("Найдено несколько документов расчета, закрывающих авансовый отчет " + Шапка.Ссылка);
		//		КонецЕсли;				
		//	КонецЕсли;
		//КонецЕсли;
		//МассивАО = Новый Массив;
		МассивАО =  Шапка.Ссылка.ВыданныеАвансы.Выгрузить().ВыгрузитьКолонку("ДокументАванса");
		МассивАО.Добавить(Шапка.Ссылка);
		
		Если Шапка.Ссылка.ВыданныеАвансы.Итог("ок_СуммаАванса") = Шапка.Ссылка.СуммаДокумента 
			или ПолучитьДокументДляОстатка(МассивАО)Тогда
			ОбластьМакета.Параметры.ДокументРасчета = "по кассовому ордеру № ____  ""        "" _____________ 20 __ г.";
			СуммаОстатка = 0;
		Иначе
			МассивДокументовРасчета = Шапка.Ссылка.ВыданныеАвансы.Выгрузить().ВыгрузитьКолонку("ДокументАванса");
			МассивДокументовРасчета.добавить(Шапка.Ссылка);
			
			ДокументРегистратор = ПолучитьПоследнийРегистратор(МассивДокументовРасчета, Шапка.Ссылка.ФизЛицо, Шапка.Ссылка.Дата);
			Если ТипЗнч(ДокументРегистратор.Документ) = Тип("ДокументСсылка.ок_ЗакрытиеЗадолженностиПодотчетногоЛица") Тогда
				Для каждого строка из ДокументРегистратор.Документ.ДолгиКомпании Цикл
					Если ТипЗнч(строка.ДокументРасчетов) = Тип("ДокументСсылка.ок_ОперацияБОСС") Тогда
						ОбластьМакета.Параметры.ДокументРасчета = "удержано из заработной платы "+Формат(строка.ДокументРасчетов.Дата,"ДЛФ = Д");
						СуммаОстатка  = ДокументРегистратор.СуммаДвижения;
						НайденаОперацияБОСС = Истина;
					Прервать;
					КонецЕсли;
				КонецЦикла;
				Если не НайденаОперацияБОСС Тогда
					ОбластьМакета.Параметры.ДокументРасчета = "по кассовому ордеру № ____  ""        "" _____________ 20 __ г.";
					СуммаОстатка  = ДокументРегистратор.СуммаДвижения;
				КонецЕсли;
				
				
			Иначе
				Если ДокументРегистратор.Сумма= ОстатокНаКонец Тогда
					//ОбластьМакета.Параметры.ДокументРасчета = "Документ №" + ДокументРегистратор.Документ.Номер + " от " + ДокументРегистратор.Документ.Дата;
					ОбластьМакета.Параметры.ДокументРасчета = "по "+ПолучитьНаименованиеДокументаРасчетов(ДокументРегистратор.Документ);
					СуммаОстатка  = ДокументРегистратор.Сумма;
				Иначе
					Если ДокументРегистратор.количество > 1 Тогда
						ОбщегоНазначения.СообщитьПользователю("Найдено несколько документов расчета, закрывающих авансовый отчет");
					СуммаОстатка = 0;
					ОбластьМакета.Параметры.ДокументРасчета = "по кассовому ордеру № ____  ""        "" _____________ 20 __ г.";
					ИначеЕсли ДокументРегистратор.количество = 1 Тогда
					СуммаОстатка = ОстатокНаКонец;
					ОбластьМакета.Параметры.ДокументРасчета = ПолучитьНаименованиеДокументаРасчетов(ДокументРегистратор.Документ);
					Иначе
					СуммаОстатка = 0;
					ОбластьМакета.Параметры.ДокументРасчета = "по кассовому ордеру № ____  ""        "" _____________ 20 __ г.";
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
			
		Если ОстатокНаКонец >= 0  Тогда
			ОбластьМакета.Параметры.КонечныйОстаток    =  ОстатокНаКонец;
		Иначе
			ОбластьМакета.Параметры.КонечныйПерерасход = -ОстатокНаКонец;
		КонецЕсли;  		
		
		//Если НЕ ДокументРегистратор.Сумма = 0 Тогда
			СуммаОстатка = Макс(СуммаОстатка,-СуммаОстатка);

			Если Шапка.ВалютаДокумента <> ВалютаРегламентированногоУчета Тогда
				СуммаОстатка = ?(КратДока <> 0, Окр(СуммаОстатка * КурсДока / КратДока, 2), 0);
			КонецЕсли;
			
			СуммаОстаткаРуб = Цел(СуммаОстатка);
			
			ОбластьМакета.Параметры.СуммаОстаткаРуб = СуммаОстаткаРуб;
			ОбластьМакета.Параметры.СуммаОстаткаКоп = (СуммаОстатка - СуммаОстаткаРуб)*100;
			Если (СуммаОстатка - СуммаОстаткаРуб)*100 = 0 Тогда
				ОбластьМакета.Параметры.СуммаОстаткаКоп = "00"	
			КонецЕсли;
			
		//КонецЕсли;		
		
		СтруктураДанных = Документы.АвансовыйОтчет.НовыеПараметрыЗаполненияПечатнойФормыАвансовогоОтчета();
		ЗаполнитьЗначенияСвойств(СтруктураДанных, Шапка);
		ОбщиеПараметры = Документы.АвансовыйОтчет.ПараметрыЗаполненияПечатнойФормыАвансовыйОтчет(СтруктураДанных, ДанныеВал);
		ОбщиеПараметры.Вставить("ПолученоИзКассы",              ПолученоИзКассы);
		ОбщиеПараметры.Вставить("ПолученоПоКартам",             ПолученоПоКартам);
		ОбщиеПараметры.Вставить("КоличествоДокументов",         Шапка.КоличествоДокументов);
		ОбщиеПараметры.Вставить("КоличествоЛистов",             Шапка.КоличествоЛистов);
		ОбщиеПараметры.Вставить("ПолученоПоДенежнымДокументам", ПолученоПоДенежнымДокументам);

		
		ОбластьМакета.Параметры.Заполнить(ОбщиеПараметры);
		ОбластьМакета.Параметры.Заполнить(Документы.АвансовыйОтчет.ПараметрыБухгалтерскойЗаписиПриПечатиАвансовогоОтчета(
		ВыборкаПроводок, Шапка.Ссылка));
		
		ОбластьМакета.Параметры.ТабельныйНомер = Шапка.ТабельныйНомер;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// ОБОРОТНАЯ СТОРОНА
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим табличные части
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		НомерСтроки   = 0;
		
		ИтогоПоОтчету        = 0;
		ИтогоПоОтчетуВВалюте = 0;
		
		ВыборкаПоТоварам.Сбросить();
		Пока ВыборкаПоТоварам.НайтиСледующий(Новый Структура("Ссылка", Шапка.Ссылка)) Цикл
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаПоТоварам);
			НомерСтроки = НомерСтроки + 1;
			ОбластьМакета.Параметры.НомерСтроки         = НомерСтроки;
			ОбластьМакета.Параметры.ДокументДата        = ВыборкаПоТоварам.ДокументДата;
			ОбластьМакета.Параметры.НаименованиеРасхода = СокрЛП(ВыборкаПоТоварам.НаименованиеРасхода);
			ОбластьМакета.Параметры.ДебетСубСчета 		= "";
			
			СтруктураПоиска = Новый Структура();
			СтруктураПоиска.Вставить("Поставщик",           ВыборкаПоТоварам.Поставщик);
			СтруктураПоиска.Вставить("ДокументНомер",       ВыборкаПоТоварам.ДокументНомер);
			СтруктураПоиска.Вставить("ДокументДата",        ВыборкаПоТоварам.ДокументДата);
			СтруктураПоиска.Вставить("НаименованиеРасхода", ВыборкаПоТоварам.НаименованиеРасхода);
			СтруктураПоиска.Вставить("Ссылка",              Шапка.Ссылка);
			
			ВыборкаСчетов.Сбросить();
			Пока ВыборкаСчетов.НайтиСледующий(СтруктураПоиска) Цикл
				ОбластьМакета.Параметры.ДебетСубСчета = ОбластьМакета.Параметры.ДебетСубСчета
				+ ?(ПустаяСтрока(ОбластьМакета.Параметры.ДебетСубСчета), "", ", ")
				+ ВыборкаСчетов.Счет;
			КонецЦикла;
			
			Сумма = ВыборкаПоТоварам.ПоОтчету;
			
			ОбластьМакета.Параметры.ПоОтчету = Сумма;
			ОбластьМакета.Параметры.ПоУчету  = Сумма;
			
			ИтогоПоОтчету = ИтогоПоОтчету + Сумма;
			
			Если Шапка.ВалютаДокумента <> ВалютаРегламентированногоУчета Тогда
				
				СуммаВВалюте = ВыборкаПоТоварам.ПоОтчетуВВалюте;
				
				ОбластьМакета.Параметры.ПоУчетуВВалюте  = СуммаВВалюте;
				ОбластьМакета.Параметры.ПоОтчетуВВалюте = СуммаВВалюте;
				
				ИтогоПоОтчетуВВалюте = ИтогоПоОтчетуВВалюте + СуммаВВалюте;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		ШаблонНаименованияРасхода = НСтр("ru='Авансовый отчет (%1)'");
		ШаблонОписанияСуточныхВПределахНорм = НСтр("ru='суточные %1'");
		ШаблонОписанияСуточныхСверхНорм = НСтр("ru='суточные %1 сверх нормы'");
		
		Пока ВыборкаСуточные.НайтиСледующий(Новый Структура("Ссылка", Шапка.Ссылка)) Цикл
			
			ОписаниеСуточных = СтрШаблон(
			ШаблонОписанияСуточныхВПределахНорм,
			?(ВыборкаСуточные.ЗаРубежом, НСтр("ru='за рубежом'"), НСтр("ru='по России'")));
			
			НаименованиеРасхода = СтрШаблон(ШаблонНаименованияРасхода, СокрЛП(ОписаниеСуточных));
			
			НомерСтроки = НомерСтроки + 1;
			ОбластьМакета.Параметры.НомерСтроки         = НомерСтроки;
			ОбластьМакета.Параметры.ДокументДата        = Шапка.ДатаДокумента;
			ОбластьМакета.Параметры.ДокументНомер       = Шапка.Номер;
			ОбластьМакета.Параметры.НаименованиеРасхода = НаименованиеРасхода;
			ОбластьМакета.Параметры.ДебетСубСчета 		= Шапка.СчетЗатрат;
			
			Сумма = ВыборкаСуточные.СуммаВПределахНормы;
			
			ОбластьМакета.Параметры.ПоОтчету = Сумма;
			ОбластьМакета.Параметры.ПоУчету  = Сумма;
			
			ИтогоПоОтчету = ИтогоПоОтчету + Сумма;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Выведем строку суточных сверх нормы
			Если ВыборкаСуточные.СуммаСверхНормы > 0 Тогда
				
				ОписаниеСуточных = СтрШаблон(
				ШаблонОписанияСуточныхСверхНорм,
				?(ВыборкаСуточные.ЗаРубежом, НСтр("ru='за рубежом'"), НСтр("ru='по России'")));
				
				НаименованиеРасхода = СтрШаблон(ШаблонНаименованияРасхода, СокрЛП(ОписаниеСуточных));
				
				НомерСтроки = НомерСтроки + 1;
				ОбластьМакета.Параметры.НомерСтроки         = НомерСтроки;
				ОбластьМакета.Параметры.ДокументДата        = Шапка.ДатаДокумента;
				ОбластьМакета.Параметры.ДокументНомер       = Шапка.Номер;
				ОбластьМакета.Параметры.НаименованиеРасхода = НаименованиеРасхода;
				ОбластьМакета.Параметры.ДебетСубСчета 		= Шапка.СчетЗатрат;
				
				Сумма = ВыборкаСуточные.СуммаСверхНормы;
				
				ОбластьМакета.Параметры.ПоОтчету = Сумма;
				ОбластьМакета.Параметры.ПоУчету  = Сумма;
				
				ИтогоПоОтчету = ИтогоПоОтчету + Сумма;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЕсли;	
			
		КонецЦикла;	
		
		// Выводим подвал авансового отчета
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.Заполнить(ОбщиеПараметры);
		ОбластьМакета.Параметры.ИтогоПоОтчету        = ИтогоПоОтчету;
		ОбластьМакета.Параметры.ИтогоПоОтчетуВВалюте = ИтогоПоОтчетуВВалюте;
		ОбластьМакета.Параметры.ИтогоПоУчету         = ИтогоПоОтчету;
		ОбластьМакета.Параметры.ИтогоПоУчетувВалюте  = ИтогоПоОтчетуВВалюте;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
		НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьДанныеДокументов(МассивДокументов)
	
	СтруктураВозврата = Новый Структура("НачалоПериода, ОкончаниеПериода, Организации, ЕстьВалютные",
	Дата(1, 1, 1), Дата(1, 1, 1), Справочники.Организации.ПустаяСсылка(), Ложь);
	Если ТипЗнч(МассивДокументов) <> Тип("Массив") Или МассивДокументов.Количество() = 0 Тогда
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("ВалютаРегУчета",   ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(АвансовыйОтчет.Дата) КАК НачалоПериода,
	|	МАКСИМУМ(АвансовыйОтчет.Дата) КАК ОкончаниеПериода
	|ИЗ
	|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
	|ГДЕ
	|	АвансовыйОтчет.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АвансовыйОтчет.Организация КАК Организации
	|ИЗ
	|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
	|ГДЕ
	|	АвансовыйОтчет.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	АвансовыйОтчет.Ссылка
	|ИЗ
	|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
	|ГДЕ
	|	АвансовыйОтчет.Ссылка В(&МассивДокументов)
	|	И АвансовыйОтчет.ВалютаДокумента <> &ВалютаРегУчета";
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ВыборкаДата = Пакет[0].Выбрать();
	Если ВыборкаДата.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, ВыборкаДата);
	КонецЕсли;
	
	Если НЕ Пакет[1].Пустой() Тогда
		СтруктураВозврата.Вставить("Организации", Пакет[1].Выгрузить().ВыгрузитьКолонку("Организации"));
	КонецЕсли;
	
	СтруктураВозврата.Вставить("ЕстьВалютные", Не Пакет[2].Пустой());
	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция ПолучитьДокументДляОстатка(МассивДокументовРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ок_ВзаиморасчетыСПодотчетнымиЛицамиОстатки.ДокументРасчетов КАК ДокументРасчетов,
		|	ок_ВзаиморасчетыСПодотчетнымиЛицамиОстатки.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления.ок_ВзаиморасчетыСПодотчетнымиЛицами.Остатки(, ДокументРасчетов В (&ДокументыАванса)) КАК ок_ВзаиморасчетыСПодотчетнымиЛицамиОстатки
		|ГДЕ
		|	ок_ВзаиморасчетыСПодотчетнымиЛицамиОстатки.СуммаОстаток > 0";
	
	Запрос.УстановитьПараметр("ДокументыАванса", МассивДокументовРасчета);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Если ВыборкаДетальныеЗаписи.Количество()  Тогда
		Возврат  Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

Функция ПолучитьПоследнийРегистратор(МассивДокументов, ФизЛицо, ДатаАО)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ок_ВзаиморасчетыСПодотчетнымиЛицами.Регистратор КАК Регистратор,
		|	ВЫБОР
		|		КОГДА ок_ВзаиморасчетыСПодотчетнымиЛицами.Регистратор ССЫЛКА Документ.ОперацияБух
		|			ТОГДА ок_ВзаиморасчетыСПодотчетнымиЛицами.Регистратор.СуммаОперации
		|		КОГДА ок_ВзаиморасчетыСПодотчетнымиЛицами.Регистратор ССЫЛКА Документ.ок_ОперацияБОСС
		|			ТОГДА 0
		|		КОГДА ок_ВзаиморасчетыСПодотчетнымиЛицами.Регистратор ССЫЛКА Документ.ок_ЗакрытиеЗадолженностиПодотчетногоЛица
		|			ТОГДА 0
		|		ИНАЧЕ ок_ВзаиморасчетыСПодотчетнымиЛицами.Регистратор.СуммаДокумента
		|	КОНЕЦ КАК Сумма,
		|	ок_ВзаиморасчетыСПодотчетнымиЛицами.Сумма КАК СуммаДвижения
		|ИЗ
		|	РегистрНакопления.ок_ВзаиморасчетыСПодотчетнымиЛицами КАК ок_ВзаиморасчетыСПодотчетнымиЛицами
		|ГДЕ
		|	ок_ВзаиморасчетыСПодотчетнымиЛицами.ДокументРасчетов В(&МассивДокументов)
		|	И ок_ВзаиморасчетыСПодотчетнымиЛицами.ПодотчетноеЛицо = &ПодотчетноеЛицо
		|	И ок_ВзаиморасчетыСПодотчетнымиЛицами.Регистратор.Дата > &ДатаАО
		|
		|УПОРЯДОЧИТЬ ПО
		|	ок_ВзаиморасчетыСПодотчетнымиЛицами.МоментВремени УБЫВ";
	
	Запрос.УстановитьПараметр("ПодотчетноеЛицо", ФизЛицо);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("ДатаАО", ДатаАО);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ДокументРезультат = Новый Структура("Документ, Количество, Сумма, СуммаДвижения", Неопределено,  0, 0, 0);
		
	Если ВыборкаДетальныеЗаписи.Количество()  Тогда
		Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда
		 ВыборкаДетальныеЗаписи.Следующий();
		 ДокументРезультат.Вставить("Документ", ВыборкаДетальныеЗаписи.Регистратор);
		 ДокументРезультат.Вставить("Количество", 1);
 		 ДокументРезультат.Вставить("Сумма", ВыборкаДетальныеЗаписи.Сумма);
  		 ДокументРезультат.Вставить("СуммаДвижения", ВыборкаДетальныеЗаписи.СуммаДвижения);
	 Иначе
		 ДокументРезультат.Вставить("Количество", 2);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДокументРезультат;
КонецФункции

Функция ПолучитьНаименованиеДокументаРасчетов(СсылкаНаДокумент)
	Если ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
		ТипДокумента = "Расходный кассовый ордер";
		Номер = СсылкаНаДокумент.Номер;
		Дата = Формат(СсылкаНаДокумент.Дата, "ДФ=dd.MM.yyyy");
		Наименование = ТипДокумента + " " + Номер + " от " + Дата;
	ИначеЕсли ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда
		ТипДокумента = "Приходный кассовый ордер";
		Номер = СсылкаНаДокумент.Номер;
		Дата = Формат(СсылкаНаДокумент.Дата, "ДФ=dd.MM.yyyy");
		Наименование = ТипДокумента + " " + Номер + " от " + Дата;
	ИначеЕсли ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета") Тогда
		ТипДокумента = "Списание с расчетного счета";
		Номер = СсылкаНаДокумент.Номер;
		Дата = Формат(СсылкаНаДокумент.Дата, "ДФ=dd.MM.yyyy");
		Наименование = ТипДокумента + " " + Номер + " от " + Дата;
	ИначеЕсли ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.ок_ЗакрытиеЗадолженностиПодотчетногоЛица") Тогда
		ТипДокумента = "Удержано из заработной платы";
		Дата = ПолучитьДатуОперацииБОСС(СсылкаНаДокумент);
		Наименование = ТипДокумента + " " + Дата;
	Иначе
		Наименование = "кассовому ордеру № ____  ""        "" _____________ 20 __ г.";
	КонецЕсли;
	Возврат Наименование;
КонецФункции

Функция ПолучитьДатуОперацииБОСС(СсылкаНаДокумент)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ок_ВзаиморасчетыСПодотчетнымиЛицами.ДокументРасчетов.Дата КАК ДокументРасчетаДата
		|ИЗ
		|	РегистрНакопления.ок_ВзаиморасчетыСПодотчетнымиЛицами КАК ок_ВзаиморасчетыСПодотчетнымиЛицами
		|ГДЕ
		|	ок_ВзаиморасчетыСПодотчетнымиЛицами.Регистратор = &Регистратор
		|	И ок_ВзаиморасчетыСПодотчетнымиЛицами.ДокументРасчетов ССЫЛКА Документ.ок_ОперацияБОСС";
	
	Запрос.УстановитьПараметр("Регистратор", СсылкаНаДокумент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат Формат(ВыборкаДетальныеЗаписи.ДокументРасчетаДата,"ДФ=dd.MM.yyyy");
	Иначе
		Возврат 0;
	КонецЕсли;

КонецФункции
#КонецОбласти

#КонецЕсли
//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Конец 2021-05-25 (#ТП_БП05_ФР12, #ТП_БП05_ФР13)



















