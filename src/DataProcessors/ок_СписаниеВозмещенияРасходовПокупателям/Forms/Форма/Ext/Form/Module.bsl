
//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Начало 2021-10-06 (#ТП_БП11_ФР06)  
#Область ОписаниеПеременных

&НаКлиенте 
Перем мКэшРеквизитовФормы;

#КонецОбласти
//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Конец 2021-10-06 (#ТП_БП11_ФР06)


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
		
	//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Начало 2021-09-22 (#ТП_БП11_ФР06)
	//Объект.Организация = ОК_ОбщегоНазначения.ПолучитьЗначениеУниверсальнойНастройки("РасходыПокупателей", "ОрганизацияВозмещение");
	//Объект.СтатьяДДС = ОК_ОбщегоНазначения.ПолучитьЗначениеУниверсальнойНастройки("РасходыПокупателей", "СтатьяДДС");
	//Элементы.Документ.Видимость = ЗначениеЗаполнено(Объект.Документ);
	
	// Заменено на:
	СтатьяДДС = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("СтатьяДДСВозмещениеРасходов", Неопределено); 
	Организация = бит_БК_Общий.ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных("Организации", "Организация ОКЕЙ");

	//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Конец 2021-09-22 (#ТП_БП11_ФР06)

КонецПроцедуры


//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Начало 2021-10-06 (#ТП_БП11_ФР06)
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Зададим имена реквизитов, подлежащих кешированию.
	мКэшРеквизитовФормы = Новый Структура;
	мКэшРеквизитовФормы.Вставить("НачалоПериода");
	мКэшРеквизитовФормы.Вставить("КонецПериода");
	мКэшРеквизитовФормы.Вставить("Организация");

	// Запомним текущие значения реквизитов формы.
	ЗаполнитьТекущиеЗначенияРеквизитовФормы(); 
КонецПроцедуры
//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Конец 2021-10-06 (#ТП_БП11_ФР06)

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы
//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Начало 2021-09-22 (#ТП_БП11_ФР06)
&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	ОбработатьИзменениеРеквизита("КонецПериода");
	ДатаДокумента = КонецМесяца(КонецПериода);  
КонецПроцедуры 

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	ОбработатьИзменениеРеквизита("НачалоПериода");
КонецПроцедуры 

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбработатьИзменениеРеквизита("Организация");
КонецПроцедуры

//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Конец 2021-09-22 (#ТП_БП11_ФР06)

#КонецОбласти

#Область ОбработчикиКомандФормы
//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Начало 2021-10-06 (#ТП_БП11_ФР06)
&НаКлиенте
Процедура ВыборПериодаНажатие(Команда)
		
	ДиалогРедактированияПериода = Новый ДиалогРедактированияСтандартногоПериода;	
	
	ДиалогРедактированияПериода.Период.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
	ДиалогРедактированияПериода.Период.ДатаНачала = НачалоПериода;
	ДиалогРедактированияПериода.Период.ДатаОкончания = КонецПериода;
	
	Если ДиалогРедактированияПериода.Редактировать() Тогда
		
		НачалоПериода = НачалоДня(ДиалогРедактированияПериода.Период.ДатаНачала);
		КонецПериода = КонецДня(ДиалогРедактированияПериода.Период.ДатаОкончания);
		КонецПериодаПриИзменении(Элементы.КонецПериода);
	КонецЕсли;
	

КонецПроцедуры
//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Конец 2021-10-06 (#ТП_БП11_ФР06)

&НаКлиенте
Процедура Заполнить(Команда)

	Если ПроводкиОперацииБУ.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru = 'Перед заполнением табличная часть будет очищена. Продолжить?'");
		ДополнительныеПараметры = Неопределено;
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗаполнениемТабличнойЧастиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да );
	Иначе
		ЗаполнитьНаСервере();
	КонецЕсли;  	

КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокумент(Команда)
	//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Начало 2021-09-23 (#ТП_БП11_ФР06)
	ДокументСуществует = ДокументСуществует();
	Если Не ДокументСуществует = "" Тогда
		ТекстВопроса = ДокументСуществует;
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.Да, "Перезаполнить");
		СписокКнопок.Добавить(КодВозвратаДиалога.Нет, "Создать новый");
		СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, "Отмена");

		Оповещение = Новый ОписаниеОповещения("ВопросПроверкаСозданияДокументаЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, СписокКнопок, , КодВозвратаДиалога.Да );
	Иначе
		СоздатьДокументНаСервере();
	КонецЕсли; 	

	//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Конец 2021-09-23 (#ТП_БП11_ФР06)
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Начало 2021-09-23 (#ТП_БП11_ФР06)

// Обработка оповещения вопроса пользователю. 
// 
// Параметры:
//  Ответ - Строка.
// 
&НаКлиенте
Процедура ВопросРеквизитПриИзменении(Ответ, ПараметрыОповещения) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда 
		ПроводкиОперацииБУ.Очистить();
		ДобавитьВКэш(ПараметрыОповещения.ИмяРеквизита);
	Иначе
		ИзвлечьИзКэша(ПараметрыОповещения.ИмяРеквизита);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработатьИзменениеРеквизита(ИмяРеквизита)
	
	ПараметрыОповещения = Новый Структура("ИмяРеквизита", ИмяРеквизита);
	ОповещениеВопрос = Новый ОписаниеОповещения("ВопросРеквизитПриИзменении", ЭтотОбъект, ПараметрыОповещения);
	Если ПроводкиОперацииБУ.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru = 'Изменен реквизит "+ИмяРеквизита+". Данные табличной части будут очищены. Продолжить?'");
		ПоказатьВопрос(ОповещениеВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 15, КодВозвратаДиалога.Нет);
	Иначе
		ДобавитьВКэш(ИмяРеквизита);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВопросПроверкаСозданияДокументаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СоздатьДокументНаСервере(Ложь);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		СоздатьДокументНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДокументСуществует() Экспорт
	ТекстКомментария = "Списание возмещение расходов покупателя " + Формат(КонецПериода, "ДФ='MMMM yyyy'");

	ТекстСообщения = "";
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
		|	ОперацияБух.Номер КАК Номер,
		|	ОперацияБух.Дата КАК Дата,
		|	ОперацияБух.Организация.НаименованиеСокращенное КАК Организация,
		|	ОперацияБух.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ОперацияБух КАК ОперацияБух
		|ГДЕ
		|	ОперацияБух.Организация = &Организация
		|	И ОперацияБух.Дата = &Дата
		|	И ОперацияБух.Комментарий ПОДОБНО &Комментарий
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	
	Запрос.УстановитьПараметр("Дата", ДатаДокумента);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Комментарий", ТекстКомментария);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		СсылкаНаДокумент = ВыборкаДетальныеЗаписи.Ссылка;
		ТекстСообщения = "В систему ранее был добавлен документ " 
			+ ВыборкаДетальныеЗаписи.Номер + " от " + Формат(ВыборкаДетальныеЗаписи.Дата, "ДФ=dd.MM.yyyy") 
			+ ", отражающий списание возмещения расходов покупателя за " + Формат(КонецПериода, "ДФ='MMMM yyyy'") 
			+ " по организации " + ВыборкаДетальныеЗаписи.Организация
			+ ". Перезаполнить существующий документ или создать новый?"
	КонецЕсли;
	
	Возврат ТекстСообщения;
КонецФункции
//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Конец 2021-09-23 (#ТП_БП11_ФР06)

&НаКлиенте
Процедура ВопросПередЗаполнениемТабличнойЧастиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	СсылкаНаДокумент = Неопределено;
	ПроводкиОперацииБУ.Очистить();
	
	Если Не ПроверитьЗаполнение() Тогда 	
		Возврат;
	КонецЕсли;
	
	Документ = Неопределено;
	
	//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Начало 2021-09-22 (#ТП_БП11_ФР06)
	
	//Элементы.Документ.Видимость = ЗначениеЗаполнено(Объект.Документ);
	//	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ИСТИНА КАК Активность,
	//	|	&Организация КАК Организация,
	//	|	&ДатаДокумента КАК Период,
	//	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходы) КАК СчетДт,
	//	|	&ПрочиеДоходыИРасходы КАК СубконтоДт1,
	//	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов).Объект КАК СубконтоДт2,
	//	|	&Функция КАК СубконтоДт3,
	//	|	ХозрасчетныйОстатки.Счет КАК СчетКт,
	//	|	ХозрасчетныйОстатки.Субконто1 КАК СубконтоКт1,
	//	|	ХозрасчетныйОстатки.Субконто2 КАК СубконтоКт2,
	//	|	ХозрасчетныйОстатки.Субконто3 КАК СубконтоКт3,
	//	|	ХозрасчетныйОстатки.СуммаОстаток КАК Сумма,
	//	|	ХозрасчетныйОстатки.СуммаНУОстатокДт КАК СуммаНУДт,
	//	|	ХозрасчетныйОстатки.СуммаНУОстатокКт КАК СуммаНУКт,
	//	|	ХозрасчетныйОстатки.СуммаПРОстатокДт КАК СуммаПРДт,
	//	|	ХозрасчетныйОстатки.СуммаПРОстатокКт КАК СуммаПРКт,
	//	|	ХозрасчетныйОстатки.СуммаВРОстатокДт КАК СуммаВРДт,
	//	|	ХозрасчетныйОстатки.СуммаВРОстатокКт КАК СуммаВРКт
	//	|ИЗ
	//	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами), , Организация = &Организация) КАК ХозрасчетныйОстатки
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(
	//	|				&ДатаНачалоМесяца,
	//	|				&ДатаКонецМесяца,
	//	|				,
	//	|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами),
	//	|				,
	//	|				Организация = &Организация
	//	|					И КорСубконто1 = &СтатьяДДС,
	//	|				КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Касса)),
	//	|				) КАК ХозрасчетныйОбороты
	//	|		ПО ХозрасчетныйОстатки.Счет = ХозрасчетныйОбороты.Счет
	//	|			И ХозрасчетныйОстатки.Субконто1 = ХозрасчетныйОбороты.Субконто1
	//	|			И ХозрасчетныйОстатки.Субконто2 = ХозрасчетныйОбороты.Субконто2
	//	|			И ХозрасчетныйОстатки.Субконто3 = ХозрасчетныйОбороты.Субконто3";
	//
	//Запрос.УстановитьПараметр("Дата", КонецДня(Объект.Дата));
	//Запрос.УстановитьПараметр("ДатаНачалоМесяца", НачалоМесяца(Объект.Дата));	
	//Запрос.УстановитьПараметр("ДатаКонецМесяца", КонецМесяца(Объект.Дата));
	//Запрос.УстановитьПараметр("ДатаДокумента", Объект.ДатаДокумента);
	//Запрос.УстановитьПараметр("Организация", Объект.Организация);
	//Запрос.УстановитьПараметр("ПрочиеДоходыИРасходы", Объект.ПрочиеДоходыИРасходы);
	//Запрос.УстановитьПараметр("Функция", Объект.Функция);
	//Запрос.УстановитьПараметр("СтатьяДДС", Объект.СтатьяДДС);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//Если РезультатЗапроса.Пустой() Тогда 
	//	Возврат;
	//КонецЕсли;
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	СтрокаПроводки = Объект.ПроводкиИзОперацииБУХ.Добавить();
	//	ЗаполнитьЗначенияСвойств(СтрокаПроводки, ВыборкаДетальныеЗаписи);
	//	СтрокаПроводки.НадписьНУ = "НУ:";
	//	СтрокаПроводки.НадписьПР = "ПР:";
	//	СтрокаПроводки.НадписьВР = "ВР:";
	//КонецЦикла;
	
	// Заменено на:


	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.КорСубконто2 КАК Объект,
		|	ХозрасчетныйОбороты.Субконто1 КАК Контрагент,
		|	ХозрасчетныйОбороты.Субконто2 КАК Договор,
		|	ХозрасчетныйОбороты.Субконто3 КАК ДокументРасчетов,
		|	ХозрасчетныйОбороты.СуммаОборот КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами),
		|			&МассивСубконто,
		|			Организация = &Организация
		|				И КорСубконто1 = &СтатьяДДС
		|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.Контрагенты).бит_ГруппаКлиентов = ЗНАЧЕНИЕ(Перечисление.бит_ГруппаКлиентов.Розница),
		|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Касса)),
		|			&МассивКорСубконто) КАК ХозрасчетныйОбороты";
	
	МассивСубконто = Новый Массив;
	МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	
	МассивКорСубконто = Новый Массив;
	МассивКорСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств);
	МассивКорСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);
	
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("МассивКорСубконто", МассивКорСубконто);
	Запрос.УстановитьПараметр("МассивСубконто", МассивСубконто);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СтатьяДДС", СтатьяДДС);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ПроводкиОперацииБУ.Загрузить(РезультатЗапроса.Выгрузить());
	//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Конец 2021-09-22 (#ТП_БП11_ФР06)

КонецПроцедуры

&НаСервере
Процедура СоздатьДокументНаСервере(СоздатьНовый = Истина)
	
	Если ПроводкиОперацииБУ.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Если СоздатьНовый Тогда
		// Создаем операцию
		ОперацияБухОбъект = Документы.ОперацияБух.СоздатьДокумент();
	Иначе
		ОперацияБухОбъект = СсылкаНаДокумент.ПолучитьОбъект();
	КонецЕсли;

	ОперацияБухОбъект.Дата = ДатаДокумента;
	ОперацияБухОбъект.Организация = Организация;
	ОперацияБухОбъект.Ответственный = Пользователи.ТекущийПользователь();
	ОперацияБухОбъект.СуммаОперации = ПроводкиОперацииБУ.Итог("Сумма");
	
	// Операция переноса остатков не должна сдвигать последовательность на последний день периода перед переходом,
	// иначе "Закрытие месяца" за прошлый месяц станет неактуальным и сдвинет актуальность операций перехода назад
	ОперацияБухОбъект.ДополнительныеСвойства.Вставить("ПроведенВХронологическойПоследовательности", Истина);
	
	ТекстСодержания = НСтр("ru = 'Списание возмещение расходов покупателя'");
	ОперацияБухОбъект.Содержание = ТекстСодержания;
	
	//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Начало 2021-09-22 (#ТП_БП11_ФР06)
	//ТекстКомментария = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	//	Нстр("ru = '#Создан автоматически обработкой ""Списание возмещения расходов покупателям"", дата создания - %1'"), 
	//	ТекущаяДатаСеанса());
	//ОперацияБухОбъект.Комментарий = ТекстКомментария;
	
	// Заменено на: 
	ТекстКомментария = ТекстСодержания + " " + Формат(КонецПериода, "ДФ='MMMM yyyy'");
	ОперацияБухОбъект.Комментарий = ТекстКомментария;
	//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Конец 2021-09-22 (#ТП_БП11_ФР06)
	
	ОперацияБухОбъект.Записать(РежимЗаписиДокумента.Запись);
	Документ = ОперацияБухОбъект.Ссылка;
	
	// заполняем проводки операции
	Набор = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
	Набор.Отбор.Регистратор.Установить(Документ, Истина);
	
	Если ПрочиеДоходыИРасходы.ПринятиеКНалоговомуУчету Тогда
		НУ = Истина;
	Иначе
		НУ = Ложь;
	КонецЕсли;
	
	Для Каждого Строка Из ПроводкиОперацииБУ Цикл
		
		Проводка = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(Проводка, Строка);
		
		Проводка.Регистратор = Документ;
		Проводка.Активность = Истина;
		Проводка.Период = ДатаДокумента;
		Проводка.Организация = Организация;
		
		//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Начало 2021-09-22 (#ТП_БП11_ФР06)
		//	СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);		
		//	Для Сч = 1 По СвойстваСчета.КоличествоСубконто Цикл
		//		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, СвойстваСчета["ВидСубконто" + Сч], СтрокаПроводки["СубконтоДт"+Сч]);
		//	КонецЦикла; 
		//
		//	СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);		
		//	Для Сч = 1 По СвойстваСчета.КоличествоСубконто Цикл
		//		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, СвойстваСчета["ВидСубконто" + Сч], СтрокаПроводки["СубконтоКт"+Сч]);
		//	КонецЦикла; 
		
		// Заменено на:
		Проводка.СчетДт = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;

		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", ПрочиеДоходыИРасходы);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РеализуемыеАктивы",    Строка.Объект);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОК_Функции", ФункцияЦФО);
		Проводка.Сумма = Строка.Сумма; 
		
		Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами;

		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", Строка.Контрагент);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Договоры",    Строка.Договор);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ДокументыРасчетовСКонтрагентами", Строка.ДокументРасчетов);
		Проводка.Сумма = Строка.Сумма; 
		Если НУ Тогда
			Проводка.СуммаНУДт = Строка.Сумма;
			Проводка.СуммаНУКт = Строка.Сумма;
		Иначе
			Проводка.СуммаПРДт = Строка.Сумма;
			Проводка.СуммаПРКт = Строка.Сумма;
		КонецЕсли;
				
		Проводка.Содержание = ТекстСодержания;
		//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Конец 2021-09-22 (#ТП_БП11_ФР06)		
	КонецЦикла; 
	
	Набор.Записать(Истина);
	
	ОперацияБухОбъект = Документ.ПолучитьОбъект();
	ОперацияБухОбъект.Записать(); // для выполнения трансляции РСБУ в МСФО
	
	//Элементы.Документ.Видимость = ЗначениеЗаполнено(Объект.Документ);
	
КонецПроцедуры


#КонецОбласти

//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Начало 2021-10-06 (#ТП_БП11_ФР06)
#Область РаботаСКэшемРеквизитовФормы

// Процедура заполняет кэш реквизитов формы данными объекта.
// 
// Параметры:
//  Нет.
// 
&НаКлиенте 
Процедура ЗаполнитьТекущиеЗначенияРеквизитовФормы()
	
	Для Каждого КлючИЗначение Из мКэшРеквизитовФормы Цикл
		мКэшРеквизитовФормы[КлючИЗначение.Ключ] = ЭтотОбъект[КлючИЗначение.Ключ];
	КонецЦикла; 
	
КонецПроцедуры

// Процедура добавляет в кэш реквизитов текущее значение заданного реквизита.
// 
// Параметры:
// 	ИмяРеквизита - Строка.
// 
&НаКлиенте
Процедура ДобавитьВКэш(ИмяРеквизита)
	
	мКэшРеквизитовФормы[ИмяРеквизита] = ЭтотОбъект[ИмяРеквизита];	
	
КонецПроцедуры

// Процедура извлекает из кэша и присваивает объекту значение заданного реквизита.
// 
// Параметры:
// 	ИмяРеквизита - Строка.
// 
&НаКлиенте
Процедура ИзвлечьИзКэша(ИмяРеквизита)
	
	ЭтотОбъект[ИмяРеквизита] = мКэшРеквизитовФормы[ИмяРеквизита];
	
КонецПроцедуры


#КонецОбласти
//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Конец 2021-10-06 (#ТП_БП11_ФР06)