////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-02-06 (#3636)
	Элементы.ВерсияОбработки.СписокВыбора.СортироватьПоЗначению(НаправлениеСортировки.Возр);
	ПоследняяВерсияОбработки = Элементы.ВерсияОбработки.СписокВыбора.Получить(Элементы.ВерсияОбработки.СписокВыбора.Количество() - 1);
	ВерсияОбработки = ПоследняяВерсияОбработки.Значение;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-02-06 (#3636)
	
	СостояниеПодключения = ВнешниеИсточникиДанных.СБ_ПлатежныеПорученияAXAPTA.ПолучитьСостояние();
	Если СостояниеПодключения = СостояниеВнешнегоИсточникаДанных.Отключен Тогда
		
		ОписаниеПроблемы = "";
		Если НЕ УстановитьСоединение(ОписаниеПроблемы) Тогда
			
			ОписаниеОшибкиПодключения = ОписаниеПроблемы;
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаНетПодключения;
			
		КонецЕсли;
		
// +СБ. Широков Николай. 2014-09-03. 2.2.2.1.	 Интерфейс «Загрузка платежных документов (AXAPTA)»
	Иначе
		
		//++ СВВ {[+](фрагмент добавлен), Сапожников Вадим 22.09.2015 9:32:33
		ОписаниеПроблемы = "";
		УстановитьСоединение(ОписаниеПроблемы);
		//-- СВВ}
		ОбновитьСведенияОЗагружаемыхДокументах();	
		
// -СБ. Широков Николай
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СБ_ОбновленыПараметрыВнешнегоИсточника"
	   И Параметр = "dbo_ExportDataTo1cPaymOrder" Тогда
	   
	   	ОписаниеПроблемы = "";
	   	Если УстановитьСоединение(ОписаниеПроблемы) Тогда
			
			ОписаниеОшибкиПодключения = ОписаниеПроблемы;
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСпискаПП;   
			Элементы.СписокПлатежек.Обновить();
			
		Иначе
			
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаНетПодключения;
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	
	УстановитьОтборПоПериоду();
	
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеПериодаПриИзменении(Элемент)
	
	УстановитьОтборПоПериоду();
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ СписокПлатежек

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура УстановитьПараметрыОбмена(Команда)
	
	ОткрытьФорму("Обработка.СБ_ЗагрузкаПлатежныхДокументов_AXAPTA.Форма.НастройкаПараметровОбмена",, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрыСоединения(Команда)
	
	ОткрытьФорму("Обработка.СБ_ЗагрузкаПлатежныхДокументов_AXAPTA.Форма.НастройкаПараметровСоединения",, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВыделенныеСтроки(Команда)
	
	Если Элементы.СписокПлатежек.ВыделенныеСтроки.Количество() = 0 Тогда
		
		Предупреждение("Выберите загружаемые строки!");
		
	Иначе
		
		ИдентификаторыЗаписей = Новый Массив;
		
		Для каждого ВыделеннаяСтрока Из Элементы.СписокПлатежек.ВыделенныеСтроки Цикл
			ИдентификаторыЗаписей.Добавить(ВыделеннаяСтрока);			
		КонецЦикла; 

		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-01-23 (#3621)
		//ЗагрузитьПлатежныеДокументыAXAPTA(Новый ФиксированныйМассив(ИдентификаторыЗаписей));
		ЗагрузитьПлатежныеДокументыAXAPTA(Новый ФиксированныйМассив(ИдентификаторыЗаписей), ВерсияОбработки);
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-01-23 (#3621)
		Элементы.СписокПлатежек.Обновить();
		
	КонецЕсли; 
		
// +СБ. Широков Николай. 2014-09-16. 2.2.2.1.	 Интерфейс «Загрузка платежных документов (AXAPTA)»
	ОбновитьСведенияОЗагружаемыхДокументах();
// -СБ. Широков Николай 		

КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УстановитьОтборПоПериоду()
	
	ГруппаПериода = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
						СписокПлатежек.Отбор.Элементы,
						"Отбор по периоду",
						ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
						
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ГруппаПериода, 
		"ORDERDATE", 
		НачалоДня(НачалоПериода), 
		ВидСравненияКомпоновкиДанных.БольшеИлиРавно,
		, // Представление
		ЗначениеЗаполнено(НачалоПериода));
		
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
		ГруппаПериода, 
		"ORDERDATE", 
		ВидСравненияКомпоновкиДанных.МеньшеИлиРавно,
		КонецДня(ОкончаниеПериода), 
		, // Представление
		ЗначениеЗаполнено(ОкончаниеПериода));	
		
// +СБ. Широков Николай. 2014-09-03. 2.2.2.1.	 Интерфейс «Загрузка платежных документов (AXAPTA)»
	ОбновитьСведенияОЗагружаемыхДокументах();
// -СБ. Широков Николай 		

КонецПроцедуры

&НаСервереБезКонтекста
Функция УстановитьСоединение(ОписаниеПроблемы)
	
	Возврат	СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.УстановитьСоединение(ОписаниеПроблемы);
	
КонецФункции

&НаСервереБезКонтекста
//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-01-23 (#3621)
//Процедура ЗагрузитьПлатежныеДокументыAXAPTA(ИдентификаторыЗаписей)
Процедура ЗагрузитьПлатежныеДокументыAXAPTA(ИдентификаторыЗаписей, ВерсияОбработки = 0)
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-01-23 (#3621)

	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-01-23 (#3621)
	//СБ_ЗагрузкаПД_AXAPTA.ЗагрузитьПлатежныеДокументыAXAPTA(ИдентификаторыЗаписей);			
	Если ВерсияОбработки = 0 Тогда
		СБ_ЗагрузкаПД_AXAPTA.ЗагрузитьПлатежныеДокументыAXAPTA(ИдентификаторыЗаписей);
	ИначеЕсли ВерсияОбработки = 1 Тогда
		СБ_ЗагрузкаПД_AXAPTA.ЗагрузитьПлатежныеДокументыAXAPTA_Версия2(ИдентификаторыЗаписей);
	КонецЕсли;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-01-23 (#3621)
	
КонецПроцедуры

// +СБ. Широков Николай. 2014-09-03. 2.2.2.1.	 Интерфейс «Загрузка платежных документов (AXAPTA)»
&НаСервере
Процедура ОбновитьСведенияОЗагружаемыхДокументах()
	
	ЗаполнитьЗначенияСвойств(
		ЭтаФорма, 
		СведенияОЗагружаемыхДокументах(НачалоПериода, ОкончаниеПериода),
		);
	
КонецПроцедуры // -СБ. Широков Николай

// +СБ. Широков Николай. 2014-09-03. 2.2.2.1.	 Интерфейс «Загрузка платежных документов (AXAPTA)»
&НаСервереБезКонтекста
Функция СведенияОЗагружаемыхДокументах(Знач НачалоПериода, Знач ОкончаниеПериода)
	
	СтруктураВозврата = Новый Структура(
		"КоличествоДокументов, 
		|КоличествоЗагруженныхДокументов",
		0,
		0
		);
	//ОК+ Аверьянова 23.01.15 ***количество загруженных будем считать со статусом не только 1, но и 2
	//заменим строку 194 запроса с //|			КОГДА dbo_ExportDataTo1cPaymOrder.POSTED1C8 = 1  на КОГДА dbo_ExportDataTo1cPaymOrder.POSTED1C8 <> 0

	ТекстЗапроса = 	
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(dbo_ExportDataTo1cPaymOrder.RECID) КАК КоличествоДокументов,
	|	СУММА(ВЫБОР
	|			КОГДА dbo_ExportDataTo1cPaymOrder.POSTED1C8 <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоЗагруженныхДокументов
	|ИЗ
	|	ВнешнийИсточникДанных.СБ_ПлатежныеПорученияAXAPTA.Таблица.dbo_ExportDataTo1cPaymOrder КАК dbo_ExportDataTo1cPaymOrder
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &БезОтбораПоПериоду
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВЫБОР
	|					КОГДА dbo_ExportDataTo1cPaymOrder.ORDERDATE МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОНЕЦ";
	
	ПустаяДата = Дата(1,1,1);
	
	БезОтбораПоПериоду = (НачалоПериода = ПустаяДата И ОкончаниеПериода = ПустаяДата);
	
	Запрос = Новый Запрос;
	Запрос.Текст =  ТекстЗапроса;
    Запрос.УстановитьПараметр("НачалоПериода", 		НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",	ОкончаниеПериода);
	Запрос.УстановитьПараметр("БезОтбораПоПериоду",	БезОтбораПоПериоду);
	
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		Возврат СтруктураВозврата;                       	
	КонецЕсли; 
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();

    ЗаполнитьЗначенияСвойств(СтруктураВозврата, ВыборкаДетальныеЗаписи);
	
	Возврат СтруктураВозврата;

КонецФункции // -СБ. Широков Николай

//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-11-24 (#3415)

&НаСервере
Процедура СписокПлатежекПриАктивизацииСтрокиНаСервере(RECID)
	PaymTrans.Параметры.УстановитьЗначениеПараметра("RefRecId", RECID);
КонецПроцедуры


&НаКлиенте
Процедура СписокПлатежекПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда 
	RECID = Элемент.ТекущиеДанные.RECID;
	СписокПлатежекПриАктивизацииСтрокиНаСервере(RECID);
	КонецЕсли;
КонецПроцедуры
//ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-11-24 (#3415)
 