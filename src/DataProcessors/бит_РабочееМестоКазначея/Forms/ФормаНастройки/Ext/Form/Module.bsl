
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ТекущийОбъект") Тогда
		
		ОбрОбъект = ДанныеФормыВЗначение(Параметры.ТекущийОбъект,Тип("ОбработкаОбъект.бит_РабочееМестоКазначея"));
		
		ЗначениеВДанныеФормы(ОбрОбъект,Объект)
		
	КонецЕсли; 
	
	ЗаполнитьСписокРежимовОстатков(); 
	
	Цвет_Информация = Обработки.бит_ПреобразованияЦветов.HexToColor(Объект.Цвет_Информация);
	Цвет_Прошлое    = Обработки.бит_ПреобразованияЦветов.HexToColor(Объект.Цвет_Прошлое);
	Цвет_Настоящее  = Обработки.бит_ПреобразованияЦветов.HexToColor(Объект.Цвет_Настоящее);
	Цвет_Будущее    = Обработки.бит_ПреобразованияЦветов.HexToColor(Объект.Цвет_Будущее);
	Цвет_Запрет     = Обработки.бит_ПреобразованияЦветов.HexToColor(Объект.Цвет_Запрет);
	
	УстановитьВидимость();
	
	Элементы.РежимОстатков.СписокВыбора.Очистить();
	
	Для каждого Эл Из СписокРежимОстатков Цикл
	
		Элементы.РежимОстатков.СписокВыбора.Добавить(Эл.Значение, Эл.Представление);
	
	КонецЦикла; 
	
	ПодготовитьФормуНаСервере(ЭтотОбъект);
	УстановитьЗаголовокФормы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	УстановитьЗаголовокФормы(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	УстановитьЗаголовокФормы(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура - действие команды "КомандаОК".
// 
&НаКлиенте
Процедура КомандаОК(Команда)
	
	Отказ = НЕ ПериодЗаполненПравильно(ЭтотОбъект);
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 

	Если СозданиеПлатежныхПоручений = 0 Тогда
		Объект.НеФормироватьПлатежныеПоручения = Истина;
		Объект.ПроводитьПлатежныеПоручения  	= Ложь;
	ИначеЕсли СозданиеПлатежныхПоручений = 1 Тогда
		Объект.НеФормироватьПлатежныеПоручения = Ложь;
		Объект.ПроводитьПлатежныеПоручения  	= Ложь;
	ИначеЕсли СозданиеПлатежныхПоручений = 2 Тогда
		Объект.НеФормироватьПлатежныеПоручения = Ложь;
		Объект.ПроводитьПлатежныеПоручения  	= Истина;
	КонецЕсли; 
	
	Если СозданиеДокументовОплаты = 0 Тогда
		Объект.НеФормироватьДокументыОплаты = Истина;
		Объект.ПроводитьДокументыОплаты     = Ложь;
		Объект.РежимЗаписи = "";
	ИначеЕсли СозданиеДокументовОплаты = 1 Тогда
		Объект.НеФормироватьДокументыОплаты = Ложь;
		Объект.ПроводитьДокументыОплаты     = Ложь;
		Объект.РежимЗаписи = "Запись";
	ИначеЕсли СозданиеДокументовОплаты = 2 Тогда
		Объект.НеФормироватьДокументыОплаты = Ложь;
		Объект.ПроводитьДокументыОплаты     = Истина;
		Объект.РежимЗаписи = "Проведение";
	КонецЕсли; 

	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Команда"      ,"ОК");
	СтруктураПараметров.Вставить("ТекущийОбъект",Объект);
	СтруктураПараметров.Вставить("ИзмененЦвет"  ,ИзмененЦвет);
	СтруктураПараметров.Вставить("ИзмененРазмер",ИзмененРазмер);
	
	Закрыть(СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)

	ПараметрыВыбора = Новый Структура("НачалоПериода,КонецПериода", Объект.НачалоПериода, Объект.КонецПериода);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);
	
КонецПроцедуры

// Описание оповещения процедуры "ВыбратьПериод".
//
// Параметры:
//  РезультатВыбора	 - 	 - 
//  ДопПараметры	 - Произвольный - дополнительные параметры.
//
&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Объект, РезультатВыбора, "НачалоПериода,КонецПериода");
	УстановитьЗаголовокФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОстатковОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если НЕ ВыбранноеЗначение = Неопределено Тогда
	
		Объект.РежимОстатков = ВыбранноеЗначение;
		УстановитьВидимость();
	
	КонецЕсли; 
	 
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "РежиаОстатков".
// 
&НаКлиенте
Процедура РежимОстатковПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Цвет_Информация".
// 
&НаКлиенте
Процедура Цвет_ИнформацияПриИзменении(Элемент)
	
	ИзменениеЦвета("Цвет_Информация");
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Цвет_Прошлое".
// 
&НаКлиенте
Процедура Цвет_ПрошлоеПриИзменении(Элемент)
	
	ИзменениеЦвета("Цвет_Прошлое");
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Цвет_Настоящее".
// 
&НаКлиенте
Процедура Цвет_НастоящееПриИзменении(Элемент)
	
	ИзменениеЦвета("Цвет_Настоящее");
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Цвет_Будущее".
// 
&НаКлиенте
Процедура Цвет_БудущееПриИзменении(Элемент)
	
	ИзменениеЦвета("Цвет_Будущее");
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Цвет_Запрет".
// 
&НаКлиенте
Процедура Цвет_ЗапретПриИзменении(Элемент)
	
	ИзменениеЦвета("Цвет_Запрет");
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "ВысотаПанелиТекущийДокумент".
// 
&НаКлиенте
Процедура ВысотаПанелиТекущийДокументПриИзменении(Элемент)
	
	ИзмененРазмер = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокФормы(Форма)

	Объект = Форма.Объект;

	ЗаголовокОтчета = СтрШаблон(НСтр("ru = 'Рабочее место казначения%1'"),
		БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(Объект.НачалоПериода, Объект.КонецПериода));
	
	Форма.Заголовок = ЗаголовокОтчета;

КонецПроцедуры

// Процедура заполняет список режимов остатков.
// 
// Параметры:
//  Нет
// 
&НаСервере
Процедура ЗаполнитьСписокРежимовОстатков()

	СписокРежимОстатков = Новый СписокЗначений;
	СписокРежимОстатков.Добавить(Перечисления.бит_РежимПолученияДанныхТаблоСчетов.СведенияОДвиженииДенежныхСредств);
	СписокРежимОстатков.Добавить(Перечисления.бит_РежимПолученияДанныхТаблоСчетов.ДанныеБухгалтерскогоУчета);

КонецПроцедуры // ЗаполнитьСписокРежимовОстатков()

// Процедура обрабатывает изменение цвета. 
// Выполняется преобразование в HEX и установка полученного значения в реквизит объекта.
// 
// Параметры:
//  ИмяРеквизитаЦвет  - Строка
// 
&НаСервере
Процедура ИзменениеЦвета(ИмяРеквизитаЦвет)

	ЦветШестн = Обработки.бит_ПреобразованияЦветов.ПрообразоватьЦвет(ЭтотОбъект[ИмяРеквизитаЦвет]);
	
	Если НЕ ЗначениеЗаполнено(ЦветШестн) Тогда
	
		ЦветШестн = "#FFFFFF";
	
	КонецЕсли; 

	Объект[ИмяРеквизитаЦвет] = ЦветШестн;
	
	ИзмененЦвет = Истина;
	
КонецПроцедуры // ИзменениеЦвета()

// Процедура устанавливает видимость/доступность элементов формы.
// 
&НаСервере
Процедура УстановитьВидимость()
	
	флДанныеБУ = ?(Объект.РежимОстатков = Перечисления.бит_РежимПолученияДанныхТаблоСчетов.ДанныеБухгалтерскогоУчета,Истина,Ложь);
	
	Элементы.ГруппаСтраницаСчета.Видимость = флДанныеБУ;
	
КонецПроцедуры // УстановитьВидимость()

&НаСервереБезКонтекста
Процедура ПодготовитьФормуНаСервере(Форма)

	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.ПроводитьДокументыОплаты Тогда
		Форма.СозданиеДокументовОплаты = 2;
	ИначеЕсли Объект.НеФормироватьДокументыОплаты = Ложь Тогда
		Форма.СозданиеДокументовОплаты = 1;
	КонецЕсли; 
	
	Если Объект.ПроводитьПлатежныеПоручения Тогда
		Форма.СозданиеПлатежныхПоручений = 2;
	ИначеЕсли Объект.НеФормироватьПлатежныеПоручения = Ложь Тогда
		Форма.СозданиеПлатежныхПоручений = 1;
	КонецЕсли; 

КонецПроцедуры // ПодготовитьФормуНаСервере() 

&НаКлиентеНаСервереБезКонтекста 
Функция ПериодЗаполненПравильно(Форма)

	ЗаполненПравильно = Истина;
	
	Объект = Форма.Объект;
	Отказ  = Ложь;
	Если НЕ ЗначениеЗаполнено(Объект.НачалоПериода) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,,"Начало периода"); 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.НачалоПериода", ,Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.КонецПериода) Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,,"Конец периода"); 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.КонецПериода", ,Отказ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.НачалоПериода) И ЗначениеЗаполнено(Объект.КонецПериода) Тогда
		Если Объект.КонецПериода < Объект.НачалоПериода Тогда
			ТекстСообщения = НСтр("ru ='Период указан неверно! Дата начала больше даты окончания.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.НачалоПериода", ,Отказ);
		КонецЕсли;
	КонецЕсли; 
	
	Если Отказ Тогда
		ЗаполненПравильно = Ложь;
	КонецЕсли;  
	
	Возврат ЗаполненПравильно; 

КонецФункции // ПериодЗаполненПравильно()

#КонецОбласти