#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - таблица команд печати 
//                   (состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати).
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти
	
#Область СлужебныйПрограммныйИнтерфейс

Функция НовыеДанныеЗаполненияРеестраСтрокаТаблицы() Экспорт
	
	Таблица = Новый Структура; 
	Таблица.Вставить("ДокументПланирования");
	Таблица.Вставить("ПлатежнаяПозиция");
	Таблица.Вставить("ВалютаДенежныхСредств");
	Таблица.Вставить("ВидДенежныхСредств");
	Таблица.Вставить("БанковскийСчет");
	
	Возврат Таблица;

КонецФункции

Функция НовыеДанныеЗаполненияРеестра() Экспорт

	ДанныеЗаполнения = Новый Структура;
	
	ДанныеЗаполнения.Вставить("Таблица", Новый Массив());
	ДанныеЗаполнения.Вставить("ОперативныйДень", '0001-01-01');
	ДанныеЗаполнения.Вставить("РежимСообщений", "");
	
	Возврат ДанныеЗаполнения;

КонецФункции 

&НаСервере
Процедура СоздатьРеестрыПлатежей(ДокументыПоОрганизациям, АдресВХранилище) Экспорт 
	
	НовыеДокументы 		= Новый СписокЗначений; 
	ДобавленоДокументов = 0;
	Для каждого ДокументыОрганизации Из ДокументыПоОрганизациям Цикл
		РеестрПлатежей = СоздатьРеестрПлатежей(ДокументыОрганизации.Ключ, ДокументыОрганизации.Значение);
		Если ЗначениеЗаполнено(РеестрПлатежей) Тогда
			НовыеДокументы.Добавить(РеестрПлатежей);
		КонецЕсли; 
	КонецЦикла;
	
	ДобавленоДокументов = НовыеДокументы.Количество();
	
	Результат = Новый Структура; 
	Результат.Вставить("Сообщения", ПолучитьСообщенияПользователю(Истина));
	Результат.Вставить("Выполнено", ДобавленоДокументов <> 0);
	Результат.Вставить("НовыеДокументы",НовыеДокументы);
	
	ПоместитьВоВременноеХранилище(Результат, АдресВХранилище); 
	
КонецПроцедуры
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура создает реестр платежей.
// 
// Параметры:
// Организация - СправочникСсылка.Организации.
// МассивИД    - Массив.
// 
// 
Функция СоздатьРеестрПлатежей(Организация, ДанныеЗаполнения)
	
	ДокРеестр = Документы.бит_РеестрПлатежей.СоздатьДокумент();
	ДокРеестр.УстановитьВремя(РежимАвтоВремя.ТекущееИлиПоследним);
	
	ДокРеестр.Организация 	= Организация;
	ДокРеестр.Дата        	= ДанныеЗаполнения.ОперативныйДень;
	ДокРеестр.Ответственный = бит_УправлениеПользователямиСервер.ЗначениеПоУмолчаниюТиповой("ОсновнойОтветственный", Пользователи.ТекущийПользователь());
	
	Для каждого Элемент Из ДанныеЗаполнения.Таблица Цикл
		
		НоваяСтрока = ДокРеестр.Заявки.Добавить();
		Если ЗначениеЗаполнено(Организация) Тогда
			НоваяСтрока.Организация = Организация;
		Иначе	
			НоваяСтрока.Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Элемент.ДокументПланирования, "Организация");
		КонецЕсли; 
		РеквизитыПлатехныхПозиций = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Элемент.ПлатежнаяПозиция, "ВалютаДокумента, СуммаДокумента");
		НоваяСтрока.БанковскийСчетОрганизация = Элемент.БанковскийСчет;
		НоваяСтрока.Заявка           = Элемент.ДокументПланирования;
		НоваяСтрока.ПлатежнаяПозиция = Элемент.ПлатежнаяПозиция;
		НоваяСтрока.Валюта           = Элемент.ВалютаДенежныхСредств;
		НоваяСтрока.ВалютаДокумента  = РеквизитыПлатехныхПозиций.ВалютаДокумента;
		НоваяСтрока.ФормаОплаты      = Элемент.ВидДенежныхСредств;
		НоваяСтрока.Сумма            = РеквизитыПлатехныхПозиций.СуммаДокумента;
		НоваяСтрока.СуммаОстаток     = НоваяСтрока.Сумма;
		
		ПараметрыВалюты = Новый Структура;
		ПараметрыВалюты.Вставить("Дата"			  , ТекущаяДата());
		ПараметрыВалюты.Вставить("ВалютаДокумента", НоваяСтрока.Валюта);
		
		СуммаПлатежа = бит_Казначейство.ПересчитатьСуммуПлатежаПоВалюте(НоваяСтрока.Сумма, НоваяСтрока.ПлатежнаяПозиция, ПараметрыВалюты);
		
		НоваяСтрока.СуммаКОплате 	= СуммаПлатежа;
		НоваяСтрока.СуммаКОплатеНач = СуммаПлатежа;
		
	КонецЦикла; 
	
	РеестрПлатежей = Неопределено;
	Если ДокРеестр.Заявки.Количество()>0 Тогда
		бит_ОбщегоНазначения.ЗаписатьПровестиДокумент(ДокРеестр,РежимЗаписиДокумента.Запись,, ДанныеЗаполнения.РежимСообщений);
		РеестрПлатежей = ДокРеестр.Ссылка;
	КонецЕсли;
	
	Возврат РеестрПлатежей;
	
КонецФункции 

#КонецОбласти

#КонецЕсли