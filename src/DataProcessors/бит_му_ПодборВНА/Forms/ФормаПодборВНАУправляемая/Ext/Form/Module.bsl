
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);

	Параметры.Свойство("Организация"			   , Объект.Организация);
	Параметры.Свойство("ДатаНачала"				   , Объект.ДатаНачала);
	Параметры.Свойство("ДатаОкончания"			   , Объект.ДатаОкончания);
	Параметры.Свойство("Режим"					   , Объект.Режим);
	Параметры.Свойство("МОЛ"					   , Объект.МОЛ);
	Параметры.Свойство("Местонахождение"		   , Объект.Местонахождение);
	Параметры.Свойство("ВидКласса"				   , Объект.ВидКласса);
	Параметры.Свойство("МодельУчета"			   , Объект.МодельУчета);
	Параметры.Свойство("ВидДвижения"			   , Объект.ВидДвижения);
	Параметры.Свойство("МетодНачисленияАмортизации", Объект.МетодНачисленияАмортизации);
	Параметры.Свойство("ВалютаДокумента"		   , Объект.ВалютаДокумента);
	
	Если НЕ ЗначениеЗаполнено(Объект.Режим) Тогда
		ТекстСообщения = НСтр("ru='Не указан режим заполнения ВНА'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,,Отказ);
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = Обработки.бит_му_ПодборВНА.ПолучитьТекстЗапроса(Объект.Режим, Параметры);
	
	АдресСКД = Обработки.бит_му_ПодборВНА.ИнициализироватьСКД(ТекстЗапроса, УникальныйИдентификатор);
	
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСКД);
	
	Объект.Компоновщик.Инициализировать(ИсточникНастроек);
	
	СКД = ПолучитьИзВременногоХранилища(АдресСКД);
	Объект.Компоновщик.ЗагрузитьНастройки(СКД.НастройкиПоУмолчанию);
	
	ДобавитьПользовательскиеОтборы();
	
	ОбновитьПереченьОбъектов();
	
	УстановитьВидимость();
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПереченьобъектов

&НаКлиенте
Процедура ПереченьОбъектовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущаяСтрока = Элементы.ПереченьОбъектов.ТекущиеДанные;
	
	Если ТекущаяСтрока.Выполнять Тогда
		
		РезСтруктура = ПолучитьСтруктуруВыбора("Добавить", ТекущаяСтрока.ПолучитьИдентификатор());
		
		ОповеститьОВыборе(РезСтруктура);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастройкаПериода(Команда)
	
	бит_РаботаСДиалогамиКлиент.ОткрытьДиалогСтандартногоПериодаПоДатам(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьПереченьОбъектов();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	бит_РаботаСДиалогамиКлиент.ОбработатьФлагиТаблицы(Объект.ПереченьОбъектов, "Выполнять", 1);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	бит_РаботаСДиалогамиКлиент.ОбработатьФлагиТаблицы(Объект.ПереченьОбъектов, "Выполнять", 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОбъектыВДокумент(Команда)
	
	РезСтруктура = ПолучитьСтруктуруВыбора("Добавить");
	
	ОповеститьОВыборе(РезСтруктура);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОбъектыВДокумент(Команда)
	
	РезСтруктура = ПолучитьСтруктуруВыбора("Загрузить");
	
	ОповеститьОВыборе(РезСтруктура);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура управляет видимостью/доступностью реквизитов формы.
// 
&НаСервере
Процедура УстановитьВидимость()
	
	ЭтоПринятиеОС    	    = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.ПринятиеКУчетуОС;
	ЭтоПринятиеОСПоОстаткам = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.ПринятиеКУчетуОСПоОстаткам;
	
	ЭтоМодернизацияОС = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.МодернизацияОС;	
	ЭтоПеремещениеОС  = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.ПеремещениеОС;	
	ЭтоАмортизацияОС  = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.НачислениеАмортизацииОС;
	ЭтоПереоценкаОС   = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.ПереоценкаОС;
	ЭтоВыработкаОС    = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.ВыработкаОС;
	ЭтоОбесценениеОС  = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.ОбесценениеОС;
	ЭтоВыбытиеОС  	  = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.ВыбытиеОС;
	ЭтоКомплектацияОС = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.бит_КомплектацияОС;
	
	ЭтоПринятиеНМА    = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.ПринятиеКУчетуНМА;
	// Добавление кода. Начало. 21.11.2016{{
	ЭтоПринятиеНМАПоОстаткам = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.ПринятиеКУчетуНМАПоОстаткам;
	// Добавление кода. Конец. 21.11.2016}}
	ЭтоАмортизацияНМА = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.НачислениеАмортизацииНМА;	
	ЭтоПереоценкаНМА  = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.ПереоценкаНМА;
	ЭтоВыработкаНМА   = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.ВыработкаНМА;	
	ЭтоОбесценениеНМА = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.ОбесценениеНМА;	
	ЭтоВыбытиеНМА  	  = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.ВыбытиеНМА;
	
	// ОКЕЙ Конаков Ю.М. (СофтЛаб) Начало 2021-10-22 (#4297) 
	ЭтоПринятиеОборудования = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.ок_ПринятиеКУчетуОборудования;
	// ОКЕЙ Конаков Ю.М. (СофтЛаб) Конец 2021-10-22 (#4297) 
	
	// Изменение кода. Начало. 05.02.2014{{
	ЭтоПереводОСВСоставИС = Объект.Режим = Перечисления.бит_му_РежимыПодбораВНА.ПереводОСВСоставИнвестиционнойСобственности;
	// Изменение кода. Начало. 05.02.2014{{
	
	ЭтоПродажа = ?(Объект.ВидДвижения = Перечисления.бит_му_ВидыДвиженияВыбытия.Продажа
						 ИЛИ Объект.ВидДвижения = Перечисления.бит_му_ВидыОперацийВыбытиеНМА.Продажа, Истина, Ложь);
						 
    ЭтоНМА = ЭтоПринятиеНМА 
	         ИЛИ ЭтоВыбытиеНМА 
			 ИЛИ ЭтоАмортизацияНМА 
			 ИЛИ ЭтоВыработкаНМА 
			 ИЛИ ЭтоОбесценениеНМА 
			 ИЛИ ЭтоПереоценкаНМА
			 ИЛИ ЭтоПринятиеНМАПоОстаткам;						 
	
	Элементы.ПереченьОбъектовИнвентарныйНомер.Видимость 		= НЕ ЭтоНМА;
	Элементы.ПереченьОбъектовПервоначальнаяСтоимость.Видимость	= ЭтоПринятиеОС ИЛИ ЭтоПринятиеОСПоОстаткам ИЛИ ЭтоПринятиеНМА ИЛИ ЭтоПринятиеНМАПоОстаткам;
	Элементы.ПереченьОбъектовДатаПринятияКУчету.Видимость      	= ЭтоПринятиеОС ИЛИ ЭтоПринятиеОСПоОстаткам ИЛИ ЭтоАмортизацияОС ИЛИ ЭтоПринятиеНМА ИЛИ ЭтоПринятиеНМАПоОстаткам;
	Элементы.ПереченьОбъектовГруппаМодернизация.Видимость      	= ЭтоМодернизацияОС;
	Элементы.ПереченьОбъектовОбъектСтроительства.Видимость		= ЭтоМодернизацияОС;
	Элементы.ПереченьОбъектовМестонахождение.Видимость 			= НЕ ЭтоНМА;
	Элементы.ПереченьОбъектовМОЛ.Видимость 						= НЕ ЭтоНМА;
	//Элементы.ПереченьОбъектовСумма.Видимость        = ЭтоПринятиеОС ИЛИ ЭтоПринятиеОСПоОстаткам ИЛИ ЭтоПринятиеНМА ИЛИ ЭтоПринятиеНМАПоОстаткам ИЛИ ((ЭтоВыбытиеОС ИЛИ ЭтоВыбытиеНМА) И ЭтоПродажа);
	Элементы.ПереченьОбъектовСумма.Видимость        = ЭтоПринятиеОС ИЛИ ЭтоПринятиеОСПоОстаткам ИЛИ ЭтоПринятиеНМА ИЛИ ЭтоПринятиеНМАПоОстаткам ИЛИ ((ЭтоВыбытиеОС ИЛИ ЭтоВыбытиеНМА) И ЭтоПродажа) ИЛИ ЭтоМодернизацияОС ИЛИ ЭтоКомплектацияОС;
	Элементы.ПереченьОбъектовСуммаНДС.Видимость		= ((ЭтоВыбытиеОС ИЛИ ЭтоВыбытиеНМА) И ЭтоПродажа);
	Элементы.ПереченьОбъектовДокументБУ.Видимость   = Не ЭтоАмортизацияОС 
	                                                И НЕ ЭтоВыработкаОС 
												    И НЕ ЭтоОбесценениеОС 
												    И НЕ ЭтоПереоценкаОС 
												    И НЕ ЭтоПереоценкаНМА 
												    И НЕ ЭтоВыработкаНМА
												    И НЕ ЭтоАмортизацияНМА
												    И НЕ ЭтоОбесценениеНМА
													// Изменение кода. Начало. 05.02.2014{{
													И НЕ ЭтоПереводОСВСоставИС;
													// Изменение кода. Конец. 05.02.2014}}
	Элементы.ПереченьОбъектовВидКласса.Видимость = ЭтоАмортизацияОС 
	                                           ИЛИ ЭтоОбесценениеОС 
											   ИЛИ ЭтоПереоценкаОС 
											   ИЛИ ЭтоВыбытиеОС
											   //БИТ Тртилек 31102013
											   ИЛИ ЭтоПеремещениеОС
											   ///БИТ Тртилек
											   // Изменение кода. Начало. 05.02.2014{{
											   ИЛИ ЭтоПереводОСВСоставИС;
											   // Изменение кода. Конец. 05.02.2014}}
	Элементы.ПереченьОбъектовМетодНачисленияАмортизации.Видимость = ЭтоВыработкаОС ИЛИ ЭтоВыработкаНМА ИЛИ ЭтоАмортизацияНМА;
	Элементы.ПереченьОбъектовМодельУчета.Видимость = ЭтоОбесценениеОС 
	                                             ИЛИ ЭтоПереоценкаОС 
												 ИЛИ ЭтоПереоценкаНМА 
												 ИЛИ ЭтоОбесценениеНМА
												 // Изменение кода. Начало. 05.02.2014{{
												 ИЛИ ЭтоПереводОСВСоставИС;
												 // Изменение кода. Конец. 05.02.2014}}
	Элементы.ПереченьОбъектовНачислятьАмортизацию.Видимость = ЭтоАмортизацияОС 
	                                                      ИЛИ ЭтоВыработкаОС 
														  ИЛИ ЭтоВыработкаНМА 
														  ИЛИ ЭтоАмортизацияНМА;
														  
	Элементы.ПереченьОбъектовСуммаНачисленнойАмортизации.Видимость = ЭтоПринятиеНМА ИЛИ ЭтоПринятиеОСПоОстаткам ИЛИ ЭтоПринятиеНМАПоОстаткам;
	
	// ОКЕЙ Конаков Ю.М. (СофтЛаб) Начало 2021-10-22 (#4297) 
	//Элементы.КорСчет.Видимость = ЭтоПринятиеОСПоОстаткам ИЛИ ЭтоПринятиеНМАПоОстаткам;	
	ВидимостьКорСчета = ЭтоПринятиеОСПоОстаткам
						Или ЭтоПринятиеНМАПоОстаткам
						Или ЭтоПринятиеОборудования;
	Элементы.КорСчет.Видимость = ВидимостьКорСчета;
	// ОКЕЙ Конаков Ю.М. (СофтЛаб) Конец 2021-10-22 (#4297) 
	
	// Добавление кода. Начало. 15.11.2016{{
	Элементы.ГруппаПериодДата.Видимость 		  = ЭтоПринятиеОСПоОстаткам ИЛИ ЭтоПринятиеНМАПоОстаткам;
	Элементы.ГруппаПериодИнтервал.Видимость 	  = НЕ ЭтоПринятиеОСПоОстаткам И НЕ ЭтоПринятиеНМАПоОстаткам;  	
	Элементы.ПереченьОбъектовДокументБУ.Видимость = НЕ ЭтоПринятиеОСПоОстаткам И НЕ ЭтоПринятиеНМАПоОстаткам;
	// Добавление кода. Конец. 15.11.2016}}
	
КонецПроцедуры // УстановитьВидимость()

// Процедура добавляет быстрые отборы для пользователя.
// 
&НаСервере
Процедура ДобавитьПользовательскиеОтборы()
	
	ОбрОбъект = ДанныеФормыВЗначение(Объект, ПолучитьТипОбъекта());
	ОбрОбъект.ДобавитьПользовательскиеОтборы();
	ЗначениеВДанныеФормы(ОбрОбъект, Объект);
	
КонецПроцедуры // ДобавитьПользовательскиеОтборы()

// Процедура заполняет табличную часть ПереченьОбъектов.
// 
&НаСервере
Процедура ОбновитьПереченьОбъектов()

	ОбрОбъект = ДанныеФормыВЗначение(Объект, ПолучитьТипОбъекта());
	ТаблицаОбъектов = ОбрОбъект.ПолучитьТаблицуОбъектов(АдресСКД);
	ЗначениеВДанныеФормы(ОбрОбъект, Объект);
		
	Объект.ПереченьОбъектов.Загрузить(ТаблицаОбъектов);
	
КонецПроцедуры // ОбновитьПереченьОбъектов()

// Функция формирует структуру данных для добавления их в таб.часть документа владельца.
// 
&НаСервере
Функция ПолучитьСтруктуруВыбора(ДействиеВыбора = "Добавить", ИДСтроки = Неопределено)
	
	Если ИДСтроки <> Неопределено Тогда		
		ТекущаяСтрока = Объект.ПереченьОбъектов.НайтиПоИдентификатору(ИДСтроки);
		ИДСтроки = Объект.ПереченьОбъектов.Индекс(ТекущаяСтрока);  		
	КонецЕсли;
	
	ОбрОбъект = ДанныеФормыВЗначение(Объект, ПолучитьТипОбъекта());
	РезСтруктура = ОбрОбъект.ПолучитьСтруктуруРезультатаВыбора(ДействиеВыбора, ИДСтроки);
	РезСтруктура.Вставить("Режим", Объект.Режим);
		
	Возврат РезСтруктура;
	
КонецФункции // ПолучитьСтруктуруВыбора()

// Функция получает тип объекта.
// 
// Параметры:
//  ОбъектСсылка - ДокументСсылка.
// 
// Возвращаемое значение:
//  ТипОбъекта - Тип.
// 
&НаСервереБезКонтекста 
Функция ПолучитьТипОбъекта()
	
	ТипОбъекта = Тип("ОбработкаОбъект.бит_му_ПодборВНА");
	
	Возврат ТипОбъекта;
	
КонецФункции // ПолучитьТипОбъекта()

#КонецОбласти

