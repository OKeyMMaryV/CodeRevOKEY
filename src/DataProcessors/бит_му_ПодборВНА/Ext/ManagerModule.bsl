#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс		
	
// Получает текст запроса для требуемого режима.
// 
// Параметры:
// 	Режим - ПеречислениеСсылка.бит_му_РежимыПодбораВНА.
// 	СтруктураПараметров - Структура,Неопределено - дополнительные параметры необходимые для некоторых режимов.
// 
// Возвращаемое значение:
// 	ТекстЗапроса - Строка.
// 
Функция ПолучитьТекстЗапроса(Режим, СтруктураПараметров = Неопределено) Экспорт
	
	Если СтруктураПараметров = Неопределено Тогда
		СтруктураПараметров = Новый Структура;
		// Обязательные параметры для режима ВыбытиеОС:
		// 	- ВидДвижения - ПеречислениеСсылка.бит_му_ВидыДвиженияВыбытия.
		// 
		// обязательные параметры для режима ВыбытиеНМА:
		// 	- ВидДвижения - ПеречислениеСсылка.бит_му_ВидыОперацийВыбытиеНМА.
	КонецЕсли;
	
	ТекстЗапроса = "";
	
	// Сформируем тексты запроса для различных режимов подбора.
	Если Режим = Перечисления.бит_му_РежимыПодбораВНА.ПринятиеКУчетуОС 
		Или Режим = Перечисления.бит_му_РежимыПодбораВНА.ВводНачальныхОстатковОС Тогда
		
		ТекстЗапроса = СформироватьТекстЗапросаПринятиеКУчетуОС();
			
	ИначеЕсли Режим = Перечисления.бит_му_РежимыПодбораВНА.ПринятиеКУчетуОСПоОстаткам Тогда
		
		ТекстЗапроса = СформироватьТекстЗапросаПринятиеКУчетуОСПоОстаткам();
		
	ИначеЕсли Режим = Перечисления.бит_му_РежимыПодбораВНА.ПеремещениеОС Тогда
		
		ТекстЗапроса = СформироватьТекстЗапросаПеремещениеОС();
		
	ИначеЕсли Режим = Перечисления.бит_му_РежимыПодбораВНА.МодернизацияОС Тогда
		
		ТекстЗапроса = СформироватьТекстЗапросаМодернизацияОС();
		
	ИначеЕсли Режим = Перечисления.бит_му_РежимыПодбораВНА.НачислениеАмортизацииОС
		ИЛИ Режим = Перечисления.бит_му_РежимыПодбораВНА.ВыработкаОС 
		ИЛИ Режим = Перечисления.бит_му_РежимыПодбораВНА.ОбесценениеОС
		ИЛИ Режим = Перечисления.бит_му_РежимыПодбораВНА.ПереоценкаОС Тогда
		
		ТекстЗапроса = СформироватьТекстЗапросаАмортизацияОС();
		
	ИначеЕсли Режим = Перечисления.бит_му_РежимыПодбораВНА.ПереоценкаНМА
		      ИЛИ Режим = Перечисления.бит_му_РежимыПодбораВНА.ОбесценениеНМА 
			  ИЛИ Режим = Перечисления.бит_му_РежимыПодбораВНА.ВыработкаНМА 
			  ИЛИ Режим = Перечисления.бит_му_РежимыПодбораВНА.НачислениеАмортизацииНМА Тогда
		
		ТекстЗапроса = СформироватьТекстЗапросаАмортизацияНМА();
		
	ИначеЕсли Режим = Перечисления.бит_му_РежимыПодбораВНА.ВыбытиеОС Тогда
		
		ТекстЗапроса = СформироватьТекстЗапросаВыбытиеОС(СтруктураПараметров);
		
	ИначеЕсли Режим = Перечисления.бит_му_РежимыПодбораВНА.ПринятиеКУчетуНМА Тогда
		
		ТекстЗапроса = СформироватьТекстЗапросаПринятиеКУчетуНМА();
		
	ИначеЕсли Режим = Перечисления.бит_му_РежимыПодбораВНА.ПринятиеКУчетуНМАПоОстаткам Тогда
		
		ТекстЗапроса = СформироватьТекстЗапросаПринятиеКУчетуНМАПоОстаткам();
		
	ИначеЕсли Режим = Перечисления.бит_му_РежимыПодбораВНА.ВыбытиеНМА Тогда
		
		ТекстЗапроса = СформироватьТекстЗапросаВыбытиеНМА(СтруктураПараметров);
		
	// Изменение кода. Начало. 04.02.2014{{
	ИначеЕсли Режим = Перечисления.бит_му_РежимыПодбораВНА.ПереводОСВСоставИнвестиционнойСобственности Тогда
		
		ТекстЗапроса = СформироватьТекстЗапросаПереводОСВСоставИнвестиционнойСобственности();
		
	КонецЕсли; 	
	// Изменение кода. Конец. 04.02.2014}}
	
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапроса()

// Программно формирует схему компоновки данных.
// 
// Параметры:
// 	ТекстЗапроса - Строка - формируется функцией ПолучитьТекстЗапроса.
// 	УникальныйИдентификатор - УникальныйИдентификатор, Строка - идентификатор формы обработки.
// 
// Возвращаемое значение:
// 	АдресСхемыКомпоновкиДанных - Строка - адрес временного хранилища, куда помещена СКД.
// 
Функция ИнициализироватьСКД(ТекстЗапроса, УникальныйИдентификатор) Экспорт
	
	СКД = Новый СхемаКомпоновкиДанных;
	
	ИсточникДанных = СКД.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя 				  = "ИсточникДанных";
	ИсточникДанных.ТипИсточникаДанных = "local";
	
	НаборДанных = СКД.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Имя 						= "НаборДанных1"; 
	НаборДанных.ИсточникДанных 				= "ИсточникДанных";
	НаборДанных.Запрос 						= ТекстЗапроса;
	НаборДанных.АвтоЗаполнениеДоступныхПолей= Истина;
	
	Построитель = Новый ПостроительЗапроса;
	Построитель.Текст = ТекстЗапроса;
	Построитель.ЗаполнитьНастройки();
	
	Для каждого ПолеПостроителя Из Построитель.ДоступныеПоля Цикл
		
		Если ПолеПостроителя.Отбор Тогда
			
			ВыбранноеПоле = СКД.НастройкиПоУмолчанию.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных(ПолеПостроителя.Имя);
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	ГруппировкаКомпоновки = СКД.НастройкиПоУмолчанию.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	ВыбранноеПоле         = ГруппировкаКомпоновки.Выбор.Элементы.Добавить(Тип("АвтовыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Использование = Истина;

	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СКД, УникальныйИдентификатор);
	
	Возврат АдресСхемыКомпоновкиДанных;
	
КонецФункции // ИнициализироватьСКД()

// Выполняет СКД и получает таблицу объектов ВНА.
// 
// Параметры:
// 	АдресСКД - Строка - адрес временного хранилища в котором размещена СКД, формируется функцией ИнициализироватьСКД.
// 	Компоновщик - КомпоновщикНастроекКомпоновкиДанных - пользовательские настройки.
// 	СтруктураПараметров - Структура.
// 
// Возвращаемое значение:
// 	ТаблицаОбъектов - ТаблицаЗначений.
// 
Функция ПолучитьПереченьОбъектов(АдресСКД, Компоновщик, СтруктураПараметров) Экспорт
	
	Организация 	= СтруктураПараметров.Организация;
	ДатаНачала 		= СтруктураПараметров.ДатаНачала;
	ДатаОкончания 	= СтруктураПараметров.ДатаОкончания;
	Режим 			= СтруктураПараметров.Режим;
	
	ВалютаДокумента = СтруктураПараметров.ВалютаДокумента;
	
	ЭтоПринятиеКУчетуОС 	   	   = Режим = Перечисления.бит_му_РежимыПодбораВНА.ПринятиеКУчетуОС;
	ЭтоПринятиеКУчетуОСПоОстаткам  = Режим = Перечисления.бит_му_РежимыПодбораВНА.ПринятиеКУчетуОСПоОстаткам;
	ЭтоВводНачальныхОстатковОС 	   = Режим = Перечисления.бит_му_РежимыПодбораВНА.ВводНачальныхОстатковОС;
	ЭтоМодернизацияОС 		   	   = Режим = Перечисления.бит_му_РежимыПодбораВНА.МодернизацияОС;
	ЭтоПринятиеКУчетуНМА 	   	   = Режим = Перечисления.бит_му_РежимыПодбораВНА.ПринятиеКУчетуНМА;
	ЭтоПринятиеКУчетуНМАПоОстаткам = Режим = Перечисления.бит_му_РежимыПодбораВНА.ПринятиеКУчетуНМАПоОстаткам;
	
	ЭтоПереводОСВСоставИнвестиционнойСобственности = Режим = Перечисления.бит_му_РежимыПодбораВНА.ПереводОСВСоставИнвестиционнойСобственности;
	
	ВалютаМУ = бит_му_ОбщегоНазначения.ПолучитьВалютуМеждународногоУчета(Организация);
	
	Если НЕ ЗначениеЗаполнено(ВалютаМУ) Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли; 
	
	СКД = ПолучитьИзВременногоХранилища(АдресСКД);
	
	ПараметрыСКД = Компоновщик.Настройки.ПараметрыДанных;
	
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "НачалоПериода", ДатаНачала);
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "КонецПериода" , КонецДня(ДатаОкончания));
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "ПустаяДата"   , Дата('00010101'));
	// Изменение кода. Начало. 21.11.2016{{
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "ДатаСведений" , Новый Граница(КонецДня(ДатаОкончания), ВидГраницы.Включая));
	// Изменение кода. Конец. 21.11.2016}}
				
	Если ЭтоПринятиеКУчетуОС ИЛИ ЭтоПринятиеКУчетуОСПоОстаткам ИЛИ ЭтоВводНачальныхОстатковОС 
		ИЛИ ЭтоПринятиеКУчетуНМА ИЛИ ЭтоПринятиеКУчетуНМАПоОстаткам ИЛИ ЭтоМодернизацияОС Тогда
		
		СтрКурса = бит_КурсыВалют.ПолучитьКурсВалюты(ВалютаМУ, ДатаОкончания);
		
		// Изменение кода. Начало. 08.04.2014{{
		// УстановитьЗначениеПараметраСКД(ПараметрыСКД, "ВалютаМСФО"  	, ВалютаМУ); 		
		Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
			Возврат Новый ТаблицаЗначений;
		КонецЕсли;	
		
		УстановитьЗначениеПараметраСКД(ПараметрыСКД, "ВалютаМСФО"  	, ВалютаДокумента);
		// Изменение кода. Конец. 08.04.2014}}
				
		Если ЭтоПринятиеКУчетуОС ИЛИ ЭтоПринятиеКУчетуОСПоОстаткам ИЛИ ЭтоВводНачальныхОстатковОС ИЛИ ЭтоМодернизацияОС Тогда
			
			Если ЭтоПринятиеКУчетуОС ИЛИ ЭтоВводНачальныхОстатковОС ИЛИ ЭтоПринятиеКУчетуОСПоОстаткам Тогда
				
				СписокСчетов = Новый Массив;
				// Изменение кода. Начало. 16.11.2016{{
				СписокСчетов = Новый Массив;
				СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОсновныеСредства);     // 01
				СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ДоходныеВложенияВ_МЦ); // 03
				// Изменение кода. Конец. 16.11.2016}}
				УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СписокСчетов" , СписокСчетов);
				
				УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СостояниеПринятоБУ", Перечисления.СостоянияОС.ПринятоКУчету);
				
			Иначе
				
				// Изменение кода. Начало. 30.05.2016{{
				СписокСчетов = Новый Массив;
				СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОСвОрганизации); // 01.01
				СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.АрендованноеИмущество); // 01.03
				СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОСБезГосРегистрации); // 01.08
				УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СписокСчетов" , СписокСчетов);
				// Изменение кода. Конец. 30.05.2016}}
				
			КонецЕсли;
			
			УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СчетВНА", ?(ЭтоПринятиеКУчетуОС ИЛИ ЭтоМодернизацияОС
																	, ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы // 08
																	, ПланыСчетов.Хозрасчетный.Вспомогательный)); // 00
			ВидСубконтоОС = Новый Массив();
			ВидСубконтоОС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
			УстановитьЗначениеПараметраСКД(ПараметрыСКД, "ВидСубконтоОС", ВидСубконтоОС);
			//УстановитьЗначениеПараметраСКД(ПараметрыСКД, "ДатаСведений" , Новый Граница(КонецДня(ДатаОкончания), ВидГраницы.Включая));
			
			Если ЭтоМодернизацияОС Тогда
				МассивСубконтоКт = Новый Массив();
				МассивСубконтоКт.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);
				УстановитьЗначениеПараметраСКД(ПараметрыСКД, "МассивСубконтоКт", МассивСубконтоКт);
			ИначеЕсли ЭтоПринятиеКУчетуОСПоОстаткам Тогда		
				МассивСубконто = Новый Массив();
				МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
				УстановитьЗначениеПараметраСКД(ПараметрыСКД, "МассивСубконто", МассивСубконто);	
			КонецЕсли;                                                                                                   			
																				
		Иначе
			
			УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СостояниеПринятоБУ", Перечисления.ВидыСостоянийНМА.ПринятКУчету);
			УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СчетНМА"     		 , ПланыСчетов.Хозрасчетный.НематериальныеАктивыОрганизации); //04.01
			МассивСчетовВНА = Новый Массив;
			МассивСчетовВНА.Добавить(ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы); // 08
			МассивСчетовВНА.Добавить(ПланыСчетов.Хозрасчетный.Вспомогательный);              // 000
			УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СчетВНА"			 , МассивСчетовВНА);
			
			МассивСубконто = Новый Массив();
			МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);
			УстановитьЗначениеПараметраСКД(ПараметрыСКД, "МассивСубконто", МассивСубконто);
			
		КонецЕсли;
		
	КонецЕсли;
	
	// ++ БоровинскаяОА (СофтЛаб) 15.12.18 Начало (#3128)
	Если Режим = Перечисления.бит_му_РежимыПодбораВНА.ВыбытиеОС Тогда
		СчетаУчетаОСМСФО = Новый Массив;
		СчетаУчетаОСМСФО.Добавить(ПланыСчетов.бит_Дополнительный_2.ОС);
		СчетаУчетаОСМСФО.Добавить(ПланыСчетов.бит_Дополнительный_2.ИнвестиционнаяСобственность);
		УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СчетаУчетаОСМСФО", СчетаУчетаОСМСФО);
		МассивСубконтоОСМСФО = Новый Массив;
		МассивСубконтоОСМСФО.Добавить(ПланыВидовХарактеристик.бит_ВидыСубконтоДополнительные_2.ОсновныеСредства);
		УстановитьЗначениеПараметраСКД(ПараметрыСКД, "МассивСубконтоОСМСФО", МассивСубконтоОСМСФО);
	КонецЕсли;
	// -- БоровинскаяОА (СофтЛаб) 15.12.18 Конец (#3128)
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД,
												Компоновщик.ПолучитьНастройки(),
												,
												,
												Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	ТаблицаОбъектов = Новый ТаблицаЗначений;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаОбъектов);
	Попытка
	 	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);	
	Исключение  
	КонецПопытки;
	
	Если ТаблицаОбъектов.Колонки.Найти("ДокументБУ") <> Неопределено Тогда		
		ТаблицаОбъектов.Сортировать("ДокументБУ"); 		
	КонецЕсли; 
	
	Возврат ТаблицаОбъектов;
	
КонецФункции // ПолучитьПереченьОбъектов()

// Функция формирует текст запроса для режима ПринятиеКУчетуОСПоОстаткам.
// 
// Возвращаемое значение:
//   ТекстЗапроса   - Строка
// 
Функция СформироватьТекстЗапросаПринятиеКУчетуОСПоОстаткам() Экспорт

	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.Организация,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации КАК СчетНачисленияАмортизацииБУ
	|ПОМЕСТИТЬ СчетаБУ
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&ДатаСведений, {(Организация), (ОсновноеСредство)}) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	ИСТИНА КАК Выполнять,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	//|	ХозрасчетныйОборотыДтКт.Регистратор КАК ДокументБУ,
	//|    ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.РаспределениеНДС КАК ЭтоРаспределениеНДС,
	|	ХозрасчетныйОстатки.Субконто1 КАК ВНА,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстаток, 0) КАК Сумма,
	|	МестонахождениеОСБУ.МОЛ,
	|	МестонахождениеОСБУ.Местонахождение,
	|	ПервоначальныеСведенияОСБУ.ИнвентарныйНомер,
	|	ПервоначальныеСведенияОСБУ.СпособНачисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.СрокПолезногоИспользования,
	|	ЕСТЬNULL(ПервоначальныеСведенияОСБУ.ПервоначальнаяСтоимость, 0) КАК ПервоначальнаяСтоимость,
	|	СостоянияОСОрганизаций.ДатаСостояния КАК ДатаПринятияКУчету,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиАмортизация.СуммаОстатокКт, 0) КАК СуммаНачисленнойАмортизации
	|ПОМЕСТИТЬ ТабРезультатРуб
	|ИЗ
	// Изменение кода. Начало. 15.11.2016{{
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаСведений, Счет В ИЕРАРХИИ (&СписокСчетов), &МассивСубконто, {(Организация)}) КАК ХозрасчетныйОстатки
	// Изменение кода. Конец. 15.11.2016}}
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, {(Организация), (ОсновноеСредство)}) КАК МестонахождениеОСБУ
	|			ПО ХозрасчетныйОстатки.Организация = МестонахождениеОСБУ.Организация
	|			 И ХозрасчетныйОстатки.Субконто1 = МестонахождениеОСБУ.ОсновноеСредство
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, {(Организация), (ОсновноеСредство)}) КАК ПервоначальныеСведенияОСБУ
	|			ПО ХозрасчетныйОстатки.Организация = ПервоначальныеСведенияОСБУ.Организация
	|			 И ХозрасчетныйОстатки.Субконто1 = ПервоначальныеСведенияОСБУ.ОсновноеСредство		
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, {(Организация), (ОсновноеСредство)}) КАК ПараметрыАмортизацииОСБУ
	|			ПО ХозрасчетныйОстатки.Организация = ПараметрыАмортизацииОСБУ.Организация
	|		 	 И ХозрасчетныйОстатки.Субконто1 = ПараметрыАмортизацииОСБУ.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|			ПО ХозрасчетныйОстатки.Организация = СостоянияОСОрганизаций.Организация
	|			 И ХозрасчетныйОстатки.Субконто1 = СостоянияОСОрганизаций.ОсновноеСредство
	|			 И СостоянияОСОрганизаций.Состояние = &СостояниеПринятоБУ
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБУ КАК СчетаБУ
	|			ПО ХозрасчетныйОстатки.Организация = СчетаБУ.Организация
	|			 И ХозрасчетныйОстатки.Субконто1 = СчетаБУ.ОсновноеСредство
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|					&ДатаСведений,
	|					Счет В
	|						(ВЫБРАТЬ
	|							СчетаБУ.СчетНачисленияАмортизацииБУ
	|						ИЗ
	|							СчетаБУ КАК СчетаБУ),
	|					&МассивСубконто,
	|					) КАК ХозрасчетныйОстаткиАмортизация
	|			ПО (СчетаБУ.Организация = ХозрасчетныйОстаткиАмортизация.Организация)
	|			И (СчетаБУ.СчетНачисленияАмортизацииБУ = ХозрасчетныйОстаткиАмортизация.Счет)
	|			И (ХозрасчетныйОстаткиАмортизация.Субконто1 = СчетаБУ.ОсновноеСредство)
	|{ГДЕ
	|	ХозрасчетныйОстатки.Субконто1.* КАК ОсновноеСредство,
	|	МестонахождениеОСБУ.МОЛ.*,
	|	МестонахождениеОСБУ.Местонахождение.*}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(КурсыВалют.Период) КАК Период,
	|	ТабРезультатРуб.ДатаПринятияКУчету
	|ПОМЕСТИТЬ ДатыКурсов
	|ИЗ
	|	ТабРезультатРуб КАК ТабРезультатРуб
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ТабРезультатРуб.ДатаПринятияКУчету >= КурсыВалют.Период
	|			И (КурсыВалют.Валюта = &ВалютаМСФО)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабРезультатРуб.ДатаПринятияКУчету
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыКурсов.Период,
	|	ДатыКурсов.ДатаПринятияКУчету,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ КурсыВалютМСФО
	|ИЗ
	|	ДатыКурсов КАК ДатыКурсов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ДатыКурсов.Период = КурсыВалют.Период
	|			И (КурсыВалют.Валюта = &ВалютаМСФО)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабРезультатРуб.Счет,
	|	ТабРезультатРуб.ВНА,
	|	ТабРезультатРуб.Сумма * ЕСТЬNULL(КурсыВалютМСФО.Кратность, 1) / ЕСТЬNULL(КурсыВалютМСФО.Курс, 1) КАК Сумма,
	|	ТабРезультатРуб.ПервоначальнаяСтоимость * ЕСТЬNULL(КурсыВалютМСФО.Кратность, 1) / ЕСТЬNULL(КурсыВалютМСФО.Курс, 1) КАК ПервоначальнаяСтоимость,
	|	ТабРезультатРуб.СуммаНачисленнойАмортизации * ЕСТЬNULL(КурсыВалютМСФО.Кратность, 1) / ЕСТЬNULL(КурсыВалютМСФО.Курс, 1) КАК СуммаНачисленнойАмортизации,
	|	ТабРезультатРуб.СпособНачисленияАмортизации,
	|	ТабРезультатРуб.МОЛ,
	|	ТабРезультатРуб.Местонахождение,
	|	ТабРезультатРуб.ДатаПринятияКУчету,
	|	ТабРезультатРуб.СрокПолезногоИспользования,
	|	ТабРезультатРуб.ИнвентарныйНомер,
	|	бит_му_СостоянияОС.ДатаСостояния
	|ИЗ
	|	ТабРезультатРуб КАК ТабРезультатРуб
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалютМСФО КАК КурсыВалютМСФО
	|			ПО ТабРезультатРуб.ДатаПринятияКУчету = КурсыВалютМСФО.ДатаПринятияКУчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияОС КАК бит_му_СостоянияОС
	|			ПО ТабРезультатРуб.ВНА = бит_му_СостоянияОС.ОсновноеСредство
	|			И (бит_му_СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_му_СостоянияОС.ПринятоКУчету))
	|ГДЕ
	|	бит_му_СостоянияОС.ДатаСостояния ЕСТЬ NULL 
	//|		ИЛИ ТабРезультатРуб.ЭтоРаспределениеНДС 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СчетаБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабРезультатРуб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДатыКурсов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КурсыВалютМСФО
	|";

	Возврат ТекстЗапроса;
		
КонецФункции // СформироватьТекстЗапросаПринятиеКУчетуОСПоОстаткам()

// Функция формирует текст запроса для режима ПринятиеКУчетуОСПоОстаткам.
// 
// Возвращаемое значение:
//   ТекстЗапроса   - Строка
// 
Функция СформироватьТекстЗапросаПринятиеКУчетуНМАПоОстаткам() Экспорт

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|   СчетаБухгалтерскогоУчетаНМАСрезПоследних.Организация,
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.НематериальныйАктив,
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетНачисленияАмортизации КАК СчетНачисленияАмортизацииБУ 
	|ПОМЕСТИТЬ СчетаБУ
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(&ДатаСведений, {(Организация), (НематериальныйАктив)}) КАК СчетаБухгалтерскогоУчетаНМАСрезПоследних
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.Субконто1 КАК ВНА,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстаток, 0) КАК Сумма,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ПервоначальныеСведенияНМАБУ.ПервоначальнаяСтоимость, 0) КАК ЧИСЛО(17, 4)) КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияНМАБУ.СпособНачисленияАмортизации,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиАмортизация.СуммаОстатокКт, 0) КАК СуммаНачисленнойАмортизации,
	|	СостоянияНМАОрганизаций.Период КАК ДатаПринятияКУчету
	|ПОМЕСТИТЬ ТабРезультатРуб
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаСведений, Счет В ИЕРАРХИИ (&СчетНМА), &МассивСубконто, {(Организация)}) КАК ХозрасчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(&ДатаСведений, {(Организация), (НематериальныйАктив)}) КАК ПервоначальныеСведенияНМАБУ
	|		ПО ХозрасчетныйОстатки.Организация = ПервоначальныеСведенияНМАБУ.Организация
	|			И ХозрасчетныйОстатки.Субконто1 = ПервоначальныеСведенияНМАБУ.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних(&ДатаСведений, {(Организация), (НематериальныйАктив)}) КАК СостоянияНМАОрганизаций
	|		ПО ХозрасчетныйОстатки.Субконто1 = СостоянияНМАОрганизаций.НематериальныйАктив
	|			И ХозрасчетныйОстатки.Организация = СостоянияНМАОрганизаций.Организация
	|			И (СостоянияНМАОрганизаций.Состояние = &СостояниеПринятоБУ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБУ КАК СчетаБУ
	|			ПО ХозрасчетныйОстатки.Организация = СчетаБУ.Организация
	|			 И ХозрасчетныйОстатки.Субконто1 = СчетаБУ.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|					&ДатаСведений,
	|					Счет В
	|						(ВЫБРАТЬ
	|							СчетаБУ.СчетНачисленияАмортизацииБУ
	|						ИЗ
	|							СчетаБУ КАК СчетаБУ),
	|					&МассивСубконто,
	|					) КАК ХозрасчетныйОстаткиАмортизация
	|			ПО (СчетаБУ.Организация = ХозрасчетныйОстаткиАмортизация.Организация)
	|			И (СчетаБУ.СчетНачисленияАмортизацииБУ = ХозрасчетныйОстаткиАмортизация.Счет)
	|			И (ХозрасчетныйОстаткиАмортизация.Субконто1 = СчетаБУ.НематериальныйАктив)
	|{ГДЕ
	|	(ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.НематериальныеАктивы)).* КАК НематериальныйАктив}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(КурсыВалют.Период) КАК Период,
	|	ТабРезультатРуб.ДатаПринятияКУчету
	|ПОМЕСТИТЬ ДатыКурсов
	|ИЗ
	|	ТабРезультатРуб КАК ТабРезультатРуб
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ТабРезультатРуб.ДатаПринятияКУчету >= КурсыВалют.Период
	|			И (КурсыВалют.Валюта = &ВалютаМСФО)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабРезультатРуб.ДатаПринятияКУчету
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыКурсов.Период,
	|	ДатыКурсов.ДатаПринятияКУчету,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ КурсыВалютМСФО
	|ИЗ
	|	ДатыКурсов КАК ДатыКурсов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ДатыКурсов.Период = КурсыВалют.Период
	|			И (КурсыВалют.Валюта = &ВалютаМСФО)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабРезультатРуб.Счет,
	|	ТабРезультатРуб.ВНА,
	|	ТабРезультатРуб.Сумма * ЕСТЬNULL(КурсыВалютМСФО.Кратность, 1) / ЕСТЬNULL(КурсыВалютМСФО.Курс, 1) КАК Сумма,
	|	ТабРезультатРуб.ПервоначальнаяСтоимость * ЕСТЬNULL(КурсыВалютМСФО.Кратность, 1) / ЕСТЬNULL(КурсыВалютМСФО.Курс, 1) КАК ПервоначальнаяСтоимость,
	|   ТабРезультатРуб.СуммаНачисленнойАмортизации * ЕСТЬNULL(КурсыВалютМСФО.Кратность, 1) / ЕСТЬNULL(КурсыВалютМСФО.Курс, 1) КАК СуммаНачисленнойАмортизации,
	|	ТабРезультатРуб.ДатаПринятияКУчету,
	|	бит_му_СостоянияНМА.ДатаСостояния
	|ИЗ
	|	ТабРезультатРуб КАК ТабРезультатРуб
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалютМСФО КАК КурсыВалютМСФО
	|			ПО ТабРезультатРуб.ДатаПринятияКУчету = КурсыВалютМСФО.ДатаПринятияКУчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияНМА КАК бит_му_СостоянияНМА
	|			ПО ТабРезультатРуб.ВНА = бит_му_СостоянияНМА.НематериальныйАктив
	|			И (бит_му_СостоянияНМА.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_му_СостоянияНМА.ПринятоКУчету))
	|ГДЕ
	|	бит_му_СостоянияНМА.ДатаСостояния ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СчетаБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабРезультатРуб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДатыКурсов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КурсыВалютМСФО
	|";

	Возврат ТекстЗапроса;
		
КонецФункции // СформироватьТекстЗапросаПринятиеКУчетуНМАПоОстаткам()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает значение параметра СКД по его имени.
// 
// Параметры:
// 	ПараметрыСКД - ЗначенияПараметровДанныхКомпоновкиДанных.
// 	ИмяПараметра - Строка.
// 	Значение - произвольный - значение параметра.
// 
Процедура УстановитьЗначениеПараметраСКД(ПараметрыСКД, ИмяПараметра, Значение)
	
	Параметр = Новый ПараметрКомпоновкиДанных(ИмяПараметра);
	
	НайденныйПараметр = ПараметрыСКД.НайтиЗначениеПараметра(Параметр);
	
	Если НайденныйПараметр <> Неопределено Тогда
		
		ПараметрыСКД.УстановитьЗначениеПараметра(ИмяПараметра, Значение);
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьЗначениеПараметраСКД()

// Функция формирует текст запроса для режима ПринятиеКУчетуОС.
// 
// Возвращаемое значение:
//   ТекстЗапроса   - Строка
// 
Функция СформироватьТекстЗапросаПринятиеКУчетуОС()
	
	///БИТ Тртилек
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИСТИНА КАК Выполнять,
		|	ЕСТЬNULL(ПервоначальныеСведенияОСБУ.ПервоначальнаяСтоимость, 0) КАК ПервоначальнаяСтоимость,
		|	ПервоначальныеСведенияОСБУ.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
		|	МестонахождениеОСБУ.МОЛ КАК МОЛ,
		|	МестонахождениеОСБУ.Местонахождение КАК Местонахождение,
		|	СостоянияОСОрганизаций.ДатаСостояния КАК ДатаПринятияКУчету,
		|	ПервоначальныеСведенияОСБУ.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ХозрасчетныйОбороты.СчетДт КАК СчетДт,
		|	ХозрасчетныйОбороты.СчетКт КАК СчетКт,
		|	ХозрасчетныйОбороты.СубконтоДт1 КАК ВНА,
		|	ХозрасчетныйОбороты.СубконтоДт2 КАК СубконтоДт2,
		|	ХозрасчетныйОбороты.СубконтоДт3 КАК СубконтоДт3,
		|	ХозрасчетныйОбороты.СубконтоКт1 КАК СубконтоКт1,
		|	ХозрасчетныйОбороты.СубконтоКт2 КАК СубконтоКт2,
		|	ХозрасчетныйОбороты.СубконтоКт3 КАК СубконтоКт3,
		|	ХозрасчетныйОбороты.Регистратор КАК ДокументБУ,
		|	ХозрасчетныйОбороты.Сумма КАК Сумма,
		|	ХозрасчетныйОбороты.Организация КАК Организация
		|ИЗ
		|	(ВЫБРАТЬ
		|		ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|		ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
		|		ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК СубконтоДт1,
		|		ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК СубконтоДт2,
		|		ХозрасчетныйОборотыДтКт.СубконтоДт3 КАК СубконтоДт3,
		|		ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1,
		|		ХозрасчетныйОборотыДтКт.СубконтоКт2 КАК СубконтоКт2,
		|		ХозрасчетныйОборотыДтКт.СубконтоКт3 КАК СубконтоКт3,
		|		ХозрасчетныйОборотыДтКт.Регистратор КАК Регистратор,
		|		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0) КАК Сумма,
		|		ХозрасчетныйОборотыДтКт.Организация КАК Организация
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Запись, СчетДт В (&СписокСчетов), , СчетКт В ИЕРАРХИИ (&СчетВНА), , {(Организация)}) КАК ХозрасчетныйОборотыДтКт
		|	{ГДЕ
		|		ХозрасчетныйОборотыДтКт.Регистратор.*,
		|		(ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.ОсновныеСредства)).* КАК ОсновноеСредство}
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОбороты.Счет,
		|		ХозрасчетныйОбороты.КорСчет,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОбороты.Субконто1 ССЫЛКА Справочник.ОсновныеСредства
		|				ТОГДА ХозрасчетныйОбороты.Субконто1
		|			КОГДА ХозрасчетныйОбороты.Субконто2 ССЫЛКА Справочник.ОсновныеСредства
		|				ТОГДА ХозрасчетныйОбороты.Субконто2
		|		КОНЕЦ,
		|		ХозрасчетныйОбороты.Субконто2,
		|		ХозрасчетныйОбороты.Субконто3,
		|		ХозрасчетныйОбороты.КорСубконто1,
		|		ХозрасчетныйОбороты.КорСубконто2,
		|		ХозрасчетныйОбороты.КорСубконто3,
		|		ХозрасчетныйОбороты.Регистратор,
		|		ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборот, 0),
		|		ХозрасчетныйОбороты.Организация
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Запись, Счет В ИЕРАРХИИ (&СчетаВводНачальныхОстатков), , {(Организация)}, , ) КАК ХозрасчетныйОбороты
		|	ГДЕ
		|		ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВводНачальныхОстатков
		|	{ГДЕ
		|		ХозрасчетныйОбороты.Регистратор.*,
		|		(ВЫБОР
		|				КОГДА ХозрасчетныйОбороты.Субконто1 ССЫЛКА Справочник.ОсновныеСредства
		|					ТОГДА ХозрасчетныйОбороты.Субконто1
		|				КОГДА ХозрасчетныйОбороты.Субконто2 ССЫЛКА Справочник.ОсновныеСредства
		|					ТОГДА ХозрасчетныйОбороты.Субконто2
		|			КОНЕЦ).* КАК ОсновноеСредство}) КАК ХозрасчетныйОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(, {(Организация), (ОсновноеСредство)}) КАК МестонахождениеОСБУ
		|		ПО ХозрасчетныйОбороты.Организация = МестонахождениеОСБУ.Организация
		|			И ХозрасчетныйОбороты.СубконтоДт1 = МестонахождениеОСБУ.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(, {(Организация), (ОсновноеСредство)}) КАК ПервоначальныеСведенияОСБУ
		|		ПО ХозрасчетныйОбороты.Организация = ПервоначальныеСведенияОСБУ.Организация
		|			И ХозрасчетныйОбороты.СубконтоДт1 = ПервоначальныеСведенияОСБУ.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
		|		ПО ХозрасчетныйОбороты.СубконтоДт1 = СостоянияОСОрганизаций.ОсновноеСредство
		|			И ХозрасчетныйОбороты.Организация = СостоянияОСОрганизаций.Организация
		|			И (СостоянияОСОрганизаций.Состояние = &СостояниеПринятоБУ)
		|{ГДЕ
		|	МестонахождениеОСБУ.МОЛ.*,
		|	МестонахождениеОСБУ.Местонахождение.*}";
	Возврат ТекстЗапроса;
	///БИТ Тртилек
	
	// Адаптация для ERP. Начало. 18.03.2014{{
	ИмяСправочникаОсновныеСредства = бит_ОбщегоНазначения.ПолучитьИмяСправочникаОсновныеСредства();
	// Адаптация для ERP. Конец. 18.03.2014}}
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.Организация,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации КАК СчетНачисленияАмортизацииБУ
	|ПОМЕСТИТЬ СчетаБУ
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&ДатаСведений, {(Организация), (ОсновноеСредство)}) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИСТИНА КАК Выполнять,
	|	ХозрасчетныйОборотыДтКт.Регистратор КАК ДокументБУ,
	|   ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.РаспределениеНДС КАК ЭтоРаспределениеНДС,
	|	ХозрасчетныйОборотыДтКт.СчетДт,
	|	ХозрасчетныйОборотыДтКт.СчетКт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|			ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт2 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|			ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт2
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт3 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|			ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт3
	|	КОНЕЦ КАК ВНА,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт2,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт3,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт2,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт3,
	|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0) КАК Сумма,
	|	ЕСТЬNULL(ПервоначальныеСведенияОСБУ.ПервоначальнаяСтоимость, 0) КАК ПервоначальнаяСтоимость,
	// Добавление кода. Начало. 12.12.2016{{ BF-399
	|	ПараметрыАмортизацииОСБУ.СрокПолезногоИспользования,
	// Добавление кода. Конец. 12.12.2016}}
	|	ЕСТЬNULL(ХозрасчетныйОстаткиАмортизация.СуммаОстатокКт, 0) КАК СуммаНачисленнойАмортизации,
	|	ПервоначальныеСведенияОСБУ.СпособНачисленияАмортизации,
	|	МестонахождениеОСБУ.МОЛ,
	|	МестонахождениеОСБУ.Местонахождение,
	|	СостоянияОСОрганизаций.ДатаСостояния КАК ДатаПринятияКУчету,
	|	ПервоначальныеСведенияОСБУ.ИнвентарныйНомер
	|ПОМЕСТИТЬ ТабРезультатРуб
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Запись, СчетДт В ИЕРАРХИИ (&СписокСчетов), , СчетКт В ИЕРАРХИИ (&СчетВНА), , {(Организация)}) КАК ХозрасчетныйОборотыДтКт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, {(Организация), (ОсновноеСредство)}) КАК МестонахождениеОСБУ
	|		ПО ХозрасчетныйОборотыДтКт.Организация = МестонахождениеОСБУ.Организация
	|			И (ВЫБОР
	|				КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|					ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1
	|				КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт2 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|					ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт2
	|				КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт3 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|					ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт3
	|			КОНЕЦ = МестонахождениеОСБУ.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, {(Организация), (ОсновноеСредство)}) КАК ПервоначальныеСведенияОСБУ
	|		ПО ХозрасчетныйОборотыДтКт.Организация = ПервоначальныеСведенияОСБУ.Организация
	|			И (ВЫБОР
	|				КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|					ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1
	|				КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт2 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|					ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт2
	|				КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт3 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|					ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт3
	|			КОНЕЦ = ПервоначальныеСведенияОСБУ.ОсновноеСредство)
	// Добавление кода. Начало. 12.12.2016{{ BF-399
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, {(Организация), (ОсновноеСредство)}) КАК ПараметрыАмортизацииОСБУ
	|			ПО ХозрасчетныйОборотыДтКт.Организация = ПараметрыАмортизацииОСБУ.Организация
	|		 	 И (ВЫБОР
	|				КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|					ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1
	|				КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт2 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|					ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт2
	|				КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт3 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|					ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт3
	|			КОНЕЦ = ПараметрыАмортизацииОСБУ.ОсновноеСредство) 		
	// Добавление кода. Конец. 12.12.2016}}
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО ХозрасчетныйОборотыДтКт.Организация = СостоянияОСОрганизаций.Организация
	|			И (СостоянияОСОрганизаций.Состояние = &СостояниеПринятоБУ)
	|			И (ВЫБОР
	|				КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|					ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1
	|				КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт2 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|					ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт2
	|				КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт3 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|					ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт3
	|			КОНЕЦ = СостоянияОСОрганизаций.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБУ КАК СчетаБУ
	|		ПО ХозрасчетныйОборотыДтКт.Организация = СчетаБУ.Организация
	|			И (ВЫБОР
	|				КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|					ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1
	|				КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт2 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|					ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт2
	|				КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт3 ССЫЛКА Справочник."+ИмяСправочникаОсновныеСредства+"
	|					ТОГДА ХозрасчетныйОборотыДтКт.СубконтоДт3
	|			КОНЕЦ = СчетаБУ.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&ДатаСведений,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаБУ.СчетНачисленияАмортизацииБУ
	|					ИЗ
	|						СчетаБУ КАК СчетаБУ),
	|				&ВидСубконтоОС,
	|				) КАК ХозрасчетныйОстаткиАмортизация
	|		ПО (СчетаБУ.Организация = ХозрасчетныйОстаткиАмортизация.Организация)
	|			И (СчетаБУ.СчетНачисленияАмортизацииБУ = ХозрасчетныйОстаткиАмортизация.Счет)
	|			И (ХозрасчетныйОстаткиАмортизация.Субконто1 = СчетаБУ.ОсновноеСредство)
	|{ГДЕ
	// Адаптация для ERP. Начало. 18.03.2014{{
	|	(ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник."+ИмяСправочникаОсновныеСредства+")).* КАК ОсновноеСредство,
	// Адаптация для ERP. Конец. 18.03.2014}}
	|	ХозрасчетныйОборотыДтКт.Регистратор.*,
	|	МестонахождениеОСБУ.МОЛ.*,
	|	МестонахождениеОСБУ.Местонахождение.*}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(КурсыВалют.Период) КАК Период,
	|	ТабРезультатРуб.ДатаПринятияКУчету
	|ПОМЕСТИТЬ ДатыКурсов
	|ИЗ
	|	ТабРезультатРуб КАК ТабРезультатРуб
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ТабРезультатРуб.ДатаПринятияКУчету >= КурсыВалют.Период
	|			И (КурсыВалют.Валюта = &ВалютаМСФО)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабРезультатРуб.ДатаПринятияКУчету
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыКурсов.Период,
	|	ДатыКурсов.ДатаПринятияКУчету,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ КурсыВалютМСФО
	|ИЗ
	|	ДатыКурсов КАК ДатыКурсов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ДатыКурсов.Период = КурсыВалют.Период
	|			И (КурсыВалют.Валюта = &ВалютаМСФО)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабРезультатРуб.Выполнять,
	|	ТабРезультатРуб.ДокументБУ,
	|   ТабРезультатРуб.ЭтоРаспределениеНДС КАК ЭтоРаспределениеНДС,
	|	ТабРезультатРуб.СчетДт,
	|	ТабРезультатРуб.СчетКт,
	|	ТабРезультатРуб.ВНА,
	|	ТабРезультатРуб.СубконтоДт1,
	|	ТабРезультатРуб.СубконтоДт2,
	|	ТабРезультатРуб.СубконтоДт3,
	|	ТабРезультатРуб.СубконтоКт1,
	|	ТабРезультатРуб.СубконтоКт2,
	|	ТабРезультатРуб.СубконтоКт3,
	|	ТабРезультатРуб.Сумма * ЕСТЬNULL(КурсыВалютМСФО.Кратность, 1) / ЕСТЬNULL(КурсыВалютМСФО.Курс, 1) КАК Сумма,
	|	ТабРезультатРуб.ПервоначальнаяСтоимость * ЕСТЬNULL(КурсыВалютМСФО.Кратность, 1) / ЕСТЬNULL(КурсыВалютМСФО.Курс, 1) КАК ПервоначальнаяСтоимость,
	|	ТабРезультатРуб.СрокПолезногоИспользования,
	|    ВЫБОР КОГДА ТабРезультатРуб.ЭтоРаспределениеНДС
	|    	ТОГДА 0
	|        ИНАЧЕ ТабРезультатРуб.СуммаНачисленнойАмортизации * ЕСТЬNULL(КурсыВалютМСФО.Кратность, 1) / ЕСТЬNULL(КурсыВалютМСФО.Курс, 1)
	|    КОНЕЦ КАК СуммаНачисленнойАмортизации,
	|	ТабРезультатРуб.СпособНачисленияАмортизации, 	
	|	ТабРезультатРуб.МОЛ,
	|	ТабРезультатРуб.Местонахождение,
	|	ТабРезультатРуб.ДатаПринятияКУчету,
	|	ТабРезультатРуб.ИнвентарныйНомер,
	|	бит_му_СостоянияОС.ДатаСостояния
	|ИЗ
	|	ТабРезультатРуб КАК ТабРезультатРуб
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалютМСФО КАК КурсыВалютМСФО
	|		ПО ТабРезультатРуб.ДатаПринятияКУчету = КурсыВалютМСФО.ДатаПринятияКУчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияОС КАК бит_му_СостоянияОС
	|		ПО ТабРезультатРуб.ВНА = бит_му_СостоянияОС.ОсновноеСредство
	|			И (бит_му_СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_му_СостоянияОС.ПринятоКУчету))
	|ГДЕ
	|	бит_му_СостоянияОС.ДатаСостояния ЕСТЬ NULL ИЛИ ТабРезультатРуб.ЭтоРаспределениеНДС 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СчетаБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабРезультатРуб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДатыКурсов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КурсыВалютМСФО
	|";

	Возврат ТекстЗапроса;
		
КонецФункции // СформироватьТекстЗапросаПринятиеКУчетуОС()

// Функция формирует текст запроса для режимов АмортизацияОС, 
// ВыработкаОС, ОбесценениеОС, ПереоценкаОС.
// 
// 
// Возвращаемое значение:
//   ТекстЗапроса   - Строка.
// 
Функция СформироватьТекстЗапросаАмортизацияОС()

	// Адаптация для ERP. Начало. 18.03.2014{{
	ИмяСправочникаОсновныеСредства = бит_ОбщегоНазначения.ПолучитьИмяСправочникаОсновныеСредства();
	// Адаптация для ERP. Конец. 18.03.2014}}
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПараметрыОС.Организация,
	|	ПараметрыОС.ОсновноеСредство,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Местонахождение_ОС)
	|				ТОГДА ПараметрыОС.ЗначениеПараметра
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК Местонахождение,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.МОЛ_ОС)
	|				ТОГДА ПараметрыОС.ЗначениеПараметра
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК МОЛ,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.НачислятьАмортизацию_ОС)
	|				ТОГДА ПараметрыОС.ЗначениеПараметра
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК НачислятьАмортизацию,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.НачислятьАмортизациюСТекущегоПериода_ОС)
	|				ТОГДА ПараметрыОС.ЗначениеПараметра
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК НачислятьАмортизациюСТекущегоПериода,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.ЛиквидационнаяСтоимость_ОС)
	|				ТОГДА ПараметрыОС.ЗначениеПараметра
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЛиквидационнаяСтоимость,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.МетодНачисленияАмортизации_ОС)
	|				ТОГДА ПараметрыОС.ЗначениеПараметра
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МетодНачисленияАмортизации,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС)
	|				ТОГДА ПараметрыОС.ЗначениеПараметра.ВидКласса
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК ВидКласса,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС)
	|				ТОГДА ПараметрыОС.ЗначениеПараметра
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК Класс
	|ПОМЕСТИТЬ ТаблицаПараметров
	|ИЗ
	|	РегистрСведений.бит_му_ПараметрыОС.СрезПоследних(&КонецПериода, {(ОсновноеСредство), (Организация)}) КАК ПараметрыОС
	|{ГДЕ
	|	ПараметрыОС.Организация.*,
	|	ПараметрыОС.ОсновноеСредство.*}
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыОС.ОсновноеСредство,
	|	ПараметрыОС.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаПараметров.Организация,
	|	ТаблицаПараметров.Класс,
	|	ПараметрыКлассов.МодельУчета,
	|	ВЫБОР
	|		КОГДА ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка)
	|			ТОГДА 3
	|		КОГДА ПараметрыКлассов.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка)
	|			ТОГДА 2
	|		КОГДА ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				И ПараметрыКлассов.Класс <> ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка)
	|			ТОГДА 1
	|		КОГДА ПараметрыКлассов.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				И ПараметрыКлассов.Класс <> ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 4
	|	КОНЕЦ КАК Приоритет
	|ПОМЕСТИТЬ МоделиУчета
	|ИЗ
	|	ТаблицаПараметров КАК ТаблицаПараметров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_ПараметрыКлассовВНА КАК ПараметрыКлассов
	|		ПО (ТаблицаПараметров.Организация = ПараметрыКлассов.Организация
	|					И ТаблицаПараметров.Класс = ПараметрыКлассов.Класс
	|				ИЛИ ТаблицаПараметров.Организация = ПараметрыКлассов.Организация
	|					И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка)
	|				ИЛИ ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					И ТаблицаПараметров.Класс = ПараметрыКлассов.Класс
	|				ИЛИ ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МоделиУчета.Организация,
	|	МоделиУчета.Класс,
	|	МИНИМУМ(МоделиУчета.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ МодельУчетаПриоритет
	|ИЗ
	|	МоделиУчета КАК МоделиУчета
	|
	|СГРУППИРОВАТЬ ПО
	|	МоделиУчета.Организация,
	|	МоделиУчета.Класс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МодельУчетаПриоритет.Организация,
	|	МодельУчетаПриоритет.Класс,
	|	МоделиУчета.МодельУчета
	|ПОМЕСТИТЬ МоделиУчетаРезультат
	|ИЗ
	|	МодельУчетаПриоритет КАК МодельУчетаПриоритет
	|		ЛЕВОЕ СОЕДИНЕНИЕ МоделиУчета КАК МоделиУчета
	|		ПО МодельУчетаПриоритет.Организация = МоделиУчета.Организация
	|			И МодельУчетаПриоритет.Класс = МоделиУчета.Класс
	|			И МодельУчетаПриоритет.Приоритет = МоделиУчета.Приоритет
	|ГДЕ
	|	(НЕ МоделиУчета.Организация ЕСТЬ NULL )
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПараметров.Организация,
	|	ТаблицаПараметров.ОсновноеСредство,
	|	ТаблицаПараметров.Местонахождение,
	|	ТаблицаПараметров.МОЛ,
	|	ТаблицаПараметров.НачислятьАмортизацию,
	|	ТаблицаПараметров.НачислятьАмортизациюСТекущегоПериода,
	|	ТаблицаПараметров.ЛиквидационнаяСтоимость,
	|	ТаблицаПараметров.МетодНачисленияАмортизации,
	|	ТаблицаПараметров.ВидКласса,
	|	ТаблицаПараметров.Класс,
	|	МоделиУчетаРезультат.МодельУчета
	|ПОМЕСТИТЬ ТаблицаПараметровРезультат
	|ИЗ
	|	ТаблицаПараметров КАК ТаблицаПараметров
	|		ЛЕВОЕ СОЕДИНЕНИЕ МоделиУчетаРезультат КАК МоделиУчетаРезультат
	|		ПО ТаблицаПараметров.Организация = МоделиУчетаРезультат.Организация
	|			И ТаблицаПараметров.Класс = МоделиУчетаРезультат.Класс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|   ИСТИНА КАК Выполнять,
	|	ОсновныеСредства.Ссылка КАК ВНА,
	|	ТаблицаПараметровРезультат.Организация,
	|	ТаблицаПараметровРезультат.Местонахождение,
	|	ТаблицаПараметровРезультат.МОЛ,
	|	ТаблицаПараметровРезультат.ВидКласса,
	|	ТаблицаПараметровРезультат.Класс,
	|	ТаблицаПараметровРезультат.МетодНачисленияАмортизации,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер,
	|	ЕСТЬNULL(СостоянияОС.ДатаСостояния, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПринятияКУчету,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаПараметровРезультат.НачислятьАмортизацию, ЛОЖЬ) = ИСТИНА
	|			ТОГДА ВЫБОР
	|					КОГДА КОНЕЦПЕРИОДА(ЕСТЬNULL(СостоянияОС.ДатаСостояния, ДАТАВРЕМЯ(1, 1, 1)), МЕСЯЦ) = КОНЕЦПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|						ТОГДА ЕСТЬNULL(ТаблицаПараметровРезультат.НачислятьАмортизациюСТекущегоПериода, ЛОЖЬ)
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачислятьАмортизацию,
	|	ТаблицаПараметровРезультат.МодельУчета КАК МодельУчета
	|ИЗ
	// Адаптация для ERP. Начало. 18.03.2014{{
	|	Справочник."+ИмяСправочникаОсновныеСредства+" КАК ОсновныеСредства
	// Адаптация для ERP. Конец. 18.03.2014}}
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПараметровРезультат КАК ТаблицаПараметровРезультат
	|		ПО ОсновныеСредства.Ссылка = ТаблицаПараметровРезультат.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, {(ОсновноеСредство)}) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|		ПО ОсновныеСредства.Ссылка = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияОС КАК СостоянияОС
	|		ПО ОсновныеСредства.Ссылка = СостоянияОС.ОсновноеСредство
	|			И (СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_му_СостоянияОС.ПринятоКУчету))
	//Начало_бит_Магомедов_04.09.2012 
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СобытияОС КАК бит_му_СобытияОС
	|		ПО (ТаблицаПараметровРезультат.Организация = бит_му_СобытияОС.Организация)
	|			И ОсновныеСредства.Ссылка = бит_му_СобытияОС.ОсновноеСредство
	|			И (бит_му_СобытияОС.Событие = ЗНАЧЕНИЕ(Перечисление.бит_му_СобытияОС.Выбытие))
	//Конец_бит_Магомедов_04.09.2012
	|ГДЕ
	|	(НЕ ОсновныеСредства.ЭтоГруппа)
	//Начало_бит_Магомедов_04.09.2012 
	|	И бит_му_СобытияОС.Событие ЕСТЬ NULL
	//Конец_бит_Магомедов_04.09.2012
	|{ГДЕ
	|	ОсновныеСредства.Ссылка.* КАК ОсновноеСредство,
	|	ТаблицаПараметровРезультат.Местонахождение.*,
	|	ТаблицаПараметровРезультат.МОЛ.*,
	|	ТаблицаПараметровРезультат.ВидКласса.*,
	|	ТаблицаПараметровРезультат.Организация.*,
	|	(ВЫБОР
	|			КОГДА ЕСТЬNULL(ТаблицаПараметровРезультат.НачислятьАмортизацию, ЛОЖЬ) = ИСТИНА
	|				ТОГДА ВЫБОР
	|						КОГДА КОНЕЦПЕРИОДА(ЕСТЬNULL(СостоянияОС.ДатаСостояния, ДАТАВРЕМЯ(1, 1, 1)), МЕСЯЦ) = КОНЕЦПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|							ТОГДА ЕСТЬNULL(ТаблицаПараметровРезультат.НачислятьАмортизациюСТекущегоПериода, ЛОЖЬ)
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ).* КАК НачислятьАмортизацию,
	|	ТаблицаПараметровРезультат.МетодНачисленияАмортизации,
	|	ТаблицаПараметровРезультат.МодельУчета.*}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПараметров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МоделиУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МодельУчетаПриоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МоделиУчетаРезультат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПараметровРезультат
	|";

	Возврат ТекстЗапроса;
		
КонецФункции // СформироватьТекстЗапросаАмортизацияОС()

// Функция формирует текст запроса в режиме подбора МодернизацияОС.
// 
// Возвращаемое значение:
//   ТекстЗапроса   - Строка
// 
Функция СформироватьТекстЗапросаМодернизацияОС()

	// СчетКт - СчетНезавершенногоСтроительства
	
	// Адаптация для ERP. Начало. 18.03.2014{{
	ИмяСправочникаОсновныеСредства = бит_ОбщегоНазначения.ПолучитьИмяСправочникаОсновныеСредства();
	ИмяСправочникаОбъектыСтроительства = бит_ОбщегоНазначения.ПолучитьИмяСправочникаОбъектыСтроительства();
	// Адаптация для ERP. Конец. 18.03.2014}}
	
	ТекстЗапроса = "	
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИСТИНА КАК Выполнять,
	|	ХозрасчетныйОборотыДтКт.Регистратор 			 КАК ДокументБУ,
	|	ХозрасчетныйОборотыДтКт.Период					 КАК ДатаМодернизации,
	|	ХозрасчетныйОборотыДтКт.Организация,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт1 			 КАК ВНА,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1 			 КАК ОбъектСтроительства,
	|	ХозрасчетныйОборотыДтКт.СчетДт,             		
	|	ХозрасчетныйОборотыДтКт.СчетКт,
	|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0) КАК Сумма,
	|	МестонахождениеОСБУ.МОЛ,
	|	МестонахождениеОСБУ.Местонахождение,
	|	ПервоначальныеСведенияОСБУ.ИнвентарныйНомер
	|ПОМЕСТИТЬ ТабРезультатРуб
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Запись, СчетДт В (&СписокСчетов), &ВидСубконтоОС, СчетКт В ИЕРАРХИИ (&СчетВНА), &МассивСубконтоКт, {(Организация)}) КАК ХозрасчетныйОборотыДтКт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(, {(Организация), (ОсновноеСредство)}) КАК МестонахождениеОСБУ
	|		ПО ХозрасчетныйОборотыДтКт.Организация = МестонахождениеОСБУ.Организация
	|			И ХозрасчетныйОборотыДтКт.СубконтоДт1 = МестонахождениеОСБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(, {(Организация), (ОсновноеСредство)}) КАК ПервоначальныеСведенияОСБУ
	|		ПО ХозрасчетныйОборотыДтКт.Организация = ПервоначальныеСведенияОСБУ.Организация
	|			И ХозрасчетныйОборотыДтКт.СубконтоДт1 = ПервоначальныеСведенияОСБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_ПараметрыОС.СрезПоследних(&ДатаСведений, Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС) {(Организация), (ОсновноеСредство)}) КАК КлассыОС_МУ
	|		ПО ХозрасчетныйОборотыДтКт.СубконтоДт1 = КлассыОС_МУ.ОсновноеСредство
	|ГДЕ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.МодернизацияОС
	|{ГДЕ
	|   ХозрасчетныйОборотыДтКт.Организация.*,
	// Адаптация для ERP. Начало. 18.03.2014{{
	|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник."+ИмяСправочникаОсновныеСредства+").* КАК ОсновноеСредство,
	|	(ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Справочник."+ИмяСправочникаОбъектыСтроительства+")).* КАК ОбъектСтроительства,
	// Адаптация для ERP. Конец. 18.03.2014}}
	|	ХозрасчетныйОборотыДтКт.Регистратор.*,
	|	МестонахождениеОСБУ.МОЛ.*,
	|	МестонахождениеОСБУ.Местонахождение.*,
	|	КлассыОС_МУ.ЗначениеПараметра.ВидКласса.* КАК ВидКласса}
	|;
    |
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(КурсыВалют.Период) КАК Период,
	|	ТабРезультатРуб.ДатаМодернизации
	|ПОМЕСТИТЬ ДатыКурсов
	|ИЗ
	|	ТабРезультатРуб КАК ТабРезультатРуб
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ТабРезультатРуб.ДатаМодернизации >= КурсыВалют.Период
	|			И (КурсыВалют.Валюта = &ВалютаМСФО)
    |
	|СГРУППИРОВАТЬ ПО
	|	ТабРезультатРуб.ДатаМодернизации
	|;
    |
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыКурсов.Период,
	|	ДатыКурсов.ДатаМодернизации,
	|	КурсыВалют.Курс 	 КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ КурсыВалютМСФО
	|ИЗ
	|	ДатыКурсов КАК ДатыКурсов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ДатыКурсов.Период = КурсыВалют.Период
	|			И (КурсыВалют.Валюта = &ВалютаМСФО)
	|;
    |
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабРезультатРуб.Выполнять,
	|	ТабРезультатРуб.ДокументБУ,
	|	ТабРезультатРуб.ДатаМодернизации,
	|	ТабРезультатРуб.Организация,
	|	ТабРезультатРуб.ВНА,
	|	ТабРезультатРуб.ОбъектСтроительства,
	|	ТабРезультатРуб.СчетДт,
	|	ТабРезультатРуб.СчетКт,
	|	ТабРезультатРуб.Сумма * ЕСТЬNULL(КурсыВалютМСФО.Кратность, 1) / ЕСТЬNULL(КурсыВалютМСФО.Курс, 1) КАК СуммаМодернизации,  		
	|	ТабРезультатРуб.МОЛ,
	|	ТабРезультатРуб.Местонахождение,
	|	ТабРезультатРуб.ИнвентарныйНомер  	
	|ИЗ
	|	ТабРезультатРуб КАК ТабРезультатРуб
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалютМСФО КАК КурсыВалютМСФО
	|		ПО ТабРезультатРуб.ДатаМодернизации = КурсыВалютМСФО.ДатаМодернизации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияОС КАК бит_му_СостоянияОС
	|			ПО ТабРезультатРуб.ВНА = бит_му_СостоянияОС.ОсновноеСредство
	|			   И (бит_му_СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_му_СостоянияОС.ПринятоКУчету))
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабРезультатРуб
	|;
    |
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДатыКурсов
	|;
    |
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КурсыВалютМСФО
	|";
	
    Возврат ТекстЗапроса;
		
КонецФункции // СформироватьТекстЗапросаМодернизацияОС()

// Функция формирует текст запроса для подбора в режиме ПеремещениеОС.
// 
// Возвращаемое значение:
//   ТекстЗапроса   - Строка
// 
Функция СформироватьТекстЗапросаПеремещениеОС()

	Если бит_ОбщегоНазначения.ЭтоСемействоERP() Тогда	
		ИмяРеквизитаПодразделение = "Подразделение";
		ИмяРеквизитаМОЛ = "МОЛ";		
	Иначе	
		ИмяРеквизитаПодразделение = "ПодразделениеОрганизации";
		ИмяРеквизитаМОЛ = "МОЛОрганизации";
	КонецЕсли;
	
	ТекстЗапроса = 
		//БИТ Тртилек 31102103 добавим в запрос вид класса, мол, местоположение
		//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		"ВЫБРАТЬ
		|	бит_му_ПараметрыОССрезПоследних.Организация,
		|	бит_му_ПараметрыОССрезПоследних.ОсновноеСредство,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА бит_му_ПараметрыОССрезПоследних.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС)
		|				ТОГДА бит_му_ПараметрыОССрезПоследних.ЗначениеПараметра.ВидКласса
		|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.бит_му_ВидыКлассовОС.ПустаяСсылка)
		|		КОНЕЦ) КАК ВидКласса
		|ПОМЕСТИТЬ ПараметрыОС_МУ
		|ИЗ
		|	РегистрСведений.бит_му_ПараметрыОС.СрезПоследних(&КонецПериода, {(Организация), (ОсновноеСредство)}) КАК бит_му_ПараметрыОССрезПоследних
		|{ГДЕ
		|	бит_му_ПараметрыОССрезПоследних.Организация.*,
		|	бит_му_ПараметрыОССрезПоследних.ОсновноеСредство.*}
		|
		|СГРУППИРОВАТЬ ПО
		|	бит_му_ПараметрыОССрезПоследних.Организация,
		|	бит_му_ПараметрыОССрезПоследних.ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		///БИТ Тртилек
		|	ИСТИНА КАК Выполнять,
		|	ТабЧасть.ОсновноеСредство КАК ВНА,
		|	ТабЧасть.Ссылка.Организация,
		|	ТабЧасть.Ссылка."+ИмяРеквизитаПодразделение+" КАК Местонахождение,
		|	ТабЧасть.Ссылка."+ИмяРеквизитаМОЛ+" КАК МОЛ,
		|	ТабЧасть.Ссылка КАК ДокументБУ,
		|	ПервоначальныеСведенияОСБУ.ИнвентарныйНомер
		//БИТ Тртилек 3110210
		|	,ПараметрыОС_МУ.ВидКласса
		///БИТ Тртилек
		|ИЗ
		|	Документ.ПеремещениеОС.ОС КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, ) КАК ПервоначальныеСведенияОСБУ
		|		ПО ТабЧасть.ОсновноеСредство = ПервоначальныеСведенияОСБУ.ОсновноеСредство
		//БИТ Тртилек 3110210
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыОС_МУ КАК ПараметрыОС_МУ
		|		ПО ТабЧасть.ОсновноеСредство = ПараметрыОС_МУ.ОсновноеСредство
		|			И ТабЧасть.Ссылка.Организация = ПараметрыОС_МУ.Организация
		///БИТ Тртилек
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &НачалоПериода <> &ПустаяДата
		|					И &КонецПериода <> &ПустаяДата
		|				ТОГДА ТабЧасть.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|			КОГДА &НачалоПериода = &ПустаяДата
		|					И &КонецПериода <> &ПустаяДата
		|				ТОГДА ТабЧасть.Ссылка.Дата <= &КонецПериода
		|			КОГДА &НачалоПериода <> &ПустаяДата
		|					И &КонецПериода = &ПустаяДата
		|				ТОГДА ТабЧасть.Ссылка.Дата >= &НачалоПериода
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|{ГДЕ
		|	ТабЧасть.ОсновноеСредство.*,
		|	ТабЧасть.Ссылка.Организация.*,
		|	ТабЧасть.Ссылка."+ИмяРеквизитаПодразделение+".* КАК Местонахождение,
		|	ТабЧасть.Ссылка."+ИмяРеквизитаМОЛ+".* КАК МОЛ,
		//БИТ Тртилек 3110210
		|	ПараметрыОС_МУ.ВидКласса.*,
		///БИТ Тртилек
		|	ТабЧасть.Ссылка.Проведен}";
	
        Возврат ТекстЗапроса;
		
КонецФункции // СформироватьТекстЗапросаПеремещениеОС()

// Функция формирует текст запроса для подбора в режиме ВыбытиеОС.
// 
// Параметры:
//  СтруктураПараметров.
// 
// Возвращаемое значение:
//  ТекстЗапроса - Строка.
// 
Функция СформироватьТекстЗапросаВыбытиеОС(СтруктураПараметров)
	
	ИмяДокументаПередачаОС = бит_ОбщегоНазначения.ПолучитьИмяДокументаПередачаОС();
	
	ВидДвижения = Неопределено;
	СтруктураПараметров.Свойство("ВидДвижения", ВидДвижения);
	
	ЭтоНеПеревод = (Не ВидДвижения = Перечисления.бит_му_ВидыДвиженияВыбытия.ПереводВПредназначенныеДляПродажи);
	ЭтоПродажа	 = (   ВидДвижения = Перечисления.бит_му_ВидыДвиженияВыбытия.Продажа);
	
	//СтавитьСуммуПродажи = ЕстьСуммаДокументаПередачи(ИмяДокументаПередачаОС) И ЭтоПродажа;
	
	// бит_IDotsenko изменение кода. Начало. 01.06.2016{{
	Если НЕ бит_ОбщегоНазначения.ЭтоERP()
		И ЭтоПродажа Тогда
	
		ЭтоПродажаНеЕРП = Истина;
		
	Иначе  	
		ЭтоПродажаНеЕРП = Ложь;
	КонецЕсли; 
	// бит_IDotsenko изменение кода. Конец. 01.06.2016}}
	
	// Добавление кода. Начало: 28.10.2016  {{
	ПодготовкаКПередачеОСОбработан = (ВРЕГ(ИмяДокументаПередачаОС) = ВРЕГ("ПодготовкаКПередачеОС"));
	ЕстьРеквизитСуммаВключаетНДС   = (бит_ОбщегоНазначения.ЕстьРеквизит("СуммаВключаетНДС", Метаданные.Документы[ИмяДокументаПередачаОС]));
	// Добавление кода. Конец }}  

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИСТИНА КАК Выполнять,
	|	СписаниеОСОС.ОсновноеСредство КАК ВНА,
	|	СписаниеОСОС.Ссылка.Организация,
	|	0 КАК Сумма,
	|	0 КАК СуммаНДС,
	|	СписаниеОСОС.Ссылка КАК ДокументБУ,
	|	1.5 КАК Приоритет
	|ПОМЕСТИТЬ ТаблицаДокументовБУ
	|ИЗ
	|	Документ.СписаниеОС.ОС КАК СписаниеОСОС
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &НачалоПериода <> &ПустаяДата
	|					И &КонецПериода <> &ПустаяДата
	|				ТОГДА СписаниеОСОС.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|			КОГДА &НачалоПериода = &ПустаяДата
	|					И &КонецПериода <> &ПустаяДата
	|				ТОГДА СписаниеОСОС.Ссылка.Дата <= &КонецПериода
	|			КОГДА &НачалоПериода <> &ПустаяДата
	|					И &КонецПериода = &ПустаяДата
	|				ТОГДА СписаниеОСОС.Ссылка.Дата >= &НачалоПериода
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|{ГДЕ
	|	СписаниеОСОС.Ссылка.*,
	|	СписаниеОСОС.ОсновноеСредство.*,
	|	СписаниеОСОС.Ссылка.Организация.*,
	|	СписаниеОСОС.Ссылка.Проведен}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА,
	|	ПередачаОСОС.ОсновноеСредство,
	|	ПередачаОСОС.Ссылка.Организация,";
	// Изменения кода. Начало: 31.10.2016  {{ 
	Если ЭтоПродажа Тогда
		Если ЕстьРеквизитСуммаВключаетНДС Тогда
			ПоляВыборкиСумма = 
			"	
			|	ВЫБОР КОГДА ПередачаОСОС.Ссылка.СуммаВключаетНДС ТОГДА ПередачаОСОС.Сумма ИНАЧЕ ПередачаОСОС.Сумма + ПередачаОСОС.СуммаНДС КОНЕЦ,
			|	ПередачаОСОС.СуммаНДС,";
		Иначе
			ПоляВыборкиСумма = 
			"	
			|	ПередачаОСОС.Сумма + ПередачаОСОС.СуммаНДС,
			|	ПередачаОСОС.СуммаНДС,";
		КонецЕсли; 
	Иначе
		ПоляВыборкиСумма = 
		"
		|	0,
		|	0,";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + ПоляВыборкиСумма;
	ТекстЗапроса = ТекстЗапроса +
	// Изменения кода. Конец 31.10.2016  }} 
	"
	|	ПередачаОСОС.Ссылка,
	|	1
	|ИЗ
	// Изменение кода. Начало. 13.05.2016{{
	|	Документ."+ИмяДокументаПередачаОС+".ОС КАК ПередачаОСОС
	// Изменение кода. Конец. 13.05.2016}}
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &НачалоПериода <> &ПустаяДата
	|					И &КонецПериода <> &ПустаяДата
	|				ТОГДА ПередачаОСОС.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|			КОГДА &НачалоПериода = &ПустаяДата
	|					И &КонецПериода <> &ПустаяДата
	|				ТОГДА ПередачаОСОС.Ссылка.Дата <= &КонецПериода
	|			КОГДА &НачалоПериода <> &ПустаяДата
	|					И &КонецПериода = &ПустаяДата
	|				ТОГДА ПередачаОСОС.Ссылка.Дата >= &НачалоПериода
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|{ГДЕ
	|	ПередачаОСОС.Ссылка.*,
	|	ПередачаОСОС.ОсновноеСредство.*,
	|	ПередачаОСОС.Ссылка.Организация.*,
	|	ПередачаОСОС.Ссылка.Проведен}";
	// Изменения кода. Начало: 28.10.2016  {{ 
	Если НЕ ПодготовкаКПередачеОСОбработан Тогда
		ТекстЗапроса = ТекстЗапроса +
		"
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИСТИНА,
		|	ПодготовкаКПередачеОСОС.ОсновноеСредство,
		|	ПодготовкаКПередачеОСОС.Ссылка.Организация,
		|	0,
		|	0,
		|	ПодготовкаКПередачеОСОС.Ссылка,
		|	3
		|ИЗ
		|	Документ.ПодготовкаКПередачеОС.ОС КАК ПодготовкаКПередачеОСОС
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &НачалоПериода <> &ПустаяДата
		|					И &КонецПериода <> &ПустаяДата
		|				ТОГДА ПодготовкаКПередачеОСОС.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|			КОГДА &НачалоПериода = &ПустаяДата
		|					И &КонецПериода <> &ПустаяДата
		|				ТОГДА ПодготовкаКПередачеОСОС.Ссылка.Дата <= &КонецПериода
		|			КОГДА &НачалоПериода <> &ПустаяДата
		|					И &КонецПериода = &ПустаяДата
		|				ТОГДА ПодготовкаКПередачеОСОС.Ссылка.Дата >= &НачалоПериода
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|{ГДЕ
		|	ПодготовкаКПередачеОСОС.Ссылка.*,
		|	ПодготовкаКПередачеОСОС.ОсновноеСредство.*,
		|	ПодготовкаКПередачеОСОС.Ссылка.Организация.*,
		|	ПодготовкаКПередачеОСОС.Ссылка.Проведен}";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса +
	// Изменения кода. Конец 28.10.2016  }} 
	"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыОС.Организация,
	|	ПараметрыОС.ОсновноеСредство,
	// ++ БоровинскаяОА (СофтЛаб) 15.12.18 Начало (#3128)
	//" + ?(ЭтоНеПеревод, "
	// -- БоровинскаяОА (СофтЛаб) 15.12.18 Конец (#3128)
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Местонахождение_ОС)
	|				ТОГДА ПараметрыОС.ЗначениеПараметра
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК Местонахождение,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.МОЛ_ОС)
	|				ТОГДА ПараметрыОС.ЗначениеПараметра
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК МОЛ,
	// ++ БоровинскаяОА (СофтЛаб) 15.12.18 Начало (#3128)
	//", "") + "
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС)
	|				ТОГДА ВЫРАЗИТЬ(ПараметрыОС.ЗначениеПараметра КАК Справочник.бит_му_КлассыОсновныхСредств)
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК КлассОС,
	// -- БоровинскаяОА (СофтЛаб) 15.12.18 Конец (#3128)
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС)
	|				ТОГДА ПараметрыОС.ЗначениеПараметра.ВидКласса
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК ВидКласса
	|ПОМЕСТИТЬ ПараметрыОС_МУ
	|ИЗ
	|	РегистрСведений.бит_му_ПараметрыОС.СрезПоследних(
	|			&КонецПериода,
	// ++ БоровинскаяОА (СофтЛаб) 15.12.18 Начало (#3128)
	//" + ?(ЭтоНеПеревод, "
	// -- БоровинскаяОА (СофтЛаб) 15.12.18 Конец (#3128)
	|			Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.МОЛ_ОС)
	|				ИЛИ Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Местонахождение_ОС)
	|				ИЛИ Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС) {(Организация), (ОсновноеСредство)}) КАК ПараметрыОС
	// ++ БоровинскаяОА (СофтЛаб) 15.12.18 Начало (#3128)
	//", "") + "
	// -- БоровинскаяОА (СофтЛаб) 15.12.18 Конец (#3128)
	|{ГДЕ
	|	ПараметрыОС.Организация.*,
	|	ПараметрыОС.ОсновноеСредство.*}
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыОС.ОсновноеСредство,
	|	ПараметрыОС.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументовБУ.Выполнять,
	|	ТаблицаДокументовБУ.ВНА,
	|	ТаблицаДокументовБУ.Организация,
	|	МестонахождениеОСБУ.МОЛ,
	|	МестонахождениеОСБУ.Местонахождение,
	|	" + ?(ЭтоПродажа, "ТаблицаДокументовБУ.Сумма"   , "0 КАК Сумма")    + ",
	|	" + ?(ЭтоПродажа, "ТаблицаДокументовБУ.СуммаНДС", "0 КАК СуммаНДС") + ",
	|	ТаблицаДокументовБУ.ДокументБУ,
	// ++ БоровинскаяОА (СофтЛаб) 15.12.18 Начало (#3128)
	|	ИСТИНА КАК ВыбылоПоДокументамБУ,
	|	КлассыОС_МУ.КлассОС,
	// -- БоровинскаяОА (СофтЛаб) 15.12.18 Конец (#3128)
	|	КлассыОС_МУ.ВидКласса,
	|	ТаблицаДокументовБУ.Приоритет КАК Приоритет
	|ПОМЕСТИТЬ ОбщаяТаблицаДокументов
	|ИЗ
	|	ТаблицаДокументовБУ КАК ТаблицаДокументовБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, {(Организация), (ОсновноеСредство)}) КАК МестонахождениеОСБУ
	|		ПО ТаблицаДокументовБУ.Организация = МестонахождениеОСБУ.Организация
	|			И ТаблицаДокументовБУ.ВНА = МестонахождениеОСБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыОС_МУ КАК КлассыОС_МУ
	|		ПО ТаблицаДокументовБУ.Организация = КлассыОС_МУ.Организация
	|			И ТаблицаДокументовБУ.ВНА = КлассыОС_МУ.ОсновноеСредство
	|{ГДЕ
	|	МестонахождениеОСБУ.МОЛ.*,
	|	МестонахождениеОСБУ.Местонахождение.*,
	|	КлассыОС_МУ.ВидКласса.*,
	// ++ БоровинскаяОА (СофтЛаб) 15.12.18 Начало (#3128)
	|	КлассыОС_МУ.КлассОС.*}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА,
	|	бит_Дополнительный_2Остатки.Субконто1 КАК ОсновноеСредство,
	|	бит_Дополнительный_2Остатки.Организация КАК Организация,
	|	ПараметрыОС_МУ.МОЛ,
	|	ПараметрыОС_МУ.Местонахождение,
	|	0,
	|	0,
	|	NULL,
	|	ЛОЖЬ,
	|	ПараметрыОС_МУ.КлассОС,
	|	ПараметрыОС_МУ.ВидКласса,
	|	4
	|ИЗ
	|	РегистрБухгалтерии.бит_Дополнительный_2.Остатки(&КонецПериода, Счет В ИЕРАРХИИ (&СчетаУчетаОСМСФО), &МассивСубконтоОСМСФО, ) КАК бит_Дополнительный_2Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыОС_МУ КАК ПараметрыОС_МУ
	|		ПО бит_Дополнительный_2Остатки.Организация = ПараметрыОС_МУ.Организация
	|			И бит_Дополнительный_2Остатки.Субконто1 = ПараметрыОС_МУ.ОсновноеСредство
	|ГДЕ
	|	НЕ бит_Дополнительный_2Остатки.Субконто1 В
	|				(ВЫБРАТЬ
	|					ТаблицаДокументовБУ.ВНА КАК ВНА
	|				ИЗ
	|					ТаблицаДокументовБУ КАК ТаблицаДокументовБУ)
	|{ГДЕ
	|	бит_Дополнительный_2Остатки.Субконто1.*,
	|	бит_Дополнительный_2Остатки.Организация.*,
	|	ПараметрыОС_МУ.МОЛ.*,
	|	ПараметрыОС_МУ.Местонахождение.*,
	|	ПараметрыОС_МУ.КлассОС.*,
	|	ПараметрыОС_МУ.ВидКласса.*}
	// -- БоровинскаяОА (СофтЛаб) 15.12.18 Конец (#3128)
	|" + ?(ЭтоНеПеревод, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА,
	|	ВыбытиеОСОС_МУ.ОсновноеСредство,
	|	ВыбытиеОСОС_МУ.Ссылка.Организация,
	|	ПараметрыОС_МУ.МОЛ,
	|	ПараметрыОС_МУ.Местонахождение,
	|	0,
	|	0,
	|	NULL,
	// ++ БоровинскаяОА (СофтЛаб) 15.12.18 Начало (#3128)
	|	ИСТИНА,
	|	ПараметрыОС_МУ.КлассОС,
	// -- БоровинскаяОА (СофтЛаб) 15.12.18 Конец (#3128)
	|	ПараметрыОС_МУ.ВидКласса,
	|	2
	|ИЗ
	|	Документ.бит_му_ВыбытиеОС.ОсновныеСредства КАК ВыбытиеОСОС_МУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыОС_МУ КАК ПараметрыОС_МУ
	|		ПО ВыбытиеОСОС_МУ.Ссылка.Организация = ПараметрыОС_МУ.Организация
	|			И ВыбытиеОСОС_МУ.ОсновноеСредство = ПараметрыОС_МУ.ОсновноеСредство
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &НачалоПериода <> &ПустаяДата
	|					И &КонецПериода <> &ПустаяДата
	|				ТОГДА ВыбытиеОСОС_МУ.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|			КОГДА &НачалоПериода = &ПустаяДата
	|					И &КонецПериода <> &ПустаяДата
	|				ТОГДА ВыбытиеОСОС_МУ.Ссылка.Дата <= &КонецПериода
	|			КОГДА &НачалоПериода <> &ПустаяДата
	|					И &КонецПериода = &ПустаяДата
	|				ТОГДА ВыбытиеОСОС_МУ.Ссылка.Дата >= &НачалоПериода
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВыбытиеОСОС_МУ.Ссылка.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_му_ВидыДвиженияВыбытия.ПереводВПредназначенныеДляПродажи)
	|{ГДЕ
	|	ВыбытиеОСОС_МУ.Ссылка.*,
	|	ВыбытиеОСОС_МУ.ОсновноеСредство.*,
	|	ВыбытиеОСОС_МУ.Ссылка.Организация.*,
	|	ВыбытиеОСОС_МУ.Ссылка.Проведен,
	|	ПараметрыОС_МУ.МОЛ.*,
	|	ПараметрыОС_МУ.Местонахождение.*,
	// ++ БоровинскаяОА (СофтЛаб) 15.12.18 Начало (#3128)
	|	ПараметрыОС_МУ.КлассОС.*,
	// -- БоровинскаяОА (СофтЛаб) 15.12.18 Конец (#3128)
	|	ПараметрыОС_МУ.ВидКласса.*}", "") + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщаяТаблицаДокументов.Выполнять,
	|	ОбщаяТаблицаДокументов.ВНА,
	|	ОбщаяТаблицаДокументов.Организация,
	|	ОбщаяТаблицаДокументов.МОЛ,
	|	ОбщаяТаблицаДокументов.Местонахождение,
	|	ОбщаяТаблицаДокументов.Сумма,
	|	ОбщаяТаблицаДокументов.СуммаНДС,
	|	ОбщаяТаблицаДокументов.ДокументБУ,
	// ++ БоровинскаяОА (СофтЛаб) 15.12.18 Начало (#3128)
	|	ОбщаяТаблицаДокументов.ВыбылоПоДокументамБУ,
	|	ОбщаяТаблицаДокументов.КлассОС,
	// -- БоровинскаяОА (СофтЛаб) 15.12.18 Конец (#3128)
	|	ОбщаяТаблицаДокументов.ВидКласса,
	|	ПервоначальныеСведенияОСБУ.ИнвентарныйНомер,
	// ++ БоровинскаяОА (СофтЛаб) 15.12.18 Начало (#3128)
	|	ЕСТЬNULL(бит_му_СостоянияОСПринятоКУчету.ДатаСостояния,&ПустаяДата) КАК ДатаПринятияКУчетуМСФО,
	// -- БоровинскаяОА (СофтЛаб) 15.12.18 Конец (#3128)
	|	ЕстьNULL(бит_му_СостоянияОС.ДатаСостояния,&ПустаяДата) КАК ДатаВыбытия
	|ИЗ
	|	ОбщаяТаблицаДокументов КАК ОбщаяТаблицаДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(, {(Организация), (ОсновноеСредство)}) КАК ПервоначальныеСведенияОСБУ
	|		ПО ОбщаяТаблицаДокументов.Организация = ПервоначальныеСведенияОСБУ.Организация
	|			И ОбщаяТаблицаДокументов.ВНА = ПервоначальныеСведенияОСБУ.ОсновноеСредство
	// ++ БоровинскаяОА (СофтЛаб) 15.12.18 Начало (#3128)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияОС КАК бит_му_СостоянияОСПринятоКУчету
	|		ПО ОбщаяТаблицаДокументов.Организация = бит_му_СостоянияОСПринятоКУчету.Организация
	|			И ОбщаяТаблицаДокументов.ВНА = бит_му_СостоянияОСПринятоКУчету.ОсновноеСредство
	|			И (бит_му_СостоянияОСПринятоКУчету.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_му_СостоянияОС.ПринятоКУчету))
	// -- БоровинскаяОА (СофтЛаб) 15.12.18 Конец (#3128)
	//Начало_бит_Магомедов_04.09.2012	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СобытияОС КАК бит_му_СобытияОС
	|		ПО ОбщаяТаблицаДокументов.Организация = бит_му_СобытияОС.Организация
	|			И ОбщаяТаблицаДокументов.ВНА = бит_му_СобытияОС.ОсновноеСредство
	|			И (бит_му_СобытияОС.Событие = ЗНАЧЕНИЕ(Перечисление.бит_му_СобытияОС.Выбытие))
	//Конец_бит_Магомедов_04.09.2012
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияОС КАК бит_му_СостоянияОС
	|		ПО ОбщаяТаблицаДокументов.Организация = бит_му_СостоянияОС.Организация
	|			И ОбщаяТаблицаДокументов.ВНА = бит_му_СостоянияОС.ОсновноеСредство
	|			И (бит_му_СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_му_СостоянияОС.СнятоСУчета))
	|
	|{
	|ГДЕ
	// ++ БоровинскаяОА (СофтЛаб) 15.12.18 Начало (#3128)
	|	ОбщаяТаблицаДокументов.ВыбылоПоДокументамБУ.*,
	|	НЕ ЕСТЬNULL(бит_му_СостоянияОСПринятоКУчету.ДатаСостояния,&ПустаяДата)= &ПустаяДата,
	|	бит_му_СостоянияОСПринятоКУчету.ДатаСостояния.*,
	// -- БоровинскаяОА (СофтЛаб) 15.12.18 Конец (#3128)
	|	ЕстьNULL(бит_му_СостоянияОС.ДатаСостояния,&ПустаяДата) = &ПустаяДата
	|	,бит_му_СобытияОС.Событие ЕСТЬ NULL}
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбщаяТаблицаДокументов.ВНА,
	|	ОбщаяТаблицаДокументов.Приоритет
	// |ИТОГИ ПО
	// |	ВНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДокументовБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПараметрыОС_МУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОбщаяТаблицаДокументов";
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаВыбытиеОС()

Функция СформироватьТекстЗапросаПереводОСВСоставИнвестиционнойСобственности()
	
	// ТекстЗапроса =
	// "ВЫБРАТЬ
	// |	ИСТИНА КАК Выполнять,
	// |	ОсновныеСредства.Ссылка КАК ВНА
	// |ИЗ
	// |	Справочник.ОсновныеСредства КАК ОсновныеСредства
	// |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияОС КАК бит_му_СостоянияОС
	// |		ПО ОсновныеСредства.Ссылка = бит_му_СостоянияОС.ОсновноеСредство
	// |ГДЕ
	// |	бит_му_СостоянияОС.Организация = &Организация
	// |	И бит_му_СостоянияОС.Состояние = &Состояние
	// |	И бит_му_СостоянияОС.ДатаСостояния <= &ДатаСостояния";
	
	// Адаптация для ERP. Начало. 18.03.2014{{
	ИмяСправочникаОсновныеСредства = бит_ОбщегоНазначения.ПолучитьИмяСправочникаОсновныеСредства();
	// Адаптация для ERP. Конец. 18.03.2014}}
		
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПараметрыОС.Организация,
	               |	ПараметрыОС.ОсновноеСредство,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Местонахождение_ОС)
	               |				ТОГДА ПараметрыОС.ЗначениеПараметра
	               |			ИНАЧЕ NULL
	               |		КОНЕЦ) КАК Местонахождение,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.МОЛ_ОС)
	               |				ТОГДА ПараметрыОС.ЗначениеПараметра
	               |			ИНАЧЕ NULL
	               |		КОНЕЦ) КАК МОЛ,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС)
	               |				ТОГДА ПараметрыОС.ЗначениеПараметра.ВидКласса
	               |			ИНАЧЕ NULL
	               |		КОНЕЦ) КАК ВидКласса,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС)
	               |				ТОГДА ПараметрыОС.ЗначениеПараметра
	               |			ИНАЧЕ NULL
	               |		КОНЕЦ) КАК Класс
	               |ПОМЕСТИТЬ ТаблицаПараметров
	               |ИЗ
	               |	РегистрСведений.бит_му_ПараметрыОС.СрезПоследних(&КонецПериода, {(ОсновноеСредство), (Организация)}) КАК ПараметрыОС
	               |{ГДЕ
	               |	ПараметрыОС.Организация.*,
	               |	ПараметрыОС.ОсновноеСредство.*}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПараметрыОС.ОсновноеСредство,
	               |	ПараметрыОС.Организация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТаблицаПараметров.Организация,
	               |	ТаблицаПараметров.Класс,
	               |	ПараметрыКлассов.МодельУчета,
	               |	ВЫБОР
	               |		КОГДА ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |				И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка)
	               |			ТОГДА 3
	               |		КОГДА ПараметрыКлассов.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |				И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка)
	               |			ТОГДА 2
	               |		КОГДА ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |				И ПараметрыКлассов.Класс <> ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка)
	               |			ТОГДА 1
	               |		КОГДА ПараметрыКлассов.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |				И ПараметрыКлассов.Класс <> ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка)
	               |			ТОГДА 0
	               |		ИНАЧЕ 4
	               |	КОНЕЦ КАК Приоритет
	               |ПОМЕСТИТЬ МоделиУчета
	               |ИЗ
	               |	ТаблицаПараметров КАК ТаблицаПараметров
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_ПараметрыКлассовВНА КАК ПараметрыКлассов
	               |		ПО (ТаблицаПараметров.Организация = ПараметрыКлассов.Организация
	               |					И ТаблицаПараметров.Класс = ПараметрыКлассов.Класс
	               |				ИЛИ ТаблицаПараметров.Организация = ПараметрыКлассов.Организация
	               |					И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка)
	               |				ИЛИ ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |					И ТаблицаПараметров.Класс = ПараметрыКлассов.Класс
	               |				ИЛИ ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |					И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	МоделиУчета.Организация,
	               |	МоделиУчета.Класс,
	               |	МИНИМУМ(МоделиУчета.Приоритет) КАК Приоритет
	               |ПОМЕСТИТЬ МодельУчетаПриоритет
	               |ИЗ
	               |	МоделиУчета КАК МоделиУчета
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МоделиУчета.Организация,
	               |	МоделиУчета.Класс
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МодельУчетаПриоритет.Организация,
	               |	МодельУчетаПриоритет.Класс,
	               |	МоделиУчета.МодельУчета
	               |ПОМЕСТИТЬ МоделиУчетаРезультат
	               |ИЗ
	               |	МодельУчетаПриоритет КАК МодельУчетаПриоритет
	               |		ЛЕВОЕ СОЕДИНЕНИЕ МоделиУчета КАК МоделиУчета
	               |		ПО МодельУчетаПриоритет.Организация = МоделиУчета.Организация
	               |			И МодельУчетаПриоритет.Класс = МоделиУчета.Класс
	               |			И МодельУчетаПриоритет.Приоритет = МоделиУчета.Приоритет
	               |ГДЕ
	               |	НЕ МоделиУчета.Организация ЕСТЬ NULL 
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаПараметров.Организация,
	               |	ТаблицаПараметров.ОсновноеСредство,
	               |	ТаблицаПараметров.Местонахождение,
	               |	ТаблицаПараметров.МОЛ,
	               |	ТаблицаПараметров.ВидКласса,
	               |	ТаблицаПараметров.Класс,
	               |	МоделиУчетаРезультат.МодельУчета
	               |ПОМЕСТИТЬ ТаблицаПараметровРезультат
	               |ИЗ
	               |	ТаблицаПараметров КАК ТаблицаПараметров
	               |		ЛЕВОЕ СОЕДИНЕНИЕ МоделиУчетаРезультат КАК МоделиУчетаРезультат
	               |		ПО ТаблицаПараметров.Организация = МоделиУчетаРезультат.Организация
	               |			И ТаблицаПараметров.Класс = МоделиУчетаРезультат.Класс
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ИСТИНА КАК Выполнять,
	               |	ОсновныеСредства.Ссылка КАК ВНА,
	               |	ТаблицаПараметровРезультат.Организация,
	               |	ТаблицаПараметровРезультат.Местонахождение,
	               |	ТаблицаПараметровРезультат.МОЛ,
	               |	ТаблицаПараметровРезультат.ВидКласса,
	               |	ТаблицаПараметровРезультат.Класс,
	               |	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер,
	               |	ЕСТЬNULL(СостоянияОС.ДатаСостояния, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПринятияКУчету,
	               |	ТаблицаПараметровРезультат.МодельУчета КАК МодельУчета
	               |ИЗ
				   // Адаптация для ERP. Начало. 18.03.2014{{
				   |	Справочник."+ИмяСправочникаОсновныеСредства+" КАК ОсновныеСредства
				   // Адаптация для ERP. Конец. 18.03.2014}}
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПараметровРезультат КАК ТаблицаПараметровРезультат
	               |		ПО ОсновныеСредства.Ссылка = ТаблицаПараметровРезультат.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, {(ОсновноеСредство)}) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	               |		ПО ОсновныеСредства.Ссылка = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияОС КАК СостоянияОС
	               |		ПО ОсновныеСредства.Ссылка = СостоянияОС.ОсновноеСредство
	               |			И (СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_му_СостоянияОС.ПринятоКУчету))
	               |ГДЕ
	               |	НЕ ОсновныеСредства.ЭтоГруппа
	               |	И ТаблицаПараметровРезультат.ВидКласса = ЗНАЧЕНИЕ(Перечисление.бит_му_ВидыКлассовОС.ОсновныеСредства)
	               |{ГДЕ
	               |	ОсновныеСредства.Ссылка.* КАК ОсновноеСредство,
	               |	ТаблицаПараметровРезультат.Местонахождение.*,
	               |	ТаблицаПараметровРезультат.МОЛ.*,
	               // |	ТаблицаПараметровРезультат.ВидКласса.*,
	               |	ТаблицаПараметровРезультат.Организация.*,
	               |	ТаблицаПараметровРезультат.МодельУчета.*}
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ТаблицаПараметров
	               |;
	               |                          
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ МоделиУчета
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ МодельУчетаПриоритет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ МоделиУчетаРезультат
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ТаблицаПараметровРезультат";

	
	Возврат ТекстЗапроса;
	
КонецФункции	

// Функция формирует текст запроса для подбора в режиме ПринятиеКУчетуНМА.
// 
// Возвращаемое значение:
//   ТекстЗапроса   - Строка
// 
Функция СформироватьТекстЗапросаПринятиеКУчетуНМА()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.НематериальныйАктив,
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетНачисленияАмортизации
	|ПОМЕСТИТЬ СчетаБухУчетаНМА
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(, {(Организация), (НематериальныйАктив)}) КАК СчетаБухгалтерскогоУчетаНМАСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИСТИНА КАК Выполнять,
	|	ХозрасчетныйОборотыДтКт.Регистратор КАК ДокументБУ,
	|	ХозрасчетныйОборотыДтКт.СчетДт,
	|	ХозрасчетныйОборотыДтКт.СчетКт,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК ВНА,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт2,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт3,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт2,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт3,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0) КАК ЧИСЛО(17, 4)) КАК Сумма,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ПервоначальныеСведенияНМАБУ.ПервоначальнаяСтоимость, 0) КАК ЧИСЛО(17, 4)) КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияНМАБУ.СпособНачисленияАмортизации,
	|	СостоянияНМАОрганизаций.Период КАК ДатаПринятияКУчету
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Запись, СчетДт = &СчетНМА, , СчетКт В ИЕРАРХИИ (&СчетВНА), , {(Организация)}) КАК ХозрасчетныйОборотыДтКт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(, {(Организация), (НематериальныйАктив)}) КАК ПервоначальныеСведенияНМАБУ
	|		ПО ХозрасчетныйОборотыДтКт.Организация = ПервоначальныеСведенияНМАБУ.Организация
	|			И ХозрасчетныйОборотыДтКт.СубконтоДт1 = ПервоначальныеСведенияНМАБУ.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних(, {(Организация), (НематериальныйАктив)}) КАК СостоянияНМАОрганизаций
	|		ПО ХозрасчетныйОборотыДтКт.СубконтоДт1 = СостоянияНМАОрганизаций.НематериальныйАктив
	|			И ХозрасчетныйОборотыДтКт.Организация = СостоянияНМАОрганизаций.Организация
	|			И (СостоянияНМАОрганизаций.Состояние = &СостояниеПринятоБУ)
	|{ГДЕ
	|	(ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы)).* КАК НематериальныйАктив,
	|	ХозрасчетныйОборотыДтКт.Регистратор.*}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(КурсыВалют.Период) КАК Период,
	|	Данные.ДатаПринятияКУчету
	|ПОМЕСТИТЬ ДатыКурсов
	|ИЗ
	|	Данные КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО Данные.ДатаПринятияКУчету >= КурсыВалют.Период
	|			И (КурсыВалют.Валюта = &ВалютаМСФО)
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.ДатаПринятияКУчету
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыКурсов.Период,
	|	ДатыКурсов.ДатаПринятияКУчету,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ Курсы
	|ИЗ
	|	ДатыКурсов КАК ДатыКурсов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ДатыКурсов.Период = КурсыВалют.Период
	|			И (КурсыВалют.Валюта = &ВалютаМСФО)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.Выполнять,
	|	Данные.ДокументБУ,
	|	Данные.СчетДт,
	|	Данные.СчетКт,
	|	Данные.ВНА,
	|	Данные.СубконтоДт1,
	|	Данные.СубконтоДт2,
	|	Данные.СубконтоДт3,
	|	Данные.СубконтоКт1,
	|	Данные.СубконтоКт2,
	|	Данные.СубконтоКт3,
	|	Данные.Сумма * (ЕСТЬNULL(Курсы.Кратность, 1) / ЕСТЬNULL(Курсы.Курс, 1)) КАК Сумма,
	|	Данные.ПервоначальнаяСтоимость * (ЕСТЬNULL(Курсы.Кратность, 1) / ЕСТЬNULL(Курсы.Курс, 1)) КАК ПервоначальнаяСтоимость,
	|	Данные.СпособНачисленияАмортизации,
	|	Данные.ДатаПринятияКУчету,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) * (ЕСТЬNULL(Курсы.Кратность, 1) / ЕСТЬNULL(Курсы.Курс, 1)) КАК СуммаНачисленнойАмортизации,
	|	бит_му_СостоянияНМА.ДатаСостояния
	|ИЗ
	|	Данные КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Курсы КАК Курсы
	|		ПО Данные.ДатаПринятияКУчету = Курсы.ДатаПринятияКУчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаБухУчетаНМА.СчетНачисленияАмортизации
	|					ИЗ
	|						СчетаБухУчетаНМА КАК СчетаБухУчетаНМА),
	|				,
	|				Субконто1 В
	|					(ВЫБРАТЬ
	|						Данные.ВНА
	|					ИЗ
	|						Данные КАК Данные) {(Организация)}) КАК ХозрасчетныйОстатки
	|		ПО Данные.ВНА = ХозрасчетныйОстатки.Субконто1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияНМА КАК бит_му_СостоянияНМА
	|		ПО Данные.ВНА = бит_му_СостоянияНМА.НематериальныйАктив
	|			И (бит_му_СостоянияНМА.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_му_СостоянияНМА.ПринятоКУчету))
	|ГДЕ
	|	бит_му_СостоянияНМА.ДатаСостояния ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Курсы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДатыКурсов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Данные
	|";
	
    Возврат ТекстЗапроса;
		
КонецФункции // СформироватьТекстЗапросаПринятиеКУчетуНМА()

// Функция формирует текст запроса для режимов ПереоценкаНМА, ОбесценениеНМА, 
// ВыработкаНМА, НачислениеАмортизациНМА.
// 
// Возвращаемое значение:
//   ТекстЗапроса - Строка.
// 
Функция СформироватьТекстЗапросаАмортизацияНМА()

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПараметрыНМА.Организация,
	|	ПараметрыНМА.НематериальныйАктив,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыНМА.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.НачислятьАмортизацию_НМА)
	|				ТОГДА ПараметрыНМА.ЗначениеПараметра
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК НачислятьАмортизацию,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыНМА.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.НачислятьАмортизациюСТекущегоПериода_НМА)
	|				ТОГДА ПараметрыНМА.ЗначениеПараметра
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК НачислятьАмортизациюСТекущегоПериода,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыНМА.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.МетодНачисленияАмортизации_НМА)
	|				ТОГДА ПараметрыНМА.ЗначениеПараметра
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МетодНачисленияАмортизации,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыНМА.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_НМА)
	|				ТОГДА ПараметрыНМА.ЗначениеПараметра
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК Класс
	|ПОМЕСТИТЬ ТаблицаПараметров
	|ИЗ
	|	РегистрСведений.бит_му_ПараметрыНМА.СрезПоследних(&КонецПериода, {(НематериальныйАктив), (Организация)}) КАК ПараметрыНМА
	|{ГДЕ
	|	ПараметрыНМА.Организация.*,
	|	ПараметрыНМА.НематериальныйАктив.*}
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыНМА.НематериальныйАктив,
	|	ПараметрыНМА.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаПараметров.Организация,
	|	ТаблицаПараметров.Класс,
	|	ПараметрыКлассов.МодельУчета,
	|	ВЫБОР
	|		КОГДА ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыНМА.ПустаяСсылка)
	|			ТОГДА 3
	|		КОГДА ПараметрыКлассов.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыНМА.ПустаяСсылка)
	|			ТОГДА 2
	|		КОГДА ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				И ПараметрыКлассов.Класс <> ЗНАЧЕНИЕ(Справочник.бит_му_КлассыНМА.ПустаяСсылка)
	|			ТОГДА 1
	|		КОГДА ПараметрыКлассов.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				И ПараметрыКлассов.Класс <> ЗНАЧЕНИЕ(Справочник.бит_му_КлассыНМА.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 4
	|	КОНЕЦ КАК Приоритет
	|ПОМЕСТИТЬ МоделиУчета
	|ИЗ
	|	ТаблицаПараметров КАК ТаблицаПараметров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_ПараметрыКлассовВНА КАК ПараметрыКлассов
	|		ПО (ТаблицаПараметров.Организация = ПараметрыКлассов.Организация
	|					И ТаблицаПараметров.Класс = ПараметрыКлассов.Класс
	|				ИЛИ ТаблицаПараметров.Организация = ПараметрыКлассов.Организация
	|					И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыНМА.ПустаяСсылка)
	|				ИЛИ ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					И ТаблицаПараметров.Класс = ПараметрыКлассов.Класс
	|				ИЛИ ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыНМА.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МоделиУчета.Организация,
	|	МоделиУчета.Класс,
	|	МИНИМУМ(МоделиУчета.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ МодельУчетаПриоритет
	|ИЗ
	|	МоделиУчета КАК МоделиУчета
	|
	|СГРУППИРОВАТЬ ПО
	|	МоделиУчета.Организация,
	|	МоделиУчета.Класс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МодельУчетаПриоритет.Организация,
	|	МодельУчетаПриоритет.Класс,
	|	МоделиУчета.МодельУчета
	|ПОМЕСТИТЬ МоделиУчетаРезультат
	|ИЗ
	|	МодельУчетаПриоритет КАК МодельУчетаПриоритет
	|		ЛЕВОЕ СОЕДИНЕНИЕ МоделиУчета КАК МоделиУчета
	|		ПО МодельУчетаПриоритет.Организация = МоделиУчета.Организация
	|			И МодельУчетаПриоритет.Класс = МоделиУчета.Класс
	|			И МодельУчетаПриоритет.Приоритет = МоделиУчета.Приоритет
	|ГДЕ
	|	(НЕ МоделиУчета.Организация ЕСТЬ NULL )
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПараметров.Организация,
	|	ТаблицаПараметров.НематериальныйАктив,
	|	ТаблицаПараметров.НачислятьАмортизацию,
	|	ТаблицаПараметров.НачислятьАмортизациюСТекущегоПериода,
	|	ТаблицаПараметров.МетодНачисленияАмортизации,
	|	ТаблицаПараметров.Класс,
	|	МоделиУчетаРезультат.МодельУчета
	|ПОМЕСТИТЬ ТаблицаПараметровРезультат
	|ИЗ
	|	ТаблицаПараметров КАК ТаблицаПараметров
	|		ЛЕВОЕ СОЕДИНЕНИЕ МоделиУчетаРезультат КАК МоделиУчетаРезультат
	|		ПО ТаблицаПараметров.Организация = МоделиУчетаРезультат.Организация
	|			И ТаблицаПараметров.Класс = МоделиУчетаРезультат.Класс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|   ИСТИНА КАК Выполнять,
	|	НематериальныеАктивы.Ссылка КАК ВНА,
	|	ТаблицаПараметровРезультат.Организация,
	|	ТаблицаПараметровРезультат.Класс,
	|	ТаблицаПараметровРезультат.МетодНачисленияАмортизации,
	|	ЕСТЬNULL(СостоянияНМА.ДатаСостояния, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПринятияКУчету,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаПараметровРезультат.НачислятьАмортизацию, ЛОЖЬ) = ИСТИНА
	|			ТОГДА ВЫБОР
	|					КОГДА КОНЕЦПЕРИОДА(ЕСТЬNULL(СостоянияНМА.ДатаСостояния, ДАТАВРЕМЯ(1, 1, 1)), МЕСЯЦ) = КОНЕЦПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|						ТОГДА ЕСТЬNULL(ТаблицаПараметровРезультат.НачислятьАмортизациюСТекущегоПериода, ЛОЖЬ)
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачислятьАмортизацию,
	|	ТаблицаПараметровРезультат.МодельУчета КАК МодельУчета
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПараметровРезультат КАК ТаблицаПараметровРезультат
	|		ПО НематериальныеАктивы.Ссылка = ТаблицаПараметровРезультат.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияНМА КАК СостоянияНМА
	|		ПО НематериальныеАктивы.Ссылка = СостоянияНМА.НематериальныйАктив
	|			И (СостоянияНМА.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_му_СостоянияНМА.ПринятоКУчету))
	|ГДЕ
	|	(НЕ НематериальныеАктивы.ЭтоГруппа)
	|{ГДЕ
	|	НематериальныеАктивы.Ссылка.* КАК НематериальныйАктив,
	|	ТаблицаПараметровРезультат.Организация.*,
	|	(ВЫБОР
	|			КОГДА ЕСТЬNULL(ТаблицаПараметровРезультат.НачислятьАмортизацию, ЛОЖЬ) = ИСТИНА
	|				ТОГДА ВЫБОР
	|						КОГДА КОНЕЦПЕРИОДА(ЕСТЬNULL(СостоянияНМА.ДатаСостояния, ДАТАВРЕМЯ(1, 1, 1)), МЕСЯЦ) = КОНЕЦПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|							ТОГДА ЕСТЬNULL(ТаблицаПараметровРезультат.НачислятьАмортизациюСТекущегоПериода, ЛОЖЬ)
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ).* КАК НачислятьАмортизацию,
	|	ТаблицаПараметровРезультат.МетодНачисленияАмортизации,
	|	ТаблицаПараметровРезультат.МодельУчета.*}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПараметров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МоделиУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МодельУчетаПриоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МоделиУчетаРезультат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПараметровРезультат";
	
	Возврат ТекстЗапроса;
		
КонецФункции // СформироватьТекстЗапросаАмортизацияНМА()

// Функция формирует текст запроса для подбора в режиме ВыбытиеНМА.
// 
// Параметры:
//  Нет.
// 
// Возвращаемое значение:
//  ТекстЗапроса - Строка.
// 
Функция СформироватьТекстЗапросаВыбытиеНМА(СтруктураПараметров)
	
	ИмяДокументаПередачаНМА = бит_ОбщегоНазначения.ПолучитьИмяДокументаПередачаНМА();
	
	ВидДвижения = Неопределено;
	СтруктураПараметров.Свойство("ВидДвижения", ВидДвижения);
	
	ЭтоНеПеревод = (Не ВидДвижения = Перечисления.бит_му_ВидыОперацийВыбытиеНМА.ПереводВПредназначенныеДляПродажи);
	ЭтоПродажа	 = (   ВидДвижения = Перечисления.бит_му_ВидыОперацийВыбытиеНМА.Продажа);
	
	СтавитьСуммуПродажи = ЕстьСуммаДокументаПередачи(ИмяДокументаПередачаНМА) И ЭтоПродажа;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИСТИНА КАК Выполнять,
	|	СписаниеНМА.НематериальныйАктив КАК ВНА,
	|	СписаниеНМА.Организация,
	|	0 КАК Сумма,
	|	0 КАК СуммаНДС,
	|	СписаниеНМА.Ссылка КАК ДокументБУ,
	|	1.5 КАК Приоритет
	|ПОМЕСТИТЬ ТаблицаДокументовБУ
	|ИЗ
	|	Документ.СписаниеНМА КАК СписаниеНМА
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &НачалоПериода <> &ПустаяДата
	|					И &КонецПериода <> &ПустаяДата
	|				ТОГДА СписаниеНМА.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|			КОГДА &НачалоПериода = &ПустаяДата
	|					И &КонецПериода <> &ПустаяДата
	|				ТОГДА СписаниеНМА.Дата <= &КонецПериода
	|			КОГДА &НачалоПериода <> &ПустаяДата
	|					И &КонецПериода = &ПустаяДата
	|				ТОГДА СписаниеНМА.Дата >= &НачалоПериода
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|{ГДЕ
	|	СписаниеНМА.Ссылка.*,
	|	СписаниеНМА.НематериальныйАктив.*,
	|	СписаниеНМА.Организация.*,
	|	СписаниеНМА.Проведен}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА,
	|	ПередачаНМА.НематериальныйАктив,
	|	ПередачаНМА.Организация,
	|	" + ?(СтавитьСуммуПродажи, "ПередачаНМА.Сумма"   , "0") + ",
	|	" + ?(СтавитьСуммуПродажи, "ПередачаНМА.СуммаНДС", "0") + ",
	|	ПередачаНМА.Ссылка,
	|	1
	|ИЗ
	// Изменение кода. Начало. 17.05.2016{{
	|	Документ."+ИмяДокументаПередачаНМА+" КАК ПередачаНМА
	// Изменение кода. Конец. 17.05.2016}}
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &НачалоПериода <> &ПустаяДата
	|					И &КонецПериода <> &ПустаяДата
	|				ТОГДА ПередачаНМА.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|			КОГДА &НачалоПериода = &ПустаяДата
	|					И &КонецПериода <> &ПустаяДата
	|				ТОГДА ПередачаНМА.Дата <= &КонецПериода
	|			КОГДА &НачалоПериода <> &ПустаяДата
	|					И &КонецПериода = &ПустаяДата
	|				ТОГДА ПередачаНМА.Дата >= &НачалоПериода
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|{ГДЕ
	|	ПередачаНМА.Ссылка.*,
	|	ПередачаНМА.НематериальныйАктив.*,
	|	ПередачаНМА.Организация.*,
	|	ПередачаНМА.Проведен}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументовБУ.Выполнять,
	|	ТаблицаДокументовБУ.ВНА,
	|	ТаблицаДокументовБУ.Организация,
	|	" + ?(ЭтоПродажа, "ТаблицаДокументовБУ.Сумма"   , "0 КАК Сумма")    + ",
	|	" + ?(ЭтоПродажа, "ТаблицаДокументовБУ.СуммаНДС", "0 КАК СуммаНДС") + ",
	|	ТаблицаДокументовБУ.ДокументБУ,
	|	ТаблицаДокументовБУ.Приоритет КАК Приоритет
	|ПОМЕСТИТЬ ОбщаяТаблицаДокументов
	|ИЗ
	|	ТаблицаДокументовБУ КАК ТаблицаДокументовБУ" + ?(ЭтоНеПеревод, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА,
	|	ВыбытиеНМА_НМА_МУ.НематериальныйАктив,
	|	ВыбытиеНМА_НМА_МУ.Ссылка.Организация,
	|	0,
	|	0,
	|	NULL,
	|	2
	|ИЗ
	|	Документ.бит_му_ВыбытиеНМА.НематериальныеАктивы КАК ВыбытиеНМА_НМА_МУ
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &НачалоПериода <> &ПустаяДата
	|					И &КонецПериода <> &ПустаяДата
	|				ТОГДА ВыбытиеНМА_НМА_МУ.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|			КОГДА &НачалоПериода = &ПустаяДата
	|					И &КонецПериода <> &ПустаяДата
	|				ТОГДА ВыбытиеНМА_НМА_МУ.Ссылка.Дата <= &КонецПериода
	|			КОГДА &НачалоПериода <> &ПустаяДата
	|					И &КонецПериода = &ПустаяДата
	|				ТОГДА ВыбытиеНМА_НМА_МУ.Ссылка.Дата >= &НачалоПериода
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВыбытиеНМА_НМА_МУ.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бит_му_ВидыОперацийВыбытиеНМА.ПереводВПредназначенныеДляПродажи)
	|{ГДЕ
	|	ВыбытиеНМА_НМА_МУ.Ссылка.*,
	|	ВыбытиеНМА_НМА_МУ.НематериальныйАктив.*,
	|	ВыбытиеНМА_НМА_МУ.Ссылка.Организация.*,
	|	ВыбытиеНМА_НМА_МУ.Ссылка.Проведен}", "") + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщаяТаблицаДокументов.Выполнять,
	|	ОбщаяТаблицаДокументов.ВНА,
	|	ОбщаяТаблицаДокументов.Организация,
	|	ОбщаяТаблицаДокументов.Сумма,
	|	ОбщаяТаблицаДокументов.СуммаНДС,
	|	ОбщаяТаблицаДокументов.ДокументБУ,
	|	ЕстьNULL(бит_му_СостоянияНМА.ДатаСостояния,&ПустаяДата) КАК ДатаВыбытия
	|ИЗ
	|	ОбщаяТаблицаДокументов КАК ОбщаяТаблицаДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияНМА КАК бит_му_СостоянияНМА
	|		ПО ОбщаяТаблицаДокументов.Организация = бит_му_СостоянияНМА.Организация
	|			И ОбщаяТаблицаДокументов.ВНА = бит_му_СостоянияНМА.НематериальныйАктив
	|			И (бит_му_СостоянияНМА.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_му_СостоянияНМА.СнятоСУчета))
	|
	|ГДЕ
	|	ЕстьNULL(бит_му_СостоянияНМА.ДатаСостояния,&ПустаяДата) = &ПустаяДата
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбщаяТаблицаДокументов.ВНА,
	|	ОбщаяТаблицаДокументов.Приоритет
	// |ИТОГИ ПО
	// |	ВНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДокументовБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОбщаяТаблицаДокументов";
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаВыбытиеНМА()

Функция ЕстьСуммаДокументаПередачи(ИмяДокумента)

    Возврат Метаданные.Документы[ИмяДокумента].Реквизиты.Найти("Сумма") <> Неопределено;	

КонецФункции // ЕстьСуммаДокументаПередачи()

#КонецОбласти

#КонецЕсли
