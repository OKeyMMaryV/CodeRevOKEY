
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	
	МетаданныеОбъекта = Метаданные.Обработки.бит_фн_ОбработкаЗаписейРегистрацииОповещений;
	
	// Вызов механизма защиты
	
	
	Если фОтказ Тогда
		Возврат;
	КонецЕсли;
	
	// Заполним вид операции
	Если Параметры.Свойство("ВидОперации") Тогда
	
		Объект.ВидОперации = Параметры.ВидОперации;
		
	КонецЕсли; 	
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидОперации) Тогда
	
		Объект.ВидОперации = Перечисления.бит_фн_ВидыОперацийОбработкиРегистрацииОповещений.СоздатьОповещения;
	
	КонецЕсли; 
	
	// Инициализируем настройки компоновщика
	АдресСхемыКомпоновкиДанных = Обработки.бит_фн_ОбработкаЗаписейРегистрацииОповещений.ИнициализироватьКомпоновщик(Объект.Компоновщик,УникальныйИдентификатор);
	Обработки.бит_фн_ОбработкаЗаписейРегистрацииОповещений.УстановитьОтборыКомпоновщика(Объект.Компоновщик,Объект.ВидОперации);		
	
	Элементы.КомпоновщикПользовательскиеНастройки.РежимОтображения = РежимОтображенияНастроекКомпоновкиДанных.БыстрыйДоступ;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если фОтказ Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	ИзменениеВидаОперации();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	
	// Проверим заполнение обязательных реквизитов.
	флНетОшибок = ПроверитьЗаполнение();
	
	Если флНетОшибок Тогда
		
		// Выполним требуемые действия
		ОбработатьЗаписиРегистраОповещений();
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.бит_фн_РегистрацияСобытийОповещений"));

	КонецЕсли; 	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура выполняет действия с записями регистра сведений бит_фн_РегистрацияСобытийОповещений.
// 
// Параметры:
//  Компоновщие                 - КомпоновщикНастроекСхемыКомпоновкиДанных.
//  АдресСхемыКомпоновкиДанных  - Строка.
//  ВидОперации                 - ПеречислениеСсылка.бит_фн_ОбработкаЗаписейРегистрацииОповещений.
// 
&НаСервере
Процедура ОбработатьЗаписиРегистраОповещений()
	
	Результат = Обработки.бит_фн_ОбработкаЗаписейРегистрацииОповещений.ВыполнитьЗапросПоНастройке(Объект.Компоновщик
	                                                                                              ,АдресСхемыКомпоновкиДанных
																								  ,Объект.ВидОперации);
																							   
	Если Объект.ВидОперации = Перечисления.бит_фн_ВидыОперацийОбработкиРегистрацииОповещений.СоздатьОповещения Тогда
		
		Обработки.бит_фн_ОбработкаЗаписейРегистрацииОповещений.ОбработатьСобытияОповещений(Результат, "Все", Истина, Истина);
		
	ИначеЕсли Объект.ВидОперации = Перечисления.бит_фн_ВидыОперацийОбработкиРегистрацииОповещений.УдалитьОбработанныеЗаписи Тогда	
		
		Обработки.бит_фн_ОбработкаЗаписейРегистрацииОповещений.УдалитьОбработанныеЗаписи(Результат,"Все");		
		
	КонецЕсли; 																						   
	
КонецПроцедуры // ОбработатьЗаписиРегистраОповещений()

// Процедура обрабатывает изменение вида операции.
// 
&НаСервере
Процедура ИзменениеВидаОперации()

	Обработки.бит_фн_ОбработкаЗаписейРегистрацииОповещений.УстановитьОтборыКомпоновщика(Объект.Компоновщик,Объект.ВидОперации);	
	
КонецПроцедуры // ИзменениеВидаОперации()

#КонецОбласти
