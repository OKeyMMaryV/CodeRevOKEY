
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СохранятьДанныеОСозданныхДокументах = Параметры.СохранятьДанныеОСозданныхДокументах;
    СохранятьТаблицуЗагрузки            = Параметры.СохранятьТаблицуЗагрузки;
    Расширение                          = Параметры.Расширение;
    НастройкаИмени                      = Параметры.НастройкаИмени;
    
    // Список выбора реквизита документа "Форма ввода бюджета"
    СписокВыбораРеквизита.Добавить("НомерДокумента"   , НСтр("ru = 'Номер документа'"));
    Для каждого РекФвб Из Метаданные.Документы.бит_ФормаВводаБюджета.Реквизиты Цикл
        Если РекФвб.Тип = Новый ОписаниеТипов("Булево") 
            ИЛИ РекФвб.Тип = Новый ОписаниеТипов("ХранилищеЗначения")
            ИЛИ Строка(РекФвб.Тип) = "Число"
            ИЛИ Строка(РекФвб.Тип) = "Дата"
            ИЛИ РекФвб.Имя = "Удалить_ТекстЗапроса"
            ИЛИ РекФвб.Имя = "РежимЗависимыхОборотов"
            ИЛИ РекФвб.Имя = "РежимФормированияДвижений"
            ИЛИ РекФвб.Имя = "ПараметрНорм"
            ИЛИ РекФвб.Имя = "ЕдиницаИзмеренияСумм"
            ИЛИ РекФвб.Имя = "Комментарий" 
            ИЛИ Найти(РекФвб.Имя, "Аналитика") <> 0 Тогда
            Продолжить;
        КонецЕсли;
        СписокВыбораРеквизита.Добавить(РекФвб.Имя, РекФвб.Синоним);   
    КонецЦикла;
    
    НастройкиИзмерений = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("бит_НастройкиДополнительныхИзмерений");
    Для каждого ЭлСтр Из НастройкиИзмерений Цикл
        СтруктураИзм = ЭлСтр.Значение;
        СписокВыбораРеквизита.Добавить(ЭлСтр.Ключ, СтруктураИзм.Синоним);
    КонецЦикла;
	
	УстановитьУсловноеОфрмление();
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиКомандФормы
         
&НаКлиенте
Процедура ОК(Команда)
	
	Результат = Новый Структура;
    Результат.Вставить("СохранятьДанныеОСозданныхДокументах", СохранятьДанныеОСозданныхДокументах);
    Результат.Вставить("СохранятьТаблицуЗагрузки"           , СохранятьТаблицуЗагрузки);
    Результат.Вставить("Расширение"                         , Расширение);
    Результат.Вставить("НастройкаИмени"                     , НастройкаИмени);
	
	Закрыть(Результат);
	
КонецПроцедуры // ОК()

&НаКлиенте
Процедура ДобавитьЧастьИмени(Команда)
    
    ОповещениеВС = Новый ОписаниеОповещения("ПоказатьВыборИзСпискаЧастиИмениЗавершение", ЭтаФорма);
	ПоказатьВыборИзСписка(ОповещениеВС, СписокВыбораРеквизита);
	    
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПроизвольныйТекст(Команда)
    
    ОповещениеВЗ = Новый ОписаниеОповещения("ПоказатьВводПроизвольногоТекстаЗавершение", ЭтаФорма);
	ПоказатьВводЗначения(ОповещениеВЗ, "Текст", НСтр("ru = 'Ввод произвольного текста'"), 
		Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(20)));
	    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте 
Процедура ПоказатьВыборИзСпискаЧастиИмениЗавершение(РезультатВыбора, ДопПараметры) Экспорт
    
    Если РезультатВыбора <> Неопределено Тогда
        
        НастройкаИмени.Добавить(РезультатВыбора.Значение, РезультатВыбора.Представление, Ложь);
                       
    КонецЕсли;

КонецПроцедуры

&НаКлиенте 
Процедура ПоказатьВводПроизвольногоТекстаЗавершение(РезультатТекст, ДопПараметры) Экспорт
    
    Если РезультатТекст <> Неопределено Тогда
        
        НастройкаИмени.Добавить("ПроизвольныйТекст", РезультатТекст, Истина);
                       
    КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОфрмление()
	
	// НастройкаИмениЗначение
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "НастройкаИмениЗначение");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
	"НастройкаИмени.Пометка", ВидСравненияКомпоновкиДанных.Равно, Истина);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветГиперссылки);
	
КонецПроцедуры
 
#КонецОбласти
