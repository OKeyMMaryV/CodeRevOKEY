
#Область ОбработчикиСобытийФормы

// Процедура - обработчик события "ПриСозданииНаСервере" формы.
// 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	
	МетаданныеОбъекта = Метаданные.Обработки.бит_ОбработкаЗаписейРегистраОчередьТрансляции;
	
	// Вызов механизма защиты
	
	
	Если фОтказ Тогда
		Возврат;
	КонецЕсли;
	
	// Заполним вид операции
	Если Параметры.Свойство("ВидОперации") Тогда
	
		Объект.ВидОперации = Параметры.ВидОперации;
		
	КонецЕсли; 	
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидОперации) Тогда
	
		Объект.ВидОперации = Перечисления.бит_ВидыОперацийОбработкиОчередиТрансляции.УдалитьОбработанныеЗаписи;
	
	КонецЕсли; 
	
	ВидОперацииИзменитьСтатус = Перечисления.бит_ВидыОперацийОбработкиОчередиТрансляции.ИзменитьСтатус;
	
	// Инициализируем настройки компоновщика
	АдресСхемыКомпоновкиДанных = Обработки.бит_ОбработкаЗаписейРегистраОчередьТрансляции.ИнициализироватьКомпоновщик(Объект.Компоновщик,УникальныйИдентификатор);
	Обработки.бит_ОбработкаЗаписейРегистраОчередьТрансляции.УстановитьОтборыКомпоновщика(Объект.Компоновщик,Объект.ВидОперации);		
	
	Элементы.КомпоновщикПользовательскиеНастройки.РежимОтображения = РежимОтображенияНастроекКомпоновкиДанных.БыстрыйДоступ;	
	
	УстановитьВидимость();
	
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы.
// 
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если фОтказ Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события "ПриИзменении" поля ввода "ВидОперации".
// 
&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	ИзменениеВидаОперации();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура - обработчик команды формы "ВыполнитьДействие".
// 
&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	
	// Проверим заполнение обязательных реквизитов.
	флНетОшибок = ПроверитьЗаполнение();
	
	Если Объект.ВидОперации = ВидОперацииИзменитьСтатус И НЕ ЗначениеЗаполнено(Объект.Статус) Тогда
	
		ТекстСообщения = НСтр("ru = 'Поле ""%1%"" не заполнено!'");
		ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения,НСтр("ru = 'Статус'"));
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,Объект,"Объект.Статус");
		флНетОшибок = Ложь;
		
	КонецЕсли; 
	
	
	Если флНетОшибок Тогда
		
		// Выполним требуемые действия
		ОбработатьЗаписиРегистраОчередьТрансляции();
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.бит_ОчередьТрансляции"));

	КонецЕсли; 	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура выполняет действия с записями регистра сведений бит_ОчередьТрансляции.
// 
// 
&НаСервере
Процедура ОбработатьЗаписиРегистраОчередьТрансляции()
	
	Результат = Обработки.бит_ОбработкаЗаписейРегистраОчередьТрансляции.ВыполнитьЗапросПоНастройке(Объект.Компоновщик
	                                                                                              ,АдресСхемыКомпоновкиДанных);
																							   
	Если Объект.ВидОперации = Перечисления.бит_ВидыОперацийОбработкиОчередиТрансляции.УдалитьОбработанныеЗаписи Тогда
		
		Обработки.бит_ОбработкаЗаписейРегистраОчередьТрансляции.УдалитьОбработанныеЗаписи(Результат,"Все");
		
	ИначеЕсли Объект.ВидОперации = Перечисления.бит_ВидыОперацийОбработкиОчередиТрансляции.ИзменитьСтатус Тогда	
		
		Обработки.бит_ОбработкаЗаписейРегистраОчередьТрансляции.ИзменитьСтатусОповещений(Результат,Объект.Статус,"Все");		
		
	КонецЕсли; 																						   
	
КонецПроцедуры // ОбработатьЗаписиРегистраОповещений()

// Процедура обрабатывает изменение вида операции.
// 
&НаСервере
Процедура ИзменениеВидаОперации()

	Обработки.бит_ОбработкаЗаписейРегистраОчередьТрансляции.УстановитьОтборыКомпоновщика(Объект.Компоновщик,Объект.ВидОперации);	
	
	УстановитьВидимость();
	
КонецПроцедуры // ИзменениеВидаОперации()

// Процедура устанавливает видимость/доступность элементов формы.
// 
&НаСервере
Процедура УстановитьВидимость()

	ЭтоИзменениеСтатуса = ?(Объект.ВидОперации = Перечисления.бит_ВидыОперацийОбработкиОчередиТрансляции.ИзменитьСтатус,Истина,Ложь);
	
	Элементы.Статус.Видимость = ЭтоИзменениеСтатуса;

КонецПроцедуры // УстановитьВидимость()

#КонецОбласти

