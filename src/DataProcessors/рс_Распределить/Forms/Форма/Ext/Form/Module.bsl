
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПараметрРаспределения = "12_Месяцев";
	КомпенсироватьПогрешностьОкругления = Истина;
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры.ЗначенияЗаполнения);
	
	Если Параметры.Свойство("КомпенсироватьПогрешностьОкругления") Тогда 
		КомпенсироватьПогрешностьОкругления = Параметры.КомпенсироватьПогрешностьОкругления;
	КонецЕсли;
	
	АдресТЗ = Параметры.АдресТЗ;
	
	ТЗ = ПолучитьИзВременногоХранилища(АдресТЗ);
	
	ДобавляемыеРеквизиты = Новый Массив;
	Для Каждого КолонкаТЗ ИЗ ТЗ.Колонки Цикл
		РеквизитФормы = Новый РеквизитФормы(КолонкаТЗ.Имя, Новый ОписаниеТипов(КолонкаТЗ.ТипЗначения), "ТабличноеПолеРезультат");
		ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
	КонецЦикла;
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ТекКолонка = Элементы.Добавить("Выполнять", Тип("ПолеФормы"), Элементы.ТабличноеПолеРезультат);
	ТекКолонка.Вид = ВидПоляФормы.ПолеФлажка;
	ТекКолонка.ПутьКДанным = "ТабличноеПолеРезультат.Выполнять";
	Для Каждого КолонкаТЗ ИЗ ТЗ.Колонки Цикл
		Если КолонкаТЗ.Имя = "Выполнять" Тогда Продолжить; КонецЕсли;
		ТекКолонка = Элементы.Добавить(КолонкаТЗ.Имя, Тип("ПолеФормы"), Элементы.ТабличноеПолеРезультат);
		ТекКолонка.ПутьКДанным = "ТабличноеПолеРезультат."+КолонкаТЗ.Имя;
		ТекКолонка.ТолькоПросмотр = Истина;
		//устанавливаем видимость
		Если ТекКолонка.Имя ="БанковскийСчет"
			ИЛИ ТекКолонка.Имя ="ИД"
			ИЛИ ТекКолонка.Имя ="Измерение"
			ИЛИ ТекКолонка.Имя ="Номенклатура"
			ИЛИ ТекКолонка.Имя ="НоменклатурнаяГруппа"
			ИЛИ ТекКолонка.Имя ="бит_БК_УсловияОплаты"
			ИЛИ ТекКолонка.Имя ="бит_БК_ФормаОплаты"
			ИЛИ ТекКолонка.Имя ="бит_БК_ЦенаБезНДС"
			ИЛИ ТекКолонка.Имя ="бит_БК_ЦенаСНДС"
			ИЛИ ТекКолонка.Имя ="бит_БК_НуженДоговор" Тогда			
			ТекКолонка.Видимость = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ТабличноеПолеРезультат.Загрузить(ТЗ);
	
	Если ТипЗнч(Объект.СтруктураНаименованийКолонок) = Тип ("Структура") Тогда
		Для каждого ТекКолонка Из  Элементы.ТабличноеПолеРезультат.ПодчиненныеЭлементы Цикл
			ТекКолонка_Имя = СтрЗаменить(ТекКолонка.Имя, "ТабличноеПолеРезультат", "ГрафикНачислений");
			Если Объект.СтруктураНаименованийКолонок.Свойство(ТекКолонка_Имя) Тогда
				ТекКолонка.Заголовок = Объект.СтруктураНаименованийКолонок[ТекКолонка_Имя];
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеДействияФормыОК(Команда)
	АдресРезультат = Неопределено;
	Если ТабличноеПолеРезультат.НайтиСтроки(Новый Структура("Выполнять", Истина)).Количество() <> 0 Тогда
		АдресРезультат = Распределить();
	КонецЕсли;
	Закрыть(АдресРезультат);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВсеНажатие();
КонецПроцедуры

&НаКлиенте
Процедура ПолеВвода1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если НЕ ПараметрРаспределения = "Месяцев" тогда
		ПараметрРаспределения = "Месяцев"; 
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПолеВвода1ПриИзменении(Элемент)
	Если НЕ ПараметрРаспределения = "Месяцев" тогда
		ПараметрРаспределения = "Месяцев"; 
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПолеВвода1АвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	Если НЕ ПараметрРаспределения = "Месяцев" тогда
		ПараметрРаспределения = "Месяцев"; 
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПолеВвода1ОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	Если НЕ ПараметрРаспределения = "Месяцев" тогда
		ПараметрРаспределения = "Месяцев"; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолеВвода2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если НЕ ПараметрРаспределения = "Сдвиг" тогда
		ПараметрРаспределения = "Сдвиг"; 
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПолеВвода2ПриИзменении(Элемент)
	Если НЕ ПараметрРаспределения = "Сдвиг" тогда
		ПараметрРаспределения = "Сдвиг"; 
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПолеВвода2АвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	Если НЕ ПараметрРаспределения = "Сдвиг" тогда
		ПараметрРаспределения = "Сдвиг"; 
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПолеВвода2ОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	Если НЕ ПараметрРаспределения = "Сдвиг" тогда
		ПараметрРаспределения = "Сдвиг"; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВсеНажатие()
	Для Каждого  ТекСтрока Из ТабличноеПолеРезультат Цикл
		ТекСтрока.Выполнять = Истина;	
		// Rarus-spb byse {
		Попытка
			Если ЗначениеЗаполнено(ТекСтрока.ДокументПланирования) Тогда
				ТекСтрока.Выполнять = Ложь;
			КонецЕсли;	
		Исключение
		КонецПопытки;
		// Rarus-spb byse }
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеНажатие()
	Для Каждого  ТекСтрока Из ТабличноеПолеРезультат Цикл
		ТекСтрока.Выполнять = Ложь;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТабличноеПолеРезультатПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ТекСтрока = Элементы.ТабличноеПолеРезультат.ТекущиеДанные;
	Попытка
		Если ЗначениеЗаполнено(ТекСтрока.ДокументПланирования) Тогда
			ТекСтрока.Выполнять = Ложь;
		КонецЕсли;	
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция Распределить()
	Если ПараметрРаспределения = "12_Месяцев" тогда
		МесяцевРаспределения = 12;
		МесяцевСдвига = 0;
		Знак = 1;
	ИначеЕсли ПараметрРаспределения = "Месяцев" Тогда
		Если КоличествоМесяцев<0 Тогда 
			Знак = -1;
		иначе
			Знак = 1;
		КонецЕсли;		
		МесяцевРаспределения = КоличествоМесяцев*Знак;
		МесяцевСдвига = 0;				
	ИначеЕсли ПараметрРаспределения = "Сдвиг" Тогда
		Если Сдвиг < 0 Тогда 
			Знак = -1;
		иначе
			Знак = 1;
		КонецЕсли;		
		МесяцевРаспределения = 1;
		МесяцевСдвига = Сдвиг*Знак;
	КонецЕсли;
	
	ВозвращаемоеЗначение = ТабличноеПолеРезультат.Выгрузить().СкопироватьКолонки();
	ВозвращаемоеЗначение.Колонки.Добавить("РаспределеннаяСумма",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 2)));
	
	//ОК Калинин М. 270513  Сохраним в экспортной переменной выбранные (распределяемые) строки
	//колонка с сылками на строки в целевой таблице, заполняется в Объект.бит_БК_ЗагрузитьРезультатыРаспределить:
	ВозвращаемоеЗначение.Колонки.Добавить("СтрокаПолучаемойТаблицы");  	
	//таблица соответсвий исходных строк и полученых из них строк с разбитыми суммами:
	РаспределяемаяТаблица= ТабличноеПолеРезультат.Выгрузить().СкопироватьКолонки();
	РаспределяемаяТаблица.Колонки.Добавить("ПолученныеСтроки");
	//ОК Калинин М.
	
	Для Каждого ТекСтрока Из ТабличноеПолеРезультат Цикл
		Сумма = ТекСтрока[Объект.ИмяКолонкиСуммы];
		РаспределеннаяСумма = 0;
		
		// Rarus-spb byse {
		Попытка
			Если ЗначениеЗаполнено(ТекСтрока.ДокументПланирования) Тогда
				ТекСтрока.Выполнять = Ложь;
			КонецЕсли;	
		Исключение
		КонецПопытки;
		// Rarus-spb byse }
		
		Если НЕ ТекСтрока.Выполнять Тогда
			НовСтрока = ВозвращаемоеЗначение.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
			НовСтрока.РаспределеннаяСумма = Сумма;
			РаспределеннаяСумма = РаспределеннаяСумма + НовСтрока.РаспределеннаяСумма;
		иначе
			//ОК Калинин М. 270513 //
			РаспределяемаяТаблицаНовСтр=РаспределяемаяТаблица.Добавить();
			ЗаполнитьЗначенияСвойств(РаспределяемаяТаблицаНовСтр,ТекСтрока);
			РаспределяемаяТаблицаНовСтр.ПолученныеСтроки=Новый Массив;
			//ОК Калинин М. 
			СуммаКРаспределению = Сумма/МесяцевРаспределения;
			Для сч = 0 по МесяцевРаспределения-1 Цикл
				НовСтрока = ВозвращаемоеЗначение.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
				
				НовСтрока.РаспределеннаяСумма = Окр(СуммаКРаспределению,2);
				РаспределеннаяСумма = РаспределеннаяСумма + НовСтрока.РаспределеннаяСумма;
				НовСтрока.Период = ДобавитьМесяц(ТекСтрока.Период,(сч+МесяцевСдвига)*Знак);
				//ОК Калинин М. 240513 
				Если КомпенсироватьПогрешностьОкругления тогда		
				//ОК Калинин М.
				
					//Компенсируем округление в текущей строке
					Разность = Окр(СуммаКРаспределению*(сч+1) - РаспределеннаяСумма,2);
					Если  Разность <> 0 Тогда
						НовСтрока.РаспределеннаяСумма = НовСтрока.РаспределеннаяСумма + Разность;
						РаспределеннаяСумма = РаспределеннаяСумма + Разность;
					КонецЕсли;
				КонецЕсли;				
				
				//ОК Калинин М. 270513				
				РаспределяемаяТаблицаНовСтр.ПолученныеСтроки.Добавить(ВозвращаемоеЗначение.Индекс(НовСтрока));
				//ОК Калинин М. 
			КонецЦикла;

		КонецЕсли;
		
		//ОК Калинин М. 240513 
		Если КомпенсироватьПогрешностьОкругления тогда		
		//ОК Калинин М.
			//Компенсируем округление в последней строке
			Разность = Сумма - РаспределеннаяСумма;
			Если  Разность <> 0 Тогда
				НовСтрока.РаспределеннаяСумма = НовСтрока.РаспределеннаяСумма + Разность;
			КонецЕсли;
		КонецЕсли;	
		
	КонецЦикла;	
	
	СтруктураРезультат = Новый Структура("ВозвращаемоеЗначение, РаспределяемаяТаблица", ВозвращаемоеЗначение, РаспределяемаяТаблица);
	Возврат ПоместитьВоВременноеХранилище(СтруктураРезультат, АдресТЗ);
	//Объект.бит_БК_ЗагрузитьРезультатыРаспределить(ВозвращаемоеЗначение, Объект.ИмяТЧ);
	
КонецФункции

