
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ок_НачислениеАккруалов.ПроверитьМенеджераПоКонтроллингу() Тогда

		МассивОтветственныхЗаКампанию = ок_НачислениеАккруалов.ПолучитьМассивОтветственныхЗаКампанию();
		СписокОтветственныхЗаКампаниюТекстом = "";
		Для каждого МенеджерОтветственныйЗаКампанию Из МассивОтветственныхЗаКампанию Цикл
			СписокОтветственныхЗаКампаниюТекстом = СписокОтветственныхЗаКампаниюТекстом + МенеджерОтветственныйЗаКампанию + Символы.ПС;
		КонецЦикла; 
		
		ТекстПредупреждения = "Вы не являетесь менеджером по контроллингу";
		Если СписокОтветственныхЗаКампаниюТекстом <> "" Тогда
			ТекстПредупреждения = ТекстПредупреждения + Символы.ПС + "Обратитесь к ответственному за кампанию:" + Символы.ПС + СписокОтветственныхЗаКампаниюТекстом;
		Иначе
			ТекстПредупреждения = ТекстПредупреждения + Символы.ПС + "Обратитесь к администратору системы.";
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-21 (#3822)
	//ДатаЗаявки.ДатаНачала 		= НачалоГода(ДобавитьМесяц(ТекущаяДата(), -12));
	//ДатаЗаявки.ДатаОкончания 	= ТекущаяДата();
	//
	//ПериодаКЗБ.ДатаНачала 		= Дата(1,1,1);
	//ПериодаКЗБ.ДатаОкончания 	= КампанияПоНачислениюАккруалов.ПериодКампании.Дата;
	ДатаПериодаКампании 		= КампанияПоНачислениюАккруалов.ПериодКампании.Дата;
	ПериодаКЗБ.ДатаНачала 		= НачалоГода(ДобавитьМесяц(ДатаПериодаКампании, -12));
	ПериодаКЗБ.ДатаОкончания 	= КонецМесяца(ДатаПериодаКампании);
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-21 (#3822)
	
	//Восстанавливаем пользовательские настройки пользователя
	ВосстановитьНастройкиПользователя();
	
	КампанияПоНачислениюАккруалов = ок_НачислениеАккруалов.ПолучитьПоследнююКампанию();
	ПериодКампании = КампанияПоНачислениюАккруалов.ПериодКампании;
	
	ПериодКампанииПриИзмененииНаСервере();
	ОтветственныйЗаКампанию = ок_НачислениеАккруалов.ПроверитьОтветственногоЗаКампанию();
	ЗаполнитьСписокЦФОМенеджераПоКонтроллингу();
	
	УправлениеФормойНаСервере();
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-19 (#3822)
	ИнициализироватьЭскизыОтчетов();
	
	ОрганизацияПоУмолчанию = бит_БК_Общий.ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных("Организации", "Организация ОКЕЙ");
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-19 (#3822)
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ТекстПредупреждения <> "" Тогда
	
		Предупреждение(ТекстПредупреждения,,"Открытие обработки запрещено!");
		Отказ = Истина;
		Возврат;
	
	КонецЕсли; 
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	//ОбновитьСправочнуюИнформациюПоКампанииНаКлиенте();
	////ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-07-31 (#3823)
	////ПодключитьОбработчикОжидания("ОбновитьСправочнуюИнформациюПоКампанииНаКлиенте", 20);
	//ПодключитьОбработчикОжидания("ОбновитьСправочнуюИнформациюПоКампанииНаКлиентеПриАктивномОкне", 20);
	//ПодключитьОбработчикОжидания("ОбновитьСправочнуюИнформациюПоКампанииНаКлиентеВнеАктивногоОкна", 20*60);
	////ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-07-31 (#3823)
	
	УправлениеФормой();
	
	ПодключитьОбработчикОжидания("ОбновитьСправочнуюИнформациюПоКампанииНаКлиентеПриАктивномОкне", 60*10);
	ПодключитьОбработчикОжидания("ОбновитьСправочнуюИнформациюПоКампанииНаКлиентеВнеАктивногоОкна", 60*60);
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-18 (#4047)
	//СохранитьНастройкиПользователя();
	Если НЕ ЗавершениеРаботы Тогда
		СохранитьНастройкиПользователя();
	КонецЕсли; 
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-18 (#4047)
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияРассчитатьАккруалыИнформацияНажатие(Элемент)
	
	пСтруктураОтбора = Новый Структура();

	//Отбор полю "ок_СозданОбработкой"
	пСтруктураОтбора.Вставить("ок_СозданОбработкой",	Истина);
	
	ОткрытьФорму("Документ.рс_АккруалБезID.Форма.ФормаСпискаУправляемая", Новый Структура("Отбор", пСтруктураОтбора));
	
КонецПроцедуры

&НаКлиенте
Процедура ВключениеДляКомпанииАвтооповещенийПриИзменении(Элемент)
	
	Элементы.ПредставлениеРасписания.Доступность = ВключитьДляКампанииАвтооповещение;
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-20 (#3822)
	ИзменитьПараметрыРегламентногоЗадания();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-20 (#3822)
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеРасписанияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Расписание = Неопределено Тогда
		РедактируемоеРасписание = Новый РасписаниеРегламентногоЗадания;
	Иначе
		РедактируемоеРасписание = Расписание;
	КонецЕсли;
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РедактируемоеРасписание);
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ИзменитьРасписание", ЭтотОбъект);
	Диалог.Показать(ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьРасписание(НовоеРасписание, ДополнительныеПараметры) Экспорт
	
	Если НовоеРасписание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Расписание = НовоеРасписание;
	Модифицированность = Истина;
	УстановитьПредставлениеРасписания(ЭтотОбъект);
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-25 (#3822)
	ИзменитьПараметрыРегламентногоЗадания();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-25 (#3822)
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПредставлениеРасписания(Знач Форма)
	
	Расписание = Форма.Расписание;
	
	Если Расписание <> Неопределено Тогда
		Форма.ПредставлениеРасписания = Строка(Расписание);
	Иначе
		Форма.ПредставлениеРасписания = НСтр("ru = '<Не задано>'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодКампанииПриИзменении(Элемент)
	
	ПериодКампанииПриИзмененииНаСервере();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	//ОбновитьСправочнуюИнформациюПоКампанииНаКлиенте();
	УправлениеФормой();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
КонецПроцедуры

&НаСервере
Процедура ПериодКампанииПриИзмененииНаСервере()
	
	ЗаполнитьКампаниюПоНачислениюАккруалов();
	Если ЗначениеЗаполнено(КампанияПоНачислениюАккруалов) Тогда
		ВключитьДляКампанииАвтооповещение 	= КампанияПоНачислениюАккруалов.Автооповещение;
		ДатаЗавершенияКампании 				= КампанияПоНачислениюАккруалов.ДатаЗавершенияКампании;
		Расписание 							= КампанияПоНачислениюАккруалов.РасписаниеАвтооповещений.Получить();
	КонецЕсли;
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-30 (#3822)
	//Если ЗначениеЗаполнено(ПериодКампании.Дата) Тогда
	//	ПериодаКЗБ.ДатаОкончания = КонецМесяца(ПериодКампании.Дата);
	//Иначе
	//	ПериодаКЗБ.ДатаОкончания = Дата(1,1,1);
	//КонецЕсли;
	Если ЗначениеЗаполнено(ПериодКампании.Дата) Тогда
		ДатаПериодаКампании 		= ПериодКампании.Дата;
		ПериодаКЗБ.ДатаНачала 		= НачалоГода(ДобавитьМесяц(ДатаПериодаКампании, -12));
		ПериодаКЗБ.ДатаОкончания 	= КонецМесяца(ДатаПериодаКампании);
	Иначе
		ДатаПериодаКампании 		= ТекущаяДата();
		ПериодаКЗБ.ДатаНачала 		= НачалоГода(ДобавитьМесяц(ДатаПериодаКампании, -12));
		ПериодаКЗБ.ДатаОкончания 	= КонецМесяца(ДатаПериодаКампании);
	КонецЕсли;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-30 (#3816)
	
	УправлениеФормойНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияИнформацияПоКампанииНажатие(Элемент)
	
	ОткрытьЗначение(КампанияПоНачислениюАккруалов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ЗаписиКампанииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ЗаписиКампании.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если Поле.Имя = "ЗаписиКампанииСуммаПринятоУслугТоваровРаботБезНДС"
			ИЛИ Поле.Имя = "ЗаписиКампанииПроведеноВМСФО"
			ИЛИ Поле.Имя = "ЗаписиКампанииНачислитьАккруал"
			ИЛИ Поле.Имя = "ЗаписиКампанииСуммаКЗакрытию" Тогда
			
			ИмяПоля = СтрЗаменить(Поле.Имя, "ЗаписиКампании","");
			
			СтруктураПарметровСтроки = Новый Структура();
			СтруктураПарметровСтроки.Вставить("ИДСтроки",	ТекущиеДанные.ИДСтроки);
			СтруктураПарметровСтроки.Вставить("Кампания",	КампанияПоНачислениюАккруалов);
			СтруктураПарметровСтроки.Вставить("ИмяПоля", 	ИмяПоля);
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ЗаписиКампанииВыборПослеВводаЗначения", ЭтотОбъект, СтруктураПарметровСтроки);
			ПоказатьВводЧисла(ОписаниеОповещения, ТекущиеДанные[ИмяПоля], ,15, 2);

		ИначеЕсли Поле.Имя = "ЗаписиКампанииПредполагаемаяДатаПредоставленияДокументов" Тогда
			
			ИмяПоля = СтрЗаменить(Поле.Имя, "ЗаписиКампании","");
			
			СтруктураПарметровСтроки = Новый Структура();
			СтруктураПарметровСтроки.Вставить("ИДСтроки",	ТекущиеДанные.ИДСтроки);
			СтруктураПарметровСтроки.Вставить("Кампания",	КампанияПоНачислениюАккруалов);
			СтруктураПарметровСтроки.Вставить("ИмяПоля", 	ИмяПоля);
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ЗаписиКампанииВыборПослеВводаЗначения", ЭтотОбъект, СтруктураПарметровСтроки);
			
			ПоказатьВводДаты(ОписаниеОповещения, ТекущиеДанные[ИмяПоля], , ЧастиДаты.Дата);
			
		ИначеЕсли Поле.Имя = "ЗаписиКампанииКомментарий" Тогда
			
			ИмяПоля = СтрЗаменить(Поле.Имя, "ЗаписиКампании","");
			
			СтруктураПарметровСтроки = Новый Структура();
			СтруктураПарметровСтроки.Вставить("ИДСтроки",	ТекущиеДанные.ИДСтроки);
			СтруктураПарметровСтроки.Вставить("Кампания",	КампанияПоНачислениюАккруалов);
			СтруктураПарметровСтроки.Вставить("ИмяПоля", 	ИмяПоля);
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ЗаписиКампанииВыборПослеВводаЗначения", ЭтотОбъект, СтруктураПарметровСтроки);
			
			ПоказатьВводСтроки(ОписаниеОповещения, ТекущиеДанные[ИмяПоля],, 250, Истина);
			
		ИначеЕсли Поле.Имя = "ЗаписиКампанииОбработано" Тогда
			
			СтруктураПарметровСтроки = Новый Структура();
			СтруктураПарметровСтроки.Вставить("Кампания",	ТекущиеДанные.Кампания);
			СтруктураПарметровСтроки.Вставить("ИДСтроки",	ТекущиеДанные.ИДСтроки);
			СтруктураПарметровСтроки.Вставить("ИмяПоля", 	"Обработано");
			
			ЗаписиКампанииВыборПослеВводаЗначения(НЕ ТекущиеДанные.Обработано, СтруктураПарметровСтроки);
			
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-24 (#3969)
		ИначеЕсли Поле.Имя = "ЗаписиКампанииГотовоКСозданиюДокумента" Тогда
			
			СтруктураПарметровСтроки = Новый Структура();
			СтруктураПарметровСтроки.Вставить("Кампания",	ТекущиеДанные.Кампания);
			СтруктураПарметровСтроки.Вставить("ИДСтроки",	ТекущиеДанные.ИДСтроки);
			СтруктураПарметровСтроки.Вставить("ИмяПоля", 	"ГотовоКСозданиюДокумента");
			
			ЗаписиКампанииВыборПослеВводаЗначения(НЕ ТекущиеДанные.ГотовоКСозданиюДокумента, СтруктураПарметровСтроки);
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-24 (#3969)
		
		ИначеЕсли Поле.Имя = "ЗаписиКампанииПередатьИнициатору" Тогда
			
			СтруктураПарметровСтроки = Новый Структура();
			СтруктураПарметровСтроки.Вставить("Кампания",	ТекущиеДанные.Кампания);
			СтруктураПарметровСтроки.Вставить("ИДСтроки",	ТекущиеДанные.ИДСтроки);
			СтруктураПарметровСтроки.Вставить("ИмяПоля", 	"ПередатьИнициатору");
			
			ЗаписиКампанииВыборПослеВводаЗначения(НЕ ТекущиеДанные.ПередатьИнициатору, СтруктураПарметровСтроки);
			
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-24 (#3822)
		ИначеЕсли Поле.Имя = "ЗаписиКампанииГотовоКСозданиюДокумента" Тогда
			
			СтруктураПарметровСтроки = Новый Структура();
			СтруктураПарметровСтроки.Вставить("Кампания",	ТекущиеДанные.Кампания);
			СтруктураПарметровСтроки.Вставить("ИДСтроки",	ТекущиеДанные.ИДСтроки);
			СтруктураПарметровСтроки.Вставить("ИмяПоля", 	"ГотовоКСозданиюДокумента");
			
			ЗаписиКампанииВыборПослеВводаЗначения(НЕ ТекущиеДанные.ГотовоКСозданиюДокумента, СтруктураПарметровСтроки);
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-24 (#3822)
		ИначеЕсли Поле.Имя = "ЗаписиКампанииФВБНомер"
			ИЛИ Поле.Имя = "ЗаписиКампанииФВБДата" Тогда
			
			ОткрытьЗначение(ТекущиеДанные.ФВБ);
			
		ИначеЕсли Поле.Имя = "ЗаписиКампанииФВБбит_БК_Инициатор" Тогда
			
			Инициатор = бит_ОбщегоНазначения.ПолучитьЗначениеРеквизитаОбъекта(ТекущиеДанные.ФВБ, "бит_БК_Инициатор");
			ОткрытьЗначение(Инициатор);
			
		ИначеЕсли Поле.Имя = "ЗаписиКампанииФВБбит_БК_Инициатор"
			ИЛИ Поле.Имя = "ЗаписиКампанииФВБбит_БК_Организация"
			ИЛИ Поле.Имя = "ЗаписиКампанииФВБбит_БК_Цель"
			ИЛИ Поле.Имя = "ЗаписиКампанииФВБбит_БК_ПредпологаемыйКонтрагент" Тогда
			
			ИмяПоля = СтрЗаменить(Поле.Имя, "ЗаписиКампанииФВБ","");
			
			РеквизитФВБ = бит_ОбщегоНазначения.ПолучитьЗначениеРеквизитаОбъекта(ТекущиеДанные.ФВБ, ИмяПоля);
			ОткрытьЗначение(РеквизитФВБ);
				
		Иначе
			
			ИмяПоля = СтрЗаменить(Поле.Имя, "ЗаписиКампании","");
			ОткрытьЗначение(ТекущиеДанные[ИмяПоля]);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписиКампанииВыборПослеВводаЗначения(ВыбЗнач, Параметры) Экспорт
	
	Если ВыбЗнач <> Неопределено Тогда
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-18 (#3822)
		//Если Параметры.ИмяПоля = "СуммаПринятоУслугТоваровРаботБезНДС" 
		//	И ВыбЗнач < 0 Тогда
		//
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Поле ""Принято услуг, товаров, работ (без НДС)"" может принимать только неотрицательные значения.");
		//	Возврат;
		//КонецЕсли; 
		//
		//ЗаписиКампанииВыборПослеВводаЗначенияНаСервере(ВыбЗнач, Параметры);
		Если ТипЗнч(Параметры) = Тип("Структура")
			И Параметры.Свойство("МассивСтрокДляОбработки") Тогда
			
			ЗаписиКампанииВыборПослеВводаЗначенияНаСервереМассивСтрок(ВыбЗнач, Параметры);
			
		Иначе
			
			Если Параметры.ИмяПоля = "СуммаПринятоУслугТоваровРаботБезНДС" 
				И ВыбЗнач < 0 Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Поле ""Принято услуг, товаров, работ (без НДС)"" может принимать только неотрицательные значения.");
				Возврат;
				
			КонецЕсли;
		
			ЗаписиКампанииВыборПослеВводаЗначенияНаСервере(ВыбЗнач, Параметры);
			
		КонецЕсли; 
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-18 (#3822)
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
		УправлениеФормой();
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
		
	КонецЕсли;
	
КонецПроцедуры

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-16 (#4035)
//&НаСервере
&НаСервереБезКонтекста
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-16 (#4035)
Процедура ЗаписиКампанииВыборПослеВводаЗначенияНаСервере(ВыбЗнач, Параметры)
	
	НаборЗаписей = РегистрыСведений.ок_НачислениеАккруаловКонтроллинг.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ИДСтроки.Установить(Параметры.ИДСтроки);
	НаборЗаписей.Отбор.Кампания.Установить(Параметры.Кампания);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() > 0 Тогда
		
		ТекущаяЗапись = НаборЗаписей[0];
		
		ТекущаяЗапись[Параметры.ИмяПоля] = ВыбЗнач;
		ТекущаяЗапись.ДатаИзменения = ТекущаяДата();
		ТекущаяЗапись.Ответственный = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-21 (#3822)
		Если (Параметры.ИмяПоля = "СуммаПринятоУслугТоваровРаботБезНДС"
				ИЛИ Параметры.ИмяПоля = "НачислитьАккруал")
			И ВыбЗнач > 0
			Тогда
			ТекущаяЗапись.Обработано = Истина;
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
			Если Параметры.ИмяПоля = "НачислитьАккруал" Тогда
				ТекущаяЗапись.ГотовоКСозданиюДокумента = Истина;
			КонецЕсли;
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
		ИначеЕсли Параметры.ИмяПоля = "ГотовоКСозданиюДокумента"
			И НЕ ТекущаяЗапись.Обработано Тогда
			Возврат;
		ИначеЕсли Параметры.ИмяПоля = "Обработано"
			И НЕ ТекущаяЗапись.Обработано
			И ТекущаяЗапись.ГотовоКСозданиюДокумента Тогда
			ТекущаяЗапись.ГотовоКСозданиюДокумента = Ложь;
		КонецЕсли; 
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-21 (#3822)
		
		НаборЗаписей.Записать();
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
		//ОбновитьЗаписиКампанииНаСервере();
		//ОбновитьСправочнуюИнформациюПоКампании();
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаписиКампанииВыборПослеВводаЗначенияНаСервереМассивСтрок(ВыбЗнач, Параметры)
	
	БылоИзменениеВРегистре = Ложь;
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-19 (#3914)
	ДатаИзменения = ТекущаяДата();
	Ответственный = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-19 (#3914)
	
	Для каждого СтруктураСтроки Из Параметры.МассивСтрокДляОбработки Цикл
	
		НаборЗаписей = РегистрыСведений.ок_НачислениеАккруаловКонтроллинг.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Кампания.Установить(СтруктураСтроки.Кампания);
		НаборЗаписей.Отбор.ИДСтроки.Установить(СтруктураСтроки.ИДСтроки);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() > 0 Тогда
			
			ТекущаяЗапись = НаборЗаписей[0];
			
			Если ТекущаяЗапись[СтруктураСтроки.ИмяПоля] = ВыбЗнач Тогда
				Продолжить;
			КонецЕсли; 
			
			ТекущаяЗапись[СтруктураСтроки.ИмяПоля] = ВыбЗнач;
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-19 (#3914)
			//ТекущаяЗапись.ДатаИзменения = ТекущаяДата();
			//ТекущаяЗапись.Ответственный = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
			ТекущаяЗапись.ДатаИзменения = ДатаИзменения;
			ТекущаяЗапись.Ответственный = Ответственный;
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-19 (#3914)
			
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-21 (#3822)
			//Если СтруктураСтроки.ИмяПоля = "СуммаПринятоУслугТоваровРаботБезНДС" Тогда
			Если (СтруктураСтроки.ИмяПоля = "СуммаПринятоУслугТоваровРаботБезНДС"
					ИЛИ СтруктураСтроки.ИмяПоля = "НачислитьАккруал")
				И ВыбЗнач > 0
				Тогда
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-21 (#3822)
				ТекущаяЗапись.Обработано = Истина;
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
				Если Параметры.ИмяПоля = "НачислитьАккруал" Тогда
					ТекущаяЗапись.ГотовоКСозданиюДокумента = Истина;
				КонецЕсли;
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-21 (#3822)
			ИначеЕсли СтруктураСтроки.ИмяПоля = "ГотовоКСозданиюДокумента"
				И НЕ ТекущаяЗапись.Обработано Тогда
				Продолжить;
			ИначеЕсли СтруктураСтроки.ИмяПоля = "Обработано"
				И НЕ ТекущаяЗапись.Обработано
				И ТекущаяЗапись.ГотовоКСозданиюДокумента Тогда
				ТекущаяЗапись.ГотовоКСозданиюДокумента = Ложь;
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-21 (#3822)
			КонецЕсли; 
			
			НаборЗаписей.Записать();
			
		КонецЕсли;
	
	КонецЦикла;

	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	////ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-20 (#3822)
	//ОбновитьЗаписиКампанииНаСервере();
	//ОбновитьСправочнуюИнформациюПоКампании();
	////ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-20 (#3822)
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
КонецПроцедуры

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-20 (#3822)
&НаКлиенте
Процедура ЗаписиКампанииПриАктивизацииСтроки(Элемент)
	
	//РассчитатьСуммуВыделенныхСтрок();
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-20 (#3822)

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
&НаКлиенте
Процедура ЗаписиКампанииПередУдалением(Элемент, Отказ)
	
	Если НЕ ОтветственныйЗаКампанию Тогда
		Отказ = Истина;
	КонецЕсли; 
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗакрытьЗаявки(Команда)
	
	ЗакрытиеОстатков_Форма = ПолучитьФорму("Обработка.бит_БК_ЗакрытиеОстатков.Форма.Форма");
	
	ЭлементыОтбора = ЗакрытиеОстатков_Форма.КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.Элементы;
	
	//Отбор Сценарий = Заявка_У
	ЭлементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование 	= Истина;
	ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Сценарий");
	ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение 	= ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_У");
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-26 (#3969)
	////Отбор Группа ИЛИ
	//ГруппаОтбораИЛИ = ЭлементыОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	//ГруппаОтбораИЛИ.Использование 	= Истина;
	//ГруппаОтбораИЛИ.ТипГруппы 		= ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	//
	////Отбор СуммаОстаток <= 100
	//ЭлементОтбора = ГруппаОтбораИЛИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.Использование 	= Истина;
	//ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("СуммаОстаток");
	//ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	//ЭлементОтбора.ПравоеЗначение 	= 100;
	//
	////Отбор по полю СуммаОстатокПроцент <= 5
	//ЭлементОтбора = ГруппаОтбораИЛИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.Использование 	= Истина;
	//ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("СуммаОстатокПроцент");
	//ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	//ЭлементОтбора.ПравоеЗначение 	= 5;
	//
	////Отбор Группа И
	//ГруппаОтбораИ_2 = ГруппаОтбораИЛИ.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	//ГруппаОтбораИ_2.Использование 	= Истина;
	//ГруппаОтбораИ_2.ТипГруппы 		= ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	//
	////Отбор по полю Период <= ПериодКампании "минус" 6 месяцев
	//ОтборПериод = ОК_ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ПериодКампании, "Дата").Дата;
	//Если ЗначениеЗаполнено(ОтборПериод) Тогда
	//	ЭлементОтбора = ГруппаОтбораИ_2.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ЭлементОтбора.Использование 	= Истина;
	//	ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Период");
	//	ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	//	ЭлементОтбора.ПравоеЗначение 	= НачалоМесяца(ДобавитьМесяц(ОтборПериод, -6));
	//КонецЕсли; 
	//
	////Отбор по полю СуммаИсполнение = 0
	//ЭлементОтбора = ГруппаОтбораИ_2.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.Использование 	= Истина;
	//ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("СуммаИсполнение");
	//ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	//ЭлементОтбора.ПравоеЗначение 	= 0;
	//
	////ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-24 (#3822)
	//ЭлементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.Использование 	= Ложь;
	//ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("ЗаявкаИсполнена");
	//ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	//ЭлементОтбора.ПравоеЗначение 	= Истина;
	////ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-24 (#3822)
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-26 (#3969)
	
	//Отбор по полю ЦФО
	Если СписокЦФОМенеджераПоКонтроллингу.Количество() > 0 Тогда
		
		НайденЭлементОтбора = Ложь;
		ПолеКомпоновкиДанных_ЦФО = Новый ПолеКомпоновкиДанных("ЦФО");
		Для каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			
			Если ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновкиДанных_ЦФО Тогда
				
				ЭлементОтбора.Использование 	= Истина;
				ЭлементОтбора.ЛевоеЗначение 	= ПолеКомпоновкиДанных_ЦФО;
				ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.ВСписке;
				ЭлементОтбора.ПравоеЗначение 	= СписокЦФОМенеджераПоКонтроллингу;
				
				НайденЭлементОтбора = Истина;
				Прервать;
				
			КонецЕсли; 
			
		КонецЦикла; 
		
		Если НЕ НайденЭлементОтбора Тогда
		
			ЭлементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.Использование 	= Истина;
			ЭлементОтбора.ЛевоеЗначение 	= ПолеКомпоновкиДанных_ЦФО;
			ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.ВСписке;
			ЭлементОтбора.ПравоеЗначение 	= СписокЦФОМенеджераПоКонтроллингу;
		
		КонецЕсли; 
		
	КонецЕсли; 
	
	ЗакрытиеОстатков_Форма.Объект.ПричинаЗакрытия = ПредопределенноеЗначение("Справочник.бит_ПричиныЗакрытияДокументовПланированияПлатежа.Регламент");
	
	ЗакрытиеОстатков_Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьЗаявкиПоФВБ(Команда)
	
	ТекущиеДанные = Элементы.ЗаписиКампании.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	пСтруктураОтбора = Новый Структура();
	
	//Отбор по ФВБ
	пПараметрПоиска = Новый Структура;
	пПараметрПоиска.Вставить("ВидСравнения", 	ВидСравненияКомпоновкиДанных.ВСписке);
	пПараметрПоиска.Вставить("Использование", 	Истина);
	пПараметрПоиска.Вставить("ПравоеЗначение", 	ПолучитьСписокФВБПоВыделеннымСтрокам());	
	пСтруктураОтбора.Вставить("Аналитика_1", 	пПараметрПоиска);
	
	//Отбор по сценарию Заявка У
	пПараметрПоиска = Новый Структура;
	пПараметрПоиска.Вставить("ВидСравнения", 	ВидСравненияКомпоновкиДанных.Равно);
	пПараметрПоиска.Вставить("Использование", 	Истина);
	пПараметрПоиска.Вставить("ПравоеЗначение", 	ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_У"));
	пСтруктураОтбора.Вставить("Сценарий", 		пПараметрПоиска);
	
	//Отбор по сумме остаток > 0
	пПараметрПоиска = Новый Структура;
	пПараметрПоиска.Вставить("ВидСравнения",	ВидСравненияКомпоновкиДанных.Больше);
	пПараметрПоиска.Вставить("Использование",	Ложь);
	пПараметрПоиска.Вставить("ПравоеЗначение",	0);
	пСтруктураОтбора.Вставить("СуммаОстаток",	пПараметрПоиска);
	
	ЗакрытиеОстатков_Форма = ОткрытьФорму("Обработка.бит_БК_ЗакрытиеОстатков.Форма", Новый Структура("СтруктураОтбора", пСтруктураОтбора));
	
	ЗакрытиеОстатков_Форма.Объект.ПричинаЗакрытия = ПредопределенноеЗначение("Справочник.бит_ПричиныЗакрытияДокументовПланированияПлатежа.Регламент");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтчет_КонтрольныеЗначенияБюджетов(Команда)
	
	ОткрытьФорму("Отчет.бит_КонтрольныеЗначенияБюджетов.Форма.ФормаОтчетаУправляемая");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтчет_ОтчетПоПроводкамМСФО(Команда)
	
	Если НЕ ЗначениеЗаполнено(ОтчетПоПроводкамМСФО) Тогда
		ОтчетПоПроводкамМСФО = ПолучитьОтчетПоПроводкамМСФО();
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ОтчетПоПроводкамМСФО) Тогда
		Возврат;
	КонецЕсли; 
	
	ВыполняемаяКоманда = ПолучитьВыполняемуюКоманду();
	
	ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьОткрытиеФормыОбработки(ВыполняемаяКоманда, Неопределено, ВыполняемаяКоманда.ОбъектыНазначения);
	
КонецПроцедуры

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-21 (#3822)
&НаКлиенте
Процедура КомандаОтчет_ДляМенеджераПоКонтроллингу(Команда)
	
	УсловияОтбора = Новый Структура("Кампания", КампанияПоНачислениюАккруалов);
	Если НЕ ОтветственныйЗаКампанию Тогда
		УсловияОтбора.Вставить("ЦФО", СписокЦФОМенеджераПоКонтроллингу);
	КонецЕсли; 
	
	ПараметрыФормы = Новый Структура("Отбор, СформироватьПриОткрытии", УсловияОтбора, Истина);
	ОткрытьФорму("Отчет.ок_ОтчетДляМенеджераПоКонтроллингу.Форма", ПараметрыФормы);
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-21 (#3822)

&НаСервере
Функция ПолучитьОтчетПоПроводкамМСФО()
	
	Возврат Справочники.ДополнительныеОтчетыИОбработки.НайтиПоНаименованию("Проводки МСФО 2017", Истина);
	
КонецФункции

&НаСервере
Функция ПолучитьВыполняемуюКоманду()
	
	Если ОтчетПоПроводкамМСФО.Команды.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтрокаТаблицыКоманд = ОтчетПоПроводкамМСФО.Команды[0];
	
	ВыполняемаяКоманда = Новый Структура(
		"Ссылка, Представление,
		|Идентификатор, ВариантЗапуска, ПоказыватьОповещение, 
		|Модификатор, ОбъектыНазначения, ЭтоОтчет, Вид");
	ЗаполнитьЗначенияСвойств(ВыполняемаяКоманда, СтрокаТаблицыКоманд);
	ВыполняемаяКоманда.Ссылка 	= ОтчетПоПроводкамМСФО;
	ВыполняемаяКоманда.Вид 		= ОтчетПоПроводкамМСФО.Вид;
	ВыполняемаяКоманда.ЭтоОтчет = Истина;

	Возврат ВыполняемаяКоманда;
	
КонецФункции
	
&НаКлиенте
Процедура Заполнить(Команда)
	
	//1) Проверить есть ли уже открытие кампании в других периодах
	Если ПроверитьНаличиеОткрытойКампанииПоНачислениюАккруаловПоДругимПериодам(ПериодКампании) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Существуют открытые кампании по другим периодам отчета. Прежде чем создавать новую кампанию, необходимо закрыть имеющиеся."); 
		Возврат;
	КонецЕсли;
	
	//2) Проверить есть ли уже созданная кампания по текущим параметрам
	ЗаполнитьКампаниюПоНачислениюАккруалов();
	
	//3) Создать/Перезаполнить кампанию
	Если ЗначениеЗаполнено(КампанияПоНачислениюАккруалов) Тогда
	
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросПерезаполнитьКампанию", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "В указанном периоде отчета """ + ПериодКампании + """ уже существует кампания """ + КампанияПоНачислениюАккруалов + """. 
											|Перезаполнить кампанию?", РежимДиалогаВопрос.ДаНет, 60);
		
	Иначе
		
		//4) Собрать данные из РН "бит_КонтрольныеЗначенияБюджетов" и заполнить РС "ок_НачислениеАккруаловКонтроллинг"
		КампанияПоНачислениюАккруалов = СоздатьПерезаполнитьКампаниюПоНачислениюАккруалов();
		ок_НачислениеАккруалов.УстановитьСтатусКампанииПоНачислениюАккруалов(КампанияПоНачислениюАккруалов, ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.Черновик"));
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
		//ЗаполнитьНачислениеАккруаловКонтроллингНаСервере();
		ЗаполнитьНачислениеАккруаловКонтроллингВФоне();
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)

	КонецЕсли; 
	
	ЗаписиКампании.Параметры.УстановитьЗначениеПараметра("Кампания", КампанияПоНачислениюАккруалов);
	
КонецПроцедуры

//Вынести в отдельную процедуру
&НаКлиенте
Процедура ОтветНаВопросПерезаполнитьКампанию(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		//3) Собрать данные из РН "бит_КонтрольныеЗначенияБюджетов" и заполнить РС "ок_НачислениеАккруаловКонтроллинг"
		КампанияПоНачислениюАккруалов = СоздатьПерезаполнитьКампаниюПоНачислениюАккруалов();
		ок_НачислениеАккруалов.УстановитьСтатусКампанииПоНачислениюАккруалов(КампанияПоНачислениюАккруалов, ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.Черновик"));
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
		//ЗаполнитьНачислениеАккруаловКонтроллингНаСервере();
		ЗаполнитьНачислениеАккруаловКонтроллингВФоне();
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПредварительнаяОбработкаСтрок(Команда)
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
	//ПредварительнаяОбработкаСтрокНаСервере();
	ПредварительнаяОбработкаСтрокВФоне();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
КонецПроцедуры

&НаСервере
Процедура ПредварительнаяОбработкаСтрокНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НачислениеАккруаловКонтроллинг.ФВБ КАК ФВБ,
		|	НачислениеАккруаловКонтроллинг.ПериодКЗБ КАК ПериодКЗБ,
		|	НачислениеАккруаловКонтроллинг.ЦФО КАК ЦФО,
		|	НачислениеАккруаловКонтроллинг.Объект КАК Объект,
		|	НачислениеАккруаловКонтроллинг.СтатьяОборотов КАК СтатьяОборотов,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
		|	НачислениеАккруаловКонтроллинг.СуммаИсполнение КАК СуммаИсполнение,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
		|	НачислениеАккруаловКонтроллинг.ИДСтроки КАК ИДСтроки
		|ПОМЕСТИТЬ ВТ_ДанныеЗаТекущийПериод
		|ИЗ
		|	РегистрСведений.ок_НачислениеАккруаловКонтроллинг КАК НачислениеАккруаловКонтроллинг
		|ГДЕ
		|	НачислениеАккруаловКонтроллинг.Кампания = &Кампания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДанныеЗаТекущийПериод.ИДСтроки КАК ИДСтроки,
		|	НачислениеАккруаловКонтроллинг.Кампания.ПериодКампании.Дата КАК ПериодКампанииДата,
		|	НачислениеАккруаловКонтроллинг.ФВБ КАК ФВБ,
		|	НачислениеАккруаловКонтроллинг.ПериодКЗБ КАК ПериодКЗБ,
		|	НачислениеАккруаловКонтроллинг.ЦФО КАК ЦФО,
		|	НачислениеАккруаловКонтроллинг.Объект КАК Объект,
		|	НачислениеАккруаловКонтроллинг.СтатьяОборотов КАК СтатьяОборотов,
		|	НачислениеАккруаловКонтроллинг.СуммаПринятоУслугТоваровРаботБезНДС КАК СуммаПринятоУслугТоваровРаботБезНДС,
		|	НачислениеАккруаловКонтроллинг.ПредполагаемаяДатаПредоставленияДокументов КАК ПредполагаемаяДатаПредоставленияДокументов,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
		|	НачислениеАккруаловКонтроллинг.СуммаИсполнение КАК СуммаИсполнение,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
		|	НачислениеАккруаловКонтроллинг.СуммаКЗакрытию КАК СуммаКЗакрытию
		|ПОМЕСТИТЬ ВТ_ДанныеЗаПрошлыеПериоды
		|ИЗ
		|	ВТ_ДанныеЗаТекущийПериод КАК ДанныеЗаТекущийПериод
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ок_НачислениеАккруаловКонтроллинг КАК НачислениеАккруаловКонтроллинг
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
		//|		ПО ДанныеЗаТекущийПериод.ФВБ = НачислениеАккруаловКонтроллинг.ФВБ
		|		ПО 
		|			НачислениеАккруаловКонтроллинг.Кампания <> &Кампания
		|			И ДанныеЗаТекущийПериод.ФВБ = НачислениеАккруаловКонтроллинг.ФВБ
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
		|			И ДанныеЗаТекущийПериод.ЦФО = НачислениеАккруаловКонтроллинг.ЦФО
		|			И ДанныеЗаТекущийПериод.Объект = НачислениеАккруаловКонтроллинг.Объект
		|			И ДанныеЗаТекущийПериод.СтатьяОборотов = НачислениеАккруаловКонтроллинг.СтатьяОборотов
		|			И ДанныеЗаТекущийПериод.ПериодКЗБ = НачислениеАккруаловКонтроллинг.ПериодКЗБ
		|			И (НачислениеАккруаловКонтроллинг.Обработано)
		|ГДЕ
		|	НЕ НачислениеАккруаловКонтроллинг.Кампания ЕСТЬ NULL
		|	И НачислениеАккруаловКонтроллинг.Кампания.ПериодКампании.Дата < &ТекущаяДатаКампании
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ДанныеЗаПрошлыеПериоды.ПериодКампанииДата) КАК ПериодКампанииДата,
		|	ДанныеЗаПрошлыеПериоды.ФВБ КАК ФВБ,
		|	ДанныеЗаПрошлыеПериоды.ПериодКЗБ КАК ПериодКЗБ,
		|	ДанныеЗаПрошлыеПериоды.ЦФО КАК ЦФО,
		|	ДанныеЗаПрошлыеПериоды.Объект КАК Объект,
		|	ДанныеЗаПрошлыеПериоды.СтатьяОборотов КАК СтатьяОборотов
		|ПОМЕСТИТЬ ВТ_ДанныеЗаПоследнийПериод
		|ИЗ
		|	ВТ_ДанныеЗаПрошлыеПериоды КАК ДанныеЗаПрошлыеПериоды
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеЗаПрошлыеПериоды.ФВБ,
		|	ДанныеЗаПрошлыеПериоды.ПериодКЗБ,
		|	ДанныеЗаПрошлыеПериоды.ЦФО,
		|	ДанныеЗаПрошлыеПериоды.Объект,
		|	ДанныеЗаПрошлыеПериоды.СтатьяОборотов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеЗаПрошлыеПериоды.ИДСтроки КАК ИДСтроки,
		|	ДанныеЗаПоследнийПериод.ПериодКампанииДата КАК ПериодКампанииДата,
		|	ДанныеЗаПоследнийПериод.ФВБ КАК ФВБ,
		|	ДанныеЗаПоследнийПериод.ПериодКЗБ КАК ПериодКЗБ,
		|	ДанныеЗаПоследнийПериод.ЦФО КАК ЦФО,
		|	ДанныеЗаПоследнийПериод.Объект КАК Объект,
		|	ДанныеЗаПоследнийПериод.СтатьяОборотов КАК СтатьяОборотов,
		|	ДанныеЗаПрошлыеПериоды.СуммаПринятоУслугТоваровРаботБезНДС КАК СуммаПринятоУслугТоваровРаботБезНДС,
		|	ДанныеЗаПрошлыеПериоды.ПредполагаемаяДатаПредоставленияДокументов КАК ПредполагаемаяДатаПредоставленияДокументов,
		|	ДанныеЗаПрошлыеПериоды.СуммаКЗакрытию КАК СуммаКЗакрытию,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
		|	ВЫБОР
		|		КОГДА ДанныеЗаПрошлыеПериоды.СуммаИсполнение = ДанныеЗаТекущийПериод.СуммаИсполнение
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ИзменилосьИсполнение,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
		|	ИСТИНА КАК Обработано
		|ИЗ
		|	ВТ_ДанныеЗаПоследнийПериод КАК ДанныеЗаПоследнийПериод
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеЗаПрошлыеПериоды КАК ДанныеЗаПрошлыеПериоды
		|		ПО ДанныеЗаПоследнийПериод.ФВБ = ДанныеЗаПрошлыеПериоды.ФВБ
		|			И ДанныеЗаПоследнийПериод.ЦФО = ДанныеЗаПрошлыеПериоды.ЦФО
		|			И ДанныеЗаПоследнийПериод.Объект = ДанныеЗаПрошлыеПериоды.Объект
		|			И ДанныеЗаПоследнийПериод.СтатьяОборотов = ДанныеЗаПрошлыеПериоды.СтатьяОборотов
		|			И ДанныеЗаПоследнийПериод.ПериодКЗБ = ДанныеЗаПрошлыеПериоды.ПериодКЗБ
		|			И ДанныеЗаПоследнийПериод.ПериодКампанииДата = ДанныеЗаПрошлыеПериоды.ПериодКампанииДата
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеЗаТекущийПериод КАК ДанныеЗаТекущийПериод
		|		ПО ДанныеЗаТекущийПериод.ФВБ = ДанныеЗаПоследнийПериод.ФВБ
		|			И ДанныеЗаТекущийПериод.ЦФО = ДанныеЗаПоследнийПериод.ЦФО
		|			И ДанныеЗаТекущийПериод.Объект = ДанныеЗаПоследнийПериод.Объект
		|			И ДанныеЗаТекущийПериод.СтатьяОборотов = ДанныеЗаПоследнийПериод.СтатьяОборотов
		|			И ДанныеЗаТекущийПериод.ПериодКЗБ = ДанныеЗаПоследнийПериод.ПериодКЗБ
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
		|";
	
	Запрос.УстановитьПараметр("Кампания", КампанияПоНачислениюАккруалов);
	Запрос.УстановитьПараметр("ТекущаяДатаКампании", КампанияПоНачислениюАккруалов.ПериодКампании.Дата);
	
	БылоИзменениеВРегистре = Ложь;
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.ок_НачислениеАккруаловКонтроллинг.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ИДСтроки.Установить(ВыборкаДетальныеЗаписи.ИДСтроки);
		НаборЗаписей.Отбор.Кампания.Установить(КампанияПоНачислениюАккруалов);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() > 0 Тогда
			
			ТекущаяЗапись = НаборЗаписей[0];
			
			Если ТекущаяЗапись.СуммаПринятоУслугТоваровРаботБезНДС <> ВыборкаДетальныеЗаписи.СуммаПринятоУслугТоваровРаботБезНДС
				ИЛИ ТекущаяЗапись.ПредполагаемаяДатаПредоставленияДокументов <> ВыборкаДетальныеЗаписи.ПредполагаемаяДатаПредоставленияДокументов
				ИЛИ ТекущаяЗапись.СуммаКЗакрытию <> ВыборкаДетальныеЗаписи.СуммаКЗакрытию
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
				ИЛИ ТекущаяЗапись.ИзменилосьИсполнение <> ВыборкаДетальныеЗаписи.ИзменилосьИсполнение
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
				ИЛИ ТекущаяЗапись.Обработано <> ВыборкаДетальныеЗаписи.Обработано Тогда
			
				ТекущаяЗапись.СуммаПринятоУслугТоваровРаботБезНДС 			= ВыборкаДетальныеЗаписи.СуммаПринятоУслугТоваровРаботБезНДС;
				ТекущаяЗапись.ПредполагаемаяДатаПредоставленияДокументов 	= ВыборкаДетальныеЗаписи.ПредполагаемаяДатаПредоставленияДокументов;
				ТекущаяЗапись.СуммаКЗакрытию 								= ВыборкаДетальныеЗаписи.СуммаКЗакрытию;
				ТекущаяЗапись.Обработано 									= ВыборкаДетальныеЗаписи.Обработано;
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
				ТекущаяЗапись.ИзменилосьИсполнение 							= ВыборкаДетальныеЗаписи.ИзменилосьИсполнение;
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
				
				ТекущаяЗапись.ДатаИзменения = ТекущаяДата();
				ТекущаяЗапись.Ответственный = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
				
				НаборЗаписей.Записать();
				
				БылоИзменениеВРегистре = Истина;
				
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если БылоИзменениеВРегистре Тогда
		ОбновитьЗаписиКампанииНаСервере();
	КонецЕсли;
	
	ОбновитьСправочнуюИнформациюПоКампании();
	
КонецПроцедуры

&НаКлиенте
Процедура СтартКампании(Команда)
	
	СтартКампанииНаСервере();
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	//ОбновитьСправочнуюИнформациюПоКампанииНаКлиенте();
	УправлениеФормой();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
	ок_НачислениеАккруалов.СоздатьОповещенияИнициаторам(КампанияПоНачислениюАккруалов);
	
КонецПроцедуры

&НаСервере
Процедура СтартКампанииНаСервере()
	
	ок_НачислениеАккруалов.УстановитьСтатусКампанииПоНачислениюАккруалов(КампанияПоНачислениюАккруалов, ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.ОткрытаДляИнициаторов"));
	
	КампанияОбъект = КампанияПоНачислениюАккруалов.ПолучитьОбъект();
	КампанияОбъект.ДатаНачалаКампании = ТекущаяДата();
	
	Если НЕ ЗначениеЗаполнено(КампанияОбъект.КлючРегламентногоЗадания) Тогда
		КампанияОбъект.КлючРегламентногоЗадания = Строка(КампанияПоНачислениюАккруалов.УникальныйИдентификатор());
	КонецЕсли; 
	
	КампанияОбъект.Записать();
	
	ок_НачислениеАккруалов.СоздатьРегламентноеЗаданиеОповещениеПоКампании(КампанияПоНачислениюАккруалов);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьКампанию(Команда)
	
	ЗавершитьКампаниюНаСервере();
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	//ОбновитьСправочнуюИнформациюПоКампанииНаКлиенте();
	УправлениеФормой();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
КонецПроцедуры

&НаСервере
Процедура ЗавершитьКампаниюНаСервере()
	
	ок_НачислениеАккруалов.УстановитьСтатусКампанииПоНачислениюАккруалов(КампанияПоНачислениюАккруалов, ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.ЗавершенаДляИнициаторов"));
	
	ок_НачислениеАккруалов.УдалитьРегламентноеЗаданиеОповещениеПоКампании(КампанияПоНачислениюАккруалов);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьАккруалы(Команда)
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-15 (#3914)
	//РассчитатьАккруалыНаСервере();
	ВернутьсяКСтаромуСпособуРасчетовАккруалов = ОК_ОбщегоНазначения.ПолучитьЗначениеУниверсальнойНастройки("НачислениеАккруалов", "ВернутьсяКСтаромуСпособуРасчетовАккруалов", Ложь);
	Если ВернутьсяКСтаромуСпособуРасчетовАккруалов Тогда
	
		РассчитатьАккруалыНаСервере();
		
	Иначе
		
	
		МассивЦФО = ок_НачислениеАккруалов.ПолучитьМассивЦФО(КампанияПоНачислениюАккруалов);
		Если МассивЦФО.Количество() = 0 Тогда	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Записей для расчета аккруалов не найдено.");
			Возврат;
		КонецЕсли; 
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
		//РезультатЗакрытия = Новый Структура();
		//РезультатЗакрытия.Вставить("МассивЦФО", 				МассивЦФО);
		//РезультатЗакрытия.Вставить("СпособРасчетаАккруалов", 	ОК_ОбщегоНазначения.ПолучитьЗначениеУниверсальнойНастройки("НачислениеАккруалов", "СпособРасчетаАккруалов", 1));
		//РезультатЗакрытия.Вставить("КоличествоПотоков", 		ОК_ОбщегоНазначения.ПолучитьЗначениеУниверсальнойНастройки("НачислениеАккруалов", "КоличествоПотоков", 5));
		//
		//ПослеВыбораЦФО(РезультатЗакрытия);
		
		СписокЦФО = Новый СписокЗначений;
		СписокЦФО.ЗагрузитьЗначения(МассивЦФО);
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Список", СписокЦФО);
		
		Оповещение = Новый ОписаниеОповещения("ПослеВыбораЦФО", ЭтотОбъект);
		ОткрытьФорму("Обработка.ок_АРММенеджераПоКонтроллингу.Форма.ФормаВыбораЦФО", СтруктураПараметров, ЭтаФорма,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
		
	КонецЕсли;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-15 (#3914)
КонецПроцедуры

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-15 (#3914)
&НаКлиенте
Процедура ПослеВыбораЦФО(РезультатЗакрытия, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатЗакрытия = Неопределено 
		ИЛИ ТипЗнч(РезультатЗакрытия) <> Тип("Структура")
		ИЛИ НЕ РезультатЗакрытия.Свойство("МассивЦФО") Тогда
		Возврат;
	КонецЕсли; 
	
	Если ТипЗнч(РезультатЗакрытия.МассивЦФО) = Тип("Массив") Тогда
		МассивЦФО = РезультатЗакрытия.МассивЦФО;
	ИначеЕсли ТипЗнч(РезультатЗакрытия.МассивЦФО) = Тип("СписокЗначений") Тогда
		МассивЦФО = Новый Массив;
		Для каждого ЭлементСпискаЗначений Из РезультатЗакрытия.МассивЦФО Цикл
			Если НЕ ЭлементСпискаЗначений.Пометка Тогда
				Продолжить;
			КонецЕсли; 
			МассивЦФО.Добавить(ЭлементСпискаЗначений.Значение);
		КонецЦикла;
	Иначе
		Возврат;
	КонецЕсли; 
	
	Если МассивЦФО.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоУжеОбработано 				= 0;
	КоличествоВсего 						= МассивЦФО.Количество();
	НеобходимоОбновитьДинамическийСписок 	= Ложь;
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("КампанияПоНачислениюАккруалов", 	КампанияПоНачислениюАккруалов);
	СтруктураПараметров.Вставить("МассивЦФО",						МассивЦФО);
	
	Если РезультатЗакрытия.Свойство("СпособРасчетаАккруалов")
		И РезультатЗакрытия.Свойство("КоличествоПотоков")
		И РезультатЗакрытия.СпособРасчетаАккруалов = 1 Тогда
		
		СтруктураПараметров.Вставить("КоличествоПотоков", РезультатЗакрытия.КоличествоПотоков);
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-02 (#3969)
		//ок_НачислениеАккруалов.ЗапуститьРасчетАккруаловВФоне(СтруктураПараметров);
		//
		//НеобходимоОбновитьДинамическийСписок = Истина;
		
		//В форме объекта выполняется вызов этой функции в фоновом задании в три этапа:
		//1) запуск фонового задания на сервере,
		//2) подключение обработчика завершения фонового задания на клиенте,
		//3) обработка результата выполнения фонового задания.
		
		// 1. Запуск фонового задания на сервере.
		ДлительнаяОперация = ЗаполнитьРасчетАккруаловНаСервереВФоне(СтруктураПараметров);
	
		// 2. Подключение обработчика завершения фонового задания.
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ТекстСообщения = "Выполняется расчет аккруалов. (""" + КоличествоВсего + """ ЦФО, """ + РезультатЗакрытия.КоличествоПотоков + """ потоков)";
		ПараметрыОжидания.ВыводитьСообщения = Истина;
		ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
		ПараметрыОжидания.Интервал = 1;
	
		Оповещение = Новый ОписаниеОповещения("ПриЗавершенииРасчетаАккруалов", ЭтотОбъект, СтруктураПараметров);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
		
		Возврат;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-02 (#3969)
		
	Иначе
	
		Для каждого ЭлементМассива Из МассивЦФО Цикл
			
			ОбработкаПрерыванияПользователя();
			
			Состояние("" + КоличествоУжеОбработано + "/" + КоличествоВсего + " """ + ЭлементМассива + """.", Цел(КоличествоУжеОбработано / КоличествоВсего * 100));
			
			Попытка
				НеобходимоОбновитьДинамическийСписок = РассчитатьАккруалыПоЦФО(СтруктураПараметров, ЭлементМассива) ИЛИ НеобходимоОбновитьДинамическийСписок;
			Исключение
			    Состояние("Ошибка: " + ОписаниеОшибки(), Цел(КоличествоУжеОбработано / КоличествоВсего * 100));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: """ + ЭлементМассива + """ " + ОписаниеОшибки(), ЭлементМассива); 
			КонецПопытки; 
			
			Состояние("" + КоличествоУжеОбработано + "/" + КоличествоВсего + " """ + ЭлементМассива + """.", Цел(КоличествоУжеОбработано / КоличествоВсего * 100));

			КоличествоУжеОбработано = КоличествоУжеОбработано + 1;
			
		КонецЦикла; 
	
	КонецЕсли; 
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-02 (#3969)
	//НеобходимоОбновитьДинамическийСписок = ок_НачислениеАккруалов.ОбновитьСуммуНачислитьАккруал(КампанияПоНачислениюАккруалов) ИЛИ НеобходимоОбновитьДинамическийСписок;
	НеобходимоОбновитьДинамическийСписок = ок_НачислениеАккруалов.ОбновитьСуммуНачислитьАккруал(КампанияПоНачислениюАккруалов, МассивЦФО) ИЛИ НеобходимоОбновитьДинамическийСписок;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-02 (#3969)
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	//Если НеобходимоОбновитьДинамическийСписок Тогда
	//		
	//	ОбновитьЗаписиКампанииНаСервере();
	//
	//КонецЕсли; 
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
	ок_НачислениеАккруалов.УстановитьСтатусКампанииПоНачислениюАккруалов(КампанияПоНачислениюАккруалов, ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.РассчитаныАккруалы"));
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	//ОбновитьСправочнуюИнформациюПоКампании();
	УправлениеФормой();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Рассчет аккруалов выполнен");	
	
КонецПроцедуры

&НаСервере
Функция РассчитатьАккруалыПоЦФО(СтруктураПараметров, ЭлементМассива)
	
	Возврат ок_НачислениеАккруалов.РассчитатьАккруалыПоЦФО(СтруктураПараметров, ЭлементМассива);
	
КонецФункции
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-15 (#3914)

&НаСервере
Процедура РассчитатьАккруалыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(МесяцыНачисления.Ссылка) КАК МесяцНачисления,
		|	НачислениеАккруаловКонтроллинг.ФВБ КАК ФВБ,
		|	НачислениеАккруаловКонтроллинг.ЦФО КАК ЦФО,
		|	НачислениеАккруаловКонтроллинг.СтатьяОборотов КАК СтатьяОборотов,
		|	НачислениеАккруаловКонтроллинг.Объект КАК Объект,
		|	СоответствияАналитик.ЛеваяАналитика_1 КАК СчетМСФО,
		|	НачислениеАккруаловКонтроллинг.ИДСтроки КАК ИДСтроки
		|ПОМЕСТИТЬ ВТ_НачислениеАккруаловКонтроллинг
		|ИЗ
		|	РегистрСведений.ок_НачислениеАккруаловКонтроллинг КАК НачислениеАккруаловКонтроллинг
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СоответствияАналитик КАК СоответствияАналитик
		|		ПО (СоответствияАналитик.ВидСоответствия = &ВидСоответствия)
		|			И (СоответствияАналитик.ПраваяАналитика_1 = НачислениеАккруаловКонтроллинг.СтатьяОборотов)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.рс_МесяцыНачисления КАК МесяцыНачисления
		|		ПО НачислениеАккруаловКонтроллинг.ПериодКЗБ = МесяцыНачисления.Дата
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-16 (#3914)
		|			И НЕ МесяцыНачисления.ПометкаУдаления
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-16 (#3914)
		|ГДЕ
		|	НачислениеАккруаловКонтроллинг.Кампания = &Кампания
		|	И НачислениеАккруаловКонтроллинг.Обработано
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
		|	И НЕ СуммаПринятоУслугТоваровРаботБезНДС = 0
		|	И НЕ ГотовоКСозданиюДокумента
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
		|
		|СГРУППИРОВАТЬ ПО
		|	НачислениеАккруаловКонтроллинг.ЦФО,
		|	НачислениеАккруаловКонтроллинг.СтатьяОборотов,
		|	НачислениеАккруаловКонтроллинг.ФВБ,
		|	СоответствияАналитик.ЛеваяАналитика_1,
		|	НачислениеАккруаловКонтроллинг.Объект,
		|	НачислениеАккруаловКонтроллинг.ИДСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДвиженияССубконто.Организация КАК Организация,
		|	ДвиженияССубконто.Регистратор КАК Регистратор,
		|	ДвиженияССубконто.СчетДт КАК СчетДт,
		|	ВЫРАЗИТЬ(ДвиженияССубконто.СубконтоДт1 КАК Справочник.ОбъектыСтроительства) КАК Объект,
		|	ВЫРАЗИТЬ(ДвиженияССубконто.СубконтоДт2 КАК Справочник.Подразделения) КАК ЦФО,
		|	ВЫРАЗИТЬ(ДвиженияССубконто.СубконтоДт3 КАК Справочник.рс_МесяцыНачисления) КАК МесяцНачисления,
		|	СоответствияАналитик.ПраваяАналитика_1 КАК СтатьяОборотов,
		|	ДвиженияССубконто.СуммаРегл КАК СуммаРегл
		|ПОМЕСТИТЬ Т_Проводки
		|ИЗ
		|	РегистрБухгалтерии.бит_Дополнительный_2.ДвиженияССубконто(
		|			&НачалоПериода,
		|			КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ),
		|			Активность
		|				И СчетДт В ИЕРАРХИИ (&СчетМСФО_7)
		|				И (СуммаРегл <> 0
		|					ИЛИ СуммаУпр <> 0
		|					ИЛИ СуммаМУ <> 0)
		|				И (СубконтоДт1, СубконтоДт2, СубконтоДт3, СчетДт) В
		|					(ВЫБРАТЬ
		|						НачислениеАккруаловКонтроллинг.Объект,
		|						НачислениеАккруаловКонтроллинг.ЦФО,
		|						НачислениеАккруаловКонтроллинг.МесяцНачисления,
		|						НачислениеАккруаловКонтроллинг.СчетМСФО
		|					ИЗ
		|						ВТ_НачислениеАккруаловКонтроллинг КАК НачислениеАккруаловКонтроллинг
		|					СГРУППИРОВАТЬ ПО
		|						НачислениеАккруаловКонтроллинг.Объект,
		|						НачислениеАккруаловКонтроллинг.ЦФО,
		|						НачислениеАккруаловКонтроллинг.МесяцНачисления,
		|						НачислениеАккруаловКонтроллинг.СчетМСФО),
		|			,
		|			) КАК ДвиженияССубконто
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СоответствияАналитик КАК СоответствияАналитик
		|		ПО (СоответствияАналитик.ВидСоответствия = &ВидСоответствия)
		|			И (СоответствияАналитик.ЛеваяАналитика_1 = ДвиженияССубконто.СчетДт)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	рс_АккруалПоID.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(рс_АккруалПоID.ID, 5, 1) <> ""-""
		|			ТОГДА рс_АккруалПоID.ID
		|		ИНАЧЕ ПОДСТРОКА(рс_АккруалПоID.ID, 1, 4) + ПОДСТРОКА(рс_АккруалПоID.ID, 6, 4)
		|	КОНЕЦ КАК ID_Разноски
		|ПОМЕСТИТЬ АккруалыИСторноЭУ
		|ИЗ
		|	Документ.рс_АккруалПоID КАК рс_АккруалПоID
		|ГДЕ
		|	рс_АккруалПоID.Ссылка В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				Т_Проводки.Регистратор
		|			ИЗ
		|				Т_Проводки КАК Т_Проводки)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	рс_СторноЭУ.Ссылка,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(рс_СторноЭУ.ID, 5, 1) <> ""-""
		|			ТОГДА рс_СторноЭУ.ID
		|		ИНАЧЕ ПОДСТРОКА(рс_СторноЭУ.ID, 1, 4) + ПОДСТРОКА(рс_СторноЭУ.ID, 6, 4)
		|	КОНЕЦ
		|ИЗ
		|	Документ.рс_СторноЭУ КАК рс_СторноЭУ
		|ГДЕ
		|	рс_СторноЭУ.Ссылка В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				Т_Проводки.Регистратор
		|			ИЗ
		|				Т_Проводки КАК Т_Проводки)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Т_Проводки.Регистратор КАК Документ,
		|	ВЫБОР
		|		КОГДА АккруалыИСторноЭУ.ID_Разноски ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА ПОДСТРОКА(ЕСТЬNULL(рс_ДокументыПоID.ID, Т_Проводки.Регистратор.ОК_ID_Разноска), 5, 1) <> ""-""
		|						ТОГДА ЕСТЬNULL(рс_ДокументыПоID.ID, Т_Проводки.Регистратор.ОК_ID_Разноска)
		|					ИНАЧЕ ПОДСТРОКА(ЕСТЬNULL(рс_ДокументыПоID.ID, Т_Проводки.Регистратор.ОК_ID_Разноска), 1, 4) + ПОДСТРОКА(ЕСТЬNULL(рс_ДокументыПоID.ID, Т_Проводки.Регистратор.ОК_ID_Разноска), 6, 4)
		|				КОНЕЦ
		|		ИНАЧЕ АккруалыИСторноЭУ.ID_Разноски
		|	КОНЕЦ КАК ID_Разноски
		|ПОМЕСТИТЬ Т_ID
		|ИЗ
		|	Т_Проводки КАК Т_Проводки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.рс_ДокументыПоID КАК рс_ДокументыПоID
		|		ПО Т_Проводки.Регистратор = рс_ДокументыПоID.Документ
		|			И (рс_ДокументыПоID.Активность)
		|		ЛЕВОЕ СОЕДИНЕНИЕ АккруалыИСторноЭУ КАК АккруалыИСторноЭУ
		|		ПО Т_Проводки.Регистратор = АккруалыИСторноЭУ.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Документ,
		|	ID_Разноски
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	НачислениеАккруаловКонтроллинг.ИДСтроки КАК ИДСтроки,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-11 (#3822)
		|	НачислениеАккруаловКонтроллинг.МесяцНачисления КАК МесяцНачисления,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-11 (#3822)
		|	ВЫРАЗИТЬ(КЗБ.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета) КАК ФВБ,
		|	КЗБ.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ Т_КЗБ
		|ИЗ
		|	ВТ_НачислениеАккруаловКонтроллинг КАК НачислениеАккруаловКонтроллинг
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов КАК КЗБ
		|		ПО (КЗБ.Аналитика_1 = НачислениеАккруаловКонтроллинг.ФВБ)
		|ГДЕ
		|	КЗБ.Активность
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т_КЗБ.ФВБ КАК ФВБ,
		|	Т_КЗБ.ИДСтроки КАК ИДСтроки,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-11 (#3822)
		|	Т_КЗБ.МесяцНачисления КАК МесяцНачисления,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-11 (#3822)
		|	ПоступлениеТоваровУслуг.Ссылка КАК Регистратор,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(ЕСТЬNULL(ПоступлениеТоваровУслуг.ОК_ID_Разноска, """"), 5, 1) <> ""-""
		|			ТОГДА ЕСТЬNULL(ПоступлениеТоваровУслуг.ОК_ID_Разноска, """")
		|		ИНАЧЕ ПОДСТРОКА(ЕСТЬNULL(ПоступлениеТоваровУслуг.ОК_ID_Разноска, """"), 1, 4) + ПОДСТРОКА(ЕСТЬNULL(ПоступлениеТоваровУслуг.ОК_ID_Разноска, """"), 6, 4)
		|	КОНЕЦ КАК ID_Разноски
		|ПОМЕСТИТЬ Т_КЗБ_ID
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Т_КЗБ КАК Т_КЗБ
		|		ПО (Т_КЗБ.Регистратор = ПоступлениеТоваровУслуг.Ссылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т_КЗБ.ФВБ,
		|	Т_КЗБ.ИДСтроки,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-11 (#3822)
		|	Т_КЗБ.МесяцНачисления,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-11 (#3822)
		|	бит_ок_ОперацияАксапты.Ссылка,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(ЕСТЬNULL(бит_ок_ОперацияАксапты.ОК_ID_Разноска, """"), 5, 1) <> ""-""
		|			ТОГДА ЕСТЬNULL(бит_ок_ОперацияАксапты.ОК_ID_Разноска, """")
		|		ИНАЧЕ ПОДСТРОКА(ЕСТЬNULL(бит_ок_ОперацияАксапты.ОК_ID_Разноска, """"), 1, 4) + ПОДСТРОКА(ЕСТЬNULL(бит_ок_ОперацияАксапты.ОК_ID_Разноска, """"), 6, 4)
		|	КОНЕЦ
		|ИЗ
		|	Документ.бит_ок_ОперацияАксапты КАК бит_ок_ОперацияАксапты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Т_КЗБ КАК Т_КЗБ
		|		ПО (Т_КЗБ.Регистратор = бит_ок_ОперацияАксапты.Ссылка)
		|
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-12-18 (#ПроектИнтеграцияАксапта12)
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т_КЗБ.ФВБ,
		|	Т_КЗБ.ИДСтроки,
		|	Т_КЗБ.МесяцНачисления,
		|	бит_ок_ОперацияАксапты.Ссылка,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(ЕСТЬNULL(бит_ок_ОперацияАксапты.ОК_ID_Разноска, """"), 5, 1) <> ""-""
		|			ТОГДА ЕСТЬNULL(бит_ок_ОперацияАксапты.ОК_ID_Разноска, """")
		|		ИНАЧЕ ПОДСТРОКА(ЕСТЬNULL(бит_ок_ОперацияАксапты.ОК_ID_Разноска, """"), 1, 4) + ПОДСТРОКА(ЕСТЬNULL(бит_ок_ОперацияАксапты.ОК_ID_Разноска, """"), 6, 4)
		|	КОНЕЦ
		|ИЗ
		|	Документ.бит_ок_ОперацияАксапты12 КАК бит_ок_ОперацияАксапты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Т_КЗБ КАК Т_КЗБ
		|		ПО (Т_КЗБ.Регистратор = бит_ок_ОперацияАксапты.Ссылка)
		|
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-12-18 (#ПроектИнтеграцияАксапта12)
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т_КЗБ.ФВБ,
		|	Т_КЗБ.ИДСтроки,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-11 (#3822)
		|	Т_КЗБ.МесяцНачисления,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-11 (#3822)
		|	бит_БюджетнаяОперация.Ссылка,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(ЕСТЬNULL(бит_БюджетнаяОперация.ОК_ID_Разноска, """"), 5, 1) <> ""-""
		|			ТОГДА ЕСТЬNULL(бит_БюджетнаяОперация.ОК_ID_Разноска, """")
		|		ИНАЧЕ ПОДСТРОКА(ЕСТЬNULL(бит_БюджетнаяОперация.ОК_ID_Разноска, """"), 1, 4) + ПОДСТРОКА(ЕСТЬNULL(бит_БюджетнаяОперация.ОК_ID_Разноска, """"), 6, 4)
		|	КОНЕЦ
		|ИЗ
		|	Документ.бит_БюджетнаяОперация КАК бит_БюджетнаяОперация
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Т_КЗБ КАК Т_КЗБ
		|		ПО (Т_КЗБ.Регистратор = бит_БюджетнаяОперация.Ссылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т_КЗБ.ФВБ,
		|	Т_КЗБ.ИДСтроки,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-11 (#3822)
		|	Т_КЗБ.МесяцНачисления,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-11 (#3822)
		|	ПоступлениеНМА.Ссылка,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(ЕСТЬNULL(ПоступлениеНМА.ОК_ID_Разноска, """"), 5, 1) <> ""-""
		|			ТОГДА ЕСТЬNULL(ПоступлениеНМА.ОК_ID_Разноска, """")
		|		ИНАЧЕ ПОДСТРОКА(ЕСТЬNULL(ПоступлениеНМА.ОК_ID_Разноска, """"), 1, 4) + ПОДСТРОКА(ЕСТЬNULL(ПоступлениеНМА.ОК_ID_Разноска, """"), 6, 4)
		|	КОНЕЦ
		|ИЗ
		|	Документ.ПоступлениеНМА КАК ПоступлениеНМА
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Т_КЗБ КАК Т_КЗБ
		|		ПО (Т_КЗБ.Регистратор = ПоступлениеНМА.Ссылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т_КЗБ.ФВБ,
		|	Т_КЗБ.ИДСтроки,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-11 (#3822)
		|	Т_КЗБ.МесяцНачисления,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-11 (#3822)
		|	ПоступлениеДопРасходов.Ссылка,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(ЕСТЬNULL(ПоступлениеДопРасходов.ОК_ID_Разноска, """"), 5, 1) <> ""-""
		|			ТОГДА ЕСТЬNULL(ПоступлениеДопРасходов.ОК_ID_Разноска, """")
		|		ИНАЧЕ ПОДСТРОКА(ЕСТЬNULL(ПоступлениеДопРасходов.ОК_ID_Разноска, """"), 1, 4) + ПОДСТРОКА(ЕСТЬNULL(ПоступлениеДопРасходов.ОК_ID_Разноска, """"), 6, 4)
		|	КОНЕЦ
		|ИЗ
		|	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Т_КЗБ КАК Т_КЗБ
		|		ПО (Т_КЗБ.Регистратор = ПоступлениеДопРасходов.Ссылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т_КЗБ.ФВБ,
		|	Т_КЗБ.ИДСтроки,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-11 (#3822)
		|	Т_КЗБ.МесяцНачисления,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-11 (#3822)
		|	ОперацияБух.Ссылка,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(ЕСТЬNULL(ОперацияБух.ОК_ID_Разноска, """"), 5, 1) <> ""-""
		|			ТОГДА ЕСТЬNULL(ОперацияБух.ОК_ID_Разноска, """")
		|		ИНАЧЕ ПОДСТРОКА(ЕСТЬNULL(ОперацияБух.ОК_ID_Разноска, """"), 1, 4) + ПОДСТРОКА(ЕСТЬNULL(ОперацияБух.ОК_ID_Разноска, """"), 6, 4)
		|	КОНЕЦ
		|ИЗ
		|	Документ.ОперацияБух КАК ОперацияБух
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Т_КЗБ КАК Т_КЗБ
		|		ПО (Т_КЗБ.Регистратор = ОперацияБух.Ссылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т_КЗБ.ФВБ,
		|	Т_КЗБ.ИДСтроки,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-11 (#3822)
		|	Т_КЗБ.МесяцНачисления,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-11 (#3822)
		|	КорректировкаПоступления.Ссылка,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(ЕСТЬNULL(КорректировкаПоступления.ОК_ID_Разноска, """"), 5, 1) <> ""-""
		|			ТОГДА ЕСТЬNULL(КорректировкаПоступления.ОК_ID_Разноска, """")
		|		ИНАЧЕ ПОДСТРОКА(ЕСТЬNULL(КорректировкаПоступления.ОК_ID_Разноска, """"), 1, 4) + ПОДСТРОКА(ЕСТЬNULL(КорректировкаПоступления.ОК_ID_Разноска, """"), 6, 4)
		|	КОНЕЦ
		|ИЗ
		|	Документ.КорректировкаПоступления КАК КорректировкаПоступления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Т_КЗБ КАК Т_КЗБ
		|		ПО (Т_КЗБ.Регистратор = КорректировкаПоступления.Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Т_КЗБ_ID.ФВБ КАК ФВБ,
		|	Т_КЗБ_ID.ИДСтроки КАК ИДСтроки,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-11 (#3822)
		|	Т_КЗБ_ID.МесяцНачисления КАК МесяцНачисления,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-11 (#3822)
		|	Т_КЗБ_ID.Регистратор КАК Регистратор,
		|	Т_КЗБ_ID.ID_Разноски КАК ID_Разноски
		|ПОМЕСТИТЬ Т_НЗ
		|ИЗ
		|	Т_ID КАК Т_ID
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Т_КЗБ_ID КАК Т_КЗБ_ID
		|		ПО Т_ID.ID_Разноски = Т_КЗБ_ID.ID_Разноски
		|ГДЕ
		|	Т_ID.ID_Разноски <> """"
		|	И ПОДСТРОКА(Т_ID.ID_Разноски, 1, 1) <> "" ""
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФВБ,
		|	ID_Разноски
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Т_ID.Документ КАК Регистратор,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-11 (#3822)
		|	Т_НЗ.МесяцНачисления КАК МесяцНачисления,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-11 (#3822)
		|	Т_НЗ.ИДСтроки КАК ИДСтроки,
		|	Т_ID.ID_Разноски КАК ID_Разноски,
		|	ЕСТЬNULL(Т_НЗ.ФВБ, ДанныеПоОА.НомерЗаявки) КАК ФВБ
		|ПОМЕСТИТЬ Т_Итоговая_ID_НЗ
		|ИЗ
		|	Т_ID КАК Т_ID
		|		ЛЕВОЕ СОЕДИНЕНИЕ Т_НЗ КАК Т_НЗ
		|		ПО Т_ID.ID_Разноски = Т_НЗ.ID_Разноски
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ДополнительныеДанныеПоОперациямАксапты КАК ДанныеПоОА
		|		ПО Т_ID.Документ = ДанныеПоОА.Документ
		|			И (ДанныеПоОА.НомерЗаявки В
		|				(ВЫБРАТЬ
		|					НачислениеАккруаловКонтроллинг.ФВБ
		|				ИЗ
		|					ВТ_НачислениеАккруаловКонтроллинг КАК НачислениеАккруаловКонтроллинг))
		|ГДЕ
		|	Т_ID.ID_Разноски <> """"
		|	И ПОДСТРОКА(Т_ID.ID_Разноски, 1, 1) <> "" ""
		|	И НЕ ЕСТЬNULL(Т_НЗ.ФВБ, ДанныеПоОА.НомерЗаявки) ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т_Итоговая_ID_НЗ.ФВБ КАК ФВБ,
		|	Т_Итоговая_ID_НЗ.ИДСтроки КАК ИДСтроки,
		|	Т_Проводки.ЦФО КАК ЦФО,
		|	Т_Проводки.СтатьяОборотов КАК СтатьяОборотов,
		|	Т_Проводки.Объект КАК Объект,
		|	СУММА(Т_Проводки.СуммаРегл) КАК СуммаРегл
		|ИЗ
		|	Т_Проводки КАК Т_Проводки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Т_Итоговая_ID_НЗ КАК Т_Итоговая_ID_НЗ
		|		ПО Т_Проводки.Регистратор = Т_Итоговая_ID_НЗ.Регистратор
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-11 (#3822)
		|			И Т_Проводки.МесяцНачисления = Т_Итоговая_ID_НЗ.МесяцНачисления
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-11 (#3822)
		|ГДЕ
		|	НЕ Т_Итоговая_ID_НЗ.ФВБ ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	Т_Проводки.ЦФО,
		|	Т_Итоговая_ID_НЗ.ИДСтроки,
		|	Т_Проводки.СтатьяОборотов,
		|	Т_Проводки.Объект,
		|	Т_Итоговая_ID_НЗ.ФВБ";
	
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоМесяца(ДобавитьМесяц(КампанияПоНачислениюАккруалов.ПериодКампании.Дата, -24)));
	Запрос.УстановитьПараметр("КонецПериода",	КонецМесяца(КампанияПоНачислениюАккруалов.ПериодКампании.Дата));
	Запрос.УстановитьПараметр("СчетМСФО_7",		ПредопределенноеЗначение("ПланСчетов.бит_Дополнительный_2.Расходы"));
	Запрос.УстановитьПараметр("ВидСоответствия",ПредопределенноеЗначение("Справочник.бит_ВидыСоответствийАналитик.СчетМСФО_СтатьяОборотов"));
	Запрос.УстановитьПараметр("Кампания",		КампанияПоНачислениюАккруалов);
	
	НеобходимоОбновитьДинамическийСписок = Ложь;
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.ок_НачислениеАккруаловКонтроллинг.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.Кампания.Установить(КампанияПоНачислениюАккруалов);
		НаборЗаписей.Отбор.ФВБ.Установить(ВыборкаДетальныеЗаписи.ФВБ);
		НаборЗаписей.Отбор.ЦФО.Установить(ВыборкаДетальныеЗаписи.ЦФО);
		НаборЗаписей.Отбор.СтатьяОборотов.Установить(ВыборкаДетальныеЗаписи.СтатьяОборотов);
		НаборЗаписей.Отбор.Объект.Установить(ВыборкаДетальныеЗаписи.Объект);
		НаборЗаписей.Отбор.ИДСтроки.Установить(ВыборкаДетальныеЗаписи.ИДСтроки);
		НаборЗаписей.Прочитать();
		
		БылоИзменениеВРегистре = Ложь;
		Для каждого ТекущаяЗапись Из НаборЗаписей Цикл
			
			БылоИзменениеВЗаписи = Ложь;
			
			Если ТекущаяЗапись.ПроведеноВМСФО <> ВыборкаДетальныеЗаписи.СуммаРегл Тогда
				
				ТекущаяЗапись.ПроведеноВМСФО 	= ВыборкаДетальныеЗаписи.СуммаРегл;
				БылоИзменениеВРегистре 			= Истина;
				БылоИзменениеВЗаписи 			= Истина;
				
			КонецЕсли;
			
			Если БылоИзменениеВЗаписи Тогда
				ТекущаяЗапись.ДатаИзменения = ТекущаяДата();
				ТекущаяЗапись.Ответственный = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
			КонецЕсли; 
			
		КонецЦикла;
		
		Если БылоИзменениеВРегистре Тогда
			
			НаборЗаписей.Записать();
			НеобходимоОбновитьДинамическийСписок = Истина;
		
		КонецЕсли; 
		
	КонецЦикла;
	
	НеобходимоОбновитьДинамическийСписок = ок_НачислениеАккруалов.ОбновитьСуммуНачислитьАккруал(КампанияПоНачислениюАккруалов) ИЛИ НеобходимоОбновитьДинамическийСписок;
	
	Если НеобходимоОбновитьДинамическийСписок Тогда
			
		ОбновитьЗаписиКампанииНаСервере();
	
	КонецЕсли; 
	
	ок_НачислениеАккруалов.УстановитьСтатусКампанииПоНачислениюАккруалов(КампанияПоНачислениюАккруалов, ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.РассчитаныАккруалы"));
	
	ОбновитьСправочнуюИнформациюПоКампании();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьДокументАккруалБезID(Команда)
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
	//КомандаСоздатьДокументАккруалБезIDНаСервере();
	СоздатьДокументАккруалБезIDВФоне();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
КонецПроцедуры

&НаСервере
Процедура КомандаСоздатьДокументАккруалБезIDНаСервере()
	
	Если ок_НачислениеАккруалов.ПолучитьСтатусКампанииПоНачислениюАккруалов(КампанияПоНачислениюАккруалов) <> ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.РассчитаныАккруалы") Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для создания документа ""Аккруал без ID"" кампания должна быть в статусе ""Рассчитаны аккруалы"".");
		Возврат;
	
	КонецЕсли; 
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-24 (#3822)
	Если НЕ ок_НачислениеАккруалов.ПроверитьЗаписиКампанииКСозданиюДокумента(КампанияПоНачислениюАккруалов) Тогда
	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для создания документа ""Аккруал без ID"" все обработанные записи кампания должны быть с признаком ""Готово к созданию документа"".");
		Возврат;
	
	КонецЕсли; 
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-24 (#3822)
	
	ок_НачислениеАккруалов.ЗаполнитьНачислениеАккруаловМСФО(КампанияПоНачислениюАккруалов);
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-21 (#3822)
	//ок_НачислениеАккруалов.СоздатьДокументАккруалБезID(КампанияПоНачислениюАккруалов);
	СтруктураДополнительныхПараметров = новый Структура();
	СтруктураДополнительныхПараметров.Вставить("Организация", ОрганизацияПоУмолчанию);
	ок_НачислениеАккруалов.СоздатьДокументАккруалБезID(КампанияПоНачислениюАккруалов, СтруктураДополнительныхПараметров);
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-21 (#3822)
	
	ОбновитьЗаписиКампанииНаСервере();
	ОбновитьСправочнуюИнформациюПоКампании();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеПоКЗБ(Команда)
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
	//ОбновитьДанныеПоКЗБНаСервере();
	ОбновитьДанныеПоКЗБВФоне();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
	
КонецПроцедуры

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-18 (#3822)
//&НаКлиенте
//Процедура ОтметитьКакОбработанные(Команда)
//	
//	Если Элементы.ЗаписиКампании.ВыделенныеСтроки.Количество() = 0 Тогда
//		Возврат;
//	КонецЕсли; 
//	
//	МассивСтрокДляОбработки = ПолучитьМассивСтрокДляОбработки("Обработано");
//	
//	СтруктураПараметров = Новый Структура();
//	СтруктураПараметров.Вставить("МассивСтрокДляОбработки", МассивСтрокДляОбработки);
//	
//	ЗаписиКампанииВыборПослеВводаЗначенияНаСервереМассивСтрок(Истина, СтруктураПараметров);
//	
//	ОбновитьЗаписиКампанииНаСервере();
//	ОбновитьСправочнуюИнформациюПоКампании();
//	
//КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометку(Команда)
	
	ИзменитьПометку(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометку(Команда)
	
	ИзменитьПометку(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПометку(Пометка = Истина)
	
	Если Элементы.ЗаписиКампании.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ (ТипЗнч(Элементы.ЗаписиКампании.ТекущийЭлемент) = Тип("ПолеФормы")
		И (Элементы.ЗаписиКампании.ТекущийЭлемент.Имя = "ЗаписиКампанииПередатьИнициатору"
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-24 (#3822)
			ИЛИ Элементы.ЗаписиКампании.ТекущийЭлемент.Имя = "ЗаписиКампанииГотовоКСозданиюДокумента"
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-24 (#3822)
			ИЛИ Элементы.ЗаписиКампании.ТекущийЭлемент.Имя = "ЗаписиКампанииОбработано")) Тогда
		Возврат;
	КонецЕсли; 
	
	ИмяПоля = СтрЗаменить(Элементы.ЗаписиКампании.ТекущийЭлемент.Имя, "ЗаписиКампании","");
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-24 (#3969)
	//МассивСтрокДляОбработки = ПолучитьМассивСтрокДляОбработки(ИмяПоля);
	//
	//СтруктураПараметров = Новый Структура();
	//СтруктураПараметров.Вставить("МассивСтрокДляОбработки", МассивСтрокДляОбработки);
	//
	//ЗаписиКампанииВыборПослеВводаЗначенияНаСервереМассивСтрок(Пометка, СтруктураПараметров);
	//
	//ОбновитьЗаписиКампанииНаСервере();
	//ОбновитьСправочнуюИнформациюПоКампании();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	Если Элементы.ЗаписиКампании.ВыделенныеСтроки.Количество() > 20 Тогда
	
		ИзменитьПометкуВФоне(ИмяПоля, Пометка);
		
	Иначе
		
		МассивСтрокДляОбработки = ПолучитьМассивСтрокДляОбработки(ИмяПоля);
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("МассивСтрокДляОбработки", МассивСтрокДляОбработки);
		
		ЗаписиКампанииВыборПослеВводаЗначенияНаСервереМассивСтрок(Пометка, СтруктураПараметров);
		
		УправлениеФормой();
		
	КонецЕсли; 
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-24 (#3969)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаменаИнициатора(Команда)
	
	Если Элементы.ЗаписиКампании.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ИмяПоля = "ЗамещающийИнициатор";
	МассивСтрокДляОбработки = ПолучитьМассивСтрокДляОбработки(ИмяПоля);
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("МассивСтрокДляОбработки", МассивСтрокДляОбработки);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаписиКампанииВыборПослеВводаЗначения", ЭтотОбъект, СтруктураПараметров);
	
	ПоказатьВводЗначения(ОписаниеОповещения, ПредопределенноеЗначение("Справочник.бит_БК_Инициаторы.ПустаяСсылка"), "Укажите замещающего инициатора:", Тип("СправочникСсылка.бит_БК_Инициаторы"));
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОтчет_КонтрольныеЗначенияБюджетовНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	КомандаОтчет_КонтрольныеЗначенияБюджетов(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОтчет_ОтчетПоПроводкамМСФОНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	КомандаОтчет_ОтчетПоПроводкамМСФО(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОтчет_ДляМенеджераПоКонтроллингуНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	КомандаОтчет_ДляМенеджераПоКонтроллингу(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВнестиКомментарий(Команда)
	
	Если Элементы.ЗаписиКампании.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ИмяПоля = "Комментарий";
	МассивСтрокДляОбработки = ПолучитьМассивСтрокДляОбработки(ИмяПоля);
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("МассивСтрокДляОбработки", МассивСтрокДляОбработки);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаписиКампанииВыборПослеВводаЗначения", ЭтотОбъект, СтруктураПараметров);
	
	ПоказатьВводСтроки(ОписаниеОповещения, "",, 250, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаВыделенныхСтрокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РассчитатьСуммуВыделенныхСтрок();
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-18 (#3822)

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
&НаКлиенте
Процедура КомандаВнестиСумму(Команда)
	
	Если Элементы.ЗаписиКампании.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ИмяПоля = "СуммаПринятоУслугТоваровРаботБезНДС";
	МассивСтрокДляОбработки = ПолучитьМассивСтрокДляОбработки(ИмяПоля);
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("МассивСтрокДляОбработки", МассивСтрокДляОбработки);
	
	Оповещение = Новый ОписаниеОповещения("ЗаписиКампанииВнестиСуммуЗакрытие", ЭтаФорма, СтруктураПараметров);
	
	СтруктураПараметровВыделенныхСтрок = ПолучитьСтруктуруПараметровВыделенныхСтрок();
	
	ОткрытьФорму("ОбщаяФорма.ок_ФормаВводаСуммы", СтруктураПараметровВыделенныхСтрок, ЭтаФорма, ,,,Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаГотовоКСозданиюДокумента(Команда)
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	//КомандаГотовоКСозданиюДокументаНаСервере();
	БылоИзменениеВРегистре = КомандаГотовоКСозданиюДокументаНаСервере();
	Если БылоИзменениеВРегистре Тогда
		УправлениеФормой();
	КонецЕсли; 
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
КонецПроцедуры

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
//&НаСервере
//Процедура КомандаГотовоКСозданиюДокументаНаСервере()
&НаСервере
Функция КомандаГотовоКСозданиюДокументаНаСервере()
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)

	БылоИзменениеВРегистре = Ложь;
	
	НаборЗаписей = РегистрыСведений.ок_НачислениеАккруаловКонтроллинг.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Кампания.Установить(КампанияПоНачислениюАккруалов);
	НаборЗаписей.Прочитать();
	
	Для каждого ТекущаяЗапись Из НаборЗаписей Цикл
	
		Если НЕ ТекущаяЗапись.ГотовоКСозданиюДокумента
			И ТекущаяЗапись.Обработано
			И (ОтветственныйЗаКампанию
				ИЛИ СписокЦФОМенеджераПоКонтроллингу.НайтиПоЗначению(ТекущаяЗапись.ЦФО) <> Неопределено) Тогда
		
			ТекущаяЗапись.ГотовоКСозданиюДокумента = Истина;
			БылоИзменениеВРегистре = Истина;
			
		КонецЕсли; 
	
	КонецЦикла;
	
//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
//	Если БылоИзменениеВРегистре Тогда
//		НаборЗаписей.Записать(Истина);
//		ОбновитьЗаписиКампанииНаСервере();
//	КонецЕсли; 
//	
//	ОбновитьСправочнуюИнформациюПоКампании();
//	
//КонецПроцедуры

	Если БылоИзменениеВРегистре Тогда
	
		НаборЗаписей.Записать(Истина);
	
	КонецЕсли; 

	Возврат БылоИзменениеВРегистре;

КонецФункции
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-08 (#4321)
&НаКлиенте
Процедура ПланировщикГрафиковПоДоговорам(Команда)
	ОткрытьФорму("Обработка.ок_ПланировщикГрафиковПоДоговорам.Форма.Форма");
КонецПроцедуры
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-08 (#4321) 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УправлениеФормой()
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	Если ТипЗнч(ТекущийЭлемент) = Тип("ТаблицаФормы")
		И ТекущийЭлемент.Имя = "КонтрольныеЗначенияБюджетовКомпоновщикНастроекНастройкиОтбор" Тогда
		
		пАктивноеОкно = АктивноеОкно();
		Если ТипЗнч(пАктивноеОкно) = Тип("ОкноКлиентскогоПриложения")
			И СтрНайти(пАктивноеОкно.Заголовок, "Редактирование отбора") <> 0 Тогда
			
			Возврат;
			
		КонецЕсли; 
		
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("КампанияПоНачислениюАккруалов", 	 КампанияПоНачислениюАккруалов);
	СтруктураПараметров.Вставить("ОтветственныйЗаКампанию",			 ОтветственныйЗаКампанию);
	СтруктураПараметров.Вставить("СписокЦФОМенеджераПоКонтроллингу", СписокЦФОМенеджераПоКонтроллингу);
	СправочнаяИнформациюПоКампании = ок_НачислениеАккруалов.ПолучитьСправочнуюИнформациюПоКампании(СтруктураПараметров);
	
	ОбновитьСправочнуюИнформациюПоКампанииНаКлиенте(СправочнаяИнформациюПоКампании);
	
	Если НЕ ЗначениеЗаполнено(КампанияПоНачислениюАккруалов) Тогда
		
		Элементы.Заполнить.Доступность 			= Истина;
		Элементы.СтартКампании.Доступность 		= Ложь;
		Элементы.ЗавершитьКампанию.Доступность 	= Ложь;
		Элементы.РассчитатьАккруалы.Доступность = Ложь;
		
	Иначе
		
		Элементы.Заполнить.Доступность 			= НЕ ЗначениеЗаполнено(СтатусКампании) ИЛИ СтатусКампании = ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.Черновик");
		Элементы.СтартКампании.Доступность 		= СтатусКампании = ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.Черновик");
		Элементы.ЗавершитьКампанию.Доступность 	= СтатусКампании = ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.ОткрытаДляИнициаторов");
		Элементы.РассчитатьАккруалы.Доступность	= НЕ Элементы.СтартКампании.Доступность И НЕ Элементы.ЗавершитьКампанию.Доступность;
		
		Элементы.ВключениеДляКомпанииАвтооповещений.Доступность = НЕ ЗначениеЗаполнено(СтатусКампании)
																ИЛИ СтатусКампании = ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.Черновик")
																ИЛИ СтатусКампании = ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.ОткрытаДляИнициаторов");
		Элементы.ПредставлениеРасписания.Доступность 			= НЕ ЗначениеЗаполнено(СтатусКампании)
																ИЛИ СтатусКампании = ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.Черновик")
																ИЛИ СтатусКампании = ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.ОткрытаДляИнициаторов");
		
	КонецЕсли;
															
	ОбновитьЗаписиКампанииНаКлиенте();
															
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормойНаСервере()
	
	Элементы.ПредставлениеРасписания.Доступность = ВключитьДляКампанииАвтооповещение;
	Элементы.ГруппаНастройки.Видимость 			= ОтветственныйЗаКампанию;
	Элементы.ГруппаЭтапы.Видимость 				= ОтветственныйЗаКампанию;
	Элементы.ОбновитьДанныеПоКЗБ.Видимость 		= ОтветственныйЗаКампанию;
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-01 (#3969)
	Если Элементы.Найти("ЗаписиКампанииКонтекстноеМенюУдалить") <> Неопределено Тогда
		Элементы.ЗаписиКампанииКонтекстноеМенюУдалить.Видимость = ОтветственныйЗаКампанию;
	КонецЕсли;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-01 (#3969)
	
	УстановитьПредставлениеРасписания(ЭтотОбъект);
	
	ЗаписиКампании.Параметры.УстановитьЗначениеПараметра("Кампания", 						 КампанияПоНачислениюАккруалов);
	ЗаписиКампании.Параметры.УстановитьЗначениеПараметра("ОтветственныйЗаКампанию", 		 ОтветственныйЗаКампанию);
	ЗаписиКампании.Параметры.УстановитьЗначениеПараметра("СписокЦФОМенеджераПоКонтроллингу", СписокЦФОМенеджераПоКонтроллингу);
	ЗаписиКампании.Параметры.УстановитьЗначениеПараметра("ПоказатьРасхождения", 			 Элементы.ЗаписиКампанииПоказатьРасхождения.Пометка);
	
	ОбновитьЗаписиКампанииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиПользователя();
	
	СтруктураСохраняемыхНастроек = Новый Структура();
	СтруктураСохраняемыхНастроек.Вставить("НастройкиСКД", 			КонтрольныеЗначенияБюджетов.КомпоновщикНастроек.ПользовательскиеНастройки);
	//СтруктураСохраняемыхНастроек.Вставить("ДатаЗаявки", 			ДатаЗаявки);
	СтруктураСохраняемыхНастроек.Вставить("ПериодаКЗБ", 			ПериодаКЗБ);
	СтруктураСохраняемыхНастроек.Вставить("ОтчетПоПроводкамМСФО", 	ОтчетПоПроводкамМСФО);
	
	ХранилищеПользовательскихНастроекОтчетов.Сохранить("ок_АРММенеджераПоКонтроллингу", "Основная", СтруктураСохраняемыхНастроек, , ПользователиСлужебный.АвторизованныйПользователь().Наименование);

КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиПользователя();
	
	Отбор = Новый Структура();
	Отбор.Вставить("КлючОбъекта", 	"ок_АРММенеджераПоКонтроллингу");
	Отбор.Вставить("КлючНастройки", "Основная");
	Отбор.Вставить("Пользователь", 	ПользователиСлужебный.АвторизованныйПользователь().Наименование);
	Настройки = ХранилищеПользовательскихНастроекОтчетов.Выбрать(Отбор);
	
	Если Настройки.Следующий()
		И ТипЗнч(Настройки.Настройки) = Тип("Структура") Тогда
		
		Если Настройки.Настройки.Свойство("НастройкиСКД")
			И ТипЗнч(Настройки.Настройки.НастройкиСКД) = Тип("ПользовательскиеНастройкиКомпоновкиДанных") Тогда
			КонтрольныеЗначенияБюджетов.КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(Настройки.Настройки.НастройкиСКД);
		КонецЕсли;
		
		//Если Настройки.Настройки.Свойство("ДатаЗаявки")
		//	И ТипЗнч(Настройки.Настройки.ДатаЗаявки) = Тип("СтандартныйПериод") Тогда
		//	ДатаЗаявки = Настройки.Настройки.ДатаЗаявки;
		//КонецЕсли;
		
		//Если Настройки.Настройки.Свойство("ПериодаКЗБ")
		//	И ТипЗнч(Настройки.Настройки.ПериодаКЗБ) = Тип("СтандартныйПериод") Тогда
		//	ПериодаКЗБ = Настройки.Настройки.ПериодаКЗБ;
		//КонецЕсли;
		
		Если Настройки.Настройки.Свойство("ОтчетПоПроводкамМСФО") Тогда
			ОтчетПоПроводкамМСФО = Настройки.Настройки.ОтчетПоПроводкамМСФО;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКампаниюПоНачислениюАккруалов()
	
	КампанияПоНачислениюАккруалов = ок_НачислениеАккруалов.ПолучитьКампаниюПоНачислениюАккруалов(ПериодКампании);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьНаличиеОткрытойКампанииПоНачислениюАккруаловПоДругимПериодам(ПериодКампании)
	
	Возврат ок_НачислениеАккруалов.ПроверитьНаличиеОткрытойКампанииПоНачислениюАккруаловПоДругимПериодам(ПериодКампании);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокЦФОМенеджераПоКонтроллингу()
	
	Если ОтветственныйЗаКампанию Тогда
		Возврат;
	КонецЕсли; 
	
	СписокЦФОМенеджераПоКонтроллингу.Очистить();
	
	МассивЦФО = ок_НачислениеАккруалов.ПолучитьСписокЦФОМенеджераПоКонтроллингу();
	
	СписокЦФОМенеджераПоКонтроллингу.ЗагрузитьЗначения(МассивЦФО);
	
КонецПроцедуры

&НаСервере
Функция СоздатьПерезаполнитьКампаниюПоНачислениюАккруалов()
	
	Если ЗначениеЗаполнено(КампанияПоНачислениюАккруалов) Тогда
		КампанияОбъект = КампанияПоНачислениюАккруалов.ПолучитьОбъект();
	Иначе
		КампанияОбъект = Справочники.ок_КампанииПоНачислениюАккруалов.СоздатьЭлемент();
	КонецЕсли; 
	
	КампанияОбъект.ПериодКампании 			= ПериодКампании;
	КампанияОбъект.ДатаЗавершенияКампании	= ДатаЗавершенияКампании;
	КампанияОбъект.Автооповещение 			= ВключитьДляКампанииАвтооповещение;
	КампанияОбъект.РасписаниеАвтооповещений	= Новый ХранилищеЗначения(Расписание);
	
	КампанияОбъект.Наименование = Формат(ПериодКампании.Дата, "ДФ='MMMM yyyy'");
	
	КампанияОбъект.Записать();
	
	Возврат КампанияОбъект.Ссылка;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНачислениеАккруаловКонтроллингНаСервере()
	
	ТЗКонтрольныеЗначенияБюджетов = ПолучитьТЗИзДинамическогоСпискаКонтрольныеЗначенияБюджетов();
	
	НаборЗаписей = РегистрыСведений.ок_НачислениеАккруаловКонтроллинг.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Кампания.Установить(КампанияПоНачислениюАккруалов);
	
	Для каждого СтрокаКЗБ Из ТЗКонтрольныеЗначенияБюджетов Цикл
	
		НоваяЗаписьНачислениеАккруалов = НаборЗаписей.Добавить();
		НоваяЗаписьНачислениеАккруалов.Кампания 		= КампанияПоНачислениюАккруалов;
		НоваяЗаписьНачислениеАккруалов.ФВБ 				= СтрокаКЗБ.ФВБ;
		НоваяЗаписьНачислениеАккруалов.ЦФО 				= СтрокаКЗБ.ЦФО;
		НоваяЗаписьНачислениеАккруалов.СтатьяОборотов 	= СтрокаКЗБ.СтатьяОборотов;
		НоваяЗаписьНачислениеАккруалов.Объект 			= СтрокаКЗБ.Объект;
		НоваяЗаписьНачислениеАккруалов.ИДСтроки 		= Строка(Новый УникальныйИдентификатор);
		НоваяЗаписьНачислениеАккруалов.ПериодКЗБ 		= СтрокаКЗБ.Период;
		
		НоваяЗаписьНачислениеАккруалов.СуммаКонтроль	= СтрокаКЗБ.СуммаКонтроль;
		НоваяЗаписьНачислениеАккруалов.СуммаИсполнение 	= СтрокаКЗБ.СуммаИсполнение;
		НоваяЗаписьНачислениеАккруалов.СуммаПринятоУслугТоваровРаботБезНДС = СтрокаКЗБ.СуммаПринятоУслугТоваровРаботБезНДС;
		
		НоваяЗаписьНачислениеАккруалов.Ответственный = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь"); 
		
		НоваяЗаписьНачислениеАккруалов.ПередатьИнициатору = Истина;
		
	КонецЦикла; 
	
	НаборЗаписей.Записать(Истина);
	
	ОбновитьЗаписиКампанииНаСервере();
	ОбновитьСправочнуюИнформациюПоКампании();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТЗИзДинамическогоСпискаКонтрольныеЗначенияБюджетов()
	
	Схема = Элементы.КонтрольныеЗначенияБюджетов.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.КонтрольныеЗначенияБюджетов.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-24 (#3822)
	//Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаЗаявкиНачало", 	НачалоДня(ДатаЗаявки.ДатаНачала));
	//Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаЗаявкиКонец", 	КонецДня(ДатаЗаявки.ДатаОкончания));
	//Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НачалоПериодаКЗБ", 	НачалоДня(ПериодаКЗБ.ДатаНачала));
	//Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КонецПериодаКЗБ", 	КонецДня(ПериодаКЗБ.ДатаОкончания));
	Если ЗначениеЗаполнено(ДатаЗаявки.ДатаНачала) Тогда
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаЗаявкиНачало", 	НачалоДня(ДатаЗаявки.ДатаНачала));
	Иначе
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаЗаявкиНачало", 	Дата(1,1,1));
	КонецЕсли; 
	Если ЗначениеЗаполнено(ДатаЗаявки.ДатаОкончания) Тогда
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаЗаявкиКонец", 	КонецДня(ДатаЗаявки.ДатаОкончания));
	Иначе
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаЗаявкиКонец", 	Дата(1,1,1));
	КонецЕсли; 
	Если ЗначениеЗаполнено(ПериодаКЗБ.ДатаНачала) Тогда
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НачалоПериодаКЗБ", 	НачалоДня(ПериодаКЗБ.ДатаНачала));
	Иначе
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НачалоПериодаКЗБ", 	Дата(1,1,1));
	КонецЕсли; 
	Если ЗначениеЗаполнено(ПериодаКЗБ.ДатаОкончания) Тогда
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КонецПериодаКЗБ", 	КонецДня(ПериодаКЗБ.ДатаОкончания));
	Иначе
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КонецПериодаКЗБ", 	Дата(1,1,1));
	КонецЕсли; 
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-24 (#3822)
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ТЗ = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТЗ);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Возврат ТЗ;
	
КонецФункции

&НаСервере
Процедура ОбновитьДанныеПоКЗБНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НачислениеАккруаловКонтроллинг.Кампания КАК Кампания,
		|	НачислениеАккруаловКонтроллинг.ФВБ КАК ФВБ,
		|	НачислениеАккруаловКонтроллинг.ЦФО КАК ЦФО,
		|	НачислениеАккруаловКонтроллинг.СтатьяОборотов КАК СтатьяОборотов,
		|	НачислениеАккруаловКонтроллинг.Объект КАК Объект,
		|	НачислениеАккруаловКонтроллинг.ИДСтроки КАК ИДСтроки,
		|	НачислениеАккруаловКонтроллинг.ПериодКЗБ КАК ПериодКЗБ,
		|	НачислениеАккруаловКонтроллинг.СуммаКонтроль КАК СуммаКонтроль,
		|	НачислениеАккруаловКонтроллинг.СуммаИсполнение КАК СуммаИсполнение
		|ПОМЕСТИТЬ ВТ_ДанныеКонтроллинг
		|ИЗ
		|	РегистрСведений.ок_НачислениеАккруаловКонтроллинг КАК НачислениеАккруаловКонтроллинг
		|ГДЕ
		|	НачислениеАккруаловКонтроллинг.Кампания = &Кампания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеКонтроллинг.Кампания КАК Кампания,
		|	ДанныеКонтроллинг.ИДСтроки КАК ИДСтроки,
		|	ДанныеКонтроллинг.СуммаКонтроль КАК СуммаКонтрольКонтроллинг,
		|	ДанныеКонтроллинг.СуммаИсполнение КАК СуммаИсполнениеКонтроллинг,
		|	СУММА(КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) КАК СуммаКонтроль,
		|	СУММА(КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) КАК СуммаИсполнение
		|ПОМЕСТИТЬ ВТ_ДанныеКЗБ
		|ИЗ
		|	ВТ_ДанныеКонтроллинг КАК ДанныеКонтроллинг
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
		|				НАЧАЛОПЕРИОДА(&НачалоПериодаКЗБ, ДЕНЬ),
		|				КОНЕЦПЕРИОДА(&КонецПериодаКЗБ, ДЕНЬ),
		|				Месяц,
		|				Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_У)
		|					И Аналитика_1 ССЫЛКА Документ.бит_ФормаВводаБюджета) КАК КонтрольныеЗначенияБюджетовОбороты
		|		ПО ДанныеКонтроллинг.ФВБ = КонтрольныеЗначенияБюджетовОбороты.Аналитика_1
		|			И ДанныеКонтроллинг.ЦФО = КонтрольныеЗначенияБюджетовОбороты.ЦФО
		|			И ДанныеКонтроллинг.СтатьяОборотов = КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов
		|			И ДанныеКонтроллинг.Объект = КонтрольныеЗначенияБюджетовОбороты.Аналитика_2
		|			И ДанныеКонтроллинг.ПериодКЗБ = КонтрольныеЗначенияБюджетовОбороты.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеКонтроллинг.ИДСтроки,
		|	ДанныеКонтроллинг.Кампания,
		|	ДанныеКонтроллинг.СуммаКонтроль,
		|	ДанныеКонтроллинг.СуммаИсполнение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеКЗБ.Кампания КАК Кампания,
		|	ДанныеКЗБ.ИДСтроки КАК ИДСтроки,
		|	ДанныеКЗБ.СуммаКонтроль КАК СуммаКонтроль,
		|	ДанныеКЗБ.СуммаИсполнение КАК СуммаИсполнение
		|ИЗ
		|	ВТ_ДанныеКЗБ КАК ДанныеКЗБ
		|ГДЕ
		|	(ДанныеКЗБ.СуммаКонтрольКонтроллинг <> ДанныеКЗБ.СуммаКонтроль
		|			ИЛИ ДанныеКЗБ.СуммаИсполнениеКонтроллинг <> ДанныеКЗБ.СуммаИсполнение)";
	
	Запрос.УстановитьПараметр("Кампания", КампанияПоНачислениюАккруалов);
	Запрос.УстановитьПараметр("НачалоПериодаКЗБ", НачалоДня(ПериодаКЗБ.ДатаНачала));
	Запрос.УстановитьПараметр("КонецПериодаКЗБ", КонецДня(ПериодаКЗБ.ДатаОкончания));
	
	БылоИзменениеВРегистре = Ложь;
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.ок_НачислениеАккруаловКонтроллинг.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ИДСтроки.Установить(ВыборкаДетальныеЗаписи.ИДСтроки);
		НаборЗаписей.Отбор.Кампания.Установить(ВыборкаДетальныеЗаписи.Кампания);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() > 0 Тогда
			
			ТекущаяЗапись = НаборЗаписей[0];
			
			ТекущаяЗапись.СуммаКонтроль = ВыборкаДетальныеЗаписи.СуммаКонтроль;
			ТекущаяЗапись.СуммаИсполнение = ВыборкаДетальныеЗаписи.СуммаИсполнение;
			
			НаборЗаписей.Записать();
			
			БылоИзменениеВРегистре = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если БылоИзменениеВРегистре Тогда
		ОбновитьЗаписиКампанииНаСервере();
	КонецЕсли; 
	
	ОбновитьСправочнуюИнформациюПоКампании();
	
КонецПроцедуры

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
&НаКлиенте
Процедура ОбновитьЗаписиКампанииНаКлиенте()
	
	Элементы.ЗаписиКампании.Обновить();
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)

&НаСервере
Процедура ОбновитьЗаписиКампанииНаСервере()
	
	Элементы.ЗаписиКампании.Обновить();
	
КонецПроцедуры

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
//&НаКлиенте
//Процедура ОбновитьСправочнуюИнформациюПоКампанииНаКлиенте()
//	
//	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-07-30 (#3822)
//	Если ТипЗнч(ТекущийЭлемент) = Тип("ТаблицаФормы")
//		И ТекущийЭлемент.Имя = "КонтрольныеЗначенияБюджетовКомпоновщикНастроекНастройкиОтбор" Тогда
//		
//		пАктивноеОкно = АктивноеОкно();
//		Если ТипЗнч(пАктивноеОкно) = Тип("ОкноКлиентскогоПриложения")
//			И СтрНайти(пАктивноеОкно.Заголовок, "Редактирование отбора") <> 0 Тогда
//			
//			Возврат;
//			
//		КонецЕсли; 
//		
//	КонецЕсли; 
//	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-07-30 (#3822)
//	
//	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
//	//ОбновитьСправочнуюИнформациюПоКампании(Истина);
//	ОбновитьЗаписиКампанииНаКлиенте();
//	
//	СтруктураРезультата = Новый Структура();
//	СтруктураРезультата.Вставить("КампанияПоНачислениюАккруалов", 	 КампанияПоНачислениюАккруалов);
//	СтруктураРезультата.Вставить("ОтветственныйЗаКампанию",			 ОтветственныйЗаКампанию);
//	СтруктураРезультата.Вставить("СписокЦФОМенеджераПоКонтроллингу", СписокЦФОМенеджераПоКонтроллингу);
//	СправочнаяИнформациюПоКампании = ок_НачислениеАккруалов.ПолучитьСправочнуюИнформациюПоКампании(СтруктураПараметров);
//	
//	ОбновитьСправочнуюИнформациюПоКампанииНаКлиенте(СправочнаяИнформациюПоКампании);
//	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
//	
//	Если НЕ ЗначениеЗаполнено(КампанияПоНачислениюАккруалов) Тогда
//		
//		Элементы.Заполнить.Доступность 			= Истина;
//		Элементы.СтартКампании.Доступность 		= Ложь;
//		Элементы.ЗавершитьКампанию.Доступность 	= Ложь;
//		Элементы.РассчитатьАккруалы.Доступность = Ложь;
//		
//	Иначе
//		
//		Элементы.Заполнить.Доступность 			= НЕ ЗначениеЗаполнено(СтатусКампании) ИЛИ СтатусКампании = ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.Черновик");
//		Элементы.СтартКампании.Доступность 		= СтатусКампании = ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.Черновик");
//		Элементы.ЗавершитьКампанию.Доступность 	= СтатусКампании = ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.ОткрытаДляИнициаторов");
//		Элементы.РассчитатьАккруалы.Доступность	= НЕ Элементы.СтартКампании.Доступность И НЕ Элементы.ЗавершитьКампанию.Доступность;
//		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-20 (#3822)
//		Элементы.ВключениеДляКомпанииАвтооповещений.Доступность = НЕ ЗначениеЗаполнено(СтатусКампании)
//																ИЛИ СтатусКампании = ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.Черновик")
//																ИЛИ СтатусКампании = ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.ОткрытаДляИнициаторов");
//		Элементы.ПредставлениеРасписания.Доступность 			= НЕ ЗначениеЗаполнено(СтатусКампании)
//																ИЛИ СтатусКампании = ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.Черновик")
//																ИЛИ СтатусКампании = ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.ОткрытаДляИнициаторов");
//		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-20 (#3822)
//		
//	КонецЕсли;
//	
//КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-07-31 (#3823)
&НаКлиенте
Процедура ОбновитьСправочнуюИнформациюПоКампанииНаКлиентеПриАктивномОкне()
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	Если ТекущаяДата() < (ДатаПоследнегоОбновленияСправочнойИнформацииПоКампании + 60*2) Тогда
		Возврат;
	КонецЕсли; 
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
	пАктивноеОкно = АктивноеОкно();
	Если ТипЗнч(пАктивноеОкно) = Тип("ОкноКлиентскогоПриложения")
		И СтрНайти(пАктивноеОкно.Заголовок, "АРМ менеджера по контроллингу") = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	//ОбновитьСправочнуюИнформациюПоКампанииНаКлиенте();
	УправлениеФормой();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСправочнуюИнформациюПоКампанииНаКлиентеВнеАктивногоОкна()
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	//ОбновитьСправочнуюИнформациюПоКампанииНаКлиенте();
	
	Если ТекущаяДата() < (ДатаПоследнегоОбновленияСправочнойИнформацииПоКампании + 60*2) Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеФормой();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-07-31 (#3823)

&НаСервере
Процедура ОбновитьСправочнуюИнформациюПоКампании(ОбновитьЗаписиКампании = Ложь)

	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	//Если НЕ ЗначениеЗаполнено(КампанияПоНачислениюАккруалов) Тогда
	//
	//	ТекстСправочнаяИнформация = "До окончания кампании осталось --- дней. Не обработано --- записей у --- инициаторов на общую сумму --- рублей.";
	//	Элементы.ДекорацияИнформацияПоКампании.Заголовок 	= "Кампания: --- ; Статус: ---";
	//	Элементы.ДекорацияДатаНачалаКампании.Заголовок 		= "Дата начала кампании: ---";
	//	
	//	Возврат;
	//	
	//КонецЕсли; 
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-25 (#3822)
	//	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//	//|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НачислениеАккруаловКонтроллинг.ФВБ.бит_БК_Инициатор), 0) - ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	//	//|				КОГДА НачислениеАккруаловКонтроллинг.ФВБ.бит_БК_Инициатор ЕСТЬ NULL
	//	//|						ИЛИ НачислениеАккруаловКонтроллинг.ФВБ.бит_БК_Инициатор = НЕОПРЕДЕЛЕНО
	//	//|						ИЛИ НачислениеАккруаловКонтроллинг.ФВБ.бит_БК_Инициатор = ЗНАЧЕНИЕ(Справочник.бит_БК_Инициаторы.ПустаяСсылка)
	//	//|					ТОГДА 1
	//	//|				ИНАЧЕ 0
	//	//|			КОНЕЦ), 0) КАК КоличествоИнициаторов,
	//	//|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	//	//|				КОГДА НачислениеАккруаловКонтроллинг.ФВБ.бит_БК_Инициатор ЕСТЬ NULL
	//	//|						ИЛИ НачислениеАккруаловКонтроллинг.ФВБ.бит_БК_Инициатор = НЕОПРЕДЕЛЕНО
	//	//|						ИЛИ НачислениеАккруаловКонтроллинг.ФВБ.бит_БК_Инициатор = ЗНАЧЕНИЕ(Справочник.бит_БК_Инициаторы.ПустаяСсылка)
	//	//|					ТОГДА 1
	//	//|				ИНАЧЕ 0
	//	//|			КОНЕЦ), 0) КАК ЕстьНезаполненныйИнициатор,
	//	//|	ЕСТЬNULL(КОЛИЧЕСТВО(*), 0) КАК КоличествоНеобработанныхЗаписей,
	//	//|	ЕСТЬNULL(СУММА(НачислениеАккруаловКонтроллинг.СуммаПринятоУслугТоваровРаботБезНДС), 0) КАК ОбщаяНеобработаннаяСумма
	//	//|ИЗ
	//	//|	РегистрСведений.ок_НачислениеАккруаловКонтроллинг КАК НачислениеАккруаловКонтроллинг
	//	//|ГДЕ
	//	//|	НачислениеАккруаловКонтроллинг.Кампания = &Кампания
	//	//|	И НЕ НачислениеАккруаловКонтроллинг.Обработано
	//	//|	И (&ОтветственныйЗаКампанию
	//	//|			ИЛИ НачислениеАккруаловКонтроллинг.ЦФО В (&СписокЦФОМенеджераПоКонтроллингу))";
	//	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//	|	ВЫБОР
	//	|		КОГДА НачислениеАккруаловКонтроллинг.ЗамещающийИнициатор = ЗНАЧЕНИЕ(Справочник.бит_БК_Инициаторы.ПустаяСсылка)
	//	|			ТОГДА НачислениеАккруаловКонтроллинг.ФВБ.бит_БК_Инициатор
	//	|		ИНАЧЕ НачислениеАккруаловКонтроллинг.ЗамещающийИнициатор
	//	|	КОНЕЦ КАК Инициатор,
	//	|	ЕСТЬNULL(КОЛИЧЕСТВО(*), 0) КАК КоличествоНеобработанныхЗаписей,
	//	|	ЕСТЬNULL(СУММА(НачислениеАккруаловКонтроллинг.СуммаПринятоУслугТоваровРаботБезНДС), 0) КАК ОбщаяНеобработаннаяСумма
	//	|ПОМЕСТИТЬ ВТ_НачислениеАккруаловКонтроллинг
	//	|ИЗ
	//	|	РегистрСведений.ок_НачислениеАккруаловКонтроллинг КАК НачислениеАккруаловКонтроллинг
	//	|ГДЕ
	//	|	НачислениеАккруаловКонтроллинг.Кампания = &Кампания
	//	|	И НЕ НачислениеАккруаловКонтроллинг.Обработано
	//	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
	//	|	И НачислениеАккруаловКонтроллинг.ПередатьИнициатору
	//	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
	//	|	И (&ОтветственныйЗаКампанию
	//	|			ИЛИ НачислениеАккруаловКонтроллинг.ЦФО В (&СписокЦФОМенеджераПоКонтроллингу))
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ВЫБОР
	//	|		КОГДА НачислениеАккруаловКонтроллинг.ЗамещающийИнициатор = ЗНАЧЕНИЕ(Справочник.бит_БК_Инициаторы.ПустаяСсылка)
	//	|			ТОГДА НачислениеАккруаловКонтроллинг.ФВБ.бит_БК_Инициатор
	//	|		ИНАЧЕ НачислениеАккруаловКонтроллинг.ЗамещающийИнициатор
	//	|	КОНЕЦ
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НачислениеАккруаловКонтроллинг.Инициатор), 0) - ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	//	|				КОГДА НачислениеАккруаловКонтроллинг.Инициатор ЕСТЬ NULL
	//	|						ИЛИ НачислениеАккруаловКонтроллинг.Инициатор = НЕОПРЕДЕЛЕНО
	//	|						ИЛИ НачислениеАккруаловКонтроллинг.Инициатор = ЗНАЧЕНИЕ(Справочник.бит_БК_Инициаторы.ПустаяСсылка)
	//	|					ТОГДА 1
	//	|				ИНАЧЕ 0
	//	|			КОНЕЦ), 0) КАК КоличествоИнициаторов,
	//	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	//	|				КОГДА НачислениеАккруаловКонтроллинг.Инициатор ЕСТЬ NULL
	//	|						ИЛИ НачислениеАккруаловКонтроллинг.Инициатор = НЕОПРЕДЕЛЕНО
	//	|						ИЛИ НачислениеАккруаловКонтроллинг.Инициатор = ЗНАЧЕНИЕ(Справочник.бит_БК_Инициаторы.ПустаяСсылка)
	//	|					ТОГДА 1
	//	|				ИНАЧЕ 0
	//	|			КОНЕЦ), 0) КАК ЕстьНезаполненныйИнициатор,
	//	|	ЕСТЬNULL(СУММА(НачислениеАккруаловКонтроллинг.КоличествоНеобработанныхЗаписей), 0) КАК КоличествоНеобработанныхЗаписей,
	//	|	ЕСТЬNULL(СУММА(НачислениеАккруаловКонтроллинг.ОбщаяНеобработаннаяСумма), 0) КАК ОбщаяНеобработаннаяСумма
	//	|ИЗ
	//	|	ВТ_НачислениеАккруаловКонтроллинг КАК НачислениеАккруаловКонтроллинг";
	//	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-25 (#3822)
	//
	//Запрос.УстановитьПараметр("Кампания", 							КампанияПоНачислениюАккруалов);
	//Запрос.УстановитьПараметр("ОтветственныйЗаКампанию", 			ОтветственныйЗаКампанию);
	//Запрос.УстановитьПараметр("СписокЦФОМенеджераПоКонтроллингу", 	СписокЦФОМенеджераПоКонтроллингу);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//пТекстСправочнаяИнформация = "До окончания кампании %1. Не %2 у %3 на общую сумму %4.";
	//
	//ДнейДоОкончанияКампании 		= Окр((НачалоДня(КампанияПоНачислениюАккруалов.ДатаЗавершенияКампании) - НачалоДня(ТекущаяДата())) / (60 * 60 * 24), 0) + 1;
	//КоличествоНеобработанныхЗаписей = 0;
	//КоличествоИнициаторов 			= 0;
	//ОбщаяНеобработаннаяСумма 		= 0;
	//
	//Если ВыборкаДетальныеЗаписи.Следующий() Тогда
	//
	//	КоличествоНеобработанныхЗаписей = ВыборкаДетальныеЗаписи.КоличествоНеобработанныхЗаписей;
	//	КоличествоИнициаторов 			= ВыборкаДетальныеЗаписи.КоличествоИнициаторов;
	//	ОбщаяНеобработаннаяСумма 		= ВыборкаДетальныеЗаписи.ОбщаяНеобработаннаяСумма;
	//
	//КонецЕсли; 
	//
	//ТекстДнейДоОкончанияКампании 			= СтрокаСЧислом(";остался %1 день;;осталось %1 дня;осталось %1 дней;осталось %1 дня", 
	//											ДнейДоОкончанияКампании, ВидЧисловогоЗначения.Количественное, "L=ru");
	//ТекстКоличествоНеобработанныхЗаписей 	= СтрокаСЧислом(";обработана &КоличествоНеобработанныхЗаписей запись;;обработано &КоличествоНеобработанныхЗаписей записи;обработано &КоличествоНеобработанныхЗаписей записей;обработано &КоличествоНеобработанныхЗаписей записей", 
	//											КоличествоНеобработанныхЗаписей, ВидЧисловогоЗначения.Количественное, "L=ru");
	//ТекстКоличествоНеобработанныхЗаписей 	= СтрЗаменить(ТекстКоличествоНеобработанныхЗаписей, "&КоличествоНеобработанныхЗаписей", "" + КоличествоНеобработанныхЗаписей);
	//ТекстКоличествоИнициаторов 				= "" + КоличествоИнициаторов + " " + СтрокаСЧислом(";инициатора;;инициаторов;инициаторов;инициаторов", 
	//											КоличествоИнициаторов, ВидЧисловогоЗначения.Количественное, "L=ru");
	//ТекстОбщаяНеобработаннаяСумма 			= "" + ОбщаяНеобработаннаяСумма + " " + СтрокаСЧислом(";рубль;;рубля;рублей;рублей", 
	//											ОбщаяНеобработаннаяСумма, ВидЧисловогоЗначения.Количественное, "L=ru");

	//пТекстСправочнаяИнформация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(пТекстСправочнаяИнформация, 
	//								ТекстДнейДоОкончанияКампании, 
	//								ТекстКоличествоНеобработанныхЗаписей, 
	//								ТекстКоличествоИнициаторов, 
	//								ТекстОбщаяНеобработаннаяСумма);
	//								
	//Если ТекстСправочнаяИнформация <> пТекстСправочнаяИнформация Тогда
	//	ТекстСправочнаяИнформация = пТекстСправочнаяИнформация;
	//КонецЕсли; 
	//								
	//пСтатусКампании = ок_НачислениеАккруалов.ПолучитьСтатусКампанииПоНачислениюАккруалов(КампанияПоНачислениюАккруалов);
	//Если СтатусКампании <> пСтатусКампании Тогда
	//	СтатусКампании = пСтатусКампании;
	//КонецЕсли; 
	//
	//ДекорацияИнформацияПоКампанииЗаголовок = "Кампания: " + КампанияПоНачислениюАккруалов.ПериодКампании + "; Статус: " + СтатусКампании;
	//Если Элементы.ДекорацияИнформацияПоКампании.Заголовок <> ДекорацияИнформацияПоКампанииЗаголовок Тогда
	//	Элементы.ДекорацияИнформацияПоКампании.Заголовок = ДекорацияИнформацияПоКампанииЗаголовок;
	//КонецЕсли;
	//
	//Если ОбновитьЗаписиКампании Тогда
	//	Элементы.ЗаписиКампании.Обновить();
	//КонецЕсли; 
	//
	//Если ЗначениеЗаполнено(КампанияПоНачислениюАккруалов.ДатаНачалаКампании) Тогда
	//	
	//	ДатаНачалаКампании_Заголовок = "Дата начала кампании: " + Формат(КампанияПоНачислениюАккруалов.ДатаНачалаКампании, "ДФ=dd.MM.yyyy");
	//	Если Элементы.ДекорацияДатаНачалаКампании.Заголовок <> ДатаНачалаКампании_Заголовок Тогда
	//		Элементы.ДекорацияДатаНачалаКампании.Заголовок = ДатаНачалаКампании_Заголовок;
	//	КонецЕсли;
	//	
	//Иначе
	//	Если Элементы.ДекорацияДатаНачалаКампании.Заголовок <> "Дата начала кампании: ---"Тогда
	//		Элементы.ДекорацияДатаНачалаКампании.Заголовок = "Дата начала кампании: ---";
	//	КонецЕсли;
	//КонецЕсли;
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("КампанияПоНачислениюАккруалов", 	 КампанияПоНачислениюАккруалов);
	СтруктураПараметров.Вставить("ОтветственныйЗаКампанию",			 ОтветственныйЗаКампанию);
	СтруктураПараметров.Вставить("СписокЦФОМенеджераПоКонтроллингу", СписокЦФОМенеджераПоКонтроллингу);
	СправочнаяИнформациюПоКампании = ок_НачислениеАккруалов.ПолучитьСправочнуюИнформациюПоКампании(СтруктураПараметров);
	
	Если СтатусКампании <> СправочнаяИнформациюПоКампании.СтатусКампании Тогда
		СтатусКампании = СправочнаяИнформациюПоКампании.СтатусКампании;
	КонецЕсли;
	
	Если ТекстСправочнаяИнформация <> СправочнаяИнформациюПоКампании.ТекстСправочнаяИнформация Тогда
		ТекстСправочнаяИнформация = СправочнаяИнформациюПоКампании.ТекстСправочнаяИнформация;
	КонецЕсли;
	
	Если Элементы.ДекорацияИнформацияПоКампании.Заголовок <> СправочнаяИнформациюПоКампании.ИнформацияПоКампании Тогда
		Элементы.ДекорацияИнформацияПоКампании.Заголовок = СправочнаяИнформациюПоКампании.ИнформацияПоКампании;
	КонецЕсли;
	
	Если Элементы.ДекорацияДатаНачалаКампании.Заголовок <> СправочнаяИнформациюПоКампании.ДатаНачалаКампании Тогда
		Элементы.ДекорацияДатаНачалаКампании.Заголовок = СправочнаяИнформациюПоКампании.ДатаНачалаКампании;
	КонецЕсли;
	
	ДатаПоследнегоОбновленияСправочнойИнформацииПоКампании = ТекущаяДата();
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
КонецПроцедуры

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
&НаКлиенте
Процедура ОбновитьСправочнуюИнформациюПоКампанииНаКлиенте(СправочнаяИнформациюПоКампании)
	
	Если СтатусКампании <> СправочнаяИнформациюПоКампании.СтатусКампании Тогда
		СтатусКампании = СправочнаяИнформациюПоКампании.СтатусКампании;
	КонецЕсли;
	
	Если ТекстСправочнаяИнформация <> СправочнаяИнформациюПоКампании.ТекстСправочнаяИнформация Тогда
		ТекстСправочнаяИнформация = СправочнаяИнформациюПоКампании.ТекстСправочнаяИнформация;
	КонецЕсли;
	
	Если Элементы.ДекорацияИнформацияПоКампании.Заголовок <> СправочнаяИнформациюПоКампании.ИнформацияПоКампании Тогда
		Элементы.ДекорацияИнформацияПоКампании.Заголовок = СправочнаяИнформациюПоКампании.ИнформацияПоКампании;
	КонецЕсли;
	
	Если Элементы.ДекорацияДатаНачалаКампании.Заголовок <> СправочнаяИнформациюПоКампании.ДатаНачалаКампании Тогда
		Элементы.ДекорацияДатаНачалаКампании.Заголовок = СправочнаяИнформациюПоКампании.ДатаНачалаКампании;
	КонецЕсли;
	
	ДатаПоследнегоОбновленияСправочнойИнформацииПоКампании = ТекущаяДата();
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)

&НаСервере
Функция ПолучитьСписокФВБПоВыделеннымСтрокам()
	
	СписокФВБ = Новый СписокЗначений;
	Для каждого ТекущаяВыделеннаяСтрока Из Элементы.ЗаписиКампании.ВыделенныеСтроки Цикл
	
		СписокФВБ.Добавить(ТекущаяВыделеннаяСтрока.ФВБ);
	
	КонецЦикла;
	
	Возврат СписокФВБ;
	
КонецФункции

&НаКлиенте
Процедура ПоказатьРасхождения(Команда)
	
	Элементы.ЗаписиКампанииПоказатьРасхождения.Пометка = НЕ Элементы.ЗаписиКампанииПоказатьРасхождения.Пометка;
	УправлениеФормойНаСервере();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	//ОбновитьСправочнуюИнформациюПоКампанииНаКлиенте();
	УправлениеФормой();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивСтрокДляОбработки(ИмяПоля)
	
	МассивСтрокДляОбработки = Новый Массив;
	Для каждого ТекущаяВыделенаяСтрока Из Элементы.ЗаписиКампании.ВыделенныеСтроки Цикл
		СтруктураСтроки = Новый Структура();
		СтруктураСтроки.Вставить("Кампания", 	ТекущаяВыделенаяСтрока.Кампания);
		СтруктураСтроки.Вставить("ИДСтроки", 	ТекущаяВыделенаяСтрока.ИДСтроки);
		СтруктураСтроки.Вставить("ИмяПоля", 	ИмяПоля);
		МассивСтрокДляОбработки.Добавить(СтруктураСтроки);
	КонецЦикла;
	
	Возврат МассивСтрокДляОбработки;
	
КонецФункции

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-19 (#3822)
&НаСервере
Процедура ИнициализироватьЭскизыОтчетов()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ОбразецОтчета_КонтрольныеЗначенияБюджетов = ОбработкаОбъект.ПолучитьМакет("ОбразецОтчета_КонтрольныеЗначенияБюджетов");
	ОбразецОтчета_КонтрольныеЗначенияБюджетов = Новый Картинка(ОбразецОтчета_КонтрольныеЗначенияБюджетов);
	Если ТипЗнч(ОбразецОтчета_КонтрольныеЗначенияБюджетов) = Тип("Картинка") И НЕ ОбразецОтчета_КонтрольныеЗначенияБюджетов.Вид = ВидКартинки.Пустая Тогда
		
		Если ЭтоАдресВременногоХранилища(ЭтаФорма.ДекорацияОтчет_КонтрольныеЗначенияБюджетов)
			И ЗначениеЗаполнено(ЭтаФорма.ДекорацияОтчет_КонтрольныеЗначенияБюджетов) Тогда
			ЭтаФорма.ДекорацияОтчет_КонтрольныеЗначенияБюджетов = ПоместитьВоВременноеХранилище(ОбразецОтчета_КонтрольныеЗначенияБюджетов, ЭтаФорма.ДекорацияОтчет_КонтрольныеЗначенияБюджетов);
		Иначе
			ЭтаФорма.ДекорацияОтчет_КонтрольныеЗначенияБюджетов = ПоместитьВоВременноеХранилище(ОбразецОтчета_КонтрольныеЗначенияБюджетов, УникальныйИдентификатор);
		КонецЕсли;
		
	КонецЕсли;
	
	ОбразецОтчета_ОтчетПоПроводкамМСФО = ОбработкаОбъект.ПолучитьМакет("ОбразецОтчета_ОтчетПоПроводкамМСФО");
	ОбразецОтчета_ОтчетПоПроводкамМСФО = Новый Картинка(ОбразецОтчета_ОтчетПоПроводкамМСФО);
	Если ТипЗнч(ОбразецОтчета_ОтчетПоПроводкамМСФО) = Тип("Картинка") И НЕ ОбразецОтчета_ОтчетПоПроводкамМСФО.Вид = ВидКартинки.Пустая Тогда
		
		Если ЭтоАдресВременногоХранилища(ЭтаФорма.ДекорацияОтчет_ОтчетПоПроводкамМСФО)
			И ЗначениеЗаполнено(ЭтаФорма.ДекорацияОтчет_ОтчетПоПроводкамМСФО) Тогда
			ЭтаФорма.ДекорацияОтчет_ОтчетПоПроводкамМСФО = ПоместитьВоВременноеХранилище(ОбразецОтчета_ОтчетПоПроводкамМСФО, ЭтаФорма.ДекорацияОтчет_ОтчетПоПроводкамМСФО);
		Иначе
			ЭтаФорма.ДекорацияОтчет_ОтчетПоПроводкамМСФО = ПоместитьВоВременноеХранилище(ОбразецОтчета_ОтчетПоПроводкамМСФО, УникальныйИдентификатор);
		КонецЕсли;
		
	КонецЕсли;
	
	ОбразецОтчета_ДляМенеджераПоКонтроллингу = ОбработкаОбъект.ПолучитьМакет("ОбразецОтчета_ДляМенеджераПоКонтроллингу");
	ОбразецОтчета_ДляМенеджераПоКонтроллингу = Новый Картинка(ОбразецОтчета_ДляМенеджераПоКонтроллингу);
	Если ТипЗнч(ОбразецОтчета_ДляМенеджераПоКонтроллингу) = Тип("Картинка") И НЕ ОбразецОтчета_ДляМенеджераПоКонтроллингу.Вид = ВидКартинки.Пустая Тогда
		
		Если ЭтоАдресВременногоХранилища(ЭтаФорма.ДекорацияОтчет_ДляМенеджераПоКонтроллингу)
			И ЗначениеЗаполнено(ЭтаФорма.ДекорацияОтчет_ДляМенеджераПоКонтроллингу) Тогда
			ЭтаФорма.ДекорацияОтчет_ДляМенеджераПоКонтроллингу = ПоместитьВоВременноеХранилище(ОбразецОтчета_ДляМенеджераПоКонтроллингу, ЭтаФорма.ДекорацияОтчет_ДляМенеджераПоКонтроллингу);
		Иначе
			ЭтаФорма.ДекорацияОтчет_ДляМенеджераПоКонтроллингу = ПоместитьВоВременноеХранилище(ОбразецОтчета_ДляМенеджераПоКонтроллингу, УникальныйИдентификатор);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСуммуВыделенныхСтрок()
	
	СуммаВыделенныхСтрок = 0;
	
	Если Элементы.ЗаписиКампании.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	МассивИДСтрок = Новый Массив;
	Для каждого ТекущаяВыделенаяСтрока Из Элементы.ЗаписиКампании.ВыделенныеСтроки Цикл
		МассивИДСтрок.Добавить(ТекущаяВыделенаяСтрока.ИДСтроки);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(СУММА(ок_НачислениеАккруаловКонтроллинг.СуммаПринятоУслугТоваровРаботБезНДС), 0) КАК СуммаПринятоУслугТоваровРаботБезНДС
		|ИЗ
		|	РегистрСведений.ок_НачислениеАккруаловКонтроллинг КАК ок_НачислениеАккруаловКонтроллинг
		|ГДЕ
		|	ок_НачислениеАккруаловКонтроллинг.Кампания = &Кампания
		|	И ок_НачислениеАккруаловКонтроллинг.ИДСтроки В(&ИДСтроки)";
	
	Запрос.УстановитьПараметр("ИДСтроки", МассивИДСтрок);
	Запрос.УстановитьПараметр("Кампания", КампанияПоНачислениюАккруалов);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		СуммаВыделенныхСтрок = ВыборкаДетальныеЗаписи.СуммаПринятоУслугТоваровРаботБезНДС;
	КонецЕсли;
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-19 (#3822)

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-20 (#3822)
&НаСервере
Процедура ИзменитьПараметрыРегламентногоЗадания()
	
	Если ЗначениеЗаполнено(КампанияПоНачислениюАккруалов)
		И ЗначениеЗаполнено(КампанияПоНачислениюАккруалов.КлючРегламентногоЗадания) Тогда
		
		КампанияОбъект = КампанияПоНачислениюАккруалов.ПолучитьОбъект();
		
		КампанияОбъект.Автооповещение = ВключитьДляКампанииАвтооповещение;
		КампанияОбъект.РасписаниеАвтооповещений	= Новый ХранилищеЗначения(Расписание);
		
		КампанияОбъект.Записать();
		
	КонецЕсли; 
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-20 (#3822)

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)
&НаКлиенте
Процедура ЗаписиКампанииВнестиСуммуЗакрытие(ВыбЗнач, Параметры) Экспорт
	
	Если ВыбЗнач = Неопределено
		ИЛИ ВыбЗнач = КодВозвратаДиалога.Отмена
		ИЛИ НЕ Параметры.Свойство("МассивСтрокДляОбработки") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	//ЗаписиКампанииВнестиСуммуЗакрытиеНаСервере(ВыбЗнач, Параметры); 
	БылоИзменениеВРегистре = ЗаписиКампанииВнестиСуммуЗакрытиеНаСервере(ВыбЗнач, Параметры); 
	Если БылоИзменениеВРегистре Тогда
		УправлениеФормой();
	КонецЕсли; 
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
КонецПроцедуры

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
//&НаСервере
//Процедура ЗаписиКампанииВнестиСуммуЗакрытиеНаСервере(ВыбЗнач, Параметры)
&НаСервере
Функция ЗаписиКампанииВнестиСуммуЗакрытиеНаСервере(ВыбЗнач, Параметры)
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
	БылоИзменениеВРегистре = Ложь;
	
	Для каждого СтруктураСтроки Из Параметры.МассивСтрокДляОбработки Цикл
	
		НаборЗаписей = РегистрыСведений.ок_НачислениеАккруаловКонтроллинг.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Кампания.Установить(СтруктураСтроки.Кампания);
		НаборЗаписей.Отбор.ИДСтроки.Установить(СтруктураСтроки.ИДСтроки);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() > 0 Тогда
			
			ТекущаяЗапись = НаборЗаписей[0];
			
			Если ВыбЗнач.ЭтоКоэффициент Тогда
				ТекущаяЗапись[СтруктураСтроки.ИмяПоля] = ТекущаяЗапись.СуммаКонтроль * ВыбЗнач.ВозвращаемоеЗначение;
			ИначеЕсли ВыбЗнач.УстановитьСуммуКакВБухгалтерскомУчете Тогда
				ТекущаяЗапись[СтруктураСтроки.ИмяПоля] = ТекущаяЗапись.СуммаИсполнение;
			Иначе
				ТекущаяЗапись[СтруктураСтроки.ИмяПоля] = ВыбЗнач.ВозвращаемоеЗначение;
			КонецЕсли; 
			
			ТекущаяЗапись.ДатаИзменения = ТекущаяДата();
			ТекущаяЗапись.Ответственный = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
			
			Если СтруктураСтроки.ИмяПоля = "СуммаПринятоУслугТоваровРаботБезНДС" Тогда
				ТекущаяЗапись.Обработано = Истина;
				
				Если ТекущаяЗапись.СуммаКЗакрытию <> 0 Тогда
					
					ТекущаяЗапись.СуммаКЗакрытию = ТекущаяЗапись.СуммаКонтроль - ТекущаяЗапись.СуммаПринятоУслугТоваровРаботБезНДС;
					Если ТекущаяЗапись.СуммаКЗакрытию < 0 Тогда
						ТекущаяЗапись.СуммаКЗакрытию = 0;
					КонецЕсли;
				
				КонецЕсли; 
				
			КонецЕсли; 
			
			НаборЗаписей.Записать();
			
			БылоИзменениеВРегистре = Истина;
			
		КонецЕсли;
	
	КонецЦикла;
	
//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
//	Если БылоИзменениеВРегистре Тогда
//		
//		ОбновитьЗаписиКампанииНаСервере();
//		ОбновитьСправочнуюИнформациюПоКампании();
//	
//	КонецЕсли; 
//	
//КонецПроцедуры

	Возврат БылоИзменениеВРегистре;

КонецФункции
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)

&НаСервере
Функция ПолучитьСтруктуруПараметровВыделенныхСтрок()
	
	СтруктураСтроки = Новый Структура();
	СтруктураСтроки.Вставить("КоличествоСтрок", 0);
	СтруктураСтроки.Вставить("ОбщаяСуммаСтрок", 0);
	
	СтруктураСтроки.КоличествоСтрок = Элементы.ЗаписиКампании.ВыделенныеСтроки.Количество();
	
	Для каждого ТекущаяВыделенаяСтрока Из Элементы.ЗаписиКампании.ВыделенныеСтроки Цикл
		
		МенеджерЗаписи = РегистрыСведений.ок_НачислениеАккруаловКонтроллинг.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ТекущаяВыделенаяСтрока);
		МенеджерЗаписи.Прочитать();

		Если МенеджерЗаписи.Выбран() Тогда
			СтруктураСтроки.ОбщаяСуммаСтрок = СтруктураСтроки.ОбщаяСуммаСтрок + МенеджерЗаписи.СуммаКонтроль;
		КонецЕсли; 
		
	КонецЦикла;
	
	Возврат СтруктураСтроки;
	
КонецФункции

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-22 (#3969)

// Команда "Заполнить" в фоне
&НаКлиенте
Процедура ЗаполнитьНачислениеАккруаловКонтроллингВФоне()
	
	//В форме объекта выполняется вызов этой функции в фоновом задании в три этапа:
	//1) запуск фонового задания на сервере,
	//2) подключение обработчика завершения фонового задания на клиенте,
	//3) обработка результата выполнения фонового задания.
	
	// 1. Запуск фонового задания на сервере.
	ДлительнаяОперация = ЗаполнитьНачислениеАккруаловКонтроллингНаСервереВФоне();

	// 2. Подключение обработчика завершения фонового задания.
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = "Выполняется заполнение аккруалов.";
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.Интервал = 1;
		
	Оповещение = Новый ОписаниеОповещения("ПриЗавершенииЗаполненияНачислениеАккруаловКонтроллинг", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьНачислениеАккруаловКонтроллингНаСервереВФоне()
	
	Схема = Элементы.КонтрольныеЗначенияБюджетов.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.КонтрольныеЗначенияБюджетов.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	Если ЗначениеЗаполнено(ДатаЗаявки.ДатаНачала) Тогда
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаЗаявкиНачало", 	НачалоДня(ДатаЗаявки.ДатаНачала));
	Иначе
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаЗаявкиНачало", 	Дата(1,1,1));
	КонецЕсли; 
	Если ЗначениеЗаполнено(ДатаЗаявки.ДатаОкончания) Тогда
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаЗаявкиКонец", 	КонецДня(ДатаЗаявки.ДатаОкончания));
	Иначе
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаЗаявкиКонец", 	Дата(1,1,1));
	КонецЕсли; 
	Если ЗначениеЗаполнено(ПериодаКЗБ.ДатаНачала) Тогда
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НачалоПериодаКЗБ", 	НачалоДня(ПериодаКЗБ.ДатаНачала));
	Иначе
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НачалоПериодаКЗБ", 	Дата(1,1,1));
	КонецЕсли; 
	Если ЗначениеЗаполнено(ПериодаКЗБ.ДатаОкончания) Тогда
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КонецПериодаКЗБ", 	КонецДня(ПериодаКЗБ.ДатаОкончания));
	Иначе
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КонецПериодаКЗБ", 	Дата(1,1,1));
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "ок_НачислениеАккруалов.АРММенеджераПоКонтроллингу_ЗаполнитьНачислениеАккруаловКонтроллингНаСервере", КампанияПоНачислениюАккруалов, Схема, Настройки);
	
КонецФункции

&НаКлиенте
Процедура ПриЗавершенииЗаполненияНачислениеАккруаловКонтроллинг(Результат, ДополнительныеПараметры) Экспорт
	
// 3. Обработка результата выполнения фонового задания.

	Если Результат = Неопределено Тогда // Пользователь отменил задание.
		Возврат;
	КонецЕсли;

	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;

	УдалитьИзВременногоХранилища(Результат.АдресРезультата);
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	//Элементы.ЗаписиКампании.Обновить();
	//ОбновитьСправочнуюИнформациюПоКампании();
	УправлениеФормой();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
КонецПроцедуры

// Команда "Предварительная обработка строк" в фоне
&НаКлиенте
Процедура ПредварительнаяОбработкаСтрокВФоне()
	
	//В форме объекта выполняется вызов этой функции в фоновом задании в три этапа:
	//1) запуск фонового задания на сервере,
	//2) подключение обработчика завершения фонового задания на клиенте,
	//3) обработка результата выполнения фонового задания.
	
	// 1. Запуск фонового задания на сервере.
	ДлительнаяОперация = ПредварительнаяОбработкаСтрокНаСервереВФоне();

	// 2. Подключение обработчика завершения фонового задания.
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = "Выполняется предварительная обработка.";
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.Интервал = 1;
	
	Оповещение = Новый ОписаниеОповещения("ПриЗавершенииПредварительнойОбработкиСтрок", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ПредварительнаяОбработкаСтрокНаСервереВФоне()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "ок_НачислениеАккруалов.АРММенеджераПоКонтроллингу_ПредварительнаяОбработкаСтрок", КампанияПоНачислениюАккруалов);
	
КонецФункции

&НаКлиенте
Процедура ПриЗавершенииПредварительнойОбработкиСтрок(Результат, ДополнительныеПараметры) Экспорт
	
// 3. Обработка результата выполнения фонового задания.

	Если Результат = Неопределено Тогда // Пользователь отменил задание.
		Возврат;
	КонецЕсли;

	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;

	БылоИзменениеВРегистре = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	УдалитьИзВременногоХранилища(Результат.АдресРезультата);
	
	Если БылоИзменениеВРегистре Тогда
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
		//Элементы.ЗаписиКампании.Обновить();
		//ОбновитьСправочнуюИнформациюПоКампании();
		УправлениеФормой();
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	КонецЕсли;
	
КонецПроцедуры


// Команда "ОбновитьДанныеПоКЗБ" в фоне
&НаКлиенте
Процедура ОбновитьДанныеПоКЗБВФоне()
	
	//В форме объекта выполняется вызов этой функции в фоновом задании в три этапа:
	//1) запуск фонового задания на сервере,
	//2) подключение обработчика завершения фонового задания на клиенте,
	//3) обработка результата выполнения фонового задания.
	
	// 1. Запуск фонового задания на сервере.
	ДлительнаяОперация = ОбновитьДанныеПоКЗБНаСервереВФоне();

	// 2. Подключение обработчика завершения фонового задания.
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = "Выполняется обновление данных по КЗБ.";
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.Интервал = 1;
	
	Оповещение = Новый ОписаниеОповещения("ПриЗавершенииОбновленияДанныхПоКЗБ", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ОбновитьДанныеПоКЗБНаСервереВФоне()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "ок_НачислениеАккруалов.АРММенеджераПоКонтроллингу_ОбновитьДанныеПоКЗБ", КампанияПоНачислениюАккруалов, ПериодаКЗБ);
	
КонецФункции

&НаКлиенте
Процедура ПриЗавершенииОбновленияДанныхПоКЗБ(Результат, ДополнительныеПараметры) Экспорт
	
// 3. Обработка результата выполнения фонового задания.

	Если Результат = Неопределено Тогда // Пользователь отменил задание.
		Возврат;
	КонецЕсли;

	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;

	БылоИзменениеВРегистре = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	УдалитьИзВременногоХранилища(Результат.АдресРезультата);
	
	Если БылоИзменениеВРегистре Тогда
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
		//Элементы.ЗаписиКампании.Обновить();
		//ОбновитьСправочнуюИнформациюПоКампании();
		УправлениеФормой();
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	КонецЕсли;

КонецПроцедуры


// Команда "ОбновитьДанныеПоКЗБ" в фоне
&НаКлиенте
Процедура СоздатьДокументАккруалБезIDВФоне()
	
	Если ок_НачислениеАккруалов.ПолучитьСтатусКампанииПоНачислениюАккруалов(КампанияПоНачислениюАккруалов) <> ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.РассчитаныАккруалы") Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для создания документа ""Аккруал без ID"" кампания должна быть в статусе ""Рассчитаны аккруалы"".");
		Возврат;
	
	КонецЕсли; 
	
	Если НЕ ок_НачислениеАккруалов.ПроверитьЗаписиКампанииКСозданиюДокумента(КампанияПоНачислениюАккруалов) Тогда
	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для создания документа ""Аккруал без ID"" все обработанные записи кампания должны быть с признаком ""Готово к созданию документа"".");
		Возврат;
	
	КонецЕсли;
	
	//В форме объекта выполняется вызов этой функции в фоновом задании в три этапа:
	//1) запуск фонового задания на сервере,
	//2) подключение обработчика завершения фонового задания на клиенте,
	//3) обработка результата выполнения фонового задания.
	
	// 1. Запуск фонового задания на сервере.
	ДлительнаяОперация = СоздатьДокументАккруалБезIDНаСервереВФоне();

	// 2. Подключение обработчика завершения фонового задания.
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = "Выполняется создание документов.";
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.Интервал = 1;
	
	Оповещение = Новый ОписаниеОповещения("ПриЗавершенииСозданияДокументаАккруалБезID", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция СоздатьДокументАккруалБезIDНаСервереВФоне()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "ок_НачислениеАккруалов.АРММенеджераПоКонтроллингу_СоздатьДокументАккруалБезID", КампанияПоНачислениюАккруалов, ОрганизацияПоУмолчанию);
	
КонецФункции

&НаКлиенте
Процедура ПриЗавершенииСозданияДокументаАккруалБезID(Результат, ДополнительныеПараметры) Экспорт
	
// 3. Обработка результата выполнения фонового задания.

	Если Результат = Неопределено Тогда // Пользователь отменил задание.
		Возврат;
	КонецЕсли;

	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;

	БылоИзменениеВРегистре = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	УдалитьИзВременногоХранилища(Результат.АдресРезультата);
	
	Если БылоИзменениеВРегистре Тогда
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
		//Элементы.ЗаписиКампании.Обновить();
		//ОбновитьСправочнуюИнформациюПоКампании();
		УправлениеФормой();
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	КонецЕсли;

КонецПроцедуры

// Команда "Установить/Снять пометку" в фоне
&НаКлиенте
Процедура ИзменитьПометкуВФоне(ИмяПоля, Пометка)
	
	//В форме объекта выполняется вызов этой функции в фоновом задании в три этапа:
	//1) запуск фонового задания на сервере,
	//2) подключение обработчика завершения фонового задания на клиенте,
	//3) обработка результата выполнения фонового задания.
	
	// 1. Запуск фонового задания на сервере.
	ДлительнаяОперация = ИзменитьПометкуНаСервереВФоне(ИмяПоля, Пометка);

	// 2. Подключение обработчика завершения фонового задания.
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = "Выполняется изменение пометки в выбранных строках.";
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.Интервал = 1;
	
	Оповещение = Новый ОписаниеОповещения("ПриЗавершенииИзмененияПометки", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ИзменитьПометкуНаСервереВФоне(ИмяПоля, Пометка)
	
	МассивСтрокДляОбработки = Новый Массив;
	Для каждого ТекущаяВыделенаяСтрока Из Элементы.ЗаписиКампании.ВыделенныеСтроки Цикл
		МассивСтрокДляОбработки.Добавить(ТекущаяВыделенаяСтрока.ИДСтроки);
	КонецЦикла;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "ок_НачислениеАккруалов.АРММенеджераПоКонтроллингу_ИзменитьПометку", КампанияПоНачислениюАккруалов, ИмяПоля, Пометка, МассивСтрокДляОбработки);
	
КонецФункции

&НаКлиенте
Процедура ПриЗавершенииИзмененияПометки(Результат, ДополнительныеПараметры) Экспорт
	
// 3. Обработка результата выполнения фонового задания.

	Если Результат = Неопределено Тогда // Пользователь отменил задание.
		Возврат;
	КонецЕсли;

	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;

	УдалитьИзВременногоХранилища(Результат.АдресРезультата);
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	//Элементы.ЗаписиКампании.Обновить();
	//ОбновитьСправочнуюИнформациюПоКампании();
	УправлениеФормой();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
КонецПроцедуры

// команда "РассчитатьАккруалы" в фоне
&НаСервере
Функция ЗаполнитьРасчетАккруаловНаСервереВФоне(СтруктураПараметров)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "ок_НачислениеАккруалов.ЗапуститьРасчетАккруаловВФоне", СтруктураПараметров);
	
КонецФункции

&НаКлиенте
Процедура ПриЗавершенииРасчетаАккруалов(Результат, ДополнительныеПараметры) Экспорт
	
	// 3. Обработка результата выполнения фонового задания.

	Если Результат = Неопределено Тогда // Пользователь отменил задание.
		Возврат;
	КонецЕсли;

	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;

	БылоИзменениеВРегистре = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	УдалитьИзВременногоХранилища(Результат.АдресРезультата);
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
	//Если БылоИзменениеВРегистре Тогда
	//	Элементы.ЗаписиКампании.Обновить();
	//	ОбновитьСправочнуюИнформациюПоКампании();
	//КонецЕсли;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)

	БылоИзменениеВРегистре = ок_НачислениеАккруалов.ОбновитьСуммуНачислитьАккруал(КампанияПоНачислениюАккруалов, ДополнительныеПараметры.МассивЦФО) ИЛИ БылоИзменениеВРегистре;
	
	ок_НачислениеАккруалов.УстановитьСтатусКампанииПоНачислениюАккруалов(КампанияПоНачислениюАккруалов, ПредопределенноеЗначение("Перечисление.ок_СтатусыКампанииПоАккруалам.РассчитаныАккруалы"));
	
	Если БылоИзменениеВРегистре Тогда
			
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-02-09 (#4035)
		//Элементы.ЗаписиКампании.Обновить();
		//ОбновитьСправочнуюИнформациюПоКампании();
		УправлениеФормой();
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-02-09 (#4035)
	
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Рассчет аккруалов выполнен");
	
КонецПроцедуры

//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-22 (#3969)
#КонецОбласти
