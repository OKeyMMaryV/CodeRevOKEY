
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЭтоАдресВременногоХранилища(Параметры.АдресВХранилище) Тогда
		ТекстСообщения = НСтр("ru='Непосредственное открытие этой формы не предусмотрено. 
								|Для открытия формы можно воспользоваться командой ""Подбор"".'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли; 
	
	АдресВХранилище = Параметры.АдресВХранилище;
	Настройки = ПолучитьИзВременногоХранилища(АдресВХранилище);
	
	Помеченные	    	 = Настройки.СписокТиповОбъектов;
	НастройкиОтбора 	 = Настройки.НастройкиОтбора;
	НовыеНастройкиОтбора = НовыеНастройкиОтбора(ЭтотОбъект);
	
	Если ТипЗнч(НастройкиОтбора) = Тип("Структура") Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(НовыеНастройкиОтбора, НастройкиОтбора, Истина);
	КонецЕсли;
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказыватьТолькоДокументыСДопАналитикамиПриИзменении(Элемент)
	
	ПриИзмененииФлагаОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьТолькоРегистраторыБитПриИзменении(Элемент)
	
	ПриИзмененииФлагаОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьТолькоДокументыДДСПриИзменении(Элемент)
	
	ПриИзмененииФлагаОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьТолькоДокументыМУПриИзменении(Элемент)
	
	ПриИзмененииФлагаОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьТолькоДокументыПоставщикаПриИзменении(Элемент)
	
	ПриИзмененииФлагаОтбора();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	//ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	//
	//Если ТекущиеДанные = Неопределено Тогда
	//	Возврат;	
	//КонецЕсли;
	//
	//Если ТекущиеДанные.ЭтоГруппа Тогда
	//	Возврат;	
	//КонецЕсли; 
	//
	//ЭлементСписка = Помеченные.НайтиПоЗначению(ТекущиеДанные.ИмяОбъекта);
	//Если ЭлементСписка = Неопределено Тогда
	//	Помеченные.Добавить(ТекущиеДанные.ИмяОбъекта, ТекущиеДанные.Наименование, Истина);
	//КонецЕсли; 
	ПеренестиВПомеченные();
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПомеченные
	
&НаКлиенте
Процедура ПомеченныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УдалитьИзПомеченных();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы
 
&НаКлиенте
Процедура ОК(Команда)
	
	НастройкиПодбора = НовыеНастройкиОтбора(ЭтотОбъект);
	Результат		 = Новый Структура("СписокТиповОбъектов, НастройкиПодбораТиповДокументов", 
							Помеченные, НастройкиПодбора);
	Закрыть(ПоместитьВоВременноеХранилище(Результат, АдресВХранилище));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	УстановитьВсеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТекущее(Команда)
	
	ПеренестиВПомеченные();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсе(Команда)
	
	Помеченные.Очистить();

КонецПроцедуры

&НаКлиенте
Процедура УдалитьТекущее(Команда)
	
	УдалитьИзПомеченных();

КонецПроцедуры
  
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УдалитьИзПомеченных()

	ТекущиеДанные = Элементы.Помеченные.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ЭлементСписка = Помеченные.НайтиПоЗначению(ТекущиеДанные.Значение);
	Если ЭлементСписка <> Неопределено Тогда
		Помеченные.Удалить(Помеченные.Индекс(ЭлементСписка));
	КонецЕсли;	

КонецПроцедуры
 
&НаКлиенте
Процедура ПеренестиВПомеченные()

	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ЭлементСписка = Помеченные.НайтиПоЗначению(ТекущиеДанные.ИмяОбъекта);
	Если ЭлементСписка = Неопределено Тогда
		Помеченные.Добавить(ТекущиеДанные.ИмяОбъекта, ТекущиеДанные.Наименование, Истина);
	КонецЕсли; 

КонецПроцедуры
 
&НаКлиентеНаСервереБезКонтекста
Функция НовыеНастройкиОтбора(Форма)

	НастройкиПодбора = Новый Структура;
	НастройкиПодбора.Вставить("ПоказыватьТолькоДокументыДДС", 			  Форма.ПоказыватьТолькоДокументыДДС);
	НастройкиПодбора.Вставить("ПоказыватьТолькоДокументыСДопАналитиками", Форма.ПоказыватьТолькоДокументыСДопАналитиками);
	НастройкиПодбора.Вставить("ПоказыватьТолькоРегистраторыБит", 		  Форма.ПоказыватьТолькоРегистраторыБит);
	НастройкиПодбора.Вставить("ПоказыватьТолькоДокументыМУ", 			  Форма.ПоказыватьТолькоДокументыМУ);
	НастройкиПодбора.Вставить("ПоказыватьТолькоДокументыПоставщика", 	  Форма.ПоказыватьТолькоДокументыПоставщика);

	Возврат НастройкиПодбора;
	
КонецФункции
 
&НаСервере
Процедура УстановитьВсеНаСервере()

	СКД = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	АдресХранилищаСКД = ПоместитьВоВременноеХранилище(СКД, УникальныйИдентификатор);
	ИсточникНастроек  = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресХранилищаСКД);
	ВыбранныеПоля = Настройки.Структура[0].Выбор.Элементы;
	
	НовоеПоле = ВыбранныеПоля.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	НовоеПоле.Поле = Новый ПолеКомпоновкиДанных("ИмяОбъекта");
	НовоеПоле.Использование = Истина;

	// Формирование макета, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	            	
	// Передача схемы, настроек и данных расшифровки в макет компоновки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(ПолучитьИзВременногоХранилища(АдресХранилищаСКД), 
						Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
		
	// Выполнение компоновки с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , , );
	
	ТабРезультат = Новый ТаблицаЗначений;

	// Вывод таблицы   	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТабРезультат); 	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Помеченные.Очистить();
	Для каждого СтрокаТаблицы Из ТабРезультат Цикл
		Помеченные.Добавить(СтрокаТаблицы.ИмяОбъекта, СтрокаТаблицы.Наименование,Истина);
	КонецЦикла; 

КонецПроцедуры
 
&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	// Для ПоказыватьТолькоДокументыДДС.
	ТипыДокументовДДС = Новый Массив; 
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ТипыДокументовДДС, 
		бит_ОбщегоНазначенияКлиентСерверПереопределяемый.ДокументыПоступленияДенежныхСредств());
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ТипыДокументовДДС, 
		бит_ОбщегоНазначенияКлиентСерверПереопределяемый.ДокументыСписанияДенежныхСредств());
		
	ДокументыДДС = Новый Массив; 
	Для каждого Элемент Из ТипыДокументовДДС Цикл
		МетаданныеДокумента = Метаданные.НайтиПоТипу(Элемент);
		ДокументыДДС.Добавить(МетаданныеДокумента.Имя);
	КонецЦикла; 	
	
	// Для ПоказыватьТолькоДокументыСДопАналитиками.
	ТипыДокументовСАналитиками = Метаданные.ОпределяемыеТипы.бит_ВладелецДополнительныхАналитик.Тип.Типы();
	ДокументыСАналитиками = Новый Массив; 
	Для каждого Элемент Из ТипыДокументовСАналитиками Цикл
		МетаданныеДокумента = Метаданные.НайтиПоТипу(Элемент);
		ДокументыСАналитиками.Добавить(МетаданныеДокумента.Имя);
	КонецЦикла; 	
	
	// Для ПоказыватьТолькоРегистраторыБит
	РегистраторыБИТ = Новый Массив; 
	
	// Для ПоказыватьТолькоДокументыМУ.
	РегистраторыМУ = Новый Массив;
	
	// Ограничение доступа к таблице, недоступной по ролям.
	ЕстьПравоЧтения = Новый Массив;
	
	// Для ПоказыватьТолькоДокументыПоставщика
	ДокументыПоставщика = Новый Массив; 
	
	Для каждого МетаданныеДокумента Из Метаданные.Документы Цикл
		
		Если НЕ ПравоДоступа("Чтение", МетаданныеДокумента) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяДокумента = МетаданныеДокумента.Имя;

		Если СтрНайти(ВРЕГ(ИмяДокумента), ВРЕГ("Удалить")) <> 0 ИЛИ СтрНайти(ВРЕГ(ИмяДокумента), ВРЕГ("бит_Удалить")) <> 0 Тогда 
			Продолжить;
		КонецЕсли; 
		
		ЕстьПравоЧтения.Добавить(ИмяДокумента);

		Если НЕ СтрНачинаетсяС(ИмяДокумента, "бит_") Тогда
			ДокументыПоставщика.Добавить(ИмяДокумента);
			
			Для каждого Элемент Из МетаданныеДокумента.Движения Цикл
				Если СтрНачинаетсяС(Элемент.Имя, "бит_") Тогда
					РегистраторыБИТ.Добавить(ИмяДокумента);
					Прервать;
				КонецЕсли;		
			КонецЦикла;
		КонецЕсли;
		
		Если МетаданныеДокумента.Движения.Содержит(Метаданные.РегистрыБухгалтерии.бит_Дополнительный_2) Тогда
			РегистраторыМУ.Добавить(ИмяДокумента);
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДокументыПоставщика", ДокументыПоставщика, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДокументыДДС", ДокументыДДС, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДокументыСАналитиками", ДокументыСАналитиками, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "РегистраторыБИТ", РегистраторыБИТ, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "РегистраторыМУ", РегистраторыМУ, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ЕстьПравоЧтения", ЕстьПравоЧтения, Истина);

	УстановитьОтборыВСписке(ЭтотОбъект);
	
	Элементы.ПоказыватьТолькоДокументыМУ.Видимость = бит_ОбщегоНазначения.ЕстьОбъектыМСФО();

	Сведения = бит_ОбщегоНазначения.ПолучитьСведенияОПрограмме();
	Элементы.ПоказыватьТолькоДокументыПоставщика.Заголовок = 
		СтрШаблон(Нстр("ru = 'Показывать только документы ""%1""'"), Сведения.Синоним_1С);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборыВСписке(Форма)

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "ДокументыСАналитиками", Истина, 
		ВидСравненияКомпоновкиДанных.Равно, , Форма.ПоказыватьТолькоДокументыСДопАналитиками); 
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "ДокументыДДС", Истина, 
		ВидСравненияКомпоновкиДанных.Равно, , Форма.ПоказыватьТолькоДокументыДДС);
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "РегистраторыБИТ", Истина, 
		ВидСравненияКомпоновкиДанных.Равно, , Форма.ПоказыватьТолькоРегистраторыБит);
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "РегистраторыМУ", Истина, 
		ВидСравненияКомпоновкиДанных.Равно, , Форма.ПоказыватьТолькоДокументыМУ);
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "ДокументыПоставщика", Истина, 
		ВидСравненияКомпоновкиДанных.Равно, , Форма.ПоказыватьТолькоДокументыПоставщика);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииФлагаОтбора()

	УстановитьОтборыВСписке(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти
