#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Процедура выполняет преобразование полученных данных 
// (сдвиг периода, отклонение суммы и количества, распределение по профилю) 
// согласно указанных в обработке настроек.
// 
Процедура ВыполнитьПреобразованиеДанных() Экспорт

	ЭтотОбъект.ОборотыПоБюджетам.Очистить();
	
	// Получим структуру курсов валют.
	СтруктураКурсыВалют = Обработки.бит_ПолучениеДанныхБюджета.ПолучитьСтруктуруКурсовВалют(ЭтотОбъект);
	
	// Получим размерность единицы измерения сумм документа.
	РазмерностьЕдиницы = бит_ОбщегоНазначения.ПолучитьРазмерностьЕдиницыИзмеренияСумм(ЭтотОбъект.ЕдиницаИзмеренияСуммДокумента);
	
	// Определим, необходимо ли выполнять распределение.
	флВыполнятьРаспределение = ?(ЗначениеЗаполнено(ЭтотОбъект.Профиль),Истина,Ложь);
	Если флВыполнятьРаспределение Тогда
		ТабПрофиль = ЭтотОбъект.Профиль.Профиль.Выгрузить();
	Иначе	
		ОписаниеЧисло = Новый ОписаниеТипов("Число");
		ТабПрофиль = Новый ТаблицаЗначений;
		ТабПрофиль.Колонки.Добавить("НомерПериода", ОписаниеЧисло);
		ТабПрофиль.Колонки.Добавить("Процент"     , ОписаниеЧисло);
	КонецЕсли; 
	
	ТабПрофиль.Колонки.Добавить("Коэффициент", ОписаниеЧисло);
	
	Для Каждого СтрокаПрофиль Из ТабПрофиль Цикл
		СтрокаПрофиль.Коэффициент = СтрокаПрофиль.Процент/100;
	КонецЦикла; 
	
	Для Каждого СтрокаТаблицы Из ЭтотОбъект.ТаблицаРезультат Цикл
	
		НоваяСтрока = ЭтотОбъект.ОборотыПоБюджетам.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		
		// Получим период для заполнения исходя от сдвига дат.
		НоваяСтрока.ПериодДляЗаполнения = бит_Бюджетирование.ПолучитьПериодПоСдвигу(НоваяСтрока.Период, ЭтотОбъект.СдвигДат,
			ЭтотОбъект.ПериодичностьСдвигаДат);
																					
		// Рассчитаем сумму и количество для заполнения.
		Обработки.бит_ПолучениеДанныхБюджета.РассчитатьСуммуДляЗаполненияВСтроке(НоваяСтрока, ЭтотОбъект.ВидОтклонения, ЭтотОбъект.ЗначениеОтклонения);
		Обработки.бит_ПолучениеДанныхБюджета.РассчитатьКоличествоДляЗаполненияВСтроке(НоваяСтрока, ЭтотОбъект.ВидОтклоненияКоличества, ЭтотОбъект.ЗначениеОтклоненияКоличества);
		
		// Рассчитаем суммы в валюте документа.
		Обработки.бит_ПолучениеДанныхБюджета.РассчитатьСуммуВВалютеДокументаВСтроке(НоваяСтрока, СтруктураКурсыВалют, РазмерностьЕдиницы);
		
		Если флВыполнятьРаспределение Тогда
			 Ит = Новый Структура("КоличествоДляЗаполнения, СуммаСценарийДляЗаполнения, СуммаСценарийВВалютеДокумента", 0,0,0);
			 Для Каждого СтрокаПрофиль Из ТабПрофиль Цикл
			 	  СтрокаРаспределение = ЭтотОбъект.ОборотыПоБюджетам.Добавить();
				  ЗаполнитьЗначенияСвойств(СтрокаРаспределение, НоваяСтрока);
				  СтрокаРаспределение.ПериодДляЗаполнения = бит_Бюджетирование.ПолучитьПериодПоСдвигу(СтрокаРаспределение.ПериодДляЗаполнения,
				  	СтрокаПрофиль.НомерПериода, ЭтотОбъект.ПериодичностьСдвигаДат);
																								
				  СтрокаРаспределение.КоличествоДляЗаполнения       = СтрокаРаспределение.КоличествоДляЗаполнения * СтрокаПрофиль.Коэффициент;
				  СтрокаРаспределение.СуммаСценарийДляЗаполнения    = СтрокаРаспределение.СуммаСценарийДляЗаполнения * СтрокаПрофиль.Коэффициент;
				  СтрокаРаспределение.СуммаСценарийВВалютеДокумента = СтрокаРаспределение.СуммаСценарийВВалютеДокумента * СтрокаПрофиль.Коэффициент;
				  СтрокаРаспределение.ПроцентРаспределения = СтрокаПрофиль.Процент;
				  
				  Ит.КоличествоДляЗаполнения = Ит.КоличествоДляЗаполнения + СтрокаРаспределение.КоличествоДляЗаполнения;
				  Ит.СуммаСценарийДляЗаполнения = Ит.СуммаСценарийДляЗаполнения + СтрокаРаспределение.СуммаСценарийДляЗаполнения;
				  Ит.СуммаСценарийВВалютеДокумента = Ит.СуммаСценарийВВалютеДокумента + СтрокаРаспределение.СуммаСценарийВВалютеДокумента;
			 КонецЦикла; 
			 
			 Обработки.бит_ПолучениеДанныхБюджета.СкорректироватьОшибкуОкругления(НоваяСтрока, Ит, СтрокаРаспределение, "КоличествоДляЗаполнения");
			 Обработки.бит_ПолучениеДанныхБюджета.СкорректироватьОшибкуОкругления(НоваяСтрока, Ит, СтрокаРаспределение, "СуммаСценарийДляЗаполнения");
			 Обработки.бит_ПолучениеДанныхБюджета.СкорректироватьОшибкуОкругления(НоваяСтрока, Ит, СтрокаРаспределение, "СуммаСценарийВВалютеДокумента");
			 ЭтотОбъект.ОборотыПоБюджетам.Удалить(НоваяСтрока);
		КонецЕсли; // Выполнять распределение.
		
	КонецЦикла; // Объект.ТаблицаРезультат.

КонецПроцедуры

Функция  ДействиеПолучениеДанныхБюджета(ПараметрыДействия, ПараметрыПроцесса = Неопределено) Экспорт
	
	РезДанные = Новый Структура;
	РезДанные.Вставить("Выполнено", Ложь);
	
	ДанныеНастройки = Обработки.бит_ПолучениеДанныхБюджета.ИзвлечьНастройки(ПараметрыДействия.Настройка, ЭтотОбъект);
	
	Если ДанныеНастройки.Выполнено Тогда
		
		ТабОтборВОтчете = ДанныеНастройки.Таблица_ОтборВОтчете;
		ТабПараметры = ДанныеНастройки.Таблица_Параметры;
		
		// Заполнение отборов и параметров по именам.
		Если ТипЗнч(ПараметрыПроцесса) = Тип("Структура") Тогда
			Для Каждого СтрокаТаблицы Из ТабПараметры Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ЗначениеПараметра) И ПараметрыПроцесса.Свойство(СтрокаТаблицы.ИмяПараметра) Тогда
					СтрокаТаблицы.ЗначениеПараметра = ПараметрыПроцесса[СтрокаТаблицы.ИмяПараметра];
				КонецЕсли; 
			КонецЦикла; 
			
			Для Каждого СтрокаТаблицы Из ТабОтборВОтчете Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Значение) И ПараметрыПроцесса.Свойство(СтрокаТаблицы.Имя) Тогда
					СтрокаТаблицы.Значение = ПараметрыПроцесса[СтрокаТаблицы.Имя];
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли; // Заполнение Отбора и Параметров.
		
		Если ПараметрыДействия.Свойство("НачалоПериода") И ЗначениеЗаполнено(ПараметрыДействия.НачалоПериода) Тогда
			ЭтотОбъект.СтандартныйПериод.ДатаНачала = ПараметрыДействия.НачалоПериода;
		КонецЕсли; 
		Если ПараметрыДействия.Свойство("КонецПериода") И ЗначениеЗаполнено(ПараметрыДействия.КонецПериода) Тогда
			ЭтотОбъект.СтандартныйПериод.ДатаОкончания = ПараметрыДействия.КонецПериода;
		КонецЕсли; 
		
		ТаблицаРезультатВрем = Обработки.бит_ПолучениеДанныхБюджета.ПолучитьДанные(ЭтотОбъект.ИсточникДанных,
			ЭтотОбъект.СтандартныйПериод, ТабОтборВОтчете, ТабПараметры, ЭтотОбъект.НастройкаПулаПодключений);
		
		Если ТаблицаРезультатВрем.Количество() > 0 Тогда																					 
			ЭтотОбъект.ТаблицаРезультат.Очистить();
			Для Каждого СтрокаВрем ИЗ ТаблицаРезультатВрем Цикл
				НоваяСтрока = ЭтотОбъект.ТаблицаРезультат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВрем);
			КонецЦикла;	
			ВыполнитьПреобразованиеДанных();
			РезДанные.Выполнено = Истина;
		КонецЕсли;
	КонецЕсли;	
	
	Возврат РезДанные;	
	
КонецФункции	

Функция  ДействиеКопированиеДанныхБюджета(ПараметрыДействия, ПараметрыПроцесса = Неопределено) Экспорт
	
	РезДанные = Новый Структура;
	РезДанные.Вставить("Выполнено", Ложь);
	
	ДанныеНастройки = Обработки.бит_ПолучениеДанныхБюджета.ИзвлечьНастройки(ПараметрыДействия.Настройка, ЭтотОбъект);
	
	Если ДанныеНастройки.Выполнено Тогда
		
		Компоновщик = Новый КомпоновщикНастроекКомпоновкиДанных;
		АдресСКД = Обработки.бит_ПолучениеДанныхБюджета.ИнициализироватьКомпоновщик("СКД_Копирование", Компоновщик, Новый УникальныйИдентификатор);
		
		СхемаКомпоновкиДанных = ПолучитьИзВременногоХранилища(АдресСКД);
		
		ПараметрыСКД = Компоновщик.Настройки.ПараметрыДанных;
		
		Если ПараметрыДействия.Свойство("НачалоПериода") И ЗначениеЗаполнено(ПараметрыДействия.НачалоПериода) Тогда
			ПараметрыСКД.УстановитьЗначениеПараметра("НачалоПериода"   , ПараметрыДействия.НачалоПериода);
		Иначе	
			ПараметрыСКД.УстановитьЗначениеПараметра("НачалоПериода"   , ЭтотОбъект.СтандартныйПериод.ДатаНачала);
		КонецЕсли; 
		Если ПараметрыДействия.Свойство("КонецПериода") И ЗначениеЗаполнено(ПараметрыДействия.КонецПериода) Тогда
			ПараметрыСКД.УстановитьЗначениеПараметра("КонецПериода"    , ПараметрыДействия.КонецПериода);
		Иначе	
			ПараметрыСКД.УстановитьЗначениеПараметра("КонецПериода"    , ЭтотОбъект.СтандартныйПериод.ДатаОкончания);
		КонецЕсли; 
		
		Если  ДанныеНастройки.Свойство("ПользовательскиеНастройки") Тогда
			Если ТипЗнч(ДанныеНастройки.ПользовательскиеНастройки) = Тип("ПользовательскиеНастройкиКомпоновкиДанных") Тогда
				Компоновщик.ЗагрузитьПользовательскиеНастройки(ДанныеНастройки.ПользовательскиеНастройки);
			КонецЕсли; // Это пользовательские настройки.
		КонецЕсли; // НЕ СтрРежимы.ЭтоПолучениеДанных.
		
		// Установка отбора из параметров процесса.
		Если ТипЗнч(ПараметрыПроцесса) = Тип("Структура") Тогда
			
			Для Каждого ТекНастройка Из Компоновщик.ПользовательскиеНастройки.Элементы Цикл
				
				Если НЕ ТипЗнч(ТекНастройка) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
					Продолжить;
				КонецЕсли; 
				
				Для Каждого ЭО Из Компоновщик.Настройки.Отбор.Элементы Цикл
					Если ЭО.ИдентификаторПользовательскойНастройки = ТекНастройка.ИдентификаторПользовательскойНастройки Тогда
						
						ИмяПоляОтбора = Строка(ЭО.ЛевоеЗначение);
						
						Если ТекНастройка.Использование = Ложь 
							И НЕ ЗначениеЗаполнено(ТекНастройка.ПравоеЗначение) 
							И ПараметрыПроцесса.Свойство(ИмяПоляОтбора)  Тогда
							
							ТекНастройка.Использование = Истина;
							ТекНастройка.ПравоеЗначение = ПараметрыПроцесса[ИмяПоляОтбора];
						КонецЕсли;					
					КонецЕсли; 
				КонецЦикла;  // Отбор.Элементы.
			КонецЦикла;  //ПользовательскиеНастройки.
		КонецЕсли; // Параметры процесса - структура.
		
		ТаблицаРезультатВрем = Обработки.бит_ПолучениеДанныхБюджета.ПолучитьДанныеСКД(СхемаКомпоновкиДанных, Компоновщик);
		
		Если ТаблицаРезультатВрем.Количество() > 0 Тогда																					 
			ЭтотОбъект.ТаблицаРезультат.Очистить();
			Для Каждого СтрокаВрем ИЗ ТаблицаРезультатВрем Цикл
				НоваяСтрока = ЭтотОбъект.ТаблицаРезультат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВрем);
			КонецЦикла;	
			ВыполнитьПреобразованиеДанных();
			РезДанные.Выполнено = Истина;
		КонецЕсли;
		
	КонецЕсли;	
		
	Возврат РезДанные;	
	
КонецФункции

Функция  ДействиеКопированиеДанныхГрафиковДоговоров(ПараметрыДействия, ПараметрыПроцесса = Неопределено) Экспорт
	
	РезДанные = Новый Структура;
	РезДанные.Вставить("Выполнено", Ложь);
	
	ДанныеНастройки = Обработки.бит_ПолучениеДанныхБюджета.ИзвлечьНастройки(ПараметрыДействия.Настройка, ЭтотОбъект);
	
	Если ДанныеНастройки.Выполнено Тогда
		
		Компоновщик = Новый КомпоновщикНастроекКомпоновкиДанных;		 
		АдресСКД = Обработки.бит_ПолучениеДанныхБюджета.ИнициализироватьКомпоновщик("СКД_ГрафикДоговоров", Компоновщик, Новый УникальныйИдентификатор);		
		
		СхемаКомпоновкиДанных = ПолучитьИзВременногоХранилища(АдресСКД);
		
		ПараметрыСКД = Компоновщик.Настройки.ПараметрыДанных;
		
		Если ПараметрыДействия.Свойство("НачалоПериода") И ЗначениеЗаполнено(ПараметрыДействия.НачалоПериода) Тогда
			ПараметрыСКД.УстановитьЗначениеПараметра("НачалоПериода"   , ПараметрыДействия.НачалоПериода);
		Иначе	
			ПараметрыСКД.УстановитьЗначениеПараметра("НачалоПериода"   , ЭтотОбъект.СтандартныйПериод.ДатаНачала);
		КонецЕсли; 
		Если ПараметрыДействия.Свойство("КонецПериода") И ЗначениеЗаполнено(ПараметрыДействия.КонецПериода) Тогда
			ПараметрыСКД.УстановитьЗначениеПараметра("КонецПериода"    , ПараметрыДействия.КонецПериода);
		Иначе	
			ПараметрыСКД.УстановитьЗначениеПараметра("КонецПериода"    , ЭтотОбъект.СтандартныйПериод.ДатаОкончания);
		КонецЕсли; 

		ПараметрыСКД.УстановитьЗначениеПараметра("РежимВыбораСуммы", ЭтотОбъект.РежимВыбораСуммы);
		
		Если  ДанныеНастройки.Свойство("ПользовательскиеНастройки") Тогда
			Если ТипЗнч(ДанныеНастройки.ПользовательскиеНастройки) = Тип("ПользовательскиеНастройкиКомпоновкиДанных") Тогда
				Компоновщик.ЗагрузитьПользовательскиеНастройки(ДанныеНастройки.ПользовательскиеНастройки);
			КонецЕсли; // Это пользовательские настройки.
		КонецЕсли; // НЕ СтрРежимы.ЭтоПолучениеДанных.
		
		// Установка отбора из параметров процесса.
		Если ТипЗнч(ПараметрыПроцесса) = Тип("Структура") Тогда
			
			Для Каждого ТекНастройка Из Компоновщик.ПользовательскиеНастройки.Элементы Цикл
				
				Если НЕ ТипЗнч(ТекНастройка) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
					Продолжить;
				КонецЕсли; 
				
				Для Каждого ЭО Из Компоновщик.Настройки.Отбор.Элементы Цикл
					
					Если ЭО.ИдентификаторПользовательскойНастройки = ТекНастройка.ИдентификаторПользовательскойНастройки Тогда
						
						ИмяПоляОтбора = Строка(ЭО.ЛевоеЗначение);
						
						Если ТекНастройка.Использование = Ложь 
							И НЕ ЗначениеЗаполнено(ТекНастройка.ПравоеЗначение) 
							И ПараметрыПроцесса.Свойство(ИмяПоляОтбора)  Тогда
							
							ТекНастройка.Использование = Истина;
							ТекНастройка.ПравоеЗначение = ПараметрыПроцесса[ИмяПоляОтбора];
						КонецЕсли;					
					КонецЕсли; 
				КонецЦикла;  // Отбор.Элементы.
			КонецЦикла;  //ПользовательскиеНастройки.
		КонецЕсли; // Параметры процесса - структура.
		
		ТаблицаРезультатВрем = Обработки.бит_ПолучениеДанныхБюджета.ПолучитьДанныеСКД(СхемаКомпоновкиДанных, Компоновщик);
		
		Если ТаблицаРезультатВрем.Количество() > 0 Тогда																					 
			ЭтотОбъект.ТаблицаРезультат.Очистить();
			Для Каждого СтрокаВрем ИЗ ТаблицаРезультатВрем Цикл
				НоваяСтрока = ЭтотОбъект.ТаблицаРезультат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВрем);
			КонецЦикла;	
			ВыполнитьПреобразованиеДанных();
			РезДанные.Выполнено = Истина;
		КонецЕсли;
	КонецЕсли;	
		
	Возврат РезДанные;	
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЭтотОбъект.РежимЗаполнения = "ПолучениеБюджета" Тогда
		  ПроверяемыеРеквизиты.Добавить("ИсточникДанных");
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
