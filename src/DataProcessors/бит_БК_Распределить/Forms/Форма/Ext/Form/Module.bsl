
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПараметрРаспределения = "12_Месяцев";
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры.ЗначенияЗаполнения);
	
	АдресТЗ = Параметры.АдресТЗ;
	
	ТЗ = ПолучитьИзВременногоХранилища(АдресТЗ);
	
	ДобавляемыеРеквизиты = Новый Массив;
	РеквизитФормы = Новый РеквизитФормы("Выполнять", Новый ОписаниеТипов("Булево"), "ТабличноеПолеРезультат");
	ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
	Для Каждого КолонкаТЗ ИЗ ТЗ.Колонки Цикл
		РеквизитФормы = Новый РеквизитФормы(КолонкаТЗ.Имя, Новый ОписаниеТипов(КолонкаТЗ.ТипЗначения), "ТабличноеПолеРезультат");
		ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
	КонецЦикла;
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ТекКолонка = Элементы.Добавить("Выполнять", Тип("ПолеФормы"), Элементы.ТабличноеПолеРезультат);
	ТекКолонка.Вид = ВидПоляФормы.ПолеФлажка;
	ТекКолонка.ПутьКДанным = "ТабличноеПолеРезультат.Выполнять";
	Для Каждого КолонкаТЗ ИЗ ТЗ.Колонки Цикл
		ТекКолонка = Элементы.Добавить(КолонкаТЗ.Имя, Тип("ПолеФормы"), Элементы.ТабличноеПолеРезультат);
		ТекКолонка.ПутьКДанным = "ТабличноеПолеРезультат."+КолонкаТЗ.Имя;
		ТекКолонка.ТолькоПросмотр = Истина;
		//устанавливаем видимость
		Если ТекКолонка.Имя ="БанковскийСчет"
			ИЛИ ТекКолонка.Имя ="ИД"
			ИЛИ ТекКолонка.Имя ="Измерение"
			ИЛИ ТекКолонка.Имя ="Номенклатура"
			ИЛИ ТекКолонка.Имя ="НоменклатурнаяГруппа"
			ИЛИ ТекКолонка.Имя ="бит_БК_УсловияОплаты"
			ИЛИ ТекКолонка.Имя ="бит_БК_ФормаОплаты"
			ИЛИ ТекКолонка.Имя ="бит_БК_ЦенаБезНДС"
			ИЛИ ТекКолонка.Имя ="бит_БК_ЦенаСНДС"
			ИЛИ ТекКолонка.Имя ="бит_БК_НуженДоговор" Тогда			
			ТекКолонка.Видимость = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ТабличноеПолеРезультат.Загрузить(ТЗ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеДействияФормыОК(Команда)
	АдресРезультат = Неопределено;
	Если ТабличноеПолеРезультат.НайтиСтроки(Новый Структура("Выполнять", Истина)).Количество() <> 0 Тогда
		АдресРезультат = Распределить();
	КонецЕсли;
	Закрыть(АдресРезультат);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВсеНажатие();
КонецПроцедуры

&НаКлиенте
Процедура ПолеВвода1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если НЕ ПараметрРаспределения = "Месяцев" тогда
		ПараметрРаспределения = "Месяцев"; 
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПолеВвода1ПриИзменении(Элемент)
	Если НЕ ПараметрРаспределения = "Месяцев" тогда
		ПараметрРаспределения = "Месяцев"; 
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПолеВвода1АвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	Если НЕ ПараметрРаспределения = "Месяцев" тогда
		ПараметрРаспределения = "Месяцев"; 
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПолеВвода1ОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	Если НЕ ПараметрРаспределения = "Месяцев" тогда
		ПараметрРаспределения = "Месяцев"; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолеВвода2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если НЕ ПараметрРаспределения = "Сдвиг" тогда
		ПараметрРаспределения = "Сдвиг"; 
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПолеВвода2ПриИзменении(Элемент)
	Если НЕ ПараметрРаспределения = "Сдвиг" тогда
		ПараметрРаспределения = "Сдвиг"; 
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПолеВвода2АвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	Если НЕ ПараметрРаспределения = "Сдвиг" тогда
		ПараметрРаспределения = "Сдвиг"; 
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПолеВвода2ОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	Если НЕ ПараметрРаспределения = "Сдвиг" тогда
		ПараметрРаспределения = "Сдвиг"; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВсеНажатие()
	Для Каждого  ТекСтрока Из ТабличноеПолеРезультат Цикл
		ТекСтрока.Выполнять = Истина;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеНажатие()
	Для Каждого  ТекСтрока Из ТабличноеПолеРезультат Цикл
		ТекСтрока.Выполнять = Ложь;	
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция Распределить()
	Если ПараметрРаспределения = "12_Месяцев" тогда
		МесяцевРаспределения = 12;
		МесяцевСдвига = 0;
		Знак = 1;
	ИначеЕсли ПараметрРаспределения = "Месяцев" Тогда
		Если КоличествоМесяцев<0 Тогда 
			Знак = -1;
		иначе
			Знак = 1;
		КонецЕсли;		
		МесяцевРаспределения = КоличествоМесяцев*Знак;
		МесяцевСдвига = 0;				
	ИначеЕсли ПараметрРаспределения = "Сдвиг" Тогда
		Если Сдвиг < 0 Тогда 
			Знак = -1;
		иначе
			Знак = 1;
		КонецЕсли;		
		МесяцевРаспределения = 1;
		МесяцевСдвига = Сдвиг*Знак;
	КонецЕсли;
	
	ВозвращаемоеЗначение = ТабличноеПолеРезультат.Выгрузить().СкопироватьКолонки();
	ВозвращаемоеЗначение.Колонки.Добавить("РаспределеннаяСумма",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 2)));
	//+Сенин С.В. 19.08.16 №2591
	ВозвращаемоеЗначение.Колонки.Добавить("РаспределеннаяСуммаСНДС",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 2)));
	//-Сенин С.В. 19.08.16 №2591
	
	Для Каждого ТекСтрока Из ТабличноеПолеРезультат Цикл
		Сумма = ТекСтрока[Объект.ИмяКолонкиСуммы];
		РаспределеннаяСумма = 0;
		//+Сенин С.В. 19.08.16 №2591
		СуммаСНДС = ТекСтрока["Сумма"];
		РаспределеннаяСуммаСНДС = 0;
		//-Сенин С.В. 19.08.16 №2591
		
		Если НЕ ТекСтрока.Выполнять Тогда
			НовСтрока = ВозвращаемоеЗначение.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
			НовСтрока.РаспределеннаяСумма = Сумма;
			РаспределеннаяСумма = РаспределеннаяСумма + НовСтрока.РаспределеннаяСумма;
			//+Сенин С.В. 19.08.16 №2591
			НовСтрока.РаспределеннаяСуммаСНДС = СуммаСНДС;
			РаспределеннаяСуммаСНДС = РаспределеннаяСуммаСНДС + НовСтрока.РаспределеннаяСуммаСНДС;
			//-Сенин С.В. 19.08.16 №2591
		иначе
			СуммаКРаспределению = Сумма/МесяцевРаспределения;
			//+Сенин С.В. 19.08.16 №2591
			СуммаСНДСКРаспределению = СуммаСНДС/МесяцевРаспределения;
			//-Сенин С.В. 19.08.16 №2591
			Для сч = 0 по МесяцевРаспределения-1 Цикл
				НовСтрока = ВозвращаемоеЗначение.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
				
				НовСтрока.РаспределеннаяСумма = Окр(СуммаКРаспределению,2);
				РаспределеннаяСумма = РаспределеннаяСумма + НовСтрока.РаспределеннаяСумма;
				НовСтрока.Период = ДобавитьМесяц(ТекСтрока.Период,(сч+МесяцевСдвига)*Знак);
				//Компенсируем округление в текущей строке
				Разность = Окр(СуммаКРаспределению*(сч+1) - РаспределеннаяСумма,2);
				Если  Разность <> 0 Тогда
					НовСтрока.РаспределеннаяСумма = НовСтрока.РаспределеннаяСумма + Разность;
					РаспределеннаяСумма = РаспределеннаяСумма + Разность;
				КонецЕсли;
				
				//+Сенин С.В. 19.08.16 №2591
				НовСтрока.РаспределеннаяСуммаСНДС = Окр(СуммаСНДСКРаспределению,2);
				РаспределеннаяСуммаСНДС = РаспределеннаяСуммаСНДС + НовСтрока.РаспределеннаяСуммаСНДС;
				НовСтрока.Период = ДобавитьМесяц(ТекСтрока.Период,(сч+МесяцевСдвига)*Знак);
				//Компенсируем округление в текущей строке
				Разность = Окр(СуммаСНДСКРаспределению*(сч+1) - РаспределеннаяСуммаСНДС,2);
				Если  Разность <> 0 Тогда
					НовСтрока.РаспределеннаяСуммаСНДС = НовСтрока.РаспределеннаяСуммаСНДС + Разность;
					РаспределеннаяСуммаСНДС = РаспределеннаяСуммаСНДС + Разность;
				КонецЕсли;
				//-Сенин С.В. 19.08.16 №2591
				
			КонецЦикла;

		КонецЕсли;
		////Компенсируем округление в последней строке
		//Разность = Сумма - РаспределеннаяСумма;
		//Если  Разность <> 0 Тогда
		//	НовСтрока.РаспределеннаяСумма = НовСтрока.РаспределеннаяСумма + Разность;
		//КонецЕсли;
	КонецЦикла;	
	
	Возврат ПоместитьВоВременноеХранилище(ВозвращаемоеЗначение, АдресТЗ);
	//Объект.бит_БК_ЗагрузитьРезультатыРаспределить(ВозвращаемоеЗначение, Объект.ИмяТЧ);
	
КонецФункции

