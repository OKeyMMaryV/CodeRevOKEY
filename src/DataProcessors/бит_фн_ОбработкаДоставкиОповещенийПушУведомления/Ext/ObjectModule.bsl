#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Функция определяет, что обработка является обработкой доставки оповещений.
// 
// Возвращаемое значение:
//   Булево
// 
Функция ЭтоОбработкаДоставкиОповещений() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Процедура проверяет корретность структуры сообщения. В случае ошибки устанавливается Отказ = Истина;
// 
Процедура СтруктураСообщенияКорректна(Сообщение,Отказ,ПротоколОтправки = "") Экспорт
	
	// Приведем строковое описание типа текста к системному перечислению.
	Если НЕ Сообщение.Свойство("ТипТекстаСообщения")
		ИЛИ НЕ ЗначениеЗаполнено(Сообщение.ТипТекстаСообщения) Тогда
		
		ТипТекстаСообщения = ТипТекстаПочтовогоСообщения.ПростойТекст;
	Иначе
		
		Для Каждого ТекущийТипТекста Из ТипТекстаПочтовогоСообщения Цикл
			
			Если Строка(ТекущийТипТекста) = Сообщение.ТипТекстаСообщения Тогда
				ТипТекстаСообщения = ТекущийТипТекста;
				
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Сообщение.Вставить("ТипТекстаСообщения", ТипТекстаСообщения);
	
КонецПроцедуры

// Процедура проверяет корретность настроек доставки. В случае ошибки устанавливается Отказ = Истина;
// 
Процедура СтруктураНастроекДоставкиКорректна(Настройка,Отказ,ПротоколОтправки = "") Экспорт
	
КонецПроцедуры

// Процедура проверяет корретность структуры параметров. В случае ошибки устанавливается Отказ = Истина;
// 
Процедура СтруктураПараметровКорректна(Настройка,Отказ,ПротоколОтправки = "") Экспорт
	
	Если НЕ Настройка.Свойство("АдресПолучателя") 
		 ИЛИ НЕ ЗначениеЗаполнено(Настройка.АдресПолучателя) Тогда
	
		Отказ = Истина;
		ПротоколОтправки = "Не указано мобильное устройство получателя!";
		
		
	КонецЕсли; 
	
	
КонецПроцедуры

// Функция возвращает настройки доставки по умолчанию.
// 
// Возвращаемое значение:
//   РезСтруктура   - Структура
// 
Функция НастройкиПоУмолчанию() Экспорт

	РезСтруктура = Новый Структура;
	РезСтруктура.Вставить("Токен"          ,"");

	Возврат РезСтруктура;
	
КонецФункции // НастройкиПоУмолчанию()

// Процедура выполняет отправку сообщений;
// 
// Параметры:
//  СообщениеСтруктура  - Структура.
//  НастройкиДоставки   - Структура.
//  СтруктураПараметров - Структура.
//  ПротоколОтправки    - Строка.
// 
Функция ОтправитьСообщение(СообщениеСтруктура, НастройкиДоставки, СтруктураПараметров, ПротоколОтправки="") Экспорт
	
	флДействиеВыполнено = Ложь;			
	Отказ = Ложь;
	
	// Выполним проверки настроек 
	СтруктураСообщенияКорректна(СообщениеСтруктура,Отказ,ПротоколОтправки);	
	СтруктураНастроекДоставкиКорректна(НастройкиДоставки,Отказ,ПротоколОтправки); 
	СтруктураПараметровКорректна(СтруктураПараметров,Отказ,ПротоколОтправки); 
	
	Если не Отказ Тогда
		Если СтруктураПараметров.АдресПолучателя.ПометкаУдаления Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		МобильноеУстройство = СтруктураПараметров.АдресПолучателя;
		
		// отправка оповещения
		HttpConnections = new HTTPСоединение("fcm.googleapis.com",,,,,30,New OpenSSLSecureConnection(Undefined, Undefined));
		
		HttpRequest = new HTTPЗапрос;
		
		Заголовки = Новый Соответствие;
		Заголовки.Вставить("Content-Type","application/json"); 
		Заголовки.Вставить("Authorization","Key=AAAAbve43SY:APA91bGS5dX0XZz9vtgppzb4FvTPm8aNIRDT8CD2HC5Q5oXZejO63099XwX5sKWwHbcu_B_MRKbZWBtpX3gGjPXl9XKlnosKOFM3uBpV6n7DT4yZ8eTIOe32p6AB6Mhlb0VqjWUd1S4H-6rwRvkwokAhiFESc0Df1A");
		
		Если ЗначениеЗаполнено(СообщениеСтруктура.Бейджи) Тогда
			Бейдж = СообщениеСтруктура.Бейджи;
		Иначе
			Бейдж = 0;
		КонецЕсли;
		
		
		HttpRequest.АдресРесурса = "/fcm/send";
		HttpRequest.Заголовки = Заголовки;
		strJSON = "{""notification"":{""title"":""%ЗаголовокСообщения%"",""body"":""%ТекстУведомления%"",""sound"":""default""},""data"":{""your_key"":""your_value""}, ""to"":""%Токен%""}";
		//strJSON = "{""os"":""%ОС%"", ""device_id"":""%ИД_Устройства%"", ""app_name"":""bitfinance"", ""auth_token"":""%Токен%"", ""title"":""%ЗаголовокСообщения%"", ""text"":""%ТекстУведомления%""";	
		//Если МобильноеУстройство.ОперационнаяСистема = Перечисления.бит_МобильныеОперационныеСистемы.ios И СообщениеСтруктура.Свойство("Бейджи") И СообщениеСтруктура.Бейджи > 0 Тогда
		//
		//	strJSON = strJSON+ ", ""badge"":%Бейджи%";
		//	
		//КонецЕсли; 
		//strJSON = strJSON + "}";
		
		СообщениеЗаголовок = СтрЗаменить(СообщениеСтруктура.Заголовок,"""","\""");
		strJSON = СтрЗаменить(strJSON, "%ЗаголовокСообщения%", СообщениеЗаголовок);
		
		СообщениеТекст = СтрЗаменить(СообщениеСтруктура.Текст,"""","\""");
		strJSON = СтрЗаменить(strJSON, "%ТекстУведомления%"  , СообщениеТекст);
		
		//ОС = бит_РаботаСМетаданными.ПолучитьИмяЗначенияПеречисления(Перечисления.бит_МобильныеОперационныеСистемы, МобильноеУстройство.ОперационнаяСистема);		
		//strJSON = СтрЗаменить(strJSON, "%ОС%", ОС);
		//strJSON = СтрЗаменить(strJSON, "%ИД_Устройства%", СокрЛП(МобильноеУстройство.ИД));
		
		strJSON = СтрЗаменить(strJSON, "%Токен%"  , МобильноеУстройство.Токен);

		//Если СообщениеСтруктура.Свойство("Бейджи") Тогда
		//
		//strJSON = СтрЗаменить(strJSON, "%Бейджи%", Формат(СообщениеСтруктура.Бейджи, "ЧГ="));
		//
		//КонецЕсли; 
		
		HttpRequest.УстановитьТелоИзСтроки(strJSON,КодировкаТекста.UTF8);
		
		responce = HttpConnections.ОтправитьДляОбработки(HttpRequest);
		
		strResponce = responce.ПолучитьТелоКакСтроку();
		                                                                                          
		Если responce.КодСостояния = 200 Тогда
			
			Если (СтрНайти(strResponce, "InvalidRegistration") > 0) Или (СтрНайти(strResponce, "NotRegistered") > 0) Тогда
				МобильноеУстройствоОб = МобильноеУстройство.ПолучитьОбъект();
				МобильноеУстройствоОб.ПометкаУдаления = Истина;
				ЗаписьПометки = бит_ОбщегоНазначения.ЗаписатьСправочник(МобильноеУстройствоОб,"","Ошибки",Истина);
			КонецЕсли;			
			
			флДействиеВыполнено = Истина;
			
			ПротоколОтправки =  НСтр("ru = 'Сообщение отправлено на мобильное устройство. Сообщение: %1%. Ответ сервера: %2%.'");
			ПротоколОтправки = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ПротоколОтправки, strJSON, strResponce);
			
			
		Иначе	
			
			ПротоколОтправки =  НСтр("ru = 'Ошибка отправки сообщения на мобильное устройство. Сообщение: %1%. Ответ сервера: %2%.'");
			ПротоколОтправки = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ПротоколОтправки, strJSON, strResponce);
						
			флДействиеВыполнено = Ложь;
			
		КонецЕсли; 
		
	КонецЕсли; // Отказ
		
	Возврат флДействиеВыполнено;
	
КонецФункции



#КонецОбласти

#КонецЕсли
