#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// бит_DFedotov Получает текст запроса для требуемого режима
//
// Параметры:
//	Режим - ПеречислениеСсылка.бит_му_РежимыПодбораВНА
//	СтруктураПараметров - Структура,Неопределено - дополнительные параметры необходимые для некоторых режимов
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка
//
Функция ПолучитьТекстЗапроса(Режим, СтруктураПараметров=Неопределено, Подбор07_0804) Экспорт
	
	Если СтруктураПараметров = Неопределено Тогда
		СтруктураПараметров = Новый Структура;
		// обязательные параметры для режима ВыбытиеОС:
		//	- ВидДвижения - ПеречислениеСсылка.бит_му_ВидыДвиженияВыбытия
		//
		// обязательные параметры для режима ВыбытиеНМА:
		//	- ВидДвижения - ПеречислениеСсылка.бит_му_ВидыОперацийВыбытиеНМА
	КонецЕсли;
	
	ТекстЗапроса = "";
	
	// Сформируем тексты запроса для различных режимов подбора
	Если Режим = Перечисления.бит_му_РежимыПодбораВНА.ПринятиеКУчетуОС 
		Или Режим = Перечисления.бит_му_РежимыПодбораВНА.ВводНачальныхОстатковОС Тогда
		
		// BIT Avseenkov 15052014 /Доработка функцонала по уастку основных средств {
		Если Подбор07_0804 Тогда 
			ТекстЗапроса = СформироватьТекстЗапросаОС07_0804();
		Иначе 
		//}
		
		ТекстЗапроса = СформироватьТекстЗапросаПринятиеКУчетуОС();
		
		КонецЕсли;
		
	ИначеЕсли Режим = Перечисления.бит_му_РежимыПодбораВНА.МодернизацияОС Тогда
		
		// BIT Avseenkov 15052014 /Доработка функцонала по уастку основных средств {
		Если Подбор07_0804 Тогда 
			ТекстЗапроса = СформироватьТекстЗапросаОС07_0804();
		Иначе 
			ТекстЗапроса = СформироватьТекстЗапросаМодернизацияОС();
			//}
		КонецЕсли;
		
		
		
	ИначеЕсли Режим = Перечисления.бит_му_РежимыПодбораВНА.бит_КомплектацияОС Тогда
		
		ТекстЗапроса = СформироватьТекстЗапросаКомплектацияОС();		
		
	// бит_ASuleymanov изменение кода. Начало. 04.02.2014{{
	ИначеЕсли Режим = Перечисления.бит_му_РежимыПодбораВНА.ПереводОСВСоставИнвестиционнойСобственности Тогда
		
		ТекстЗапроса = СформироватьТекстЗапросаПереводОСВСоставИнвестиционнойСобственности();
		
	КонецЕсли; 	
	// бит_ASuleymanov изменение кода. Конец. 04.02.2014}}
	
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапроса()

// бит_DFedotov Программно формирует схему компоновки данных
//
// Параметры:
//	ТекстЗапроса - Строка - формируется функцией ПолучитьТекстЗапроса
//	УникальныйИдентификатор - УникальныйИдентификатор, Строка - идентификатор формы обработки
//
// Возвращаемое значение:
//	АдресСхемыКомпоновкиДанных - Строка - адрес временного хранилища, куда помещена СКД
//
Функция ИнициализироватьСКД(ТекстЗапроса, УникальныйИдентификатор) Экспорт
	
	СКД = Новый СхемаКомпоновкиДанных;
	
	ИсточникДанных = СКД.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя 				  = "ИсточникДанных";
	ИсточникДанных.ТипИсточникаДанных = "local";
	
	НаборДанных = СКД.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Имя 						= "НаборДанных1"; 
	НаборДанных.ИсточникДанных 				= "ИсточникДанных";
	НаборДанных.Запрос 						= ТекстЗапроса;
	НаборДанных.АвтоЗаполнениеДоступныхПолей= Истина;
	
	Построитель = Новый ПостроительЗапроса;
	Построитель.Текст = ТекстЗапроса;
	Построитель.ЗаполнитьНастройки();
	
	Для каждого ПолеПостроителя Из Построитель.ДоступныеПоля Цикл
		
		Если ПолеПостроителя.Отбор Тогда
			
			ВыбранноеПоле = СКД.НастройкиПоУмолчанию.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных(ПолеПостроителя.Имя);
			
		КонецЕсли; 
		
	КонецЦикла;
	
	ВыбранноеПоле = СКД.НастройкиПоУмолчанию.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("Склад");	
	
	ГруппировкаКомпоновки = СКД.НастройкиПоУмолчанию.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	ВыбранноеПоле         = ГруппировкаКомпоновки.Выбор.Элементы.Добавить(Тип("АвтовыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Использование = Истина;

	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СКД, УникальныйИдентификатор);
	
	Возврат АдресСхемыКомпоновкиДанных;
	
КонецФункции // ИнициализироватьСКД()

// бит_DFedotov Выполняет СКД и получает таблицу объектов ВНА
//
// Параметры:
//	АдресСКД - Строка - адрес временного хранилища в котором размещена СКД, формируется функцией ИнициализироватьСКД
//	Компоновщик - КомпоновщикНастроекКомпоновкиДанных - пользовательские настройки
//	СтруктураПараметров - Структура
//
// Возвращаемое значение:
//	ТаблицаОбъектов - ТаблицаЗначений
//
Функция ПолучитьПереченьОбъектов(АдресСКД, Компоновщик, СтруктураПараметров) Экспорт
	
	Организация 	= СтруктураПараметров.Организация;
	ДатаНачала 		= СтруктураПараметров.ДатаНачала;
	ДатаОкончания 	= СтруктураПараметров.ДатаОкончания;
	Режим 			= СтруктураПараметров.Режим;
	
	ВалютаДокумента = СтруктураПараметров.ВалютаДокумента;
	
	ЭтоПринятиеКУчетуОС 	   = Режим = Перечисления.бит_му_РежимыПодбораВНА.ПринятиеКУчетуОС;
	ЭтоВводНачальныхОстатковОС = Режим = Перечисления.бит_му_РежимыПодбораВНА.ВводНачальныхОстатковОС;
	ЭтоМодернизацияОС 		   = Режим = Перечисления.бит_му_РежимыПодбораВНА.МодернизацияОС;
	ЭтоПринятиеКУчетуНМА 	   = Режим = Перечисления.бит_му_РежимыПодбораВНА.ПринятиеКУчетуНМА;
	
	ЭтоПереводОСВСоставИнвестиционнойСобственности = Режим = Перечисления.бит_му_РежимыПодбораВНА.ПереводОСВСоставИнвестиционнойСобственности;
	
	ВалютаМУ = бит_му_ОбщегоНазначения.ПолучитьВалютуМеждународногоУчета(Организация);
	
	Если НЕ ЗначениеЗаполнено(ВалютаМУ) Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли; 
	
	СКД = ПолучитьИзВременногоХранилища(АдресСКД);
	
	ПараметрыСКД = Компоновщик.Настройки.ПараметрыДанных;
	
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "НачалоПериода", ДатаНачала);
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "КонецПериода" , КонецДня(ДатаОкончания));
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "ПустаяДата"   , Дата('00010101'));
	
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "Счет0801", ПланыСчетов.Хозрасчетный.ПриобретениеЗемельныхУчастков);
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "Счет0802", ПланыСчетов.Хозрасчетный.ПриобретениеОбъектовПриродопользования);
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "Счет0803", ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств);
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "Счет07", ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке);
	//УстановитьЗначениеПараметраСКД(ПараметрыСКД, "Счет0804", ПланыСчетов.Хозрасчетный.ПриобретениеОбъектовОсновныхСредств);
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "Счет0804", ПланыСчетов.Хозрасчетный.ПриобретениеКомпонентовОсновныхСредств);   //ОК Довбешка Т. 17.04.2017 исправление ошибки после обновления релиза
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "Пустой", Null);		
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "Счет01", ПланыСчетов.Хозрасчетный.ОсновныеСредства);
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "Счет02", ПланыСчетов.Хозрасчетный.АмортизацияОсновныхСредств);
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "Счет03", ПланыСчетов.Хозрасчетный.ДоходныеВложенияВ_МЦ);		
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "Счет010", ПланыСчетов.Хозрасчетный.Материалы);
	УстановитьЗначениеПараметраСКД(ПараметрыСКД, "РазделУчета", Перечисления.РазделыУчетаДляВводаОстатков.ОсновныеСредства);
	
	Если ЭтоПринятиеКУчетуОС Или ЭтоВводНачальныхОстатковОС Или ЭтоПринятиеКУчетуНМА Или ЭтоМодернизацияОС Тогда
		
		СтрКурса = бит_КурсыВалют.ПолучитьКурсВалюты(ВалютаМУ, ДатаОкончания);
		
		// бит_ASuleymanov изменение кода. Начало. 08.04.2014{{
		//УстановитьЗначениеПараметраСКД(ПараметрыСКД, "ВалютаМСФО"  	, ВалютаМУ);
		
		Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
			Возврат Новый ТаблицаЗначений;
		КонецЕсли;	
		
		УстановитьЗначениеПараметраСКД(ПараметрыСКД, "ВалютаМСФО"  	, ВалютаДокумента);
		// бит_ASuleymanov изменение кода. Конец. 08.04.2014}}
						
		Если ЭтоПринятиеКУчетуОС Или ЭтоВводНачальныхОстатковОС Или ЭтоМодернизацияОС Тогда
			
			Если ЭтоПринятиеКУчетуОС ИЛИ ЭтоВводНачальныхОстатковОС Тогда
				СписокСчетов = Новый Массив;
				СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОСвОрганизации);
				СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.МЦвОрганизации);
				СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходныеВложения);
				СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.МЦ_ПредоставленныеВоВременноеВладение);
				СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.МЦ_ПредоставленныеВоВременноеПользование);
				
				УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СписокСчетов" , СписокСчетов);
				//УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СчетОС03" , ПланыСчетов.Хозрасчетный.МЦвОрганизации);
			Иначе				
				УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СчетОС" , ПланыСчетов.Хозрасчетный.ОСвОрганизации);
			КонецЕсли;
			УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СчетВНА", ?(ЭтоПринятиеКУчетуОС Или ЭтоМодернизацияОС
																	, ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы
																	, ПланыСчетов.Хозрасчетный.Вспомогательный));
			ВидСубконтоОС = Новый Массив();
			ВидСубконтоОС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
			УстановитьЗначениеПараметраСКД(ПараметрыСКД, "ВидСубконтоОС", ВидСубконтоОС);
			УстановитьЗначениеПараметраСКД(ПараметрыСКД, "ДатаСведений" , Новый Граница(КонецДня(ДатаОкончания), ВидГраницы.Включая));
			
			Если ЭтоМодернизацияОС Тогда
				МассивСубконтоКт = Новый Массив();
				МассивСубконтоКт.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);
				УстановитьЗначениеПараметраСКД(ПараметрыСКД, "МассивСубконтоКт", МассивСубконтоКт);
			Иначе
				УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СостояниеПринятоБУ", Перечисления.СостоянияОС.ПринятоКУчету);				
			КонецЕсли;                                                                                                     			
																				
		Иначе
			
			УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СостояниеПринятоБУ", Перечисления.ВидыСостоянийНМА.ПринятКУчету);
			УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СчетНМА"     		 , ПланыСчетов.Хозрасчетный.НематериальныеАктивыОрганизации);
			МассивСчетовВНА = Новый Массив;
			МассивСчетовВНА.Добавить(ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы);
			МассивСчетовВНА.Добавить(ПланыСчетов.Хозрасчетный.Вспомогательный);
			УстановитьЗначениеПараметраСКД(ПараметрыСКД, "СчетВНА"			 , МассивСчетовВНА);
		КонецЕсли;
		
	КонецЕсли;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД,
												Компоновщик.ПолучитьНастройки(),
												,
												,
												Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	//ОК Довбешка Т. 06.02.2018 АТ-1639166											
	//МакетКомпоновки.ЗначенияПараметров.Найти("BeginOfPeriod").Имя = ("НачалоПериода");											
	//МакетКомпоновки.ЗначенияПараметров.Найти("EndOfPeriod").Имя = ("КонецПериода");
	//ОК
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	ТаблицаОбъектов = Новый ТаблицаЗначений;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаОбъектов);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Возврат ТаблицаОбъектов;
	
КонецФункции // ПолучитьПереченьОбъектов()

// бит_DFedotov Процедура устанавливает значение параметра СКД по его имени
//
// Параметры:
//	ПараметрыСКД - ЗначенияПараметровДанныхКомпоновкиДанных
//	ИмяПараметра - Строка
//	Значение - произвольный - значение параметра
//
Процедура УстановитьЗначениеПараметраСКД(ПараметрыСКД, ИмяПараметра, Значение)
	
	Параметр = Новый ПараметрКомпоновкиДанных(ИмяПараметра);
	
	НайденныйПараметр = ПараметрыСКД.НайтиЗначениеПараметра(Параметр);
	
	Если НЕ НайденныйПараметр = Неопределено Тогда
		
		ПараметрыСКД.УстановитьЗначениеПараметра(ИмяПараметра, Значение);
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьЗначениеПараметраСКД()


////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ ПО ФОРМИРОВАНИЮ ТЕКСТА ЗАПРОСА ДЛЯ ПОДБОРА ОС

//БИТ Тртилек 08.08.2012 Функция формирует текст запроса в режиме подбора МодернизацияОС
//
// Возвращаемое значение:
//   ТекстЗапроса   – Строка
//
Функция СформироватьТекстЗапросаМодернизацияОС()			   

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ИСТИНА КАК Выполнять,
	               |	ХозрасчетныйОбороты.Счет,
	               |	ХозрасчетныйОбороты.Субконто1,
	               |	ХозрасчетныйОбороты.Субконто2,
	               |	ХозрасчетныйОбороты.Субконто3,
	               |	ХозрасчетныйОбороты.КорСчет,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОСвОрганизации), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МЦвОрганизации))
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйОбороты.КорСубконто1 ССЫЛКА Справочник.ОсновныеСредства
	               |						ТОГДА ХозрасчетныйОбороты.КорСубконто1
	               |					КОГДА ХозрасчетныйОбороты.КорСубконто2 ССЫЛКА Справочник.ОсновныеСредства
	               |						ТОГДА ХозрасчетныйОбороты.КорСубконто2
	               |					КОГДА ХозрасчетныйОбороты.КорСубконто3 ССЫЛКА Справочник.ОсновныеСредства
	               |						ТОГДА ХозрасчетныйОбороты.КорСубконто3
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |	КОНЕЦ КАК ОсновноеСредство,
	               |	ХозрасчетныйОбороты.Организация,
	               |	ХозрасчетныйОбороты.Валюта,
	               |	ХозрасчетныйОбороты.ВалютаКор,
	               |	ХозрасчетныйОбороты.Подразделение,
	               |	ХозрасчетныйОбороты.ПодразделениеКор,
	               |	ХозрасчетныйОбороты.Регистратор,
	               |	ХозрасчетныйОбороты.Регистратор.Дата,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОСвОрганизации), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МЦвОрганизации))
	               |			ТОГДА -ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотДт, 0) + ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотКт, 0)
	               |		ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотКт, 0)
	               |	КОНЕЦ КАК Сумма
	               |ПОМЕСТИТЬ ВТХозрасчетныеОбороты
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803), , {(Организация)}, , ) КАК ХозрасчетныйОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_му_КомплектацияОС КАК бит_му_КомплектацияОС
	               |		ПО ХозрасчетныйОбороты.Регистратор = бит_му_КомплектацияОС.ДокументРСБУ
	               |			И (ВЫБОР
	               |				КОГДА ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (&Счет01, &Счет03)
	               |					ТОГДА ХозрасчетныйОбороты.КорСубконто1 = бит_му_КомплектацияОС.АналитикаРСБУ
	               |				ИНАЧЕ ХозрасчетныйОбороты.Субконто1 = бит_му_КомплектацияОС.АналитикаРСБУ
	               |			КОНЕЦ)
	               |ГДЕ
	               |	бит_му_КомплектацияОС.ДокументРСБУ ЕСТЬ NULL 
	               |{ГДЕ
	               |	(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОбъектыСтроительства)).* КАК ОбъектСтроительства,
	               |	ХозрасчетныйОбороты.Регистратор.*}
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ИСТИНА,
	               |	ХозрасчетныйОбороты.Счет,
	               |	ХозрасчетныйОбороты.Субконто1,
	               |	ХозрасчетныйОбороты.Субконто2,
	               |	ХозрасчетныйОбороты.Субконто3,
	               |	ХозрасчетныйОбороты.КорСчет,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОбороты.Субконто1 ССЫЛКА Справочник.ОсновныеСредства
	               |			ТОГДА ХозрасчетныйОбороты.Субконто1
	               |		КОГДА ХозрасчетныйОбороты.Субконто2 ССЫЛКА Справочник.ОсновныеСредства
	               |			ТОГДА ХозрасчетныйОбороты.Субконто2
	               |		КОГДА ХозрасчетныйОбороты.Субконто3 ССЫЛКА Справочник.ОсновныеСредства
	               |			ТОГДА ХозрасчетныйОбороты.Субконто3
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	ХозрасчетныйОбороты.Организация,
	               |	ХозрасчетныйОбороты.Валюта,
	               |	ХозрасчетныйОбороты.ВалютаКор,
	               |	ХозрасчетныйОбороты.Подразделение,
	               |	ХозрасчетныйОбороты.ПодразделениеКор,
	               |	ХозрасчетныйОбороты.Регистратор,
	               |	ХозрасчетныйОбороты.Регистратор.Дата,
	               |	ХозрасчетныйОбороты.СуммаОборотДт
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В ИЕРАРХИИ (&Счет01, &Счет03), , {(Организация)}, , ) КАК ХозрасчетныйОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_му_КомплектацияОС КАК бит_му_КомплектацияОС
	               |		ПО ХозрасчетныйОбороты.Регистратор = бит_му_КомплектацияОС.ДокументРСБУ
	               |			И ХозрасчетныйОбороты.Субконто1 = бит_му_КомплектацияОС.АналитикаРСБУ
	               |ГДЕ
	               |	бит_му_КомплектацияОС.ДокументРСБУ ЕСТЬ NULL 
	               |	И ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВводНачальныхОстатков
	               |	И ХозрасчетныйОбороты.Регистратор.РазделУчета = &РазделУчета
	               |{ГДЕ
	               |	(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1.Объект КАК Справочник.ОбъектыСтроительства)).* КАК ОбъектСтроительства,
	               |	ХозрасчетныйОбороты.Регистратор.*}
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТХозрасчетныеОбороты.ОсновноеСредство КАК ВНА,
	               |	ВТХозрасчетныеОбороты.Организация,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение,
	               |	ВТХозрасчетныеОбороты.Регистратор КАК ДокументБУ,
	               |	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер,
	               |	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПервоначальнаяСтоимость,
	               |	ВТХозрасчетныеОбороты.Выполнять,
	               |	СостоянияОСОрганизацийСрезПоследних.ДатаСостояния КАК ДатаПринятияКУчету,
	               |	ВТХозрасчетныеОбороты.РегистраторДата КАК РегистраторДата,
	               |	ТИПЗНАЧЕНИЯ(ВТХозрасчетныеОбороты.Регистратор) КАК ТипРегистратора,
	               |	СУММА(ВТХозрасчетныеОбороты.Сумма) КАК Сумма,
	               |	ВТХозрасчетныеОбороты.Счет
	               |ИЗ
	               |	ВТХозрасчетныеОбороты КАК ВТХозрасчетныеОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, {(Организация)}) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	               |		ПО ВТХозрасчетныеОбороты.ОсновноеСредство = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	               |			И ВТХозрасчетныеОбороты.Организация = МестонахождениеОСБухгалтерскийУчетСрезПоследних.Организация
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, ) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	               |		ПО ВТХозрасчетныеОбороты.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций.СрезПоследних КАК СостоянияОСОрганизацийСрезПоследних
	               |		ПО ВТХозрасчетныеОбороты.ОсновноеСредство = СостоянияОСОрганизацийСрезПоследних.ОсновноеСредство
	               |			И (СостоянияОСОрганизацийСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	               |{ГДЕ
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ.*,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение.*}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТХозрасчетныеОбороты.ОсновноеСредство,
	               |	ВТХозрасчетныеОбороты.Организация,
	               |	ВТХозрасчетныеОбороты.Регистратор,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ,
	               |	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер,
	               |	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПервоначальнаяСтоимость,
	               |	ВТХозрасчетныеОбороты.Выполнять,
	               |	СостоянияОСОрганизацийСрезПоследних.ДатаСостояния,
	               |	ВТХозрасчетныеОбороты.РегистраторДата,
	               |	ВТХозрасчетныеОбороты.Счет
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РегистраторДата,
	               |	ТипРегистратора,
	               |	ВТХозрасчетныеОбороты.Регистратор.Номер";

	Возврат ТекстЗапроса; 
		
КонецФункции // СформироватьТекстЗапросаМодернизацияОС()

//БИТ Тртилек 08.08.2012 Функция формирует текст запроса для режима ПринятиеКУчетуОС
//
// Возвращаемое значение:
//   ТекстЗапроса   – Строка
//
Функция СформироватьТекстЗапросаПринятиеКУчетуОС()

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ИСТИНА КАК Выполнять,
	               |	ХозрасчетныйОбороты.Счет,
	               |	ХозрасчетныйОбороты.Субконто1,
	               |	ХозрасчетныйОбороты.Субконто2,
	               |	ХозрасчетныйОбороты.Субконто3,
	               |	ХозрасчетныйОбороты.КорСчет,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОСвОрганизации), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МЦвОрганизации))
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйОбороты.КорСубконто1 ССЫЛКА Справочник.ОсновныеСредства
	               |						ТОГДА ХозрасчетныйОбороты.КорСубконто1
	               |					КОГДА ХозрасчетныйОбороты.КорСубконто2 ССЫЛКА Справочник.ОсновныеСредства
	               |						ТОГДА ХозрасчетныйОбороты.КорСубконто2
	               |					КОГДА ХозрасчетныйОбороты.КорСубконто3 ССЫЛКА Справочник.ОсновныеСредства
	               |						ТОГДА ХозрасчетныйОбороты.КорСубконто3
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |	КОНЕЦ КАК ОсновноеСредство,
	               |	ХозрасчетныйОбороты.Организация,
	               |	ХозрасчетныйОбороты.Валюта,
	               |	ХозрасчетныйОбороты.ВалютаКор,
	               |	ХозрасчетныйОбороты.Подразделение,
	               |	ХозрасчетныйОбороты.ПодразделениеКор,
	               |	ХозрасчетныйОбороты.Регистратор,
	               |	ХозрасчетныйОбороты.Регистратор.Дата,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОСвОрганизации), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МЦвОрганизации))
	               |			ТОГДА -ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотДт, 0) + ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотКт, 0)
	               |		ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотКт, 0)
	               |	КОНЕЦ КАК Сумма
	               |ПОМЕСТИТЬ ВТХозрасчетныеОбороты
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803), , {(Организация)}, , ) КАК ХозрасчетныйОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_му_КомплектацияОС КАК бит_му_КомплектацияОС
	               |		ПО ХозрасчетныйОбороты.Регистратор = бит_му_КомплектацияОС.ДокументРСБУ
	               |			И (ВЫБОР
	               |				КОГДА ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (&Счет01, &Счет03)
	               |					ТОГДА ХозрасчетныйОбороты.КорСубконто1 = бит_му_КомплектацияОС.АналитикаРСБУ
	               |				ИНАЧЕ ХозрасчетныйОбороты.Субконто1 = бит_му_КомплектацияОС.АналитикаРСБУ
	               |			КОНЕЦ)
	               |ГДЕ
	               |	бит_му_КомплектацияОС.ДокументРСБУ ЕСТЬ NULL 
	               |{ГДЕ
	               |	(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОбъектыСтроительства)).* КАК ОбъектСтроительства,
	               |	ХозрасчетныйОбороты.Регистратор.*}
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ИСТИНА,
	               |	ХозрасчетныйОбороты.Счет,
	               |	ХозрасчетныйОбороты.Субконто1,
	               |	ХозрасчетныйОбороты.Субконто2,
	               |	ХозрасчетныйОбороты.Субконто3,
	               |	ХозрасчетныйОбороты.КорСчет,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОбороты.Субконто1 ССЫЛКА Справочник.ОсновныеСредства
	               |			ТОГДА ХозрасчетныйОбороты.Субконто1
	               |		КОГДА ХозрасчетныйОбороты.Субконто2 ССЫЛКА Справочник.ОсновныеСредства
	               |			ТОГДА ХозрасчетныйОбороты.Субконто2
	               |		КОГДА ХозрасчетныйОбороты.Субконто3 ССЫЛКА Справочник.ОсновныеСредства
	               |			ТОГДА ХозрасчетныйОбороты.Субконто3
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	ХозрасчетныйОбороты.Организация,
	               |	ХозрасчетныйОбороты.Валюта,
	               |	ХозрасчетныйОбороты.ВалютаКор,
	               |	ХозрасчетныйОбороты.Подразделение,
	               |	ХозрасчетныйОбороты.ПодразделениеКор,
	               |	ХозрасчетныйОбороты.Регистратор,
	               |	ХозрасчетныйОбороты.Регистратор.Дата,
	               |	ХозрасчетныйОбороты.СуммаОборотДт
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В ИЕРАРХИИ (&Счет01, &Счет03), , {(Организация)}, , ) КАК ХозрасчетныйОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_му_КомплектацияОС КАК бит_му_КомплектацияОС
	               |		ПО ХозрасчетныйОбороты.Регистратор = бит_му_КомплектацияОС.ДокументРСБУ
	               |			И ХозрасчетныйОбороты.Субконто1 = бит_му_КомплектацияОС.АналитикаРСБУ
	               |ГДЕ
	               |	бит_му_КомплектацияОС.ДокументРСБУ ЕСТЬ NULL 
	               |	И ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВводНачальныхОстатков
	               |	И ХозрасчетныйОбороты.Регистратор.РазделУчета = &РазделУчета
	               |{ГДЕ
	               |	(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1.Объект КАК Справочник.ОбъектыСтроительства)).* КАК ОбъектСтроительства,
	               |	ХозрасчетныйОбороты.Регистратор.*}
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТХозрасчетныеОбороты.ОсновноеСредство КАК ВНА,
	               |	ВТХозрасчетныеОбороты.Организация,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение,
	               |	ВТХозрасчетныеОбороты.Регистратор КАК ДокументБУ,
	               |	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер,
	               |	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПервоначальнаяСтоимость,
	               |	ВТХозрасчетныеОбороты.Выполнять,
	               |	СостоянияОСОрганизацийСрезПоследних.ДатаСостояния КАК ДатаПринятияКУчету,
	               |	ВТХозрасчетныеОбороты.РегистраторДата КАК РегистраторДата,
	               |	ТИПЗНАЧЕНИЯ(ВТХозрасчетныеОбороты.Регистратор) КАК ТипРегистратора,
	               |	СУММА(ВТХозрасчетныеОбороты.Сумма) КАК Сумма,
	               |	ВТХозрасчетныеОбороты.Счет
	               |ИЗ
	               |	ВТХозрасчетныеОбороты КАК ВТХозрасчетныеОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, {(Организация)}) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	               |		ПО ВТХозрасчетныеОбороты.ОсновноеСредство = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	               |			И ВТХозрасчетныеОбороты.Организация = МестонахождениеОСБухгалтерскийУчетСрезПоследних.Организация
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, ) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	               |		ПО ВТХозрасчетныеОбороты.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций.СрезПоследних КАК СостоянияОСОрганизацийСрезПоследних
	               |		ПО ВТХозрасчетныеОбороты.ОсновноеСредство = СостоянияОСОрганизацийСрезПоследних.ОсновноеСредство
	               |			И (СостоянияОСОрганизацийСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	               |{ГДЕ
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ.*,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение.*}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТХозрасчетныеОбороты.ОсновноеСредство,
	               |	ВТХозрасчетныеОбороты.Организация,
	               |	ВТХозрасчетныеОбороты.Регистратор,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ,
	               |	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер,
	               |	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПервоначальнаяСтоимость,
	               |	ВТХозрасчетныеОбороты.Выполнять,
	               |	СостоянияОСОрганизацийСрезПоследних.ДатаСостояния,
	               |	ВТХозрасчетныеОбороты.РегистраторДата,
	               |	ВТХозрасчетныеОбороты.Счет
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РегистраторДата,
	               |	ТипРегистратора,
	               |	ВТХозрасчетныеОбороты.Регистратор.Номер";

	Возврат ТекстЗапроса;
		
КонецФункции // СформироватьТекстЗапросаПринятиеКУчетуОС()

//БИТ Тртилек 08.08.2012 Функция формирует текст запроса для режима КомплектацияОС
Функция СформироватьТекстЗапросаКомплектацияОС()

	ТекстЗапроса = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ИСТИНА КАК Выполнять,
			|	ТабЧасть.ОсновноеСредство КАК ВНА,
			|	ТабЧасть.Ссылка.Организация,
			|	МестонахождениеОСБУ.Местонахождение,
			|	МестонахождениеОСБУ.МОЛ,
			|	ТабЧасть.Ссылка.Ссылка КАК ДокументБУ,
			|	ПервоначальныеСведенияОСБУ.ИнвентарныйНомер,
			|	ТабЧасть.Ссылка.ОбъектСтроительства
			|ПОМЕСТИТЬ ВТДокументыПринятиеМодернизация
			|ИЗ
			|	Документ.МодернизацияОС.ОС КАК ТабЧасть
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, {(Организация), (ОсновноеСредство)}) КАК ПервоначальныеСведенияОСБУ
			|		ПО ТабЧасть.ОсновноеСредство = ПервоначальныеСведенияОСБУ.ОсновноеСредство
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, {(Организация), (ОсновноеСредство)}) КАК МестонахождениеОСБУ
			|		ПО ТабЧасть.ОсновноеСредство = МестонахождениеОСБУ.ОсновноеСредство
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_ПараметрыОС.СрезПоследних(&КонецПериода, Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС) {(Организация), (ОсновноеСредство)}) КАК КлассыОС_МУ
			|		ПО ТабЧасть.ОсновноеСредство = КлассыОС_МУ.ОсновноеСредство
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_му_КомплектацияОС КАК бит_му_КомплектацияОС
			|		ПО ТабЧасть.ОсновноеСредство = бит_му_КомплектацияОС.АналитикаРСБУ
			|			И ТабЧасть.Ссылка.Ссылка = бит_му_КомплектацияОС.ДокументРСБУ
			|ГДЕ
			|	ТабЧасть.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			|	И бит_му_КомплектацияОС.Регистратор ЕСТЬ NULL 
			|{ГДЕ
			|	ТабЧасть.ОсновноеСредство.* КАК ВНА,
			|	ТабЧасть.Ссылка.Организация.*,
			|	МестонахождениеОСБУ.Местонахождение.*,
			|	МестонахождениеОСБУ.МОЛ.*,
			|	ТабЧасть.Ссылка.Проведен,
			|	ТабЧасть.Ссылка.ОбъектСтроительства.*}
			|
			|СГРУППИРОВАТЬ ПО
			|	ТабЧасть.ОсновноеСредство,
			|	МестонахождениеОСБУ.Местонахождение,
			|	МестонахождениеОСБУ.МОЛ,
			|	ТабЧасть.Ссылка.Ссылка,
			|	ПервоначальныеСведенияОСБУ.ИнвентарныйНомер,
			|	ТабЧасть.Ссылка.Организация,
			|	ТабЧасть.Ссылка.ОбъектСтроительства
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ИСТИНА,
			|	ТабЧасть.ОсновноеСредство,
			|	ТабЧасть.Ссылка.Организация,
			|	МестонахождениеОСБУ.Местонахождение,
			|	МестонахождениеОСБУ.МОЛ,
			|	ТабЧасть.Ссылка.Ссылка,
			|	ПервоначальныеСведенияОСБУ.ИнвентарныйНомер,
			|	ТабЧасть.Ссылка.ОбъектСтроительства
			|ИЗ
			|	Документ.ПринятиеКУчетуОС.ОС КАК ТабЧасть
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, {(Организация), (ОсновноеСредство)}) КАК ПервоначальныеСведенияОСБУ
			|		ПО ТабЧасть.ОсновноеСредство = ПервоначальныеСведенияОСБУ.ОсновноеСредство
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, {(Организация), (ОсновноеСредство)}) КАК МестонахождениеОСБУ
			|		ПО ТабЧасть.ОсновноеСредство = МестонахождениеОСБУ.ОсновноеСредство
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_ПараметрыОС.СрезПоследних(&КонецПериода, Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС) {(Организация), (ОсновноеСредство)}) КАК КлассыОС_МУ
			|		ПО ТабЧасть.ОсновноеСредство = КлассыОС_МУ.ОсновноеСредство
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_му_КомплектацияОС КАК бит_му_КомплектацияОС
			|		ПО ТабЧасть.Ссылка.Ссылка = бит_му_КомплектацияОС.ДокументРСБУ
			|			И ТабЧасть.ОсновноеСредство = бит_му_КомплектацияОС.АналитикаРСБУ
			|ГДЕ
			|	ТабЧасть.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			|	И бит_му_КомплектацияОС.Регистратор ЕСТЬ NULL 
			|{ГДЕ
			|	ТабЧасть.ОсновноеСредство.* КАК ВНА,
			|	ТабЧасть.Ссылка.Организация.*,
			|	МестонахождениеОСБУ.Местонахождение.*,
			|	МестонахождениеОСБУ.МОЛ.*,
			|	ТабЧасть.Ссылка.Проведен,
			|	ТабЧасть.Объект.* КАК ОбъектСтроительства}
			|
			|СГРУППИРОВАТЬ ПО
			|	ТабЧасть.ОсновноеСредство,
			|	МестонахождениеОСБУ.Местонахождение,
			|	МестонахождениеОСБУ.МОЛ,
			|	ТабЧасть.Ссылка.Ссылка,
			|	ПервоначальныеСведенияОСБУ.ИнвентарныйНомер,
			|	ТабЧасть.Ссылка.Организация,
			|	ТабЧасть.Ссылка.ОбъектСтроительства
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТДокументыПринятиеМодернизация.Выполнять,
			|	ВТДокументыПринятиеМодернизация.Организация,
			|	ВТДокументыПринятиеМодернизация.ДокументБУ,
			|	ВТДокументыПринятиеМодернизация.ОбъектСтроительства,
			|	ХозрасчетныйОбороты.СуммаОборотДт КАК Сумма
			|ИЗ
			|	ВТДокументыПринятиеМодернизация КАК ВТДокументыПринятиеМодернизация
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Регистратор, , , {(Организация)}, , ) КАК ХозрасчетныйОбороты
			|		ПО ВТДокументыПринятиеМодернизация.ДокументБУ = ХозрасчетныйОбороты.Регистратор";
		
	        Возврат ТекстЗапроса;

	
		КонецФункции
		
// BIT Avseenkov 15052014 /Доработка функцонала по уастку основных средств {
Функция СформироватьТекстЗапросаОС07_0804()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ИСТИНА КАК Выполнять,
	               |	ХозрасчетныйОбороты.Счет,
	               |	ХозрасчетныйОбороты.Субконто1,
	               |	ХозрасчетныйОбороты.Субконто2,
	               |	ХозрасчетныйОбороты.Субконто3,
	               |	ХозрасчетныйОбороты.КорСчет,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОСвОрганизации), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МЦвОрганизации))
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйОбороты.КорСубконто1 ССЫЛКА Справочник.ОсновныеСредства
	               |						ТОГДА ХозрасчетныйОбороты.КорСубконто1
	               |					КОГДА ХозрасчетныйОбороты.КорСубконто2 ССЫЛКА Справочник.ОсновныеСредства
	               |						ТОГДА ХозрасчетныйОбороты.КорСубконто2
	               |					КОГДА ХозрасчетныйОбороты.КорСубконто3 ССЫЛКА Справочник.ОсновныеСредства
	               |						ТОГДА ХозрасчетныйОбороты.КорСубконто3
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |	КОНЕЦ КАК ОсновноеСредство,
	               |	ХозрасчетныйОбороты.Организация,
	               |	ХозрасчетныйОбороты.Валюта,
	               |	ХозрасчетныйОбороты.ВалютаКор,
	               |	ХозрасчетныйОбороты.Подразделение,
	               |	ХозрасчетныйОбороты.ПодразделениеКор,
	               |	ХозрасчетныйОбороты.Регистратор,
	               |	ХозрасчетныйОбороты.Регистратор.Дата,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОСвОрганизации), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МЦвОрганизации))
	               |			ТОГДА -ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотДт, 0) + ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотКт, 0)
	               |		ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотКт, 0)
	               |	КОНЕЦ КАК Сумма
	               |ПОМЕСТИТЬ ВТХозрасчетныеОбороты
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В ИЕРАРХИИ (&Счет07, &Счет0804), , {(Организация)}, , ) КАК ХозрасчетныйОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_му_КомплектацияОС КАК бит_му_КомплектацияОС
	               |		ПО ХозрасчетныйОбороты.Регистратор = бит_му_КомплектацияОС.ДокументРСБУ
	               |ГДЕ
	               |	бит_му_КомплектацияОС.ДокументРСБУ ЕСТЬ NULL 
	               |{ГДЕ
	               |	(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.Склады)).* КАК Склад,
	               |	ХозрасчетныйОбороты.Регистратор.*}
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТХозрасчетныеОбороты.Организация,
	               |	ВТХозрасчетныеОбороты.Регистратор КАК ДокументБУ,
	               |	ВТХозрасчетныеОбороты.Выполнять,
	               |	ВТХозрасчетныеОбороты.РегистраторДата КАК РегистраторДата,
	               |	ТИПЗНАЧЕНИЯ(ВТХозрасчетныеОбороты.Регистратор) КАК ТипРегистратора,
	               |	СУММА(ВТХозрасчетныеОбороты.Сумма) КАК Сумма,
	               |	ВТХозрасчетныеОбороты.Счет
	               |ИЗ
	               |	ВТХозрасчетныеОбороты КАК ВТХозрасчетныеОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, {(Организация)}) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	               |		ПО ВТХозрасчетныеОбороты.ОсновноеСредство = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	               |			И ВТХозрасчетныеОбороты.Организация = МестонахождениеОСБухгалтерскийУчетСрезПоследних.Организация
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, ) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	               |		ПО ВТХозрасчетныеОбороты.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций.СрезПоследних КАК СостоянияОСОрганизацийСрезПоследних
	               |		ПО ВТХозрасчетныеОбороты.ОсновноеСредство = СостоянияОСОрганизацийСрезПоследних.ОсновноеСредство
	               |			И (СостоянияОСОрганизацийСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	               |{ГДЕ
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ.*,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение.*}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТХозрасчетныеОбороты.Организация,
	               |	ВТХозрасчетныеОбороты.Регистратор,
	               |	ВТХозрасчетныеОбороты.Выполнять,
	               |	ВТХозрасчетныеОбороты.РегистраторДата,
	               |	ВТХозрасчетныеОбороты.Счет
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РегистраторДата,
	               |	ТипРегистратора,
	               |	ВТХозрасчетныеОбороты.Регистратор.Номер";

	Возврат ТекстЗапроса;
		
КонецФункции

Функция СформироватьТекстЗапросаПереводОСВСоставИнвестиционнойСобственности()
	
	//ТекстЗапроса =
	//"ВЫБРАТЬ
	//|	ИСТИНА КАК Выполнять,
	//|	ОсновныеСредства.Ссылка КАК ВНА
	//|ИЗ
	//|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияОС КАК бит_му_СостоянияОС
	//|		ПО ОсновныеСредства.Ссылка = бит_му_СостоянияОС.ОсновноеСредство
	//|ГДЕ
	//|	бит_му_СостоянияОС.Организация = &Организация
	//|	И бит_му_СостоянияОС.Состояние = &Состояние
	//|	И бит_му_СостоянияОС.ДатаСостояния <= &ДатаСостояния";
	
		
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПараметрыОС.Организация,
	               |	ПараметрыОС.ОсновноеСредство,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Местонахождение_ОС)
	               |				ТОГДА ПараметрыОС.ЗначениеПараметра
	               |			ИНАЧЕ NULL
	               |		КОНЕЦ) КАК Местонахождение,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.МОЛ_ОС)
	               |				ТОГДА ПараметрыОС.ЗначениеПараметра
	               |			ИНАЧЕ NULL
	               |		КОНЕЦ) КАК МОЛ,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС)
	               |				ТОГДА ПараметрыОС.ЗначениеПараметра.ВидКласса
	               |			ИНАЧЕ NULL
	               |		КОНЕЦ) КАК ВидКласса,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ПараметрыОС.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС)
	               |				ТОГДА ПараметрыОС.ЗначениеПараметра
	               |			ИНАЧЕ NULL
	               |		КОНЕЦ) КАК Класс
	               |ПОМЕСТИТЬ ТаблицаПараметров
	               |ИЗ
	               |	РегистрСведений.бит_му_ПараметрыОС.СрезПоследних(&КонецПериода, {(ОсновноеСредство), (Организация)}) КАК ПараметрыОС
	               |{ГДЕ
	               |	ПараметрыОС.Организация.*,
	               |	ПараметрыОС.ОсновноеСредство.*}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПараметрыОС.ОсновноеСредство,
	               |	ПараметрыОС.Организация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТаблицаПараметров.Организация,
	               |	ТаблицаПараметров.Класс,
	               |	ПараметрыКлассов.МодельУчета,
	               |	ВЫБОР
	               |		КОГДА ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |				И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка)
	               |			ТОГДА 3
	               |		КОГДА ПараметрыКлассов.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |				И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка)
	               |			ТОГДА 2
	               |		КОГДА ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |				И ПараметрыКлассов.Класс <> ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка)
	               |			ТОГДА 1
	               |		КОГДА ПараметрыКлассов.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |				И ПараметрыКлассов.Класс <> ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка)
	               |			ТОГДА 0
	               |		ИНАЧЕ 4
	               |	КОНЕЦ КАК Приоритет
	               |ПОМЕСТИТЬ МоделиУчета
	               |ИЗ
	               |	ТаблицаПараметров КАК ТаблицаПараметров
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_ПараметрыКлассовВНА КАК ПараметрыКлассов
	               |		ПО (ТаблицаПараметров.Организация = ПараметрыКлассов.Организация
	               |					И ТаблицаПараметров.Класс = ПараметрыКлассов.Класс
	               |				ИЛИ ТаблицаПараметров.Организация = ПараметрыКлассов.Организация
	               |					И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка)
	               |				ИЛИ ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |					И ТаблицаПараметров.Класс = ПараметрыКлассов.Класс
	               |				ИЛИ ПараметрыКлассов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |					И ПараметрыКлассов.Класс = ЗНАЧЕНИЕ(Справочник.бит_му_КлассыОсновныхСредств.ПустаяСсылка))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	МоделиУчета.Организация,
	               |	МоделиУчета.Класс,
	               |	МИНИМУМ(МоделиУчета.Приоритет) КАК Приоритет
	               |ПОМЕСТИТЬ МодельУчетаПриоритет
	               |ИЗ
	               |	МоделиУчета КАК МоделиУчета
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МоделиУчета.Организация,
	               |	МоделиУчета.Класс
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МодельУчетаПриоритет.Организация,
	               |	МодельУчетаПриоритет.Класс,
	               |	МоделиУчета.МодельУчета
	               |ПОМЕСТИТЬ МоделиУчетаРезультат
	               |ИЗ
	               |	МодельУчетаПриоритет КАК МодельУчетаПриоритет
	               |		ЛЕВОЕ СОЕДИНЕНИЕ МоделиУчета КАК МоделиУчета
	               |		ПО МодельУчетаПриоритет.Организация = МоделиУчета.Организация
	               |			И МодельУчетаПриоритет.Класс = МоделиУчета.Класс
	               |			И МодельУчетаПриоритет.Приоритет = МоделиУчета.Приоритет
	               |ГДЕ
	               |	НЕ МоделиУчета.Организация ЕСТЬ NULL 
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаПараметров.Организация,
	               |	ТаблицаПараметров.ОсновноеСредство,
	               |	ТаблицаПараметров.Местонахождение,
	               |	ТаблицаПараметров.МОЛ,
	               |	ТаблицаПараметров.ВидКласса,
	               |	ТаблицаПараметров.Класс,
	               |	МоделиУчетаРезультат.МодельУчета
	               |ПОМЕСТИТЬ ТаблицаПараметровРезультат
	               |ИЗ
	               |	ТаблицаПараметров КАК ТаблицаПараметров
	               |		ЛЕВОЕ СОЕДИНЕНИЕ МоделиУчетаРезультат КАК МоделиУчетаРезультат
	               |		ПО ТаблицаПараметров.Организация = МоделиУчетаРезультат.Организация
	               |			И ТаблицаПараметров.Класс = МоделиУчетаРезультат.Класс
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ИСТИНА КАК Выполнять,
	               |	ОсновныеСредства.Ссылка КАК ВНА,
	               |	ТаблицаПараметровРезультат.Организация,
	               |	ТаблицаПараметровРезультат.Местонахождение,
	               |	ТаблицаПараметровРезультат.МОЛ,
	               |	ТаблицаПараметровРезультат.ВидКласса,
	               |	ТаблицаПараметровРезультат.Класс,
	               |	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер,
	               |	ЕСТЬNULL(СостоянияОС.ДатаСостояния, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПринятияКУчету,
	               |	ТаблицаПараметровРезультат.МодельУчета КАК МодельУчета
	               |ИЗ
	               |	Справочник.ОсновныеСредства КАК ОсновныеСредства
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПараметровРезультат КАК ТаблицаПараметровРезультат
	               |		ПО ОсновныеСредства.Ссылка = ТаблицаПараметровРезультат.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, {(ОсновноеСредство)}) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	               |		ПО ОсновныеСредства.Ссылка = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияОС КАК СостоянияОС
	               |		ПО ОсновныеСредства.Ссылка = СостоянияОС.ОсновноеСредство
	               |			И (СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_му_СостоянияОС.ПринятоКУчету))
	               |ГДЕ
	               |	НЕ ОсновныеСредства.ЭтоГруппа
	               |	И ТаблицаПараметровРезультат.ВидКласса = ЗНАЧЕНИЕ(Перечисление.бит_му_ВидыКлассовОС.ОсновныеСредства)
	               |{ГДЕ
	               |	ОсновныеСредства.Ссылка.* КАК ОсновноеСредство,
	               |	ТаблицаПараметровРезультат.Местонахождение.*,
	               |	ТаблицаПараметровРезультат.МОЛ.*,
	               //|	ТаблицаПараметровРезультат.ВидКласса.*,
	               |	ТаблицаПараметровРезультат.Организация.*,
	               |	ТаблицаПараметровРезультат.МодельУчета.*}
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ТаблицаПараметров
	               |;
	               |                          
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ МоделиУчета
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ МодельУчетаПриоритет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ МоделиУчетаРезультат
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ТаблицаПараметровРезультат";

	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецЕсли
