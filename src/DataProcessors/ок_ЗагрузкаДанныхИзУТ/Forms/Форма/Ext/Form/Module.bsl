#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтруктураПараметров		=	ок_ОбщегоНазначенияФинансы21.ПолучитьПараметрыРегламентногоЗадания();
	СтруктураПараметров.Свойство("ДатаНачала",		Период.ДатаНачала);
	СтруктураПараметров.Свойство("ДатаОкончания",	Период.ДатаОкончания);
	
	ВидыОпераций.Добавить("Оплата товара", 				"Оплата товара", 				Истина);
	ВидыОпераций.Добавить("Оплата услуг доставки", 		"Оплата услуг доставки", 		Истина);
	ВидыОпераций.Добавить("Реализация услуг доставки", 	"Реализация услуг доставки", 	Истина);
	
	ОтборПризнакЗагрузки	=	"Все";
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	ОписаниеОповещения	=	Новый ОписаниеОповещения("ЗагрузитьЗавершение", ЭтаФорма);
	
	ПоказатьВопрос(ОписаниеОповещения, "Загрузить помеченные строки?", РежимДиалогаВопрос.ДаНет, 10, 
		КодВозвратаДиалога.Нет, "Загрузка из УТ", КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	УстановитьПометки(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	УстановитьПометки(Ложь);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура Декорация_ок_СопоставлениеАналитикиДляИнтеграцийНажатие(Элемент)
	ОткрытьФорму("РегистрСведений.ок_СопоставлениеАналитикиДляИнтеграций.ФормаСписка");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗагрузитьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗагрузитьНаСервере() Тогда
		ТекстПредупреждения	=	"Загрузка выполнена успешно. Подробности в журнале логирования.";
	Иначе
		ТекстПредупреждения	=	"Загрузка выполнена с ошибками! Подробности в журнале логирования.";
	КонецЕсли;
	
	ПоказатьПредупреждение(, ТекстПредупреждения, , "Загрузка из УТ");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПризнакЗагрузки()
	
	Если ОтборПризнакЗагрузки = "Все" Тогда
		ПризнакЗагрузки	=	2;
	ИначеЕсли ОтборПризнакЗагрузки = "Только загруженные" Тогда
		ПризнакЗагрузки	=	1;
	ИначеЕсли ОтборПризнакЗагрузки = "Только не загруженные" Тогда
		ПризнакЗагрузки	=	0;
	КонецЕсли;
	
	Возврат ПризнакЗагрузки;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	ПараметрыЗагрузки	=	Новый Структура;
	ПараметрыЗагрузки.Вставить("ДатаНачала", 			Период.ДатаНачала);
	ПараметрыЗагрузки.Вставить("ДатаОкончания",			Период.ДатаОкончания);
	ПараметрыЗагрузки.Вставить("ПризнакЗагрузки",		ПолучитьПризнакЗагрузки());
	ПараметрыЗагрузки.Вставить("ВидыОпераций",			ок_ОбщегоНазначенияФинансы21.ВыгрузитьПомеченныеЗначенияСписка(ВидыОпераций));
	ПараметрыЗагрузки.Вставить("ИгнорироватьПериод",	ОтборИгнорироватьПериод);
	ПараметрыЗагрузки.Вставить("Объект",				ОтборОбъект);
	
	ИнтеграционнаяТаблица.Загрузить(ок_УТ_ЗагрузкаДанных.ПолучитьДанные(ПараметрыЗагрузки));
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьНаСервере()
	
	МассивСтрок	=	ИнтеграционнаяТаблица.НайтиСтроки(Новый Структура("Пометка", Истина));
	
	Возврат ок_УТ_ЗагрузкаДанных.ЗагрузитьТаблицу(ИнтеграционнаяТаблица.Выгрузить(МассивСтрок, 
				"ВидОперации, Дата, Объект, СтавкаНДС, Сумма, СуммаБезнал, СуммаНал, СуммаСНДС"));
	
КонецФункции

&НаКлиенте
Процедура УстановитьПометки(Пометка)
	
	Для Каждого Строка Из ИнтеграционнаяТаблица Цикл
		Строка.Пометка	=	Пометка;	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
