
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.МенюРешений) ИЛИ НЕ ЗначениеЗаполнено(Параметры.Объект) Тогда
		ТекстСообщения = НСтр("ru='Непосредственное открытие этой формы не предусмотрено. 
								  |Для открытия формы можно воспользоваться формой установки виз.'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;

	МенюРешений = Параметры.МенюРешений;
	Комментарий = Параметры.Комментарий;
	Виза 		= Параметры.Виза;
	Решение		= Параметры.Решение;
	Объект		= Параметры.Объект;
	
	Если ТолькоПросмотр Тогда
		Заголовок = НСтр("ru = 'Выбор решения (только просмотр)'"); 
	КонецЕсли; 
	
	Элементы.Комментарий.ТолькоПросмотр = ТолькоПросмотр;
	
	Элементы.СоздатьЗадачу.Видимость = ПравоДоступа("Редактирование", 
		Метаданные.Задачи.бит_уп_Задача);	

	Если Элементы.СоздатьЗадачу.Видимость И ОбщегоНазначения.ЕстьРеквизитОбъекта("Ответственный", Объект.Метаданные()) Тогда
		Ответственный = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "Ответственный");
	КонецЕсли;
	
	КнопкаПоУмолчанию = Элементы.ФормаЗакрыть;
	
	Для каждого Элемент Из МенюРешений Цикл

		Команда = Команды.Добавить("Решение" + МенюРешений.Индекс(Элемент));
		Команда.Действие = "Подключаемый_ПринятоРешение";
		
		Кнопка = Элементы.Добавить(Команда.Имя, Тип("КнопкаФормы"), Элементы.КомандыРешений);
		Кнопка.Вид 		   = ВидКнопкиФормы.КнопкаКоманднойПанели;
		Кнопка.Заголовок   = Элемент.Представление;
		Кнопка.ИмяКоманды  = Команда.Имя;
		Кнопка.Доступность = НЕ ТолькоПросмотр;
		
		Если Решение = Элемент.Значение Тогда
			Если ТолькоПросмотр Тогда
				Кнопка.Пометка = Истина;
			Иначе	
				Кнопка.КнопкаПоУмолчанию = Истина;
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла; 
		
	СброситьРазмерыИПоложениеОкна();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

//Код процедур и функций

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ПринятоРешение(Команда)
	
	Отказ 	= Ложь;
	Индекс  = Число(СтрЗаменить(Команда.Имя, "Решение", ""));
	Решение = МенюРешений.Получить(Индекс).Значение;
	
	Результат = Новый Структура; 
	Результат.Вставить("Решение", Решение);
	Результат.Вставить("Комментарий", Комментарий);
		
	НуженКомментарий = НуженКомментарий();
	Если НуженКомментарий Тогда
		ОчиститьСообщения();
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Перед принятием решения ""%1"" необходимо заполнить "
							+ "комментарий или создать задачу.'"), Решение);
		//ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "Комментарий", ,Отказ); 
		Отказ = Истина;
		ПоказатьПредупреждение(,ТекстСообщения);
	КонецЕсли; 
	
	Если Отказ Тогда
		Возврат;	
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗадачу(Команда)
	
	ЗначенияЗаполнения = Новый Структура; 
	ЗначенияЗаполнения.Вставить("Предмет", Объект);
	ЗначенияЗаполнения.Вставить("Виза",    Виза);
	// ++ БП 
	ЗначенияЗаполнения.Вставить("Исполнитель", Ответственный);
	// -- БП 
	
	ОткрытьФорму("Задача.бит_уп_Задача.Форма.ФормаСозданияЗадачиУправляемая", 
		Новый Структура("СтруктураЗадачи", ЗначенияЗаполнения));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()
	
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
		ХранилищеСистемныхНастроек.Удалить("Обработка.бит_УстановкаВиз", "", ИмяПользователя);
	КонецЕсли;
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция НуженКомментарий()

	ПараметрыПроверки = РегистрыСведений.бит_УстановленныеВизы.НовыеПараметрыНуженКомментарий();
	ПараметрыПроверки.Вставить("Объект", 		  Объект);
	ПараметрыПроверки.Вставить("РешениеКонечное", Решение);
	ПараметрыПроверки.Вставить("Комментарий", 	  Комментарий);
	ПараметрыПроверки.Вставить("Виза", 		  	  Виза);
	
	Возврат РегистрыСведений.бит_УстановленныеВизы.НуженКомментарий(ПараметрыПроверки);

КонецФункции
 
#КонецОбласти


