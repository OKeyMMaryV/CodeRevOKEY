
&НаКлиенте
Процедура Сформировать(Команда)
	
	Если Объект.База.Количество() > 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("СформироватьВопросЗавершение", ЭтотОбъект), "Список документов будет очищен. Продолжить?", РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли;
	
	СформироватьЗавершение();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьВопросЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Да Тогда
        Объект.База.Очистить();
    Иначе
        Возврат;
    КонецЕсли;
    
    СформироватьЗавершение();

КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗавершение()
    
    СформироватьНаСервере();
    
    РассчитатьИтоги();

КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	//"ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	бит_СоответствиеЗаписейТрансляции.Регистратор КАК Регистратор
	//|ПОМЕСТИТЬ ТранслированныеДокументы
	//|ИЗ
	//|	РегистрСведений.бит_СоответствиеЗаписейТрансляции КАК бит_СоответствиеЗаписейТрансляции
	//|ГДЕ
	//|	бит_СоответствиеЗаписейТрансляции.Источник = &Источник
	//|	И бит_СоответствиеЗаписейТрансляции.Приемник = &Приемник
	//|	И бит_СоответствиеЗаписейТрансляции.Период МЕЖДУ &ДатаНач И &ДатаКон
	//|	И бит_СоответствиеЗаписейТрансляции.Организация = &Организация
	//// Rarus-spb byse 2012.12.29 {
	//|   ИНДЕКСИРОВАТЬ ПО Регистратор
	//// Rarus-spb byse 2012.12.29 }
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//// Rarus-spb byse 2012.12.29 {
	////|ВЫБРАТЬ
	////|	АвансовыйОтчет.Ссылка КАК ДокументРСБУ,
	////|	АвансовыйОтчет.ОК_ID_Разноска КАК ID,
	////|	АвансовыйОтчет.СуммаДокумента КАК Сумма
	////|ПОМЕСТИТЬ ДокументыПоID
	////|ИЗ
	////|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
	////|ГДЕ
	////|	АвансовыйОтчет.Ссылка В
	////|			(ВЫБРАТЬ
	////|				ТранслированныеДокументы.Регистратор
	////|			ИЗ
	////|				ТранслированныеДокументы)
	////|	И АвансовыйОтчет.Дата МЕЖДУ &ДатаНач И &ДатаКон
	////|	И АвансовыйОтчет.Организация = &Организация
	////|
	////|ОБЪЕДИНИТЬ ВСЕ
	////|
	////|ВЫБРАТЬ
	////|	ОперацияБух.Ссылка,
	////|	ОперацияБух.ОК_ID_Разноска,
	////|	ОперацияБух.СуммаОперации
	////|ИЗ
	////|	Документ.ОперацияБух КАК ОперацияБух
	////|ГДЕ
	////|	ОперацияБух.Ссылка В
	////|			(ВЫБРАТЬ
	////|				ТранслированныеДокументы.Регистратор
	////|			ИЗ
	////|				ТранслированныеДокументы)
	////|	И ОперацияБух.Дата МЕЖДУ &ДатаНач И &ДатаКон
	////|	И ОперацияБух.Организация = &Организация
	////|
	////|ОБЪЕДИНИТЬ ВСЕ
	////|
	////|ВЫБРАТЬ
	////|	ПоступлениеТоваровУслуг.Ссылка,
	////|	ПоступлениеТоваровУслуг.ОК_ID_Разноска,
	////|	ПоступлениеТоваровУслуг.СуммаДокумента
	////|ИЗ
	////|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	////|ГДЕ
	////|	ПоступлениеТоваровУслуг.Ссылка В
	////|			(ВЫБРАТЬ
	////|				ТранслированныеДокументы.Регистратор
	////|			ИЗ
	////|				ТранслированныеДокументы)
	////|	И ПоступлениеТоваровУслуг.ОК_ID_ВТЧ = ЛОЖЬ
	////|	И ПоступлениеТоваровУслуг.Дата МЕЖДУ &ДатаНач И &ДатаКон
	////|	И ПоступлениеТоваровУслуг.Организация = &Организация
	////|
	////|ОБЪЕДИНИТЬ ВСЕ
	////|
	////|ВЫБРАТЬ
	////|	ПоступлениеТоваровУслугУслуги.Ссылка,
	////|	ПоступлениеТоваровУслугУслуги.ОК_ID_Разноска,
	////|	ПоступлениеТоваровУслугУслуги.Сумма
	////|ИЗ
	////|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	////|ГДЕ
	////|	ПоступлениеТоваровУслугУслуги.Ссылка В
	////|			(ВЫБРАТЬ
	////|				ТранслированныеДокументы.Регистратор
	////|			ИЗ
	////|				ТранслированныеДокументы)
	////|	И ПоступлениеТоваровУслугУслуги.Ссылка.ОК_ID_ВТЧ = ИСТИНА
	////|	И ПоступлениеТоваровУслугУслуги.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	////|	И ПоступлениеТоваровУслугУслуги.Ссылка.Организация = &Организация
	////|
	////|ИНДЕКСИРОВАТЬ ПО
	////|	ID
	////|;
	////|
	//// Rarus-spb byse 2012.12.29 }
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ Различные
	//|	ДокументыПоID.Документ Как ДокументРСБУ,
	//|	ДокументыПоID.ID,
	//// Rarus-spb byse 2012.12.29 {
	//|	ДокументыПоID.Документ.СуммаДокумента Как Сумма,
	//// Rarus-spb byse 2012.12.29 }
	//|	рс_АккруалПоID.Ссылка КАК АккруалПоID
	//|ПОМЕСТИТЬ ДокументыПоIDСАккруалом
	//|ИЗ
	//// Rarus-spb byse 2012.12.29 {
	////|	ДокументыПоID КАК ДокументыПоID
	//|	РегистрСведений.рс_ДокументыПоID КАК ДокументыПоID
	//// Rarus-spb byse 2012.12.29 }
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.рс_АккруалПоID КАК рс_АккруалПоID
	//|		ПО ДокументыПоID.ID = рс_АккруалПоID.ID
	//|			И (рс_АккруалПоID.Проведен = ИСТИНА)
	//|ГДЕ
	//|	ДокументыПоID.ID <> ""    -    ""
	//|	И ДокументыПоID.ID <> """"
	////ОК Калинин М. 23052013 
	////|   И ДокументыПоID.Документ.Проведен
	//|   И выбор когда  ДокументыПоID.Документ ссылка Документ.ОперацияБух тогда истина иначе ДокументыПоID.Документ.Проведен конец
	////ОК Калинин М. 
	//|	И ДокументыПоID.Документ.Дата МЕЖДУ &ДатаНач И &ДатаКон
	//|	И ДокументыПоID.Документ.Организация = &Организация 
	//|   И (ДокументыПоID.Документ В
	//|			(ВЫБРАТЬ
	//|				ТранслированныеДокументы.Регистратор
	//|			ИЗ
	//|				ТранслированныеДокументы)  Или ДокументыПоID.Документ Ссылка Документ.бит_ок_ОперацияАксапты)
	////|ОБЪЕДИНИТЬ ВСЕ
	////|
	////|ВЫБРАТЬ
	////|	бит_ок_ОперацияАксапты.Ссылка,
	////|	бит_ок_ОперацияАксапты.ОК_ID_Разноска,
	////|	0,
	////|	рс_АккруалПоID.Ссылка
	////|ИЗ
	////|	Документ.бит_ок_ОперацияАксапты КАК бит_ок_ОперацияАксапты
	////|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.рс_АккруалПоID КАК рс_АккруалПоID
	////|		ПО бит_ок_ОперацияАксапты.ОК_ID_Разноска = рс_АккруалПоID.IDБезЧерточки
	////|			И (рс_АккруалПоID.Проведен = ИСТИНА)
	////|ГДЕ
	////|	бит_ок_ОперацияАксапты.Дата МЕЖДУ &ДатаНач И &ДатаКон
	////|	И бит_ок_ОперацияАксапты.Организация = &Организация
	////|	И бит_ок_ОперацияАксапты.ОК_ID_Разноска <> ""0""
	////|	И бит_ок_ОперацияАксапты.ОК_ID_Разноска <> """"
	////|	И бит_ок_ОперацияАксапты.Проведен = ИСТИНА
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДокументыПоIDСАккруалом.ДокументРСБУ,
	//|	ДокументыПоIDСАккруалом.ID,
	//|	СУММА(ДокументыПоIDСАккруалом.Сумма) КАК Сумма,
	//|	ДокументыПоIDСАккруалом.АккруалПоID,
	//|	ВЫБОР
	//|		КОГДА рс_СторноЭУ.Ссылка ЕСТЬ NULL 
	//|			ТОГДА ""<документ не записан>""
	//|		ИНАЧЕ рс_СторноЭУ.Ссылка
	//|	КОНЕЦ КАК СторноЭУ,
	//|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ бит_Дополнительный_2ДвиженияССубконто.НомерСтроки) КАК КоличествоПроводокДокументаРСБУ
	//|ИЗ
	//|	ДокументыПоIDСАккруалом КАК ДокументыПоIDСАккруалом
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.рс_СторноЭУ КАК рс_СторноЭУ
	//|		ПО ДокументыПоIDСАккруалом.АккруалПоID = рс_СторноЭУ.ДокументОснование
	//|			И (рс_СторноЭУ.Проведен = ИСТИНА)
	//|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.бит_Дополнительный_2.ДвиженияССубконто(
	//|&ДатаНач,
	//|&ДатаКон,
	//|ВидПроводки = &ВидПроводки
	//|	И Организация = &Организация
	//|   И Регистратор В (ВЫБРАТЬ РАЗЛИЧНЫЕ ДокументыПоIDСАккруалом.ДокументРСБУ ИЗ ДокументыПоIDСАккруалом),
	//|,
	//|) КАК бит_Дополнительный_2ДвиженияССубконто
	//|		ПО ДокументыПоIDСАккруалом.ДокументРСБУ = бит_Дополнительный_2ДвиженияССубконто.Регистратор
	//|ГДЕ
	//|	рс_СторноЭУ.Ссылка ЕСТЬ NULL
	//|   И НЕ бит_Дополнительный_2ДвиженияССубконто.НомерСтроки ЕСТЬ NULL
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ДокументыПоIDСАккруалом.ID,
	//|	ДокументыПоIDСАккруалом.ДокументРСБУ,
	//|	ДокументыПоIDСАккруалом.АккруалПоID,
	//|	ВЫБОР
	//|		КОГДА рс_СторноЭУ.Ссылка ЕСТЬ NULL 
	//|			ТОГДА ""<документ не записан>""
	//|		ИНАЧЕ рс_СторноЭУ.Ссылка
	//|	КОНЕЦ
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ДокументыПоIDСАккруалом.ДокументРСБУ.Дата";
	
	//"ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	бит_СоответствиеЗаписейТрансляции.Регистратор КАК Регистратор
	//|ПОМЕСТИТЬ ТранслированныеДокументы
	//|ИЗ
	//|	РегистрСведений.бит_СоответствиеЗаписейТрансляции КАК бит_СоответствиеЗаписейТрансляции
	//|ГДЕ
	//|	бит_СоответствиеЗаписейТрансляции.Источник = &Источник
	//|	И бит_СоответствиеЗаписейТрансляции.Приемник = &Приемник
	//|	И бит_СоответствиеЗаписейТрансляции.Организация = &Организация
	//|	И бит_СоответствиеЗаписейТрансляции.НомерСтроки = 1
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	Регистратор
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	ДокументыПоID.Документ КАК ДокументРСБУ,
	//|	ДокументыПоID.ID,
	//|	ДокументыПоID.Документ.СуммаДокумента КАК Сумма,
	//|	рс_АккруалПоID.Ссылка КАК АккруалПоID
	//|ПОМЕСТИТЬ ДокументыПоIDСАккруалом
	//|ИЗ
	//|	РегистрСведений.рс_ДокументыПоID КАК ДокументыПоID
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.рс_АккруалПоID КАК рс_АккруалПоID
	//|		ПО ДокументыПоID.ID = рс_АккруалПоID.ID
	//|			И (рс_АккруалПоID.Проведен = ИСТИНА)
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.бит_Дополнительный_2.ДвиженияССубконто(
	//|				&ДатаНач,
	//|				&ДатаКон,
	//|				ВидПроводки = &ВидПроводки
	//|					И Организация = &Организация,
	//|				,
	//|				) КАК бит_Дополнительный_2ДвиженияССубконто
	//|		ПО ДокументыПоID.Документ = бит_Дополнительный_2ДвиженияССубконто.Регистратор
	//|ГДЕ
	//|	ДокументыПоID.ID <> ""    -    ""
	//|	И ДокументыПоID.ID <> """"
	//|	И ВЫБОР
	//|			КОГДА ДокументыПоID.Документ ССЫЛКА Документ.ОперацияБух
	//|				ТОГДА ИСТИНА
	//|			ИНАЧЕ ДокументыПоID.Документ.Проведен
	//|		КОНЕЦ
	//|	И ДокументыПоID.Документ.Организация = &Организация
	//|	И (ДокументыПоID.Документ В
	//|				(ВЫБРАТЬ
	//|					ТранслированныеДокументы.Регистратор
	//|				ИЗ
	//|					ТранслированныеДокументы)
	//|			ИЛИ ДокументыПоID.Документ ССЫЛКА Документ.бит_ок_ОперацияАксапты)
	//|	И НЕ бит_Дополнительный_2ДвиженияССубконто.НомерСтроки ЕСТЬ NULL 
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДокументыПоIDСАккруалом.ДокументРСБУ,
	//|	ДокументыПоIDСАккруалом.ID,
	//|	СУММА(ДокументыПоIDСАккруалом.Сумма) КАК Сумма,
	//|	ДокументыПоIDСАккруалом.АккруалПоID,
	//|	ВЫБОР
	//|		КОГДА рс_СторноЭУ.Ссылка ЕСТЬ NULL 
	//|			ТОГДА ""<документ не записан>""
	//|		ИНАЧЕ рс_СторноЭУ.Ссылка
	//|	КОНЕЦ КАК СторноЭУ,
	//|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ бит_Дополнительный_2ДвиженияССубконто.НомерСтроки) КАК КоличествоПроводокДокументаРСБУ
	//|ИЗ
	//|	ДокументыПоIDСАккруалом КАК ДокументыПоIDСАккруалом
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.рс_СторноЭУ КАК рс_СторноЭУ
	//|		ПО ДокументыПоIDСАккруалом.АккруалПоID = рс_СторноЭУ.ДокументОснование
	//|			И (рс_СторноЭУ.Проведен = ИСТИНА)
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.бит_Дополнительный_2.ДвиженияССубконто(
	//|				&ДатаНач,
	//|				&ДатаКон,
	//|				ВидПроводки = &ВидПроводки
	//|					И Организация = &Организация
	//|					И Регистратор В
	//|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|							ДокументыПоIDСАккруалом.ДокументРСБУ
	//|						ИЗ
	//|							ДокументыПоIDСАккруалом),
	//|				,
	//|				) КАК бит_Дополнительный_2ДвиженияССубконто
	//|		ПО ДокументыПоIDСАккруалом.ДокументРСБУ = бит_Дополнительный_2ДвиженияССубконто.Регистратор
	//|ГДЕ
	//|	рс_СторноЭУ.Ссылка ЕСТЬ NULL 
	//|	И НЕ бит_Дополнительный_2ДвиженияССубконто.НомерСтроки ЕСТЬ NULL 
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ДокументыПоIDСАккруалом.ID,
	//|	ДокументыПоIDСАккруалом.ДокументРСБУ,
	//|	ДокументыПоIDСАккруалом.АккруалПоID,
	//|	ВЫБОР
	//|		КОГДА рс_СторноЭУ.Ссылка ЕСТЬ NULL 
	//|			ТОГДА ""<документ не записан>""
	//|		ИНАЧЕ рс_СторноЭУ.Ссылка
	//|	КОНЕЦ
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ДокументыПоIDСАккруалом.ДокументРСБУ.Дата";
	
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТранслированныеДокументы.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ТранслированныеДокументы
	|ИЗ
	|	(ВЫБРАТЬ
	|		АвансовыйОтчет.Ссылка КАК Регистратор
	|	ИЗ
	|		Документ.АвансовыйОтчет КАК АвансовыйОтчет
	|	ГДЕ
	|		АвансовыйОтчет.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КорректировкаПоступления.Ссылка
	|	ИЗ
	|		Документ.КорректировкаПоступления КАК КорректировкаПоступления
	|	ГДЕ
	|		КорректировкаПоступления.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПоступлениеТоваровУслуг.Ссылка
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|	ГДЕ
	|		ПоступлениеТоваровУслуг.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТребованиеНакладная.Ссылка
	|	ИЗ
	|		Документ.ТребованиеНакладная КАК ТребованиеНакладная
	|	ГДЕ
	|		ТребованиеНакладная.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПоступлениеДопРасходов.Ссылка
	|	ИЗ
	|		Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	|	ГДЕ
	|		ПоступлениеДопРасходов.Проведен) КАК ТранслированныеДокументы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыПоID.Документ КАК ДокументРСБУ,
	|	ДокументыПоID.ID,
	|	ДокументыПоID.Документ.СуммаДокумента КАК Сумма,
	|	рс_АккруалПоID.Ссылка КАК АккруалПоID
	|ПОМЕСТИТЬ ДокументыПоIDСАккруалом
	|ИЗ
	|	РегистрСведений.рс_ДокументыПоID КАК ДокументыПоID
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.рс_АккруалПоID КАК рс_АккруалПоID
	|		ПО ДокументыПоID.ID = рс_АккруалПоID.ID
	|			И (рс_АккруалПоID.Проведен = ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.бит_Дополнительный_2.ДвиженияССубконто(
	|				&ДатаНач,
	|				&ДатаКон,
	|				ВидПроводки = &ВидПроводки
	|					И Организация = &Организация,
	|				,
	|				) КАК бит_Дополнительный_2ДвиженияССубконто
	|		ПО ДокументыПоID.Документ = бит_Дополнительный_2ДвиженияССубконто.Регистратор
	|ГДЕ
	|	ДокументыПоID.ID <> ""    -    ""
	|	И ДокументыПоID.ID <> """"
	|	И ВЫБОР
	|			КОГДА ДокументыПоID.Документ ССЫЛКА Документ.ОперацияБух
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ДокументыПоID.Документ.Проведен
	|		КОНЕЦ
	|	И ДокументыПоID.Документ.Организация = &Организация
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-26 (#ПроектИнтеграцияАксапта12)
	//|	И (ДокументыПоID.Документ В
	//|				(ВЫБРАТЬ
	//|					ТранслированныеДокументы.Регистратор
	//|				ИЗ
	//|					ТранслированныеДокументы)
	//|			ИЛИ ДокументыПоID.Документ ССЫЛКА Документ.бит_ок_ОперацияАксапты)
	|	И (ДокументыПоID.Документ ССЫЛКА Документ.бит_ок_ОперацияАксапты
	|		ИЛИ ДокументыПоID.Документ ССЫЛКА Документ.бит_ок_ОперацияАксапты12
	|		ИЛИ ДокументыПоID.Документ В
	|				(ВЫБРАТЬ
	|					ТранслированныеДокументы.Регистратор
	|				ИЗ
	|					ТранслированныеДокументы))
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-26 (#ПроектИнтеграцияАксапта12)
	|	И НЕ бит_Дополнительный_2ДвиженияССубконто.НомерСтроки ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыПоIDСАккруалом.ДокументРСБУ,
	|	ДокументыПоIDСАккруалом.ID,
	|	СУММА(ДокументыПоIDСАккруалом.Сумма) КАК Сумма,
	|	ДокументыПоIDСАккруалом.АккруалПоID,
	|	ВЫБОР
	|		КОГДА рс_СторноЭУ.Ссылка ЕСТЬ NULL 
	|			ТОГДА ""<документ не записан>""
	|		ИНАЧЕ рс_СторноЭУ.Ссылка
	|	КОНЕЦ КАК СторноЭУ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ бит_Дополнительный_2ДвиженияССубконто.НомерСтроки) КАК КоличествоПроводокДокументаРСБУ
	|ИЗ
	|	ДокументыПоIDСАккруалом КАК ДокументыПоIDСАккруалом
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.рс_СторноЭУ КАК рс_СторноЭУ
	|		ПО ДокументыПоIDСАккруалом.АккруалПоID = рс_СторноЭУ.ДокументОснование
	|			И (рс_СторноЭУ.Проведен = ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.бит_Дополнительный_2.ДвиженияССубконто(
	|				&ДатаНач,
	|				&ДатаКон,
	|				ВидПроводки = &ВидПроводки
	|					И Организация = &Организация,





	|				,
	|				) КАК бит_Дополнительный_2ДвиженияССубконто
	|		ПО ДокументыПоIDСАккруалом.ДокументРСБУ = бит_Дополнительный_2ДвиженияССубконто.Регистратор
	|ГДЕ
	|	рс_СторноЭУ.Ссылка ЕСТЬ NULL 
	|	И НЕ бит_Дополнительный_2ДвиженияССубконто.НомерСтроки ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыПоIDСАккруалом.ID,
	|	ДокументыПоIDСАккруалом.ДокументРСБУ,
	|	ДокументыПоIDСАккруалом.АккруалПоID,
	|	ВЫБОР
	|		КОГДА рс_СторноЭУ.Ссылка ЕСТЬ NULL 
	|			ТОГДА ""<документ не записан>""
	|		ИНАЧЕ рс_СторноЭУ.Ссылка
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументыПоIDСАккруалом.ДокументРСБУ.Дата";
	
	Запрос.УстановитьПараметр("ДатаНач", Объект.ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаКон));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Источник", рс_ОбщийМодуль.ПолучитьНастройкуЭкономическогоУчета(Справочники.рс_ПоказателиНастроекЭУ.РегистрБухгалтерииРСБУ, Объект.ДатаКон));
	Запрос.УстановитьПараметр("Приемник", рс_ОбщийМодуль.ПолучитьНастройкуЭкономическогоУчета(Справочники.рс_ПоказателиНастроекЭУ.РегистрБухгалтерииМСФО, Объект.ДатаКон));
	Запрос.УстановитьПараметр("ВидПроводки", Перечисления.бит_КонтрольПериодов_ВидыПроводок.ПустаяСсылка());	
	
	ПолнаяТаблицаЗапрос = Запрос.Выполнить().Выгрузить();
	ТаблицаЗапрос = ПолнаяТаблицаЗапрос.Скопировать();
	ТаблицаЗапрос.Свернуть("ID, АккруалПоID, СторноЭУ");
	
	ЗапросПроводкиМСФО = Новый Запрос;
	ЗапросПроводкиМСФО.Текст =
	"ВЫБРАТЬ
	|	бит_Дополнительный_2.Регистратор КАК Регистратор,
	|	бит_Дополнительный_2.СчетДт КАК Счет,
	|	бит_Дополнительный_2.СчетДт.Наименование КАК СчетНаименование,
	|	СУММА(бит_Дополнительный_2.СуммаРегл) КАК Сумма,
	|	МАКСИМУМ(бит_Дополнительный_2.Период) КАК ДатаПроводокМСФО
	|ИЗ
	|	РегистрБухгалтерии.бит_Дополнительный_2 КАК бит_Дополнительный_2
	|ГДЕ
	|	бит_Дополнительный_2.Регистратор В(&МассивРегистраторы)
	|	И бит_Дополнительный_2.СчетДт В ИЕРАРХИИ(&Счет)
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_Дополнительный_2.СчетДт,
	|	бит_Дополнительный_2.Регистратор,
	|	бит_Дополнительный_2.СчетДт.Наименование";
	//ЗапросПроводкиМСФО.УстановитьПараметр("МассивРегистраторы", ТаблицаЗапрос.ВыгрузитьКолонку("ДокументРСБУ"));
	ЗапросПроводкиМСФО.УстановитьПараметр("МассивРегистраторы", ПолнаяТаблицаЗапрос.ВыгрузитьКолонку("ДокументРСБУ"));
	//БИТ Тртилек 21112013 в случае, если заполнен счет будем отбирать
	Если ЗначениеЗаполнено(Объект.Счет) Тогда
		//ЗапросПроводкиМСФО.УстановитьПараметр("Счет", ?(ЗначениеЗаполнено(Объект.Счет), Объект.Счет, ПланыСчетов.бит_Дополнительный_2.Расходы));
		ЗапросПроводкиМСФО.УстановитьПараметр("Счет", Объект.Счет);
		///БИТ Тртилек
	Иначе
		ЗапросПроводкиМСФО.Текст = СтрЗаменить(ЗапросПроводкиМСФО.Текст, "И бит_Дополнительный_2.СчетДт В ИЕРАРХИИ(&Счет)", "");
	КонецЕсли;
	ТаблицаПроводкиМСФО = ЗапросПроводкиМСФО.Выполнить().Выгрузить();
	
	
	Для Каждого СтрокаЗапрос Из ТаблицаЗапрос Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаЗапрос.АккруалПоID) Тогда
			Продолжить;	
		КонецЕсли;
		
		НайденныеСтрокиПолнаяТаблица = ПолнаяТаблицаЗапрос.НайтиСтроки(Новый Структура("ID", СтрокаЗапрос.ID));
		
		//ОК Калинин 060913 Сумму нужно брать по всем документам, т.к. первой строкой может идти регистратор не попавший в ТаблицаПроводкиМСФО 
		//ДокументРСБУ = НайденныеСтрокиПолнаяТаблица[0].ДокументРСБУ;
		//Если НЕ ЗначениеЗаполнено(ДокументРСБУ) Тогда
		//	Продолжить;
		//КонецЕсли;
		//
		//НайденныеСтроки = ТаблицаПроводкиМСФО.НайтиСтроки(Новый Структура("Регистратор", ДокументРСБУ));
		//
		//СуммаМСФО = 0;
		//Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		//	СуммаМСФО = СуммаМСФО + НайденнаяСтрока.Сумма;
		//КонецЦикла;  	
		
		ДокументРСБУ=неопределено;
		СуммаМСФО = 0;
		Для каждого НайденныеСтрокиПолнаяТаблица_стр из НайденныеСтрокиПолнаяТаблица
		Цикл
			ДокументРСБУ=НайденныеСтрокиПолнаяТаблица_стр.ДокументРСБУ;	
			НайденныеСтроки = ТаблицаПроводкиМСФО.НайтиСтроки(Новый Структура("Регистратор", ДокументРСБУ));			
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				СуммаМСФО = СуммаМСФО + НайденнаяСтрока.Сумма;
			КонецЦикла;  	
			
		КонецЦикла;
		//ОК Калинин
		
		Если СуммаМСФО = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Объект.База.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапрос);
		
		НоваяСтрока.ДокументРСБУ = ДокументРСБУ;
		
		Если НайденныеСтроки.Количество() = 1 Тогда
			
			НоваяСтрока.Счет 				= НайденныеСтроки[0].Счет;
			НоваяСтрока.СчетНаименование 	= НайденныеСтроки[0].СчетНаименование;
			// Rarus-spb byse 2012.12.21 {
			НоваяСтрока.ДатаПроводокМСФО    = НайденныеСтроки[0].ДатаПроводокМСФО;
			// Rarus-spb byse 2012.12.21 }
			
		КонецЕсли;
		
		НоваяСтрока.Сумма = СуммаМСФО;
		
		БазаАккруалПоID = СтрокаЗапрос.АккруалПоID.База.Выгрузить(, "Счет, Сумма");
		БазаАккруалПоID.Сортировать("Счет, Сумма");
		
		БазаПроводкиМСФО = ТаблицаПроводкиМСФО.Скопировать(НайденныеСтроки, "Счет, Сумма");
		БазаПроводкиМСФО.Сортировать("Счет, Сумма");
		
		Если бит_КонтрольЗакрытогоПериода.СравнитьТаблицы(БазаАккруалПоID, БазаПроводкиМСФО) Тогда
			НоваяСтрока.КонтрольСтатьи = Истина;
		КонецЕсли;
		
		Если СтрокаЗапрос.АккруалПоID.База.Итог("Сумма") = СуммаМСФО Тогда
			НоваяСтрока.КонтрольСумм = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИПровести(Команда)
	
	ЗаписатьИПровестиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИПровестиНаСервере()
	Для Каждого СтрокаТЧ Из Объект.База Цикл
		
		Если НЕ СтрокаТЧ.Отбор Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.СторноЭУ) ИЛИ ТипЗнч(СтрокаТЧ.СторноЭУ) = Тип("Строка") Тогда
			ДокументОбъект = Документы.рс_СторноЭУ.СоздатьДокумент();
			
			ДокументОбъект.Дата = КонецДня(Объект.ДатаКон);
		Иначе
			ДокументОбъект = СтрокаТЧ.СторноЭУ.ПолучитьОбъект();
		КонецЕсли;
		
		Документы.рс_СторноЭУ.ЗаполнениеПоОснованию(ДокументОбъект, СтрокаТЧ.АккруалПоID, Новый Структура("Организация, ID", Объект.Организация, СтрокаТЧ.ID));
		//ОК Калинин М. 060613 
		ДокументОбъект.Ответственный=бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
		//ОК Калинин М. 
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			СтрокаТЧ.СторноЭУ = ДокументОбъект.Ссылка;
		Исключение
			//Сообщить(ОписаниеОшибки());	
		КонецПопытки;
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	Для Каждого СтрокаТЧ Из Объект.База Цикл
		СтрокаТЧ.Отбор = Истина;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьВсе(Команда)

	Для Каждого СтрокаТЧ Из Объект.База Цикл
		СтрокаТЧ.Отбор = Ложь;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	//Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура БазаАккруалПоIDОткрытие(Элемент, СтандартнаяОбработка)
	
	
КонецПроцедуры

&НаКлиенте
Процедура БазаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "БазаСторноЭУ" Тогда
		
		Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.СторноЭУ) ИЛИ ТипЗнч(Элемент.ТекущиеДанные.СторноЭУ) = Тип("Строка") Тогда
			ЗначенияЗаполнения = Новый Структура("Ссылка, Организация, Контрагент, ДоговорКонтрагента, Комментарий, ID");
			Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.АккруалПоID) Тогда 
				АккруалПоID = бит_ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Элемент.ТекущиеДанные.АккруалПоID, "Ссылка, Организация, Контрагент, ДоговорКонтрагента, Комментарий");
				ЗаполнитьЗначенияСвойств(ЗначенияЗаполнения, АккруалПоID);
			КонецЕсли;
			ЗначенияЗаполнения.ID = Элемент.ТекущиеДанные.ID;
			ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
			Форма = ПолучитьФорму("Документ.рс_СторноЭУ.ФормаОбъекта", ПараметрыФормы, Элемент); 
			Форма.Объект.Дата = КонецДня(Объект.ДатаКон);
			Форма.Открыть();
		Иначе
			ПоказатьЗначение(Неопределено, Элемент.ТекущиеДанные.СторноЭУ);
		КонецЕсли;
		
	ИначеЕсли Поле.Имя = "БазаАккруалПоID" Тогда
		
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.АккруалПоID) Тогда
			ПоказатьЗначение(Неопределено, Элемент.ТекущиеДанные.АккруалПоID);
		КонецЕсли;
		
	ИначеЕсли Поле.Имя = "БазаДокументРСБУ" Тогда
		
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.ДокументРСБУ) Тогда
			ПоказатьЗначение(Неопределено, Элемент.ТекущиеДанные.ДокументРСБУ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БазаОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Если Источник.ВладелецФормы.ТекущийЭлемент.Имя = "БазаСторноЭУ" Тогда
		Источник.ВладелецФормы.ТекущиеДанные.СторноЭУ = НовыйОбъект;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БазаПриИзменении(Элемент)
	
	РассчитатьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьИтоги()
	
	СуммаИтог = Объект.База.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура СчетПриИзменении(Элемент)
	
	СчетНаименование = ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Счет, "Наименование");
	
КонецПроцедуры

&НаКлиенте
Процедура БазаСчетПриИзменении(Элемент)
	
	ТекущиеДанные = Элемент.Родитель.ТекущиеДанные;
	
	ТекущиеДанные.СтатьяОборотов   = рс_ОбщийМодуль.ПолучитьСтатьюОборотовПоСчетуМСФО(ТекущиеДанные.Счет);
	ТекущиеДанные.СчетНаименование = ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Счет, "Наименование");
	
КонецПроцедуры
