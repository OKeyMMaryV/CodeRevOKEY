
&НаСервере
Процедура ОбновитьНаСервере_1()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(бит_Дополнительный_2ОборотыДтКт.СубконтоДт1 КАК Справочник.ОбъектыСтроительства) КАК Объект,
	|	ВЫРАЗИТЬ(бит_Дополнительный_2ОборотыДтКт.СубконтоДт2 КАК Справочник.рс_МесяцыНачисления) КАК Месяц,
	|	бит_Дополнительный_2ОборотыДтКт.СуммаМУОборот КАК Сумма
	|ПОМЕСТИТЬ ТаблицаОборотов
	|ИЗ
	|	РегистрБухгалтерии.бит_Дополнительный_2.ОборотыДтКт(, , , СчетДт = &СчетДт, &ВидыСубконтоДт, СчетКт = &СчетКт, , СубконтоДт2 = &Период) КАК бит_Дополнительный_2ОборотыДтКт
	|ГДЕ
	|	бит_Дополнительный_2ОборотыДтКт.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОсновныеСредства.Объект КАК Объект,
	|	ДополнительныеСведения.Значение КАК Месяц,
	|	ОсновныеСредства.Ссылка КАК ОС
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|		ПО (ДополнительныеСведения.Свойство = &Свойство)
	|			И (ДополнительныеСведения.Объект = ОсновныеСредства.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОборотов.Объект КАК Объект,
	|	ТаблицаОборотов.Месяц КАК Месяц,
	|	ТаблицаОборотов.Сумма КАК Сумма,
	|	ИСТИНА КАК Пометка,
	|	ТаблицаОС.ОС КАК ОС
	|ИЗ
	|	ТаблицаОборотов КАК ТаблицаОборотов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
	|		ПО (ТаблицаОС.Объект = ТаблицаОборотов.Объект)
	|			И (ТаблицаОС.Месяц = ТаблицаОборотов.Месяц)";
	
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", МесяцНачисления);
	Запрос.УстановитьПараметр("СчетДт", СчетДт);
	Запрос.УстановитьПараметр("СчетКт", СчетКт);
	Запрос.УстановитьПараметр("Свойство", ПериодОС);
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.бит_ВидыСубконтоДополнительные_2.Объект);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.бит_ВидыСубконтоДополнительные_2.Периоды);
	Запрос.УстановитьПараметр("ВидыСубконтоДт", ВидыСубконто);
	
	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(),"ОС");
	
	//Для Каждого Строка ИЗ ОС Цикл
	//	
	//	НаименованиеОС = "ОС до 40 000 р. " + Строка.Объект + " " + Строка.Месяц;
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ДополнительныеСведения.Объект КАК Объект
	//	|ИЗ
	//	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	//	|ГДЕ
	//	|	ДополнительныеСведения.Значение = &Значение
	//	|	И ДополнительныеСведения.Свойство = &Свойство";
	//	
	//	Запрос.УстановитьПараметр("Значение", НаименованиеОС);
	//	Запрос.УстановитьПараметр("Свойство", ДопСведенияОС);
	//	
	//	РезультатЗапроса = Запрос.Выполнить();
	//	
	//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//	
	//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//		Строка.ОС = ВыборкаДетальныеЗаписи.Объект;
	//	КонецЦикла;
	//КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	Если НастройкаАнализа = 1 Тогда
		ОбновитьНаСервере_1();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастройкаАнализа()
	
	Если НастройкаАнализа = 1 Тогда
		СчетДТ = ПланыСчетов.бит_Дополнительный_2.АмортизацияОСдо40тыс;
		СчетКТ = ПланыСчетов.бит_Дополнительный_2.СырьеМатериалы;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// настройка по умолчанию
	НастройкаАнализа = 1;
	НастройкаАнализа();
	КорСчет 	= ПланыСчетов.бит_Дополнительный_2.ОсновныеСредстваДо40НакопленнаяАмортизация;
	СчетУчета 	= ПланыСчетов.бит_Дополнительный_2.ОсновныеСредстваДо40;
	
	Если ЗначениеЗаполнено(ЭтаФорма.Параметры.Дата) Тогда
		МесяцНачисления = рс_ОбщийМодуль.ПолучитьМесяцНачисленияПоДате(ЭтаФорма.Параметры.Дата);
	Иначе	
		МесяцНачисления = рс_ОбщийМодуль.ПолучитьМесяцНачисленияПоДате(ТекущаяДата());
	КонецЕсли;	
	Организация = ЭтаФорма.Параметры.Организация;
	Очищать = ЭтаФорма.Параметры.Очищать;
	
	НастройкиОС = НастройкиДляСозданияОС();
	ПериодОС = НастройкиОС.ПериодОС;
	ГруппаМСФО    = НастройкиОС.ГруппаОСМСФО;
	
	Если Не ЗначениеЗаполнено(ПериодОС) Тогда
		ТекстОшибки = НСтр("ru = 'Требуется настроить для ОСов дополнительное сведение для хранения служебного периода начисления.
		|Обратитесь в службу поддержки для настройки доп. сведения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , , , Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ГруппаМСФО) Тогда
		ТекстОшибки = НСтр("ru = 'Требуется настроить для ОСов группу МСФО, в которой будут сохраняться новые карточки ОС.
		|Обратитесь в службу поддержки для настройки доп. сведения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , , , Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда
		// установим параметры выбора по группе ОС,
		// выбор только по родителю ГруппаМСФО
		
		ГруппаОС = ГруппаМСФО;
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Родитель", ГруппаМСФО);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		Элементы.ГруппаОС.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);

	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПараметрыВозврата()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ТаблицаОСХранилище", Новый ХранилищеЗначения(ОС.Выгрузить(),Новый СжатиеДанных(9)));
	СтруктураПараметров.Вставить("КорСчет" ,КорСчет);
	СтруктураПараметров.Вставить("СчетУчета", СчетУчета);
	СтруктураПараметров.Вставить("Очищать", Очищать);
	
	Возврат СтруктураПараметров
	
КонецФункции

&НаКлиенте
Процедура ПереносСтрок(Команда)
	
	
	Если НЕ ЗначениеЗаполнено(КорСчет) Тогда
		Сообщить("Укажите корсчет");
		Возврат;	
	ИначеЕсли НЕ ЗначениеЗаполнено(СчетУчета) Тогда
		Сообщить("Укажите счет учета");
		Возврат;	
	ИначеЕсли НЕ ОС.Количество() Тогда			
		Сообщить("Таблица ОС пустая");
		Возврат;
	ИначеЕсли НЕ ОС.НайтиСтроки(Новый Структура("Пометка", Истина)).Количество() Тогда
		Сообщить("Нету помеченных на перенос строк");
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка ИЗ ОС Цикл
		Если Строка.Пометка И НЕ ЗначениеЗаполнено(Строка.ОС) Тогда
			
			Оповещение = Новый ОписаниеОповещения("ПереносСтрокОтвет",ЭтотОбъект);	
			
			ПоказатьВопрос(Оповещение, "Есть строки без ОС, которые не будут перенесены, продолжить?", РежимДиалогаВопрос.ДаНет, 0,, "Предупреждение");
			
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	ЭтаФорма.Закрыть(ПараметрыВозврата());
	
КонецПроцедуры

&НаКлиенте
Процедура ПереносСтрокОтвет(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда	
		ЭтаФорма.Закрыть(ПараметрыВозврата());
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьПометкиНаСервере()
	ТЗ = ОС.Выгрузить();
	ТЗ.ЗаполнитьЗначения(Истина,"Пометка");
	ЗначениеВРеквизитФормы(ТЗ,"ОС");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	УстановитьПометкиНаСервере();
КонецПроцедуры

&НаСервере
Процедура СнятьПометкиНаСервере()
	ТЗ = ОС.Выгрузить();
	ТЗ.ЗаполнитьЗначения(Ложь,"Пометка");
	ЗначениеВРеквизитФормы(ТЗ,"ОС");
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	СнятьПометкиНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьКарточкиОСНаСервере() 
	
	ПВХИмяОС = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("СозданноеНаименованиеОС");
	
	Для Каждого Строка ИЗ ОС Цикл
		
		Если НЕ Строка.Пометка Тогда 
			Продолжить;
		КонецЕсли;
		
		НаименованиеОС = "ОС до 40 000 р.: " + Строка.Объект + " " + Строка.Месяц;
		
		Если ЗначениеЗаполнено(Строка.ОС) Тогда
			ОбъектОС = Строка.ОС.ПолучитьОбъект();
			ЭтоНовыйОС = Ложь;
		Иначе 
			
			ОбъектОС = Справочники.ОсновныеСредства.СоздатьЭлемент();
			ОбъектОС.Наименование = НаименованиеОС;	
			ЭтоНовыйОС = Истина;
		КонецЕсли;
		
		НачатьТранзакцию();
		
		ОбъектОС.Родитель = ГруппаОС;
		ОбъектОС.НаименованиеПолное = НаименованиеОС;
		ОбъектОС.БИТ_ГруппаОСУУ = КлассОС;
		ОбъектОС.ГруппаОС 		= ГруппаУчетаОС;
		ОбъектОС.Объект 		= Строка.Объект;
		ОбъектОС.ТипОС 			= Перечисления.ТипыОС.ОбъектОС; //?
		ОбъектОС.бит_му_ТолькоМСФО = Истина;
		Попытка
			ОбъектОС.Записать();
		Исключение
			ТекстСообщения = НСтр("ru = 'Неудачная запись: " + ОбъектОС.Наименование +"'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			ОтменитьТранзакцию();
			Продолжить;
		КонецПопытки;	
		
		МЗДопСведения = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
		МЗДопСведения.Свойство 	= ПериодОС;
		МЗДопСведения.Значение 	= Строка.Месяц;
		МЗДопСведения.Объект 	= ОбъектОС.Ссылка;
		
		Попытка
			МЗДопСведения.Записать(Истина);
		Исключение
			ТекстСообщения = НСтр("ru = 'Неудачная запись: " + ОбъектОС.Наименование +"'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			ОтменитьТранзакцию();
			Продолжить;
		КонецПопытки;	
		
		Если ЭтоНовыйОС Тогда
			ТекстСообщения = НСтр("ru = 'Заведена новая карточка ОС: " + ОбъектОС.Наименование +"'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Обновлена карточка ОС: " + ОбъектОС.Наименование +"'");
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		ЗафиксироватьТранзакцию();
		
		Строка.ОС = ОбъектОС.Ссылка;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКарточкиОС(Команда)
	
	// если нет выбранных строк тогда выходим
	ПараметрыОтбора = Новый Структура("Пометка", Истина);
	МассивСтрок = ОС.НайтиСтроки(ПараметрыОтбора);
	Если МассивСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		Оповещение = Новый ОписаниеОповещения("СоздатьКарточкиОСОтвет",ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение, "Будут созданы карточки ОС, продолжить?", РежимДиалогаВопрос.ДаНет, 0,, "Предупреждение");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКарточкиОСОтвет(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		СоздатьКарточкиОСНаСервере()
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ГруппаОСПриИзмененииНаСервере()
	
	//Если не ГруппаОС.ПринадлежитЭлементу(ГруппаМСФО) И ГруппаМСФО <> ГруппаОС Тогда 
	//	ГруппаОС = ГруппаМСФО;
	//	Сообщить("Выберите подгруппу МСФО");
	//Конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаОСПриИзменении(Элемент)
	ГруппаОСПриИзмененииНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Функция НастройкиДляСозданияОС()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_БК_НастройкиБК.Значение КАК Значение,
	|	&ИмяНастройки КАК ИмяНастройки
	|ИЗ
	|	РегистрСведений.бит_му_Настройки КАК бит_БК_НастройкиБК
	|ГДЕ
	|	бит_БК_НастройкиБК.Группа = &Группа
	|	И бит_БК_НастройкиБК.ИмяНастройки = &ИмяНастройки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	бит_БК_НастройкиБК.Значение,
	|	&ИмяНастройки2
	|ИЗ
	|	РегистрСведений.бит_му_Настройки КАК бит_БК_НастройкиБК
	|ГДЕ
	|	бит_БК_НастройкиБК.Группа = &Группа2
	|	И бит_БК_НастройкиБК.ИмяНастройки = &ИмяНастройки2";
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	бит_БК_НастройкиБК.Значение,
	//|	&ИмяНастройки3
	//|ИЗ
	//|	РегистрСведений.бит_му_Настройки КАК бит_БК_НастройкиБК
	//|ГДЕ
	//|	бит_БК_НастройкиБК.Группа = &Группа
	//|	И бит_БК_НастройкиБК.ИмяНастройки = &ИмяНастройки3";
	
	Запрос.УстановитьПараметр("Группа", "ОсновныеСредства");
	Запрос.УстановитьПараметр("ИмяНастройки", "ПериодОС");
	Запрос.УстановитьПараметр("Группа2", "Группа ОС МСФО");
	Запрос.УстановитьПараметр("ИмяНастройки2", "Группа ОС МСФО");
	Запрос.УстановитьПараметр("ИмяНастройки3", "Объект");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат = Новый Структура("ГруппаОСМСФО, Период");
	Пока Выборка.Следующий() Цикл
		Результат.Вставить(СтрЗаменить(Выборка.ИмяНастройки, " ", ""), Выборка.Значение);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции