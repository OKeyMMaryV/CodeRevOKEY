////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

#Область ПеременныеМодуля


&НаКлиенте
Перем ТекущаяСтрокаОбъектовПривязки; // Текущая активная строка в таблице объектов привязки.
&НаКлиенте
Перем ТекущаяСтрокаОбъектовОтбора;   // Текущая активная строка в таблице объектов отбора.


#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

#Область ПроцедурыИФункцииОбщегоНазначения



&НаКлиенте
// Признак, что форма является формой дополнительных настроек.
// 
// Параметры 
// Возвращаемое значение:
// 	Возврат ...        	 -	Булево                 	 Истина - Форма является формой настройки.     
// 
Функция ЭтоСохранениеНастроек() Экспорт
	Возврат Ложь;
КонецФункции // ЭтоСохранениеНастроек()

&НаСервере
// Получает массив реквизитов по объекту.
// 
// Параметры 
// Возвращаемое значение:
// 	Возврат Массив       -	Массив                 	 Массив имен реквизитов.
// 	Реквизитов.
// 
Функция ПолучитьМассивРеквизитов() Экспорт
	РеквизитФормыВЗначение = РеквизитФормыВЗначение("Объект");
	СтруктураРеквизитов = Новый Структура;
	Для Каждого ВремРек Из РеквизитФормыВЗначение.Метаданные().Реквизиты Цикл 
		СтруктураРеквизитов.Вставить(ВремРек.Имя,ВремРек.Тип);
	КонецЦикла;
	Возврат СтруктураРеквизитов;
КонецФункции // ЭтоСохранениеНастроек()

&НаСервереБезКонтекста
// Получает список выбора по метаданным.
// 
// Параметры 
// 	ВремСписок		     -	СписокЗначений        	 Список значений общих метаданных.
// Возвращаемое значение:
// 	Возврат СписокВыбора -	СписокЗначений         	 Список для выбора.
// 
Функция ПолучитьСписокВыбораПоМетаданным(ВремСписок)
	СписокВыбора = Новый СписокЗначений();
	Для Каждого ВремЭлемент Из ВремСписок Цикл
		Для Каждого Мета Из Метаданные[ВремЭлемент.Значение] Цикл
			СписокВыбора.Добавить(Мета.ПолноеИмя(), ВремЭлемент.Представление+": "+Мета.Синоним);
		КонецЦикла; 
	КонецЦикла;
	СписокВыбора.СортироватьПоПредставлению();
	Возврат СписокВыбора;
КонецФункции // ПолучитьСписокВыбораПоМетаданным()

&НаСервере
// Записывает настройки во временное хранилище.
// 
// Параметры 
// 	Уникальный  	     -	УникальныйИдентификатор, Уникальный идентификатор для записи во временное хранилище.
// 	ИдентификаторВладельца  Строка.
// Возвращаемое значение:
// 	Возврат Адрес		 -	Строка	         	 	 Адрес во временном хранилище.
// 
Функция ЗаписатьНастройкиВоВременноеХранилище(УникальныйИдентификаторВладельца = "")
	Адрес = "";
	СтруктураРеквизитов = ПолучитьМассивРеквизитов();
	ВремНастройки = Новый Структура();
	Для Каждого ВремРеквизит Из СтруктураРеквизитов Цикл
		Если НЕ Лев(ВремРеквизит.Ключ,10)="Настройка_" Тогда
			Продолжить;
		КонецЕсли;
		Если ВремРеквизит.Значение.СодержитТип(Тип("ТаблицаЗначений")) Тогда
			ВремНастройки.Вставить(Сред(ВремРеквизит.Ключ,11),ЭтаФорма.Объект[ВремРеквизит.Ключ].Выгрузить());
		Иначе 	
			ВремНастройки.Вставить(Сред(ВремРеквизит.Ключ,11),ЭтаФорма.Объект[ВремРеквизит.Ключ]);
		КонецЕсли;
	КонецЦикла;
	Адрес = ПоместитьВоВременноеХранилище(ВремНастройки,УникальныйИдентификаторВладельца);
	Возврат Адрес;
КонецФункции // ЗаписатьНастройкиВоВременноеХранилище()

&НаСервереБезКонтекста
// Получает объекты отбора
// 
// Параметры 
// 	ТекущийКод  	     -	Строка					 Код для отборов.
// 	ТекущийТип  	     -	Строка					 Строка, содержащая текущий тип значения.
// 	МассивРезультатов    -	Массив					 Массив выводимых результатов.
// 	МассивДругихТипов    -	Массив					 Массив других объектов.
// 	ТабОбъектов			 -	ТабличныйДокумент 		 Выводимый табличный документ.
// Возвращаемое значение:
// 	Возврат ...		   	 -	Булево	         	 	 Результат обработки.
// 
Функция ПолучитьОбъектыОтбора(ТекущийКод,
							  ТекущийТип,
							  МассивРезультатов,
							  МассивДругихТипов,
							  ТабОбъектов)
	Результат = Неопределено;
	Попытка
		Выполнить(ТекущийКод);
	Исключение
		Возврат Истина;
	КонецПопытки;
	Если Результат = Неопределено Тогда
		Возврат Истина;
	ИначеЕсли ТипЗнч(Результат) = Тип("Массив") Тогда
		Для Каждого ТекОбъект Из Результат Цикл
			Если ТекущийТип = "#Роль" И Лев(ТекОбъект, 5) = "Роль." Тогда
				МассивРезультатов.Добавить(ТекОбъект);
			ИначеЕсли ТекущийТип = "#Роль" Тогда
				МассивДругихТипов.Добавить(ТекОбъект);
			ИначеЕсли ТипЗнч(ТекОбъект) = Тип(СтрЗаменить(ТекущийТип, ".", "Ссылка.")) Тогда
				МассивРезультатов.Добавить(ТекОбъект);
			Иначе
				МассивДругихТипов.Добавить(ТекОбъект);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(Результат) = Тип(СтрЗаменить(ТекущийТип, ".", "Ссылка.")) Тогда
		МассивРезультатов.Добавить(Результат);
	ИначеЕсли НЕ ТипЗнч(Результат) = Тип(СтрЗаменить(ТекущийТип, ".", "Ссылка.")) Тогда
		МассивДругихТипов.Добавить(Результат);
	КонецЕсли;
	Макет = Обработки.бит_си_ИсточникСправочникСтатьи.ПолучитьМакет("ПроверкаПолученияОбъектовОтбора");
	ШаблонЗаголовка		= Макет.ПолучитьОбласть("Заголовок");
	ШаблонЗаголовкаПТ	= Макет.ПолучитьОбласть("ЗаголовокПрочиеТипы");
	ШаблонОбъекта		= Макет.ПолучитьОбласть("Объект");
	ШаблонОбъектаПТ		= Макет.ПолучитьОбласть("ОбъектПрочиеТипы");
	Для й = 1 По МассивРезультатов.Количество() Цикл
		Если й = 1 Тогда
			ШаблонЗаголовка.Параметры.Заголовок = "Текущие объекты отбора (" + СокрЛП(ТипЗнч(МассивРезультатов[0])) + "): ";
			ТабОбъектов.Вывести(ШаблонЗаголовка); 
		КонецЕсли;
		ШаблонОбъекта.Параметры.Объект = МассивРезультатов[й - 1];
		ТабОбъектов.Вывести(ШаблонОбъекта); 
	КонецЦикла;
	Для й = 1 По МассивДругихТипов.Количество() Цикл
		Если й = 1 Тогда
			ШаблонЗаголовкаПТ.Параметры.Заголовок = "Объекты, прочих типов: ";
			ТабОбъектов.Вывести(ШаблонЗаголовкаПТ); 
		КонецЕсли;
		ШаблонОбъектаПТ.Параметры.Объект = МассивДругихТипов[й - 1];
		ШаблонОбъектаПТ.Параметры.ТипОбъекта = СокрЛП(ТипЗнч(МассивДругихТипов[й - 1]));
		ТабОбъектов.Вывести(ШаблонОбъектаПТ); 
	КонецЦикла;
	Возврат Ложь;
КонецФункции // ПолучитьОбъектыОтбора()


#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ.

#Область ПроцедурыОбработчикиСобытийЭлементовФормы



&НаКлиенте
// Процедура обработчик - события "НачалоВыбора" поля ввода "МетаОбъект" 
// табличных полей "Настройка_ОбъектыПривязки".
// 
Процедура Настройка_ОбъектыПривязкиМетаОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Элементы.Настройка_ОбъектыПривязки.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ВремСписок = Новый СписокЗначений();
	
	ВремСписок.Добавить("Справочники","Справочники",,БиблиотекаКартинок.Справочник);
	ВремСписок.Добавить("Документы","Документы",,БиблиотекаКартинок.Документ);
	ВремСписок.Добавить("ПланыВидовХарактеристик","Планы видов характеристик",,БиблиотекаКартинок.ПланВидовХарактеристик);
	ВремСписок.Добавить("ПланыСчетов","Планы счетов",,БиблиотекаКартинок.ПланСчетов);
	ВремСписок.Добавить("ПланыВидовРасчета","Планы видов расчета",,БиблиотекаКартинок.ПланВидовРасчета);
	ВремСписок.Добавить("Перечисления","Перечисления",,БиблиотекаКартинок.Перечисление);
	ВремСписок.Добавить("БизнесПроцессы","Бизнес-процессы",,БиблиотекаКартинок.БизнесПроцесс);
	ВремСписок.Добавить("Задачи","Задачи",,БиблиотекаКартинок.Задача);
	ВремСписок.Добавить("ПланыОбмена","ПланыОбмена",,БиблиотекаКартинок.ПланОбмена);
	СписокВыбора = ПолучитьСписокВыбораПоМетаданным(ВремСписок);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ВремСписок", ВремСписок);
	
	ОбработкаОповещения = Новый ОписаниеОповещения("ВыборТипОбъекта", ЭтотОбъект, ДопПараметры);
	ПоказатьВыборИзСписка(ОбработкаОповещения, СписокВыбора);
		
КонецПроцедуры // Настройка_ОбъектыПривязкиМетаОбъектНачалоВыбора()

&НаКлиенте
Процедура ВыборТипОбъекта(ВыбЗначение, ДопПараметры) Экспорт

	Если ВыбЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВремСписок = ДопПараметры.ВремСписок;
	
	Элементы.Настройка_ОбъектыПривязки.ТекущиеДанные.МетаОбъект = ВыбЗначение.Значение;
	Если ПустаяСтрока(Элементы.Настройка_ОбъектыПривязки.ТекущиеДанные.Заголовок) Тогда
		Элементы.Настройка_ОбъектыПривязки.ТекущиеДанные.Заголовок = ВыбЗначение.Представление;
	КонецЕсли;
	Если Не ПустаяСтрока(Элементы.Настройка_ОбъектыПривязки.ТекущиеДанные.КодПолученияТекстаОбъекта) Тогда
		Возврат;
	КонецЕсли;
	Для Каждого ТекЭлемент Из ВремСписок Цикл
		Если Лев(ВыбЗначение.Представление, СтрДлина(ТекЭлемент.Представление)) = ТекЭлемент.Представление Тогда
			ВремТип = ТекЭлемент.Значение + "@" + Сред(ВыбЗначение.Значение, Найти(ВыбЗначение.Значение, ".") + 1);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	ВремКод = "ВремТаб = Новый ТаблицаЗначений();
			  |ВремТаб.Колонки.Добавить(""Заголовок"");
			  |ВремТаб.Колонки.Добавить(""Ссылка"");
			  |Для Каждого ТекИсточник Из МассивОбъектов Цикл
			  |	НоваяСтрока = ВремТаб.Добавить();
			  |	НоваяСтрока.Заголовок	= СокрЛП(ТекИсточник.ВидЗамечания) + "" "" + СокрЛП(ТекИсточник.Номер) + "" от "" + СокрЛП(ТекИсточник.Дата);
			  |	НоваяСтрока.Ссылка		= ""ОбъектКонфигурации=" + ВремТип + "@"" + СокрЛП(ТекИсточник.УникальныйИдентификатор());
			  |КонецЦикла;
			  |Результат = """";
			  |Если НЕ ВремТаб.Количество() = 0 Тогда
			  |	ВыведеноСтрок = 0;
			  |	Для Каждого ТекСтрока Из ВремТаб Цикл
			  |		ВыведеноСтрок = ВыведеноСтрок + 1;
			  |		Результат = Результат + ""
			  |								|<div style=""""padding-top:10px;padding-bottom:5px;padding-left:10pt;font-weight:bold;font-size:10pt;color:Black;"""">
			  |								|<a href=""""""
			  |							  + ТекСтрока.Ссылка + """""" style=""""font-weight:bold;font-size:10pt;color:Black;text-decoration:none;"""">""
			  |							  + ТекСтрока.Заголовок + ""</a></div>"";
			  |	КонецЦикла;
			  |КонецЕсли;
			  |";
	Элементы.Настройка_ОбъектыПривязки.ТекущиеДанные.КодПолученияТекстаОбъекта = ВремКод;		  
	Код_ПолучениеОбъектовПривязки = ВремКод;
	ЭтаФорма.Модифицированность = Истина;	

КонецПроцедуры // ВыборТипОбъекта()

&НаКлиенте
// Процедура обработчик - события "НачалоВыбора" поля ввода "МетаОбъект" 
// табличного поля "Настройка_ОбъектыОтбора".
// 
Процедура Настройка_ОбъектыОтбораМетаОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Элементы.Настройка_ОбъектыОтбора.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ВремСписок = Новый СписокЗначений();
	
	ВремСписок.Добавить("Справочники","Справочники",,БиблиотекаКартинок.Справочник);
	ВремСписок.Добавить("Документы","Документы",,БиблиотекаКартинок.Документ);
	ВремСписок.Добавить("ПланыВидовХарактеристик","Планы видов характеристик",,БиблиотекаКартинок.ПланВидовХарактеристик);
	ВремСписок.Добавить("ПланыСчетов","Планы счетов",,БиблиотекаКартинок.ПланСчетов);
	ВремСписок.Добавить("ПланыВидовРасчета","Планы видов расчета",,БиблиотекаКартинок.ПланВидовРасчета);
	ВремСписок.Добавить("Перечисления","Перечисления",,БиблиотекаКартинок.Перечисление);
	ВремСписок.Добавить("БизнесПроцессы","Бизнес-процессы",,БиблиотекаКартинок.БизнесПроцесс);
	ВремСписок.Добавить("Задачи","Задачи",,БиблиотекаКартинок.Задача);
	ВремСписок.Добавить("ПланыОбмена","ПланыОбмена",,БиблиотекаКартинок.ПланОбмена);
	СписокВыбора = ПолучитьСписокВыбораПоМетаданным(ВремСписок);
	СписокВыбора.СортироватьПоПредставлению();
	СписокВыбора.Вставить(0, "#Роль", "Роли пользователей");
	СписокВыбора.Вставить(1, "#РежимЗапуска", "Режим запуска");
		
	ОбработкаОповещения = Новый ОписаниеОповещения("ВыборТипаНачалоВыбора", ЭтотОбъект);
	ПоказатьВыборИзСписка(ОбработкаОповещения, СписокВыбора, Элемент, СписокВыбора.НайтиПоЗначению(Элементы.Настройка_ОбъектыОтбора.ТекущиеДанные.МетаОбъект));
	
	
КонецПроцедуры // Настройка_ОбъектыОтбораМетаОбъектНачалоВыбора()

&НаКлиенте
Процедура ВыборТипаНачалоВыбора(ВыбЗначение, ДопПараметры) Экспорт

	Если ВыбЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Элементы.Настройка_ОбъектыОтбора.ТекущиеДанные.МетаОбъект = ВыбЗначение.Значение;
	Если ПустаяСтрока(Элементы.Настройка_ОбъектыОтбора.ТекущиеДанные.Заголовок) Тогда
		Элементы.Настройка_ОбъектыОтбора.ТекущиеДанные.Заголовок = ВыбЗначение.Представление;
	КонецЕсли;
	ЭтаФорма.Модифицированность = Истина;

КонецПроцедуры // ВыборТипаНачалоВыбора()

&НаКлиенте
// Процедура обработчик - события "ПриАктивизации" 
// табличного поля "Настройка_ОбъектыПривязки".
// 
Процедура Настройка_ОбъектыПривязкиПриАктивизацииСтроки(Элемент)
	НоваяСтрока = Элементы.Настройка_ОбъектыПривязки.ТекущиеДанные;
	Если НЕ ТекущаяСтрокаОбъектовПривязки = Неопределено Тогда
		
		ПредыдущийКод = ТекущаяСтрокаОбъектовПривязки.КодПолученияТекстаОбъекта;
		ТекущийКод = Код_ПолучениеОбъектовПривязки;
	// 
		КодИзменен = НЕ (ПредыдущийКод = ТекущийКод);
		Если КодИзменен Тогда
			ТекущаяСтрокаОбъектовПривязки.КодПолученияТекстаОбъекта = ТекущийКод;
		КонецЕсли;
	КонецЕсли;
	Если НоваяСтрока = Неопределено Тогда
		// Элементы.Настройка_ОбъектыПривязки.КоманднаяПанель.Доступность = Ложь;
        Код_ПолучениеОбъектовПривязки = "";
	Иначе
		// Элементы.Настройка_ОбъектыПривязки.КоманднаяПанель.Доступность = Истина;
        Код_ПолучениеОбъектовПривязки = НоваяСтрока.КодПолученияТекстаОбъекта;
		Элементы.Код_ПолучениеОбъектовПривязки.ТолькоПросмотр = Истина;
		Флажок_ПолучениеОбъектовПривязкиДоступность = Ложь;
	КонецЕсли;
	// 
	ТекущаяСтрокаОбъектовПривязки = НоваяСтрока;
КонецПроцедуры // Настройка_ОбъектыПривязкиПриАктивизацииСтроки()

&НаКлиенте
// Процедура обработчик - события "ПередУдалением" 
// табличного поля "Настройка_ОбъектыПривязки".
// 
Процедура Настройка_ОбъектыПривязкиПередУдалением(Элемент, Отказ)
	Если НЕ Отказ Тогда
		ТекущаяСтрокаОбъектовПривязки = Неопределено;
	КонецЕсли;
КонецПроцедуры // Настройка_ОбъектыПривязкиПередУдалением()

&НаКлиенте
// Процедура обработчик - события "ПередОкончаниемРедактирования" 
// табличного поля "Настройка_ОбъектыПривязки".
// 
Процедура Настройка_ОбъектыПривязкиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если НоваяСтрока И ОтменаРедактирования Тогда
		ТекущаяСтрокаОбъектовПривязки = Неопределено;
	КонецЕсли;
КонецПроцедуры // Настройка_ОбъектыПривязкиПередОкончаниемРедактирования()

&НаКлиенте
// Процедура обработчик - события "ПриАктивизацииСтроки" 
// табличного поля "Настройка_ОбъектыОтбора".
// 
Процедура Настройка_ОбъектыОтбораПриАктивизацииСтроки(Элемент)
	НоваяСтрока = Элементы.Настройка_ОбъектыОтбора.ТекущиеДанные;
	Если НЕ ТекущаяСтрокаОбъектовОтбора = Неопределено Тогда
		
		ПредыдущийКод = ТекущаяСтрокаОбъектовОтбора.КодПолученияОбъектов;
		ТекущийКод = Код_ПолучениеОбъектовОтбора;
	
		КодИзменен = НЕ (ПредыдущийКод = ТекущийКод);
		Если КодИзменен Тогда
			ТекущаяСтрокаОбъектовОтбора.КодПолученияОбъектов = ТекущийКод;
		КонецЕсли;
	КонецЕсли;
	Если НоваяСтрока = Неопределено Тогда
		// Элементы.Настройка_ОбъектыОтбора.КоманднаяПанель.Доступность = Ложь;
		Код_ПолучениеОбъектовОтбора = "";
	Иначе
		// Элементы.Настройка_ОбъектыОтбора.КоманднаяПанель.Доступность = Истина;
		Код_ПолучениеОбъектовОтбора = НоваяСтрока.КодПолученияОбъектов;
		Элементы.Код_ПолучениеОбъектовОтбора.ТолькоПросмотр = Истина;
		Флажок_ПолучениеОбъектовОтбораДоступность = Ложь;
	КонецЕсли;
	
	ТекущаяСтрокаОбъектовОтбора = НоваяСтрока;
КонецПроцедуры // Настройка_ОбъектыОтбораПриАктивизацииСтроки()

&НаКлиенте
// Процедура обработчик - события "ПередУдалением" 
// табличного поля "Настройка_ОбъектыОтбора".
// 
Процедура Настройка_ОбъектыОтбораПередУдалением(Элемент, Отказ)
	Если НЕ Отказ Тогда
		ТекущаяСтрокаОбъектовОтбора = Неопределено;
	КонецЕсли;
КонецПроцедуры // Настройка_ОбъектыОтбораПередУдалением()

&НаКлиенте
// Процедура обработчик - события "ПередОкончаниемРедактирования" 
// табличного поля "Настройка_ОбъектыОтбора".
// 
Процедура Настройка_ОбъектыОтбораПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если НоваяСтрока И ОтменаРедактирования Тогда
		ТекущаяСтрокаОбъектовОтбора = Неопределено;
	КонецЕсли;
КонецПроцедуры // Настройка_ОбъектыОтбораПередОкончаниемРедактирования()

&НаКлиенте
// Процедура обработчик - события "ПриИзменении" флажка "Флажок_ПолучениеОбъектовПривязкиДоступность".
// 
Процедура Флажок_ПолучениеОбъектовПривязкиДоступностьПриИзменении(Элемент)
	Элементы.Код_ПолучениеОбъектовПривязки.ТолькоПросмотр = НЕ Флажок_ПолучениеОбъектовПривязкиДоступность;
КонецПроцедуры // Флажок_ПолучениеОбъектовПривязкиДоступностьПриИзменении()

&НаКлиенте
// Процедура обработчик - события "ПриИзменении" флажка "Флажок_ПолучениеОбъектовПривязкиДоступность".
// 
Процедура Флажок_ПолучениеОбъектовОтбораДоступностьПриИзменении(Элемент)
	Элементы.Код_ПолучениеОбъектовОтбора.ТолькоПросмотр = НЕ Флажок_ПолучениеОбъектовОтбораДоступность;
КонецПроцедуры // Флажок_ПолучениеОбъектовОтбораДоступностьПриИзменении()


#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ.

#Область ПроцедурыДействияКомандныхПанелейФормы



&НаКлиенте
// Процедура обработчик - события "Нажатие" кнопки "Выполнить" командной панели "ОсновныеДействияФормы"
// Оповещает форму владельца о необходимости сохранения введенных настроек.
// 
Процедура КнопкаВыполнитьНажатие(Команда)
	Если НЕ ТекущаяСтрокаОбъектовОтбора = Неопределено Тогда
		
		ПредыдущийКод = ТекущаяСтрокаОбъектовОтбора.КодПолученияОбъектов;
		ТекущийКод =    Код_ПолучениеОбъектовОтбора;
	
		КодИзменен = НЕ (ПредыдущийКод = ТекущийКод);
		Если КодИзменен Тогда
			ТекущаяСтрокаОбъектовОтбора.КодПолученияОбъектов = ТекущийКод;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ТекущаяСтрокаОбъектовПривязки = Неопределено Тогда
		
		ПредыдущийКод = ТекущаяСтрокаОбъектовПривязки.КодПолученияТекстаОбъекта;
		ТекущийКод    = Код_ПолучениеОбъектовПривязки;
	
		КодИзменен = НЕ (ПредыдущийКод = ТекущийКод);
		Если КодИзменен Тогда
			ТекущаяСтрокаОбъектовПривязки.КодПолученияТекстаОбъекта = ТекущийКод;
		КонецЕсли;
	КонецЕсли;
	ОповеститьОВыборе(ЗаписатьНастройкиВоВременноеХранилище(
															ЭтаФорма.ВладелецФормы.Родитель.Родитель.Родитель.УникальныйИдентификатор));
КонецПроцедуры // КнопкаВыполнитьНажатие()

&НаКлиенте
// Процедура обработчик - события "Нажатие" кнопки "ПолучениеОбъектовПривязкиПроверить" 
// командной панели "ОсновныеДействияФормы".	
// 
Процедура ПолучениеОбъектовПривязкиПроверить(Команда)
	Если Элементы.Настройка_ОбъектыПривязки.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Настройка_ОбъектыПривязкиПриАктивизацииСтроки(Элементы.Настройка_ОбъектыПривязки);
	ТекущийТип = СтрЗаменить(Элементы.Настройка_ОбъектыПривязки.ТекущиеДанные.МетаОбъект, ".", "Ссылка.");
	ТекущийКод = Элементы.Настройка_ОбъектыПривязки.ТекущиеДанные.КодПолученияТекстаОбъекта;
	// 
	Форма = ПолучитьФорму("Обработка.бит_си_ИсточникСправочникСтатьи.Форма.ФормаПроверкиОбъектовПривязкиУправляемая",
						  ,
						  ЭтаФорма);
	Форма.ЗаголовокОбъектаПривязки	= Новый ОписаниеТипов(ТекущийТип);
	Форма.ТипОбъектаПривязки		= Новый ОписаниеТипов(ТекущийТип);
	Форма.КодПолученияТекстаОбъекта	= ТекущийКод;
	Форма.Открыть();
КонецПроцедуры // ПолучениеОбъектовПривязкиПроверить()

&НаКлиенте
Процедура ПолучениеОбъектовОтбораПроверить(Команда)
	Если Элементы.Настройка_ОбъектыОтбора.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Настройка_ОбъектыОтбораПриАктивизацииСтроки(Элементы.Настройка_ОбъектыОтбора);
	ТекущийТип = Элементы.Настройка_ОбъектыОтбора.ТекущиеДанные.МетаОбъект;
	ТекущийКод = Элементы.Настройка_ОбъектыОтбора.ТекущиеДанные.КодПолученияОбъектов;
	МассивРезультатов = Новый Массив();
	МассивДругихТипов = Новый Массив();
	ТабОбъектов = Новый ТабличныйДокумент();
	ВыполненоСОшибкой = ПолучитьОбъектыОтбора(ТекущийКод,ТекущийТип,МассивРезультатов,МассивДругихТипов,ТабОбъектов);
	Если ВыполненоСОшибкой Тогда  
		ПоказатьПредупреждение(,"Не удалось получить объекты отбора!",20);
		ТекстСообщения = НСтр("ru = 'Не удалось получить объекты отбора.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	ТабОбъектов.ТолькоПросмотр	= Истина;
	ТабОбъектов.Защита = Истина;
	ТабОбъектов.ОтображатьСетку	= Ложь;
	ТабОбъектов.ОтображатьЗаголовки = Ложь;
	ТабОбъектов.Показать("Объекты отбора");
КонецПроцедуры


#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ПроцедурыОбработчикиСобытийФормы



&НаКлиенте
// Процедура обработчик - события "ПриОткрытии" формы.
// 
Процедура ПриОткрытии(Отказ)
	Элементы.Код_ПолучениеОбъектовОтбора.ТолькоПросмотр = НЕ Флажок_ПолучениеОбъектовОтбораДоступность;
	Элементы.Код_ПолучениеОбъектовПривязки.ТолькоПросмотр = НЕ Флажок_ПолучениеОбъектовПривязкиДоступность;
КонецПроцедуры // ПриОткрытии()

&НаСервере
// Процедура обработчик - события "ПриСозданииНаСервере" формы.
// 
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Попытка
		НастройкиВФорме = ПолучитьИзВременногоХранилища(ЭтаФОрма.Параметры.АдресНастроекВоВременномХранилище);
	Исключение
	КонецПопытки;
	Если НастройкиВФорме = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	Для Каждого Настройка Из НастройкиВФорме Цикл 
		ИмяРеквизита = "Настройка_"+Настройка.Ключ;
		Если ТипЗнч(Настройка.Значение) = Тип("ТаблицаЗначений") Тогда
			ЭтаФорма.Объект[ИмяРеквизита].Загрузить(Настройка.Значение);
		Иначе 
			ЭтаФорма.Объект[ИмяРеквизита] = Настройка.Значение;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // ПриСозданииНаСервере()
#КонецОбласти

