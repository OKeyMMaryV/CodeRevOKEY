
// Параметры соединения с SQL
Перем Адрес;
Перем ПользовательSQL;
Перем ПарольSQL;
Перем БазаДанных;
Перем ПодключеноКБазе Экспорт ;
Перем мТаймаут;   

// объекты для подключения к базе
Перем СоединениеАДО, ЗапросАДО; 

Перем ВыводитьСообщения Экспорт;

//Проверка наличия групп в регистре, если их нет, то добавляются
Процедура НастройкиИмпортаПоУмолчанию() Экспорт

	Запрос = Новый Запрос;
		
	Запрос.Текст = "ВЫБРАТЬ
	|	""ЗагрузкаИнициаторовБОСС"" КАК Группа,
	|	""Сервер"" КАК ИмяНастройки,
	|	""1C-DOC-SQL1"" КАК Значение
	|ПОМЕСТИТЬ ВТ_ПроверяемыеНастройки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ЗагрузкаИнициаторовБОСС"",
	|	""Логин"",
	|	""1CAppl""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ЗагрузкаИнициаторовБОСС"",
	|	""Пароль"",
	|	""VeryStrongPwd""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ЗагрузкаИнициаторовБОСС"",
	|	""База"",
	|	""Integration""
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Группа,
	|	ИмяНастройки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПроверяемыеНастройки.Группа,
	|	ВТ_ПроверяемыеНастройки.ИмяНастройки,
	|	ВТ_ПроверяемыеНастройки.Значение
	|ИЗ
	|	ВТ_ПроверяемыеНастройки КАК ВТ_ПроверяемыеНастройки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ок_НастройкиМеханизмаИмпортаДанных КАК бит_ок_НастройкиМеханизмаИмпортаДанных
	|		ПО ВТ_ПроверяемыеНастройки.Группа = бит_ок_НастройкиМеханизмаИмпортаДанных.Группа
	|			И ВТ_ПроверяемыеНастройки.ИмяНастройки = бит_ок_НастройкиМеханизмаИмпортаДанных.ИмяНастройки
	|ГДЕ
	|	бит_ок_НастройкиМеханизмаИмпортаДанных.ИмяНастройки ЕСТЬ NULL ";
	
	ТЗНастройки = Запрос.Выполнить().Выгрузить();
	
	НачатьТранзакцию();
	Для Каждого СтрокаНастроек из ТЗНастройки Цикл 
		ДобавляемаяНастройка				= РегистрыСведений.бит_ок_НастройкиМеханизмаИмпортаДанных.СоздатьМенеджерЗаписи();
		ДобавляемаяНастройка.Группа			= СтрокаНастроек.Группа;
		ДобавляемаяНастройка.ИмяНастройки	= СтрокаНастроек.ИмяНастройки;
		ДобавляемаяНастройка.Значение		= СтрокаНастроек.Значение;
		ДобавляемаяНастройка.Записать(Истина);
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Функция ОбновитьНастройкиИмпорта() Экспорт 

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	бит_ок_НастройкиМеханизмаИмпортаДанных.Группа КАК Группа,
	|	бит_ок_НастройкиМеханизмаИмпортаДанных.ИмяНастройки КАК ИмяНастройки,
	|	бит_ок_НастройкиМеханизмаИмпортаДанных.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.бит_ок_НастройкиМеханизмаИмпортаДанных КАК бит_ок_НастройкиМеханизмаИмпортаДанных
	|ГДЕ
	|	бит_ок_НастройкиМеханизмаИмпортаДанных.Группа = ""ЗагрузкаИнициаторовБОСС""";
	
	ТЗРезультат 		= Запрос.Выполнить().Выгрузить();
	
	Отказ				= Ложь;
	Сообщение			= "";
	СтрокаТЗ			= ТЗРезультат.Найти("Сервер");
	Если СтрокаТЗ = Неопределено Тогда  
		Отказ			= Истина;
		Сообщение		= Сообщение + "
		|Не указан параметр Сервер подключения";
	Иначе
		Адрес			= СтрокаТЗ.Значение;
	КонецЕсли;
	
	СтрокаТЗ			= ТЗРезультат.Найти("Логин");
	Если СтрокаТЗ = Неопределено Тогда  
		Отказ			= Истина;
		Сообщение		= Сообщение + "
		|Не указан параметр Логин подключения";
	Иначе
		ПользовательSQL	= СтрокаТЗ.Значение;
	КонецЕсли;
	СтрокаТЗ			= ТЗРезультат.Найти("Пароль");
	ПарольSQL			= СтрокаТЗ.Значение;
	Если СтрокаТЗ = Неопределено Тогда  
		Отказ			= Истина;
		Сообщение		= Сообщение + "
		|Не указан параметр Пароль подключения";
	Иначе	
		СтрокаТЗ		= ТЗРезультат.Найти("База");
	КонецЕсли;
	
	Если СтрокаТЗ = Неопределено Тогда  
		Отказ			= Истина;
		Сообщение		= Сообщение + "
		|Не указан параметр База подключения";
	Иначе
		БазаДанных		= СтрокаТЗ.Значение;	
	КонецЕсли;
	
	Если Отказ Тогда 
		ВыводСтатусаСообщения(,Сообщение);
	КонецЕсли;	
	
	Возврат Отказ;
КонецФункции

Процедура ЗагрузитьИзБОСС(Проверять=Истина) Экспорт 
	
	Если Не ПодключениеКБазе() Тогда
		Возврат;
	КонецЕсли;
	
	мEmailПоиска = EmailПоиска;
	Если Лев(EmailПоиска,5) = "OKEY\" Тогда
		мEmailПоиска = СтрЗаменить(EmailПоиска, "OKEY\", ""); 
	КонецЕсли;
	
	ОчиститьПередЗагрузкой();
	
	ЗапросАДО.CommandText = " SELECT 
	|BOSS_1C_Users.SNM,
	|BOSS_1C_Users.PID,	
	|BOSS_1C_Users.DIRECTMANAGERSNM,	
	// ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2019-11-06 (#3513)
	|BOSS_1C_Users.MANAGERSNM,
	// ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2019-11-06 (#3513)
	|BOSS_1C_Structure.DEPNAME, 		
	|BOSS_1C_Users.SEMAIL,
	|BOSS_1C_Users.SNM1,
	|BOSS_1C_Users.SLOGIN
	|FROM dbo.BOSS_1C_Users
	|LEFT Join dbo.BOSS_1C_Structure
	|on BOSS_1C_Users.IDDIRECTMANAGER = BOSS_1C_Structure.IDDIRECTMANAGER
	|	where BOSS_1C_Users.SLOGIN = '" + мEmailПоиска + "'";
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-06-09 (#4195)
	ЗапросАДО.CommandText = ЗапросАДО.CommandText + "
		|	AND BOSS_1C_Users.LDISMISSED <> 1";
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-06-09 (#4195)
	
	//Выполнение запроса
	Выборка = ЗапросАДО.Execute(); 
	
	Если Не Выборка.EOF() Тогда

		Наименование		= Выборка.Fields("SNM").Value;
		Идентификатор		= Выборка.Fields("PID").Value;
		Руководитель		= Выборка.Fields("DIRECTMANAGERSNM").Value;
		// ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2019-11-06 (#3513)
		Если НЕ ЗначениеЗаполнено(Руководитель) Тогда
			Руководитель		= Выборка.Fields("MANAGERSNM").Value;
		КонецЕсли;	
		// ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2019-11-06 (#3513)
		Отдел				= Выборка.Fields("DEPNAME").Value;
		Email				= Выборка.Fields("SEMAIL").Value;
		Должность			= Выборка.Fields("SNM1").Value;
		DomainName			= Выборка.Fields("SLOGIN").Value;
		Если Лев(DomainName,5) <> "OKEY\" Тогда
			DomainName = "OKEY\" + DomainName; 
		КонецЕсли;
	    		
	Иначе 
		ВыводСтатусаСообщения(,"Доменное имя не найдено");
	КонецЕсли;	
	
	Если Проверять Тогда 
		//Проверим Есть ли уже инициатор с таким Email
		НайтиПоEmail();
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьЭлементСправочника() Экспорт

	Если не ЗначениеЗаполнено(Email) Тогда 
		ВыводСтатусаСообщения(,"Поля не заполнены");
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Элемент) Тогда 
		СохраняемыйЭлемент = Элемент.ПолучитьОбъект();
	Иначе 
		СохраняемыйЭлемент = Справочники.бит_БК_Инициаторы.СоздатьЭлемент();
	КонецЕсли;
	
	СохраняемыйЭлемент.Наименование			= Наименование;
	СохраняемыйЭлемент.Идентификатор		= Идентификатор;
	СохраняемыйЭлемент.Руководитель			= Руководитель;
	СохраняемыйЭлемент.Отдел				= Отдел;
	СохраняемыйЭлемент.Email				= Email;
	СохраняемыйЭлемент.Должность			= Должность;
	СохраняемыйЭлемент.Телефон				= Телефон;
	Если Лев(DomainName,5) <> "OKEY\" Тогда
		DomainName = "OKEY\" + DomainName; 
	КонецЕсли;
	
	СохраняемыйЭлемент.DomainName			= DomainName;
	СохраняемыйЭлемент.Статус				= Статус;
	СохраняемыйЭлемент.Пользователь			= Пользователь;
	СохраняемыйЭлемент.МожетСоздаватьЗаявки	= МожетСоздаватьЗаявки; 
	
	СохраняемыйЭлемент.Записать();
	Элемент									= СохраняемыйЭлемент.Ссылка;
КонецПроцедуры

Процедура НайтиПоEmail() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_БК_Инициаторы.Ссылка
	|ИЗ
	|	Справочник.бит_БК_Инициаторы КАК бит_БК_Инициаторы
	|ГДЕ
	|	бит_БК_Инициаторы.DomainName В(&Email)";
	
	МассивDomainName = Новый Массив;
	МассивDomainName.Добавить(EmailПоиска);
	Если Лев(EmailПоиска,5) <> "OKEY\" Тогда
		МассивDomainName.Добавить("OKEY\" + EmailПоиска); 
	КонецЕсли;	
	Запрос.УстановитьПараметр("Email", МассивDomainName);
	
	ТЗРезультат = Запрос.Выполнить().Выгрузить();
	
	Если ТЗРезультат.Количество() > 1 Тогда 
		Элемент = ТЗРезультат[0].Ссылка;
	ИначеЕсли ТЗРезультат.Количество() = 1 Тогда 
		Элемент = ТЗРезультат[0].Ссылка;
		ВыводСтатусаСообщения(,"Найден инициатор с заданным доменным именем и помещен в реквизит ""Элемент справочника""");
	Иначе 
		Элемент = Справочники.бит_БК_Инициаторы.ПустаяСсылка();
	КонецЕсли;  	

КонецПроцедуры

// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-28 (#4391)
Процедура ЗагрузитьИзБОССУволенныхИнициаторов() Экспорт
	
	ТаблицаИнициаторов = Новый ТаблицаЗначений;
	ТаблицаИнициаторов.Колонки.Добавить("SLOGIN", 		Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(150)));
	ТаблицаИнициаторов.Колонки.Добавить("LDISMISSED", 	Новый ОписаниеТипов("Булево"));
	ТаблицаИнициаторов.Колонки.Добавить("DDISMISSED", 	Новый ОписаниеТипов("Дата"));
	
	ЗапросАДО.CommandText = 
		"SELECT
		|	BOSS_1C_Users.SLOGIN,
		|	BOSS_1C_Users.LDISMISSED,
		|	BOSS_1C_Users.DDISMISSED
		|FROM dbo.BOSS_1C_Users";
		
	//Выполнение запроса
	Выборка = ЗапросАДО.Execute(); 
	
	Пока Не Выборка.EOF() Цикл
		СтрокаИнициатора = ТаблицаИнициаторов.Добавить();
		СтрокаИнициатора.SLOGIN		= Выборка.Fields("SLOGIN").Value;
		СтрокаИнициатора.LDISMISSED	= Выборка.Fields("LDISMISSED").Value;
		СтрокаИнициатора.DDISMISSED	= Выборка.Fields("DDISMISSED").Value;
		Если Лев(СтрокаИнициатора.SLOGIN,5) <> "OKEY\" Тогда
			СтрокаИнициатора.SLOGIN = "OKEY\" + СтрокаИнициатора.SLOGIN; 
		КонецЕсли;
		
		Выборка.MoveNext(); 
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	табИнициаторов.SLOGIN КАК SLOGIN,
		|	табИнициаторов.LDISMISSED КАК LDISMISSED,
		|	табИнициаторов.DDISMISSED КАК DDISMISSED
		|ПОМЕСТИТЬ табИнициаторов
		|ИЗ
		|	&табИнициаторов КАК табИнициаторов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	табИнициаторов.SLOGIN КАК SLOGIN,
		|	МИНИМУМ(табИнициаторов.LDISMISSED) КАК LDISMISSED,
		|	МАКСИМУМ(табИнициаторов.DDISMISSED) КАК DDISMISSED
		|ПОМЕСТИТЬ ИнициаторыБОСС
		|ИЗ
		|	табИнициаторов КАК табИнициаторов
		|
		|СГРУППИРОВАТЬ ПО
		|	табИнициаторов.SLOGIN
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	бит_БК_Инициаторы.Ссылка КАК Инициатор,
		|	ИнициаторыБОСС.LDISMISSED КАК LDISMISSED,
		|	ИнициаторыБОСС.DDISMISSED КАК DDISMISSED
		|ИЗ
		|	ИнициаторыБОСС КАК ИнициаторыБОСС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.бит_БК_Инициаторы КАК бит_БК_Инициаторы
		|		ПО ИнициаторыБОСС.SLOGIN = бит_БК_Инициаторы.DomainName
		|ГДЕ
		|	бит_БК_Инициаторы.ок_Уволен <> ИнициаторыБОСС.LDISMISSED";
	
	Запрос.УстановитьПараметр("табИнициаторов", ТаблицаИнициаторов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ИнициаторОбъект = ВыборкаДетальныеЗаписи.Инициатор.ПолучитьОбъект();
		
		ИнициаторОбъект.ок_Уволен = ВыборкаДетальныеЗаписи.LDISMISSED;
		Если Не ИнициаторОбъект.ок_Уволен Тогда
			ИнициаторОбъект.ок_ДатаУвольнения = Неопределено;
		Иначе
			ИнициаторОбъект.ок_ДатаУвольнения = ВыборкаДетальныеЗаписи.DDISMISSED;
		КонецЕсли;
		
		ИнициаторОбъект.ОбменДанными.Загрузка = Истина;
		ИнициаторОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры
// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-28 (#4391)


/////////////////////////////////////
// Процедуры для соединения с SQL
/////////////////////////////////////

Функция ПодключениеКБазе() Экспорт
	
	Если ПодключеноКБазе Тогда
		Возврат Истина;
	КонецЕсли;
	// соединение с базой
	СоединениеАДО = СоздатьСоединениеАДО(); 
	Если СоединениеАДО = Неопределено Тогда 
		ВыводСтатусаСообщения(,"Не удалось СоздатьСоединениеАДО"); 
		Возврат Ложь; 
	КонецЕсли; 
	ЗапросАДО = СоздатьЗапросАДО(); 
	Если ЗапросАДО = Неопределено Тогда 
		ВыводСтатусаСообщения(,"Не удалось СоздатьЗапросАДО"); 
		Возврат Ложь; 
	КонецЕсли; 
	Если Не ПодключитьсяАДОкБД() Тогда 
		ВыводСтатусаСообщения(,"Не удалось ПодключитьсяАДОкБД"); 
		Возврат Ложь; 
	КонецЕсли; 
	
	ПодключеноКБазе = Истина;
	Возврат Истина;
	
КонецФункции

//Создать объект ADODB.Connection 
//Возврат: 
//   OLE - объект соединение или Неопределено 
Функция СоздатьСоединениеАДО() Экспорт 
	Попытка 
		СоединениеАДО = Новый COMОбъект("ADODB.Connection"); 
	Исключение 
		ВыводСтатусаСообщения(,"Не удалось создать объект ""ADODB.Connection"""); 
		Возврат Неопределено; 
	КонецПопытки; 
	Возврат СоединениеАДО; 
КонецФункции //СоздатьСоединениеАДО() 

//Создать объект ADODB.Command 
//Возврат: 
//   OLE - объект запрос или Неопределено 
Функция СоздатьЗапросАДО() Экспорт 
	Попытка 
		ЗапросАДО = Новый COMОбъект("ADODB.Command");
		ЗапросАДО.CommandTimeout = ?( (НЕ ЗначениеЗаполнено(мТаймаут)) ИЛИ мТаймаут=0, 600, мТаймаут);
	Исключение 
		ВыводСтатусаСообщения(,"Не удалось создать объект ""ADODB.Command"""); 
		Возврат Неопределено; 
	КонецПопытки; 
	Возврат ЗапросАДО; 
КонецФункции //СоздатьЗапросАДО() 

//СоединениеАДО (OLE) - соединение 
//ЗапросАДО (OLE)      - запрос 
//Возврат: 
//   Булево - удачно, нет 
Функция ПодключитьсяАДОкБД() Экспорт
	
	Если ОбновитьНастройкиИмпорта() Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	СтрокаСоединения = "driver={SQL Server};server=" + Адрес + ";uid=" + ПользовательSQL + ";pwd=" + ПарольSQL + ";Database=" + БазаДанных;    
	
	Попытка
		СоединениеАДО.ConnectionTimeOut = ?( (НЕ ЗначениеЗаполнено(мТаймаут)) ИЛИ мТаймаут=0, 600, мТаймаут);
		СоединениеАДО.Open(СтрокаСоединения); 
	Исключение 
		ВыводСтатусаСообщения(,"Не удалось установить соединение с базой данных"); 
		Возврат Ложь; 
	КонецПопытки; 
	
	ЗапросАДО.ActiveConnection = СоединениеАДО; 
	
	Возврат Истина; 
	
КонецФункции // ПодключитьсяАДОкБД()

/////////////////////////////////////
// Служебные
/////////////////////////////////////

Процедура ВыводСтатусаСообщения(Статус = Неопределено, Сообщение = Неопределено, ПроверятьПрерывение = Ложь) Экспорт 
	
	Если Не ВыводитьСообщения Тогда 
		Возврат;
	КонецЕсли;
	
	Если Сообщение <> Неопределено Тогда 
		Сообщить(Сообщение);
	КонецЕсли;
		
КонецПроцедуры

Процедура НайтиИзмененныеЗаписи() Экспорт
	
	Если Не ПодключениеКБазе() Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДляОбновления.Очистить();
	ДанныеБОСС=ДанныеДляОбновления.ВыгрузитьКолонки();

	ЗапросАДО.CommandText =
	 "SELECT 
	|BOSS_1C_Users.SNM,
	|BOSS_1C_Users.PID,	
	|BOSS_1C_Users.DIRECTMANAGERSNM,
	// ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2019-11-06 (#3513)
	|BOSS_1C_Users.MANAGERSNM,
	// ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2019-11-06 (#3513)
	//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2019-05-07 (#3344)
	//|BOSS_1C_Structure.DEPNAME,
	|BOSS_1C_Users.StructureName DEPNAME,
	//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2019-05-07 (#3344)
	|BOSS_1C_Users.SEMAIL,
	|BOSS_1C_Users.SNM1,
	|BOSS_1C_Users.SLOGIN
	|FROM dbo.BOSS_1C_Users";
	//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2019-05-07 (#3344)
	//|LEFT Join dbo.BOSS_1C_Structure
	//|on BOSS_1C_Users.IDDIRECTMANAGER = BOSS_1C_Structure.IDDIRECTMANAGER";
	//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2019-05-07 (#3344)
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-06-09 (#4195)
	ЗапросАДО.CommandText = ЗапросАДО.CommandText + "
		|WHERE 
		|	BOSS_1C_Users.LDISMISSED <> 1";
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-06-09 (#4195)
	//Выполнение запроса
	Выборка = ЗапросАДО.Execute();		
	Пока Не Выборка.EOF() Цикл 
		ДанныеБОССНовСтрока=ДанныеБОСС.Добавить();  				
		ДанныеБОССНовСтрока.Email=СокрлП(Выборка.Fields("SEMAIL").Value);
		ДанныеБОССНовСтрока.FullName=СокрлП(Выборка.Fields("SNM").Value);
		//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2019-04-04 (#3312)
		//ДанныеБОССНовСтрока.UserLogin=СокрлП(Выборка.Fields("SLOGIN").Value);
		ДанныеБОССНовСтрока.UserLogin=СокрлП("OKEY\" + Выборка.Fields("SLOGIN").Value);
		//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2019-04-04 (#3312)
		ДанныеБОССНовСтрока.FunctionName=СокрлП(Выборка.Fields("DEPNAME").Value);
		ДанныеБОССНовСтрока.Title=СокрлП(Выборка.Fields("SNM1").Value);
		ДанныеБОССНовСтрока.ManFullName=СокрлП(Выборка.Fields("DIRECTMANAGERSNM").Value);	
		// ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2019-11-06 (#3513)
		Если НЕ ЗначениеЗаполнено(ДанныеБОССНовСтрока.ManFullName) Тогда
			ДанныеБОССНовСтрока.ManFullName=СокрлП(Выборка.Fields("MANAGERSNM").Value);	
		КонецЕсли;	
		// ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2019-11-06 (#3513)
		Выборка.MoveNext(); 
	КонецЦикла;
	
	Запрос=новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ	               
	               |	ТЗ_ДанныеБОСС.Email,
	               |	ТЗ_ДанныеБОСС.FullName,
	               |	ТЗ_ДанныеБОСС.UserLogin,
	               |	ТЗ_ДанныеБОСС.FunctionName,
	               |	ТЗ_ДанныеБОСС.Title,
	               |	ТЗ_ДанныеБОСС.ManFullName
	               |ПОМЕСТИТЬ ВТ_ДанныеБОСС
	               |ИЗ
	               |	&ДанныеБОСС КАК ТЗ_ДанныеБОСС";
	Запрос.УстановитьПараметр("ДанныеБОСС", ДанныеБОСС);
	Запрос.Выполнить();
	Запрос.Текст="ВЫБРАТЬ
	             |	СУММА(1) КАК Количество,
	             |	ВТ_ДанныеБОСС.FullName КАК FullName
	             |ПОМЕСТИТЬ Имена
	             |ИЗ
	             |	ВТ_ДанныеБОСС КАК ВТ_ДанныеБОСС
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ВТ_ДанныеБОСС.FullName
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	Имена.Количество КАК Количество,
	             |	Имена.FullName КАК FullName
	             |ПОМЕСТИТЬ Однофамильцы
	             |ИЗ
	             |	Имена КАК Имена
	             |ГДЕ
	             |	Имена.Количество > 1
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВТ_ДанныеБОСС.FullName КАК FullName,
	             |	ВТ_ДанныеБОСС.Email КАК БОСС_Email,
	             |	ВТ_ДанныеБОСС.FunctionName КАК БОСС_FunctionName,
	             |	ВТ_ДанныеБОСС.Title КАК БОСС_Title,
	             |	ВТ_ДанныеБОСС.ManFullName КАК БОСС_ManFullName,
	             |	ВТ_ДанныеБОСС.UserLogin КАК БОСС_UserLogin,
	             |	ВЫБОР
	             |		КОГДА бит_БК_Инициаторы.Email <> ВТ_ДанныеБОСС.Email
	             |			ТОГДА бит_БК_Инициаторы.Email + "" -> "" + ВТ_ДанныеБОСС.Email
	             |		ИНАЧЕ """"
	             |	КОНЕЦ КАК Email,
	             //ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2019-04-04 (#3312)
				 //|	ВЫБОР
				 //|		КОГДА ""OKEY\"" + ВТ_ДанныеБОСС.UserLogin <> бит_БК_Инициаторы.DomainName
				 //|		КОГДА ВТ_ДанныеБОСС.UserLogin <> бит_БК_Инициаторы.DomainName
				 //|				ИЛИ ВТ_ДанныеБОСС.UserLogin <> бит_БК_Инициаторы.DomainName
				 //|			ТОГДА бит_БК_Инициаторы.DomainName + "" -> "" + ВТ_ДанныеБОСС.UserLogin
				 //|		ИНАЧЕ """"
				 //|	КОНЕЦ КАК UserLogin,
				 |	бит_БК_Инициаторы.DomainName КАК UserLogin,
	             //ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2019-04-04 (#3312)
				 |	ВЫБОР
	             |		КОГДА бит_БК_Инициаторы.Отдел <> ВТ_ДанныеБОСС.FunctionName
	             |			ТОГДА бит_БК_Инициаторы.Отдел + "" -> "" + ВТ_ДанныеБОСС.FunctionName
	             |		ИНАЧЕ """"
	             |	КОНЕЦ КАК FunctionName,
	             |	ВЫБОР
	             |		КОГДА бит_БК_Инициаторы.Должность <> ВТ_ДанныеБОСС.Title
	             |			ТОГДА бит_БК_Инициаторы.Должность + "" -> "" + ВТ_ДанныеБОСС.Title
	             |		ИНАЧЕ """"
	             |	КОНЕЦ КАК Title,
	             |	ВЫБОР
	             |		КОГДА бит_БК_Инициаторы.Руководитель <> ВТ_ДанныеБОСС.ManFullName
	             |			ТОГДА бит_БК_Инициаторы.Руководитель + "" -> "" + ВТ_ДанныеБОСС.ManFullName
	             |		ИНАЧЕ """"
	             |	КОНЕЦ КАК ManFullName,
	             |	бит_БК_Инициаторы.Ссылка КАК Элемент,
	             |	ВЫБОР
	             |		КОГДА ВТ_ДанныеБОСС.FullName В
	             |				(ВЫБРАТЬ
	             |					Однофамильцы.FullName
	             |				ИЗ
	             |					Однофамильцы)
	             |			ТОГДА ИСТИНА
	             |		ИНАЧЕ ЛОЖЬ
	             |	КОНЕЦ КАК ЕстьОднофамилец
	             |ИЗ
	             |	Справочник.бит_БК_Инициаторы КАК бит_БК_Инициаторы
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеБОСС КАК ВТ_ДанныеБОСС
	             |		ПО (ВТ_ДанныеБОСС.Email <> бит_БК_Инициаторы.Email
	             |				ИЛИ ВТ_ДанныеБОСС.FullName <> бит_БК_Инициаторы.Наименование
	             |				ИЛИ ВТ_ДанныеБОСС.FunctionName <> бит_БК_Инициаторы.Отдел
	             |				ИЛИ ВТ_ДанныеБОСС.Title <> бит_БК_Инициаторы.Должность
	             |				ИЛИ ВТ_ДанныеБОСС.ManFullName <> бит_БК_Инициаторы.Руководитель)
				 //ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2019-04-04 (#3312)
				 //|			И (""OKEY\"" + ВТ_ДанныеБОСС.UserLogin = бит_БК_Инициаторы.DomainName
				 //|				ИЛИ ВТ_ДанныеБОСС.UserLogin = бит_БК_Инициаторы.DomainName)
				 |			И (ВТ_ДанныеБОСС.UserLogin = бит_БК_Инициаторы.DomainName)
					//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2019-04-04 (#3312)
				 |			И (НЕ ВТ_ДанныеБОСС.UserLogin = """")
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	FullName";
				 
	
	ДанныеДляОбновления.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	

Процедура ОчиститьПередЗагрузкой()

	Наименование		= Неопределено;
	Идентификатор		= Неопределено;
	Руководитель		= Неопределено;
	Отдел				= Неопределено;
	Email				= Неопределено;
	Должность			= Неопределено;
	DomainName			= Неопределено;	 

КонецПроцедуры


ПодключеноКБазе		= Ложь;
ВыводитьСообщения	= Истина;
НастройкиИмпортаПоУмолчанию();

