#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтруктураНастроек 	= бит_PowerBIСлужебный.ПолучитьНастройикPowerBI();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураНастроек);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СерверИКаталогПриИзменении(Элемент)
	
	Если ПустаяСтрока(FTPАдрес) Тогда
		FTPСервер	= "";
		FTPКаталог	= "";
	Иначе
		Попытка
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПолучитьFTPСерверИКаталог(FTPАдрес), "FTPСервер, FTPКаталог");
		Исключение
			FTPАдрес	= "";
			FTPСервер	= "";
			FTPКаталог	= "";
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КнопкаОК(Команда)
	
	НастройкиТранспорта = бит_PowerBIКлиент.ПолучитьFTPНастройкиСоединения();
	ЗаполнитьЗначенияСвойств(НастройкиТранспорта, ЭтотОбъект);
	СохранитьНастройкиFTP(НастройкиТранспорта);
	Модифицированность = Ложь;
	Закрыть(FTPАдрес);
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаОтмена(Команда)
		
	Модифицированность = Ложь;
	Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	
	НастройкиТранспорта = бит_PowerBIКлиент.ПолучитьFTPНастройкиСоединения();
	ЗаполнитьЗначенияСвойств(НастройкиТранспорта, ЭтотОбъект);
	РезультатПроверки = ПроверитьПодключениеНаСервере(НастройкиТранспорта);
	Если РезультатПроверки.Результат = Ложь Тогда
		ПоказатьПредупреждение( ,СтрШаблон(НСтр("ru = '%1'"), РезультатПроверки.Причина));
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Проверка пройдена успешно.'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПолучитьFTPСерверИКаталог(Знач СтрокаПодключения)
	
	Результат = Новый Структура("FTPСервер, FTPКаталог");
	СтрокаПодключения = СокрЛП(СтрокаПодключения);
	
	Если (ВРег(Лев(СтрокаПодключения, 6)) <> "FTP://"
		И ВРег(Лев(СтрокаПодключения, 7)) <> "FTPS://")
		ИЛИ СтрНайти(СтрокаПодключения, "@") <> 0 Тогда
		ПоказатьПредупреждение(, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Строка подключения к FTP-ресурсу не соответствует формату: ""%1""'"), СтрокаПодключения));
	КонецЕсли;
	
	ПараметрыПодключения = СтрРазделить(СтрокаПодключения, "/");
	
	Если ПараметрыПодключения.Количество() < 3 Тогда
		ПоказатьПредупреждение(, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В строке подключения к FTP-ресурсу не указано имя сервера: ""%1""'"), СтрокаПодключения));
	КонецЕсли;
	
	Результат.FTPСервер = ПараметрыПодключения[2];
	
	ПараметрыПодключения.Удалить(0);
	ПараметрыПодключения.Удалить(0);
	ПараметрыПодключения.Удалить(0);
	
	ПараметрыПодключения.Вставить(0, "@");
	
	Если Не ПустаяСтрока(ПараметрыПодключения.Получить(ПараметрыПодключения.ВГраница())) Тогда
		
		ПараметрыПодключения.Добавить("@");
		
	КонецЕсли;
	
	Результат.FTPКаталог = СтрСоединить(ПараметрыПодключения, "/");
	Результат.FTPКаталог = СтрЗаменить(Результат.FTPКаталог, "@", "");
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста 
Процедура СохранитьНастройкиFTP(НастройкиТранспорта)
	
	СтруктураНастроек = бит_PowerBIСлужебный.ПолучитьНастройикPowerBI();
	ЗаполнитьЗначенияСвойств(СтруктураНастроек, НастройкиТранспорта);
	Константы.бит_НастройкиPowerBI.Установить(Новый ХранилищеЗначения(СтруктураНастроек));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьПодключениеНаСервере(НастройкиТранспорта)
	
	РезультатПроверки = Новый Структура("Результат, Причина", Истина, "");
	
	НастройкиFTP = ОбменДаннымиСервер.FTPНастройкиСоединения(10);
	НастройкиFTP.Сервер               = НастройкиТранспорта.FTPСервер;
	НастройкиFTP.Порт                 = НастройкиТранспорта.FTPСоединениеПорт;
	НастройкиFTP.ИмяПользователя      = НастройкиТранспорта.FTPСоединениеПользователь;
	НастройкиFTP.ПарольПользователя   = НастройкиТранспорта.FTPСоединениеПароль;
	НастройкиFTP.ПассивноеСоединение  = НастройкиТранспорта.FTPСоединениеПассивноеСоединение;
	НастройкиFTP.ЗащищенноеСоединение = ОбменДаннымиСервер.ЗащищенноеСоединение(НастройкиТранспорта.FTPАдрес);
	
	Попытка
		
		FTPСоединение = ОбменДаннымиСервер.FTPСоединение(НастройкиFTP);
		
		Если СтрДлина(НастройкиТранспорта.FTPКаталог) > 1 Тогда
			ИмяКаталога = ПолучитьИмяКаталога(НастройкиТранспорта.FTPКаталог);
			Если НЕ ОбменДаннымиСервер.FTPКаталогСуществует(НастройкиТранспорта.FTPКаталог, ИмяКаталога, FTPСоединение) Тогда
				РезультатПроверки.Результат = Ложь;
				РезультатПроверки.Причина	= НСтр("ru = 'Соединение с свервером установлено, но каталог не найден!'");
			КонецЕсли;
		КонецЕсли;
		
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		РезультатПроверки.Результат = Ложь;
		РезультатПроверки.Причина	= КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
	КонецПопытки;
	
	Возврат РезультатПроверки;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьИмяКаталога(Знач Путь)
	
	МассивИмен = СтрРазделить(Путь, "/", Ложь);
	Возврат МассивИмен[МассивИмен.ВГраница()];
	
КонецФункции

#КонецОбласти 
