
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьКэшЗначений();
	
	// Инициализация схемы компановки данных
	АдресСхемыКомпоновкиДанных = бит_Казначейство.ПолучитьДляПеречняДокументовАдресСКД(Объект.Компоновщик);
	
	Если Параметры.Свойство("СтруктураНастроек") Тогда
		Обработки.бит_ФормированиеПлатежныхДокументов.НастроитьОбработку(Объект, Параметры.СтруктураНастроек);
	КонецЕсли;
	
	ПодготовитьФормуНаСервере();
	УправлениеФормой(ЭтотОбъект);
		
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИсточникДанныхТаблоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	бит_РаботаСДиалогамиКлиент.НачалоВыбораИсточникаДанныхТабло(ДанныеВыбора,
														фКэшЗначений.ЭтоБухгалтерия, 
														фКэшЗначений.Перечисления.бит_РежимПолученияДанныхТаблоСчетов,
														СтандартнаяОбработка);
														
КонецПроцедуры // ИсточникДанныхТаблоНачалоВыбора()

&НаКлиенте
Процедура ИсточникДанныхТаблоПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если СозданиеПлатежныхПоручений = 0 Тогда
		Объект.НеФормироватьПлатежныеПоручения = Истина;
		Объект.ПроводитьПлатежныеПоручения  	= Ложь;
	ИначеЕсли СозданиеПлатежныхПоручений = 1 Тогда
		Объект.НеФормироватьПлатежныеПоручения = Ложь;
		Объект.ПроводитьПлатежныеПоручения  	= Ложь;
	ИначеЕсли СозданиеПлатежныхПоручений = 2 Тогда
		Объект.НеФормироватьПлатежныеПоручения = Ложь;
		Объект.ПроводитьПлатежныеПоручения  	= Истина;
	КонецЕсли; 
	
	Если СозданиеДокументовОплаты = 0 Тогда
		Объект.НеФормироватьДокументыОплаты = Истина;
		Объект.ПроводитьДокументыОплаты     = Ложь;
		Объект.РежимЗаписи = "";
	ИначеЕсли СозданиеДокументовОплаты = 1 Тогда
		Объект.НеФормироватьДокументыОплаты = Ложь;
		Объект.ПроводитьДокументыОплаты     = Ложь;
		Объект.РежимЗаписи = "Запись";
	ИначеЕсли СозданиеДокументовОплаты = 2 Тогда
		Объект.НеФормироватьДокументыОплаты = Ложь;
		Объект.ПроводитьДокументыОплаты     = Истина;
		Объект.РежимЗаписи = "Проведение";
	КонецЕсли; 
	
	Результат = ЗаполнитьНастройки();
	
	Закрыть(Результат);
	
КонецПроцедуры // ОК()

&НаКлиенте
Процедура ДействиеНастройкаПериода(Команда)
	
	ВыборПериода(Объект.ПериодРасхода);
	
КонецПроцедуры // ДействиеНастройкаПериода()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыборПериода(Период)

	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	Диалог.Период = Период;
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьВыборПериода",ЭтаФорма);
	Диалог.Показать(Оповещение);
	 
КонецПроцедуры // ВыборПериода()

&НаКлиенте 
Процедура ПоказатьВыборПериода(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		Объект.ПериодРасхода = РезультатВыбора;
	КонецЕсли; 
	
КонецПроцедуры // ПоказатьВыборПериода

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	Если Объект.ПроводитьДокументыОплаты Тогда
		СозданиеДокументовОплаты = 2;
	ИначеЕсли Объект.НеФормироватьДокументыОплаты = Ложь Тогда
		СозданиеДокументовОплаты = 1;
	КонецЕсли; 
	
	Если Объект.ПроводитьПлатежныеПоручения Тогда
		СозданиеПлатежныхПоручений = 2;
	ИначеЕсли Объект.НеФормироватьПлатежныеПоручения = Ложь Тогда
		СозданиеПлатежныхПоручений = 1;
	КонецЕсли; 
	
	ЗаполнятьТаблоПоДаннымБУ = Перечисления.бит_РежимПолученияДанныхТаблоСчетов.ДанныеБухгалтерскогоУчета;
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьКэшЗначений()

	фКэшЗначений 	= Новый Структура;
	КэшПеречисления = Новый Структура;
	
	фКэшЗначений.Вставить("ЭтоБухгалтерия", бит_ОбщегоНазначения.ЭтоБухгалтерияПредприятия());
	
	КэшПеречисления.Вставить("бит_РежимПолученияДанныхТаблоСчетов", 
							бит_ОбщегоНазначения.КэшироватьЗначенияПеречисления(Перечисления.бит_РежимПолученияДанныхТаблоСчетов));
	
    фКэшЗначений.Вставить("Перечисления", КэшПеречисления);
	
КонецПроцедуры // ЗаполнитьКэшЗначений()

&НаКлиентеНаСервереБезКонтекста 
Процедура УправлениеФормой(Форма)

	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.ПоказыватьСуммуПланируемыхПоступлений.Видимость = (Объект.ИсточникДанныхТабло = Форма.ЗаполнятьТаблоПоДаннымБУ);
	
КонецПроцедуры // УстановитьВидимость()

&НаСервере
Функция ЗаполнитьНастройки()
	
	Возврат Обработки.бит_ФормированиеПлатежныхДокументов.ЗаполнитьНастройки(Объект);
	
КонецФункции // СохранитьНастройки()

#КонецОбласти
