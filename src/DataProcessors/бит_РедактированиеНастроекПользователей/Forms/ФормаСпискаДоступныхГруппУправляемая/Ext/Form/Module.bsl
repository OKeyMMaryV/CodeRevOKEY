
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Пользователь) Тогда
		
		Пользователь = Параметры.Пользователь;
		ЗаполнитьСписокДоступныхГрупп(Пользователь);
		ЗаполнитьДеревоГрупп(Пользователь);
		
		ТекущаяГруппа = ?(ЗначениеЗаполнено(Параметры.ТекущаяГруппа), Параметры.ТекущаяГруппа, Справочники.ГруппыПользователей.ВсеПользователи);
		ТекущаяСтрока = СписокГрупп.НайтиПоЗначению(ТекущаяГруппа);
		Если ТекущаяСтрока <> Неопределено Тогда
			ИдСтроки = ТекущаяСтрока.ПолучитьИдентификатор();
			Элементы.СписокГрупп.ТекущаяСтрока = ИдСтроки;
		КонецЕсли;		
		
		УстановитьВидимость(Параметры.ИзменитьСоставГрупп);
		
		ЭтаФорма.Заголовок = "Группы пользователя (" + Пользователь + ")";
		
	Иначе
		
		Отказ = Истина;
	
	КонецЕсли;	
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РазвернутьДерево();
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события "Выбор" поля ввода "СписокГрупп".
// 
&НаКлиенте
Процедура СписокГруппВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Закрыть(СписокГрупп[ВыбраннаяСтрока].Значение);	
		
КонецПроцедуры // СписокГруппВыбор()

#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура - обработчик кнопки "ИзменитьСоставГрупп".
// 
&НаКлиенте
Процедура ИзменитьСоставГрупп(Команда)
	
	УстановитьВидимость(Истина);
	РазвернутьДерево();
	
КонецПроцедуры // ИзменитьСоставГрупп()

// Процедура - обработчик кнопки "СохранитьСостав".
// 
&НаКлиенте
Процедура СохранитьСостав(Команда)
	
	СохранитьПринадлежностьГрппам();
	
КонецПроцедуры // СохранитьСостав()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура раскрывает все уровни дерева.
// 
// Параметры:
//  ИмяДерева - Строка
// 
&НаКлиенте
Процедура РазвернутьДерево()

	бит_РаботаСДиалогамиКлиент.РазвернутьДеревоПолностью(Элементы.ДеревоГрупп, ДеревоГрупп.ПолучитьЭлементы());
	
КонецПроцедуры // РазвернутьДерево()

// Процедура устанавливает видимость элементов форм.
// 
// Параметры:
// 	Нет
// 
&НаСервере
Процедура УстановитьВидимость(ИзменитьСоставГрупп)

	Элементы.ИзменитьСоставГрупп.Видимость 	= Не ИзменитьСоставГрупп;
	Элементы.СохранитьСостав.Видимость 		= ИзменитьСоставГрупп;
	
	Элементы.ГруппаГруппыПользователей.Видимость = ИзменитьСоставГрупп;

КонецПроцедуры // УстановитьВидимость()

// Процедура заполняет список доступных пользователю групп.
// 
// Параметры:
//  Пользователь  - СправочникСсылка.Пользователи.
// 
&НаСервере
Процедура ЗаполнитьСписокДоступныхГрупп(Пользователь)

	СписокГрупп = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ГруппыПользователей.ВсеПользователи) КАК Группа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ГруппыПользователей.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ГруппыПользователей.%ИмяТабЧасти% КАК ГруппыПользователей
	|ГДЕ
	|	ГруппыПользователей.Пользователь = &Пользователь
	|
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	
	ИмяТабЧасти = бит_ОбщегоНазначения.ИмяТабЧастиГруппыПользователей();
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ИмяТабЧасти%", ИмяТабЧасти);	
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокГрупп.Добавить(Выборка.Группа);
	КонецЦикла;	
		
КонецПроцедуры // ЗаполнитьСписокДоступныхГрупп()

// Процедура добавляет строку в дерево.
// 
// Параметры:
//  Ветка  	 - ДанныеФормыКоллекцияЭлементовДерева.
//  Выборка  - Выборка из результата запроса.
// 
&НаСервере
Процедура ДобавитьСтрокуДерева(Ветка, Выборка)

	СтрокаДерева = Ветка.Добавить();

	ЗаполнитьЗначенияСвойств(СтрокаДерева, Выборка);
	Если СтрокаДерева.Группа = Справочники.ГруппыПользователей.ВсеПользователи Тогда
		СтрокаДерева.Выбрана = Истина;	
	КонецЕсли;
	     	
	ВыборкаНиз = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ВеткаНиз = СтрокаДерева.ПолучитьЭлементы();
	Пока ВыборкаНиз.Следующий() Цикл		
		ДобавитьСтрокуДерева(ВеткаНиз, ВыборкаНиз);								
	КонецЦикла;
			
КонецПроцедуры // ДобавитьСтрокуДерева()

// Процедура заполняет список доступных пользователю групп.
// 
// Параметры:
//  Пользователь  - СправочникСсылка.Пользователи.
// 
&НаСервере
Процедура ЗаполнитьДеревоГрупп(Пользователь)

	КореньДерева = ДеревоГрупп.ПолучитьЭлементы();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВсеГруппы.Ссылка КАК Группа,
	|	ВЫБОР
	|		КОГДА ГруппыПользователя.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Выбрана
	|ИЗ
	|	Справочник.ГруппыПользователей КАК ВсеГруппы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыПользователей.%ИмяТабЧасти% КАК ГруппыПользователя
	|		ПО ВсеГруппы.Ссылка = ГруппыПользователя.Ссылка
	|			И (ГруппыПользователя.Пользователь = &Пользователь)
    |
	|УПОРЯДОЧИТЬ ПО
	|	ВсеГруппы.Ссылка ИЕРАРХИЯ
	|";
	
	ИмяТабЧасти = бит_ОбщегоНазначения.ИмяТабЧастиГруппыПользователей();
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ИмяТабЧасти%", ИмяТабЧасти);		
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Пока Выборка.Следующий() Цикл
		ДобавитьСтрокуДерева(КореньДерева, Выборка);
	КонецЦикла;
		
КонецПроцедуры // ЗаполнитьДеревоГрупп()

// Процедура сохраняет принадлежность группам по строке дерева.
// 
// Параметры:
//  Нет
// 
&НаСервере
Процедура СохранитьЗначенияДляСтрокиДерева(СтрокаДерева)
	
	// Имя табличной части справочника ГруппыПользователей в зависимости от решения.
	ИмяТабЧасти = бит_ОбщегоНазначения.ИмяТабЧастиГруппыПользователей();
	
	ТекущаяГруппа = СтрокаДерева.Группа;
	Если ТекущаяГруппа <> Справочники.ГруппыПользователей.ВсеПользователи Тогда
		
		ГруппаВыбрана = СтрокаДерева.Выбрана;
		ВходитВГруппу = СтрокаДерева.Группа[ИмяТабЧасти].Найти(Пользователь, "Пользователь") <> Неопределено;
		ИзмененияСохранены = Истина;
		
		Если ГруппаВыбрана <> ВходитВГруппу Тогда
			
			ОбъектГруппа = ТекущаяГруппа.ПолучитьОбъект();
			
			Если ГруппаВыбрана Тогда
				НоваяСтрока = ОбъектГруппа[ИмяТабЧасти].Добавить();
				НоваяСтрока.Пользователь = Пользователь;
			Иначе
				ОбъектГруппа[ИмяТабЧасти].Удалить(ОбъектГруппа[ИмяТабЧасти].Найти(Пользователь, "Пользователь"));
			КонецЕсли;
			
			Попытка
				ОбъектГруппа.Записать();
			Исключение
				бит_ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, "Изменения не сохранены!");
				ИзмененияСохранены = Ложь;
			КонецПопытки;
			
			Если ИзмененияСохранены Тогда
				Если ГруппаВыбрана Тогда
					СписокГрупп.Добавить(ТекущаяГруппа);
				Иначе
					УдаляемаяГруппа = СписокГрупп.НайтиПоЗначению(ТекущаяГруппа);
					СписокГрупп.Удалить(УдаляемаяГруппа);
				КонецЕсли;
			КонецЕсли;
		
		КонецЕсли;
	
	КонецЕсли;

	ВеткаНиз = СтрокаДерева.ПолучитьЭлементы();
	Для каждого Стр Из ВеткаНиз Цикл
		СохранитьЗначенияДляСтрокиДерева(Стр);
	КонецЦикла; 
		
КонецПроцедуры // СохранитьПринадлежностьГрппам()

// Процедура сохраняет принадлежность группам.
// 
// Параметры:
//  Нет
// 
&НаСервере
Процедура СохранитьПринадлежностьГрппам()
	
	КореньДерева = ДеревоГрупп.ПолучитьЭлементы();
	Для каждого Стр Из КореньДерева Цикл
		СохранитьЗначенияДляСтрокиДерева(Стр); 	
	КонецЦикла; 		

КонецПроцедуры // СохранитьПринадлежностьГрппам()

#КонецОбласти
