&НаСервере
Функция КнопкаВыполнитьНажатие_Сервер(Отказ)
	Отказ = НЕ ПроверитьЗаполнение();
КонецФункции

&НаСервере
Функция КнопкаВыполнитьНажатие_Сервер_1()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_Дополнительный_2Обороты.Регистратор КАК Документ,
	|	бит_Дополнительный_2Обороты.Субконто2 КАК ОбъектСтроительства,
	|	СУММА(ВЫБОР
	|			КОГДА бит_Дополнительный_2Обороты.СуммаРеглОборот < 0
	|				ТОГДА -бит_Дополнительный_2Обороты.СуммаРеглОборот
	|			ИНАЧЕ бит_Дополнительный_2Обороты.СуммаРеглОборот
	|		КОНЕЦ) КАК СуммаРегл,
	|	СУММА(бит_Дополнительный_2Обороты.СуммаУпрОборот) КАК СуммаУпр,
	|	СУММА(бит_Дополнительный_2Обороты.СуммаМУОборот) КАК СуммаМУ,
	|	бит_СоответствиеОбъектовСтроительстваИНоменклатуры.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрБухгалтерии.бит_Дополнительный_2.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Счет = &Счет123,
	|			,
	|			Организация = &Организация
	|				И Субконто1 = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|			,
	|			) КАК бит_Дополнительный_2Обороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СоответствиеОбъектовСтроительстваИНоменклатурДляУчетаОС КАК бит_СоответствиеОбъектовСтроительстваИНоменклатуры
	|		ПО бит_Дополнительный_2Обороты.Субконто2 = бит_СоответствиеОбъектовСтроительстваИНоменклатуры.ОбъектСтроительства
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_Дополнительный_2Обороты.Регистратор,
	|	бит_Дополнительный_2Обороты.Субконто2,
	|	бит_СоответствиеОбъектовСтроительстваИНоменклатуры.Номенклатура";
	
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Объект.ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(Объект.ДатаКон));
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	Запрос.УстановитьПараметр("Счет123",ПланыСчетов.бит_Дополнительный_2.НайтиПоКоду("123"));
	
	Объект.Таблица.Загрузить(Запрос.Выполнить().Выгрузить());
КонецФункции

&НаКлиенте
Процедура КнопкаВыполнитьНажатие(Команда)
	Перем Отказ;
	
	КнопкаВыполнитьНажатие_Сервер(Отказ);
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	КнопкаВыполнитьНажатие_Сервер_1();
    	
КонецПроцедуры

&НаСервере
Функция ПолучитьРегистрБухгалтерии();
	
	Результат = ПредопределенноеЗначение("Справочник.бит_ОбъектыСистемы.ПустаяСсылка");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	бит_ОбъектыСистемы.Ссылка
	               |ИЗ
	               |	Справочник.бит_ОбъектыСистемы КАК бит_ОбъектыСистемы
	               |ГДЕ
	               |	бит_ОбъектыСистемы.ИмяОбъектаПолное = ""РегистрБухгалтерии.бит_Дополнительный_2""
	               |	И бит_ОбъектыСистемы.Отключено = ЛОЖЬ";
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Результат = РезультатЗапроса.Выгрузить()[0].Ссылка;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура КнопкаНастройкиПериодаНажатие(Элемент)
	
	НП = Новый СтандартныйПериод(ВариантСтандартногоПериода.ПроизвольныйПериод);
	ДиалогРедактирования = НОвый ДиалогРедактированияСтандартногоПериода;
	ДиалогРедактирования.Период = НП;
	
	НП.ДатаНачала = НачалоДня(Объект.ДатаНач);
	НП.ДатаОкончания = ?(Объект.ДатаКон = '00010101', Объект.ДатаКон, КонецДня(Объект.ДатаКон));

	Если ДиалогРедактирования.Редактировать() Тогда

		НП = ДиалогРедактирования.Период;
		Объект.ДатаНач = НП.ДатаНачала;
		Объект.ДатаКон = НП.ДатаОкончания;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОсновныеДействияФормыДействие(Команда)

	ОсновныеДействияФормыДействиеНаСервере();	

КонецПроцедуры

&НаСервере
Процедура ОсновныеДействияФормыДействиеНаСервере()
	
	ТаблицаРезультата = Объект.Таблица.Выгрузить(Новый Структура("Обрабативать",Истина));	
	
	Если ТаблицаРезультата.Количество()<=0 Тогда 
		Возврат
	КонецЕсли;
	
	ФлагДокСуществует = Ложь;
	
	Если ЗначениеЗаполнено(Объект.Документ) и ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Документ, "Организация") = Объект.Организация Тогда
		НовыйДок = Объект.Документ.ПолучитьОбъект();
		НовыйДок.Дата = Объект.Дата;
		ФлагДокСуществует = Истина;
		НовыйДок.Содержание = "Замена пустой аналитики на 123 сч. Создано автоматически обработкой от " + Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	Иначе
		НовыйДок = Документы.бит_ОперацияУправленческий.СоздатьДокумент();
		НовыйДок.Дата = Объект.Дата;
		НовыйДок.Организация = Объект.Организация;
		НовыйДок.Комментарий = "Документ был создан автоматически обработкой по заполнению субконто ""Номенклатура"" на 123 счете";
		НовыйДок.РегистрБухгалтерии = ПолучитьРегистрБухгалтерии();
		НовыйДок.Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
		НовыйДок.Содержание = "Замена пустой аналитики на 123 сч. Создано автоматически обработкой от " + Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	КонецЕсли;
	
	ИмяРегистраБухгалтерии = НовыйДок.РегистрБухгалтерии.ИмяОбъекта;
	
	ВидДвижения = ПредопределенноеЗначение("Перечисление.БИТ_ВидыДвиженияМСФО.КорректировкаМСФО");
	
	СуммаОперацииРегл = 0;
	СуммаОперацииУпр  = 0;
	СуммаОперацииМУ   = 0;
	
	НаборДвижений = НовыйДок.Движения[ИмяРегистраБухгалтерии];
	
	ТаблицаДвижений = ПолуитьДвиженияДокумента(ТаблицаРезультата.ВыгрузитьКолонку("Документ"));
	ИтоговаяТаблица = ОбъединитьДвеТаблицы(ТаблицаДвижений,ТаблицаРезультата);
	
	Для Каждого СтрокаТаблицы Из ИтоговаяТаблица Цикл
		
		// Сформируем проводки МСФО
		
		Запись = НаборДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(Запись,СтрокаТаблицы);
		Запись.Период = Объект.Дата;
		Запись.Организация = Объект.Организация;
		Запись.ВидДвиженияМСФО = ВидДвижения;
		
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетКт, Запись.СубконтоКт, 1	 , СтрокаТаблицы.СубконтоКт1);
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетКт, Запись.СубконтоКт, 2	 , СтрокаТаблицы.СубконтоКт2);
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетКт, Запись.СубконтоКт, 3	 , СтрокаТаблицы.СубконтоКт3);
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетКт, Запись.СубконтоКт, 4	 , СтрокаТаблицы.СубконтоКт4);
		
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, 1	 , СтрокаТаблицы.СубконтоДт1);
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, 2	 , СтрокаТаблицы.СубконтоДт2);
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, 3	 , СтрокаТаблицы.СубконтоДт3);
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, 4	 , СтрокаТаблицы.СубконтоДт4);
		
		Запись.Содержание = СтрокаТаблицы.Комментарий;
		Запись.СуммаРегл       = -СтрокаТаблицы.СуммаРегл;
		Запись.СуммаУпр        = -СтрокаТаблицы.СуммаРегл;
		Запись.СуммаМУ         = -СтрокаТаблицы.СуммаРегл;
		
		СуммаОперацииРегл = СуммаОперацииРегл + Запись.СуммаРегл;
		СуммаОперацииУпр  = СуммаОперацииУпр  + Запись.СуммаУпр;
		СуммаОперацииМУ = СуммаОперацииМУ + Запись.СуммаМУ;
		
		Запись = НаборДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(Запись,СтрокаТаблицы);
		Запись.Период = Объект.Дата;
		Запись.Организация = Объект.Организация;
		Запись.ВидДвиженияМСФО = ВидДвижения;
		
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетКт, Запись.СубконтоКт, 1	 , СтрокаТаблицы.СубконтоКт1);
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетКт, Запись.СубконтоКт, 2	 , СтрокаТаблицы.СубконтоКт2);
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетКт, Запись.СубконтоКт, 3	 , СтрокаТаблицы.СубконтоКт3);
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетКт, Запись.СубконтоКт, 4	 , СтрокаТаблицы.СубконтоКт4);
		
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, 1	 , СтрокаТаблицы.СубконтоДт1);
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, 2	 , СтрокаТаблицы.СубконтоДт2);
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, 3	 , СтрокаТаблицы.СубконтоДт3);
		бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, 4	 , СтрокаТаблицы.СубконтоДт4);
		
		Если ТипЗнч(Запись.СубконтоДт.Номенклатура) = Тип("СправочникСсылка.Номенклатура") и
			Запись.СубконтоДт.Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка") Тогда 
			
			бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, "Номенклатура"		   , СтрокаТаблицы.Номенклатура);
			
		Иначе
			бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетКт, Запись.СубконтоКт, "Номенклатура"		   , СтрокаТаблицы.Номенклатура);
		КонецЕсли;
		
		Запись.СуммаРегл       = СтрокаТаблицы.СуммаРегл;
		Запись.СуммаУпр       = СтрокаТаблицы.СуммаРегл;
		Запись.СуммаМУ       = СтрокаТаблицы.СуммаРегл;
		
		Запись.Содержание = СтрокаТаблицы.Комментарий; 
		
		СуммаОперацииРегл = СуммаОперацииРегл + Запись.СуммаРегл;
		СуммаОперацииУпр  = СуммаОперацииУпр  + Запись.СуммаУпр;
		СуммаОперацииМУ = СуммаОперацииМУ + Запись.СуммаМУ;
		
	КонецЦикла;
	
	НовыйДок.СуммаОперацииРегл = СуммаОперацииРегл;
	НовыйДок.СуммаОперацииУпр = СуммаОперацииУпр;
	НовыйДок.СуммаОперацииМУ = СуммаОперацииМУ;
	
	Попытка 
		НовыйДок.Записать(РежимЗаписиДокумента.Запись);
		Если ФлагДокСуществует Тогда
			Сообщить("Изменен документ " + НовыйДок);
		Иначе
			Сообщить("Создан документ " + НовыйДок);
			Объект.Документ = НовыйДок.Ссылка;
		КонецЕсли;
		
	Исключение
		Сообщить("Ошибка при записи");
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция КоманднаяПанельТаблицаСнятьВсе_Сервер()
	ОбработатьФлагиТабЧасти("Обрабативать",0);
КонецФункции

&НаСервере
Процедура ОбработатьФлагиТабЧасти(ИмяФлага,ТекЗначение) Экспорт
	
	Для каждого ТекущаяСтрока Из Объект.Таблица Цикл
		
		Если ТекЗначение = 0 Тогда
			ТекущаяСтрока[ИмяФлага] = Ложь;
		ИначеЕсли ТекЗначение = 1 Тогда
			ТекущаяСтрока[ИмяФлага] = Истина;	
		ИначеЕсли ТекЗначение = 2 Тогда			
			ТекущаяСтрока[ИмяФлага] = Не ТекущаяСтрока[ИмяФлага];
		КонецЕсли;   
		
	КонецЦикла; 
	
КонецПроцедуры // ОбработатьФлагиТабЧасти()

&НаКлиенте
Процедура КоманднаяПанельТаблицаСнятьВсе(Команда)
	
	КоманднаяПанельТаблицаСнятьВсе_Сервер();
	
КонецПроцедуры

&НаСервере
Функция КоманднаяПанельТаблицаВключитьВсе_Сервер()
	ОбработатьФлагиТабЧасти("Обрабативать",1);
КонецФункции

&НаКлиенте
Процедура КоманднаяПанельТаблицаВключитьВсе(Команда)
	
	КоманднаяПанельТаблицаВключитьВсе_Сервер();
	
КонецПроцедуры

&НаСервере
Функция  ПолуитьДвиженияДокумента(МассивДокументов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_Дополнительный_2ДвиженияССубконто.СчетДт,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоДт1,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоДт2,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоДт3,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоДт4,
	|	бит_Дополнительный_2ДвиженияССубконто.СчетКт,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоКт1,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоКт2,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоКт3,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоКт4,
	|	бит_Дополнительный_2ДвиженияССубконто.СуммаМУ,
	|	бит_Дополнительный_2ДвиженияССубконто.СуммаУпр,
	|	бит_Дополнительный_2ДвиженияССубконто.СуммаРегл,
	|	бит_СоответствиеОбъектовСтроительстваИНоменклатуры.Номенклатура,
	|	ВЫБОР
	|		КОГДА бит_Дополнительный_2ДвиженияССубконто.СуммаМУ < 0
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Дебет,
	|	бит_Дополнительный_2ДвиженияССубконто.Регистратор КАК Документ
	|ИЗ
	|	РегистрБухгалтерии.бит_Дополнительный_2.ДвиженияССубконто(
	|			,
	|			,
	|			Счет В (&Cчет123)
	|				И Регистратор В (&МассивДокументов)
	|				И Субконто1 = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|			,
	|			) КАК бит_Дополнительный_2ДвиженияССубконто
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СоответствиеОбъектовСтроительстваИНоменклатурДляУчетаОС КАК бит_СоответствиеОбъектовСтроительстваИНоменклатуры
	|		ПО (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(бит_Дополнительный_2ДвиженияССубконто.СубконтоКт2) = ТИП(Справочник.Номенклатура)
	|						И бит_Дополнительный_2ДвиженияССубконто.СубконтоКт2 = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					ТОГДА бит_Дополнительный_2ДвиженияССубконто.СубконтоКт2 = бит_СоответствиеОбъектовСтроительстваИНоменклатуры.ОбъектСтроительства
	|				ИНАЧЕ бит_Дополнительный_2ДвиженияССубконто.СубконтоДт2 = бит_СоответствиеОбъектовСтроительстваИНоменклатуры.ОбъектСтроительства
	|			КОНЕЦ)";
	
	
	Запрос.УстановитьПараметр("МассивДокументов",МассивДокументов);
	Запрос.УстановитьПараметр("Cчет123",ПланыСчетов.бит_Дополнительный_2.НайтиПоКоду("123"));
	
	Возврат Запрос.Выполнить().Выгрузить();
	

КонецФункции
 
&НаСервере
Функция ОбъединитьДвеТаблицы(ТаблицаДвижений,ТаблицаРезультат)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	  "ВЫБРАТЬ
	  |	ТаблицаДвижений.СчетДт,
	  |	ТаблицаДвижений.СчетКт,
	  |	ТаблицаДвижений.СубконтоКт1,
	  |	ТаблицаДвижений.СубконтоКт2,
	  |	ТаблицаДвижений.СубконтоКт3,
	  |	ТаблицаДвижений.СубконтоКт4,
	  |	ТаблицаДвижений.СубконтоДт1,
	  |	ТаблицаДвижений.СуммаМУ,
	  |	ТаблицаДвижений.СуммаРегл,
	  |	ТаблицаДвижений.СуммаУпр,
	  |	ТаблицаДвижений.СубконтоДт2,
	  |	ТаблицаДвижений.СубконтоДт3,
	  |	ТаблицаДвижений.СубконтоДт4,
	  |	ТаблицаДвижений.Документ,
	  |	ТаблицаДвижений.Номенклатура
	  |ПОМЕСТИТЬ ВР_ТаблицаДвижений
	  |ИЗ
	  |	&ТаблицаДвижений КАК ТаблицаДвижений
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	ТаблицаРезультат.Документ,
	  |	ТаблицаРезультат.Комментарий
	  |ПОМЕСТИТЬ ВР_ТаблицаРезультат
	  |ИЗ
	  |	&ТаблицаРезультат КАК ТаблицаРезультат
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	ВР_ТаблицаДвижений.СчетДт,
	  |	ВР_ТаблицаДвижений.СчетКт,
	  |	ВР_ТаблицаДвижений.СубконтоКт1,
	  |	ВР_ТаблицаДвижений.СубконтоКт2,
	  |	ВР_ТаблицаДвижений.СубконтоКт3,
	  |	ВР_ТаблицаДвижений.СубконтоКт4,
	  |	ВР_ТаблицаДвижений.СубконтоДт1,
	  |	ВР_ТаблицаДвижений.СуммаМУ,
	  |	ВР_ТаблицаДвижений.СуммаРегл,
	  |	ВР_ТаблицаДвижений.СуммаУпр,
	  |	ВР_ТаблицаДвижений.СубконтоДт2,
	  |	ВР_ТаблицаДвижений.СубконтоДт3,
	  |	ВР_ТаблицаДвижений.СубконтоДт4,
	  |	ВР_ТаблицаДвижений.Документ,
	  |	ВР_ТаблицаДвижений.Номенклатура,
	  |	ВР_ТаблицаРезультат.Комментарий
	  |ИЗ
	  |	ВР_ТаблицаДвижений КАК ВР_ТаблицаДвижений
	  |		ЛЕВОЕ СОЕДИНЕНИЕ ВР_ТаблицаРезультат КАК ВР_ТаблицаРезультат
	  |		ПО ВР_ТаблицаДвижений.Документ = ВР_ТаблицаРезультат.Документ";
	  
	 Запрос.УстановитьПараметр("ТаблицаДвижений",ТаблицаДвижений);
	 Запрос.УстановитьПараметр("ТаблицаРезультат",ТаблицаРезультат);
	 
	 Возврат Запрос.Выполнить().Выгрузить();

 КонецФункции 
