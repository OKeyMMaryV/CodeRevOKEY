Перем Запрос экспорт;
Перем ВыводитьСообщения экспорт;
Перем НомераДокументов;


Функция Пустое(Значение)
	возврат не (ЗначениеЗаполнено(Значение) и Значение<>Неопределено  и Значение<>null);
конецФункции	

Функция ДайПустыеСсылки()
	рез= новый Массив();
	рез.Добавить(Неопределено);
	//рез.Добавить(Null);
	//рез.Добавить(ВидСубконто.ТипЗначения.ПривестиЗначение());
	для каждого стр из Метаданные.Справочники
		цикл	
		рез.Добавить(Справочники[стр.Имя].ПустаяССылка());
	конеццикла;
	возврат рез;
КонецФункции	

Процедура ДобавитьВТаблицуЗначений(Назначение,Источник)
	Если  Назначение=неопределено тогда
		Назначение=Источник.Скопировать();
	иначе
		для каждого стр из источник
			цикл
			нов=Назначение.Добавить();
			ЗаполнитьЗначенияСвойств(нов,стр);
		конеццикла;	
	конецесли;	
КонецПроцедуры	

Процедура ЗаполнитьТаблицыОборотов2(рез)
	СостояниеЕслиНадо("Заполняем таблицу оборотов Хозрасчетный");
	Запрос.Текст="ВЫБРАТЬ
	|	ХозрасчетныйДвиженияССубконто.Период,
	|	ХозрасчетныйДвиженияССубконто.Регистратор,
	|	ХозрасчетныйДвиженияССубконто.НомерСтроки,
	|	ХозрасчетныйДвиженияССубконто.СчетДт,
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.СубконтоДт1,неопределено) как СубконтоДт1,
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.СубконтоДт2,неопределено) как СубконтоДт2,
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.СубконтоДт3,неопределено) как СубконтоДт3,
	|	ХозрасчетныйДвиженияССубконто.СчетКт,
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.СубконтоКт1,неопределено) как СубконтоКт1,
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.СубконтоКт2,неопределено) как СубконтоКт2,
	|	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.СубконтоКт3,неопределено) как СубконтоКт3,
	|	ХозрасчетныйДвиженияССубконто.Организация,
	|	ХозрасчетныйДвиженияССубконто.Сумма КАК СуммаОборот
	|ПОМЕСТИТЬ ХозрасчетныйОборотыДтКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор В
	|					(ВЫБРАТЬ
	|						Операции.ОперАХ
	|					ИЗ
	|						Операции КАК Операции)
	|				ИЛИ Регистратор В
	|					(ВЫБРАТЬ
	|						Операции.ОперБух
	|					ИЗ
	|						Операции КАК Операции),
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто";  
	
	Запрос.Выполнить(); 	
	
	
	СостояниеЕслиНадо("Заполняем таблицу оборотов МСФО");
	
	Запрос.Текст="ВЫБРАТЬ
	|	бит_Дополнительный_2ДвиженияССубконто.Период,
	|	бит_Дополнительный_2ДвиженияССубконто.Регистратор,
	|	бит_Дополнительный_2ДвиженияССубконто.НомерСтроки,
	|	бит_Дополнительный_2ДвиженияССубконто.СчетДт,
	|	ЕСТЬNULL(бит_Дополнительный_2ДвиженияССубконто.СубконтоДт1,неопределено) как СубконтоДт1,
	|	ЕСТЬNULL(бит_Дополнительный_2ДвиженияССубконто.СубконтоДт2,неопределено) как СубконтоДт2,
	|	ЕСТЬNULL(бит_Дополнительный_2ДвиженияССубконто.СубконтоДт3,неопределено) как СубконтоДт3,
	|	ЕСТЬNULL(бит_Дополнительный_2ДвиженияССубконто.СубконтоДт4,неопределено) как СубконтоДт4,
	|	бит_Дополнительный_2ДвиженияССубконто.СчетКт,
	|	ЕСТЬNULL(бит_Дополнительный_2ДвиженияССубконто.СубконтоКт1,неопределено) как СубконтоКт1,
	|	ЕСТЬNULL(бит_Дополнительный_2ДвиженияССубконто.СубконтоКт2,неопределено) как СубконтоКт2,
	|	ЕСТЬNULL(бит_Дополнительный_2ДвиженияССубконто.СубконтоКт3,неопределено) как СубконтоКт3,
	|	ЕСТЬNULL(бит_Дополнительный_2ДвиженияССубконто.СубконтоКт4,неопределено) как СубконтоКт4,
	|	бит_Дополнительный_2ДвиженияССубконто.Организация,
	|	бит_Дополнительный_2ДвиженияССубконто.СуммаРегл  как СуммаОборот
	
	|ПОМЕСТИТЬ бит_Дополнительный_2ОборотыДтКт
	|ИЗ
	|	РегистрБухгалтерии.бит_Дополнительный_2.ДвиженияССубконто(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор В
	|				(ВЫБРАТЬ
	|					Операции.ОперБух
	|				ИЗ
	|					Операции КАК Операции),
	|			,
	|			) КАК бит_Дополнительный_2ДвиженияССубконто"; 
	
	Запрос.Выполнить(); 		
	
	
	
КонецПроцедуры

Процедура СобратьДанныеПоОперацииБух(отказ,результатстр="") Экспорт
	Запрос.Текст= "ВЫБРАТЬ
	|	бит_ок_ОперацияАксапты.Ссылка КАК ОперАХ,
	|	ОперацияБух.Ссылка КАК ОперБух,
	|	бит_ок_ОперацияАксапты.Организация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ бит_ок_ОперацияАксаптыОборотыАксапты.НомерСтроки) КАК КолвоСтрок
	|ПОМЕСТИТЬ Операции
	|ИЗ
	|	Документ.бит_ок_ОперацияАксапты.ОборотыАксапты КАК бит_ок_ОперацияАксаптыОборотыАксапты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ок_ОперацияАксапты КАК бит_ок_ОперацияАксапты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОперацияБух КАК ОперацияБух
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-04 (#3124)
	//|			ПО бит_ок_ОперацияАксапты.бтСсылкаНаДокументОперация = ОперацияБух.Ссылка
	//Заменено на:
	|			ПО бит_ок_ОперацияАксапты.Ссылка = ОперацияБух.СторнируемыйДокумент
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-04 (#3124)
	|				И (ОперацияБух.Ссылка в (&ОперацияБух))
	|				И (бит_ок_ОперацияАксапты.Организация = &Организация)
	|		ПО бит_ок_ОперацияАксаптыОборотыАксапты.Ссылка = бит_ок_ОперацияАксапты.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_ок_ОперацияАксапты.Ссылка,
	|	ОперацияБух.Ссылка,
	|	бит_ок_ОперацияАксапты.Организация
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-26 (#ПроектИнтеграцияАксапта12)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	бит_ок_ОперацияАксапты.Ссылка,
	|	ОперацияБух.Ссылка,
	|	бит_ок_ОперацияАксапты.Организация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ бит_ок_ОперацияАксаптыОборотыАксапты.НомерСтроки)
	|ИЗ
	|	Документ.бит_ок_ОперацияАксапты12.ОборотыАксапты КАК бит_ок_ОперацияАксаптыОборотыАксапты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ок_ОперацияАксапты12 КАК бит_ок_ОперацияАксапты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОперацияБух КАК ОперацияБух
	|			ПО бит_ок_ОперацияАксапты.Ссылка = ОперацияБух.СторнируемыйДокумент
	|				И (ОперацияБух.Ссылка В (&ОперацияБух))
	|				И (бит_ок_ОперацияАксапты.Организация = &Организация)
	|		ПО бит_ок_ОперацияАксаптыОборотыАксапты.Ссылка = бит_ок_ОперацияАксапты.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_ок_ОперацияАксапты.Ссылка,
	|	ОперацияБух.Ссылка,
	|	бит_ок_ОперацияАксапты.Организация
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-26 (#ПроектИнтеграцияАксапта12)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операции.ОперАХ,
	|	Операции.ОперБух,
	|	Операции.Организация,
	|	Операции.КолвоСтрок
	|ИЗ
	|	Операции КАК Операции"; 
	
	
	Запрос.УстановитьПараметр("ОперацияБух", ОперацияБух);
	рез=Запрос.Выполнить().Выгрузить();	
	Если рез.Количество()>0 тогда
		ЗаполнитьТаблицыОборотов2(рез);		
	иначе
		отказ=истина;
		результатстр=результатстр+"Операция не является исправление операции Аксапты!"; 
	конецесли;	 	
	
КонецПроцедуры	

Процедура СобратьДанныеЗаПериодПоДвижениям(отказ)
	
	
	Запрос.Текст="ВЫБРАТЬ
	|	бит_ок_ОперацияАксапты.Ссылка КАК ОперАХ,
	|	ОперацияБух.Ссылка КАК ОперБух,
	|	бит_ок_ОперацияАксапты.Организация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ бит_ок_ОперацияАксаптыОборотыАксапты.НомерСтроки) КАК КолвоСтрок
	|ПОМЕСТИТЬ Операции
	|ИЗ
	|	Документ.бит_ок_ОперацияАксапты.ОборотыАксапты КАК бит_ок_ОперацияАксаптыОборотыАксапты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ок_ОперацияАксапты КАК бит_ок_ОперацияАксапты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОперацияБух КАК ОперацияБух
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-04 (#3124)
	//|			ПО бит_ок_ОперацияАксапты.бтСсылкаНаДокументОперация = ОперацияБух.Ссылка
	//Заменено на:
	|			ПО бит_ок_ОперацияАксапты.Ссылка = ОперацияБух.СторнируемыйДокумент
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-04 (#3124)
	|				И (бит_ок_ОперацияАксапты.Дата МЕЖДУ &НачалоПериода И &КонецПериода)
	|		ПО бит_ок_ОперацияАксаптыОборотыАксапты.Ссылка = бит_ок_ОперацияАксапты.Ссылка
	|				И (бит_ок_ОперацияАксапты.Организация = &Организация)
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_ок_ОперацияАксапты.Ссылка,
	|	ОперацияБух.Ссылка,
	|	бит_ок_ОперацияАксапты.Организация
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-26 (#ПроектИнтеграцияАксапта12)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	бит_ок_ОперацияАксапты.Ссылка,
	|	ОперацияБух.Ссылка,
	|	бит_ок_ОперацияАксапты.Организация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ бит_ок_ОперацияАксаптыОборотыАксапты.НомерСтроки)
	|ИЗ
	|	Документ.бит_ок_ОперацияАксапты12.ОборотыАксапты КАК бит_ок_ОперацияАксаптыОборотыАксапты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ок_ОперацияАксапты12 КАК бит_ок_ОперацияАксапты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОперацияБух КАК ОперацияБух
	|			ПО бит_ок_ОперацияАксапты.Ссылка = ОперацияБух.СторнируемыйДокумент
	|				И (бит_ок_ОперацияАксапты.Дата МЕЖДУ &НачалоПериода И &КонецПериода)
	|		ПО бит_ок_ОперацияАксаптыОборотыАксапты.Ссылка = бит_ок_ОперацияАксапты.Ссылка
	|			И (бит_ок_ОперацияАксапты.Организация = &Организация)
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_ок_ОперацияАксапты.Ссылка,
	|	ОперацияБух.Ссылка,
	|	бит_ок_ОперацияАксапты.Организация
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-26 (#ПроектИнтеграцияАксапта12)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операции.ОперАХ,
	|	Операции.ОперБух,
	|	Операции.Организация,
	|	Операции.КолвоСтрок
	|ИЗ
	|	Операции КАК Операции";				 
	
	рез=Запрос.Выполнить().Выгрузить();	
	Если рез.Количество()>0 тогда
		ЗаполнитьТаблицыОборотов2(рез);	
	иначе
		отказ=истина;	
	конецесли;	
КонецПроцедуры

Процедура ЗаполнитьТаблицу() Экспорт
	
	Запрос.УстановитьПараметр("ВидСубконто1", ВидСубконто);
	пустыеСсылкиИлиНеСопоставленно=ДайПустыеСсылки();
	ПустыеСсылкиИлиНеСопоставленно.Добавить(справочники[ВидСубконто.ТипЗначения.ПривестиЗначение().Метаданные().Имя].НайтиПоНаименованию("Не сопоставлено"));
	Запрос.УстановитьПараметр("ПустыеСсылкиИлиНеСопоставленно", ПустыеСсылкиИлиНеСопоставленно);
	
	
	Запрос.Текст = "ВЫБРАТЬ
	|	бит_Дополнительный_2ВидыСубконто.Ссылка,
	|	бит_Дополнительный_2ВидыСубконто.ВидСубконто,
	|	бит_Дополнительный_2ВидыСубконто1.ВидСубконто КАК ВидСубконто1,
	|	бит_Дополнительный_2ВидыСубконто2.ВидСубконто КАК ВидСубконто2
	|ПОМЕСТИТЬ СубконтоМСФО
	|ИЗ
	|	ПланСчетов.бит_Дополнительный_2.ВидыСубконто КАК бит_Дополнительный_2ВидыСубконто
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.бит_Дополнительный_2.ВидыСубконто КАК бит_Дополнительный_2ВидыСубконто1
	|		ПО бит_Дополнительный_2ВидыСубконто.Ссылка = бит_Дополнительный_2ВидыСубконто1.Ссылка
	|			И (бит_Дополнительный_2ВидыСубконто1.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.бит_Дополнительный_2.ВидыСубконто КАК бит_Дополнительный_2ВидыСубконто2
	|		ПО (бит_Дополнительный_2ВидыСубконто1.Ссылка = бит_Дополнительный_2ВидыСубконто2.Ссылка)
	|			И (бит_Дополнительный_2ВидыСубконто2.НомерСтроки = 3)
	|ГДЕ
	|	бит_Дополнительный_2ВидыСубконто.НомерСтроки = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операции.ОперАХ,
	|	ХозрасчетныйОборотыДтКт.НомерСтроки,
	|	ХозрасчетныйОборотыДтКт.СчетДт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоДт1
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт2 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоДт2
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт3 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоДт3
	|	КОНЕЦ КАК СубконтоДт3,
	|	ХозрасчетныйОборотыДтКт.СчетКт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоКт1 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоКт1
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоКт2 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоКт2
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоКт3 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоКт3
	|	КОНЕЦ КАК СубконтоКт3,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	бит_ок_ОперацияАксаптыОборотыАксапты.Субконто1СДт1,
	|	бит_ок_ОперацияАксаптыОборотыАксапты.Субконто1СДт2,
	|	бит_ок_ОперацияАксаптыОборотыАксапты.Субконто1СДт3,
	|	бит_ок_ОперацияАксаптыОборотыАксапты.Субконто1СКт1,
	|	бит_ок_ОперацияАксаптыОборотыАксапты.Субконто1СКт2,
	|	бит_ок_ОперацияАксаптыОборотыАксапты.Субконто1СКт3,
	|	Операции.КолвоСтрок
	|ПОМЕСТИТЬ ПроводкиАХ
	|ИЗ
	|	Операции КАК Операции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ХозрасчетныйОборотыДтКт КАК ХозрасчетныйОборотыДтКт
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ок_ОперацияАксапты.ОборотыАксапты КАК бит_ок_ОперацияАксаптыОборотыАксапты
	|			ПО (бит_ок_ОперацияАксаптыОборотыАксапты.Ссылка = ХозрасчетныйОборотыДтКт.Регистратор)
	|				И (бит_ок_ОперацияАксаптыОборотыАксапты.НомерСтроки = ХозрасчетныйОборотыДтКт.НомерСтроки)
	|		ПО Операции.ОперАХ = ХозрасчетныйОборотыДтКт.Регистратор
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-26 (#ПроектИнтеграцияАксапта12)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операции.ОперАХ,
	|	ХозрасчетныйОборотыДтКт.НомерСтроки,
	|	ХозрасчетныйОборотыДтКт.СчетДт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоДт1
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт2 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоДт2
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт3 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоДт3
	|	КОНЕЦ КАК СубконтоДт3,
	|	ХозрасчетныйОборотыДтКт.СчетКт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоКт1 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоКт1
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоКт2 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоКт2
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоКт3 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоКт3
	|	КОНЕЦ КАК СубконтоКт3,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	бит_ок_ОперацияАксаптыОборотыАксапты.Субконто1СДт1,
	|	бит_ок_ОперацияАксаптыОборотыАксапты.Субконто1СДт2,
	|	бит_ок_ОперацияАксаптыОборотыАксапты.Субконто1СДт3,
	|	бит_ок_ОперацияАксаптыОборотыАксапты.Субконто1СКт1,
	|	бит_ок_ОперацияАксаптыОборотыАксапты.Субконто1СКт2,
	|	бит_ок_ОперацияАксаптыОборотыАксапты.Субконто1СКт3,
	|	Операции.КолвоСтрок
	|ИЗ
	|	Операции КАК Операции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ХозрасчетныйОборотыДтКт КАК ХозрасчетныйОборотыДтКт
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ок_ОперацияАксапты12.ОборотыАксапты КАК бит_ок_ОперацияАксаптыОборотыАксапты
	|			ПО (бит_ок_ОперацияАксаптыОборотыАксапты.Ссылка = ХозрасчетныйОборотыДтКт.Регистратор)
	|				И (бит_ок_ОперацияАксаптыОборотыАксапты.НомерСтроки = ХозрасчетныйОборотыДтКт.НомерСтроки)
	|		ПО Операции.ОперАХ = ХозрасчетныйОборотыДтКт.Регистратор
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-26 (#ПроектИнтеграцияАксапта12)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операции.ОперБух,
	|	ХозрасчетныйОборотыДтКт.СчетДт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт1 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоДт1
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт2 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоДт2
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоДт3 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоДт3
	|	КОНЕЦ КАК СубконтоДт3,
	|	ХозрасчетныйОборотыДтКт.СчетКт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоКт1 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоКт1
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоКт2 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоКт2
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СубконтоКт3 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА 0
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СубконтоКт3
	|	КОНЕЦ КАК СубконтоКт3,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	ХозрасчетныйОборотыДтКт.НомерСтроки,
	|	бит_Дополнительный_2ОборотыДтКт.СубконтоДт1 КАК СубконтоДт11,
	|	бит_Дополнительный_2ОборотыДтКт.СубконтоДт2 КАК СубконтоДт21,
	|	бит_Дополнительный_2ОборотыДтКт.СубконтоДт3 КАК СубконтоДт31,
	|	бит_Дополнительный_2ОборотыДтКт.СубконтоКт1 КАК СубконтоКт11,
	|	бит_Дополнительный_2ОборотыДтКт.СубконтоКт2 КАК СубконтоКт21,
	|	бит_Дополнительный_2ОборотыДтКт.СубконтоКт3 КАК СубконтоКт31,
	|	бит_Дополнительный_2ОборотыДтКт.СчетДт КАК СчетДт1,
	|	бит_Дополнительный_2ОборотыДтКт.СчетКт КАК СчетКт1
	|ПОМЕСТИТЬ ПроводкиБух
	|ИЗ
	|	Операции КАК Операции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ХозрасчетныйОборотыДтКт КАК ХозрасчетныйОборотыДтКт
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ бит_Дополнительный_2ОборотыДтКт КАК бит_Дополнительный_2ОборотыДтКт
	|			ПО ХозрасчетныйОборотыДтКт.Регистратор = бит_Дополнительный_2ОборотыДтКт.Регистратор
	|				И ХозрасчетныйОборотыДтКт.НомерСтроки = бит_Дополнительный_2ОборотыДтКт.НомерСтроки
	|		ПО Операции.ОперБух = ХозрасчетныйОборотыДтКт.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вложенныйзапрос.ОперБух КАК ОперБух,
	|	ЕСТЬNULL(вложенныйзапрос.НачалоИскл - вложенныйзапрос.КонецИскл + 1, 0) КАК Поправка
	|ПОМЕСТИТЬ исключения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПроводкиБух_.ОперБух КАК ОперБух,
	|		МИНИМУМ(ПроводкиБух.НомерСтроки) + 1 КАК НачалоИскл,
	|		МАКСИМУМ(ПроводкиБух.НомерСтроки) КАК КонецИскл
	|	ИЗ
	|		ПроводкиБух КАК ПроводкиБух_
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПроводкиБух КАК ПроводкиБух
	|			ПО ПроводкиБух_.ОперБух = ПроводкиБух.ОперБух
	|				И (ПроводкиБух.СуммаОборот = 0)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПроводкиБух.СуммаОборот,
	|		ПроводкиБух_.ОперБух) КАК вложенныйзапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроводкиАХ.ОперАХ КАК ОперАХ,
	|	ПроводкиАХ.НомерСтроки КАК НомерСтроки,
	|	СторноМинус.ОперБух КАК ОперБух,
	|	ПроводкиАХ.СчетДт КАК СчетДт,
	|	СторноМинус.СчетДт1 КАК СчетДтМСФОСтар,
	|	СторноПлюс.СчетДт1 КАК СчетДтМСФОНов,
	|	ПроводкиАХ.Субконто1СДт1 КАК СубконтоДт1Источник,
	|	ВЫБОР
	|		КОГДА СторноМинус.СубконтоДт11 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА СубконтоМСФОДтСтар.ВидСубконто
	|		ИНАЧЕ СторноМинус.СубконтоДт11
	|	КОНЕЦ КАК СубконтоДт1МСФОСтар,
	|	ВЫБОР
	|		КОГДА СторноПлюс.СубконтоДт11 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА СубконтоМСФОДтНов.ВидСубконто
	|		ИНАЧЕ СторноПлюс.СубконтоДт11
	|	КОНЕЦ КАК СубконтоДт1МСФОНов,
	|	ПроводкиАХ.Субконто1СДт2 КАК СубконтоДт2Источник,
	|	ВЫБОР
	|		КОГДА СторноМинус.СубконтоДт21 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА СубконтоМСФОДтСтар.ВидСубконто1
	|		ИНАЧЕ СторноМинус.СубконтоДт21
	|	КОНЕЦ КАК СубконтоДт2МСФОСтар,
	|	ВЫБОР
	|		КОГДА СторноПлюс.СубконтоДт21 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА СубконтоМСФОДтНов.ВидСубконто1
	|		ИНАЧЕ СторноПлюс.СубконтоДт21
	|	КОНЕЦ КАК СубконтоДт2МСФОНов,
	|	ПроводкиАХ.Субконто1СДт3 КАК СубконтоДт3Источник,
	|	ВЫБОР
	|		КОГДА СторноМинус.СубконтоДт31 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА СубконтоМСФОДтСтар.ВидСубконто2
	|		ИНАЧЕ СторноМинус.СубконтоДт31
	|	КОНЕЦ КАК СубконтоДт3МСФОСтар,
	|	ВЫБОР
	|		КОГДА СторноПлюс.СубконтоДт31 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА СубконтоМСФОДтНов.ВидСубконто2
	|		ИНАЧЕ СторноПлюс.СубконтоДт31
	|	КОНЕЦ КАК СубконтоДт3МСФОНов,
	|	ПроводкиАХ.СчетКт КАК СчетКт,
	|	СторноМинус.СчетКт1 КАК СчетКтМСФОСтар,
	|	СторноПлюс.СчетКт1 КАК СчетКтМСФОНов,
	|	ПроводкиАХ.Субконто1СКт1 КАК СубконтоКт1Источник,
	|	ВЫБОР
	|		КОГДА СторноМинус.СубконтоКт11 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА СубконтоМСФОКтСтар.ВидСубконто
	|		ИНАЧЕ СторноМинус.СубконтоКт11
	|	КОНЕЦ КАК СубконтоКт1МСФОСтар,
	|	ВЫБОР
	|		КОГДА СторноПлюс.СубконтоКт11 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА СубконтоМСФОКтНов.ВидСубконто
	|		ИНАЧЕ СторноПлюс.СубконтоКт11
	|	КОНЕЦ КАК СубконтоКт1МСФОНов,
	|	ПроводкиАХ.Субконто1СКт2 КАК СубконтоКт2Источник,
	|	ВЫБОР
	|		КОГДА СторноМинус.СубконтоКт21 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА СубконтоМСФОКтСтар.ВидСубконто1
	|		ИНАЧЕ СторноМинус.СубконтоКт21
	|	КОНЕЦ КАК СубконтоКт2МСФОСтар,
	|	ВЫБОР
	|		КОГДА СторноПлюс.СубконтоКт21 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА СубконтоМСФОКтНов.ВидСубконто1
	|		ИНАЧЕ СторноПлюс.СубконтоКт21
	|	КОНЕЦ КАК СубконтоКт2МСФОНов,
	|	ПроводкиАХ.Субконто1СКт3 КАК СубконтоКт3Источник,
	|	ВЫБОР
	|		КОГДА СторноМинус.СубконтоКт31 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА СубконтоМСФОКтСтар.ВидСубконто2
	|		ИНАЧЕ СторноМинус.СубконтоКт31
	|	КОНЕЦ КАК СубконтоКт3МСФОСтар,
	|	ВЫБОР
	|		КОГДА СторноПлюс.СубконтоКт31 В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ТОГДА СубконтоМСФОКтНов.ВидСубконто2
	|		ИНАЧЕ СторноПлюс.СубконтоКт31
	|	КОНЕЦ КАК СубконтоКт3МСФОНов,
	|	ПроводкиАХ.СуммаОборот КАК СуммаОборот,
	|	СторноМинус.НомерСтроки КАК НомерСтрокиСтар,
	|	СторноПлюс.НомерСтроки КАК НомерСтрокиНов,
	|	ПроводкиАХ.КолвоСтрок
	|ПОМЕСТИТЬ ВложенныйЗапрос
	|ИЗ
	|	ПроводкиАХ КАК ПроводкиАХ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПроводкиБух КАК СторноМинус
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПроводкиБух КАК СторноПлюс
	|				ЛЕВОЕ СОЕДИНЕНИЕ СубконтоМСФО КАК СубконтоМСФОДтНов
	|				ПО СторноПлюс.СчетДт1 = СубконтоМСФОДтНов.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ СубконтоМСФО КАК СубконтоМСФОКтНов
	|				ПО СторноПлюс.СчетКт1 = СубконтоМСФОКтНов.Ссылка
	|			ПО (СторноПлюс.СуммаОборот = -СторноМинус.СуммаОборот)
	|				И СторноМинус.ОперБух = СторноПлюс.ОперБух
	|			ЛЕВОЕ СОЕДИНЕНИЕ СубконтоМСФО КАК СубконтоМСФОДтСтар
	|			ПО СторноМинус.СчетДт1 = СубконтоМСФОДтСтар.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ СубконтоМСФО КАК СубконтоМСФОКтСтар
	|			ПО СторноМинус.СчетКт1 = СубконтоМСФОКтСтар.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ исключения КАК Исключения
	|			ПО СторноМинус.ОперБух = Исключения.ОперБух
	|		ПО ПроводкиАХ.СчетДт = СторноМинус.СчетДт
	|			И ПроводкиАХ.СубконтоДт1 = СторноМинус.СубконтоДт1
	|			И ПроводкиАХ.СубконтоДт2 = СторноМинус.СубконтоДт2
	|			И ПроводкиАХ.СубконтоДт3 = СторноМинус.СубконтоДт3
	|			И ПроводкиАХ.СчетКт = СторноМинус.СчетКт
	|			И ПроводкиАХ.СубконтоКт1 = СторноМинус.СубконтоКт1
	|			И ПроводкиАХ.СубконтоКт2 = СторноМинус.СубконтоКт2
	|			И ПроводкиАХ.СубконтоКт3 = СторноМинус.СубконтоКт3
	|			И (ПроводкиАХ.СуммаОборот = -СторноМинус.СуммаОборот)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-04 (#3124)
	//|			И (ВЫРАЗИТЬ(ПроводкиАХ.ОперАХ КАК Документ.бит_ок_ОперацияАксапты).бтСсылкаНаДокументОперация = СторноМинус.ОперБух)
	//Заменено на:
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-26 (#ПроектИнтеграцияАксапта12)
	//|			И (ВЫРАЗИТЬ(ПроводкиАХ.ОперАХ КАК Документ.бит_ок_ОперацияАксапты).Ссылка = Выразить(СторноМинус.ОперБух КАК Документ.ОперацияБух).СторнируемыйДокумент)
	|			И (ПроводкиАХ.ОперАХ ССЫЛКА Документ.бит_ок_ОперацияАксапты
	|					И ВЫРАЗИТЬ(ПроводкиАХ.ОперАХ КАК Документ.бит_ок_ОперацияАксапты).Ссылка = Выразить(СторноМинус.ОперБух КАК Документ.ОперацияБух).СторнируемыйДокумент
	|				ИЛИ ПроводкиАХ.ОперАХ ССЫЛКА Документ.бит_ок_ОперацияАксапты12
	|					И ВЫРАЗИТЬ(ПроводкиАХ.ОперАХ КАК Документ.бит_ок_ОперацияАксапты12).Ссылка = Выразить(СторноМинус.ОперБух КАК Документ.ОперацияБух).СторнируемыйДокумент)
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-26 (#ПроектИнтеграцияАксапта12)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-04 (#3124)
	|ГДЕ
	|	СторноПлюс.НомерСтроки = ПроводкиАХ.НомерСтроки
	|	И СторноМинус.НомерСтроки = ПроводкиАХ.НомерСтроки + ПроводкиАХ.КолвоСтрок + Исключения.Поправка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ОперАХ КАК ОперАХ,
	|	ВложенныйЗапрос.ОперБух КАК ОперБух,
	|	""Дебет"" КАК Сторона,
	|	ВложенныйЗапрос.СчетДтМСФОСтар КАК СчетМСФОСтар,
	|	ВложенныйЗапрос.СчетДтМСФОНов КАК СчетМСФОНов,
	|	ВложенныйЗапрос.СубконтоДт1Источник КАК Субконто1Источник,
	|	ВложенныйЗапрос.СубконтоДт1МСФОСтар КАК Субконто1МСФОСтар,
	|	ВложенныйЗапрос.СубконтоДт1МСФОНов КАК Субконто1МСФОНов,
	|	ВложенныйЗапрос.СубконтоДт2Источник КАК Субконто2Источник,
	|	ВложенныйЗапрос.СубконтоДт2МСФОСтар КАК Субконто2МСФОСтар,
	|	ВложенныйЗапрос.СубконтоДт2МСФОНов КАК Субконто2МСФОНов,
	|	ВложенныйЗапрос.СубконтоДт3Источник КАК Субконто3Источник,
	|	ВложенныйЗапрос.СубконтоДт3МСФОСтар КАК Субконто3МСФОСтар,
	|	ВложенныйЗапрос.СубконтоДт3МСФОНов КАК Субконто3МСФОНов,
	|	ВложенныйЗапрос.СчетДт КАК Счет,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтрокиАХ,
	|	ВложенныйЗапрос.НомерСтрокиСтар,
	|	ВложенныйЗапрос.НомерСтрокиНов,
	|	ВложенныйЗапрос.СуммаОборот
	|ПОМЕСТИТЬ Сторно
	|ИЗ
	|	ВложенныйЗапрос КАК ВложенныйЗапрос
	|ГДЕ
	|	(ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.СубконтоДт1МСФОСтар) = ТИП(Планвидовхарактеристик.бит_ВидыСубконтоДополнительные_2)
	|				И НЕ ВложенныйЗапрос.СубконтоДт1Источник В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.СубконтоДт1МСФОНов) = ТИП(Планвидовхарактеристик.бит_ВидыСубконтоДополнительные_2)
	|				И НЕ ВложенныйЗапрос.СубконтоДт1Источник В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.СубконтоДт2МСФОСтар) = ТИП(Планвидовхарактеристик.бит_ВидыСубконтоДополнительные_2)
	|				И НЕ ВложенныйЗапрос.СубконтоДт2Источник В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.СубконтоДт2МСФОНов) = ТИП(Планвидовхарактеристик.бит_ВидыСубконтоДополнительные_2)
	|				И НЕ ВложенныйЗапрос.СубконтоДт2Источник В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.СубконтоДт3МСФОСтар) = ТИП(Планвидовхарактеристик.бит_ВидыСубконтоДополнительные_2)
	|				И НЕ ВложенныйЗапрос.СубконтоДт3Источник В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.СубконтоДт3МСФОНов) = ТИП(Планвидовхарактеристик.бит_ВидыСубконтоДополнительные_2)
	|				И НЕ ВложенныйЗапрос.СубконтоДт3Источник В (&ПустыеСсылкиИлиНеСопоставленно))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ОперАХ,
	|	ВложенныйЗапрос.ОперБух,
	|	""Кредит"",
	|	ВложенныйЗапрос.СчетКтМСФОСтар,
	|	ВложенныйЗапрос.СчетКтМСФОНов,
	|	ВложенныйЗапрос.СубконтоКт1Источник,
	|	ВложенныйЗапрос.СубконтоКт1МСФОСтар,
	|	ВложенныйЗапрос.СубконтоКт1МСФОНов,
	|	ВложенныйЗапрос.СубконтоКт2Источник,
	|	ВложенныйЗапрос.СубконтоКт2МСФОСтар,
	|	ВложенныйЗапрос.СубконтоКт2МСФОНов,
	|	ВложенныйЗапрос.СубконтоКт3Источник,
	|	ВложенныйЗапрос.СубконтоКт3МСФОСтар,
	|	ВложенныйЗапрос.СубконтоКт3МСФОНов,
	|	ВложенныйЗапрос.СчетКт,
	|	ВложенныйЗапрос.НомерСтроки,
	|	ВложенныйЗапрос.НомерСтрокиСтар,
	|	ВложенныйЗапрос.НомерСтрокиНов,
	|	ВложенныйЗапрос.СуммаОборот
	|ИЗ
	|	ВложенныйЗапрос КАК ВложенныйЗапрос
	|ГДЕ
	|	(ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.СубконтоКт1МСФОСтар) = ТИП(Планвидовхарактеристик.бит_ВидыСубконтоДополнительные_2)
	|				И НЕ ВложенныйЗапрос.СубконтоКт1Источник В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.СубконтоКт1МСФОНов) = ТИП(Планвидовхарактеристик.бит_ВидыСубконтоДополнительные_2)
	|				И НЕ ВложенныйЗапрос.СубконтоКт1Источник В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.СубконтоКт2МСФОСтар) = ТИП(Планвидовхарактеристик.бит_ВидыСубконтоДополнительные_2)
	|				И НЕ ВложенныйЗапрос.СубконтоКт2Источник В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.СубконтоКт2МСФОНов) = ТИП(Планвидовхарактеристик.бит_ВидыСубконтоДополнительные_2)
	|				И НЕ ВложенныйЗапрос.СубконтоКт2Источник В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.СубконтоКт3МСФОСтар) = ТИП(Планвидовхарактеристик.бит_ВидыСубконтоДополнительные_2)
	|				И НЕ ВложенныйЗапрос.СубконтоКт3Источник В (&ПустыеСсылкиИлиНеСопоставленно)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.СубконтоКт3МСФОНов) = ТИП(Планвидовхарактеристик.бит_ВидыСубконтоДополнительные_2)
	|				И НЕ ВложенныйЗапрос.СубконтоКт3Источник В (&ПустыеСсылкиИлиНеСопоставленно))";
	Запрос.Выполнить().выгрузить();
	Запрос.текст="ВЫБРАТЬ
	|	Сторно.Сторона КАК Сторона,
	|	Сторно.ОперАХ КАК ОперацияАХ,
	|	Сторно.ОперБух КАК ОперацияБух,
	|	Сторно.СчетМСФОСтар,
	|	Сторно.СчетМСФОНов,
	|	Сторно.Субконто1Источник,
	|	Сторно.Субконто1МСФОСтар,
	|	Сторно.Субконто1МСФОНов,
	|	Сторно.Субконто2Источник,
	|	Сторно.Субконто2МСФОСтар,
	|	Сторно.Субконто2МСФОНов,
	|	Сторно.Субконто3Источник,
	|	Сторно.Субконто3МСФОСтар,
	|	Сторно.Субконто3МСФОНов,
	|	Сторно.Счет,
	|	Сторно.НомерСтрокиСтар,
	|	Сторно.НомерСтрокиНов,
	|	Сторно.НомерСтрокиАХ КАК НомерСтрокиАХ,
	|	Сторно.СуммаОборот
	|ИЗ
	|	Сторно КАК Сторно
	|ГДЕ
	|	(Сторно.Субконто1МСФОСтар = &ВидСубконто1
	|			ИЛИ Сторно.Субконто2МСФОСтар = &ВидСубконто1
	|			ИЛИ Сторно.Субконто3МСФОСтар = &ВидСубконто1
	|			ИЛИ (Сторно.Субконто1МСФОСтар) есть  NULL
	|			ИЛИ (Сторно.Субконто2МСФОСтар) есть NULL
	|			ИЛИ (Сторно.Субконто3МСФОСтар) есть NULL)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сторона,
	|	Сторно.ОперАХ,
	|	НомерСтрокиАХ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сторно.Сторона КАК Сторона,
	|	Сторно.ОперАХ КАК ОперацияАХ,
	|	Сторно.ОперБух КАК ОперацияБух,
	|	Сторно.СчетМСФОСтар,
	|	Сторно.СчетМСФОНов,
	|	Сторно.Субконто1Источник,
	|	Сторно.Субконто1МСФОСтар,
	|	Сторно.Субконто1МСФОНов,
	|	Сторно.Субконто2Источник,
	|	Сторно.Субконто2МСФОСтар,
	|	Сторно.Субконто2МСФОНов,
	|	Сторно.Субконто3Источник,
	|	Сторно.Субконто3МСФОСтар,
	|	Сторно.Субконто3МСФОНов,
	|	Сторно.Счет,
	|	Сторно.НомерСтрокиСтар,
	|	Сторно.НомерСтрокиНов,
	|	Сторно.НомерСтрокиАХ,
	|	Сторно.СуммаОборот,
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-26 (#ПроектИнтеграцияАксапта12)
	//|	ВЫРАЗИТЬ(Сторно.ОперАХ КАК Документ.бит_ок_ОперацияАксапты).ТипДокумента КАК ВидДокумента
	|	ВЫБОР
	|		КОГДА Сторно.ОперАХ ССЫЛКА Документ.бит_ок_ОперацияАксапты12
	|			ТОГДА ВЫРАЗИТЬ(Сторно.ОперАХ КАК Документ.бит_ок_ОперацияАксапты12).ТипДокумента
	|		ИНАЧЕ ВЫРАЗИТЬ(Сторно.ОперАХ КАК Документ.бит_ок_ОперацияАксапты).ТипДокумента
	|	КОНЕЦ КАК ВидДокумента
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-26 (#ПроектИнтеграцияАксапта12)
	|ИЗ
	|	Сторно КАК Сторно
	|ГДЕ
	|	(Сторно.Субконто1МСФОСтар = &ВидСубконто1
	|			ИЛИ Сторно.Субконто2МСФОСтар = &ВидСубконто1
	|			ИЛИ Сторно.Субконто3МСФОСтар = &ВидСубконто1
	|			ИЛИ (Сторно.Субконто1МСФОСтар) есть NULL
	|			ИЛИ (Сторно.Субконто2МСФОСтар) есть NULL
	|			ИЛИ (Сторно.Субконто3МСФОСтар) есть NULL)
	
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сторона,
	|	Сторно.ОперАХ,
	|	Сторно.НомерСтрокиАХ
	|ИТОГИ ПО
	|	ВидДокумента,
	|	ОперацияБух";
	результат=Запрос.ВыполнитьПакет();
	
	Таблица.Загрузить(результат[0].Выгрузить()); 
	ТаблицаПоВидамДокументов=результат[1].Выгрузить(ОбходРезультатаЗАпроса.ПоГруппировкамСИерархией);
	Если ЭтоАдресВременногоХранилища(АдресТаблицаПоВидамДокументов) Тогда 
		Адрес = АдресТаблицаПоВидамДокументов;
	Иначе
		Адрес = Новый УникальныйИдентификатор;
	КонецЕсли;
	АдресТаблицаПоВидамДокументов = ПоместитьВоВременноеХранилище(ТаблицаПоВидамДокументов, Адрес);
	
КонецПроцедуры

Процедура ПоставитьСоотвествующееСубконтоВЗапись(место,НаборЗаписей,подстрока)
	Запись=НаборЗаписей[подстрока["НомерСтроки"+место]-1];
	Запись_Субконто=?(подстрока.сторона="Дебет",Запись["СубконтоДт"],Запись["СубконтоКт"]);	
	Для й=1 по 3
		цикл	
		ВидСуб=подстрока["Субконто"+й+"МСФО"+место];		
		Если ВидСуб=ВидСубконто  тогда   
			источник =подстрока["Субконто"+й+"Источник"];
			Если не Пустое(источник) тогда   				
				Если Пустое(Запись_Субконто[ВидСуб]) тогда
					Если ТипЗнч(Запись_Субконто[ВидСуб])=типЗнч(источник) тогда
						Запись_Субконто[ВидСуб]=источник;
						//	СообщитьЕслиНадо("Пишем в строку "+строка(Запись.НомерСтроки)+" "+Строка(ВидСуб)+" "+строка(источник));
					конецесли;
				конецесли;
			КонецЕсли;
		конецесли;
	конеццикла;
конецпроцедуры

Процедура ПоставитьДоступноеСубконтоВЗапись(место,НаборЗаписей,подстрока)
	Запись=НаборЗаписей[подстрока["НомерСтроки"+место]-1];
	Запись_Субконто=?(подстрока.сторона="Дебет",Запись["СубконтоДт"],Запись["СубконтоКт"]);	
	источник= неопределено;
	
	Для й=1 по 3
		цикл	
		источник_=подстрока["Субконто"+й+"Источник"];
		ВидСуб=типзнч(источник_);
		
		Если ВидСубконто.Типзначения.СодержитТип(ВидСуб) тогда   
			источник =источник_;
			прервать;
		конецесли;
	конеццикла;
	
	Если не Пустое(источник) тогда 
		Для й=1 по 3
			цикл	
			ВидСуб=подстрока["Субконто"+й+"МСФО"+место];
			//Если ТипЗнч(ВидСуб)=Тип("Планвидовхарактеристикссылка.бит_ВидыСубконтоДополнительные_2")  тогда
			Если ВидСуб=ВидСубконто  тогда				
				Если Пустое(Запись_Субконто[ВидСуб]) тогда
					Если ТипЗнч(Запись_Субконто[ВидСуб])=типЗнч(источник) тогда
						Запись_Субконто[ВидСуб]=источник;
						//	СообщитьЕслиНадо("Пишем в строку "+строка(Запись.НомерСтроки)+" "+Строка(ВидСуб)+" "+строка(источник));
					конецесли;            
				конецесли;                				
			конецесли;
		конеццикла;   
	КонецЕсли;  
КонецПроцедуры

Процедура СообщитьЕслиНадо(стр)    Экспорт
	Если ВыводитьСообщения тогда
		//#Если Клиент Тогда
		//сообщить(стр);
		//#КонецЕсли
	конецесли;	
КонецПроцедуры

Процедура ПредупреждениеЕслиНадо(стр) Экспорт
	Если ВыводитьСообщения тогда
		//#Если Клиент тогда
		//Предупреждение(стр);
		//#КонецЕсли
	конецесли;	
КонецПроцедуры

Процедура СостояниеЕслиНадо(стр) Экспорт
	Если ВыводитьСообщения тогда
		//#Если Клиент тогда
		//Состояние(стр);
		//#КонецЕсли
	конецесли;	
КонецПроцедуры

Процедура ПодставитьЗначенияИзИсточника(БратьЛюбоеДоступноеСубконто=истина)  Экспорт	
	
	Если ЭтоАдресВременногоХранилища(АдресТаблицаПоВидамДокументов) Тогда 
		ТаблицаПоВидамДокументов = ПолучитьИзВременногоХранилища(АдресТаблицаПоВидамДокументов);
	КонецЕсли;
	Если ТаблицаПоВидамДокументов.Строки.Количество()>0 тогда
		начало_=ТекущаяДата();		    
		
		для каждого Дерево	из ТаблицаПоВидамДокументов.Строки цикл
			данные=Дерево.строки;
			ИспользоватьТранзакции=истина;
			квант=50;
			обработано=0;
			скоростьЗаЦиклМин=99999999999;
			скоростьЗаЦиклМакс=0;
			ВремяНачала=текущаяДата()-1; //без деления на ноль  
			колводок=данные.Количество();       
			комментарий="";
			
			Для каждого стр из данные
				Цикл
				если обработано=0 тогда
					времяНачалаЦикла=текущаяДата()-1;
					Если ИспользоватьТранзакции тогда			
						попытка
							НачатьТранзакцию();				
						исключение				
							СообщитьЕслиНадо(ОписаниеОшибки());		
						КонецПопытки;
					конецесли;
				конецесли;
				
				//РегистрыМСФО          			
				НаборЗаписей	= РегистрыБухгалтерии.бит_Дополнительный_2.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Регистратор.Значение	= стр.ОперацияБух;	
				НаборЗаписей.Прочитать();
				колво_=стр.строки.количество();
				для каждого подстрока из стр.строки
					цикл						
					если БратьЛюбоеДоступноеСубконто тогда
						ПоставитьДоступноеСубконтоВЗапись("Стар",НаборЗаписей,подстрока);	
						ПоставитьДоступноеСубконтоВЗапись("Нов",НаборЗаписей,подстрока);	
					иначе
						ПоставитьСоотвествующееСубконтоВЗапись("Стар",НаборЗаписей,подстрока);	
						ПоставитьСоотвествующееСубконтоВЗапись("Нов",НаборЗаписей,подстрока);	
					конецесли;
					СостояниеЕслиНадо(Формат(100*(стр.строки.индекс(подстрока)+1)/ колво_,"ЧДЦ=0")+"%");
				конеццикла;	
				попытка
					НаборЗаписей.Записать();  		
				исключение				
					СообщитьЕслиНадо(ОписаниеОшибки());		
				КонецПопытки;
				
				
				обработано=обработано+1;
				если обработано=квант или обработано>=колводок или данные.индекс(стр)=колводок-1 тогда
					периодЦикла=текущаяДата()-времяНачалаЦикла;
					скоростьзаЦикл=обработано/периодЦикла;
					Если скоростьзаЦикл<скоростьЗаЦиклМин тогда
						скоростьЗаЦиклМин=скоростьзаЦикл;
					конецесли;	
					Если скоростьзаЦикл>=скоростьЗаЦиклМакс тогда
						скоростьЗаЦиклМакс=скоростьзаЦикл;
					конецесли;
					времениПрошло=(ТекущаяДата()-ВремяНачала)/60;
					всегообработано=данные.индекс(стр)+1;
					средняяскорость=всегообработано/времениПрошло;
					осталосьвремени=(колводок-всегообработано)/средняяскорость;		
					осталосьвремениФ=?(осталосьвремени<60,Формат(осталосьвремени,"ЧДЦ=0")+" мин.",Формат(Цел(осталосьвремени/60),"ЧДЦ=0")+" час. "+Формат(осталосьвремени-60*Цел(осталосьвремени/60),"ЧДЦ=0")+" мин.");
					комментарий="Строк обработано "+строка(всегообработано)+" за " +Формат(времениПрошло,"ЧДЦ=0")+" мин. Средняя скорость "+Формат(средняяскорость,"ЧДЦ=0")+" док/мин. Осталось "+осталосьвремениФ+" (Окончание "+Формат(ТекущаяДата()+60*осталосьвремени,"")+"). Обработано "+строка(обработано)+" за "+строка(периодЦикла) +" сек. (тек. скорость "+Формат(скоростьзаЦикл*60,"ЧДЦ=0")+" док/мин.; мин. "+Формат(скоростьЗаЦиклМин*60,"ЧДЦ=0")+" док/мин.; макс. "+Формат(скоростьЗаЦиклМакс*60,"ЧДЦ=0")+" док/мин.)";
					СостояниеЕслиНадо(комментарий);
					Если ИспользоватьТранзакции тогда
						попытка
							ЗафиксироватьТранзакцию();  			
						исключение
							ОтменитьТранзакцию(); 
							СообщитьЕслиНадо(ОписаниеОшибки());		
						КонецПопытки;	
					конецесли;
					обработано=0;
				конецесли;
				
				//прервать;	
				//ОбработкаПрерыванияПользователя();
				
			КонецЦикла;
			сообщитьЕслиНадо(Строка(Дерево.ВидДокумента)+"	"+комментарий);
		КонецЦикла;
		
		сообщитьЕслиНадо("	ПодставитьЗначенияИзИсточника за "+строка(ТекущаяДата()-начало_));
	КонецЕсли;
КонецПроцедуры

Процедура Заполнить(отказ)   экспорт
	//ОК Калинин М. 181212 	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	результатстр="";		
	Если ЗначениеЗаполнено(ОперацияБух) тогда
		СостояниеЕслиНадо("Собираем данные по операции");
		начало_=ТекущаяДата();
		СобратьДанныеПоОперацииБух(отказ,результатстр);	
		сообщитьЕслиНадо("	СобратьДанныеПоОперацииБух за "+строка(ТекущаяДата()-начало_));
		если отказ тогда  			
			предупреждениеЕслиНадо(результатстр);
		конецесли;	
	иначе
		СостояниеЕслиНадо("Собираем данные за период");
		начало_=ТекущаяДата();
		СобратьДанныеЗаПериодПоДвижениям(отказ);
		сообщитьЕслиНадо("	СобратьДанныеЗаПериодПоДвижениям за "+строка(ТекущаяДата()-начало_));
	КонецЕсли;
	
	если не отказ тогда
		СостояниеЕслиНадо("Заполнение таблицы");
		начало_=ТекущаяДата();
		ЗаполнитьТаблицу();
		сообщитьЕслиНадо("	ЗаполнитьТаблицу за "+строка(ТекущаяДата()-начало_));
	конецесли;	
КонецПроцедуры

Процедура УстановитьОрганизациюОкей()  Экспорт
	Запрос_=новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Наименование = &Наименование");
	Запрос_.УстановитьПараметр("Наименование","О'КЕЙ");					 
	рез_=Запрос_.Выполнить();
	Если не рез_.Пустой() тогда 
		Организация=рез_.Выгрузить()[0].ссылка;
	конецесли;
КонецПроцедуры

ВыводитьСообщения=ложь;
НомераДокументов="";

