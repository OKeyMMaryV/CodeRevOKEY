  
&НаКлиенте
Процедура КнопкаВыполнитьНажатие(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанель1ЗаполнитьБыстро(Команда) Экспорт
	
	отказ=ложь;
	//УпорядочитьСубконтоПослеВыгрузкиИзРегистра=ложь;
	Заполнить_Вызов_Функции(отказ);

КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанель1ПодставитьЗначенияИзИсточника(Команда)  Экспорт	
	ПодставитьЗначенияИзИсточника_Вызов_Функции(ложь);
КонецПроцедуры

&НаКлиенте
Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	Если Объект.НастройкаПериода = Неопределено Тогда
		Объект.НастройкаПериода = Новый СтандартныйПериод;
	КонецЕсли;
	
	Объект.НастройкаПериода.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
	Объект.НастройкаПериода.ДатаНачала = Объект.НачалоПериода;
	Объект.НастройкаПериода.ДатаОкончания = ?(Объект.КонецПериода='0001-01-01', Объект.КонецПериода, КонецДня(Объект.КонецПериода));
	Диалог = Новый ДиалогРедактированияСтандартногоПериода;
	Диалог.Период = Объект.НастройкаПериода;
	Диалог.Показать(Новый ОписаниеОповещения("КнопкаНастройкаПериодаНажатиеЗавершение", ЭтотОбъект, Новый Структура("Диалог", Диалог)));
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаНастройкаПериодаНажатиеЗавершение(Период, ДополнительныеПараметры) Экспорт
    
    Диалог = ДополнительныеПараметры.Диалог;
    
    Если Период <> Неопределено Тогда
        Объект.НачалоПериода = Диалог.Период.ДатаНачала;
        Объект.КонецПериода = Диалог.Период.ДатаОкончания;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОперацияБухПриИзменении(Элемент)
	попытка
	Дата = ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(Объект.ОперацияБух, "Дата");
	Если не (Дата>=Объект.НачалоПериода и Дата<=Объект.КонецПериода) тогда
		ПоказатьПредупреждение(Неопределено, "Выбранная операция не принадлежит периоду!");
	конецесли;	
	исключение
	конецпопытки;
КонецПроцедуры

&НаСервере
Функция ВыполнитьЗапросНажатие_Сервер(текст_)
	
	Запрос = Новый Запрос;
	Запрос.текст=текст_;
	
	ТЗ = РезультатЗапроса.Выгрузить();
	УдаляемыеРеквизиты = Новый Массив;
	Для Каждого КолонкаТЗ ИЗ ТЗ.Колонки Цикл
		УдаляемыеРеквизиты.Добавить("РезультатЗапроса." + КолонкаТЗ.Имя);
	КонецЦикла;
	
	Для Каждого КолонкаТЗ ИЗ ТЗ.Колонки Цикл
		Элементы.Удалить(Элементы[КолонкаТЗ.Имя]);
	КонецЦикла;
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	ДобавляемыеРеквизиты = Новый Массив;
	Для Каждого КолонкаТЗ ИЗ ТЗ.Колонки Цикл
		РеквизитФормы = Новый РеквизитФормы(КолонкаТЗ.Имя, Новый ОписаниеТипов(КолонкаТЗ.ТипЗначения), "РезультатЗапроса");
		ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
	КонецЦикла;
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты, УдаляемыеРеквизиты);
	
	Для Каждого КолонкаТЗ ИЗ ТЗ.Колонки Цикл
		ТекКолонка = Элементы.Добавить(КолонкаТЗ.Имя, Тип("ПолеФормы"), Элементы.РезультатЗапроса);
		ТекКолонка.ПутьКДанным = "РезультатЗапроса."+КолонкаТЗ.Имя;
	КонецЦикла;
	
	РезультатЗапроса.Загрузить(ТЗ);
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьЗапросНажатие(Элемент)
	текст_=Элементы.ТекстЗапроса.ВыделенныйТекст;
	Если не значениезаполнено(текст_) тогда
		текст_=ТекстЗапроса.ПолучитьТекст();
	конецесли;
	ВыполнитьЗапросНажатие_Сервер(текст_);
КонецПроцедуры

&НаСервере
Функция Кнопка1Нажатие_Сервер(НомераДокументов, мНомераДокументов)
	Для Индекс=1 по СтрЧислоСтрок(НомераДокументов) Цикл	
		СтрТекста=СтрПолучитьСтроку(НомераДокументов,Индекс);
		мНомераДокументов.Добавить(СтрТекста);
	КонецЦикла; 	
	Запрос_=Новый Запрос();
	Запрос_.Текст="ВЫБРАТЬ
	              |	ОперацияБух.Ссылка
	              |ИЗ
	              |	Документ.ОперацияБух КАК ОперацияБух
	              |ГДЕ
	              |	ОперацияБух.Номер В(&Номера)
	              |	И ОперацияБух.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ОперацияБух.Ссылка";
	Запрос_.УстановитьПараметр("НачалоПериода", НачалоДня(Объект.НачалоПериода));
	Запрос_.УстановитьПараметр("КонецПериода", КонецДня(Объект.КонецПериода));			  
	Запрос_.УстановитьПараметр("номера",мНомераДокументов);
	Результат_=Запрос_.выполнить();
	Если не Результат_.Пустой() тогда
		Объект.ОперацияБух=новый списокЗначений;
		Объект.ОперацияБух.ЗагрузитьЗначения(Результат_.Выгрузить().ВыгрузитьКолонку("Ссылка"));
	конецесли;
КонецФункции

&НаКлиенте
Процедура Кнопка1Нажатие(Элемент)
	НомераДокументов="";
	ПоказатьВводСтроки(Новый ОписаниеОповещения("Кнопка1НажатиеЗавершение", ЭтотОбъект, Новый Структура("НомераДокументов", НомераДокументов)), НомераДокументов, "Номера документов", 0, Истина);
КонецПроцедуры

&НаКлиенте
Процедура Кнопка1НажатиеЗавершение(Строка, ДополнительныеПараметры) Экспорт
    
    НомераДокументов = ?(Строка = Неопределено, ДополнительныеПараметры.НомераДокументов, Строка);
    
    мНомераДокументов=новый Массив;
    Кнопка1Нажатие_Сервер(НомераДокументов, мНомераДокументов);

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если не РольДоступна("ПолныеПрава") тогда
		Элементы.Отладка.Видимость=ложь;
	конецесли;
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанель1ПодставитьЗначенияИзДоступногоИсточника(Команда)
	ПодставитьЗначенияИзИсточника_Вызов_Функции(истина);
КонецПроцедуры

&НаСервере
Функция Заполнить_Вызов_Функции(отказ)
	_объект=РеквизитФормыВЗначение("Объект");
	_объект.ВыводитьСообщения=истина;
	_объект.Заполнить(отказ);
	ЗначениеВРеквизитФормы(_объект, "Объект");
КонецФункции

&НаСервере
Функция ПодставитьЗначенияИзИсточника_Вызов_Функции(БратьЛюбоеДоступноеСубконто=истина)
	_объект=РеквизитФормыВЗначение("Объект");
	_объект.ВыводитьСообщения=истина;
	_объект.ПодставитьЗначенияИзИсточника(БратьЛюбоеДоступноеСубконто);
	ЗначениеВРеквизитФормы(_объект, "Объект");
КонецФункции
