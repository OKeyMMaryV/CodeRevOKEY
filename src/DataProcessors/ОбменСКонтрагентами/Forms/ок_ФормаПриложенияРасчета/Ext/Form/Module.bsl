//ОК(СофтЛаб) Вдовиченко Г.В. 20181101 №3103

&НаКлиенте
Перем Excel;

&НаКлиенте
Перем Книги;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Документ = Параметры.Документ;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ЗакрытьПриложениеExcel();
	
КонецПроцедуры

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПриложитьКДокументу(Команда)
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Сообщить("Не указан документ");
		Возврат;
	ИначеЕсли СуммаДокумента = 0 Тогда
		Сообщить("Не заполнена сумма документа");
		Возврат;
	ИначеЕсли ПустаяСтрока(ИмяЛиста) Тогда
		Сообщить("Не заполнено имя листа");
		Возврат;
	КонецЕсли;	
	
	Файл = Новый Файл(ИмяФайла);
	Если Не Файл.Существует() Тогда
		Сообщить("Указано неверное имя файла");
		Возврат;
	КонецЕсли;	
	ЗакрытьПриложениеExcel();
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Файл.Расширение);
	КопироватьФайл(ИмяФайла, ИмяВременногоФайла);
	Excel = СоздатьПриложениеExcel();
	Если Excel = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Книги = ОткрытьФайлExcel(Excel, ИмяВременногоФайла);
	УдаляемыеЛисты = Новый Массив;
	Для Каждого Лист Из Книги.Sheets Цикл
		Если Лист.Name = ИмяЛиста Тогда
			УбратьФормулыЛиста(Лист);
		Иначе	
			УдаляемыеЛисты.Добавить(Лист.Name);
		КонецЕсли;
	КонецЦикла;	
	
	Если УдаляемыеЛисты.Количество() > 0 Тогда
		Для Каждого ИмяУдаляемогоЛиста Из УдаляемыеЛисты Цикл
			Книги.WorkSheets(ИмяУдаляемогоЛиста).Delete();
		КонецЦикла;
		Книги.Save();
	КонецЕсли;
	ЗакрытьПриложениеExcel();
	
	ТабличныйДокумент = ПолучитьТабличныйДокументИзФайла(ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяВременногоФайла), УникальныйИдентификатор), Файл.Расширение);
	УдалитьФайлы(ИмяВременногоФайла);
	Если ТабличныйДокумент = Неопределено Тогда
		Сообщить("Не удалось прочитать табличный документ из файла");
	Иначе	
		ИмяНовогоФайла = ПолучитьИмяВременногоФайла(".pdf");
		ТабличныйДокумент.Записать(ИмяНовогоФайла, ТипФайлаТабличногоДокумента.PDF);
		НовыйФайл = Новый Файл(ИмяНовогоФайла);
		Если Не НовыйФайл.Существует() Тогда
			Сообщить("Не удалось записать временный файл: " + ИмяНовогоФайла);
		Иначе	
			ОбновитьСоздатьПрисоединенныйФайл(ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяНовогоФайла), УникальныйИдентификатор));
		КонецЕсли;	
		УдалитьФайлы(ИмяНовогоФайла);
	КонецЕсли;	
	
	Если ТипЗнч(ВладелецФормы) = Тип("УправляемаяФорма") Тогда
		Если ВладелецФормы.ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаСписка" 
				Или ВладелецФормы.ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаВыбора" Тогда
			ОтразитьСуммуДокумента(СуммаДокумента, Документ);
		ИначеЕсли ВладелецФормы.ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокументаОбщая" 
				Или ВладелецФормы.ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокументаТовары" 
				Или ВладелецФормы.ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокументаУслуги" Тогда
				Если ВладелецФормы.Объект.ок_СуммаДокументаПрисоединенныйФайлРасчета <> СуммаДокумента Тогда
					ВладелецФормы.Объект.ок_СуммаДокументаПрисоединенныйФайлРасчета = СуммаДокумента;
					ВладелецФормы.Модифицированность = Истина;
				КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	
	Закрыть();
	
	Оповестить("Запись_Файл");
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьСуммуИзФайла(Команда)
	
	ИмяЛистаПриИзменении(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ЗавершениеВыбораФайла", ЭтотОбъект);
	СтруктураИмяФайла = Новый Структура("ИмяФайла","");
	ТекстФильтра = бит_ОбменДанными_Excel.ПолучитьФильтрДляВыбораФайлаExcel();
	ОбменДаннымиКлиент.ОбработчикВыбораФайла(СтруктураИмяФайла,
											 "ИмяФайла",
											 Ложь,
											 Новый Структура("Фильтр, ПроверятьСуществованиеФайла", ТекстФильтра, Истина),
											 Оповещение
											);
											
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаПриИзменении(Элемент)
	
	Если ПустаяСтрока(ИмяФайла) Тогда
		Возврат;
	КонецЕсли;
	
	Файл = Новый Файл(ИмяФайла);
    
	Если НЕ Файл.Существует() Тогда
		ТекстСообщения = НСтр("ru = 'Указан неверный путь к файлу'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"ИмяФайла");
		Возврат;
	КонецЕсли;	
	
	Попытка
	    ЗагрузитьСписокЛистовExcel();			
	Исключение   
		Сообщить("" + ОписаниеОшибки());
		ЗакрытьПриложениеExcel();
	КонецПопытки;
		
КонецПроцедуры

&НаКлиенте
Процедура ИмяЛистаПриИзменении(Элемент)
	
	Если Книги = Неопределено Тогда
		Если Excel = Неопределено Тогда
			Excel = СоздатьПриложениеExcel();
		КонецЕсли;
		Если Excel = Неопределено Тогда
			Возврат;
		КонецЕсли;
		Книги = ОткрытьФайлExcel(Excel, ИмяФайла);
	КонецЕсли;
	
	Если Книги = Неопределено Тогда
		ЗакрытьПриложениеExcel();
		Возврат;
	КонецЕсли;
	
	НужныйЛист = Неопределено;
	Для Каждого Лист Из Книги.Sheets Цикл
		Если Лист.Name <> ИмяЛиста Тогда
			Продолжить;
		КонецЕсли;
		НужныйЛист = Лист;
	КонецЦикла;	
	
	Если НужныйЛист = Неопределено Тогда
		Сообщить("Не удалось найти в файле лист: " + ИмяЛиста);
		Возврат;
	КонецЕсли;	
	
	СуммаДокумента = 0;
	ЛистСДанными = Книги.WorkSheets(ИмяЛиста);
	КоличествоПустых = 0;
	Для й = 1 по 10000 Цикл
		Если КоличествоПустых >= 50 Тогда
			Прервать;
		КонецЕсли;	
		Значение = СокрЛП(ЛистСДанными.Cells(й, 1).Text);
		Если ПустаяСтрока(Значение) Тогда
			КоличествоПустых = КоличествоПустых + 1;
			Продолжить;
		КонецЕсли;	
		Если нРег(Значение) = "итого:" Или нРег(Значение) = "итого" Тогда
			ЗначениеСумма = СокрЛП(ЛистСДанными.Cells(й, 8).Text);
			ЗначениеСумма = СтрЗаменить(ЗначениеСумма, " ", "");
			ЗначениеСумма = СтрЗаменить(ЗначениеСумма, ",", ".");
			ЗначениеСумма = СтрЗаменить(ЗначениеСумма, Символы.НПП, "");
			Попытка 
				СуммаДокумента = Число(ЗначениеСумма);
			Исключение
			КонецПопытки;
			Прервать;
		КонецЕсли;	
	КонецЦикла;	
	
	Если СуммаДокумента = 0 Тогда
		Сообщить("Не удалось определить сумму документа. Она должна быть указана в колонке 8 в строке, где в колонке 1 указано ИТОГО:");
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ФункцииExcel

&НаКлиенте
Функция СоздатьПриложениеExcel(Отказ = Ложь)
	
	Попытка
		// Загрузка Microsoft Excel.
		//ВывестиСостояниеПользователю("Загрузка Microsoft Excel...");
		Эксель = Новый COMОбъект("Excel.Application");
		Эксель.DisplayAlerts = Ложь;
	Исключение
		Отказ = Истина;
		Сообщить("Ошибка загрузки Microsoft Excel." + Символы.ПС + ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат Эксель;
	
КонецФункции 

&НаКлиенте
Функция ОткрытьФайлExcel(Эксель, ПутьКФайлу, Отказ = Ложь)
	
	Попытка
        // Открытие файла Microsoft Excel
        //ВывестиСостояниеПользователю("Открытие файла Microsoft Excel...");
        ЭксельФайл = Эксель.WorkBooks.Open(ПутьКФайлу);
	Исключение
		Отказ = Истина;
        Сообщить("Ошибка при открытии файла: " + ПутьКФайлу + "." + Символы.ПС + ОписаниеОшибки());
        Возврат Неопределено;
    КонецПопытки;
	
	Возврат ЭксельФайл;
	
КонецФункции 

&НаКлиенте
Процедура ЗакрытьПриложениеExcel()
	
	Попытка
		Книги = Неопределено;
		Если Excel <> Неопределено Тогда 
			Excel.Application.Quit();
		КонецЕсли;
		Excel = Неопределено;
	Исключение
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСписокЛистовExcel(ЭксельФайл, Отказ = Ложь)	
						 
	МассивЛистов = Новый Массив;
	Попытка
		// Открытие листа файла Microsoft Excel.
        //ВывестиСостояниеПользователю("Получение списка листов файла Microsoft Excel...");
		Для Каждого ТекЛист Из ЭксельФайл.Sheets Цикл
			МассивЛистов.Добавить(ТекЛист.Name);
		КонецЦикла;
	Исключение
		Отказ = Истина;
		Сообщить("Ошибка получения списка листов книги MS Excel! Описание ошибки: " + ОписаниеОшибки());	
        Возврат Неопределено;
    КонецПопытки;
	
	Возврат МассивЛистов;
	
КонецФункции 
&НаКлиенте
Процедура УбратьФормулыЛиста(Лист)
	
	Лист.UsedRange.Value = Лист.UsedRange.Value;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗавершениеВыбораФайла(Результат, ДополнительныеПараметры) Экспорт 
	
	Если ПустаяСтрока(Результат) тогда
		Возврат;
	КонецЕсли;	
	
	ИмяФайла = Результат;
	ИмяФайлаПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСписокЛистовExcel()
	
	Элементы.ИмяЛиста.СписокВыбора.Очистить();
	Если Excel = Неопределено Тогда
		Excel = СоздатьПриложениеExcel();
	КонецЕсли;
	
	Если Excel = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Книги = ОткрытьФайлExcel(Excel, ИмяФайла);
	Если Книги = Неопределено Тогда
		ЗакрытьПриложениеExcel();
		Возврат;
	КонецЕсли;
	
	Листы = ПолучитьСписокЛистовExcel(Книги);
	ИмяЛиста = "";
	Для каждого Лист Из Листы Цикл
		Если ПустаяСтрока(Лист) Тогда
			Продолжить;
		КонецЕсли;
		Если ИмяЛиста = "" Тогда
			ИмяЛиста = Лист;
		КонецЕсли;	
		Элементы.ИмяЛиста.СписокВыбора.Добавить(Лист);
	КонецЦикла;
	
	Если ИмяЛиста <> "" Тогда	
		ИмяЛистаПриИзменении(Неопределено);
	КонецЕсли;
	
КонецПроцедуры
	
&НаСервереБезКонтекста
Функция ПолучитьТабличныйДокументИзФайла(Адрес, Расширение)
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
	Данные = ПолучитьИзВременногоХранилища(Адрес);
	Данные.Записать(ИмяВременногоФайла);
	Файл = Новый Файл(ИмяВременногоФайла);
	Если Не Файл.Существует() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ИмяВременногоФайла);
	УдалитьФайлы(ИмяВременногоФайла);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОтразитьСуммуДокумента(Сумма, СсылкаНаДокумент)
	
	Если Сумма <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаДокумент, "ок_СуммаДокументаПрисоединенныйФайлРасчета") Тогда
		ДокументОбъект = СсылкаНаДокумент.ПолучитьОбъект();
		ДокументОбъект.ок_СуммаДокументаПрисоединенныйФайлРасчета = Сумма;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСоздатьПрисоединенныйФайл(Адрес)
	
	ПрисоединенныйФайл = ок_ОбменСКонтрагентамиВнутренний.ПолучитьПрикладываемыйФайлКРеализации(Документ);
	
	ПараметрыФайла = Новый Структура;
	ПараметрыФайла.Вставить("ВремяИзмененияУниверсальное", "");
	Если Не ЗначениеЗаполнено(ПрисоединенныйФайл) Тогда
		ПараметрыФайла.Вставить("Автор", ПользователиКлиентСервер.ТекущийПользователь());
		ПараметрыФайла.Вставить("ВладелецФайлов", Документ);
		ПараметрыФайла.Вставить("ИмяБезРасширения", "Расчет");
		ПараметрыФайла.Вставить("РасширениеБезТочки", "pdf");
		ПрисоединенныйФайл = РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, Адрес);
	Иначе
		ПараметрыФайла.Вставить("АдресФайлаВоВременномХранилище", Адрес);
		ПараметрыФайла.Вставить("АдресВременногоХранилищаТекста", "");
		РаботаСФайлами.ОбновитьФайл(ПрисоединенныйФайл, ПараметрыФайла);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

