//ОК(СофтЛаб) Вдовиченко Г.В. 20181101 №3103

&НаКлиенте
Перем СкрываемыеКоманды;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		Документ = Параметры.Ключ;
	ИначеЕсли Параметры.Свойство("Документ") Тогда
		Документ = Параметры.Документ;
	КонецЕсли;
	
	Заголовок = "" + Документ;
	ЗаполнитьФайлы();
	Если ЗначениеЗаполнено(Документ) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(ЭлектронныйДокументИсходящийДокументыОснования.ДокументОснование) КАК ДокументУчета
		|ИЗ
		|	Документ.ЭлектронныйДокументИсходящий.ДокументыОснования КАК ЭлектронныйДокументИсходящийДокументыОснования
		|ГДЕ
		|	ЭлектронныйДокументИсходящийДокументыОснования.Ссылка = &Документ";
		
		Запрос.УстановитьПараметр("Документ", Документ);
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				ДокументУчета = Выборка.ДокументУчета;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановленаПрограммаОтображенияПредставленияHTML = ок_УправлениеФормамиКлиент.УстановленаПрограммаОтображенияПредставленияHTML();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-04-22 (#3332)
	ок_ОбменСКонтрагентамиКлиент.ОчиститьВременныйФайл(ИмяВременногоФайла);
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-04-22 (#3332)
	
КонецПроцедуры

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьПредставление(Команда)
	
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ТабличныйДокумент = ок_ОбменСКонтрагентамиСлужебныйВызовСервера.ПолучитьТабличныйДокументФайлаЭД(ТекущиеДанные.ПрисоединенныйФайл, УникальныйИдентификатор);
	Если ТабличныйДокумент = Неопределено Тогда
		ПоказатьПредупреждение(, "Не удалось сформировать представление");
		Возврат;
	КонецЕсли;	
		
	ТабличныйДокумент.Показать("Представление " + ТекущиеДанные.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура КарточкаДокумента(Команда)
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат;
	КонецЕсли;	
	
	ОткрытьФорму("Документ.ЭлектронныйДокументИсходящий.Форма.ФормаДокумента", Новый Структура("Ключ", Документ));
	
КонецПроцедуры

&НаКлиенте
Процедура ТиповаяФормаПросмотра(Команда)
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат;
	КонецЕсли;	
	
	ОткрытьФорму("Документ.ЭлектронныйДокументИсходящий.Форма.ФормаПросмотраЭД", Новый Структура("Ключ", Документ));
	//Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФайлыПрисоединенныйФайлНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеСтроки = Элементы.Файлы.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = ДанныеФайлаВложения(Неопределено, ДанныеСтроки.ПрисоединенныйФайл, УникальныйИдентификатор);
	
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	//Если Элемент.ТекущийЭлемент.Имя = "ФайлыИмя" Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеСтроки = Файлы.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Если ДанныеСтроки <> Неопределено Тогда
			ДанныеФайла = ДанныеФайлаВложения(Неопределено, ДанныеСтроки.ПрисоединенныйФайл, УникальныйИдентификатор);
			РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла, Ложь);
		КонецЕсли;
	//КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПриАктивизацииСтроки(Элемент)
	
	ДоступныеЭлементы = Новый Массив;
	
	ПрисоединенныйФайл = Неопределено;
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	Расширение = "";
	Если ТекущиеДанные <> Неопределено Тогда
		Если НРег(ТекущиеДанные.Расширение) = "xml" 
			ИЛИ НРег(ТекущиеДанные.Расширение) = "pdf" Тогда
			//ДоступныеЭлементы.Добавить("ФайлыПоказатьПредставление");
			ПрисоединенныйФайл = ТекущиеДанные.ПрисоединенныйФайл;
			Расширение = ТекущиеДанные.Расширение;
		КонецЕсли;	
	КонецЕсли;
	
	Для каждого Имя из СкрываемыеКоманды Цикл
		Элемент = Элементы.Найти(Имя);
		Если Элемент = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Элемент.Видимость = (ДоступныеЭлементы.Найти(Имя) <> Неопределено);
	КонецЦикла;	
	
	Если Не ЗначениеЗаполнено(ПрисоединенныйФайл) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяСтраницы = "СтраницаПредставлениеПустая";
	Если Расширение = "pdf" Тогда
		Если УстановленаПрограммаОтображенияПредставленияHTML Тогда
			//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-04-22 (#3332)
			////бывает эпизодический крэш при присвоении на сервере
			//ПредставлениеФайлаHTML = ПолучитьПредставлениеHTML(ПрисоединенныйФайл, Расширение);
			ПредставлениеФайлаHTML = "";
			Данные = ПолучитьИзВременногоХранилища(ок_ОбменСКонтрагентамиСлужебныйВызовСервера.АдресДанныхПрисоединенныйФайл(ПрисоединенныйФайл, УникальныйИдентификатор));
			Если ТипЗнч(Данные) = Тип("ДвоичныеДанные") Тогда
				ок_ОбменСКонтрагентамиКлиент.ОчиститьВременныйФайл(ИмяВременногоФайла);
				ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
				Данные.Записать(ИмяВременногоФайла);
				ПредставлениеФайлаHTML = ок_ОбменСКонтрагентамиКлиент.HTMLПредставлениеФайлаЭД(ИмяВременногоФайла, Расширение);
			КонецЕсли;	
			//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-04-22 (#3332)
			Если Не ПустаяСтрока(ПредставлениеФайлаHTML) Тогда
				ИмяСтраницы = "СтраницаПредставлениеHTML";
			КонецЕсли;	
		КонецЕсли;
	ИначеЕсли Расширение = "xml" Тогда
		УстановитьВидимость = Ложь;
		ОтобразитьПредставление(ПрисоединенныйФайл, УстановитьВидимость);
		Если УстановитьВидимость Тогда
			ИмяСтраницы = "СтраницаПредставление";
		КонецЕсли;	
	КонецЕсли;	
	
	Элементы.СтраницыПредставления.ТекущаяСтраница = Элементы.Найти(ИмяСтраницы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьВсеФайлыПриИзменении(Элемент)
	
	ЗаполнитьФайлы();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьФайлы()
	
	Файлы.Очистить();
	Если ЗначениеЗаполнено(Документ) Тогда
		
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-05-13 (#3340)
		//Запрос = Новый Запрос;
		//Запрос.Текст = 
		//	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//	|	Данные.Ссылка КАК ПрисоединенныйФайл,
		//	|	Данные.Расширение КАК Расширение,
		//	|	Данные.НаименованиеФайла + ВЫБОР
		//	|		КОГДА Данные.Расширение = """"
		//	|			ТОГДА """"
		//	|		ИНАЧЕ "".""
		//	|	КОНЕЦ + Данные.Расширение КАК Имя,
		//	|	Данные.ДатаМодификацииУниверсальная КАК ДатаИзменения,
		//	|	Данные.ТипЭлементаВерсииЭД КАК ТипЭлементаВерсииЭД
		//	|ИЗ
		//	|	Документ.ЭлектронныйДокументИсходящий КАК ЭлектронныйДокументИсходящий
		//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭДПрисоединенныеФайлы КАК Данные
		//	|		ПО (ЭлектронныйДокументИсходящий.Ссылка = &ВладелецФайла)
		//	|			И ЭлектронныйДокументИсходящий.Ссылка = Данные.ВладелецФайла
		//	|ГДЕ
		//	|	ВЫБОР
		//	|			КОГДА &ОтображатьВсеФайлы
		//	|				ТОГДА ИСТИНА
		//	|			ИНАЧЕ ВЫБОР
		//	|						КОГДА ЭлектронныйДокументИсходящий.ок_Статус = ЗНАЧЕНИЕ(Перечисление.ок_СтатусыИсходящегоЭлектронногоДокументооборота.Подписать)
		//	|								ИЛИ ЭлектронныйДокументИсходящий.ок_Статус = ЗНАЧЕНИЕ(Перечисление.ок_СтатусыИсходящегоЭлектронногоДокументооборота.ПустаяСсылка)
		//	|							ТОГДА Данные.ТипЭлементаВерсииЭД <> ЗНАЧЕНИЕ(Перечисление.ТипыЭлементовВерсииЭД.ок_СлужебныйЭД)
		//	|						КОГДА ЭлектронныйДокументИсходящий.ок_Статус = ЗНАЧЕНИЕ(Перечисление.ок_СтатусыИсходящегоЭлектронногоДокументооборота.Отправлен)
		//	|							ТОГДА Не Данные.ок_Архив И Данные.ТипЭлементаВерсииЭД = ЗНАЧЕНИЕ(Перечисление.ТипыЭлементовВерсииЭД.ок_СлужебныйЭД)
		//	|								 И ВЫБОР
		//	|										КОГДА Данные.Расширение = ""pdf""
		//	|											ИЛИ Данные.Расширение = ""PDF""
		//	|										ТОГДА Данные.ПодписанЭП
		//	|									ИНАЧЕ ИСТИНА
		//	|									КОНЕЦ
		//	|						КОГДА ЭлектронныйДокументИсходящий.ок_Статус = ЗНАЧЕНИЕ(Перечисление.ок_СтатусыИсходящегоЭлектронногоДокументооборота.Завершен)
		//	|							ТОГДА Данные.ТипЭлементаВерсииЭД = ЗНАЧЕНИЕ(Перечисление.ТипыЭлементовВерсииЭД.ок_СлужебныйЭД) 
		//	|								 И ВЫБОР
		//	|										КОГДА Данные.Расширение = ""pdf""
		//	|											ИЛИ Данные.Расширение = ""PDF""
		//	|										ТОГДА НЕ Данные.ПодписанЭП
		//	|									ИНАЧЕ ИСТИНА
		//	|									КОНЕЦ
		//	|						ИНАЧЕ ЛОЖЬ
		//	|					КОНЕЦ
		//	//|			КОГДА Данные.Расширение = ""xml""
		//	//|					ИЛИ Данные.Расширение = ""XML""
		//	//|				ТОГДА ВЫБОР
		//	//|						КОГДА ЭлектронныйДокументИсходящий.ок_Статус = ЗНАЧЕНИЕ(Перечисление.ок_СтатусыИсходящегоЭлектронногоДокументооборота.Подписать)
		//	//|								ИЛИ ЭлектронныйДокументИсходящий.ок_Статус = ЗНАЧЕНИЕ(Перечисление.ок_СтатусыИсходящегоЭлектронногоДокументооборота.ПустаяСсылка)
		//	//|							ТОГДА Данные.ТипЭлементаВерсииЭД <> ЗНАЧЕНИЕ(Перечисление.ТипыЭлементовВерсииЭД.ок_СлужебныйЭД)
		//	//|						ИНАЧЕ Данные.ТипЭлементаВерсииЭД = ЗНАЧЕНИЕ(Перечисление.ТипыЭлементовВерсииЭД.ок_СлужебныйЭД)
		//	//|					КОНЕЦ
		//	//|			КОГДА Данные.Расширение = ""pdf""
		//	//|					ИЛИ Данные.Расширение = ""PDF""
		//	//|				ТОГДА ИСТИНА
		//	//|			ИНАЧЕ ЛОЖЬ
		//	|		КОНЕЦ
		//	|	И НЕ Данные.ПометкаУдаления";
		//Запрос.УстановитьПараметр("ВладелецФайла", Документ);
		//Запрос.УстановитьПараметр("ОтображатьВсеФайлы", ОтображатьВсеФайлы);
		//Файлы.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Данные = ок_ОбменСКонтрагентамиВнутренний.ПолучитьПрисоединенныеФайлыИсходящегоЭДДляОтображения(Документ, ОтображатьВсеФайлы);
		Если Данные <> Неопределено Тогда
			Файлы.Загрузить(Данные);
		КонецЕсли;	
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-05-13 (#3340)
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеФайлаВложения(АдресВременногоХранилищаВложения, ПрисоединенныйФайлСсылка, УникальныйИдентификатор)
	
	ДанныеФайла = Неопределено;
	Если ЭтоАдресВременногоХранилища(АдресВременногоХранилищаВложения) Тогда
		// Файл во временном хранилище
		ДанныеФайла = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаВложения);
		ДанныеФайла.Вставить("Ссылка", Неопределено);
	ИначеЕсли ЗначениеЗаполнено(ПрисоединенныйФайлСсылка) Тогда
		// Файл записан в ИБ
		ДанныеФайла = ОбменСКонтрагентамиСлужебный.ПолучитьДанныеФайла(ПрисоединенныйФайлСсылка, УникальныйИдентификатор);
		ДанныеФайла.Вставить("Ссылка", ПрисоединенныйФайлСсылка);
	КонецЕсли;
	
	Возврат ДанныеФайла;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПредставлениеHTML(ПрисоединенныйФайл, Расширение)
	
	Возврат ок_ОбменСКонтрагентамиВнутренний.HTMLПредставлениеФайлаЭД(ПрисоединенныйФайл, Расширение);
		
КонецФункции

&НаСервере
Процедура ОтобразитьПредставление(ПрисоединенныйФайл, УстановитьВидимость = Ложь)
	
	ТабличныйДокумент = ок_ОбменСКонтрагентамиСлужебныйВызовСервера.ПолучитьТабличныйДокументФайлаЭД(ПрисоединенныйФайл, УникальныйИдентификатор);
	Если ТабличныйДокумент <> Неопределено Тогда
		ПредставлениеФайла.Очистить();
		ПредставлениеФайла.Вывести(ТабличныйДокумент);
		УстановитьВидимость = Истина;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

СкрываемыеКоманды = Новый Массив;
СкрываемыеКоманды.Добавить("ФайлыПоказатьПредставление");
