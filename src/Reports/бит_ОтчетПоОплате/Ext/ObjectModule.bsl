         

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ 

// Хранит настройки дополнительных измерений
Перем мНастройкиИзмерений Экспорт;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ - ОБРАБОТЧИКИ СОБЫТИЙ ОБЪЕКТА

// бит_ASubbotina Процедура - обработчик события "ПриКомпоновкеРезультата" формы.
//
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)

	СписокПараметровНаФорме = Новый СписокЗначений;
	
	СписокПараметровНаФорме.Добавить("Период");
	

	
	Для каждого ЭлементСписка Из СписокПараметровНаФорме Цикл
		
		ИмяПараметра = ЭлементСписка.Значение;
		бит_ОтчетыСервер.УстановитьЗначениеПараметраКомпоновщика(КомпоновщикНастроек, 
																 ЭтотОбъект[ИмяПараметра], 
																 ИмяПараметра);
		
	КонецЦикла;  	
	
	// бит_DFedotov 
	ИмяСправочникаСценарии = бит_ОбщегоНазначения.ПолучитьИмяСправочникаСценарииБюджетирования();
	ПустойСценарий = Справочники[ИмяСправочникаСценарии].ПустаяСсылка();
	
	// Установим значение параметра "ПустойСценарий".
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПустойСценарий"));
	
	Если НЕ ЗначениеПараметра = Неопределено Тогда
		
		ЗначениеПараметра.Значение = ПустойСценарий;
		
		Если Не ЗначениеПараметра.Использование Тогда
			ЗначениеПараметра.Использование = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПриКомпоновкеРезультата()


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ 

мНастройкиИзмерений = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("бит_НастройкиДополнительныхИзмерений");

бит_МеханизмДопИзмерений.СформироватьЗаголовкиПолейДополнительныхИзмеренийВСКД(СхемаКомпоновкиДанных, 
					"Основной", 
					мНастройкиИзмерений);