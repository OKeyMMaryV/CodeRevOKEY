
////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// бит_ASubbotina Процедура - обработчик события "ПриОткрытии" формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для каждого ЭлементСписка Из фСписокПараметровНаФорме Цикл
		ИмяПараметра = ЭлементСписка.Значение;
		бит_ОтчетыКлиент.УстановитьЗначениеПараметраКомпоновщика(Отчет.КомпоновщикНастроек, 
															Отчет[ИмяПараметра], 
															ИмяПараметра);
	КонецЦикла;

КонецПроцедуры // ПриОткрытии()


////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ
                           
// бит_ASubbotina Процедура - обработчик команды "КомандаВыбратьПериодчерезФорму"
//
&НаКлиенте
Процедура КомандаНастроитьПериод(Команда)
	
	// БИТ_YK_н 01/16
	бит_РаботаСДиалогамиКлиент.НастроитьПериод(Отчет.ПериодОтчета, Отчет.НастройкаПериода);
	//бит_ОтчетыКлиент.УстановитьЗначениеПараметраКомпоновщика(Отчет.КомпоновщикНастроек, 
	//														Отчет.ПериодОтчета, 
	//														"ПериодОтчета");
	// БИТ_YK_к  
			
КонецПроцедуры // КомандаНастроитьПериод()

// бит_ASubbotina Процедура - обработчик команды "КомандаЗавершитьРедактирование"
//
&НаКлиенте
Процедура КомандаЗавершитьРедактирование(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("НастройкаПериода", Отчет.НастройкаПериода);
	Для каждого ЭлементСписка Из фСписокПараметровНаФорме Цикл
		ИмяПараметра = ЭлементСписка.Значение;
		СтруктураПараметров.Вставить(ИмяПараметра , Отчет[ИмяПараметра]);
	КонецЦикла;
	СтруктураПараметров.Вставить("ПользовательскиеНастройки" , Отчет.КомпоновщикНастроек.ПользовательскиеНастройки);
	
	// Оповещение формы отчета
	Оповестить("ИзмененыНастройки_" + фПолноеИмяОтчета, СтруктураПараметров);
	
	Закрыть();
	
КонецПроцедуры // КомандаЗавершитьРедактирование()


////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// бит_ASubbotina Процедура - обработчик события "ПриИзменении" поля ввода "ПериодДатаНачала".
//
&НаКлиенте
Процедура ПериодДатаНачалаПриИзменении(Элемент)
	
	// БИТ_YK_н 01/16
	//бит_ОтчетыКлиент.УстановитьЗначениеПараметраКомпоновщика(Отчет.КомпоновщикНастроек, 
	//														Отчет.ПериодОтчета.ДатаНачала, 
	//														"Период", 
	//														"ДатаНачала");
	ВремяКорректно = бит_ОбщегоНазначенияКлиентСервер.ВременнойИнтервалКорректный(Отчет.ПериодОтчета.ДатаНачала, 
																				Отчет.ПериодОтчета.ДатаОкончания);
	// БИТ_YK_к 	
КонецПроцедуры // ПериодДатаНачалаПриИзменении()

// бит_ASubbotina Процедура - обработчик события "ПриИзменении" поля ввода "ПериодДатаОкончания".
//
&НаКлиенте
Процедура ПериодДатаОкончанияПриИзменении(Элемент)
	
	// БИТ_YK_н 01/16
	//бит_ОтчетыКлиент.УстановитьЗначениеПараметраКомпоновщика(Отчет.КомпоновщикНастроек, 
	//														Отчет.ПериодОтчета.ДатаОкончания, 
	//														"Период", 
	//														"ДатаОкончания");
	ВремяКорректно = бит_ОбщегоНазначенияКлиентСервер.ВременнойИнтервалКорректный(Отчет.ПериодОтчета.ДатаНачала, 
																				 Отчет.ПериодОтчета.ДатаОкончания);
   // БИТ_YK_к 
		
КонецПроцедуры // ПериодДатаОкончанияПриИзменении()

// бит_ASubbotina Процедура - обработчик события "ПриИзменении" поля ввода "ПериодВариант".
//
&НаКлиенте
Процедура ПериодВариантПриИзменении(Элемент)
	
	// БИТ_YK_н 01/16
	//бит_ОтчетыКлиент.УстановитьЗначениеПараметраКомпоновщика(Отчет.КомпоновщикНастроек, 
	//														Отчет.ПериодОтчета.Вариант, 
	//														"Период", 
	//														"Вариант");
	// БИТ_YK_к 
		
КонецПроцедуры // ПериодВариантПриИзменении()

// бит_ASubbotina Процедура - обработчик события "ПриИзменении" полей воода - простых параметров на форме.
//
&НаКлиенте
Процедура ПростойПараметрПриИзменении(Элемент)
	
	ИмяПараметра = Элемент.Имя;
	бит_ОтчетыКлиент.УстановитьЗначениеПараметраКомпоновщика(Отчет.КомпоновщикНастроек, 
															Отчет[ИмяПараметра], 
															ИмяПараметра);
															
КонецПроцедуры // ПростойПараметрПриИзменении()
														
// бит_ASubbotina Процедура - обработчик события "ПриИзменении" 
// поля "КомпоновщикНастроекПользовательскиеНастройки".
//
&НаКлиенте
Процедура КомпоновщикНастроекПользовательскиеНастройкиПриИзменении(Элемент)
	
	Для каждого ИдЭлемента Из Элемент.ВыделенныеСтроки Цикл
		
		НастройкаКд  = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ИдЭлемента);
		Если ТипЗнч(НастройкаКд) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			
			ИмяПараметра = Строка(НастройкаКд.Параметр);
			
			Если фСписокПараметровНаФорме.НайтиПоЗначению(ИмяПараметра) <> Неопределено Тогда
				
				Отчет[ИмяПараметра] = НастройкаКд.Значение;
				
				// БИТ_YK_н 01/16
				//Если ИмяПараметра = "Период" Тогда	
				//	ВремяКорректно = бит_ОбщегоНазначенияКлиентСервер.ВременнойИнтервалКорректный(Отчет.ПериодОтчета.ДатаНачала, Отчет.ПериодОтчета.ДатаОкончания);
				//КонецЕсли;
				// БИТ_YK_к 
	
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры // КомпоновщикНастроекПользовательскиеНастройкиПриИзменении()


////////////////////////////////////////////////////////////////////////////
// СЕРВЕРНЫЕ ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// бит_ASubbotina Процедура - обработчик события "ПриСозданииНаСервере" формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МетаданныеОбъекта = Метаданные.Отчеты.бит_БК_ВыполнениеПлана_Расширенный;
	фПолноеИмяОтчета = МетаданныеОбъекта.ПолноеИмя();
	
	ЗаполнитьДополнительныеСписки();
	
	Для каждого ЭлементСписка Из фСписокПараметровНаФорме Цикл
		ИмяПараметра = ЭлементСписка.Значение;
		Отчет[ИмяПараметра] = Параметры[ИмяПараметра];
	КонецЦикла;
	Отчет.НастройкаПериода 		 = Параметры.НастройкаПериода;
			
КонецПроцедуры // ПриСозданииНаСервере()


////////////////////////////////////////////////////////////////////////////
// СЕРВЕРНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// бит_ASubbotina Процедура заполняет дополнительные списки
//
// Параметры:
//  Нет
//
&НаСервере
Процедура ЗаполнитьДополнительныеСписки()

	// Список имён параметров СКД, заполняемых пользователем через элементы формы
	// БИТ_YK_н
	// фСписокПараметровНаФорме.Добавить("Период");
	// БИТ_YK_к
	фСписокПараметровНаФорме.Добавить("Сценарий");
	фСписокПараметровНаФорме.Добавить("СценарийЭталон");
	фСписокПараметровНаФорме.Добавить("СценарийЗаявка");
	фСписокПараметровНаФорме.Добавить("Периодичность");
	фСписокПараметровНаФорме.Добавить("ОтображатьПустыеСтроки");
	
КонецПроцедуры // ЗаполнитьДополнительныеСписки()

