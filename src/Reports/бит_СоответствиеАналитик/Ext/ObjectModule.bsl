#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)

	СписокПараметровНаФорме = Новый СписокЗначений;
	
	СписокПараметровНаФорме.Добавить("ВидСоответствия");
		
	Для каждого ЭлементСписка Из СписокПараметровНаФорме Цикл
		
		ИмяПараметра = ЭлементСписка.Значение;
		бит_ОтчетыСервер.УстановитьЗначениеПараметраКомпоновщика(КомпоновщикНастроек, 
																 ЭтотОбъект[ИмяПараметра], 
																 ИмяПараметра);
		
	КонецЦикла;  	
	
	ТаблицаРезультат = Новый ТаблицаЗначений;
	ТаблицаРезультат.Колонки.Добавить("ВидСоответствия");
	ТаблицаРезультат.Колонки.Добавить("Сопоставлено");
	ТаблицаРезультат.Колонки.Добавить("ЛеваяАналитика_1");
	
	Тип = ЭтотОбъект.ВидСоответствия.ЛеваяАналитика_1.ТипЗначения.Типы();
	
	Запрос = Новый Запрос;
	Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ТекОбъект.Ссылка
			|ИЗ
			|	%Параметр% КАК ТекОбъект
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СоответствияАналитик КАК бит_СоответствияАналитик
            |		ПО бит_СоответствияАналитик.ВидСоответствия = &ВидСоответствия
		    |			И ТекОбъект.Ссылка = бит_СоответствияАналитик.ЛеваяАналитика_1
			|ГДЕ
			|	бит_СоответствияАналитик.ЛеваяАналитика_1 ЕСТЬ NULL ";
			
	Текст = СтрЗаменить(Текст, "%Параметр%", Метаданные.НайтиПоТипу(Тип[0]).Полноеимя());				   
    
    Запрос.УстановитьПараметр("ВидСоответствия", ВидСоответствия);
	Если НЕ бит_ОбщегоНазначения.ЭтоСемействоERP() Тогда
        
        Если ВидСоответствия.Предопределенный = Истина
			И бит_РаботаСМетаданными.ЕстьПредопределенныйЭлемент("Справочник.бит_ВидыСоответствийАналитик.СтатьиОборотовБДР_СтатьиОборотовБДДС")
			И ВидСоответствия = Справочники.бит_ВидыСоответствийАналитик.СтатьиОборотовБДР_СтатьиОборотовБДДС Тогда 
			
			Текст = Текст + "И ТекОбъект.ТипСтатьи = &ТипСтатьи";
			Запрос.УстановитьПараметр("ТипСтатьи", Перечисления.бит_ТипыСтатейОборотов.БДР);
		
		КонецЕсли; 

	КонецЕсли;
		
	Запрос.Текст = Текст;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();	
	Пока Выборка.Следующий() Цикл 
		
		НоваяСтрока = ТаблицаРезультат.Добавить();
		НоваяСтрока.ВидСоответствия  = ЭтотОбъект.ВидСоответствия;
		НоваяСтрока.Сопоставлено 	 = Ложь;
		НоваяСтрока.ЛеваяАналитика_1 = Выборка.Ссылка; 
	
	КонецЦикла;
	
	// Вывод отчета.
	СтандартнаяОбработка = Ложь;
	
	СКД = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных"); 
	
	// Формирование макета, с помощью компоновщика макета.
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
					
	// Настройки по умолчанию.
	Настройки = ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки();
																				  
	// Передача схемы, настроек и данных расшифровки в макет компоновки.
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Настройки, ДанныеРасшифровки);
	
	// Внешние наборы данных.    
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТаблицаНеСопоставленные", ТаблицаРезультат);
	
	// Выполнение компоновки с помощью процессора компоновки.
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	  
	// Вывод таблицы .        
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.ОтображатьПроцентВывода = Истина;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);              
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры // ПриКомпоновкеРезультата()

#КонецОбласти

#КонецЕсли
