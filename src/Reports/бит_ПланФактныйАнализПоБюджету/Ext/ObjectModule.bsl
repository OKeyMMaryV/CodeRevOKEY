#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем мНастройкиИзмерений Экспорт; // Хранит настройки дополнительных измерений.

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)

	СписокПараметровНаФорме = Новый СписокЗначений;
	
	СписокПараметровНаФорме.Добавить("Период");
	СписокПараметровНаФорме.Добавить("Бюджет");
	СписокПараметровНаФорме.Добавить("Сценарий");
	СписокПараметровНаФорме.Добавить("СценарийЭталон");
	СписокПараметровНаФорме.Добавить("Периодичность");
	СписокПараметровНаФорме.Добавить("ОтображатьПустыеСтроки");

	
	Для каждого ЭлементСписка Из СписокПараметровНаФорме Цикл
		
		ИмяПараметра = ЭлементСписка.Значение;
		бит_ОтчетыСервер.УстановитьЗначениеПараметраКомпоновщика(КомпоновщикНастроек, 
																 ЭтотОбъект[ИмяПараметра], 
																 ИмяПараметра);
		
	КонецЦикла; 
	
	Если ЗначениеЗаполнено(Сценарий) Тогда
		ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВалютаСценария"));
        ЗначениеПараметра.Значение = Сценарий.Валюта;
        Если Не ЗначениеПараметра.Использование Тогда
            ЗначениеПараметра.Использование = Истина;
		КонецЕсли; 
	КонецЕсли;
	Если ЗначениеЗаполнено(СценарийЭталон) Тогда
		ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВалютаСценарияЭталон"));
        ЗначениеПараметра.Значение = СценарийЭталон.Валюта;
        Если Не ЗначениеПараметра.Использование Тогда
            ЗначениеПараметра.Использование = Истина;
        КонецЕсли;
	КонецЕсли;											 
	
	// Изменение кода. Начало. 04.10.2017{{
	СтандартнаяОбработка = Ложь;
	Макет = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Для каждого Набор Из Макет.НаборыДанных Цикл
		бит_ОтчетыСервер.УстановитьЗаголовкиПолейСумма(Набор.Поля, Строка(ЭтотОбъект.СценарийЭталон), Строка(ЭтотОбъект.Сценарий));
	КонецЦикла; 
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Макет,КомпоновщикНастроек.ПолучитьНастройки(),ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	// Изменение кода. Начало. 04.10.2017{{
	
КонецПроцедуры // ПриКомпоновкеРезультата()

#КонецОбласти

#Область Инициализация

мНастройкиИзмерений = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("бит_НастройкиДополнительныхИзмерений");

бит_МеханизмДопИзмерений.СформироватьЗаголовкиПолейДополнительныхИзмеренийВСКД(СхемаКомпоновкиДанных, 
					"ОсновнойЗапрос", 
					мНастройкиИзмерений);

#КонецОбласти

#КонецЕсли
