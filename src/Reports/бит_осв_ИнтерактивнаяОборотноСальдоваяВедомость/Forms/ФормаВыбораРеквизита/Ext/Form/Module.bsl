
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	фКэшЗначений = Новый Структура("ОснованиеРазворотов", Параметры.ОснованиеРазворотов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если фКэшЗначений.ОснованиеРазворотов = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ЗаполнитьДеревоРеквизитов();
    	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТабличноеПоле

&НаКлиенте
Процедура ТабличноеПолеРеквизитыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтрокаДанных = ТабличноеПолеРеквизиты.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если СтрокаДанных.Тип = "Реквизит" Тогда
		Закрыть(СтрокаДанных.Измерение + "." + СтрокаДанных.ИмяРеквизита);
	ИначеЕсли СтрокаДанных.Тип = "ДопРеквизит" Тогда
		Структура = Новый Структура("Свойство, Измерение, СсылкаПВХ", СтрокаДанных.Тип, СтрокаДанных.Измерение, СтрокаДанных.СсылкаПВХ);
		Закрыть(Структура);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДеревоРеквизитов()
	
	ДеревоТабличноеПолеРеквизиты = ДанныеФормыВЗначение(ТабличноеПолеРеквизиты, Тип("ДеревоЗначений"));
	
	ДеревоТабличноеПолеРеквизиты.Строки.Очистить();
	
	// Поступим поуниверсальней типового решения - получим кэш всех имеющихся дополнительных свойств.
	КэшДопРеквизитов = ПолучитьКэшДопРеквизитов();
	
	Для Каждого СсылкаОснование Из фКэшЗначений.ОснованиеРазворотов Цикл
		ДополнитьТабличноеПолеПоОснованию(ДеревоТабличноеПолеРеквизиты, СсылкаОснование, КэшДопРеквизитов);
	КонецЦикла;
	
	ЗначениеВДанныеФормы(ДеревоТабличноеПолеРеквизиты, ТабличноеПолеРеквизиты);
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьТабличноеПолеПоОснованию(ДеревоТабличноеПолеРеквизиты, СсылкаОснование, КэшДопРеквизитов)
	
	МетаданныеОснования = СсылкаОснование.Метаданные.Метаданные();
	Измерение 			= СсылкаОснование.Измерение;
		
	Попытка
		Реквизиты 		= МетаданныеОснования.Реквизиты;
	Исключение
		Возврат;
	КонецПопытки;
	
	// Добавим строку верхнего уровня
	СтрокаРодитель = ДеревоТабличноеПолеРеквизиты.Строки.Добавить();
	СтрокаРодитель.Измерение 	= Измерение;
	СтрокаРодитель.Реквизит		= Измерение + ": " + МетаданныеОснования.Синоним;
	СтрокаРодитель.Тип			= "Справочник";
	ОписаниеТиповСтрока			= Новый ОписаниеТипов("Строка");
	
	Для Каждого Реквизит Из Реквизиты Цикл
		
		Если Реквизит.Тип = ОписаниеТиповСтрока И Реквизит.Тип.КвалификаторыСтроки.Длина = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаРеквизит = СтрокаРодитель.Строки.Добавить();
		СтрокаРеквизит.Измерение 	= Измерение;
		СтрокаРеквизит.ИмяРеквизита	= Реквизит.Имя;
		СтрокаРеквизит.Реквизит		= Реквизит.Синоним;
		СтрокаРеквизит.Тип			= "Реквизит";
		
	КонецЦикла;
	
	Если КэшДопРеквизитов <> Неопределено Тогда
		
		// Найдем в кэшэ доп.реквизитов допики для такого имени объекта метаданных.
		ИмяМетаданных 	= МетаданныеОснования.Имя;
		Отбор 			= Новый Структура("ИмяМетаданных", ИмяМетаданных);
		СтрокиКэша 		= КэшДопРеквизитов.НайтиСтроки(Отбор);
		
		Для Каждого СтрокаКэша Из СтрокиКэша Цикл
			
			СтрокаРеквизит = СтрокаРодитель.Строки.Добавить();
			СтрокаРеквизит.Измерение 	= Измерение;
			СтрокаРеквизит.ИмяРеквизита	= "";
			СтрокаРеквизит.Реквизит		= СтрокаКэша.Свойство.Наименование + " (доп. реквизит)";
			СтрокаРеквизит.СсылкаПВХ	= СтрокаКэша.Свойство;
			СтрокаРеквизит.Тип			= "ДопРеквизит";
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКэшДопРеквизитов()
	
	Если Метаданные.РегистрыСведений.Найти("ЗначенияСвойствОбъектов") = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Объект,
	|	ЗначенияСвойствОбъектов.Свойство
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗначенияСвойствОбъектов.Объект,
	|	ЗначенияСвойствОбъектов.Свойство");
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Результат.Колонки.Добавить("ИмяМетаданных");
	
	Для Каждого Элемент Из Результат Цикл
		Элемент.ИмяМетаданных = Элемент.Объект.Метаданные().Имя;
	КонецЦикла;
	
	Результат.Свернуть("ИмяМетаданных, Свойство");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
