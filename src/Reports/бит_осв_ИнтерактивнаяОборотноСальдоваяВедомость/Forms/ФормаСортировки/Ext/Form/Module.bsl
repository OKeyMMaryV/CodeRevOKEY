
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	фКэшЗначений = Новый Структура("АдресТаблицы", Параметры.ТаблицаСортировки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если фКэшЗначений.АдресТаблицы <> Неопределено Тогда
		ЗаполнитьКолонкиПоТаблице();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьВСписок(Команда)
	
	ТекСписка = Элементы.СписокКолонок.ТекущиеДанные;
	
	Если ТекСписка <> Неопределено Тогда
		Отбор = Новый Структура("Колонка", ТекСписка.Значение);
		Если ПараметрыСортировки.НайтиСтроки(Отбор).Количество() = 0 Тогда
			НовСтрока = ПараметрыСортировки.Добавить();
			НовСтрока.Колонка = ТекСписка.Значение;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзСписка(Команда)
	
	ТекущаяСтрока = Элементы.ПараметрыСортировки.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		ПараметрыСортировки.Удалить(ТекущаяСтрока);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрыть(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Сортировать(Команда)
	
	СтрокаСортировки = ПолучитьСтрокуСортировки();
	СортироватьНаСервере(СтрокаСортировки);
	Закрыть(фКэшЗначений.АдресТаблицы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьКолонкиПоТаблице()
	
	ТаблицаСортировки = ПолучитьИзВременногоХранилища(фКэшЗначений.АдресТаблицы);
	
	ПараметрыСортировки.Очистить();
	СписокКолонок.Очистить();
	
	Для Каждого Колонка Из ТаблицаСортировки.Колонки Цикл
		Если Колонка.Имя <> "ИмяМакета" и Колонка.Имя <> "Расшифровка" и Колонка.Имя <> "Уровень" и Колонка.Имя <> "Уровень_" и Колонка.Имя <> "ЭтоГруппа_" и Колонка.Имя <> "Отбор" Тогда
			СписокКолонок.Добавить(Колонка.Имя, Колонка.Заголовок);
		КонецЕсли;
	КонецЦикла;
	
	// Изменение кода. Начало. 18.11.2014{{
	// помещаем повторно, т.к. если это не сделать - таблица исчезает из ВременногоХранилища.
     фКэшЗначений.АдресТаблицы = ПоместитьВоВременноеХранилище(ТаблицаСортировки, УникальныйИдентификатор);
   // Изменение кода. Конец. 18.11.2014}}
	
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтрокуСортировки()
	
	СтрокаСортировки = "";
	
	КоличествоСорт = 0;
	
	Для Каждого Элемент Из ПараметрыСортировки Цикл
		
		КоличествоСорт = КоличествоСорт  + 1;
		
		Если КоличествоСорт > 1 Тогда
			СтрокаСортировки = СтрокаСортировки + ", "
		КонецЕсли;
		
		СтрокаСортировки = СтрокаСортировки + " " + Элемент.Колонка + " " + ?(Элемент.Сортировка = "По возрастанию", "Возр", "Убыв");
		
	КонецЦикла;
	
	Возврат СтрокаСортировки;
	
КонецФункции

&НаСервере
Процедура СортироватьНаСервере(СтрокаСортировки)
	
	ТаблицаСортировки = ПолучитьИзВременногоХранилища(фКэшЗначений.АдресТаблицы);
	ТаблицаСортировки.Сортировать(СтрокаСортировки);
	
	// Изменение кода. Начало. 18.11.2014{{
	// помещаем адрес отсортированной таблицы.
	фКэшЗначений.АдресТаблицы = ПоместитьВоВременноеХранилище(ТаблицаСортировки, УникальныйИдентификатор);
	// Изменение кода. Конец. 18.11.2014}}
	
КонецПроцедуры

#КонецОбласти
