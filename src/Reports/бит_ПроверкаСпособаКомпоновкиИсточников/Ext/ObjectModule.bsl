#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область СлужебныйПрограммныйИнтерфейс
			
// Процедура выполняет проверку формирования отчета.
// 
// Параметры:
//  ТД  			 - ТабличныйДокумент - первоначальный табличный документ.
//  ТД_Свернуто  	 - ТабличныйДокумент - свернутый табличный документ.
//  ОтборВОтчете 	 - Структура - структура отбораю
//  ТаблицаПараметры - ТаблицаЗначений - таблица параметров.
// 
Процедура ВыполнитьПроверку(ТД, ТД_Свернуто, ОтборВОтчете, ТаблицаПараметры) Экспорт

	ГраницаНач = Период.ДатаНачала;
	ГраницаКон = Новый Граница(Период.ДатаОкончания, ВидГраницы.Включая);
	
	СтруктураПараметров = бит_МеханизмПолученияДанных.ЗаполнитьСтруктуруПараметровИзТаблицы(ТаблицаПараметры);
	
	СтрОбъект = Новый Структура;
	СтрОбъект.Вставить("ВалютаДокумента"   ,Константы.ВалютаРегламентированногоУчета.Получить());
	СтрОбъект.Вставить("КурсДокумента"     ,1);
	СтрОбъект.Вставить("КратностьДокумента",1);
	СтрОбъект.Вставить("ДатаОкончания"     ,Период.ДатаОкончания);
	
	бит_МеханизмПолученияДанных.ДобавитьОбязательныеПараметрыПроизвольногоОтчета(СтрОбъект,СтруктураПараметров);
	
	Если ТипЗнч(СпособКомпоновки) = Тип("СправочникСсылка.бит_ИсточникиДанных") Тогда
		
		ТД.Очистить();					
		ТД.ТолькоПросмотр = Истина;
		
		Если Не ЗначениеЗаполнено(СпособКомпоновки) Тогда
			ТекстСообщения = Нстр("ru = 'Не заполнен источник данных'");
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		КонецЕсли;
		
		СтрПар = бит_МеханизмПолученияДанных.КонструкторПараметры_ПолучитьДанныеПоИсточнику();
		СтрПар.Параметры                = СтруктураПараметров;
		СтрПар.ОтборВОтчете             = ОтборВОтчете;
		СтрПар.НастройкаПулаПодключений = НастройкаПулаПодключений;
		
		ТаблицаРезультат = бит_МеханизмПолученияДанных.ПолучитьДанныеПоИсточнику(СпособКомпоновки
																				,ГраницаНач
																				,ГраницаКон
																				,СтрПар);
		
		
		Макет = ПолучитьМакет("Макет");
		ВывестиТЗ(ТД,Макет,ТаблицаРезультат);
		
	ИначеЕсли ТипЗнч(СпособКомпоновки) = Тип("СправочникСсылка.бит_СпособыКомпоновкиИсточниковДанных") Тогда
		
		МассивЭлементов = ЭлементыДанных.ВыгрузитьКолонку("ЭлементДанных");
		Если МассивЭлементов.Количество()=0 Тогда
			МассивЭлементов = Неопределено;
		КонецЕсли; 
		
		ПоказыватьИндикатор = Не бит_УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("НеОтображатьИндикаторКомпоновкиИсточников",
								бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь"));
								
			Если Не ЗначениеЗаполнено(СпособКомпоновки) Тогда
			ТекстСообщения = Нстр("ru = 'Не заполнен способ компоновки'");
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		КонецЕсли;

		СтрПар = бит_МеханизмПолученияДанных.КонструкторПараметры_ПолучитьДанныеПоСпособуКомпоновки();
		СтрПар.Параметры                = СтруктураПараметров;
		СтрПар.МассивЭлементов          = МассивЭлементов;
		СтрПар.ОтборВОтчете             = ОтборВОтчете;
		СтрПар.ПоказыватьИндикатор      = ПоказыватьИндикатор;
		СтрПар.НастройкаПулаПодключений = НастройкаПулаПодключений;
		
		ТаблицаРезультат = бит_МеханизмПолученияДанных.ПолучитьДанныеПоИсточникам(СпособКомпоновки
																			,ГраницаНач
																			,ГраницаКон
																			,СтрПар);
		
																			
		бит_МеханизмПолученияДанных.ДополнитьРезультатИВыполнитьРасчет(СпособКомпоновки,ТаблицаРезультат);
																			
		ТД.Очистить();					
		ТД.ТолькоПросмотр = Истина;
		Макет = ПолучитьМакет("Макет");
		ВывестиТЗ(ТД,Макет,ТаблицаРезультат);
		
		
		МассивРесурсов   = бит_МеханизмПолученияДанных.ПолучитьСписокПолейДляСпособаКомпоновки(СпособКомпоновки,"Ресурс");
		ТаблицаРезультат = бит_МеханизмПолученияДанных.СвернутьРезультат(ТаблицаРезультат,МассивРесурсов);
		
		ТД_Свернуто.Очистить();					
		ТД_Свернуто.ТолькоПросмотр = Истина;
		Макет = ПолучитьМакет("Макет");
		ВывестиТЗ(ТД_Свернуто,Макет,ТаблицаРезультат);
		
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура выводит табличный документ.
// 
// Параметры:
//  ТД    - ТабличныйДокумент - первоначальный табличный документ.
//  Макет.
//  ТЗ.
// 
Процедура ВывестиТЗ(ТД, Макет, ТЗ)

	ОблМакета = Макет.ПолучитьОбласть("Шапка|Начало");	
	ТД.Вывести(ОблМакета);
	ОблМакета = Макет.ПолучитьОбласть("Шапка|Колонка");
	Для каждого Колонка Из ТЗ.Колонки Цикл
		
		ОблМакета.Параметры.ИмяПоказателя = Колонка.Имя;
		ТД.Присоединить(ОблМакета);
		
	КонецЦикла; 
	
	ОблНачало  =   Макет.ПолучитьОбласть("Строка|Начало");
	ОблМакета  =   Макет.ПолучитьОбласть("Строка|Колонка");
	
	Для каждого СтрокаТаблицы Из ТЗ Цикл
		
		ТД.Вывести(ОблНачало);
		
		
		Для каждого Колонка Из ТЗ.Колонки Цикл
			
			ТекЗначение = СтрокаТаблицы[Колонка.Имя];
			Если ТипЗнч(ТекЗначение) = Тип("Структура") Тогда
				
				ОблМакета.Параметры.ЗначениеПоказателя  = ТекЗначение.Представление;
				ОблМакета.Параметры.ЗначениеРасшифровки = ТекЗначение;
				
			Иначе	
				
				ОблМакета.Параметры.ЗначениеПоказателя = ТекЗначение;
				ОблМакета.Параметры.ЗначениеРасшифровки= ТекЗначение; 
				
			КонецЕсли; 
			ТД.Присоединить(ОблМакета);
			
		КонецЦикла; 
		
	КонецЦикла; 

КонецПроцедуры

#КонецОбласти

#КонецЕсли
