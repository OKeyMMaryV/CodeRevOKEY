
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если Параметры.Свойство("ТекущийОбъект") = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	МетаданныеОбъекта = Метаданные.Отчеты.бит_ПланФактныйАнализУниверсальный;
	фПолноеИмяОтчета  = МетаданныеОбъекта.ПолноеИмя();
	
	// Загрузка параметров формы
	ПредставлениеТекущегоВарианта 				 = Параметры.ПредставлениеТекущегоВарианта;
	ПредставлениеТекущихПользовательскихНастроек = Параметры.ПредставлениеТекущихПользовательскихНастроек;
	
	// ФСписокПараметровВывода 	  = Параметры.фСписокПараметровВывода;
	фСтруктураСохраненныхНастроек = Параметры.фСтруктураСохраненныхНастроек;	
	ПараметрыКУстановке 		  = Параметры.ПараметрыКУстановке;	
	// ФИдНастроекПоУмолчанию 	 	  = Параметры.фИдНастроекПоУмолчанию;
	                                                              	
	// Загрузка данных отчета
	ОтчетОбъект = ДанныеФормыВЗначение(Параметры.ТекущийОбъект, Тип("ОтчетОбъект.бит_ПланФактныйАнализУниверсальный"));
	ЗначениеВДанныеФормы(ОтчетОбъект, Отчет);
	
	// Заголовок формы
	ЭтаФорма.Заголовок = "Вариант """ + ПредставлениеТекущегоВарианта + """ отчета """ + МетаданныеОбъекта.Синоним + """";
	
	// Текущая страница
	Элементы.ПанельОсновная.ТекущаяСтраница = Элементы.СтраницаКомпоновщик;
	
	// Заполнение СКД
	ЗаполнитьСКД(Отчет.КомпоновщикНастроек.ПолучитьНастройки(), Отчет.КомпоновщикНастроек.ПользовательскиеНастройки, Истина);
		
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидОтчетаПриИзменении(Элемент)
	
	ПерезаполнитьСКД();
			
КонецПроцедуры // ВидОтчетаПриИзменении()

&НаКлиенте
Процедура ВидОтчетаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
			
КонецПроцедуры // ВидОтчетаОчистка()

&НаКлиенте
Процедура СценарииСравненияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	ТекущиеДанные = Элементы.СценарииСравнения.ТекущиеДанные;

	Если Копирование Тогда // Копирование
									 		
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		Иначе
			
			НоваяСтрока = Отчет.СценарииСравнения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущиеДанные);
			НоваяСтрока.Эталон = Ложь;	
								
		КонецЕсли;    		
		
	Иначе // Добавление		
				
		НоваяСтрока = Отчет.СценарииСравнения.Добавить();
		Если Отчет.СценарииСравнения.Количество() = 1 Тогда // Если первая
			
			НоваяСтрока.Эталон = Истина;
			
		Иначе
			
			СтрОтбор = Новый Структура("Эталон" , Истина);
			МассивСтрок = Отчет.СценарииСравнения.НайтиСтроки(СтрОтбор);
			Если МассивСтрок.Количество() > 0 Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, МассивСтрок[0], "ДатаНачала, ДатаОкончания");
			КонецЕсли;
					
		КонецЕсли;
									
	КонецЕсли; 
	
	// Установка текущей строки
	Элемент.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор(); 
	
	Если ЗначениеЗаполнено(НоваяСтрока.Сценарий) Тогда
		ПерезаполнитьСКД();
	КонецЕсли;             	
		
КонецПроцедуры // СценарииСравненияПередНачаломДобавления()

&НаКлиенте
Процедура СценарииСравненияПослеУдаления(Элемент)
	
	Если Отчет.СценарииСравнения.Количество() > 0 Тогда
	
		СтрОтбор = Новый Структура("Эталон" , Истина);
		МассивСтрок = Отчет.СценарииСравнения.НайтиСтроки(СтрОтбор);
		
		Если МассивСтрок.Количество() = 0 Тогда
			
			// Установка флага эталон для текущей строки.
			Отчет.СценарииСравнения[0].Эталон = Истина;
			
		КонецЕсли; 
	
	КонецЕсли;
	
	ПерезаполнитьСКД();
		
КонецПроцедуры // СценарииСравненияПослеУдаления()

&НаКлиенте
Процедура СценарииСравненияСценарийПриИзменении(Элемент)
	
	ПерезаполнитьСКД();
	
КонецПроцедуры // СценарииСравненияСценарийПриИзменении()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СценарииЭталон(Команда)
	
	ТекущиеДанные = Элементы.СценарииСравнения.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Для каждого СтрокаСценария Из Отчет.СценарииСравнения Цикл
			СтрокаСценария.Эталон = Ложь; 	
		КонецЦикла;  	
			 	
		ТекущиеДанные.Эталон = Истина;	
		
	КонецЕсли;
	
	ПерезаполнитьСКД();
		
КонецПроцедуры // СценарииЭталон()

&НаКлиенте
Процедура СценарииНастроитьПериод(Команда)
	
	ТекущиеДанные = Элементы.СценарииСравнения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	бит_РаботаСДиалогамиКлиент.ОткрытьДиалогСтандартногоПериодаПоДатам(ТекущиеДанные);
	
КонецПроцедуры // СценарииНастроитьПериод()


&НаКлиенте
Процедура КомандаЗавершитьРедактирование(Команда)
	
	СтруктураПараметров = Новый Структура;  	
	СтруктураПараметров.Вставить("ВидОтчета" 		   , Отчет.ВидОтчета);
	СтруктураПараметров.Вставить("СценарииСравнения"   , Отчет.СценарииСравнения); 		
	СтруктураПараметров.Вставить("НастройкиКд" 		   , ПолучитьНастройкиКд());
	СтруктураПараметров.Вставить("ПараметрыКУстановке" , ПараметрыКУстановке);	
	
	// Оповещение формы отчета
	Оповестить("ИзмененВариант_" + фПолноеИмяОтчета, СтруктураПараметров);
	
	Закрыть();
	
КонецПроцедуры // КомандаЗавершитьРедактирование()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПоляГруппировкиНедоступны()
	
	Элементы.СтраницыПолейГруппировки.ТекущаяСтраница = Элементы.НедоступныеНастройкиПолейГруппировки;
					
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПоляДоступны(ЭлементСтруктуры)
	
	Если Отчет.КомпоновщикНастроек.Настройки.НаличиеВыбораУЭлемента(ЭлементСтруктуры) Тогда
				
		ЛокальныеВыбранныеПоля = Истина;
		Элементы.СтраницыПолейВыбора.ТекущаяСтраница = Элементы.НастройкиВыбранныхПолей;
			
	Иначе
			
		ЛокальныеВыбранныеПоля = Ложь;
		Элементы.СтраницыПолейВыбора.ТекущаяСтраница = Элементы.ОтключенныеНастройкиВыбранныхПолей;
			
	КонецЕсли;
		
	Элементы.ЛокальныеВыбранныеПоля.ТолькоПросмотр = Ложь;
					
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПоляНедоступны()
	
	ЛокальныеВыбранныеПоля = Ложь;
	Элементы.ЛокальныеВыбранныеПоля.ТолькоПросмотр = Истина;
	Элементы.СтраницыПолейВыбора.ТекущаяСтраница = Элементы.НедоступныеНастройкиВыбранныхПолей;
					
КонецПроцедуры

&НаКлиенте
Процедура ОтборДоступен(ЭлементСтруктуры)
	
	Если Отчет.КомпоновщикНастроек.Настройки.НаличиеОтбораУЭлемента(ЭлементСтруктуры) Тогда
		
		ЛокальныйОтбор = Истина;
		Элементы.СтраницыОтбора.ТекущаяСтраница = Элементы.НастройкиОтбора;
			
	Иначе
		
		ЛокальныйОтбор = Ложь;
		Элементы.СтраницыОтбора.ТекущаяСтраница = Элементы.ОтключенныеНастройкиОтбора;
			
	КонецЕсли;
			
	Элементы.ЛокальныйОтбор.ТолькоПросмотр = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНедоступен()
	
	ЛокальныйОтбор = Ложь;
	Элементы.ЛокальныйОтбор.ТолькоПросмотр = Истина;
	Элементы.СтраницыОтбора.ТекущаяСтраница = Элементы.НедоступныеНастройкиОтбора;
		
КонецПроцедуры

&НаКлиенте
Процедура ПорядокДоступен(ЭлементСтруктуры)
	
	Если Отчет.КомпоновщикНастроек.Настройки.НаличиеПорядкаУЭлемента(ЭлементСтруктуры) Тогда
		
		ЛокальныйПорядок = Истина;
		Элементы.СтраницыПорядка.ТекущаяСтраница = Элементы.НастройкиПорядка;
					
	Иначе
		
		ЛокальныйПорядок = Ложь;
		Элементы.СтраницыПорядка.ТекущаяСтраница = Элементы.ОтключенныеНастройкиПорядка;
					
	КонецЕсли;
			
	Элементы.ЛокальныйПорядок.ТолькоПросмотр = Ложь;
		
КонецПроцедуры

&НаКлиенте
Процедура ПорядокНедоступен()
	
	ЛокальныйПорядок = Ложь;
	Элементы.ЛокальныйПорядок.ТолькоПросмотр = Истина;
	Элементы.СтраницыПорядка.ТекущаяСтраница = Элементы.НедоступныеНастройкиПорядка;
		
КонецПроцедуры

&НаКлиенте
Процедура УсловноеОформлениеДоступно(ЭлементСтруктуры)
	
	Если Отчет.КомпоновщикНастроек.Настройки.НаличиеУсловногоОформленияУЭлемента(ЭлементСтруктуры) Тогда
		
		ЛокальноеУсловноеОформление = Истина;
		Элементы.СтраницыУсловногоОформления.ТекущаяСтраница = Элементы.НастройкиУсловногоОформления;
					
	Иначе
		
		ЛокальноеУсловноеОформление = Ложь;
		Элементы.СтраницыУсловногоОформления.ТекущаяСтраница = Элементы.ОтключенныеНастройкиУсловногоОформления;
					
	КонецЕсли;
			
	Элементы.ЛокальноеУсловноеОформление.ТолькоПросмотр = Ложь;
		
КонецПроцедуры

&НаКлиенте
Процедура УсловноеОформлениеНедоступно()
	
	ЛокальноеУсловноеОформление = Ложь;
	Элементы.ЛокальноеУсловноеОформление.ТолькоПросмотр = Истина;
	Элементы.СтраницыУсловногоОформления.ТекущаяСтраница = Элементы.НедоступныеНастройкиУсловногоОформления;
		
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыВыводаДоступны(ЭлементСтруктуры)
	
	Если Отчет.КомпоновщикНастроек.Настройки.НаличиеПараметровВыводаУЭлемента(ЭлементСтруктуры) Тогда
		
		ЛокальныеПараметрыВывода = Истина;
		Элементы.СтраницыПараметровВывода.ТекущаяСтраница = Элементы.НастройкиПараметровВывода;
					
	Иначе
		
		ЛокальныеПараметрыВывода = Ложь;
		Элементы.СтраницыПараметровВывода.ТекущаяСтраница = Элементы.ОтключенныеНастройкиПараметровВывода;
					
	КонецЕсли;
			
	Элементы.ЛокальныеПараметрыВывода.ТолькоПросмотр = Ложь;
		
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыВыводаНедоступны()
	
	ЛокальныеПараметрыВывода = Ложь;
	Элементы.ЛокальныеПараметрыВывода.ТолькоПросмотр = Истина;
	Элементы.СтраницыПараметровВывода.ТекущаяСтраница = Элементы.НедоступныеНастройкиПараметровВывода;
	
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекНастройкиПриАктивизацииПоля(Элемент)
	
	// Хранит данные выбраной страницы на форме
	Перем ВыбраннаяСтраница;
	
	Если Элементы.КомпоновщикНастроекНастройки.ТекущийЭлемент.Имя = "КомпоновщикНастроекНастройкиНаличиеВыбора" Тогда
		
		ВыбраннаяСтраница = Элементы.СтраницаПолейВыбора;
		
	ИначеЕсли Элементы.КомпоновщикНастроекНастройки.ТекущийЭлемент.Имя = "КомпоновщикНастроекНастройкиНаличиеОтбора" Тогда
		
		ВыбраннаяСтраница = Элементы.СтраницаОтбора;
		
	ИначеЕсли Элементы.КомпоновщикНастроекНастройки.ТекущийЭлемент.Имя = "КомпоновщикНастроекНастройкиНаличиеПорядка" Тогда
		
		ВыбраннаяСтраница = Элементы.СтраницаПорядка;
		
	ИначеЕсли Элементы.КомпоновщикНастроекНастройки.ТекущийЭлемент.Имя = "КомпоновщикНастроекНастройкиНаличиеУсловногоОформления" Тогда
		
		ВыбраннаяСтраница = Элементы.СтраницаУсловногоОформления;
		
	ИначеЕсли Элементы.КомпоновщикНастроекНастройки.ТекущийЭлемент.Имя = "КомпоновщикНастроекНастройкиНаличиеПараметровВывода" Тогда
		
		ВыбраннаяСтраница = Элементы.СтраницаПараметровВывода;
		
	КонецЕсли;
	
	Если ВыбраннаяСтраница <> Неопределено Тогда
		
		Элементы.СтраницыНастроек.ТекущаяСтраница = ВыбраннаяСтраница;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекНастройкиПриАктивизацииСтроки(Элемент)
	
	ЭлементСтруктуры = Отчет.КомпоновщикНастроек.Настройки.ПолучитьОбъектПоИдентификатору(Элементы.КомпоновщикНастроекНастройки.ТекущаяСтрока);
	ТипЭлемента = ТипЗнч(ЭлементСтруктуры); 
	
	Если ТипЭлемента = Неопределено  ИЛИ
		 ТипЭлемента = Тип("КоллекцияЭлементовСтруктурыДиаграммыКомпоновкиДанных") ИЛИ
		 ТипЭлемента = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") Тогда
		 
		ПоляГруппировкиНедоступны();
		ВыбранныеПоляНедоступны();
		ОтборНедоступен();
		ПорядокНедоступен();
		УсловноеОформлениеНедоступно();
		ПараметрыВыводаНедоступны();
		
	ИначеЕсли ТипЭлемента = Тип("НастройкиКомпоновкиДанных") ИЛИ
		 	  ТипЭлемента = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
		
		ПоляГруппировкиНедоступны();
		
		ЛокальныеВыбранныеПоля = Истина;
		Элементы.ЛокальныеВыбранныеПоля.ТолькоПросмотр = Истина;
		Элементы.СтраницыПолейВыбора.ТекущаяСтраница = Элементы.НастройкиВыбранныхПолей;
		
		ЛокальныйОтбор = Истина;
		Элементы.ЛокальныйОтбор.ТолькоПросмотр = Истина;
		Элементы.СтраницыОтбора.ТекущаяСтраница = Элементы.НастройкиОтбора;
		
		ЛокальныйПорядок = Истина;
		Элементы.ЛокальныйПорядок.ТолькоПросмотр = Истина;
		Элементы.СтраницыПорядка.ТекущаяСтраница = Элементы.НастройкиПорядка;
		
		ЛокальноеУсловноеОформление = Истина;
		Элементы.ЛокальноеУсловноеОформление.ТолькоПросмотр = Истина;
		Элементы.СтраницыУсловногоОформления.ТекущаяСтраница = Элементы.НастройкиУсловногоОформления;
		
		ЛокальныеПараметрыВывода = Истина;
		Элементы.ЛокальныеПараметрыВывода.ТолькоПросмотр = Истина;
		Элементы.СтраницыПараметровВывода.ТекущаяСтраница = Элементы.НастройкиПараметровВывода;
		
	ИначеЕсли ТипЭлемента = Тип("ГруппировкаКомпоновкиДанных") ИЛИ
		 	  ТипЭлемента = Тип("ГруппировкаТаблицыКомпоновкиДанных") ИЛИ
		 	  ТипЭлемента = Тип("ГруппировкаДиаграммыКомпоновкиДанных") Тогда
		 
		Элементы.СтраницыПолейГруппировки.ТекущаяСтраница = Элементы.НастройкиПолейГруппировки;
			
		ВыбранныеПоляДоступны(ЭлементСтруктуры);
		ОтборДоступен(ЭлементСтруктуры);
		ПорядокДоступен(ЭлементСтруктуры);
		УсловноеОформлениеДоступно(ЭлементСтруктуры);
		ПараметрыВыводаДоступны(ЭлементСтруктуры);
		
	ИначеЕсли ТипЭлемента = Тип("ТаблицаКомпоновкиДанных") ИЛИ
		      ТипЭлемента = Тип("ДиаграммаКомпоновкиДанных") Тогда
		
		ПоляГруппировкиНедоступны();
		ВыбранныеПоляДоступны(ЭлементСтруктуры);
		ОтборНедоступен();
		ПорядокНедоступен();
		УсловноеОформлениеДоступно(ЭлементСтруктуры);
		ПараметрыВыводаДоступны(ЭлементСтруктуры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКОтчету(Элемент)
	
	ЭлементСтруктуры = Отчет.КомпоновщикНастроек.Настройки.ПолучитьОбъектПоИдентификатору(Элементы.КомпоновщикНастроекНастройки.ТекущаяСтрока);
	НастройкиЭлемента =  Отчет.КомпоновщикНастроек.Настройки.НастройкиЭлемента(ЭлементСтруктуры);
	Элементы.КомпоновщикНастроекНастройки.ТекущаяСтрока = Отчет.КомпоновщикНастроек.Настройки.ПолучитьИдентификаторПоОбъекту(НастройкиЭлемента);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛокальныеВыбранныеПоляПриИзменении(Элемент)
	
	Если ЛокальныеВыбранныеПоля Тогда
		
		Элементы.СтраницыПолейВыбора.ТекущаяСтраница = Элементы.НастройкиВыбранныхПолей;
			
	Иначе
		
		Элементы.СтраницыПолейВыбора.ТекущаяСтраница = Элементы.ОтключенныеНастройкиВыбранныхПолей;

		ЭлементСтруктуры = Отчет.КомпоновщикНастроек.Настройки.ПолучитьОбъектПоИдентификатору(Элементы.КомпоновщикНастроекНастройки.ТекущаяСтрока);
		Отчет.КомпоновщикНастроек.Настройки.ОчиститьВыборЭлемента(ЭлементСтруктуры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЛокальныйОтборПриИзменении(Элемент)
	
	Если ЛокальныйОтбор Тогда
		
		Элементы.СтраницыОтбора.ТекущаяСтраница = Элементы.НастройкиОтбора;
			
	Иначе
		
		Элементы.СтраницыОтбора.ТекущаяСтраница = Элементы.ОтключенныеНастройкиОтбора;

		ЭлементСтруктуры = Отчет.КомпоновщикНастроек.Настройки.ПолучитьОбъектПоИдентификатору(Элементы.КомпоновщикНастроекНастройки.ТекущаяСтрока);
		Отчет.КомпоновщикНастроек.Настройки.ОчиститьОтборЭлемента(ЭлементСтруктуры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЛокальныйПорядокПриИзменении(Элемент)
	
	Если ЛокальныйПорядок Тогда
		
		Элементы.СтраницыПорядка.ТекущаяСтраница = Элементы.НастройкиПорядка;
					
	Иначе
		
		Элементы.СтраницыПорядка.ТекущаяСтраница = Элементы.ОтключенныеНастройкиПорядка;
					
		ЭлементСтруктуры = Отчет.КомпоновщикНастроек.Настройки.ПолучитьОбъектПоИдентификатору(Элементы.КомпоновщикНастроекНастройки.ТекущаяСтрока);
		Отчет.КомпоновщикНастроек.Настройки.ОчиститьПорядокЭлемента(ЭлементСтруктуры);
		
	КонецЕсли;
				
КонецПроцедуры

&НаКлиенте
Процедура ЛокальноеУсловноеОформлениеПриИзменении(Элемент)

	Если ЛокальноеУсловноеОформление Тогда
		
		Элементы.СтраницыУсловногоОформления.ТекущаяСтраница = Элементы.НастройкиУсловногоОформления;
					
	Иначе
		
		Элементы.СтраницыУсловногоОформления.ТекущаяСтраница = Элементы.ОтключенныеНастройкиУсловногоОформления;
					
		ЭлементСтруктуры = Отчет.КомпоновщикНастроек.Настройки.ПолучитьОбъектПоИдентификатору(Элементы.КомпоновщикНастроекНастройки.ТекущаяСтрока);
		Отчет.КомпоновщикНастроек.Настройки.ОчиститьУсловноеОформлениеЭлемента(ЭлементСтруктуры);
					
	КонецЕсли;
				
КонецПроцедуры

&НаКлиенте
Процедура ЛокальныеПараметрыВыводаПриИзменении(Элемент)
	
	Если ЛокальныеПараметрыВывода Тогда
		
		Элементы.СтраницыПараметровВывода.ТекущаяСтраница = Элементы.НастройкиПараметровВывода;
					
	Иначе
		
		Элементы.СтраницыПараметровВывода.ТекущаяСтраница = Элементы.ОтключенныеНастройкиПараметровВывода;
					
		ЭлементСтруктуры = Отчет.КомпоновщикНастроек.Настройки.ПолучитьОбъектПоИдентификатору(Элементы.КомпоновщикНастроекНастройки.ТекущаяСтрока);
		Отчет.КомпоновщикНастроек.Настройки.ОчиститьПараметрыВыводаЭлемента(ЭлементСтруктуры);
	КонецЕсли;
			
КонецПроцедуры

// Функция получает настройки компоновки данных (вариант).
// 
// Параметры:
//  Нет
//  
// Возвращаемое значение:
//   НастройкиКомпоновкиДанных
// 
&НаСервере
Функция ПолучитьНастройкиКд()

	Возврат Отчет.КомпоновщикНастроек.ПолучитьНастройки();
	
КонецФункции // ПолучитьНастройкиКд()

// Процедура заполняет СКД и инициализирует настройки компоновщика.
// 
// Параметры:
//  СохрНастройкиПользователя - ПользовательскиеНастройкиКомпоновкиДанных (По умолчанию = Неопределено).
//  ВосстановитьНастройки 	  - Булево (По умолчанию = Ложь).
// 
&НаСервере
Процедура ЗаполнитьСКД(ТекущиеНастройкиКд = Неопределено, ТекущиеНастройкиПользователяКд = Неопределено, ВосстановитьНастройки = Ложь)
	
	// Проверка возможности формирования отчета
	Если Отчет.СценарииСравнения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	СтрОтбор = Новый Структура("Эталон" , Истина);
	МассивСтрок = Отчет.СценарииСравнения.НайтиСтроки(СтрОтбор);
	Если МассивСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Сформируем СКД
	ОтчетОбъект = ДанныеФормыВЗначение(Отчет, Тип("ОтчетОбъект.бит_ПланФактныйАнализУниверсальный"));
	АдресХранилищаСКД = ОтчетОбъект.СформироватьСКД(ТекущиеНастройкиКд, ТекущиеНастройкиПользователяКд, фСтруктураСохраненныхНастроек, ВосстановитьНастройки, Ложь, ПараметрыКУстановке);
	ЗначениеВДанныеФормы(ОтчетОбъект, Отчет);
	
КонецПроцедуры // ЗаполнитьСКД()

// Процедура перезаполняетСКД по настройкам компоновщика.
// 
// Параметры:
//  ВосстановитьНастройки 	  - Булево (По умолчанию = Ложь).
// 
&НаСервере
Процедура ПерезаполнитьСКД(ВосстановитьНастройки = Ложь)

	// Настройки по умолчанию
	ТекущиеНастройкиКд 			   = Отчет.КомпоновщикНастроек.ПолучитьНастройки();
	ТекущиеНастройкиПользователяКд = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки;
	
	// Заполнение СКД
	ЗаполнитьСКД(ТекущиеНастройкиКд, ТекущиеНастройкиПользователяКд, ВосстановитьНастройки);	

КонецПроцедуры // ПерезаполнитьСКД()

#КонецОбласти

