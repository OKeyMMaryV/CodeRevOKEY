#Область ОбработчикиСобытийФормы

// Процедура - обработчик события "ПриСозданииНаСервере" формы.
// 
&НаСервере
 Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Отчет);

	// Значения по-умолчанию
	Отчет.ДатаФормирования = ТекущаяДата();

	Параметры.Свойство("Процесс", Отчет.Процесс);

	Если Параметры.Свойство("СформироватьПриОткрытии") И Параметры.СформироватьПриОткрытии = Истина Тогда
	 
		СтрРегистрация = Новый Структура;
		бит_ук_СлужебныйСервер.РегистрацияНачалоСобытияВФорме(Ложь, СтрРегистрация, ЭтотОбъект.ИмяФормы);

		СформироватьОтчет(Отчет.Процесс, СтрРегистрация);

	КонецЕсли; 

	Элементы.Процесс.ТолькоПросмотр = ЗначениеЗаполнено(Отчет.Процесс);
	 
 КонецПроцедуры
 
#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура - действие команды "КомандаСформировать".
// 
&НаКлиенте
Процедура КомандаСформировать(Команда)
	
	СтрРегистрация = Новый Структура;
    бит_ук_СлужебныйВызовСервера.РегистрацияНачалоСобытия(Ложь, СтрРегистрация, ЭтотОбъект.ИмяФормы);

	СформироватьОтчет(Отчет.Процесс, СтрРегистрация);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура выполняет формирование отчета.
// 
&НаСервере
Процедура СформироватьОтчет(Процесс, СтрРегистрация)  Экспорт

	 Отчет.Процесс = Процесс;
	 ОтчетОбъект = ДанныеФормыВЗначение(Отчет, Тип("ОтчетОбъект.бит_ОтчетСтатусПроцесса"));
	 ОтчетОбъект.ВывестиОтчет(Результат);
	 
	 бит_ук_СлужебныйСервер.РегистрацияФормированиеОтчета(Ложь, СтрРегистрация);

 КонецПроцедуры // СформироватьОтчет()
 
#КонецОбласти

