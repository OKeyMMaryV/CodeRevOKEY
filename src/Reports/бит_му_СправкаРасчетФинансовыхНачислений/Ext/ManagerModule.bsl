#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Функция возвращает сформированный табличный документ.
// 
// Параметры:
//  СтруктураПараметров - Структура - структура параметров.
// 	ТабДокумент         - ТабличныйДокумент (По умолчанию = неопределено) - табличный документ.
// 
// Возвращаемое значение:
//  ТабличныйДокумент - результат.
// 
Функция СформироватьТабличныйДокумент(СтруктураПараметров, ТабДокумент = Неопределено) Экспорт
		
	ЗапросПоРегистратору =  Ложь;
	Если СтруктураПараметров.Свойство("Регистратор") Тогда
		ЗапросПоРегистратору = Истина;
		ТекстЗапроса = ТекстЗапросаПоРегистратору();
	Иначе
		ТекстЗапроса = ТекстЗапросаСтандарт();
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + 
	               "
				   |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаОборотов.Период,
	               |	ТаблицаОборотов.ВидСтавки,
	               |	ТаблицаОборотов.Объект,
	               |	СУММА(ВЫРАЗИТЬ(ТаблицаОборотовПред.СуммаРегл КАК ЧИСЛО(15, 5))) КАК СуммаРегл
	               |ПОМЕСТИТЬ НарастающийИтог
	               |ИЗ
	               |	ТаблицаОборотов КАК ТаблицаОборотов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОборотов КАК ТаблицаОборотовПред
	               |		ПО ТаблицаОборотов.Объект = ТаблицаОборотовПред.Объект
	               |			И ТаблицаОборотов.Период > ТаблицаОборотовПред.Период
	               |			И ТаблицаОборотов.ВидСтавки = ТаблицаОборотовПред.ВидСтавки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТаблицаОборотов.Период,
	               |	ТаблицаОборотов.Объект,
	               |	ТаблицаОборотов.ВидСтавки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаОборотов.Период,
	               |	ТаблицаОборотов.ВидСтавки,
	               |	ТаблицаОборотов.Объект,
	               |	СУММА(ТаблицаОборотовПред.ПроцентыОборот) КАК ПроцентыОборот
	               |ПОМЕСТИТЬ НарастающийИтогПроценты
	               |ИЗ
	               |	ТаблицаОборотов КАК ТаблицаОборотов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОборотов КАК ТаблицаОборотовПред
	               |		ПО ТаблицаОборотов.Период > ТаблицаОборотовПред.Период
	               |			И ТаблицаОборотов.ВидСтавки = ТаблицаОборотовПред.ВидСтавки
	               |			И ТаблицаОборотов.Объект = ТаблицаОборотовПред.Объект
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТаблицаОборотов.Период,
	               |	ТаблицаОборотов.Объект,
	               |	ТаблицаОборотов.ВидСтавки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КОНЕЦПЕРИОДА(ТаблицаОборотов.Период, МЕСЯЦ) КАК Период,
	               |	ТаблицаОборотов.ВидСтавки КАК ВидСтавки,
	               |	ТаблицаОборотов.Организация,
	               |	ТаблицаОборотов.Контрагент,
	               |	ТаблицаОборотов.ДоговорКонтрагента,
	               |	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(НарастающийИтог.СуммаРегл, 0) - ЕСТЬNULL(НарастающийИтогПроценты.ПроцентыОборот, 0) КАК ЧИСЛО(15, 2))) КАК СуммаОстНачРегл,
	               |	СУММА(ВЫРАЗИТЬ(ТаблицаОборотов.СуммаРегл КАК ЧИСЛО(15, 2))) КАК СуммаРегл,
	               |	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(НарастающийИтог.СуммаРегл, 0) + ЕСТЬNULL(ТаблицаОборотов.СуммаРегл, 0) - ЕСТЬNULL(НарастающийИтогПроценты.ПроцентыОборот, 0) - ЕСТЬNULL(ТаблицаОборотов.ПроцентыОборот, 0) КАК ЧИСЛО(15, 2))) КАК СуммаОстКонРегл,
	               |	СУММА(ВЫРАЗИТЬ(ТаблицаОборотов.ПогашеннаяСуммаФинансовыхПроцентовРеглОборот КАК ЧИСЛО(15, 2))) КАК ПогашеннаяСуммаФинансовыхПроцентовРеглОборот,
	               |	СУММА(ВЫРАЗИТЬ(ТаблицаОборотов.НачисленнаяСуммаФинансовыхПроцентовРеглОборот КАК ЧИСЛО(15, 2))) КАК НачисленнаяСуммаФинансовыхПроцентовРеглОборот,
	               |	СУММА(ВЫРАЗИТЬ(ТаблицаОборотов.СуммаПлатежаРеглОборот КАК ЧИСЛО(15, 2))) КАК СуммаПлатежаРеглОборот,
	               |	СУММА(ВЫРАЗИТЬ(ТаблицаОборотов.СуммаПогашенногоОсновногоДолга КАК ЧИСЛО(15, 2))) КАК СуммаПогашенногоОсновногоДолга,
	               |	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(НарастающийИтогПроценты.ПроцентыОборот, 0) КАК ЧИСЛО(15, 2))) КАК ПроцентыОстатокНач,
	               |	СУММА(ВЫРАЗИТЬ(ТаблицаОборотов.ПроцентыОборот КАК ЧИСЛО(15, 2))) КАК ПроцентыОборот,
	               |	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(НарастающийИтогПроценты.ПроцентыОборот, 0) + ЕСТЬNULL(ТаблицаОборотов.ПроцентыОборот, 0) КАК ЧИСЛО(15, 2))) КАК ПроцентыОстатокКон
	               |ИЗ
	               |	ТаблицаОборотов КАК ТаблицаОборотов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ НарастающийИтог КАК НарастающийИтог
	               |		ПО ТаблицаОборотов.Период = НарастающийИтог.Период
	               |			И ТаблицаОборотов.ВидСтавки = НарастающийИтог.ВидСтавки
	               |			И ТаблицаОборотов.Объект = НарастающийИтог.Объект
	               |		ЛЕВОЕ СОЕДИНЕНИЕ НарастающийИтогПроценты КАК НарастающийИтогПроценты
	               |		ПО ТаблицаОборотов.Период = НарастающийИтогПроценты.Период
	               |			И ТаблицаОборотов.ВидСтавки = НарастающийИтогПроценты.ВидСтавки
	               |			И ТаблицаОборотов.Объект = НарастающийИтогПроценты.Объект
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	КОНЕЦПЕРИОДА(ТаблицаОборотов.Период, МЕСЯЦ),
	               |	ТаблицаОборотов.Организация,
	               |	ТаблицаОборотов.Контрагент,
	               |	ТаблицаОборотов.ДоговорКонтрагента,
	               |	ТаблицаОборотов.ВидСтавки
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВидСтавки УБЫВ,
	               |	Период
	               |ИТОГИ ПО
	               |	ВидСтавки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ НарастающийИтогПроценты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ НарастающийИтог
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ТаблицаОборотов";
				   
	Если СтруктураПараметров.Свойство("ВидСуммы") И СтруктураПараметров.ВидСуммы = "Регл" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ВидСуммы%", "Регл");
		Валюта 		 = Константы.ВалютаРегламентированногоУчета.Получить();
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ВидСуммы%", "Взаиморасчеты");
		Валюта = бит_КурсыВалют.ПолучитьВалютуДоговораКонтрагента(СтруктураПараметров.ДоговорКонтрагента);
	КонецЕсли;
				   
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация",        СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", СтруктураПараметров.ДоговорКонтрагента);
	
	Если СтруктураПараметров.Свойство("Объект") Тогда
		Запрос.УстановитьПараметр("Объект", СтруктураПараметров.Объект);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Объект = &Объект", "");
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("ИзменениеПараметровУчетаОСДата") Тогда
		НачалоПериода = НачалоМесяца(СтруктураПараметров.ИзменениеПараметровУчетаОСДата);
		Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&НачалоПериода", "");
	КонецЕсли;
	
	ВыводитьГрафикАмортизацииДисконта = Истина;
	Если СтруктураПараметров.Свойство("ТипДокумента") 
		И (СтруктураПараметров.ТипДокумента = Тип("ДокументСсылка.бит_му_ПринятиеКУчетуОС")
		ИЛИ СтруктураПараметров.ТипДокумента = Тип("ДокументСсылка.бит_му_ИзменениеПараметровУчетаОС")) Тогда
		ВыводитьГрафикАмортизацииДисконта = Ложь;
	КонецЕсли;
	
	Если ЗапросПоРегистратору Тогда
		Запрос.УстановитьПараметр("Регистратор", СтруктураПараметров.Регистратор);
	КонецЕсли;
	
	// 
	ВыборкаИтогиВидСтавки = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ТабДокумент = Неопределено Тогда
		ТабДок = Новый ТабличныйДокумент;
	Иначе
		ТабДок = ТабДокумент;
		Если ТабДок.ВысотаТаблицы > 0 Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	КонецЕсли;
	
	Макет = ПолучитьМакет("Макет");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокПоказатели");
	ОбластьЗаголовок.Параметры.Заполнить(СтруктураПараметров);
	ТабДок.Вывести(ОбластьЗаголовок);
	
	Если СтруктураПараметров.Свойство("Объект") Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокОбъект");
		ОбластьЗаголовок.Параметры.Заполнить(СтруктураПараметров);
		ТабДок.Вывести(ОбластьЗаголовок);
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("ЭффективнаяСтавкаПроцента") Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокЭСП");
		ОбластьЗаголовок.Параметры.Заполнить(СтруктураПараметров);
		ТабДок.Вывести(ОбластьЗаголовок);
	КонецЕсли;
	
	// Выводим номинальную ставку, если необходимо.
	Если СтруктураПараметров.Свойство("НоминальнаяСтавка") Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокПоказателиНоминальнаяСтавка");
		ОбластьЗаголовок.Параметры.Заполнить(СтруктураПараметров);
		ТабДок.Вывести(ОбластьЗаголовок);
	КонецЕсли;
	
	// Выводим эффективную ставку за месяц, если необходимо.
	Если СтруктураПараметров.Свойство("ЭффективнаяСтавкаПроцентаМесяц") Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокПоказателиЭффективнаяСтавкаМесяц");
		ОбластьЗаголовок.Параметры.Заполнить(СтруктураПараметров);
		ТабДок.Вывести(ОбластьЗаголовок);
	КонецЕсли;
	
	// Выводим номинальную ставку за месяц, если необходимо.
	Если СтруктураПараметров.Свойство("НоминальнаяСтавкаМесяц") Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокПоказателиНоминальнаяСтавкаМесяц");
		ОбластьЗаголовок.Параметры.Заполнить(СтруктураПараметров);
		ТабДок.Вывести(ОбластьЗаголовок);
	КонецЕсли;
	
	ЕстьНоминальнаяСтавка   = Ложь;
	
	// 
	Периоды = Новый ТаблицаЗначений;
	Периоды.Колонки.Добавить("Период");
	Периоды.Колонки.Добавить("СуммаСтавкаЭСП");
	Периоды.Колонки.Добавить("СуммаСтавкаНоминальная");
	
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("СтрокаТаблицы");
	
	// 
	Пока ВыборкаИтогиВидСтавки.Следующий() Цикл
		
		Если ВыборкаИтогиВидСтавки.ВидСтавки = Перечисления.бит_му_ВидыСтавокФинансовыхПроцентов.ЭффективнаяСтавкаПроцента Тогда
			ОбластьЗаголовок 		= Макет.ПолучитьОбласть("ЗаголовокСтавкаЭСП");
			ИмяКолонки				= "СуммаСтавкаЭСП";
		ИначеЕсли ВыборкаИтогиВидСтавки.ВидСтавки = Перечисления.бит_му_ВидыСтавокФинансовыхПроцентов.НоминальнаяСтавкаПроцента Тогда
			ОбластьЗаголовок 		= Макет.ПолучитьОбласть("ЗаголовокСтавкаНоминальная");
			ИмяКолонки				= "СуммаСтавкаНоминальная";
			ЕстьНоминальнаяСтавка 	= Истина;
		Иначе
			Продолжить;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
	
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьШапкаТаблицы.Параметры.Валюта = Валюта;
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		
		НомерСтроки = 0;
		
		// 
		Выборка = ВыборкаИтогиВидСтавки.Выбрать(ОбходРезультатаЗапроса.Прямой);
		
		ТаблицаИтогов = Новый ТаблицаЗначений;
		ТаблицаИтогов.Колонки.Добавить("СуммаПлатежаРеглОборот");
		ТаблицаИтогов.Колонки.Добавить("ПогашеннаяСуммаФинансовыхПроцентовРеглОборот");
		ТаблицаИтогов.Колонки.Добавить("СуммаПогашенногоОсновногоДолга");
		ТаблицаИтогов.Колонки.Добавить("НачисленнаяСуммаФинансовыхПроцентовРеглОборот");
		
		Пока Выборка.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьДетальныхЗаписей.Параметры.Заполнить(Выборка);
			ОбластьДетальныхЗаписей.Параметры.НомерСтроки 		= НомерСтроки;
			ОбластьДетальныхЗаписей.Параметры.ВсегоОстатокКон 	= Выборка.СуммаОстКонРегл + Выборка.ПроцентыОстатокКон;
			
			ТабДок.Вывести(ОбластьДетальныхЗаписей);
			
			// Добавим период
			НоваяСтрока = Периоды.Добавить();
			НоваяСтрока.Период 					= Выборка.Период;
			НоваяСтрока.СуммаСтавкаЭСП 			= 0;
			НоваяСтрока.СуммаСтавкаНоминальная 	= 0;
			НоваяСтрока[ИмяКолонки] 			= Выборка.НачисленнаяСуммаФинансовыхПроцентовРеглОборот;
			
			НоваяСтрока = ТаблицаИтогов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
					 
		КонецЦикла;
		
		ТаблицаИтогов.Свернуть("", "СуммаПлатежаРеглОборот, ПогашеннаяСуммаФинансовыхПроцентовРеглОборот, СуммаПогашенногоОсновногоДолга, НачисленнаяСуммаФинансовыхПроцентовРеглОборот");
		ОбластьИтогов = Макет.ПолучитьОбласть("СтрокаИтоги");
		ОбластьИтогов.Параметры.Заполнить(ТаблицаИтогов[0]);
		ТабДок.Вывести(ОбластьИтогов);
		
	КонецЦикла;
	
	// Выводим "График амортизации дисконта", если необходимо.
	Если ЕстьНоминальнаяСтавка И ВыводитьГрафикАмортизацииДисконта Тогда
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокАмортизацияДисконта");
		ОбластьЗаголовок.Параметры.Заполнить(СтруктураПараметров);
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ШапкаТаблицыАмортизацияДисконта");
		ОбластьЗаголовок.Параметры.Валюта = Валюта;
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("СтрокаТаблицыАмортизацииДисконта");
		
		// Получим все различные периоды
		Периоды.Свернуть("Период", "СуммаСтавкаЭСП, СуммаСтавкаНоминальная");
		Периоды.Сортировать("Период");
		
		НомерСтроки = 0;
	
		Для каждого ТекПериод Из Периоды Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьДетальныхЗаписей.Параметры.Заполнить(Выборка);
			ОбластьДетальныхЗаписей.Параметры.НомерСтроки 	= НомерСтроки;
			ОбластьДетальныхЗаписей.Параметры.Период		= ТекПериод.Период;
			
			СуммаДисконта = ТекПериод.СуммаСтавкаЭСП - ТекПериод.СуммаСтавкаНоминальная;
			ОбластьДетальныхЗаписей.Параметры.СуммаДисконта = СуммаДисконта;
			
			ТабДок.Вывести(ОбластьДетальныхЗаписей);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТабДок;
	
КонецФункции // СформироватьТабличныйДокумент()

Функция ТекстЗапросаСтандарт()

	ТекстЗапроса = "ВЫБРАТЬ 
	               |	бит_му_ФинансовыеНачисленияОбороты.Период,
	               |	бит_му_ФинансовыеНачисленияОбороты.ВидСтавки,
	               |	бит_му_ФинансовыеНачисленияОбороты.Организация,
	               |	бит_му_ФинансовыеНачисленияОбороты.Контрагент,
	               |	бит_му_ФинансовыеНачисленияОбороты.ДоговорКонтрагента,
	               |	бит_му_ФинансовыеНачисленияОбороты.Объект,
	               |	СУММА(ВЫБОР
	               |			КОГДА бит_му_ФинансовыеНачисленияОбороты.РасходДоход = ЗНАЧЕНИЕ(Перечисление.бит_РасходДоход.Расходование)
	               |				ТОГДА - ВЫРАЗИТЬ(бит_му_ФинансовыеНачисленияОбороты.Сумма%ВидСуммы%Оборот КАК ЧИСЛО(15, 5))
	               |			ИНАЧЕ ВЫРАЗИТЬ(бит_му_ФинансовыеНачисленияОбороты.Сумма%ВидСуммы%Оборот КАК ЧИСЛО(15, 5))
	               |		КОНЕЦ) КАК СуммаРегл,
	               |	СУММА(ВЫРАЗИТЬ(бит_му_ФинансовыеНачисленияОбороты.ПогашеннаяСуммаФинансовыхПроцентов%ВидСуммы%Оборот КАК ЧИСЛО(15, 5))) КАК ПогашеннаяСуммаФинансовыхПроцентовРеглОборот,
	               |	СУММА(ВЫРАЗИТЬ(бит_му_ФинансовыеНачисленияОбороты.НачисленнаяСуммаФинансовыхПроцентов%ВидСуммы%Оборот КАК ЧИСЛО(15, 5))) КАК НачисленнаяСуммаФинансовыхПроцентовРеглОборот,
	               |	СУММА(ВЫРАЗИТЬ(бит_му_ФинансовыеНачисленияОбороты.СуммаПлатежа%ВидСуммы%Оборот КАК ЧИСЛО(15, 5))) КАК СуммаПлатежаРеглОборот,
	               |	СУММА(ВЫРАЗИТЬ(бит_му_ФинансовыеНачисленияОбороты.СуммаПлатежа%ВидСуммы%Оборот - бит_му_ФинансовыеНачисленияОбороты.ПогашеннаяСуммаФинансовыхПроцентов%ВидСуммы%Оборот КАК ЧИСЛО(15, 5))) КАК СуммаПогашенногоОсновногоДолга,
	               |	СУММА(ВЫРАЗИТЬ(бит_му_ФинансовыеНачисленияОбороты.НачисленнаяСуммаФинансовыхПроцентов%ВидСуммы%Оборот - бит_му_ФинансовыеНачисленияОбороты.ПогашеннаяСуммаФинансовыхПроцентов%ВидСуммы%Оборот КАК ЧИСЛО(15, 5))) КАК ПроцентыОборот
	               |ПОМЕСТИТЬ ТаблицаОборотов
	               |ИЗ
	               |	РегистрНакопления.бит_му_ФинансовыеНачисления.Обороты(&НачалоПериода, , Месяц, Организация = &Организация И ДоговорКонтрагента = &ДоговорКонтрагента И Объект = &Объект) КАК бит_му_ФинансовыеНачисленияОбороты
				   |
	               |СГРУППИРОВАТЬ ПО
	               |	бит_му_ФинансовыеНачисленияОбороты.Период,
	               |	бит_му_ФинансовыеНачисленияОбороты.Организация,
	               |	бит_му_ФинансовыеНачисленияОбороты.Контрагент,
	               |	бит_му_ФинансовыеНачисленияОбороты.ДоговорКонтрагента,
	               |	бит_му_ФинансовыеНачисленияОбороты.Объект,
	               |	бит_му_ФинансовыеНачисленияОбороты.ВидСтавки
	               |;";
	
				   
	Возврат ТекстЗапроса;

КонецФункции
			   
Функция ТекстЗапросаПоРегистратору()

	ТекстЗапроса = 
	"ВЫБРАТЬ 
	|	НачалоПериода(бит_му_ФинансовыеНачисленияОбороты.Период, Месяц) КАК Период,
	|	бит_му_ФинансовыеНачисленияОбороты.ВидСтавки,
	|	бит_му_ФинансовыеНачисленияОбороты.Организация,
	|	бит_му_ФинансовыеНачисленияОбороты.Контрагент,
	|	бит_му_ФинансовыеНачисленияОбороты.ДоговорКонтрагента,
	|	бит_му_ФинансовыеНачисленияОбороты.Объект,
	|	ВЫБОР
	|			КОГДА бит_му_ФинансовыеНачисленияОбороты.РасходДоход = ЗНАЧЕНИЕ(Перечисление.бит_РасходДоход.Расходование)
	|				ТОГДА - ВЫРАЗИТЬ(бит_му_ФинансовыеНачисленияОбороты.Сумма%ВидСуммы%Оборот КАК ЧИСЛО(15, 5))
	|			ИНАЧЕ ВЫРАЗИТЬ(бит_му_ФинансовыеНачисленияОбороты.Сумма%ВидСуммы%Оборот КАК ЧИСЛО(15, 5))
	|		КОНЕЦ КАК СуммаРегл,
	|	ВЫРАЗИТЬ(бит_му_ФинансовыеНачисленияОбороты.ПогашеннаяСуммаФинансовыхПроцентов%ВидСуммы%Оборот КАК ЧИСЛО(15, 5)) КАК ПогашеннаяСуммаФинансовыхПроцентовРеглОборот,
	|	ВЫРАЗИТЬ(бит_му_ФинансовыеНачисленияОбороты.НачисленнаяСуммаФинансовыхПроцентов%ВидСуммы%Оборот КАК ЧИСЛО(15, 5)) КАК НачисленнаяСуммаФинансовыхПроцентовРеглОборот,
	|	ВЫРАЗИТЬ(бит_му_ФинансовыеНачисленияОбороты.СуммаПлатежа%ВидСуммы%Оборот КАК ЧИСЛО(15, 5)) КАК СуммаПлатежаРеглОборот,
	|	ВЫРАЗИТЬ(бит_му_ФинансовыеНачисленияОбороты.СуммаПлатежа%ВидСуммы%Оборот - бит_му_ФинансовыеНачисленияОбороты.ПогашеннаяСуммаФинансовыхПроцентов%ВидСуммы%Оборот КАК ЧИСЛО(15, 5)) КАК СуммаПогашенногоОсновногоДолга,
	|	ВЫРАЗИТЬ(бит_му_ФинансовыеНачисленияОбороты.НачисленнаяСуммаФинансовыхПроцентов%ВидСуммы%Оборот - бит_му_ФинансовыеНачисленияОбороты.ПогашеннаяСуммаФинансовыхПроцентов%ВидСуммы%Оборот КАК ЧИСЛО(15, 5)) КАК ПроцентыОборот
	|ПОМЕСТИТЬ ТаблицаОборотовИсходная
	|ИЗ
	|	РегистрНакопления.бит_му_ФинансовыеНачисления.Обороты(&НачалоПериода, , Регистратор, Организация = &Организация И ДоговорКонтрагента = &ДоговорКонтрагента И Объект = &Объект) КАК бит_му_ФинансовыеНачисленияОбороты
	|ГДЕ
	|	бит_му_ФинансовыеНачисленияОбороты.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОборотовИсходная.Период КАК Период,
	|	ТаблицаОборотовИсходная.ВидСтавки КАК ВидСтавки,
	|	ТаблицаОборотовИсходная.Организация КАК Организация,
	|	ТаблицаОборотовИсходная.Контрагент КАК Контрагент,
	|	ТаблицаОборотовИсходная.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ТаблицаОборотовИсходная.Объект КАК Объект,
	|	СУММА(ТаблицаОборотовИсходная.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ТаблицаОборотовИсходная.ПогашеннаяСуммаФинансовыхПроцентовРеглОборот) КАК ПогашеннаяСуммаФинансовыхПроцентовРеглОборот,
	|	СУММА(ТаблицаОборотовИсходная.НачисленнаяСуммаФинансовыхПроцентовРеглОборот) КАК НачисленнаяСуммаФинансовыхПроцентовРеглОборот,
	|	СУММА(ТаблицаОборотовИсходная.СуммаПлатежаРеглОборот) КАК СуммаПлатежаРеглОборот,
	|	СУММА(ТаблицаОборотовИсходная.СуммаПогашенногоОсновногоДолга) КАК СуммаПогашенногоОсновногоДолга,
	|	СУММА(ТаблицаОборотовИсходная.ПроцентыОборот) КАК ПроцентыОборот
	|ПОМЕСТИТЬ ТаблицаОборотов
	|ИЗ
	|	ТаблицаОборотовИсходная КАК ТаблицаОборотовИсходная
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОборотовИсходная.Период,
	|	ТаблицаОборотовИсходная.ВидСтавки,
	|	ТаблицаОборотовИсходная.Организация,
	|	ТаблицаОборотовИсходная.Контрагент,
	|	ТаблицаОборотовИсходная.ДоговорКонтрагента,
	|	ТаблицаОборотовИсходная.Объект
	|;";
	
     Возврат ТекстЗапроса;
	 
КонецФункции

#КонецОбласти
 
#КонецЕсли
