#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, МассивПолейРасшифровки = Неопределено) Экспорт
	
	//ЗначениеПанелипользователя = ТиповыеОтчеты.ПолучитьЗначенияНастроекПанелиПользователяОбъекта(ЭтотОбъект);
	
	Результат.Очистить();
	
	НастрокаПоУмолчанию        = КомпоновщикНастроек.ПолучитьНастройки();
	//ТиповыеОтчеты.ПолучитьПримененуюНастройку(ЭтотОбъект);
	//
	//Если МассивПолейРасшифровки <> Неопределено Тогда
	//	ДоработатьНастройкиКомпоновкиДляРасшифровки(МассивПолейРасшифровки);	
	//КонецЕсли; 
	//
	//Настройки = КомпоновщикНастроек.Настройки;
	//
	//ПараметрыДанных = Настройки.ПараметрыДанных;
	//
	//ПараметрыДанных.УстановитьЗначениеПараметра("Сценарий", 				СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("ОперативныйСценарийПланирования"));
	////ПараметрыДанных.УстановитьЗначениеПараметра("БанковскиеСчетаДепозит", 	СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("БанковскиеСчетаДепозит"));
	////ПараметрыДанных.УстановитьЗначениеПараметра("ВалютаРегл", 				Константы.ВалютаРегламентированногоУчета.Получить());
	//
	//ПараметрыДанных.УстановитьЗначениеПараметра("Пользователь_Подготовил", 	глЗначениеПеременной("глТекущийПользователь"));
	//ПараметрыДанных.УстановитьЗначениеПараметра("Пользователь_Утвердил", 	СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("Отчеты_Пользователь_Утверждает"));
	//
	//КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	//МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных
	//	, Настройки
	//	, ДанныеРасшифровки
	//	, ПолучитьМакет("МакетОформленияОтчетовЧерноБелый")
	//	, Тип("ГенераторМакетаКомпоновкиДанных")
	//	);
	//
	//ВнешниеНаборыДанных = Новый Структура;
	//ВнешниеНаборыДанных.Вставить("Показатели", 				ПрочитатьТаблицуПоказателей());
	//ВнешниеНаборыДанных.Вставить("Алгоритмы", 				ПрочитатьАлгоритмыПоказателей(Ложь));
	//	
	//ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	//ПроцессорКомпоновки.Инициализировать(МакетКомпоновки
	//	, ВнешниеНаборыДанных
	//	, ДанныеРасшифровки
	//	, Истина
	//	);
	//
	//ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	//ПроцессорВывода.УстановитьДокумент(Результат);
	//ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	//
	////	
	//КомпоновщикНастроек.ЗагрузитьНастройки(НастрокаПоУмолчанию);
		
КонецФункции
#КонецЕсли