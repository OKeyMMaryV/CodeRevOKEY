
&НаКлиенте
Процедура СформироватьОтчет(Команда)
	СформироватьОтчетНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетНаСервере()
	
	ДокументРезультат.Очистить();
	
	НомерЗаявкиИзШапки = Отчет.ФВБ.бит_БК_НомерЗаявки;
	
	//Формирование таблицы КЛАн
	Если ПустаяСтрока(рекФВБХранБДДС) Тогда 
		
		пТЧБДДС = Отчет.ФВБ.БДДС.Выгрузить(, "Сценарий, Период, ЦФО, СтатьяОборотов, Проект, Аналитика_1, Аналитика_2, Контрагент, ДоговорКонтрагента, бит_БК_СуммаБезНДС");	
		пТЧБДДС.Колонки.бит_БК_СуммаБезНДС.Имя = "Сумма";
	Иначе
		пТЧБДДС = ПолучитьИзВременногоХранилища(рекФВБХранБДДС); 
	КонецЕсли;
	
	Если ТипЗнч(пТЧБДДС) <> Тип("ТаблицаЗначений") Тогда  		
		Возврат;
	КонецЕсли;
	
	пНастройкиВыбораКЗБПоСценариям = бит_БК_Общий.СценариПланированияНастройкиВыбораСумм();
	
	пТекстЗапроса = "ВЫБРАТЬ
	|	ТЧ.Аналитика_1,
	|	ТЧ.Аналитика_2,
	|	ТЧ.Период,
	|	ТЧ.Проект,
	|	ТЧ.СтатьяОборотов,
	|	ТЧ.Сумма,
	|	ТЧ.Сценарий,
	|	ТЧ.Контрагент,
	|	ТЧ.ДоговорКонтрагента,
	|	ТЧ.ЦФО
	|ПОМЕСТИТЬ ТЧФВБ
	|ИЗ
	|	&ТЧ КАК ТЧ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабЧасть.Аналитика_1,
	|	ТабЧасть.Аналитика_2,
	|	""ТЧ_Период"" КАК Период,
	|	""ТЧ_Год_Период"" КАК ПериодГод,
	|	ТабЧасть.Проект,
	|	ТабЧасть.СтатьяОборотов,
	|	ТабЧасть.Контрагент,
	|	ТабЧасть.ДоговорКонтрагента,
	|	ТабЧасть.Сумма,
	|	ТабЧасть.Сценарий,
	|	ТабЧасть.ЦФО
	|ИЗ
	|	ТЧФВБ КАК ТабЧасть";
	
	//Определение настроек выборки по ключевым аналитикам
	//ПЕРИОД.ТЧ
	пТекст_ТЧ_ПериодГод = "";
	пВыражение = бит_БК_Общий.ПолучитьВыражениеДляПериодов(пНастройкиВыбораКЗБПоСценариям, 
	"ТабЧасть.Сценарий", 
	"ТабЧасть.Период",
	пТекст_ТЧ_ПериодГод);
	
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_Год_Период""", пТекст_ТЧ_ПериодГод);	
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_Период""", пВыражение);
	
	Запрос = Новый Запрос;
	Запрос.Текст = пТекстЗапроса;
	Запрос.УстановитьПараметр("ТЧ",	пТЧБДДС);	
	пТЧБДДС = Запрос.Выполнить().Выгрузить();
		
	пТЧБК = бит_БК_общий.БКПоДаннымБДДС(пТЧБДДС, НомерЗаявкиИзШапки,  Отчет.ФВБ);
	
	Если пТЧБК.Количество() = 0 Тогда
		
		Возврат; 
	КонецЕсли;
	
	//Сворачиваем данные по ключевым аналитикам для вывода пользователю
	пТЧБК.Свернуть("Сценарий, ИсхПериод, Период, ЦФО, СтатьяОборотов, Проект, Аналитика_1, Аналитика_2, ЕстьОстатокБюджетаПослеОперацииБольшеНуля, СверхБюджетаПризнак, ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам, ПолнаяСуммаСверхБюджетаПоВсемСтрокам, ОстатокДоОперации, ОстатокПослеОперации, СверхБюджетаПоКлючевым, СуммаКонтроль, СуммаОперации", "");
	
	пЗапрос = Новый Запрос;
	пЗапрос.Текст = 
	"ВЫБРАТЬ
	|	ТабЧасть.СверхБюджетаПризнак КАК СверхБюджетаПризнак,
	|	ВЫРАЗИТЬ(ТабЧасть.СтатьяОборотов КАК Справочник.бит_СтатьиОборотов) КАК СтатьяОборотов,
	|	ТабЧасть.Период КАК Период,
	|	ТабЧасть.ЦФО КАК ЦФО,
	|	ВЫРАЗИТЬ(ТабЧасть.Аналитика_2 КАК Справочник.ОбъектыСтроительства) КАК Аналитика_2,
	|	ВЫРАЗИТЬ(ТабЧасть.Сценарий КАК Справочник.СценарииПланирования) КАК СценарийКонтролируемый,
	|	ТабЧасть.Проект КАК Проект,
	|	ВЫРАЗИТЬ(&пзНомерЗаявкиШапка КАК Документ.бит_ФормаВводаБюджета) КАК Аналитика_1,
	|	ТабЧасть.СуммаОперации КАК СуммаОперации,
	|	ТабЧасть.ОстатокПослеОперации КАК СуммаПревышения,
	|	0 КАК СуммаКорректировки,
	|	ТабЧасть.ИсхПериод КАК ИсхПериод
	|ПОМЕСТИТЬ втТабЧасть
	|ИЗ
	|	&пзТабЧасть КАК ТабЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ДополнительныеСведения.Значение КАК Справочник.бит_БК_Регион) КАК Регион,
	|	ВЫРАЗИТЬ(ДополнительныеСведения.Объект КАК Справочник.ОбъектыСтроительства) КАК Объект
	|ПОМЕСТИТЬ втРегионы
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|		ПО ДополнительныеРеквизитыИСведения.Ссылка = ДополнительныеСведения.Свойство
	|ГДЕ
	|	ДополнительныеРеквизитыИСведения.Заголовок = ""Регион""
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(бит_СоответствияАналитик.ЛеваяАналитика_1 КАК Справочник.СценарииПланирования) КАК СценарийУправляющий,
	|	ВЫРАЗИТЬ(бит_СоответствияАналитик.ПраваяАналитика_1 КАК Справочник.СценарииПланирования) КАК СценарийПодчиненный
	|ПОМЕСТИТЬ втПарыСцКонтроля
	|ИЗ
	|	РегистрСведений.бит_СоответствияАналитик КАК бит_СоответствияАналитик
	|ГДЕ
	|	бит_СоответствияАналитик.ВидСоответствия.Код = ""бит_БК_СценарийВСценарийКонтролируемый""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТабЧасть.СтатьяОборотов КАК СтатьяОборотов,
	|	втТабЧасть.Период КАК Период,
	|	втТабЧасть.ИсхПериод КАК ИсхПериод,
	|	втТабЧасть.СценарийКонтролируемый КАК СценарийКонтролируемый,
	|	втТабЧасть.ЦФО КАК ЦФО,
	|	втТабЧасть.Аналитика_2 КАК Аналитика_2,
	|	ЕСТЬNULL(втРегионы.Регион, ЗНАЧЕНИЕ(Справочник.бит_БК_Регион.ПустаяСсылка)) КАК Регион,
	|	втТабЧасть.Проект КАК Проект,
	|	втТабЧасть.Аналитика_1 КАК Аналитика_1,
	|	втТабЧасть.СуммаОперации КАК СуммаОперации,
	|	втТабЧасть.СуммаПревышения КАК СуммаПревышения,
	|	втТабЧасть.СуммаКорректировки КАК СуммаКорректировки,
	|	ВЫБОР
	|		КОГДА бит_БК_КоррОграниченияПериода.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
	|			ТОГДА НАЧАЛОПЕРИОДА(втТабЧасть.ИсхПериод, ГОД)
	|		КОГДА бит_БК_КоррОграниченияПериода.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Полугодие)
	|			ТОГДА НАЧАЛОПЕРИОДА(втТабЧасть.ИсхПериод, ПОЛУГОДИЕ)
	|		КОГДА бит_БК_КоррОграниченияПериода.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Квартал)
	|			ТОГДА НАЧАЛОПЕРИОДА(втТабЧасть.ИсхПериод, КВАРТАЛ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(втТабЧасть.ИсхПериод, МЕСЯЦ)
	|	КОНЕЦ КАК КоррПериод,
	|	втПарыСцКонтроля.СценарийУправляющий КАК Сценарий,
	|	втТабЧасть.СуммаПревышения КАК СуммаРасхождения,
	|	ВЫРАЗИТЬ(втТабЧасть.СтатьяОборотов КАК Справочник.бит_СтатьиОборотов).ВидСтатьи КАК ВидСтатьиОборотов
	|ИЗ
	|	втТабЧасть КАК втТабЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРегионы КАК втРегионы
	|		ПО втТабЧасть.Аналитика_2 = втРегионы.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПарыСцКонтроля КАК втПарыСцКонтроля
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_БК_КоррОграниченияПериода КАК бит_БК_КоррОграниченияПериода
	|			ПО втПарыСцКонтроля.СценарийУправляющий = бит_БК_КоррОграниченияПериода.Сценарий
	|				И втПарыСцКонтроля.СценарийПодчиненный = бит_БК_КоррОграниченияПериода.СценарийКонтролируемый
	|		ПО втТабЧасть.СценарийКонтролируемый = втПарыСцКонтроля.СценарийПодчиненный
	|ГДЕ
	|	втТабЧасть.СверхБюджетаПризнак = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втТабЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втРегионы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втПарыСцКонтроля";
	
	пЗапрос.УстановитьПараметр("пзТабЧасть", пТЧБК);
	пЗапрос.УстановитьПараметр("пзНомерЗаявкиШапка", НомерЗаявкиИзШапки);
	
	пТЧЗапроса = пЗапрос.Выполнить().Выгрузить();
	
	рекАдресЗапросаКорректировки = ПоместитьВоВременноеХранилище(пТЧЗапроса, Новый УникальныйИдентификатор);
	
	Если пТЧЗапроса.Колонки.Найти("СписокПравилПодбора") = Неопределено Тогда 
		пТЧЗапроса.Колонки.Добавить("СписокПравилПодбора",Новый ОписаниеТипов("СписокЗначений"));
	КонецЕсли;
	
	Если пТЧЗапроса.Колонки.Найти("СписокИДИсточников") = Неопределено Тогда 
		пТЧЗапроса.Колонки.Добавить("СписокИДИсточников",Новый ОписаниеТипов("СписокЗначений"));
	КонецЕсли;
	
	Если пТЧЗапроса.Колонки.Найти("ИДСтроки") = Неопределено Тогда 
		пТЧЗапроса.Колонки.Добавить("ИДСтроки",Новый ОписаниеТипов("Число"));
	КонецЕсли;
	
	рекАдресМассиваАктуальныхПравил = "";	
	Справочники.бит_БК_ПравилаПодбКорректировокИнициаторами.ПолучитьТаблицуИсточниковДляКорректировки(
																рекАдресЗапросаКорректировки, 
																рекИсточникКорректировки, 
																НомерЗаявкиИзШапки, 
																рекАдресМассиваАктуальныхПравил);
																
	Если рекИсточникКорректировки.Количество() = 0 Тогда 
		
		ОтсутствуютИсточникиКорректировки = Истина;	
		Возврат;	

	КонецЕсли;
																
	пТЧЗапроса = ПолучитьИзВременногоХранилища(рекАдресЗапросаКорректировки);
	
	Макет = Отчеты.ок_СредстваДляКорректировкиБюджета.ПолучитьМакет("Макет");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ВидОперацииФВБ = Отчет.ФВБ.ВидОперации;
	ОбластьЗаголовок.Параметры.НомерФВБ       = Отчет.ФВБ.Номер;
	ОбластьЗаголовок.Параметры.ДатаФВБ		  = Отчет.ФВБ.Дата;
	ДокументРезультат.Вывести(ОбластьЗаголовок);
	
	
	ТЧИнвестЗапрос = пТЧЗапроса.Скопировать(Новый Структура("ВидСтатьиОборотов", ПредопределенноеЗначение("Справочник.бит_ВидыСтатейОборотов.ИнвестиционнаяДеятельность")));
	ТЧОперЗапрос   = пТЧЗапроса.Скопировать(Новый Структура("ВидСтатьиОборотов", ПредопределенноеЗначение("Справочник.бит_ВидыСтатейОборотов.Выручка")));
	
	ОбластьГруппировки = Макет.ПолучитьОбласть("ГруппировкаВидСтатьи");
	
	Если ТЧИнвестЗапрос.Количество() > 0 Тогда 
		
		ОбластьГруппировки.Параметры.ВидСтатьи = "ИНВЕСТ";
		
		ДокументРезультат.Вывести(ОбластьГруппировки);
						
		Для Каждого СтрокаТЧ Из ТЧИнвестЗапрос Цикл 
			
			ОбластьШапкаКорректировки = Макет.ПолучитьОбласть("ШапкаКорректировки");
			ДокументРезультат.Вывести(ОбластьШапкаКорректировки);
			
			ОбластьСтрокаКорректировки = Макет.ПолучитьОбласть("СтрокаКорректировки");
			ОбластьСтрокаКорректировки.Параметры.Заполнить(СтрокаТЧ);
			ОбластьСтрокаКорректировки.Параметры.Период = Формат(СтрокаТЧ.Период, "ДФ=dd.MM.yyyy");
			ОбластьСтрокаКорректировки.Параметры.СуммаПревышения = Формат(СтрокаТЧ.СуммаПревышения, "ЧДЦ=2; ЧН=");
			ДокументРезультат.Вывести(ОбластьСтрокаКорректировки);			
			
			ОбластьШапкаИсточника = Макет.ПолучитьОбласть("ШапкаИсточника");
			ДокументРезультат.Вывести(ОбластьШапкаИсточника);
			
			Для Каждого ЭлСписка Из СтрокаТЧ.СписокИДИсточников Цикл 
				мИсточников = рекИсточникКорректировки.НайтиСтроки(Новый Структура("ИДСтроки", ЭлСписка.Значение));
				Если мИсточников.Количество()>0 Тогда 
					ОбластьСтрокаИсточника = Макет.ПолучитьОбласть("СтрокаИсточника");
					ОбластьСтрокаИсточника.Параметры.Заполнить(мИсточников[0]);
					ОбластьСтрокаИсточника.Параметры.ПериодПлана = Формат(мИсточников[0].ПериодПлана, "ДФ=dd.MM.yyyy");
					ОбластьСтрокаИсточника.Параметры.СуммаОстатка = Формат(мИсточников[0].СуммаОстатка, "ЧДЦ=2; ЧН=");
					ДокументРезультат.Вывести(ОбластьСтрокаИсточника);			
				КонецЕсли;				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТЧОперЗапрос.Количество() > 0 Тогда 
		
		ОбластьГруппировки.Параметры.ВидСтатьи = "ОПЕР";
		
		ДокументРезультат.Вывести(ОбластьГруппировки);
					
		Для Каждого СтрокаТЧ Из ТЧОперЗапрос Цикл 
			
			ОбластьШапкаКорректировки = Макет.ПолучитьОбласть("ШапкаКорректировки");
			ДокументРезультат.Вывести(ОбластьШапкаКорректировки);
			
			ОбластьСтрокаКорректировки = Макет.ПолучитьОбласть("СтрокаКорректировки");
			ОбластьСтрокаКорректировки.Параметры.Заполнить(СтрокаТЧ);
			ОбластьСтрокаКорректировки.Параметры.Период = Формат(СтрокаТЧ.Период, "ДФ=dd.MM.yyyy");
			ОбластьСтрокаКорректировки.Параметры.СуммаПревышения = Формат(СтрокаТЧ.СуммаПревышения, "ЧДЦ=2; ЧН=");
			ДокументРезультат.Вывести(ОбластьСтрокаКорректировки);			
			
			ОбластьШапкаИсточника = Макет.ПолучитьОбласть("ШапкаИсточника");
			ДокументРезультат.Вывести(ОбластьШапкаИсточника);
			
			Для Каждого ЭлСписка Из СтрокаТЧ.СписокИДИсточников Цикл 
				мИсточников = рекИсточникКорректировки.НайтиСтроки(Новый Структура("ИДСтроки", ЭлСписка.Значение));
				Если мИсточников.Количество()>0 Тогда 
					ОбластьСтрокаИсточника = Макет.ПолучитьОбласть("СтрокаИсточника");
					ОбластьСтрокаИсточника.Параметры.Заполнить(мИсточников[0]);
					ОбластьСтрокаИсточника.Параметры.ПериодПлана = Формат(мИсточников[0].ПериодПлана, "ДФ=dd.MM.yyyy");
					ОбластьСтрокаИсточника.Параметры.СуммаОстатка = Формат(мИсточников[0].СуммаОстатка, "ЧДЦ=2; ЧН=");
					ДокументРезультат.Вывести(ОбластьСтрокаИсточника);			
				КонецЕсли;				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ДокументРезультат.АвтоМасштаб	  = Истина;
	ДокументРезультат.ОтображатьСетку = Ложь;
	ДокументРезультат.Защита		  = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("рекФВБХранБДДС", рекФВБХранБДДС);
	
	Если Параметры.Свойство("ФВБ")
	   И ЗначениеЗаполнено(Параметры.ФВБ)
	Тогда
		Отчет.ФВБ = Параметры.ФВБ;
		Элементы.ФВБ.Видимость					 = Ложь;
		Элементы.СформироватьОтчет.Видимость 	 = Ложь;
		Элементы.СформироватьОтчет.Доступность   = Ложь;
		
		СформироватьОтчетНаСервере();
		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ОтсутствуютИсточникиКорректировки Тогда 
		ПоказатьПредупреждение(,НСтр("ru = 'Средства для корректировки бюджета отсутствуют'"));		
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры
