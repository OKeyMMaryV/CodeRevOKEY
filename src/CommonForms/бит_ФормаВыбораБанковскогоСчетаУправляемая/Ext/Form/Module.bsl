
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Параметры 
	ТипыВладельцев = Параметры.ТипВладельца;
	ТекущийСчет    = Параметры.ТекущийСчет;
	
	// Установим текущий счет
	Если ЗначениеЗаполнено(ТекущийСчет) Тогда
		Элементы.БанковскиеСчета.ТекущаяСтрока = ТекущийСчет;	
	КонецЕсли;

	ДобавитьТипыВладельцев(); 
		
	ИндТипаВладельца = 0;
	Если ЗначениеЗаполнено(ТекущийСчет) Тогда
		ВладелецСчета 	 = бит_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийСчет,"Владелец");
		Значение 		 = СтрШаблон("СправочникСсылка.%1",ВладелецСчета.Метаданные().Имя);
		Массив    		 = Элементы.ТипВладельцаПредставление.СписокВыбора.ВыгрузитьЗначения();
		ИндТипаВладельца = Массив.Найти(Значение);
		ОтборВладелец    = ВладелецСчета;
		
	ИначеЕсли ЗначениеЗаполнено(Параметры.ТипВладельца) Тогда
		Значение 		 = СтрШаблон("СправочникСсылка.%1",Параметры.ТипВладельца);
		Массив    		 = Элементы.ТипВладельцаПредставление.СписокВыбора.ВыгрузитьЗначения();
		ИндТипаВладельца = Массив.Найти(Значение);
		
	КонецЕсли;
	 
	ТипВладельцаПредставление = Элементы.ТипВладельцаПредставление.СписокВыбора[ИндТипаВладельца].Значение;
	
	Элементы.ОтборВладелец.ОграничениеТипа = Новый ОписаниеТипов(ТипВладельцаПредставление);
	ОтборВладелец              = Элементы.ОтборВладелец.ОграничениеТипа.ПривестиЗначение(ОтборВладелец);
	ОтборВладелецИспользование = ЗначениеЗаполнено(ОтборВладелец);
	
	ПриИзмененииОтбораВладелец(ЭтотОбъект);
	// Добавление кода Конец }}  
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипВладельцаПредставлениеПриИзменении(Элемент)
	
	Элементы.ОтборВладелец.ОграничениеТипа = Новый ОписаниеТипов(ТипВладельцаПредставление);
	ОтборВладелец              = Элементы.ОтборВладелец.ОграничениеТипа.ПривестиЗначение(ОтборВладелец);
	ОтборВладелецИспользование = ЗначениеЗаполнено(ОтборВладелец);
	
	ПриИзмененииОтбораВладелец(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ОтборВладелецПриИзменении(Элемент)
	
	ОтборВладелецИспользование =  ЗначениеЗаполнено(ОтборВладелец);
	ПриИзмененииОтбораВладелец(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВладелецИспользованиеПриИзменении(Элемент)

	ПриИзмененииОтбораВладелец(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыБанковскиеСчета

&НаКлиенте
Процедура БанковскиеСчетаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработкаВыбораБанковскогоСчета();
	
КонецПроцедуры // БанковскиеСчетаВыбор()

#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура - действие команды "КомандаВыбрать".
// 
&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	ОбработкаВыбораБанковскогоСчета();      	
	
КонецПроцедуры // КомандаВыбрать()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура обрабатывает выбор банковского счета.
// 
// Параметры:
//  Нет
// 
&НаКлиенте
Процедура ОбработкаВыбораБанковскогоСчета()

	ТекущиеДанные = Элементы.БанковскиеСчета.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
	
		Счет = ТекущиеДанные.Наименование;
		Закрыть(Счет);	
	
	КонецЕсли;	

КонецПроцедуры // ОбработкаВыбораБанковскогоСчета()

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииОтбораВладелец(Контекст)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
	Контекст.БанковскиеСчета.КомпоновщикНастроек.ФиксированныеНастройки.Отбор,
	"Владелец",
	Контекст.ОтборВладелец,
	,
	,
	Контекст.ОтборВладелецИспользование);
	
	ОтборПоТипуИспользование = НЕ ЗначениеЗаполнено(Контекст.ОтборВладелец);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
	Контекст.БанковскиеСчета.КомпоновщикНастроек.ФиксированныеНастройки.Отбор,
	"ТипВладельца",
	Тип(Контекст.ТипВладельцаПредставление),
	,
	,
	ОтборПоТипуИспользование);

КонецПроцедуры // ПриИзмененииОтбораВладелец

// Процедура добавляет типы владельцев в список выбора
//
&НаСервере
Процедура ДобавитьТипыВладельцев()

	МассивСпр = Новый Массив;
	МассивСпр.Добавить("БанковскиеСчета");
	МассивСпр.Добавить("БанковскиеСчетаКонтрагентов");
	МассивСпр.Добавить("БанковскиеСчетаОрганизаций");

	Для каждого ИмяСпр Из МассивСпр Цикл
		
		Если Метаданные.Справочники.Найти(ИмяСпр) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		мдВладельцы = Метаданные.Справочники[ИмяСпр].Владельцы;
		Для каждого Значение Из мдВладельцы Цикл
			
			Элементы.ТипВладельцаПредставление.СписокВыбора.Добавить(
				СтрШаблон("СправочникСсылка.%1",Значение.Имя),
				Значение.ПредставлениеОбъекта);
	
		КонецЦикла;
		
	КонецЦикла;	
	
КонецПроцедуры // бит_ДобавитьТипыВладельцев()

#КонецОбласти
