
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("Сумма") Тогда
		фОтказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Заполняем реквизиты по умолчанию
	Режим = "Распределение";
	
	// Заполняем реквизиты из параметров
	Период.ДатаНачала 	 = Параметры.ДатаНачала;
	Период.ДатаОкончания = Параметры.ДатаОкончания;
	Периодичность 		 = Параметры.Периодичность;
	
	Если Параметры.Свойство("Сумма") Тогда
	
		Если ТипЗнч(Параметры.Сумма) = Тип("Число") Тогда
			Сумма				 = Параметры.Сумма;	
		Иначе
			СтруктураСумм = Параметры.Сумма;
			СтруктураСумм.Вставить("Расходование", Перечисления.бит_РасходДоход.Расходование);
			РасходДоход = СтруктураСумм.РасходДоход;
			Элементы.РасходДоход.Видимость = Истина;
			Сумма = ?(СтруктураСумм.РасходДоход = СтруктураСумм.Расходование, 
						СтруктураСумм.СуммаРасход, 
						СтруктураСумм.СуммаПриход);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.Свойство("ВидГрафика") Тогда
	     ВидГрафика = Параметры.ВидГрафика;
	Иначе	
	     ВидГрафика = "Общий";
	КонецЕсли;
	
	Если ВидГрафика = "Объектный" Тогда
		Если Параметры.Свойство("Объект") И Параметры.Объект <> Неопределено Тогда
			ТекОбъект = Параметры.Объект;
		ИначеЕсли Параметры.Свойство("ОбъектЭксплуатации") И Параметры.ОбъектЭксплуатации <> Неопределено Тогда	
			ТекОбъект = Параметры.ОбъектЭксплуатации;
		ИначеЕсли Параметры.ТипДоговора = Справочники.бит_ТипыДоговоров.ЦенныеБумаги Тогда
			ТекОбъект = Справочники.ЦенныеБумаги.ПустаяСсылка();
		Иначе
			ТекОбъект = Справочники[бит_ОбщегоНазначения.ПолучитьИмяСправочникаОсновныеСредства()].ПустаяСсылка(); 		
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("СтавкаНДС") Тогда	
		 СтавкаНДС = Параметры.СтавкаНДС; 	
	КонецЕсли; 
	
	Если ВидГрафика = "Объектный" Тогда
	     Элементы.Объект.Видимость    = Истина;
		 Элементы.СтавкаНДС.Видимость = Ложь;
	Иначе	
	     Элементы.Объект.Видимость    = Ложь;
		 Элементы.СтавкаНДС.Видимость = Истина;
	КонецЕсли; 
	
	//
	Если Параметры.Свойство("СтруктураПараметров") Тогда
		фСтруктураПараметров = Параметры.СтруктураПараметров;
	Иначе	
		фСтруктураПараметров = Новый Структура;
	КонецЕсли;
	
	//
	Если Параметры.Свойство("ИмяГрафика") Тогда
		Если Параметры.ИмяГрафика = "ГрафикНачислений" Тогда
			Элементы.НазначениеПлатежа.Заголовок = "Содержание затрат";
		КонецЕсли;
		
		Элементы.НазначениеПлатежа.Видимость = Истина;
		
	КонецЕсли;
	
	Элементы.СтатьяОборотов.Видимость = фСтруктураПараметров.Свойство("СтатьяОборотов", СтатьяОборотов);
	
	Если фСтруктураПараметров.Свойство("РасходДоход") Тогда
		РасходДоход = фСтруктураПараметров.РасходДоход;
	КонецЕсли;
	
	ВидимостьРасходДоход = Элементы.РасходДоход.Видимость;
	
	Элементы.РасходДоход.Видимость = Элементы.СтатьяОборотов.Видимость ИЛИ ВидимостьРасходДоход;
									
	Элементы.РасходДоход.Доступность = ВидимостьРасходДоход;									
	
	ЗаполнитьКэшЗначений();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если фОтказ Тогда
		Отказ = Истина;
	КонецЕсли;
	
	УстановитьПараметрыВыбораСтатьи(Элементы.СтатьяОборотов);
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВыбратьПериодЗавершение" И Источник = УникальныйИдентификатор Тогда	
		
		РедактированиеПериодаЗавершение(Параметр.Результат, Неопределено);
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РасходДоходПриИзменении(Элемент)
	
	Сумма = ?(РасходДоход = СтруктураСумм.Расходование, 
					СтруктураСумм.СуммаРасход, 
					СтруктураСумм.СуммаПриход);
					
	УстановитьПараметрыВыбораСтатьи(Элементы.СтатьяОборотов);				
	
	мКэшЗначений.СписокСтатейПринадлежность = ПолучитьСписокСтатейПоПринадлежности();
	
КонецПроцедуры // РасходДоходПриИзменении()

&НаКлиенте
Процедура ОбъектОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // ОбъектОчистка()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДействиеВыборПериода(Команда)

	ПараметрыПередачи = Новый Структура(); 
	ПараметрыПередачи.Вставить("ДатаНачала", 	Период.ДатаНачала);
	ПараметрыПередачи.Вставить("ДатаОкончания", Период.ДатаОкончания);
	ПараметрыПередачи.Вставить("Контекст", 		УникальныйИдентификатор);
	
	бит_ОбщегоНазначенияКлиент.ВыбратьПериод(ПараметрыПередачи);
	 
КонецПроцедуры

&НаКлиенте
Процедура СформироватьГрафик(Команда)
	
	СтруктураПараметров = СформироватьСтруктуруНастроекГрафика();
	Если СтруктураПараметров <> Неопределено Тогда
		СтруктураПараметров.Вставить("ЗаменитьСуществующий", Истина);
		Закрыть(СтруктураПараметров);	
	КонецЕсли;                       	
	
КонецПроцедуры // СформироватьГрафик()

&НаКлиенте
Процедура ДобавитьДанныеПоГрафику(Команда)
	
	СтруктураПараметров = СформироватьСтруктуруНастроекГрафика();
	Если СтруктураПараметров <> Неопределено Тогда
		СтруктураПараметров.Вставить("ЗаменитьСуществующий", Ложь);
		Закрыть(СтруктураПараметров);	
	КонецЕсли; 	
	
КонецПроцедуры // ДобавитьДанныеПоГрафику()

&НаКлиенте 
Процедура РедактированиеПериодаЗавершение(ПериодРезультат, ДополнительныеДанные)

	Если ПериодРезультат <> Неопределено Тогда
		Период = ПериодРезультат;		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьКэшЗначений()
	
	мКэшЗначений = Новый Структура;
	
	мКэшЗначений.Вставить("СписокСтатейПринадлежность", ПолучитьСписокСтатейПоПринадлежности());
	
КонецПроцедуры // ЗаполнитьКэшЗначений()

&НаКлиенте
Процедура УстановитьПараметрыВыбораСтатьи(Элемент)
	
	Если фСтруктураПараметров.Свойство("СтруктураОтбораСтатей") Тогда
		СтруктураОтбора = фСтруктураПараметров.СтруктураОтбораСтатей;
	Иначе
		СтруктураОтбора = Новый Структура;
	КонецЕсли;
	
	Если НЕ мКэшЗначений.СписокСтатейПринадлежность = Неопределено Тогда
		СтруктураОтбора.Вставить("Ссылка", мКэшЗначений.СписокСтатейПринадлежность);
	КонецЕсли;
	
	СтруктураОтбора.Вставить("РасходДоход", РасходДоход);
	
	бит_ОбщегоНазначенияКлиентСервер.УстановитьПараметрыВыбораЭлемента(Элемент, СтруктураОтбора);
	
КонецПроцедуры // УстановитьПараметрыВыбораСтатьи()

// функция получает список статей, принадлежащих данному ЦФО.
// 
// Параметры:
//  ВыводитьСообщения - Булево.
//  ИндексСтроки 	  - Число, по умолчанию Неопределено.
//
&НаСервере
Функция ПолучитьСписокСтатейПоПринадлежности(ВыводитьСообщения = Ложь)
	
	Если НЕ фСтруктураПараметров.Свойство("СтатьяОборотов") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если фСтруктураПараметров.Свойство("ПараметрыПринадлежностиСтатей") Тогда
		СтруктураПараметров = фСтруктураПараметров.ПараметрыПринадлежностиСтатей;
	Иначе
		СтруктураПараметров = Новый Структура;
	КонецЕсли;
	
	СтруктураПараметров.Вставить("РасходДоход", РасходДоход);
	
	СписокСтатей = бит_Казначейство.ПолучитьСписокСтатейПоПринадлежности(СтруктураПараметров);
	
	Возврат СписокСтатей;
	
КонецФункции // ПолучитьСписокСтатейПоПринадлежности()

// Функция формирует структуру настроек для графика.
// 
// Параметры:
// 	 Нет
//  
// Возвращаемое значение:
//   Структура
// 
&НаКлиенте
Функция СформироватьСтруктуруНастроекГрафика()

	СписокНезаполненых = Новый СписокЗначений; 
	
	Если ВидГрафика = "Объектный" Тогда
		
		Если Не ЗначениеЗаполнено(ТекОбъект) Тогда
			СписокНезаполненых.Добавить("Объект");
		КонецЕсли;
		
	Иначе
		
		Если Не ЗначениеЗаполнено(СтавкаНДС) Тогда
			СписокНезаполненых.Добавить("СтавкаНДС"); 	
		КонецЕсли;
		
	КонецЕсли; 
		
	Если Сумма = 0 Тогда 
		СписокНезаполненых.Добавить("Сумма");
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(Период.ДатаНачала) ИЛИ Не ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
		СписокНезаполненых.Добавить("Период");
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Периодичность) Тогда
		СписокНезаполненых.Добавить("Периодичность");
	КонецЕсли;

	Если фСтруктураПараметров.Свойство("СтатьяОборотов") Тогда
		Если НЕ ЗначениеЗаполнено(СтатьяОборотов) Тогда
			СписокНезаполненых.Добавить("СтатьяОборотов");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(РасходДоход) Тогда
			СписокНезаполненых.Добавить("Направление");
		КонецЕсли;
	КонецЕсли;
	
	// Отказ выполнения при незаполненых реквизитах формы.
	Если ЗначениеЗаполнено(СписокНезаполненых) Тогда
		ТекстСообщения = Нстр("ru = 'Не удалось сформировать график.'");
		Если СписокНезаполненых.Количество() = 1 Тогда
			ТекстСообщения = ТекстСообщения + Символы.ПС + Нстр("ru = 'Заполните значение реквизита '");
		Иначе
			ТекстСообщения = ТекстСообщения + Символы.ПС + Нстр("ru = 'Заполните значения реквизитов: '");
		КонецЕсли;
		ТекстСообщения = ТекстСообщения + СтрЗаменить(Строка(СписокНезаполненых), ";", ",") + ".";
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		Возврат Неопределено;
	КонецЕсли; 
	
	СтруктураПараметров = Новый Структура;
	Если Элементы.Объект.Видимость Тогда
		СтруктураПараметров.Вставить("Объект"	, ТекОбъект);
	Иначе
		СтруктураПараметров.Вставить("СтавкаНДС", СтавкаНДС);
		Если ЗначениеЗаполнено(РасходДоход) Тогда
			СтруктураПараметров.Вставить("РасходДоход", РасходДоход);
	    КонецЕсли;
	КонецЕсли;   
	
	Если фСтруктураПараметров.Свойство("СтатьяОборотов") Тогда
		СтруктураПараметров.Вставить("СтатьяОборотов", СтатьяОборотов);
	КонецЕсли;
	
	СтруктураПараметров.Вставить("Периодичность", Периодичность);
	СтруктураПараметров.Вставить("ДатаНачала"	, Период.ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончания", Период.ДатаОкончания);
	СтруктураПараметров.Вставить("Режим"	    , Режим);
	СтруктураПараметров.Вставить("Сумма"	    , Сумма);
	СтруктураПараметров.Вставить("НазначениеПлатежа", НазначениеПлатежа);

	Возврат СтруктураПараметров;
	
КонецФункции // СформироватьСтруктуруНастроекГрафика()

#КонецОбласти
