
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Заполняем реквизиты формы из переданных параметров.
	Если Параметры.Свойство("ОбъектСистемы") Тогда
		ОбъектСистемы = Параметры.ОбъектСистемы;
	КонецЕсли;
	Если Параметры.Свойство("ТекущееИмя") Тогда
		ТекущееИмя    = Параметры.ТекущееИмя;
	КонецЕсли;
	Если Параметры.Свойство("ТипФормы") Тогда
		ТипФормы 	  = Параметры.ТипФормы;
	КонецЕсли;
		
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьДеревоИменЭлементов(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоВыбора

&НаКлиенте
Процедура ДеревоВыбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Закрыть(Элементы.ДеревоВыбора.ТекущиеДанные.ИмяЭлементаУправления);
	
КонецПроцедуры // ДеревоВыбораВыбор()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция добавляет строку в дерево выбора.
// 
// Параметры:
//  СтрокаРодитель - Строка дерева значений.
//  Имя  		   - Строка.
//  Представление  - Строка (По умолчанию = Неопределено).
//  Заголовок 	   - Строка (По умолчанию = "").
// 
// Возращаемое значение:    
//  СтрокаНовая  - Строка дерева значений.
// 
&НаСервере
Функция ДобавитьСтрокуДерева(СтрокаРодитель, ТекущийИдентификатор, Имя, Представление = Неопределено, Заголовок = "")

	СтрокаНовая = СтрокаРодитель.Добавить();
	СтрокаНовая.ИмяЭлементаУправления = Имя;
	СтрокаНовая.Представление 		  = ?(Представление = Неопределено, Имя, Представление);
	// Если ЗначениеЗаполнено(Заголовок) Тогда
	// 	СтрокаНовая.Представление = СтрокаНовая.Представление + " (" + Заголовок + ")";
	// КонецЕсли;
	СтрокаНовая.Заголовок = Заголовок;
	
	Если СтрокаНовая.ИмяЭлементаУправления = ТекущееИмя Тогда
		ТекущийИдентификатор = СтрокаНовая.ПолучитьИдентификатор();
	КонецЕсли;
		
	Возврат СтрокаНовая;
	
КонецФункции // ДобавитьСтрокуДерева()

// Процедура добавляет ветку в дерево выбора.
// 
// Параметры:
//  ЭлементыДерева  		- ДанныеФормыКоллекцияЭлементовДерева.
//  ИмяУзла  				- Строка.
//  ТаблицаЭлементов  		- ТаблицаЗначений.
//  ТекущийИдентификатор 	- Число.
// 
&НаСервере
Процедура ДобавитьВеткуДерева(ЭлементыДерева, ИмяУзла, ТаблицаЭлементов, ТекущийИдентификатор)

	ЭтоДерево = ТипЗнч(ТаблицаЭлементов) = Тип("ДанныеФормыДерево");
	
	// Ничего не делаем, если нет данных
	Если ЭтоДерево Тогда
		Если ТаблицаЭлементов.ПолучитьЭлементы().Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
	ИначеЕсли ТаблицаЭлементов.Количество() = 0 Тогда
		Возврат;		
	КонецЕсли;
		
	СтрокаВерх 	= ДобавитьСтрокуДерева(ЭлементыДерева, ТекущийИдентификатор, ИмяУзла);
	Ветка       = СтрокаВерх.ПолучитьЭлементы();
	
	// Обход дерева
	Если ЭтоДерево Тогда
		
		Для каждого СтрокаДерева Из ТаблицаЭлементов.ПолучитьЭлементы() Цикл
			
			НоваяСтрока = ДобавитьСтрокуДерева(Ветка, ТекущийИдентификатор, СтрокаДерева.Имя, Неопределено, СтрокаДерева.Заголовок);
			НоваяВетка = НоваяСтрока.ПолучитьЭлементы();
			
			// Добавим реквизиты табличной части (если есть).
			ДобавитьПодчиненныеЭлементыИзДерева(СтрокаДерева, НоваяВетка, ТекущийИдентификатор, СтрокаДерева.Имя);
			
		КонецЦикла;
		
	Иначе // Или таблицы	
	     	
		Для каждого СтрокаТаблицы Из ТаблицаЭлементов Цикл
			НоваяСтрока = ДобавитьСтрокуДерева(Ветка, ТекущийИдентификатор, СтрокаТаблицы.Имя, Неопределено, СтрокаТаблицы.Заголовок);
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры // ДобавитьВеткуДерева()

// Процедура ОПИСАНИЕ
// 
// Параметры:
//  Параметр1  - Тип_описание
//  Параметр2  - Тип_описание
// 
&НаСервере
Процедура ДобавитьПодчиненныеЭлементыИзДерева(СтрокаДерева, НоваяВетка, ТекущийИдентификатор, Префикс)

	Для каждого ПодстрокаДерева Из СтрокаДерева.ПолучитьЭлементы() Цикл
		
		ИмяЭлемента = Префикс + "." + ПодстрокаДерева.Имя;
		НоваяСтрока = ДобавитьСтрокуДерева(НоваяВетка, ТекущийИдентификатор, ИмяЭлемента, ПодстрокаДерева.Имя, ПодстрокаДерева.Заголовок);
		
		ДобавитьПодчиненныеЭлементыИзДерева(ПодстрокаДерева, НоваяСтрока.ПолучитьЭлементы(), ТекущийИдентификатор, Префикс);
		
	КонецЦикла;	

КонецПроцедуры // ДобавитьПодчиненныеЭлементыИзДерева()

// Процедура формирует дерево выбора.
// 
&НаСервере
Процедура СформироватьДерево()            	
	
	ЭлементыДерева = ДеревоВыбора.ПолучитьЭлементы();
	ИД = Неопределено;
	
	// Сортируем таблицы имен элементов 
	ТаблицаПолейВвода.Сортировать("Имя");
	ТаблицаФлажков.Сортировать("Имя");
	// ДеревоКомПанелей.Сортировать("Имя");
	ТаблицаТабПолей.Сортировать("Имя");
	
	// Добавляем ветки и строки дерева
	СтрокаВсяФорма = ДобавитьСтрокуДерева(ЭлементыДерева, ИД, "Все элементы формы");
	ЭлементыДерева = СтрокаВсяФорма.ПолучитьЭлементы();
	ДобавитьВеткуДерева(ЭлементыДерева, "Флажки"		  , ТаблицаФлажков	 , ИД);
	ДобавитьВеткуДерева(ЭлементыДерева, "Командные панели", ДеревоКомПанелей , ИД);
	ДобавитьВеткуДерева(ЭлементыДерева, "Табличные поля"  , ДеревоТабПолей	 , ИД); 	
	ДобавитьВеткуДерева(ЭлементыДерева, "Поля ввода"	  , ТаблицаПолейВвода, ИД);
	
	// Устанавливаем текущий элемент дерева
	Элементы.ДеревоВыбора.ТекущаяСтрока = ИД;
		
КонецПроцедуры // СформироватьДерево()

// Процедура формирует дерево имен элементов.
// 
&НаКлиенте
Процедура СформироватьДеревоИменЭлементов(Отказ)
	
	Форма = бит_УправлениеОбъектамиСистемы.ПолучитьФормуОбъекта(ОбъектСистемы, ТипФормы);
	Если ТипЗнч(Форма) = Тип("Строка") Тогда
		
		Попытка
			Форма = ПолучитьФорму(Форма);
		Исключение
			бит_ОбщегоНазначения.СообщитьОбОшибке("Невозможно получить доступ к элементам формы");
			Отказ = Истина;
			Возврат;
		КонецПопытки;
		
	КонецЕсли; 
	
	Если Форма = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	КореньДереваКомПанелей = ДеревоКомПанелей.ПолучитьЭлементы();
	КореньДереваТабПолей   = ДеревоТабПолей.ПолучитьЭлементы();
	
	Если ТипФормы = "Управляемая" Тогда
			
		// Формируем таблицы если форма управляемая
		Для Каждого Элемент Из Форма.Элементы Цикл
			
			Если Элемент.Имя = "ТабДокДанные" Тогда
				Стоп = Истина;
			КонецЕсли;	
				
			Если ТипЗнч(Элемент) = Тип("ПолеФормы") Тогда
				
				Если ТипЗнч(Элемент.Родитель) = Тип("ТаблицаФормы") Тогда
					Продолжить;
				КонецЕсли;
				
				Если Элемент.Вид = ВидПоляФормы.ПолеВвода Тогда
					СтрокаПВ = ТаблицаПолейВвода.Добавить();
					СтрокаПВ.Имя 	     = Элемент.Имя;
					СтрокаПВ.Заголовок   = Элемент.Заголовок;
				ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеФлажка Тогда
					СтрокаФл = ТаблицаФлажков.Добавить();
					СтрокаФл.Имя 	   = Элемент.Имя;
					СтрокаФл.Заголовок = Элемент.Заголовок;
				ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеТабличногоДокумента Тогда
					Дз_ТабЧасть = КореньДереваТабПолей.Добавить();
					Дз_ТабЧасть.Имя 	  = Элемент.Имя;
					Дз_ТабЧасть.Заголовок = Элемент.Заголовок;
				КонецЕсли;
				
			ИначеЕсли ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
				
				Если Элемент.Вид = ВидГруппыФормы.КоманднаяПанель Тогда
					
					Дз_КомПанель = КореньДереваКомПанелей.Добавить();
					Дз_КомПанель.Имя       = Элемент.Имя;
					Дз_КомПанель.Заголовок = Элемент.Заголовок;
					
					УзелДерева = Дз_КомПанель.ПолучитьЭлементы();
					Для каждого КнопкаКп Из Элемент.ПодчиненныеЭлементы Цикл
						
						Дз_Кнопка = УзелДерева.Добавить();
						Дз_Кнопка.Имя 	    = КнопкаКп.Имя;
						Дз_Кнопка.Заголовок = КнопкаКп.Заголовок;
					
					КонецЦикла;
					
				КонецЕсли;

			ИначеЕсли ТипЗнч(Элемент) = Тип("ТаблицаФормы") Тогда
				
				Дз_ТабЧасть = КореньДереваТабПолей.Добавить();
				ИмяПоля = Элемент.Имя;
				Дз_ТабЧасть.Имя 	  = ИмяПоля;
				Дз_ТабЧасть.Заголовок = Элемент.Заголовок;
									
				УзелДерева = Дз_ТабЧасть.ПолучитьЭлементы();
				Для каждого КолонкаТп Из Элемент.ПодчиненныеЭлементы Цикл
					
					Дз_Реквизит = УзелДерева.Добавить();
					Дз_Реквизит.Имя       = КолонкаТп.Имя;
					Дз_Реквизит.Заголовок = КолонкаТп.Заголовок;
					
					ЗаполнитьПодчиненныеЭлементыГруппыКолонок(КолонкаТп, Дз_Реквизит);
					
				КонецЦикла;
					
			
			КонецЕсли;
			
		КонецЦикла;

	Иначе
		
		// Формируем таблицы если форма обычная
		Для Каждого Элемент Из Форма.ЭлементыФормы Цикл
		
			Если ТипЗнч(Элемент) = Тип("ПолеВвода") Тогда
				
				СтрокаПВ 	 = ТаблицаПолейВвода.Добавить();
				СтрокаПВ.Имя = Элемент.Имя;
				
			ИначеЕсли ТипЗнч(Элемент) = Тип("Флажок") Тогда
				
				СтрокаФл 	 = ТаблицаФлажков.Добавить();
				СтрокаФл.Имя = Элемент.Имя;
				
			ИначеЕсли ТипЗнч(Элемент) = Тип("КоманднаяПанель") Тогда
				
				Дз_КомПанель = КореньДереваКомПанелей.Добавить();
				Дз_КомПанель.Имя = Элемент.Имя;
				
			ИначеЕсли ТипЗнч(Элемент) = Тип("ТабличноеПоле") 
				ИЛИ ТипЗнч(Элемент) = Тип("ПолеТабличногоДокумента") Тогда
				
				Дз_ТабЧасть = КореньДереваТабПолей.Добавить();
				Дз_ТабЧасть.Имя = Элемент.Имя;
				
				Если Лев(Строка(Элемент.ТипЗначения), 25) = "Документ табличная часть:" Тогда	
					
					УзелДерева = Дз_ТабЧасть.ПолучитьЭлементы();
					Для каждого КолонкаТп Из Элемент.Колонки Цикл
						
						Дз_Реквизит = УзелДерева.Добавить();
						Дз_Реквизит.Имя = КолонкаТп.Имя; 
					
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли; 
			
 		КонецЦикла;	
	КонецЕсли; 
		
	// Формируем дерево элементов
	СформироватьДерево();
		
КонецПроцедуры // СформироватьДеревоИменЭлементов()

// Процедура заполняет подчиненные элементы групп колонок
// 
// Параметры:
//  ТекКолонкаТп 
//  Дз_ТекРеквизит 
// 
&НаКлиенте
Процедура ЗаполнитьПодчиненныеЭлементыГруппыКолонок(ТекКолонкаТп, Дз_ТекРеквизит)

	УзелДерева = Дз_ТекРеквизит.ПолучитьЭлементы();
	
	Если ТипЗнч(ТекКолонкаТп) = Тип("ГруппаФормы") Тогда
		
		Для каждого КолонкаТп Из ТекКолонкаТп.ПодчиненныеЭлементы Цикл
			Дз_Реквизит = УзелДерева.Добавить();
			Дз_Реквизит.Имя       = КолонкаТп.Имя;
			Дз_Реквизит.Заголовок = КолонкаТп.Заголовок;
		КонецЦикла;
	
	КонецЕсли;	

КонецПроцедуры // ЗаполнитьПодчиненныеЭлементыГруппыКолонок()

#КонецОбласти

