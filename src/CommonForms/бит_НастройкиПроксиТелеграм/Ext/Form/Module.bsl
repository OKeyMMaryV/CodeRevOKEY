
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Настройки = бит_ТелеграмПовтИсп.НастройкиПрокси();
	
	Если Настройки <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Настройки);
	Иначе	
		АутентификацияОС = Истина;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеЭлементамиФормыКлиент();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВключитьПроксиПриИзменении(Элемент)

	УправлениеЭлементамиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура АутентификацияОСПриИзменении(Элемент)
	
	УправлениеЭлементамиФормыКлиент();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура управления доступностью элементов формы.
//
&НаКлиенте
Процедура УправлениеЭлементамиФормыКлиент()

	Элементы.Сервер.Доступность = ВключитьПрокси;
	Элементы.Порт.Доступность 	= ВключитьПрокси;
	Элементы.АутентификацияОС.Доступность = ВключитьПрокси;
	
	Элементы.Логин.Доступность 	= НЕ АутентификацияОС;
	Элементы.Пароль.Доступность = НЕ АутентификацияОС;
	
КонецПроцедуры // УправлениеЭлементамиФормы()

// Процедура записывает настройки прокси в хранилище настроек пользователя.
//
&НаСервере
Процедура ЗаписатьНаСервере()

	СтрПараметры = бит_ТелеграмСервер.НоваяСтруктураПрокси();
									
	СтрПараметры.ВключитьПрокси 	= ВключитьПрокси;
	СтрПараметры.Сервер 			= Сервер;
	СтрПараметры.Порт 				= Порт;
	СтрПараметры.АутентификацияОС 	= АутентификацияОС;
	СтрПараметры.Логин 				= Логин;
	СтрПараметры.Пароль 			= Пароль;
									
	Хранилище = Новый ХранилищеЗначения(СтрПараметры);
	
	Константы.бит_НастройкиПроксиТелеграм.Установить(Хранилище);
	
	ОбновитьПовторноИспользуемыеЗначения();
									
КонецПроцедуры // ЗаписатьНаСервере()

#КонецОбласти
