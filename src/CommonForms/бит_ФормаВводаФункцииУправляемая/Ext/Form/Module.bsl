
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Список выбранных областей
	Если ТипЗнч(Параметры.ВыбранныеОбласти) = Тип("ДанныеФормыКоллекция") Тогда
		ТаблицаВыбранныхОбластей = Параметры.ВыбранныеОбласти.Выгрузить(); 		
		// Изменение кода. Начало. 11.12.2013{{
        Если Найти(Параметры.ВладелецИмяФормы, "НастройкиФормВводаБюджета") <> 0 Тогда
		    МассивОбластей = ТаблицаВыбранныхОбластей.ВыгрузитьКолонку("ЗаголовокОбласти");
		Иначе
			МассивОбластей = ТаблицаВыбранныхОбластей.ВыгрузитьКолонку("ИмяОбласти");
		КонецЕсли;
		// Изменение кода. Конец. 11.12.2013}}
	ИначеЕсли ТипЗнч(Параметры.ВыбранныеОбласти) = Тип("СписокЗначений") Тогда	
	    МассивОбластей = Параметры.ВыбранныеОбласти.ВыгрузитьЗначения();
	Иначе
		фОтказ = Истина;
		Возврат;
	КонецЕсли;  
	ВыбранныеОбласти.Очистить();
	ВыбранныеОбласти.ЗагрузитьЗначения(МассивОбластей);
	ВыбранныеОбласти.ЗаполнитьПометки(Истина);
	
	// Списки выбора элементов формы
	Элементы.ОбластьДляОкругления.СписокВыбора.ЗагрузитьЗначения(МассивОбластей);
	Элементы.ЛогическоеВыражение.СписокВыбора.ЗагрузитьЗначения(МассивОбластей);
	Элементы.ЗначениеТогда.СписокВыбора.ЗагрузитьЗначения(МассивОбластей);
	Элементы.ЗначениеИначе.СписокВыбора.ЗагрузитьЗначения(МассивОбластей);
	Элементы.ОбластьЧислитель.СписокВыбора.ЗагрузитьЗначения(МассивОбластей);
	Элементы.ОбластьЗнаменатель.СписокВыбора.ЗагрузитьЗначения(МассивОбластей);
	
	// Значения параметров
	РежимОкругления = 1;
			
	// Меню функций
	Макет      = ПолучитьОбщийМакет("бит_СписокФункций");
	ОблФункции = Макет.ПолучитьОбласть("Функции");
	КолонкиТаблицы = ДанныеФормыВЗначение(МенюФункций, Тип("ТаблицаЗначений")).Колонки;
	
	Для НомСтроки = 1 По ОблФункции.ВысотаТаблицы Цикл
		НовСтрока = МенюФункций.Добавить(); 		
		Для НомКолонки = 1 По ОблФункции.ШиринаТаблицы Цикл
			НовСтрока[КолонкиТаблицы[НомКолонки - 1].Имя] = ОблФункции.Область("R" + НомСтроки + "C" + НомКолонки).Текст;
		КонецЦикла; 
	КонецЦикла; 	
	 	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если фОтказ Тогда	
		Отказ = Истина;
		Возврат;	
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МенюФункцийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыборФункции();
	
КонецПроцедуры // МенюФункцийВыбор()

//////////////////////////////////////////////////////////////////////////////////
// Страница "Округление"

&НаКлиенте
Процедура РазрядностьПриИзменении(Элемент)
	
	ВычислитьРезультатПримераОкругления();
	
КонецПроцедуры // РазрядностьПриИзменении()

&НаКлиенте
Процедура РежимОкругленияПриИзменении(Элемент)
	
	ВычислитьРезультатПримераОкругления();
	
КонецПроцедуры // РежимОкругленияПриИзменении()

&НаКлиенте
Процедура РежимОкругленияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // РежимОкругленияОчистка()

&НаКлиенте
Процедура ЗначениеПримераОкругляемоеЧислоПриИзменении(Элемент)
	
	ВычислитьРезультатПримераОкругления();
	
КонецПроцедуры // ЗначениеПримераЧислоПриИзменении()
                                 
//////////////////////////////////////////////////////////////////////////////////
// Страница "Остаток"

&НаКлиенте
Процедура ЗначениеПримераОстатокЧисло1ПриИзменении(Элемент)
	
	ВычислитьРезультатПримераОстатка();
	
КонецПроцедуры // ЗначениеПримераОстатокЧисло1ПриИзменении()

&НаКлиенте
Процедура ЗначениеПримераОстатокЧисло2ПриИзменении(Элемент)
	
	ВычислитьРезультатПримераОстатка();
	
КонецПроцедуры // ЗначениеПримераОстатокЧисло2ПриИзменении()

//////////////////////////////////////////////////////////////////////////////////
// Страница "Если"

&НаКлиенте
Процедура ЛогическоеВыражениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Область1 = "[" + ВыбранноеЗначение + "]";
	
КонецПроцедуры // ЛогическоеВыражениеОбработкаВыбора()

&НаКлиенте
Процедура ЗначениеТогдаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Область2 = "[" + ВыбранноеЗначение + "]";
	
КонецПроцедуры // ЗначениеТогдаОбработкаВыбора()

&НаКлиенте
Процедура ЗначениеИначеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Область3 = "[" + ВыбранноеЗначение + "]";
	
КонецПроцедуры // ЗначениеИначеОбработкаВыбора()

&НаКлиенте
Процедура ЗначениеПримераЕслиПриИзменении(Элемент)
	
	ВычислитьРезультатПримераЕсли();
	
КонецПроцедуры // ЗначениеПримераЕслиПриИзменении()

&НаКлиенте
Процедура ЗначениеПримераТогдаПриИзменении(Элемент)
	
	ВычислитьРезультатПримераЕсли();
	
КонецПроцедуры // ЗначениеПримераТогдаПриИзменении()

&НаКлиенте
Процедура ЗначениеПримераИначеПриИзменении(Элемент)
	
	ВычислитьРезультатПримераЕсли();
	
КонецПроцедуры // ЗначениеПримераИначеПриИзменении()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ВыборФункции();
	
КонецПроцедуры // ОК()

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры // Отмена()

&НаКлиенте
Процедура Назад(Команда)
	
	Элементы.ПанельОсновная.ТекущаяСтраница = Элементы.СтраницаОсновная;
	Элементы.Назад.Видимость = Ложь;
	
КонецПроцедуры // Назад()

// ----------------------------------------------------------------------
// Страница "Сумма"

&НаКлиенте
Процедура Сумма_УстановитьВсе(Команда)
	                                        	
	ВыбранныеОбласти.ЗаполнитьПометки(Истина);
	
КонецПроцедуры // Сумма_УстановитьВсе()

&НаКлиенте
Процедура Сумма_СнятьВсе(Команда)
	
	ВыбранныеОбласти.ЗаполнитьПометки(Ложь);
	
КонецПроцедуры // Сумма_СнятьВсе()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура вычисляет результат примера округления.
// 
&НаКлиенте
Процедура ВычислитьРезультатПримераОкругления()

	ЗначениеПримераРезультатЧисло = ОКР(ЗначениеПримераЧисло1, Разрядность, РежимОкругления);	

КонецПроцедуры // ВычислитьРезультатПримераОкругления()

// Процедура вычисляет результат примера формирования остатка.
// 
&НаКлиенте
Процедура ВычислитьРезультатПримераОстатка()

	Если ЗначениеПримераЧисло2 = 0 Тогда
		ПоказатьПредупреждение(, Нстр("ru = 'Деление на 0!'"));
		Возврат;
	КонецЕсли;

	ЗначениеПримераРезультатЧисло = ЗначениеПримераЧисло1 % ЗначениеПримераЧисло2;	

КонецПроцедуры // ВычислитьРезультатПримераОстатка()

// Процедура вычисляет результат примера условия "Если".
// 
&НаКлиенте
Процедура ВычислитьРезультатПримераЕсли()

	ЗначениеПримераРезультатСтрока = ?(ЗначениеПримераБулево1, ЗначениеПримераСтрока1, ЗначениеПримераСтрока2);	

КонецПроцедуры // ВычислитьРезультатПримераЕсли()


&НаКлиенте
Процедура УстановитьАргументПростойФункции(Аргумент, ИмяФункции)
	
	Формула = "";
	
	Если Не ПустаяСтрока(Аргумент) Тогда
		
		Если ИмяФункции = "МОДУЛЬ" Тогда
			Формула = "?(%Арг%>0,%Арг%,-1*%Арг%)";
			Формула = СтрЗаменить(Формула, "%Арг%", Аргумент);
		Иначе	
			Формула = ИмяФункции + "([" + Аргумент + "])";
		КонецЕсли; 
		
	КонецЕсли;
	
	Закрыть(Формула);
	
КонецПроцедуры // УстановитьАргументПростойФункции()

&НаКлиенте
Процедура СуммироватьАргументы(ИмяФункции)

	Если ИмяФункции = "Сумма" Тогда 
		Знак = "+";
	ИначеЕсли ИмяФункции = "Произвед" Тогда 
		Знак = "*";
	ИначеЕсли ИмяФункции = "Мин" Или ИмяФункции = "Макс" Тогда 
		Знак = ",";	
	КонецЕсли; 

	Формула = "";
	Для каждого Элемент Из ВыбранныеОбласти Цикл
		Если Элемент.Пометка Тогда
			// Изменение кода. Начало. 11.12.2013{{
			Формула = Формула + "" + Элемент.Значение + " " + Знак;
			// Изменение кода. Конец. 11.12.2013}}
		КонецЕсли;
	КонецЦикла;  

	Если Не ПустаяСтрока(Формула) Тогда
		Формула = "(" + Лев(Формула, СтрДлина(Формула) - 2) + ")";
		Если ИмяФункции = "Мин" Или ИмяФункции = "Макс" Тогда
			Формула = ИмяФункции + Формула;
		КонецЕсли;
	КонецЕсли;
	
	Закрыть(Формула);
	
КонецПроцедуры // СуммироватьАргументы()

&НаКлиенте
Процедура УстановитьОкругление()
	
	Формула = "";
	
	Если Не ПустаяСтрока(Область1) Тогда
		Формула = "Окр([" + Область1 + "], " + Разрядность + ", " + РежимОкругления + ")";
	КонецЕсли;
	
	Закрыть(Формула);
	
КонецПроцедуры // УстановитьОкругление()

&НаКлиенте
Процедура УстановитьОстаток()
	
	Формула = "";
	
	Если Не ПустаяСтрока(Область1) И Не ПустаяСтрока(Область2) Тогда
		Формула = "([" + Область1 + "] % [" + Область2 + "])";
	КонецЕсли;
	
	Закрыть(Формула);	
	
КонецПроцедуры // УстановитьОстаток()

&НаКлиенте
Процедура УстановитьЕсли()

	Формула = "";
	
	Если Не ПустаяСтрока(Область1) И Не ПустаяСтрока(Область2) И Не ПустаяСтрока(Область3) Тогда
		Формула = "?(" + Область1 + ", " + Область2 + ", " + Область3 + ")";
	КонецЕсли;
	
	Закрыть(Формула);

КонецПроцедуры // УстановитьЕсли()
    
&НаКлиенте
Процедура ВыборФункции()
	
	ТекущиеДанные = Элементы.МенюФункций.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначениеПримера  = 0;
	РезультатПримера = 0;
	
	ТекСтр = Элементы.ПанельОсновная.ТекущаяСтраница.Имя;
	НовСтр = ТекущиеДанные.ИмяСтраницы;
	
	Если НовСтр = "" Тогда
		
		// Выбрана простая функция.
        Если ВыбранныеОбласти.Количество() > 1 Тогда
            ДопПараметры = Новый Структура;
            ДопПараметры.Вставить("Имя", ТекущиеДанные.Имя);
            ОповещениеВыбораОбласти = Новый ОписаниеОповещения("ЗавершениеВыбораОбласти", ЭтотОбъект, ДопПараметры);
            ЗаголовокВыбора = "Выберите аргумент функции: " + ТекущиеДанные.Представление;
            ВыбранныеОбласти.ПоказатьВыборЭлемента(ОповещениеВыбораОбласти, ЗаголовокВыбора, ВыбранныеОбласти[0]);
        Иначе	
			Аргумент = ВыбранныеОбласти[0];
            Если Аргумент <> Неопределено Тогда
			    УстановитьАргументПростойФункции(Аргумент, ТекущиеДанные.Имя);
		    КонецЕсли;
		КонецЕсли;  
				
		Возврат;
		
	Иначе   

		// Выбранна функция, которую требуется настроить на другой странице.
		Если ТекСтр = "СтраницаОсновная" Тогда
			
			Элементы.ПанельОсновная.ТекущаяСтраница = Элементы[НовСтр];
			Элементы.Назад.Видимость 				= Истина;
			
			Если НовСтр = "СтраницаОкругление" Тогда
				ЗначениеПримераЧисло1 = 3.5;
				ВычислитьРезультатПримераОкругления();
			ИначеЕсли НовСтр = "СтраницаОстаток" Тогда
				ЗначениеПримераЧисло1 = 5;
				ЗначениеПримераЧисло2 = 2;
				ВычислитьРезультатПримераОстатка();
			ИначеЕсли НовСтр = "СтраницаЕсли" Тогда
				ЗначениеПримераСтрока1 = 1;
				ЗначениеПримераСтрока2 = 0;
				ВычислитьРезультатПримераЕсли();
			КонецЕсли;
						
		Иначе
			
			Если ТекущиеДанные.Имя = "Сумма" Или ТекущиеДанные.Имя = "Произвед" Или ТекущиеДанные.Имя = "Мин" Или ТекущиеДанные.Имя = "Макс" 		
													Тогда СуммироватьАргументы(ТекущиеДанные.Имя); 
			ИначеЕсли ТекущиеДанные.Имя = "Окр" 	Тогда УстановитьОкругление();     				
			ИначеЕсли ТекущиеДанные.Имя = "Остаток" Тогда УстановитьОстаток();				  				
			ИначеЕсли ТекущиеДанные.Имя = "Если" 	Тогда УстановитьЕсли(); 				
			КонецЕсли; 
			
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры // ВыборФункции()

&НаКлиенте
// Процедура - обработчик оповещения выбора области.
//
//  Параметры:
//   Аргумент     - ЭлементСпискаЗначений - выбранная область.
//   ДопПараметры - Структура - структура дополнительных параметров.
//
Процедура ЗавершениеВыбораОбласти(Аргумент, ДопПараметры) Экспорт
    
    Если Аргумент <> Неопределено Тогда
    	 УстановитьАргументПростойФункции(Аргумент, ДопПараметры.Имя);
    КонецЕсли; 	

КонецПроцедуры // ЗавершениеВыбораОбласти()

#КонецОбласти
