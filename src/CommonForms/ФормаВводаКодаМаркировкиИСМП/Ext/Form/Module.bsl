
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ТекстОшибкиКонтроляКодовМаркировки) Тогда
		Заголовок = НСтр("ru = 'Контроль кодов маркировок'");
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаКонтрольКодовМаркировки;
		
		Элементы.ТекстОшибкиКонтроляКодовМаркировки.Заголовок = Параметры.ТекстОшибкиКонтроляКодовМаркировки;
	Иначе
		Заголовок = НСтр("ru = 'Сканирование кода маркировки'");
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСканированиеКодаМаркировки;
	КонецЕсли;
	
	Номенклатура              = Параметры.Номенклатура;
	Характеристика            = Параметры.Характеристика;
	СоздаватьШтрихкодУпаковки = Параметры.СоздаватьШтрихкодУпаковки;
	ДанныеШтрихкода           = Параметры.ДанныеШтрихкода;
	ПараметрыСканирования     = Параметры.ПараметрыСканирования;
	Документ                  = Параметры.Документ;
	ЭтоТестовыйПериод = ИнтеграцияИСМПВызовСервера.ЭтоТестовыйПериод();
	
	Элементы.ДобавитьБезКодаМаркировки.Видимость     = Параметры.РазрешатьДобавлениеБезКодаМарки И ЭтоТестовыйПериод;
	Элементы.ДекорацияПодсказка.Видимость            = Параметры.РазрешатьДобавлениеБезКодаМарки И ЭтоТестовыйПериод;
	
	Если ПараметрыСканирования <> Неопределено Тогда
		Элементы.РаспечататьНовыйКодМаркировки.Видимость = ПараметрыСканирования.ДоступнаПечатьЭтикеток;
		ДопустимыйСпособВводаВОборот = ПараметрыСканирования.ДопустимыйСпособВводаВОборот;
	КонецЕсли;
	
	СобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	ШтрихкодированиеИСПереопределяемый.ПриОпределенииСочетанияКлавишДобавитьБезМаркировкиВФормеСканирования(
		Команды.ДобавитьБезКодаМаркировки.СочетаниеКлавиш);
		
	НазначитьЗаголовокКомандыДобавитьБезМаркировкиСервер();
	СброситьРазмерыИПоложениеОкна();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтаФорма, "СканерШтрихкода");
	// Конец ПодключаемоеОборудование
	
	СобытияФормИСМПКлиент.ОпределитьИспользованиеХарактеристик(
		ЭтотОбъект,
		ЭтотОбъект,
		"Номенклатура", "ХарактеристикиИспользуются");
	
	ОбновитьПредставленияНоменклатуры();
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСканированиеКодаМаркировки Тогда
		ЭтотОбъект.ТекущийЭлемент = Элементы.СтраницаСканированиеКодаМаркировки;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Документ = ВладелецФормы.Объект.Ссылка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ОбработатьБезВводаМарки Тогда
		ШтрихкодированиеИСКлиент.ОбработатьШтрихкодКакНемаркируемуюПродукцию(ВладелецФормы, ДанныеШтрихкода);
	КонецЕсли;
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтаФорма);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаКонтрольКодовМаркировки Тогда
		Возврат;
	КонецЕсли;
	
	СобытияФормИСКлиентПереопределяемый.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаКонтрольКодовМаркировки Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСканирования = ПараметрыСканирования();
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПоискПоШтрихкодуЗавершение", ЭтотОбъект);
	СобытияФормИСКлиент.ВнешнееСобытиеПолученыШтрихкоды(
		ОповещениеПриЗавершении, ЭтотОбъект, Источник, Событие, Данные, ПараметрыСканирования);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВвестиКодМаркировки(Команда)
	
	ОчиститьСообщения();
	
	ШтрихкодированиеИСКлиентПереопределяемый.ПоказатьВводШтрихкода(
		Новый ОписаниеОповещения("РучнойВводШтрихкодаЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьБезКодаМаркировки(Команда)
	
	ОбработатьБезВводаМарки = Истина;
	
	Комментарий = Нстр("ru='Отказ ввода кода маркировки по инициативе пользователя'");
	ДобавитьСообщениеДляЖурналаРегистрацииОНевозможностиВводаКодаМарки(Комментарий);
	ДанныеШтрихкода = ДанныеШтрихкода(ВладелецФормы.Объект.Ссылка);
	ДанныеШтрихкода.Номенклатура              = Номенклатура;
	ДанныеШтрихкода.Характеристика            = Характеристика;
	ДанныеШтрихкода.КоличествоВложенныхЕдиниц = 1;
	ДанныеШтрихкода.ТипУпаковки               = ПредопределенноеЗначение("Перечисление.ТипыУпаковок.МаркированныйТовар");
	ДанныеШтрихкода.ОбработатьБезМаркировки   = Истина;
	ДанныеШтрихкода.ВидыПродукции.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Обувная"));
	ВладелецФормы.Подключаемый_ОбработатьВводШтрихкода(ДанныеШтрихкода, Неопределено);
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ОбработатьБезВводаМарки = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура РаспечататьНовыйКодМаркировки(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьНовыйКодМаркировкиИВывестиНаПечать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПараметрыСканирования()
	
	ПараметрыСканирования = ШтрихкодированиеИСКлиент.ПараметрыСканирования(ВладелецФормы);
	ДопустимыеВидыПродукции = Новый Массив;
	ДопустимыеВидыПродукции.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Обувная"));
	ПараметрыСканирования.ДопустимыеВидыПродукции      = ДопустимыеВидыПродукции;
	ПараметрыСканирования.ДопустимыйСпособВводаВОборот = ДопустимыйСпособВводаВОборот;
	ПараметрыСканирования.КэшМаркируемойПродукции      = Неопределено;
	
	Возврат ПараметрыСканирования;
	
КонецФункции

#Область Печать

&НаКлиенте
Процедура РаспечататьНовыйКодЗавершение(ДанныеОтветаРезервированияИПечати, ДополнительныеПараметры) Экспорт
	
	Если ДанныеОтветаРезервированияИПечати = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеОтветаРезервированияИПечати.РезультатРезервирования.Количество() Тогда
		СтрокаРезультата = ДанныеОтветаРезервированияИПечати.РезультатРезервирования.Получить(0);
		
		Если ДанныеОтветаРезервированияИПечати.СохраняемыеНастройки.ЗапомнитьВыбор Тогда
			ВладелецФормы.СохраненВыборПоМаркируемойПродукции = Истина;
			ВладелецФормы.ДанныеВыбораПоМаркируемойПродукции = ДанныеОтветаРезервированияИПечати.СохраняемыеНастройки.ДанныеВыбора;
			ШтрихкодированиеИСКлиентСервер.ОтобразитьСохраненныйВыборПоМаркируемойПродукции(ВладелецФормы);
		КонецЕсли;
		
		СтруктураДополнительныхПараметров = Новый Структура();
		СтруктураДополнительныхПараметров.Вставить("ОтключитьКонтрольСтатусов", Истина);
		ДанныеШтрихкод = Новый Структура("Штрихкод, Количество", СтрокаРезультата.КодМаркировки, 1);
		РучнойВводШтрихкодаЗавершение(ДанныеШтрихкод, СтруктураДополнительныхПараметров);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Штрихкоды

&НаКлиенте
Процедура ПоискПоШтрихкодуЗавершение(ДанныеШтрихкода, ДополнительныеПараметры) Экспорт
	
	Если ДанныеШтрихкода = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеШтрихкода.ТипУпаковки = ПредопределенноеЗначение("Перечисление.ТипыУпаковок.МаркированныйТовар") Тогда
		
		ОбработатьШтрихкодКодаМаркировки(ДанныеШтрихкода, ДополнительныеПараметры);
		
	Иначе
		
		ВывестиСообщениеНаСтраницеВводаКодаМаркировки(
			НСтр("ru = 'Недопустимый формат штрихкода'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШтрихкодКодаМаркировки(ДанныеШтрихкода, ДополнительныеПараметры)
	
	АдресРезультатаОбработкиШтрихкода = ПоместитьВоВременноеХранилище(ДанныеШтрихкода, УникальныйИдентификатор);
	
	Если ЗначениеЗаполнено(ДанныеШтрихкода.Номенклатура)
		И ДанныеШтрихкода.Номенклатура <> Номенклатура Тогда
			
		ВывестиСообщениеНаСтраницеВводаКодаМаркировки(
			СтрШаблон(НСтр("ru = 'Код маркировки не соответствует номенклатуре %1'"), Номенклатура));
		
		Возврат;
	КонецЕсли;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСканированиеКодаМаркировки Тогда
		ПодключитьОбработчикОжидания("ЗакрытьФормуПриСканировании", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФормуПриСканировании()
	
	Результат = ПолучитьИзВременногоХранилища(АдресРезультатаОбработкиШтрихкода);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура РучнойВводШтрихкодаЗавершение(ДанныеШтрихкода, ДополнительныеПараметры) Экспорт
	
	ПараметрыСканирования = ПараметрыСканирования();
	
	Если ДополнительныеПараметры <> Неопределено И ДополнительныеПараметры.Свойство("ОтключитьКонтрольСтатусов") Тогда
		ПараметрыСканирования.ЗапрашиватьСтатусыИСМП = Ложь;
	КонецЕсли;
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПоискПоШтрихкодуЗавершение", ЭтотОбъект);
	
	ШтрихкодированиеИСКлиент.ОбработатьДанныеШтрихкода(
		ОповещениеПриЗавершении, ЭтотОбъект, ДанныеШтрихкода, ПараметрыСканирования);
	
КонецПроцедуры

#КонецОбласти

&НаСервереБезКонтекста
Функция ДанныеШтрихкода(СсылкаНаОбъект)
	
	ПараметрыСканирования = ШтрихкодированиеИС.ПараметрыСканирования(СсылкаНаОбъект);
	
	ДанныеШтрихкода = ШтрихкодированиеИС.ИнициализироватьДанныеШтрихкода(ПараметрыСканирования);
	
	Возврат ДанныеШтрихкода;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьПредставленияНоменклатуры()
	
	Представление = ИнтеграцияИСКлиентСервер.ПредставлениеНоменклатурыФорматированнойСтрокой(
		Номенклатура,
		Характеристика,
		ХарактеристикиИспользуются, Истина);

КонецПроцедуры

&НаСервере
Процедура ВывестиСообщениеНаСтраницеВводаКодаМаркировки(ТекстСообщения)
	
	ДобавитьЭлементДекорацияНаФорму();
	Элементы.ИнформацияВводаКодаМаркировки.Заголовок = ТекстСообщения;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементДекорацияНаФорму()
	
	ИмяЭлемента = "ИнформацияВводаКодаМаркировки";
	
	Если Элементы.Найти(ИмяЭлемента) = Неопределено Тогда
		Элементы.Добавить(ИмяЭлемента, Тип("ДекорацияФормы"), Элементы.ГруппаИнформация);
		Элементы.ИнформацияВводаКодаМаркировки.ЦветТекста = ЦветаСтиля.СтатусОбработкиОшибкаПередачиГосИС;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НазначитьЗаголовокКомандыДобавитьБезМаркировкиСервер()
	
	Клавиши = ЭтотОбъект.Команды.ДобавитьБезКодаМаркировки.СочетаниеКлавиш;
	ПредставлениеСочетанияКлавиш = "(";
	Если Клавиши.Ctrl Тогда
		ПредставлениеСочетанияКлавиш = ПредставлениеСочетанияКлавиш + "Ctrl+";
	КонецЕсли;
	
	Если Клавиши.Alt Тогда
		ПредставлениеСочетанияКлавиш = ПредставлениеСочетанияКлавиш + "Alt+";
	КонецЕсли;
	
	Если Клавиши.Shift Тогда
		ПредставлениеСочетанияКлавиш = ПредставлениеСочетанияКлавиш + "Shift+";
	КонецЕсли;
	
	ПредставлениеСочетанияКлавиш = ПредставлениеСочетанияКлавиш + Клавиши.Клавиша + ")";
	
	Элементы.ДобавитьБезКодаМаркировки.Заголовок = Элементы.ДобавитьБезКодаМаркировки.Заголовок + " " + ПредставлениеСочетанияКлавиш;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСообщениеДляЖурналаРегистрацииОНевозможностиВводаКодаМарки(Комментарий, КодМаркировки="")
	
	СтруктураСообщения = Новый Структура;
	
	СтруктураСообщения.Вставить("ИмяСобытия",     НСтр("ru='Отказ от сканирования кода маркировки'"));
	СтруктураСообщения.Вставить("Уровень",        "Информация");
	СтруктураСообщения.Вставить("Комментарий",    Комментарий);
	СтруктураСообщения.Вставить("Данные",         Неопределено);
	СтруктураСообщения.Вставить("СсылкаНаОбъект", Неопределено);
	СтруктураСообщения.Вставить("КодМаркировки",  КодМаркировки);
	
	ШтрихкодированиеИСКлиентПереопределяемый.ПриОпределенииИнформацииОбОтказеВводаКодаМаркиДляЖурналаРегистрации(
		ВладелецФормы, СтруктураСообщения);
	
	ДобавитьСообщениеДляЖурналаРегистрации(СтруктураСообщения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьСообщениеДляЖурналаРегистрации(СтруктураСообщения)
	
	Если СтруктураСообщения.СсылкаНаОбъект <> Неопределено Тогда
		МетаданныеОбъекта = СтруктураСообщения.СсылкаНаОбъект.Метаданные();
	КонецЕсли;
	
	УровеньЖурнала = Неопределено;
	Если СтруктураСообщения.Уровень = "Информация" Тогда
		УровеньЖурнала = УровеньЖурналаРегистрации.Информация;
	ИначеЕсли СтруктураСообщения.Уровень = "Ошибка" Тогда
		УровеньЖурнала = УровеньЖурналаРегистрации.Ошибка;
	ИначеЕсли СтруктураСообщения.Уровень = "Предупреждение" Тогда
		УровеньЖурнала = УровеньЖурналаРегистрации.Предупреждение;
	ИначеЕсли СтруктураСообщения.Уровень = "Примечание" Тогда
		УровеньЖурнала = УровеньЖурналаРегистрации.Примечание;
	КонецЕсли;
	
	ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации(
		СтруктураСообщения.ИмяСобытия, УровеньЖурнала, МетаданныеОбъекта, СтруктураСообщения.Данные, СтруктураСообщения.Комментарий);
	
КонецПроцедуры

&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()
	
	ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		ХранилищеСистемныхНастроек.Удалить("ОбщаяФорма.ФормаВводаКодаМаркировкиИСМП", "", ИмяПользователя);
	КонецЕсли;
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ТребуетсяВыборСерии(Склад)
	
	ТребуетсяВыбор = Ложь;
	ДанныеДляРасчетаСерии  = Новый Структура("Склад, Номенклатура, Характеристика", Склад, Номенклатура, Характеристика);
	ШтрихкодированиеИСПереопределяемый.ПриОпределинииНеобходимостиВыбораСерии(
		ДанныеДляРасчетаСерии, ПараметрыСканирования.ПараметрыУказанияСерий, ТребуетсяВыбор);
	
	Возврат ТребуетсяВыбор;
	
КонецФункции

&НаКлиенте
Процедура УказаниеСерииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Серия = Результат.ДанныеВыбора.Серия;
	СоздатьНовыйКодМаркировкиИВывестиНаПечать();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовыйКодМаркировкиИВывестиНаПечать()
	
	СтурктураПечатиЭтикетки                    = ПечатьЭтикетокИСМПКлиентСервер.СтурктураПечатиЭтикеткиОбувь();
	СтурктураПечатиЭтикетки.Номенклатура       = Номенклатура;
	СтурктураПечатиЭтикетки.Характеристика     = Характеристика;
	СтурктураПечатиЭтикетки.Серия              = Серия;
	СтурктураПечатиЭтикетки.СпособВводаВОборот = ДопустимыйСпособВводаВОборот;
	
	ОписаниеОповещенияРаспечататьНовыйКодЗавершение = Новый ОписаниеОповещения(
		"РаспечататьНовыйКодЗавершение", ЭтотОбъект);
	
	СтруктураПараметров = ПечатьЭтикетокИСМПКлиент.СтруктураПараметровПечатиНовогоКодаМаркировки(
		СтурктураПечатиЭтикетки, ЭтотОбъект, ОписаниеОповещенияРаспечататьНовыйКодЗавершение);
	Если ВладелецФормы.СохраненВыборПоМаркируемойПродукции Тогда
		ДанныеВыбора = ВладелецФормы.ДанныеВыбораПоМаркируемойПродукции;
		СтруктураПараметров.Шаблон         = ДанныеВыбора.Шаблон;
		СтруктураПараметров.СразуНаПринтер = ДанныеВыбора.СразуНаПринтер;
		СтруктураПараметров.ШаблонЭтикетки = ДанныеВыбора.ШаблонЭтикетки;
	КонецЕсли;
	СтруктураПараметров.ПараметрыСканирования = ПараметрыСканирования;
	СтруктураПараметров.Документ              = Документ;
	СтруктураПараметров.Номенклатура          = Номенклатура;
	СтруктураПараметров.Характеристика        = Характеристика;
	СтруктураПараметров.Серия                 = Серия;
	ПечатьЭтикетокИСМПКлиент.РаспечататьНовыйКодМаркировки(Истина, СтруктураПараметров);
	
КонецПроцедуры

#КонецОбласти
