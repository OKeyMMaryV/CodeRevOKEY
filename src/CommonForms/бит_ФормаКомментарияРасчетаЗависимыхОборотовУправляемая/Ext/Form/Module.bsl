
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КомментарийРасчета = Параметры.КомментарийРасчета;
	ТекстХТМЛ          = СформироватьТекстХТМЛ(КомментарийРасчета);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	
	ТекстХТМЛ = СформироватьТекстХТМЛ(КомментарийРасчета);
	
КонецПроцедуры // ПриПовторномОткрытии()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события "ПриНажатии" поля HTML документа "ТекстХТМЛ".
// 
&НаКлиенте
Процедура ТекстХТМЛПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	Если НЕ ДанныеСобытия.Anchor = Неопределено Тогда
		
		ДанныеСобытия.Event.returnValue = Ложь;
		
		Если ДанныеСобытия.Anchor.id = "CalcRef" Тогда
			
			// Открытие документа установки зависимых оборотов и позиционирование на нужную строку.
			Ссылка 			  = ДанныеСобытия.href;
			НомерНачалоСсылки = Найти(Ссылка,"#");
			Ссылка 			  = Сред(Ссылка, НомерНачалоСсылки+1);
			РезМассив 		  = бит_ОбщегоНазначенияКлиентСервер.РазобратьСтрокуСРазделителями(Ссылка,"/");			
			
			ПолноеИмя      = РезМассив[0];
			ИД             = РезМассив[1];
			СтрНомерСтроки = РезМассив[2];
			
			СтрИмена 		= бит_ОбщегоНазначенияКлиентСервер.РазобратьПолноеИмяОбъекта(ПолноеИмя);
			НайденнаяСсылка = НайтиСсылкуПоИД(СтрИмена, ИД);
			
			Если ЗначениеЗаполнено(НайденнаяСсылка) Тогда
				
				// Изменение кода. Начало. 28.05.2012{{
				НомерСтроки = Число(СтрНомерСтроки);			
				ПараметрыФормы = Новый Структура("Ключ, НомерТекущейСтроки", НайденнаяСсылка, НомерСтроки);
				ОткрытьФорму(СтрИмена.ИмяКласса + "." + СтрИмена.ИмяОбъекта + ".ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
				// Изменение кода. Конец. 28.05.2012}}
				
			КонецЕсли; 
			
		ИначеЕсли ДанныеСобытия.Anchor.id = "UserFunction" Тогда
			
			// Открытие пользовательской функции
			Ссылка 			  = ДанныеСобытия.href;
			НомерНачалоСсылки = Найти(Ссылка,"#");
			Ссылка 			  = Сред(Ссылка, НомерНачалоСсылки+1);			
			РезМассив 		  = бит_ОбщегоНазначенияКлиентСервер.РазобратьСтрокуСРазделителями(Ссылка,"/");			
			
			ПолноеИмя = РезМассив[0];
			ИД        = РезМассив[1];
			
			СтрИмена 		= бит_ОбщегоНазначенияКлиентСервер.РазобратьПолноеИмяОбъекта(ПолноеИмя);
			НайденнаяСсылка = НайтиСсылкуПоИД(СтрИмена, ИД);
			
			Если ЗначениеЗаполнено(НайденнаяСсылка) Тогда
				
				// Изменение кода. Начало. 28.05.2012{{
				ПараметрыФормы = Новый Структура("Ключ", НайденнаяСсылка);
				ОткрытьФорму(СтрИмена.ИмяКласса + "." + СтрИмена.ИмяОбъекта + ".ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
			    // Изменение кода. Конец. 28.05.2012}}
				
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЕсли; 	
	
КонецПроцедуры // ТекстХТМЛПриНажатии()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует HTML текст комментария расчета зависимых оборотов.
// 
// Параметры:
//  КомментарийРасчета - строка
// 
// Возвращаемое значение:
//  РезХТМЛ - Строка.
// 
&НаКлиентеНаСервереБезКонтекста
Функция СформироватьТекстХТМЛ(КомментарийРасчета)

	ЗаголовокХТМЛ = "<!DOCTYPE html PUBLIC ""-// W3C// DTD HTML 4.01// EN"" ""http://www.w3.org/TR/html4/strict.dtd"">.
                 |<html>
                 |<head>
                 |    <title>Calculation report</title>
                 |</head>
                 |<body>";
					 
	ЗавершениеХТМЛ = "</body>
                     |</html>";				 

	
	РезХТМЛ = ЗаголовокХТМЛ+КомментарийРасчета+ЗавершениеХТМЛ;

	Возврат РезХТМЛ;
	
КонецФункции // СформироватьТекстХТМЛ()

// Функция выполняет поиск ссылки по УникальномуИдентификатору.
// 
// Параметры:
//  СтрИмена - Структура
//  ИД - Строка
// 
// Возвращаемое значение:
//  НайденнаяСсылка - ЛюбаяСсылка.
// 
&НаСервереБезКонтекста
Функция НайтиСсылкуПоИД(СтрИмена, ИД)

	Менеджер        = бит_ОбщегоНазначения.ПолучитьМенеджер(СтрИмена.ИмяКоллекции, СтрИмена.ИмяОбъекта);
	НайденнаяСсылка = Менеджер.ПолучитьСсылку(Новый УникальныйИдентификатор(ИД));

	Возврат НайденнаяСсылка;
	
КонецФункции // НайтиСсылку()

#КонецОбласти
