#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоГруппа Тогда
		Возврат;	
	КонецЕсли; 
	
	Если НЕ ЭтоГруппа Тогда
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		КонецЕсли; 
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Назначение) Тогда
		ЭтотОбъект.Назначение = Перечисления.бит_НазначенияПользовательскихДействий.СозданиеЗадачи;
	КонецЕсли; 
		
КонецПроцедуры
	
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Назначение = Перечисления.бит_НазначенияПользовательскихДействий.Визирование Тогда
		ПроверяемыеРеквизиты.Добавить("Виза");
	ИначеЕсли Назначение = Перечисления.бит_НазначенияПользовательскихДействий.ИзменениеСтатусовОбъектов Тогда
		ПроверяемыеРеквизиты.Добавить("Статус");
	ИначеЕсли Назначение = Перечисления.бит_НазначенияПользовательскихДействий.СозданиеЗадачи Тогда
		
		ПроверяемыеРеквизиты.Добавить("Задача_Наименование");
		ПроверяемыеРеквизиты.Добавить("Задача_Важность");
		
		МаксКоличествоОбъектов = бит_уп_Сервер.МаксимальноеКоличествоОбъектовАдресации();
		НастройкиАдресации = Справочники.бит_РолиИсполнителей.НастройкиОбъектовАдресации(РольИсполнителя);		
		
		бит_уп_Сервер.НастроитьПроверкуРеквизитовАдресации(ПроверяемыеРеквизиты, НастройкиАдресации,
			СпособАдресации, МаксКоличествоОбъектов);
		
    ИначеЕсли Назначение = Перечисления.бит_НазначенияПользовательскихДействий.ПодчиненныйПроцесс Тогда
		ПроверяемыеРеквизиты.Добавить("АлгоритмПодчиненный");
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 	
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Задача_Предмет) И Задача_Предмет <> Неопределено Тогда
		Задача_Предмет = Неопределено;
	КонецЕсли; 
	
	Если Назначение = Перечисления.бит_НазначенияПользовательскихДействий.ПодчиненныйПроцесс Тогда
		бит_уп_Сервер.ПроверитьЗаполнениеПараметровПроцесса(ДополнительныеПараметры, Отказ);
	КонецЕсли; 	
	 
КонецПроцедуры
	
Процедура ПриЗаписи(Отказ)
		
	Если ОбменДанными.Загрузка Тогда
		Возврат;			
	КонецЕсли; 
		
	бит_ук_СлужебныйСервер.РегистрацияПриЗаписи(Отказ, ДополнительныеСвойства, Метаданные().ПолноеИмя());
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если ЗначениеЗаполнено(ОбъектКопирования.Алгоритм) Тогда
		Алгоритм = ОбъектКопирования.Алгоритм;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ОбъектКопирования.АлгоритмПодчиненный) Тогда
		АлгоритмПодчиненный = ОбъектКопирования.АлгоритмПодчиненный;
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти 	

#КонецЕсли
