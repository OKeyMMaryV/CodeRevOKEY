
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	 	
	Если фОтказ Тогда
		Возврат;	
	КонецЕсли;
	
	ЗаполнитьКэшЗначений();
	
	// Если новый элемент
	Если Параметры.Ключ.Пустая() И Объект.ВидОперации = Перечисления.бит_вго_ВидыОперацийВГО.Остатки Тогда
		фОтказ = Истина;
		Возврат;
	КонецЕсли;  	 	
	
	// Видимость, доступность...
	УстановитьВидимостьДоступность();
	 			
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если фОтказ Тогда
		
		Отказ = Истина;
		
		Если фКэшЗначений <> Неопределено 
			И Объект.ВидОперации = фКэшЗначений.Перечисления.бит_вго_ВидыОперацийВГО.Остатки Тогда
			ТекстСообщения = Нстр("ru = 'Невозможно создать элемент с видом операции ""Остатки"".'");
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РодительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	МассивВыбора = Новый Массив;
	Если ЗначениеЗаполнено(Объект.ВидОперации) Тогда
		МассивВыбора.Добавить(Новый ПараметрВыбора("Отбор.ВидОперации", Объект.ВидОперации));	
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ТипОперации) Тогда
		МассивВыбора.Добавить(Новый ПараметрВыбора("Отбор.ТипОперации", Объект.ТипОперации));	
	КонецЕсли;
	
	Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(МассивВыбора);
	
КонецПроцедуры // РодительНачалоВыбора()

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	ИзменениеРодителяСервер();
		
КонецПроцедуры // РодительПриИзменении()

&НаКлиенте
Процедура ВидОперацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.ЗагрузитьЗначения(фКэшЗначений.МассивВидовОперации);
		
КонецПроцедуры // ВидОперацииНачалоВыбора()

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
	ЭтоТехническаяОперация = Объект.ВидОперации = фКэшЗначений.Перечисления.бит_вго_ВидыОперацийВГО.Техническая;
	ЭтоОперацияОстатки 	= Объект.ВидОперации = фКэшЗначений.Перечисления.бит_вго_ВидыОперацийВГО.Остатки; 
	
	Если ЭтоТехническаяОперация ИЛИ ЭтоОперацияОстатки Тогда 		
		Объект.ТипОперации =  Неопределено;
		Элементы.ТипОперации.ОтметкаНезаполненного = Ложь;
	КонецЕсли;
	
	Элементы.ТипОперации.АвтоОтметкаНезаполненного = НЕ (ЭтоТехническаяОперация ИЛИ ЭтоОперацияОстатки);
		
КонецПроцедуры // ВидОперацииПриИзменении()
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура заполняет кэш значений, необходимый при работе на клиенте.
// 
// Параметры:
//  Нет.
// 
&НаСервере
Процедура ЗаполнитьКэшЗначений()
	
	фКэшЗначений = Новый Структура;
		
	// Перечисления.
	КэшПеречисления = Новый Структура;
	КэшПеречисления.Вставить("бит_вго_ВидыОперацийВГО", бит_ОбщегоНазначения.КэшироватьЗначенияПеречисления(Перечисления.бит_вго_ВидыОперацийВГО));
			
	фКэшЗначений.Вставить("Перечисления", КэшПеречисления);
	
	МассивВидовОперации = Новый Массив;
	Для каждого ЗначениеВидОперации Из Перечисления.бит_вго_ВидыОперацийВГО Цикл
		Если ЗначениеВидОперации <> Перечисления.бит_вго_ВидыОперацийВГО.Остатки  Тогда
			МассивВидовОперации.Добавить(ЗначениеВидОперации); 		
		КонецЕсли;
	КонецЦикла;
	фКэшЗначений.Вставить("МассивВидовОперации", МассивВидовОперации);
	
КонецПроцедуры

// Процедура выполняет действия, необходимые при изменении родителя.
// 
// Параметры:
//  Нет
// 
&НаСервере
Процедура ИзменениеРодителяСервер()

	Если ЗначениеЗаполнено(Объект.Родитель) Тогда
		Объект.ВидОперации = Объект.Родитель.ВидОперации;
		Объект.ТипОперации = Объект.Родитель.ТипОперации;
	КонецЕсли;
	
	УстановитьВидимостьДоступность();

КонецПроцедуры // ИзменениеРодителяСервер()

// Процедура устанавливает видимость, доступность, только просмотр.
// 
// Параметры:
//  Нет
// 
&НаСервере
Процедура УстановитьВидимостьДоступность()

	ЗаполненРодительИлиПредопр = ЗначениеЗаполнено(Объект.Родитель) ИЛИ Объект.Предопределенный;
	ЭтоТехническаяОперация = Объект.ВидОперации = фКэшЗначений.Перечисления.бит_вго_ВидыОперацийВГО.Техническая;
	ЭтоОперацияОстатки 	   = Объект.ВидОперации = фКэшЗначений.Перечисления.бит_вго_ВидыОперацийВГО.Остатки; 
	
	Элементы.ВидОперации.ТолькоПросмотр = ЗаполненРодительИлиПредопр;
	Элементы.ТипОперации.ТолькоПросмотр = ЗаполненРодительИлиПредопр ИЛИ ЭтоТехническаяОперация ИЛИ ЭтоОперацияОстатки;
	
КонецПроцедуры // УстановитьВидимостьДоступность()

#КонецОбласти
