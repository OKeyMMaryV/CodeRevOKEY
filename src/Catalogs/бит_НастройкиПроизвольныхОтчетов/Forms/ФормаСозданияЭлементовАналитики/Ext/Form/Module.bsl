
#Область ОбработчикиСобытийФормы
	
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	фКэшЗначений = Новый Структура;
	фКэшЗначений.Вставить("НастройкиАналитик", Новый Соответствие);
	
	Если Параметры.Свойство("ИспользуемаяАналитика") Тогда
	 
		Если Параметры.ИспользуемаяАналитика.Количество() = 0 Тогда

			ТекстСообщения =  НСтр("ru = 'Не настроена аналитика для отчета!'");
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);

		КонецЕсли; 

		Для каждого КиЗ Из Параметры.ИспользуемаяАналитика Цикл

			Элементы.Аналитика.СписокВыбора.Добавить(КиЗ.Значение);

			ПарамАналитики = Новый Структура;
			ПарамАналитики.Вставить("ИмяАналитикиОтчета", КиЗ.Ключ);
			ПарамАналитики.Вставить("Аналитика", КиЗ.Значение);
			ПарамАналитики.Вставить("ТипЗначения", ПарамАналитики.Аналитика.ТипЗначения);

			фКэшЗначений.НастройкиАналитик.Вставить(ПарамАналитики.Аналитика, ПарамАналитики);

		КонецЦикла; 

	КонецЕсли; 
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
	
&НаКлиенте
Процедура АналитикаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Аналитика) Тогда
		
		 ПарамАналитики = фКэшЗначений.НастройкиАналитик[Аналитика];
		 Если НЕ ПарамАналитики = Неопределено Тогда
			 
			 ЭлементыЗаполнения.ТипЗначения = ПарамАналитики.ТипЗначения;
			 
		 КонецЕсли; 
		 
		 ЭлементыЗаполнения.Очистить();
		
		 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыЗаполненияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПроверитьВыбор(ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыЗаполненияЗначениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПроверитьВыбор(ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	РезДанные = Новый Структура;
	РезДанные.Вставить("ИмяАналитики", "");
	РезДанные.Вставить("Аналитика", Аналитика);
	РезДанные.Вставить("ЭлементыЗаполнения", ЭлементыЗаполнения);
	
	Если ЗначениеЗаполнено(Аналитика) Тогда
		
		ПарамАналитики = фКэшЗначений.НастройкиАналитик[Аналитика];
		Если НЕ ПарамАналитики = Неопределено Тогда
		
			 РезДанные.ИмяАналитики = ПарамАналитики.ИмяАналитикиОтчета;
		
		КонецЕсли; 
		
	КонецЕсли; 
	
	Закрыть(РезДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьПоГруппе(Команда)
	
	Если ЗначениеЗаполнено(Аналитика) Тогда
	
		 ПарамАналитики = фКэшЗначений.НастройкиАналитик[Аналитика];
		 Если НЕ ПарамАналитики = Неопределено Тогда
			 
			 ИмяФормыВыбора = ПолучитьИмяФормыВыбора(ПарамАналитики.ТипЗначения);
			 
			 Оповещение = Новый ОписаниеОповещения("ВыборГруппыЗавершение", ЭтотОбъект);
			 РежимОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
			 ОткрытьФорму(ИмяФормыВыбора,,ЭтотОбъект,,,,Оповещение, РежимОкна);
						 
		 КонецЕсли; 

	
	КонецЕсли; 
	
КонецПроцедуры

// Процедура обработчик оповещения "ВыборГруппыЗавершение".
//
// Параметры:
// ВыбЗначение - Произвольный
// ДополнительныеДанные - Структура.
//
&НаКлиенте 
Процедура ВыборГруппыЗавершение(ВыбЗначение, ДополнительныеДанные) Экспорт

	Если НЕ ВыбЗначение = Неопределено Тогда
	
		 ЗаполнитьПоГруппе(ВыбЗначение);
		
	КонецЕсли; 
	
КонецПроцедуры	// ВыборГруппыЗавершение

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьВыбор(ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		
		Для каждого Эл Из ВыбранноеЗначение Цикл
			
			Если Эл.ЭтоГруппа Тогда
				
				СтандартнаяОбработка = Ложь;
				ТекстСообщения =  НСтр("ru = 'Выбор групп не доступен.'");
				бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
				Прервать;
				
			КонецЕсли; 
			
		КонецЦикла; 
		
	Иначе	
		
		Если ВыбранноеЗначение.ЭтоГруппа Тогда
			
			СтандартнаяОбработка = Ложь;
			ТекстСообщения =  НСтр("ru = 'Выбор групп не доступен.'");
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
			
		КонецЕсли; 
		
	КонецЕсли; 
	
	
КонецПроцедуры // ПроверитьВыбор()

// Функция получает имя формы выбора.
//
// Параметры:
//    вхОписание - ОписаниеТипов
//
// Возвращаемое значение:
//  ИмяФормыВыбора - Строка.
//
&НаСервере
Функция ПолучитьИмяФормыВыбора(вхОписание)
	
	ИмяФормыВыбора = "";
	
	Имена = бит_РаботаСМетаданными.ПолучитьИмяОбъектаПоОписаниюТипов(вхОписание);
	ИмяФормыВыбора = "Справочник."+Имена.Имя+".ФормаВыбораГруппы";
		
	Возврат ИмяФормыВыбора;
	
КонецФункции // ПолучитьИмяФормыВыбора()

// Процедура заполняет список по группе справочника. 
//
// Параметры:
//  вхГруппа - СправочникСсылка.
//
&НаСервере
Процедура ЗаполнитьПоГруппе(вхГруппа)

	ТекТип = ТипЗнч(вхГруппа);
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(ТекТип);
	
	ТекОписание = Новый ОписаниеТипов(МассивТипов);
	
	Имена = бит_РаботаСМетаданными.ПолучитьИмяОбъектаПоОписаниюТипов(ТекОписание);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Группа", вхГруппа);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТабСпр.Ссылка
	               |ИЗ
	               |	Справочник.бит_СтатьиОборотов КАК ТабСпр
	               |ГДЕ
	               |	ТабСпр.Ссылка В ИЕРАРХИИ(&Группа)
	               |	И ТабСпр.Ссылка <> &Группа";
				   
	
	// Изменяем таблицу через источник запроса.
	
	Схема = Новый СхемаЗапроса;
	Схема.УстановитьТекстЗапроса(Запрос.Текст);
	ТаблицаСхемы = Схема.ПакетЗапросов[0].ДоступныеТаблицы.Найти("Справочник."+Имена.Имя);
	Схема.ПакетЗапросов[0].Операторы[0].Источники.Заменить(0, ТаблицаСхемы); 

	Запрос.Текст = Схема.ПолучитьТекстЗапроса();
		
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЭлементыЗаполнения.НайтиПоЗначению(Выборка.Ссылка) = Неопределено 
			 ИЛИ Выборка.Ссылка.ЭтоГруппа Тогда
		
			Продолжить;
		
		КонецЕсли; 
		
		ЭлементыЗаполнения.Добавить(Выборка.Ссылка);
	
	КонецЦикла; 
	
КонецПроцедуры // ЗаполнитьПоГруппе()

#КонецОбласти