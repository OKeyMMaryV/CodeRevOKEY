
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТипОтчета              = Параметры.ТипОтчета;
	фИмяПараметраПоследнее = Параметры.ИмяПараметраПоследнее;
	фСпособКомпоновки	   = Параметры.СпособКомпоновки;
	//ТаблицаПараметров 	   = Параметры.Тч_Параметры;
	
	ТаблицаПараметров = ЗагрузитьТаблицуПараметров(Параметры.СписокПараметров);

	ОбновитьДеревоПараметров(ТаблицаПараметров);
			
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	бит_РаботаСДиалогамиКлиент.РазвернутьДеревоПолностью(Элементы.ДеревоПараметров, ДеревоПараметров.ПолучитьЭлементы());
	Элементы.ДеревоПараметров.ТекущаяСтрока = фНомерТекущейСтроки;	
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоПараметры

&НаКлиенте
Процедура ДеревоПараметрыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ОбработкаВыбораПараметра();
	
КонецПроцедуры // ДеревоПараметрыВыбор()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ОбработкаВыбораПараметра();
	
КонецПроцедуры // ОК()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЗагрузитьТаблицуПараметров(СписокПараметров)

	ТаблицаПараметров = Новый ТаблицаЗначений();
	ТаблицаПараметров.Колонки.Добавить("Параметр");
	ТаблицаПараметров.Колонки.Добавить("ВидПараметра");
	ТаблицаПараметров.Колонки.Добавить("Значение");

	ТЗСпискаПараметров = СписокПараметров.Выгрузить();
	КолонкиСписка      = ТЗСпискаПараметров.СкопироватьКолонки().Колонки;
	КолонкиСписка.Удалить("Параметр");
	Для каждого СтрокаТаблицы Из ТЗСпискаПараметров Цикл
		
		ТекстНаРазныхЯзыках = Новый Структура(); 
		Для каждого Колонка Из КолонкиСписка Цикл
			Если НЕ ПустаяСтрока(СтрокаТаблицы[Колонка.Имя]) Тогда
				ТекстНаРазныхЯзыках.Вставить(Колонка.Имя, СтрокаТаблицы[Колонка.Имя]);
			КонецЕсли; 
		КонецЦикла; 
		НоваяСтрока				 = ТаблицаПараметров.Добавить();
		НоваяСтрока.Параметр	 = СтрокаТаблицы.Параметр;
		НоваяСтрока.ВидПараметра = Перечисления.бит_ВидыПараметровПроизвольныхОтчетов.ТекстНаРазныхЯзыках;
		НоваяСтрока.Значение 	 = бит_ОбщегоНазначенияКлиентСервер.СформироватьТекстНаРазныхЯзыках(ТекстНаРазныхЯзыках);

	КонецЦикла; 
	
	Возврат ТаблицаПараметров;
	
КонецФункции // ЗагрузитьТаблицуПараметров()
 
&НаСервере
Функция ДобавитьСтрокуДереваПараметров(СтрокаВерх, ИмяПараметра)

	ВеткаДерева = СтрокаВерх.ПолучитьЭлементы();
	
	СтрокаПараметр = ВеткаДерева.Добавить();
	СтрокаПараметр.ИмяПараметра  = ИмяПараметра;
	СтрокаПараметр.РазрешенВыбор = Истина;
	СтрокаПараметр.Картинка 	 = БиблиотекаКартинок.бит_Реквизит;
	                	
	Если ИмяПараметра = фИмяПараметраПоследнее Тогда 	
		фНомерТекущейСтроки = фСч;	
	КонецЕсли;
	
	фСч = фСч + 1;

	Возврат СтрокаПараметр;
	
КонецФункции // ДобавитьСтрокуДереваПараметров()

// Процедура заполняет дерево параметров.
// 
// Параметры:
//  ТаблицаПараметров - ДанныеФормыКоллекция.
// 
&НаСервере
Процедура ОбновитьДеревоПараметров(ТаблицаПараметров)
	
	КартинкаНеРазрешенВыбор = БиблиотекаКартинок.бит_Реквизиты;
	
	КореньДерева = ДеревоПараметров.ПолучитьЭлементы();
	КореньДерева.Очистить();
	фСч = 0;
	
	// Ветка "Стандартные"
	СтрокаВид = КореньДерева.Добавить();
	СтрокаВид.ИмяПараметра = "Стандартные";
	СтрокаВид.Картинка 	   = КартинкаНеРазрешенВыбор;
	фСч = фСч + 1;
	// Строки ветки "Стандартные"
	ДобавитьСтрокуДереваПараметров(СтрокаВид, "ДатаНачала");
	ДобавитьСтрокуДереваПараметров(СтрокаВид, "ДатаОкончания");
	ДобавитьСтрокуДереваПараметров(СтрокаВид, "ДатаНачалаФормат");
	ДобавитьСтрокуДереваПараметров(СтрокаВид, "ДатаОкончанияФормат");
	ДобавитьСтрокуДереваПараметров(СтрокаВид, "ДеньНач");
	ДобавитьСтрокуДереваПараметров(СтрокаВид, "ДеньКон");
	ДобавитьСтрокуДереваПараметров(СтрокаВид, "МесяцНач");
	ДобавитьСтрокуДереваПараметров(СтрокаВид, "МесяцКон");
	ДобавитьСтрокуДереваПараметров(СтрокаВид, "ГодНач");
	ДобавитьСтрокуДереваПараметров(СтрокаВид, "ГодКон");
	ДобавитьСтрокуДереваПараметров(СтрокаВид, "ОписаниеПериода");
	
	Если ТипОтчета = Перечисления.бит_ТипыПроизвольныхОтчетов.ОтчетностьМСФО Тогда
		ДобавитьСтрокуДереваПараметров(СтрокаВид, "ОписаниеПериодаМСФО");
		ДобавитьСтрокуДереваПараметров(СтрокаВид, "КонсолидированныйОтчет");
		ДобавитьСтрокуДереваПараметров(СтрокаВид, "КонецПрошлогоГода");    // КонецГода(ДобавитьМесяц(Отчет.ДатаОкончания, -12));
		ДобавитьСтрокуДереваПараметров(СтрокаВид, "КонецПозапрошлогоГода");// КонецГода(ДобавитьМесяц(Отчет.ДатаОкончания, -24));
	КонецЕсли; 
	
	// Ветка "Параметры запросов".
	СтрокаВид = КореньДерева.Добавить();
	СтрокаВид.ИмяПараметра = "Параметры запросов";
	СтрокаВид.Картинка 	   = КартинкаНеРазрешенВыбор;
	фСч = фСч + 1;
	// Строки ветки "Параметры запросов"
	ПараметрыЗапроса = Новый ТаблицаЗначений(); 
	ПараметрыЗапроса.Колонки.Добавить("ИмяПараметра");
	ПараметрыЗапроса.Колонки.Добавить("ВидПараметра");
	ПараметрыЗапроса.Колонки.Добавить("ЗначениеПараметра");
	ПараметрыЗапроса.Колонки.Добавить("ДоступныеТипы");
	бит_МеханизмПолученияДанных.ОбновитьТаблицуПараметров(фСпособКомпоновки, ПараметрыЗапроса, Истина);
	Для каждого СтрокаТаблицы Из ПараметрыЗапроса Цикл         		
		ДобавитьСтрокуДереваПараметров(СтрокаВид, СтрокаТаблицы.ИмяПараметра);
	КонецЦикла; 

	// Ветка "Отбор"
	СтрокаВид = КореньДерева.Добавить();
	СтрокаВид.ИмяПараметра = "Отбор";
	СтрокаВид.Картинка 	   = КартинкаНеРазрешенВыбор;
	фСч = фСч + 1;
	// Строки ветки "Отбор"
	ОтборВОтчете = Новый ТаблицаЗначений;
	ОтборВОтчете.Колонки.Добавить("Использование");
	ОтборВОтчете.Колонки.Добавить("Имя");
	ОтборВОтчете.Колонки.Добавить("ВидСравнения");
	ОтборВОтчете.Колонки.Добавить("Значение");    	
	бит_МеханизмПолученияДанных.ЗаполнитьОтборВОтчете(фСпособКомпоновки, ОтборВОтчете);	
	Для каждого СтрокаОтбор Из ОтборВОтчете Цикл         		
		ДобавитьСтрокуДереваПараметров(СтрокаВид, СтрокаОтбор.Имя);
		ДобавитьСтрокуДереваПараметров(СтрокаВид, СтрокаОтбор.Имя + "_ВидСравнения"); 		
	КонецЦикла; 
		
	// Ветка "Текст на разных языках"
	СтрокаВид = КореньДерева.Добавить();
	СтрокаВид.ИмяПараметра = "Текст на разных языках";
	СтрокаВид.Картинка 	   = КартинкаНеРазрешенВыбор;
	фСч = фСч + 1;
	// Строки ветки "Текст на разных языках"
	Если ТаблицаПараметров <> Неопределено Тогда 		
		Для каждого СтрокаТаблицы Из ТаблицаПараметров Цикл	
			Если СтрокаТаблицы.ВидПараметра = Перечисления.бит_ВидыПараметровПроизвольныхОтчетов.ТекстНаРазныхЯзыках 
				Или Не ЗначениеЗаполнено(СтрокаТаблицы.ВидПараметра) Тогда        			
				ДобавитьСтрокуДереваПараметров(СтрокаВид, СтрокаТаблицы.Параметр);			
			КонецЕсли;   		
		КонецЦикла;
	КонецЕсли;
		   
КонецПроцедуры // ОбновитьДеревоПараметров()

// Процедура выполняет действия по кнопке "ОК".
// 
// 
&НаКлиенте
Процедура ОбработкаВыбораПараметра()
	
	ТекущиеДанные = Элементы.ДеревоПараметров.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если ТекущиеДанные.РазрешенВыбор Тогда
			
			РезСтруктура = Новый Структура;
			РезСтруктура.Вставить("ИмяПараметра", ТекущиеДанные.ИмяПараметра);
			Закрыть(РезСтруктура);
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры // ОбработкаВыбораПараметра()

#КонецОбласти
