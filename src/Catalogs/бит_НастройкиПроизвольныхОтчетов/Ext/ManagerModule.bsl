#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс
	
// Функция получает показатели произвольного отчета определенного вида.
// 
// Параметры:
//  НастройкаОтчета - СправочникСсылка.бит_НастройкиПроизвольныхОтчетов.
//  Вид             - ПеречислениеСсылка.бит_ВидыЯчеекПроизвольныхОтчетов.
// 
// Возвращаемое значение:
//   ТаблицаЗначений
// 
Функция ПолучитьПоказателиВида(НастройкаОтчета, Вид) Экспорт
	
	Возврат Справочники.бит_ПоказателиПроизвольныхОтчетов.ПолучитьПоказателиВида(НастройкаОтчета, Вид);;
	
КонецФункции // ПолучитьПоказателиВида()

// Функция получает показатели отчета.
// 
// Параметры:
//  НастройкаОтчета - СправочникСсылка.бит_НастройкиПроизвольныхОтчетов.
// 
// Возвращаемое значение:
//   ТаблицаЗначений
// 
Функция ПолучитьПоказателиОтчета(НастройкаОтчета) Экспорт
	
	ВидыЯчеек = Новый Массив;
	Для каждого Элемент Из Перечисления.бит_ВидыЯчеекПроизвольногоОтчета Цикл
		ВидыЯчеек.Добавить(Элемент);
	КонецЦикла; 
	
	Возврат ПолучитьПоказателиВида(НастройкаОтчета, ВидыЯчеек);
	
КонецФункции // ПолучитьПоказателиОтчета()
 
// Функция определяет есть ли показатели у данного отчета отчета.
// 
// Параметры:
//  НастройкаОтчета - СправочникСсылка.бит_НастройкиПроизвольныхОтчетов.
// 
// Возвращаемое значение:
//   Булево
// 
Функция ЕстьПоказателиОтчета(НастройкаОтчета) Экспорт

	флЕстьПоказатели = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", НастройкаОтчета);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	бит_ПоказателиПроизвольныхОтчетов.Ссылка
	|ИЗ
	|	Справочник.бит_ПоказателиПроизвольныхОтчетов КАК бит_ПоказателиПроизвольныхОтчетов
	|ГДЕ
	|	бит_ПоказателиПроизвольныхОтчетов.Владелец = &Владелец
	|";            				   
	Результат = Запрос.Выполнить();
	
	флЕстьПоказатели = Не Результат.Пустой();	

	Возврат флЕстьПоказатели;
	
КонецФункции // ЕстьПоказателиОтчета()

// Функция очищает показатели текущего отчета.
// 
// Параметры:
//  НастройкаОтчета - СправочникСсылка.бит_НастройкиПроизвольныхОтчетов.
// 
// Возвращаемое значение:
//   Булево
// 
Функция УдалитьПоказателиОтчета(НастройкаОтчета) Экспорт

	флДействиеВыполнено = Истина;
	
	МассивВидов = Новый Массив;
	Для каждого ЗначениеПеречисления Из Метаданные.Перечисления.бит_ВидыЯчеекПроизвольногоОтчета.ЗначенияПеречисления Цикл
		
		ТекЗначение = Перечисления.бит_ВидыЯчеекПроизвольногоОтчета[ЗначениеПеречисления.Имя];
		МассивВидов.Добавить(ТекЗначение);
	
	КонецЦикла; 
	
	ТаблицаПоказатели = ПолучитьПоказателиВида(НастройкаОтчета, МассивВидов);
	
	Для каждого СтрокаТаблицы Из ТаблицаПоказатели Цикл		
	
	КонецЦикла; 
	

	Возврат флДействиеВыполнено;
	
КонецФункции // УдалитьПоказателиОтчета()

// Функция получает настройку аналитик произвольного отчета.
// 
// Параметры:
//  НастройкаОтчета - СправочникСсылка.бит_НастройкиПроизвольныхОтчетов.
// 
// Возвращаемое значение:
//  Соответствие
// 
Функция ПолучитьНастройкуАналитик(НастройкаОтчета, Ключ = "Имя") Экспорт

	НастройкаАналитик = Новый Соответствие;
	
	Для каждого СтрокаТаблицы Из НастройкаОтчета.ИспользованиеАналитики Цикл
		
		СтрНастроек = бит_МеханизмДопИзмерений.КонструкторСтруктураНастроек();
		
		СтрНастроек.Аналитика           = СтрокаТаблицы.Аналитика;
		СтрНастроек.ИмяАналитики        = СтрокаТаблицы.ИмяАналитики;
		СтрНастроек.ИмяПоля             = СтрокаТаблицы.ИмяПоля;
		СтрНастроек.Синоним             = СтрокаТаблицы.СинонимАналитики;
		СтрНастроек.Обязательное        = СтрокаТаблицы.Обязательное;
		СтрНастроек.ТипЗначения         = СтрокаТаблицы.Аналитика.ТипЗначения;
		СтрНастроек.ЭтоСоставнойТип     = бит_МеханизмДопИзмерений.ЭтоАналитикаСоставногоТипа(СтрокаТаблицы.Аналитика);
		СтрНастроек.ИмяТипаПоУмолчанию  = "";
		бит_МеханизмДопИзмерений.ОпределитьЗначениеПоУмолчанию(СтрНастроек);
		
		Если Ключ = "Аналитика" Тогда
			НастройкаАналитик.Вставить(СтрокаТаблицы.Аналитика,СтрНастроек);										  
		Иначе	
			НастройкаАналитик.Вставить(СтрокаТаблицы.ИмяАналитики,СтрНастроек);										  
		КонецЕсли; 
	
	КонецЦикла; 

	Возврат НастройкаАналитик;
	
КонецФункции // ПолучитьНастройкуАналитик()

// Функция формирует соответствие полей таблицы данных, 
// получаемой механизмом способов компоновки источников и полей аналитики.
// 
// Параметры:
//  НастройкаОтчета - СправочникСсылка.бит_НастройкиПроизвольныхОтчетов.
// 
// Возвращаемое значение:
//  Соответствие
// 
Функция ПолучитьПоляАналитики(НастройкаОтчета) Экспорт

	ПоляАналитики = Новый Соответствие;
	
	Для каждого СтрокаТаблицы Из НастройкаОтчета.ИспользованиеАналитики Цикл		
		ПоляАналитики.Вставить(СтрокаТаблицы.ИмяПоля,СтрокаТаблицы.ИмяАналитики);  		
	КонецЦикла;

	Возврат ПоляАналитики;
	
КонецФункции // ПолучитьПоляАналитики()

#КонецОбласти

#КонецЕсли
