
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	
	
	
	// Вызов механизма защиты
		
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 	
	
	фСостояние = РегистрыСведений.бит_мдм_СостоянияОбъектов.СостояниеОбъекта(Объект.Ссылка);
	
	Если ЗначениеЗаполнено(Объект.ОписаниеОбъекта) Тогда
		
		фИмяФормыИсточника = "РегистрСведений."+Объект.ОписаниеОбъекта.Имя+".ФормаЗаписи";
		
	КонецЕсли; 
	
	УстановитьВидимость();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	фСостояние = РегистрыСведений.бит_мдм_СостоянияОбъектов.СостояниеОбъекта(ТекущийОбъект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ Отказ И Модифицированность Тогда
		
		ПсевдоМета = Справочники.бит_мдм_ОписанияОбъектовОбмена.ЭмулироватьМетаданные(ТекущийОбъект.ОписаниеОбъекта, "Структура");
		ПсевдоОбъект = Справочники.бит_мдм_ОписанияОбъектовОбмена.ЭмулироватьОбъектПоДаннымФормы(ЭтотОбъект, ПсевдоМета);
		
		бит_мдм_РаботаСДиалогами.СохранитьДанныеФормы(ТекущийОбъект, ПсевдоОбъект, ПсевдоМета);
		
	КонецЕсли; 
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаРедактироватьИсточник(Команда)
	
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", СформироватьКлючЗаписи());
		Оповещение = Новый ОписаниеОповещения("ЗавершениеРедактированияИсточника", ЭтотОбъект);
		РежимОкна = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
		ОткрытьФорму(фИмяФормыИсточника, ПараметрыФормы,,,,,Оповещение, РежимОкна);
		
	
КонецПроцедуры

// Процедура обработчик оповещения "ЗавершениеРедактированияИсточника".
// 
// Параметры:
// Результат - Произвольный
// ДополнительныеДанные - Структура.
// 
&НаКлиенте 
Процедура ЗавершениеРедактированияИсточника(Результат, ДополнительныеДанные) Экспорт

	ОповеститьОбИзменении(Объект.Ссылка);
	ЭтаФорма.Прочитать();
	
КонецПроцедуры	// ЗавершениеРедактированияИсточника

&НаКлиенте
Процедура КомандаРазрешитьРедактирование(Команда)
	
	Если Модифицированность Тогда
	
		флОК = Записать();
		
		Если НЕ флОК Тогда
		
			Возврат;
		
		КонецЕсли; 
	
	КонецЕсли; 	
	
	Элементы.ФормаКомандаРазрешитьРедактирование.Пометка = НЕ Элементы.ФормаКомандаРазрешитьРедактирование.Пометка;
	
	ЭтотОбъект.ТолькоПросмотр = НЕ Элементы.ФормаКомандаРазрешитьРедактирование.Пометка;
	Элементы.ФормаКомандаРедактироватьИсточник.Доступность = НЕ Элементы.ФормаКомандаРазрешитьРедактирование.Пометка;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает видимость/доступность элементов формы.
// 
&НаСервере
Процедура УстановитьВидимость()

	ЭтоТекущаяБаза = ?(Объект.ВидИнформационнойБазы = Справочники.бит_мпд_ВидыИнформационныхБаз.ТекущаяИнформационнаяБаза, Истина, Ложь);
	
	ЭтаФорма.ТолькоПросмотр =  ЭтоТекущаяБаза;
	Элементы.ФормаКомандаРедактироватьИсточник.Видимость = ЭтоТекущаяБаза;
	Элементы.ФормаКомандаРазрешитьРедактирование.Видимость = ЭтоТекущаяБаза;

КонецПроцедуры // УстановитьВидимость()

// Функция формирует ключ записи регистра сведений.
//
// Возвращаемое значение:
//  Ключ - РегистрСведенийКлючЗаписи.
//
&НаСервере
Функция СформироватьКлючЗаписи()

	СтрИзмерения = Новый Структура;
	Для каждого СтрокаТаблицы Из Объект.Данные Цикл
	
		Если СтрокаТаблицы.ОписаниеРеквизита.Вид = Перечисления.бит_мдм_ВидыРеквизитов.Измерение 
			  ИЛИ СтрокаТаблицы.ОписаниеРеквизита.Вид = Перечисления.бит_мдм_ВидыРеквизитов.СтандартныйРеквизит Тогда
			
			 Если СтрокаТаблицы.ОписаниеРеквизита.ВидОбъекта = Перечисления.бит_мдм_ВидыОбъектовОбмена.Справочник Тогда
				 
				 ТекЗнч = Справочники[СтрокаТаблицы.ОписаниеРеквизита.ИмяОбъекта].ПолучитьСсылку(Новый УникальныйИдентификатор(СтрокаТаблицы.Значение.ИД));

			 ИначеЕсли СтрокаТаблицы.ОписаниеРеквизита.ВидОбъекта = Перечисления.бит_мдм_ВидыОбъектовОбмена.Счет Тогда	
				 
				 ТекЗнч = ПланыСчетов[СтрокаТаблицы.ОписаниеРеквизита.ИмяОбъекта].ПолучитьСсылку(Новый УникальныйИдентификатор(СтрокаТаблицы.Значение.ИД));

			 ИначеЕсли СтрокаТаблицы.ОписаниеРеквизита.ВидОбъекта = Перечисления.бит_мдм_ВидыОбъектовОбмена.ПланВидовХарактеристик Тогда	 
				 
				 ТекЗнч = ПланыВидовХарактеристик[СтрокаТаблицы.ОписаниеРеквизита.ИмяОбъекта].ПолучитьСсылку(Новый УникальныйИдентификатор(СтрокаТаблицы.Значение.ИД));
				 
			 ИначеЕсли СтрокаТаблицы.ОписаниеРеквизита.ВидОбъекта = Перечисления.бит_мдм_ВидыОбъектовОбмена.Перечисление Тогда	 

				  ТекЗнч = Перечисления[СтрокаТаблицы.ОписаниеРеквизита.ИмяОбъекта][СтрокаТаблицы.Значение.Имя];
				 
			 Иначе	
				 
				 ТекЗнч = СтрокаТаблицы.Значение;
				 
			 КонецЕсли; 
			
			 СтрИзмерения.Вставить(СтрокаТаблицы.ИмяРеквизита, ТекЗнч);
		
		КонецЕсли; 
	
	КонецЦикла; 
	
	Ключ = РегистрыСведений[Объект.ОписаниеОбъекта.Имя].СоздатьКлючЗаписи(СтрИзмерения);

	Возврат Ключ;
	
КонецФункции // СформироватьКлючЗаписи()

#КонецОбласти


