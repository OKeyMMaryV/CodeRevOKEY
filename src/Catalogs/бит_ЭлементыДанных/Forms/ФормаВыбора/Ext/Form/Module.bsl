
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыборЭлемента  = Параметры.ВыборЭлемента;
	ИсточникДанных = Параметры.ИсточникДанных;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВыборЭлемента Тогда
		
		ВидГруппы = Элементы.Список.ТекущиеДанные.ВидГруппы;
		Если ВидГруппы <> ПредопределенноеЗначение("Перечисление.бит_ВидыГруппДанных.ВыборкаДанных") Тогда
			СтандартнаяОбработка = Ложь;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не Копирование Тогда
		Отказ = Истина;
		ДобавитьЭлементДанных(Ложь);	
	КонецЕсли;     	 

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьГруппу(Команда)

	ДобавитьЭлементДанных(Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьЭлементДанных(Группа = Ложь)

	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока; 	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;

	ЗначенияЗаполнения = Новый Структура(); 	
	
	ОтборВладелец = ОбщегоНазначенияКлиентСервер.НайтиЭлементыИГруппыОтбора(Список.Отбор, "Владелец");
	Если ОтборВладелец.Количество() <> 0 Тогда
		ЗначенияЗаполнения.Вставить("Владелец", ОтборВладелец[0].ПравоеЗначение);
	КонецЕсли; 
	
	Если Группа Тогда
		ЗначенияЗаполнения.Вставить("ВидГруппы", ПредопределенноеЗначение("Перечисление.бит_ВидыГруппДанных.Группировка")); 
	Иначе
		ЗначенияЗаполнения.Вставить("ВидГруппы", ПредопределенноеЗначение("Перечисление.бит_ВидыГруппДанных.ВыборкаДанных")); 
	КонецЕсли; 
	
	Если ТекущаяСтрока <> Неопределено И ТекущиеДанные <> Неопределено Тогда
		Если ТекущиеДанные.ВидГруппы = ПредопределенноеЗначение("Перечисление.бит_ВидыГруппДанных.ВыборкаДанных") 
			ИЛИ ТекущиеДанные.ВидГруппы = ПредопределенноеЗначение("Перечисление.бит_ВидыГруппДанных.Формула") Тогда
			ЗначенияЗаполнения.Вставить("Родитель", ТекущиеДанные.Родитель);
		Иначе
			ЗначенияЗаполнения.Вставить("Родитель", ТекущаяСтрока);
		КонецЕсли;			
	КонецЕсли;
	
	ПараметрыПередачи = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения); 
	ОткрытьФорму("Справочник.бит_ЭлементыДанных.ФормаОбъекта", ПараметрыПередачи, Элементы.Список, ЭтотОбъект); 

КонецПроцедуры // ДобавитьЭлементДанных()
 
#КонецОбласти