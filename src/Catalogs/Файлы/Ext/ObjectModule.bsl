Процедура ПередЗаписью(Отказ)
	
	// бит_Финанс изменения кода. Начало:
	бит_ПередЗаписью(Отказ);
	// бит_Финанс изменения кода. Конец.
	
КонецПроцедуры

#Область БИТ_Финанс

// бит_Финанс изменения кода. Начало:
Процедура бит_ПередЗаписью(Отказ)
	
	// бит_Финанс изменения кода. Начало:
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 
	
	Если ДополнительныеСвойства.Свойство("бит_ПропуститьПроверку") 
	 ИЛИ ДополнительныеСвойства.Свойство("КонвертацияФайлов") Тогда
		Возврат;
	КонецЕсли; 
	
	Если НЕ бит_РазрешитьРедактироватьФайл(Отказ) Тогда
		Возврат;
	КонецЕсли; 
	// бит_Финанс изменения кода. Конец.
	
КонецПроцедуры // бит_Финанс изменения кода. Конец.

// бит_Финанс Функция разрешает/запрещает редактировать файлы
//  в зависимости от статуса документа.
//
// Возвращаемое значение:
//  Результат – булево.
//
Функция бит_РазрешитьРедактироватьФайл(Отказ) 

	Результат = Истина;
	
	Если НЕ ЗначениеЗаполнено(ВладелецФайла)
		ИЛИ НЕ Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ВладелецФайла)) Тогда
		Возврат Результат;
	КонецЕсли; 
	
	МетаданныеВладельца = ВладелецФайла.Метаданные();
	
	Если НЕ бит_ОбщегоНазначенияКлиентСервер.ЭтоОбъектБИТ(МетаданныеВладельца.Имя) Тогда 
		Возврат Результат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ВладелецФайла);
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТабДокумент.Ссылка,
	               |	ЕСТЬNULL(ТабСтатусы.Статус, ЗНАЧЕНИЕ(Справочник.бит_СтатусыОбъектов.ПустаяСсылка)) КАК Статус
	               |ИЗ
	               |	#ТаблицаДокумента КАК ТабДокумент
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СтатусыОбъектов КАК ТабСтатусы
	               |		ПО ТабДокумент.Ссылка = ТабСтатусы.Объект
	               |			И (ТабСтатусы.ВидСтатуса = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСтатусовОбъектов.Статус))
	               |ГДЕ
	               |	ТабДокумент.Ссылка = &Ссылка";
				   
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаДокумента", "Документ."+МетаданныеВладельца.Имя);			   
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		// Только для статуса утвержден
		Если СтрНайти(ВРег(Выборка.Статус.Наименование), ВРег("утвержд"))=0 Тогда
			Продолжить;
		КонецЕсли; 
		
		СтруктураПараметров = Новый Структура;
		Если МетаданныеВладельца.Реквизиты.Найти("Организация") <> Неопределено Тогда
		 	СтруктураПараметров.Вставить("Организация", ВладелецФайла.Организация);
		КонецЕсли;  
		Если МетаданныеВладельца.Реквизиты.Найти("ЦФО") <> Неопределено Тогда
		 	СтруктураПараметров.Вставить("ЦФО", ВладелецФайла.ЦФО);
		КонецЕсли;  
		НастройкиПрограммы = бит_ОбщегоНазначения.ПолучитьНастройкиПрограммы(ВладелецФайла.Дата,,СтруктураПараметров,"Ошибки");	
		КонтрольБИТ = бит_ОбщегоНазначения.ИзвлечьНастройкуПрограммы(НастройкиПрограммы,ПланыВидовХарактеристик.бит_НастройкиПрограммы.ЗапрещатьИзменятьФайлыВУтвержденныхДокументах);
		
		Если КонтрольБИТ = Перечисления.бит_ВидыКонтроляИзмененияФайловВУтвержденныхДокументах.Запретить Тогда
			ТекстСообщения = НСтр("ru='Изменение присоединенных файлов запрещено, документ находится в статусе Утвержден!'");
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,,Отказ);
			Результат = Ложь;
		КонецЕсли;	
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции // бит_Финанс изменения кода. Конец. 

#КонецОбласти
