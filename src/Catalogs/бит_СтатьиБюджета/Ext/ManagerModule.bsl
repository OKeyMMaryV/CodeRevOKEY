#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки	 - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Процедура копирует статьи из бюджета источника в бюджет приемник.
//
// Параметры:
//  Источник - СправочникСсылка.бит_Бюджеты	 - Ссылка на бюджет источник копирования.
//  Приемник - СправочникСсылка.бит_Бюджеты	 - Ссылка на бюджет приемник.
//
Процедура СкопироватьСтатьи(Источник, Приемник) Экспорт 

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", Источник);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_СтатьиБюджета.Родитель КАК Родитель,
	|	бит_СтатьиБюджета.ЭтоГруппа КАК ЭтоГруппа,
	|	бит_СтатьиБюджета.Наименование КАК Наименование,
	|	бит_СтатьиБюджета.НаименованиеПолное КАК НаименованиеПолное,
	|	бит_СтатьиБюджета.СтатьяОборотов КАК СтатьяОборотов,
	|	бит_СтатьиБюджета.Коэффициент КАК Коэффициент,
	|	бит_СтатьиБюджета.Кодификатор КАК Кодификатор,
	|	бит_СтатьиБюджета.НеОтображать КАК НеОтображать,
	|	бит_СтатьиБюджета.Комментарий КАК Комментарий,
	|	бит_СтатьиБюджета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.бит_СтатьиБюджета КАК бит_СтатьиБюджета
	|ГДЕ
	|	бит_СтатьиБюджета.Владелец = &Владелец
	|	И НЕ бит_СтатьиБюджета.ПометкаУдаления";
	Результа = Запрос.Выполнить();
	
	РодителиЭлементов = Новый Соответствие();
	РодителиЭлементов.Вставить(Справочники.бит_СтатьиБюджета.ПустаяСсылка(), Справочники.бит_СтатьиБюджета.ПустаяСсылка()); 
	Выборка = Результа.Выбрать();
	
	НачатьТранзакцию();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ЭтоГруппа Тогда
			ИсключенныеСвойства = "НаименованиеПолное, НеОтображать, Комментарий, Ссылка";
			НоваяСтатья = Справочники.бит_СтатьиБюджета.СоздатьГруппу();
		Иначе 	
			ИсключенныеСвойства = "Ссылка";
			НоваяСтатья = Справочники.бит_СтатьиБюджета.СоздатьЭлемент();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НоваяСтатья, Выборка,, ИсключенныеСвойства);
		НоваяСтатья.Владелец = Приемник;
		
		Если ЗначениеЗаполнено(Выборка.Родитель) Тогда
			КопияРодитель = РодителиЭлементов.Получить(Выборка.Родитель);
			Если КопияРодитель = Неопределено Тогда
				КопияРодитель = Справочники.бит_СтатьиБюджета.ПолучитьСсылку();
				РодителиЭлементов.Вставить(Выборка.Родитель, КопияРодитель);
			КонецЕсли;	
			НоваяСтатья.Родитель = КопияРодитель;
		КонецЕсли;
		
		Если Выборка.ЭтоГруппа Тогда
			НоваяСсылка = РодителиЭлементов.Получить(Выборка.Ссылка);
			Если НоваяСсылка = Неопределено Тогда
				НоваяСсылка = Справочники.бит_СтатьиБюджета.ПолучитьСсылку();
				РодителиЭлементов.Вставить(Выборка.Ссылка, НоваяСсылка);
			КонецЕсли; 
			НоваяСтатья.УстановитьСсылкуНового(НоваяСсылка);
		КонецЕсли;
		НоваяСтатья.УстановитьНовыйКод();
		НоваяСтатья.ДополнительныеСвойства.Вставить("ЭтоКопирование", Истина);
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(НоваяСтатья, Истина, Истина);
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось копировать статьи бюджета.
										|%1'"); 
			ТекстСообщения = СтрШаблон(ТекстСообщения, КраткоеПредставлениеОшибки(ИнформацияОбОшибке())); 
			ВызватьИсключение ТекстСообщения;
		КонецПопытки;
	КонецЦикла;
	Справочники.бит_Бюджеты.ОбработатьБюджетЗапрещенКПланированию(Приемник);
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция НовыеПараметрыЗаполненияПоГруппеСтатейБюджета() Экспорт

	Параметры = Новый Структура; 
	Параметры.Вставить("Бюджет");
	Параметры.Вставить("ГруппаСтруктуры", Справочники.бит_СтатьиБюджета.ПустаяСсылка());
	Параметры.Вставить("ГруппаСтатей", Новый Массив()); // Массив подобранных групп или элементов.
	Параметры.Вставить("Коэффициент", 0);

	Возврат Параметры;
	
КонецФункции

// Длительная операция заполнения справочника по группе статей бюджета.
//
// Параметры:
//  ДанныеЗаполнения - Структура - состав стуктуры формируется функцией "НовыеПараметрыЗаполненияПоГруппеСтатейБюджета". 
//  АдресВХранилище	 - Строка - адрес во временном хранилище.
//
Процедура ЗаполнитьПоГруппеСтатейБюджета(ДанныеЗаполнения, АдресВХранилище) Экспорт

	Бюджет 			= ДанныеЗаполнения.Бюджет;
	ГруппаСтруктуры = ДанныеЗаполнения.ГруппаСтруктуры;
	ГруппаСтатей 	= ДанныеЗаполнения.ГруппаСтатей;
	Коэффициент     = ДанныеЗаполнения.Коэффициент;
		
	Выборка 		   = ВыборкаСтатейБюджета(Бюджет, ГруппаСтатей);
	Родители 		   = Новый Соответствие;  
	ДобавленныеОбъекты = Новый Массив(); 
	Ошибки 			   = Новый Соответствие(); 

	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ЭтоГруппа Тогда
			ТекущийОбъект = Справочники.бит_СтатьиБюджета.СоздатьГруппу();
			ЗаполнитьЗначенияСвойств(ТекущийОбъект, Выборка,,"Родитель, Ссылка, ЭтоГруппа, НаименованиеПолное");
		Иначе
			ТекущийОбъект = Справочники.бит_СтатьиБюджета.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(ТекущийОбъект, Выборка,,"Родитель, Ссылка, ЭтоГруппа");
		КонецЕсли; 
		
		ТекущийОбъект.Владелец = Бюджет;

		Если Выборка.ЭтоГруппа Тогда
			ТекущийОбъект.Коэффициент = ?(Коэффициент = 0, 1, Коэффициент);		
		Иначе	
			Если Коэффициент <> 0 Тогда
				ТекущийОбъект.Коэффициент = Коэффициент;
			Иначе	
				ТекущийОбъект.Коэффициент = ?(Выборка.РасходДоход = Перечисления.бит_РасходДоход.Расходование, -1, 1);
			КонецЕсли; 		
		КонецЕсли;  
				
		// ГруппаСтатей - это массив, содержаший в себе выбранные пользователем элементы (группы).
		// Однако, Выборка запроса не содержит ссылку на корневй элемент, если пользователь
		// решил вызять весь справочник. Приходится проверять вхождение.
		Если ГруппаСтатей.Найти(Выборка.Ссылка) = Неопределено Тогда
			СтатьяОборотов = Справочники.бит_СтатьиОборотов.ПустаяСсылка();
		Иначе	
			СтатьяОборотов = Выборка.Ссылка;
		КонецЕсли; 
		
		НовыйРодитель = Родители.Получить(Выборка.Родитель);
		Если НовыйРодитель = Неопределено Тогда
			Если Выборка.Ссылка = СтатьяОборотов Тогда
				// Считаем, что выше групп нет - это целевая группа структуры бюджета.
				НовыйРодитель = ГруппаСтруктуры;
			ИначеЕсли НЕ ЗначениеЗаполнено(Выборка.Родитель) И НЕ ЗначениеЗаполнено(СтатьяОборотов) Тогда
				// Выбран корневой элемент справочника "бит_СтатьиОборотов".
				НовыйРодитель = ГруппаСтруктуры;
			Иначе
				НовыйРодитель = Справочники.бит_СтатьиБюджета.ПолучитьСсылку();
			КонецЕсли; 
			Родители.Вставить(Выборка.Родитель, НовыйРодитель);
		КонецЕсли; 			
		ТекущийОбъект.Родитель = НовыйРодитель;
		
		Если Выборка.ЭтоГруппа Тогда
			ТекущийЭлемент = Родители.Получить(Выборка.Ссылка);
			Если ТекущийЭлемент = Неопределено Тогда
				ТекущийЭлемент = Справочники.бит_СтатьиБюджета.ПолучитьСсылку();
				Родители.Вставить(Выборка.Ссылка, ТекущийЭлемент);
			КонецЕсли; 
			ТекущийОбъект.УстановитьСсылкуНового(ТекущийЭлемент);
		КонецЕсли; 
		
		ТекущийОбъект.УстановитьНовыйКод();
		Если ТекущийОбъект.ПроверитьЗаполнение() Тогда
			ТекущийОбъект.ДополнительныеСвойства.Вставить("ЭтоКопирование", Истина);
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ТекущийОбъект, Истина, Истина);
			ДобавленныеОбъекты.Добавить(ТекущийОбъект.Ссылка);
		КонецЕсли;
	КонецЦикла;
	Справочники.бит_Бюджеты.ОбработатьБюджетЗапрещенКПланированию(Бюджет);
	ПоместитьВоВременноеХранилище(Новый Структура("ДобавленныеОбъекты, Ошибки", ДобавленныеОбъекты, Ошибки), АдресВХранилище);
	
КонецПроцедуры

// Проверяется уникальность ссылки на статью оборотов в рамках владельца.
//  Если этого не обеспечить, тогда заполнение формы ввода бюджета по бюджету
//  приводит к ошибкам из-за особенности реализации связи ячейки и строки данных бюджета.
//
// Параметры:
//  Статья	 - СправочникСсылка.бит_СтатьиБюджета	 - Проверяемая статья.
//  Отказ	 - Булево								 - отменяет стандартную обработку вызывающего обработчика.
//
Процедура СтатьяБюджетаУникальна(Статья, Отказ) Экспорт
	
	РеквизитыСтатьиБюджета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Статья, "Владелец,СтатьяОборотов");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",			Статья);
	Запрос.УстановитьПараметр("Бюджет",			РеквизитыСтатьиБюджета.Владелец);
	Запрос.УстановитьПараметр("СтатьяОборотов",	РеквизитыСтатьиБюджета.СтатьяОборотов);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтатьиБюджета.Ссылка КАК Ссылка,
	|	СтатьиБюджета.Представление КАК Представление,
	|	ВЫБОР
	|		КОГДА ОбъектыПоБюджету.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьСсылкиНаБюджет
	|ИЗ
	|	Справочник.бит_СтатьиБюджета КАК СтатьиБюджета
	|		ЛЕВОЕ СОЕДИНЕНИЕ КритерийОтбора.бит_ОбъектыПоБюджету(&Бюджет) КАК ОбъектыПоБюджету
	|		ПО (СтатьиБюджета.Владелец = &Бюджет)
	|ГДЕ
	|	СтатьиБюджета.Ссылка <> &Ссылка
	|	И СтатьиБюджета.Владелец = &Бюджет
	|	И СтатьиБюджета.СтатьяОборотов = &СтатьяОборотов";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ЕстьСсылкиНаБюджет Тогда
			ШаблонСообщения = СтрШаблон(НСтр("ru = 'Статья оборотов уже используется в статье бюджета ""%1"".
				|Дублирование статей запрещено, бюджет используется в справочнике ""Настройки форм ввода бюджета"".'"),
				Выборка.Представление);
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("ПОЛЕ","КОРРЕКТНОСТЬ",
				НСтр("ru = 'Статья оборотов'"),,,ШаблонСообщения);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Выборка.Ссылка,,,Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыборкаСтатейБюджета(Бюджет, ГруппаСтатей)
	
	// Дублирование статей бюджетов в рамках одного бюджета не поддерживается.
	// Поэтому соединяемся с существующими записями.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Группа", ГруппаСтатей);
	Запрос.УстановитьПараметр("Бюджет", Бюджет);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтатьиОборотов.Ссылка КАК Ссылка,
	|	СтатьиОборотов.Родитель КАК Родитель,
	|	СтатьиОборотов.Наименование КАК Наименование,
	|	СтатьиОборотов.НаименованиеПолное КАК НаименованиеПолное,
	|	СтатьиОборотов.Кодификатор КАК Кодификатор,
	|	СтатьиОборотов.РасходДоход КАК РасходДоход,
	|	СтатьиОборотов.ЭтоГруппа КАК ЭтоГруппа,
	|	СтатьиОборотов.Ссылка КАК СтатьяОборотов,
	|	СтатьиОборотов.Наименование + "" ("" + СтатьиОборотов.Код + "")"" КАК ПредставлениеЭлементаСтруктуры,
	|	СтатьиОборотов.Наименование + "" ("" + СтатьиОборотов.Код + "")"" КАК ПредставлениеСтатьи
	|ИЗ
	|	Справочник.бит_СтатьиОборотов КАК СтатьиОборотов
	|ГДЕ
	|	СтатьиОборотов.Ссылка В ИЕРАРХИИ(&Группа)
	|	И НЕ СтатьиОборотов.ПометкаУдаления";	
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Возврат Выборка;

КонецФункции 
	
#КонецОбласти 

#КонецЕсли