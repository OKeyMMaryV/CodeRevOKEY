#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем мРазоваяЗапись Экспорт; // Это разовая запись.

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если НЕ ЭтоГруппа Тогда
	
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("ВидПроформы") Тогда
			
			ОбъектСистемы = бит_ПраваДоступа.ПолучитьОбъектДоступаПоМетаданным(Метаданные.Документы.бит_Проформы);
			ВидДокумента  = ОбъектСистемы;
			ВидПроформы   = ДанныеЗаполнения.ВидПроформы;
		
		КонецЕсли; 
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
		
	бит_ук_СлужебныйСервер.РегистрацияНачалоСобытия(Отказ, ЭтотОбъект.ДополнительныеСвойства);
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	// Если Ссылка.Lock и не мРазоваяЗапись Тогда.
	// 	


	// 	#Если Клиент Тогда
	// 	сообщить("Попытка изменения информации заблокированного шаблона проводок 
	//                         (элемент справочника): " + Строка(Ссылка), СтатусСообщения.Важное);	
	// 	#КонецЕсли	
	// 	Отказ = Истина;
	// 	
	// КонецЕсли;
	
	Если ЭтоНовый() Тогда
		// Необходимо установить автора и дату создания шаблона.
		Автор 			= ПараметрыСеанса.ТекущийПользователь;
		ДатаСоздания    = ТекущаяДата();
	Иначе
		// Установим последнего редактора и дату последнего редактирования.
		ПоследнийРедактор 				= ПараметрыСеанса.ТекущийПользователь;
		ДатаПоследнегоРедактирования 	= ТекущаяДата();
	КонецЕсли;
	
	// Если не ЗначениеЗаполнено(Регистр) Тогда
	// 	#Если Клиент Тогда
	// 		сообщить("Поле ""Регистр"" не может быть пустым!", СтатусСообщения.Важное);
	// 	#КонецЕсли
	// 	Отказ = Истина;
	// КонецЕсли;
	// 
	// Если не ЗначениеЗаполнено(ВидДокумента) Тогда
	// 	#Если Клиент Тогда
	// 		сообщить("Поле ""Вид документа"" не может быть пустым!", СтатусСообщения.Важное);
	// 	#КонецЕсли
	// 	Отказ = Истина;
	// КонецЕсли;
	
	// Необходимо заполнить идентификатор шаблона.
	Идентификатор = бит_МеханизмХозяйственныхОперацийСервер.ПолучитьПодчиненныйИдентификаторШаблона(ЭтотОбъект);
	
	УникальныйИД = бит_МеханизмХозяйственныхОперацийСервер.ПолучитьИдентификаторШаблона(ЭтотОбъект);
	
КонецПроцедуры // ПередЗаписью()
	
Процедура ПриЗаписи(Отказ)
		
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
		
	бит_ук_СлужебныйСервер.РегистрацияПриЗаписи(Отказ, ЭтотОбъект.ДополнительныеСвойства, Метаданные().ПолноеИмя());
		
КонецПроцедуры // ПриЗаписи()

#КонецОбласти

#Область Инициализация

мРазоваяЗапись = Ложь;

#КонецОбласти

#КонецЕсли
