#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Список.Параметры.УстановитьЗначениеПараметра(
		"ПредставлениеОбособленногоПодразделения", НСтр("ru='Обособленное подразделение'"));
	
	ОткрытИзПлатежки = Параметры.Свойство("ОткрытИзПлатежки");
	
	ОтображатьСтатусыДокументов = ПолучитьФункциональнуюОпцию("ОтображатьДополнительныеКолонкиВСписках");
	Элементы.ЭДО.Видимость = ОтображатьСтатусыДокументов;
	Если ОтображатьСтатусыДокументов Тогда
		
		// ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
		ПроверкаКонтрагентов.ПриСозданииНаСервереСписокКонтрагентов(Список);
		// Конец ИнтернетПоддержкаПользователей.РаботаСКонтрагентами

	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	// ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	ОбработкаНовостейПереопределяемый.КонтекстныеНовости_ПриСозданииНаСервере(
		ЭтаФорма,
		"БП.Справочник.Контрагенты",
		"ФормаВыбора",
		НСтр("ru='Новости: Контрагент'"),
		ИдентификаторыСобытийПриОткрытии
	);
	// Конец ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-07-10 (#3395)
	ок_УправлениеФормами.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-07-10 (#3395)
	
	//Ванюков К. + //Включение отбора по полю КонтрагентОКЕЙ
	ГруппыПользователя										= ОК_ОбщегоНазначения.ГруппыПользователя(ПользователиКлиентСервер.ТекущийПользователь());
	ПраваНаОкей                                         	= (ГруппыПользователя.Найти(Справочники.ГруппыПользователей.НайтиПоКоду("58")) <> Неопределено) Или (ГруппыПользователя.Найти(Справочники.ГруппыПользователей.НайтиПоКоду("59")) <> Неопределено);
	ПраваНаДоринду											= (ГруппыПользователя.Найти(Справочники.ГруппыПользователей.НайтиПоКоду("2")) <> Неопределено) Или (ГруппыПользователя.Найти(Справочники.ГруппыПользователей.НайтиПоКоду("3")) <> Неопределено);
	//ОК Довбешка Т. 26.11.2013
	ПраваНаДругуюОрганизацию = Ложь;
	Для каждого ЭлементГруппыПользователя Из ГруппыПользователя Цикл
		Если (ЭлементГруппыПользователя = Справочники.ГруппыПользователей.НайтиПоКоду("58"))или(ЭлементГруппыПользователя = Справочники.ГруппыПользователей.НайтиПоКоду("59"))
			или(ЭлементГруппыПользователя = Справочники.ГруппыПользователей.НайтиПоКоду("2"))или(ЭлементГруппыПользователя = Справочники.ГруппыПользователей.НайтиПоКоду("3"))
			или(ЭлементГруппыПользователя = Справочники.ГруппыПользователей.ВсеПользователи) Тогда
		Иначе
			ПраваНаДругуюОрганизацию = Истина;
		КонецЕсли; 
	КонецЦикла; 
	Если (ПраваНаОкей И ПраваНаДоринду) или РольДоступна("ПолныеПрава") Или ПраваНаДругуюОрганизацию Тогда 
	//ОК
	//Если (ПраваНаОкей и ПраваНаДоринду) или РольДоступна("ПолныеПрава") Тогда 
		Возврат;
	// ОК+ Видяйкин 20161007 проявлялась ошибка в Форме "настроек отчета" во внеш.отчетах <По переданным счетам>, <Сопоставление счета 60> (если пользователь не обладает правами "Администратор")
	Иначе
		Если ЭтаФорма.Параметры.ТекущаяСтрока <> Неопределено Тогда
			Если ЭтаФорма.Параметры.ТекущаяСтрока.Пустая() Или ЭтаФорма.Параметры.ТекущаяСтрока.ЭтоГруппа Тогда
				Если Не ПраваНаОкей Тогда 
					ОтборКонтрагентОКЕЙЗначение	= Ложь;
				Иначе
					ОтборКонтрагентОКЕЙЗначение	= Истина;
				КонецЕсли;
			Иначе
				ОтборКонтрагентОКЕЙЗначение		= ЭтаФорма.Параметры.ТекущаяСтрока.КонтрагентОКЕЙ;
			КонецЕсли;
		КонецЕсли;
	// ОК- Видяйкин 20161007
	//ИначеЕсли ЭтаФорма.Параметры.ТекущаяСтрока.Пустая() Или ЭтаФорма.Параметры.ТекущаяСтрока.ЭтоГруппа Тогда
	//	Если Не ПраваНаОкей Тогда 
	//		ОтборКонтрагентОКЕЙЗначение	= Ложь;
	//	Иначе
	//		ОтборКонтрагентОКЕЙЗначение	= Истина;
	//	КонецЕсли;
	//Иначе
	//	ОтборКонтрагентОКЕЙЗначение		= ЭтаФорма.Параметры.ТекущаяСтрока.КонтрагентОКЕЙ;
	КонецЕсли;
	//ОК+ Аверьянова 09.01.2016 Начиная с ред.3.0 отбор не используется
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "КонтрагентОКЕЙ", ОтборКонтрагентОКЕЙЗначение, ВидСравненияКомпоновкиДанных.Равно, , Истина);
	//ОК-
	//Ванюков К. -

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	ОбработкаНовостейКлиент.КонтекстныеНовости_ПриОткрытии(ЭтаФорма);
	// Конец ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-07-10 (#3395)
	ок_УправлениеФормамиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-07-10 (#3395)
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	// Конец ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	Если ОткрытИзПлатежки И Элемент.ТекущиеДанные.Вид <> "" Тогда
		Отказ = Истина;
		ПараметрыФормы = Новый Структура("Ключ", Элемент.ТекущаяСтрока);
		ПараметрыФормы.Вставить("ОткрытИзПлатежки"); 
		
		ЗначенияЗаполнения = Новый Структура();
		ДополнитьЗначенияЗаполненияОтборомПоГосоргану(ЗначенияЗаполнения);
		Если ЗначениеЗаполнено(ЗначенияЗаполнения) Тогда
			ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		КонецЕсли;
		
		ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если ОткрытИзПлатежки И НЕ Группа Тогда
		Отказ = Истина;
		
		ПараметрыФормы = Новый Структура("ОткрытИзПлатежки");
		ЗначенияЗаполнения = Новый Структура("Родитель", Родитель);
		ДополнитьЗначенияЗаполненияОтборомПоГосоргану(ЗначенияЗаполнения);
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		Если Копирование И ЗначениеЗаполнено(Элемент.ТекущаяСтрока) Тогда
			ПараметрыФормы.Вставить("ЗначениеКопирования", Элемент.ТекущаяСтрока);
		КонецЕсли;
		
		ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДополнитьЗначенияЗаполненияОтборомПоГосоргану(ЗначенияЗаполнения)
	
	УстановленОтборПоГосоргану = УстановленОтборПоГосоргану();
	Если УстановленОтборПоГосоргану Тогда
		ЗначенияЗаполнения.Вставить("ГосударственныйОрган", Истина);
		ЗначенияЗаполнения.Вставить("ЮридическоеФизическоеЛицо", ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция УстановленОтборПоГосоргану()
	
	ПолеКомпоновкиГосорган = Новый ПолеКомпоновкиДанных("ГосударственныйОрган");
	
	УстановленОтборПоГосоргану = Ложь;
	
	Для Каждого ЭлементОтбора Из Список.Отбор.Элементы Цикл
		Если ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновкиГосорган
			И ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно
			И ЭлементОтбора.ПравоеЗначение = Истина Тогда
			УстановленОтборПоГосоргану = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат УстановленОтборПоГосоргану;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	// ИНН некорректный
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИНН");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.ИННВведенКорректно", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветВыделенияКонтрагентаСОшибкой);

	// КПП некорректный
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "КПП");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.КППВведенКорректно", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветВыделенияКонтрагентаСОшибкой);

	Если Не ОтображатьСтатусыДокументов Тогда
		Возврат;
	КонецЕсли;
	
	// ИНН дублируется
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИНН");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.ИННВведенКорректно", ВидСравненияКомпоновкиДанных.Равно, Истина);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.ЕстьДубли", ВидСравненияКомпоновкиДанных.Равно, Истина);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.ПроверкаКонтрагентовКонтрагентНеСуществует", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветВыделенияКонтрагентаСОшибкой);
	
	// КПП дублируется
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "КПП");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.КППВведенКорректно", ВидСравненияКомпоновкиДанных.Равно, Истина);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.ЕстьДубли", ВидСравненияКомпоновкиДанных.Равно, Истина);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.ПроверкаКонтрагентовКонтрагентНеСуществует", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветВыделенияКонтрагентаСОшибкой);

	// Контрагента нет в реестре
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИНН");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "КПП");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.ПроверкаКонтрагентовКонтрагентНеСуществует", ВидСравненияКомпоновкиДанных.Равно, Истина);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.ПроверкаКонтрагентовСостояние", ВидСравненияКомпоновкиДанных.НеРавно, Перечисления.СостоянияСуществованияКонтрагента.НеДействуетИлиИзмененКПП);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветКонтрагентаОтсутствущегоВРеестре);

	// Контрагент прекратил деятельность
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Список");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.ПроверкаКонтрагентовКонтрагентНеСуществует", ВидСравненияКомпоновкиДанных.Равно, Истина);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.ПроверкаКонтрагентовСостояние", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СостоянияСуществованияКонтрагента.НеДействуетИлиИзмененКПП);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветКонтрагентаПрекратившегоДеятельность);

КонецПроцедуры

// Процедура показывает новости, требующие прочтения (важные и очень важные)
//
// Параметры:
//  Нет
//
&НаКлиенте
Процедура Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии()

	// ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	// Конец ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии

	ОбработкаНовостейКлиент.КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(ЭтаФорма, ИдентификаторыСобытийПриОткрытии);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьКонтекстныеНовости(Команда)

	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(
		ЭтаФорма,
		Команда
	);

КонецПроцедуры

#КонецОбласти

#Область ОК

//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-07-10 (#3395)
&НаСервере
Процедура ок_УстановитьПараметрОрганизация() Экспорт
	
	Если Список.Параметры.Элементы.Найти("ок_Организация") <> Неопределено Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ок_Организация", ЭтотОбъект.ок_Организация);
	КонецЕсли;
	
	Если Список.Параметры.Элементы.Найти("ок_ИспользоватьОтборПоОрганизации") <> Неопределено Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ок_ИспользоватьОтборПоОрганизации", ЗначениеЗаполнено(ЭтотОбъект.ок_Организация));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ок_УстановитьПараметрОрганизацияКлиент() Экспорт
	
	ок_УстановитьПараметрОрганизация();
	
КонецПроцедуры
//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-07-10 (#3395)

#КонецОбласти