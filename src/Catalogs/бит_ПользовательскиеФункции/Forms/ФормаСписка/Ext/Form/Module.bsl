
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.СписокПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма);
	
	МетаданныеОбъекта = Метаданные.Справочники.бит_ПользовательскиеФункции;
	
	// Вызов механизма защиты
	
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ПоказатьОписаниеФункции", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура формирует описание функции или группы функций.
// 
// Параметры:
// 	Ссылка - СправочникСсылка.бит_ПользовательскиеФункции.
// 
&НаСервере
Процедура ПоказатьОписаниеФункцииСервер(Ссылка)
	
	Если Ссылка.ЭтоГруппа Тогда
		
		ТекстОписания = Нстр("ru = '#В группе: '") + Символы.ПС;
		
		Выборка = Справочники.бит_ПользовательскиеФункции.Выбрать(Ссылка);
		
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.ЭтоГруппа Тогда
				Продолжить;
			КонецЕсли;
			
			ОписаниеСКомментариями = СтрЗаменить(СокрЛП(Выборка.Описание), Символы.ПС, Символы.ПС + "// ");
			ОписаниеФункции = "// " + ?(СокрЛП(Выборка.Описание) = "", Нстр("ru = '<нет описания>'"), ОписаниеСКомментариями);
			
			бит_ОбщегоНазначения.ДобавитьСтрокуКТексту(ТекстОписания, ОписаниеФункции);
			
			СтруктураЗаголовка = Справочники.бит_ПользовательскиеФункции.ПолучитьНазваниеПодпрограммыСПараметрами(Выборка.Ссылка);
			
			бит_ОбщегоНазначения.ДобавитьСтрокуКТексту(ТекстОписания, СтруктураЗаголовка.ЗаголовокФункции + Символы.ПС);
			
		КонецЦикла;
		
		ПолеОписания = ТекстОписания;
		
	Иначе
		СтруктураЗаголовка = Справочники.бит_ПользовательскиеФункции.ПолучитьНазваниеПодпрограммыСПараметрами(Ссылка);
		
		Элементы.ДекорацияНазваниеСПараметрами.Заголовок = СтруктураЗаголовка.НазваниеСПараметрами;
		ПолеОписания = СтруктураЗаголовка.ОписаниеПараметров + Символы.ПС + СокрЛП(Ссылка.КодПодпрограммы);
	КонецЕсли;
	
	Элементы.Описание.Видимость			   = НЕ Ссылка.ЭтоГруппа;
	Элементы.ГруппаШапкаФункции.Видимость  = НЕ Ссылка.ЭтоГруппа;
	Элементы.ГруппаПодвалФункции.Видимость = НЕ Ссылка.ЭтоГруппа;
		
КонецПроцедуры

// Процедура обработчик ожидания активизации строки.
// 
&НаКлиенте
Процедура ПоказатьОписаниеФункции()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьОписаниеФункцииСервер(ТекущиеДанные.Ссылка);
	
КонецПроцедуры

#КонецОбласти

