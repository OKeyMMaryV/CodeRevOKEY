
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.СписокПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма);

	ОбновитьПиктограммыВСписке();
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокПриИзменении(Элемент)

	ОбновитьПиктограммыВСписке();
	
КонецПроцедуры // СписокПриИзменении()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура - устанавливает текст запроса динамического списка "Список" и
// параметры запроса для обновления отображаемых пиктограмм
// 
&НаСервере
Процедура ОбновитьПиктограммыВСписке()
	
	ТекстЗапросаСписка = "ВЫБРАТЬ
	                     |	Справочникбит_си_МеткиСтатей.Ссылка,
	                     |	Справочникбит_си_МеткиСтатей.ВерсияДанных,
	                     |	Справочникбит_си_МеткиСтатей.ПометкаУдаления,
	                     |	Справочникбит_си_МеткиСтатей.Предопределенный,
	                     |	Справочникбит_си_МеткиСтатей.Родитель,
	                     |	Справочникбит_си_МеткиСтатей.ЭтоГруппа,
	                     |	Справочникбит_си_МеткиСтатей.Код,
	                     |	Справочникбит_си_МеткиСтатей.Наименование,
	                     |	ВЫРАЗИТЬ(&АдресКартинки КАК СТРОКА(255)) КАК АдресКартинки,
	                     |	Справочникбит_си_МеткиСтатей.Описание,
	                     |	Справочникбит_си_МеткиСтатей.ВыводитьВСодержании,
	                     |	Справочникбит_си_МеткиСтатей.ВыводитьВДопСсылках,
	                     |	Справочникбит_си_МеткиСтатей.ВыводитьВЗаголовке,
	                     |	Справочникбит_си_МеткиСтатей.ВыводитьВРезультатахПоиска
	                     |ИЗ
	                     |	Справочник.бит_си_МеткиСтатей КАК Справочникбит_си_МеткиСтатей";
						 
	АдресСтандартнойКартинки = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.бит_си_МеткаСтатьи, ЭтаФорма.УникальныйИдентификатор);
	
	Выборка = Справочники.бит_си_МеткиСтатей.Выбрать();
	МассивКартинок = Новый Массив();
	ТекстЗапросаКартинки = "ВЫБОР
						   |	КОГДА Справочникбит_си_МеткиСтатей.ЭтоГруппа
						   |		ТОГДА """"";
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ЭтоГруппа Тогда
			Продолжить;
		КонецЕсли;
		
		ВремКартинка = Выборка.Пиктограмма.Получить();
		Если ТипЗнч(ВремКартинка) = Тип("ДвоичныеДанные") Тогда
		ИначеЕсли ТипЗнч(ВремКартинка) = Тип("Картинка") Тогда
			Если ВремКартинка.Вид = ВидКартинки.Пустая Тогда
				Продолжить;
			КонецЕсли;
		Иначе
			Продолжить;
		КонецЕсли;
		
		МассивКартинок.Добавить(Новый Структура("Ссылка,
												|АдресКартинки",
												Выборка.Ссылка,
												ПолучитьНавигационнуюСсылку(Выборка.Ссылка, "Пиктограмма")));
		
		ТекстЗапросаКартинки = ТекстЗапросаКартинки + "
													   |	КОГДА Справочникбит_си_МеткиСтатей.Ссылка = &СсылкаДляКартинки" + СокрЛП(МассивКартинок.Количество()) + "
													   |		ТОГДА &АдресКартинки" + СокрЛП(МассивКартинок.Количество());
		
	КонецЦикла;
	
	ТекстЗапросаКартинки = ТекстЗапросаКартинки + "
												   |	ИНАЧЕ &АдресСтандартнойКартинки
												   |КОНЕЦ";
	Список.ТекстЗапроса = СтрЗаменить(ТекстЗапросаСписка,
									  "&АдресКартинки",
									  ТекстЗапросаКартинки);
	Список.Параметры.УстановитьЗначениеПараметра("АдресСтандартнойКартинки", АдресСтандартнойКартинки);
	
	Для й = 0 По МассивКартинок.ВГраница() Цикл
		
		Список.Параметры.УстановитьЗначениеПараметра("АдресКартинки" + СокрЛП(й + 1), МассивКартинок[й].АдресКартинки);
		Список.Параметры.УстановитьЗначениеПараметра("СсылкаДляКартинки" + СокрЛП(й + 1), МассивКартинок[й].Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры // ОбновитьПиктограммыВСписке()

#КонецОбласти



