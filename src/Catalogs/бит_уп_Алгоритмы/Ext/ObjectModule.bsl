#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоГруппа Тогда
	   	Возврат;	
	КонецЕсли;
	
	ПараметрыОтображения = Справочники.бит_уп_Алгоритмы.НовыеПараметрыОтображенияАлгоритма();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыОтображения);
	
	СпособВыполнения = Перечисления.бит_уп_СпособыВыполненияАлгоритма.Сразу;
	ВерсияСхемы 	 = 2;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;			
	КонецЕсли; 
	
	Если НЕ ЭтоГруппа И ЭтоНовый() И НЕ ДополнительныеСвойства.Свойство("СоздатьТочкуСтарта") Тогда
		ДополнительныеСвойства.Вставить("СоздатьТочкуСтарта", ВерсияСхемы = 0);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;			
	КонецЕсли; 
		
	Если НЕ Отказ Тогда
		СоздатьТочкуСтарта();
	КонецЕсли; 
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-08-14 (#3393)
	ОбновитьПовторноИспользуемыеЗначения();
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-08-14 (#3393)
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ВидАлгоритма = Перечисления.бит_уп_ВидыАлгоритмов.Визирование 
	   И СпособВыполнения = Перечисления.бит_уп_СпособыВыполненияАлгоритма.Поэтапно Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	бит_уп_ТочкиАлгоритмов.Ссылка
		|ИЗ
		|	Справочник.бит_уп_ТочкиАлгоритмов КАК бит_уп_ТочкиАлгоритмов
		|ГДЕ
		|	бит_уп_ТочкиАлгоритмов.Владелец = &Алгоритм
		|	И бит_уп_ТочкиАлгоритмов.ВидТочки = &ВидТочкиСлияние
		|	И НЕ бит_уп_ТочкиАлгоритмов.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("Алгоритм", 		 Ссылка);
		Запрос.УстановитьПараметр("ВидТочкиСлияние", Перечисления.бит_уп_ВидыТочекАлгоритмов.Слияние);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка			 = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Справочники.бит_уп_ТочкиАлгоритмов.ПриЗаписиТочкиСлияния(Выборка.Ссылка, Отказ);
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Наименование = ОбъектКопирования.Наименование + Нстр("ru = ' (копия)'"); 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Процедура создает точку старта.
// 
// Возвращаемое значение:
//  ТочкаСтарта - СправочникСсылка.бит_уп_ТочкиАлгоритмов - Ссылка на точку старта.
//
Функция СоздатьТочкуСтарта()  Экспорт
	
	ТочкаСтарта = Справочники.бит_уп_ТочкиАлгоритмов.ПустаяСсылка();
	СоздатьТочкуСтарта = Ложь;
	Если НЕ ЭтоГруппа И ДополнительныеСвойства.Свойство("СоздатьТочкуСтарта", СоздатьТочкуСтарта) И СоздатьТочкуСтарта Тогда
		
		СпрОбъект = Справочники.бит_уп_ТочкиАлгоритмов.СоздатьЭлемент();
		СпрОбъект.Наименование = "Старт";
		СпрОбъект.ВидТочки     = Перечисления.бит_уп_ВидыТочекАлгоритмов.Старт;
		СпрОбъект.Владелец     = Ссылка;
		
		флДействиеВыполнено = бит_ОбщегоНазначения.ЗаписатьСправочник(СпрОбъект,,"Ошибки");
		Если флДействиеВыполнено Тогда
			ТочкаСтарта = СпрОбъект.Ссылка;
		КонецЕсли; 
	КонецЕсли; 
	
	Возврат ТочкаСтарта;
	
КонецФункции

#КонецОбласти

#КонецЕсли
