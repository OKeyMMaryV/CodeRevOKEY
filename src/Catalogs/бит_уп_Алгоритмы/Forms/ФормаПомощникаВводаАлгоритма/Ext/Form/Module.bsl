
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект  = Параметры.Ссылка;
	Если Параметры.Свойство("Точка") Тогда
		Точка = Параметры.Точка;
		ТекНаправление = Параметры.ТекНаправление;
	КонецЕсли;
	
	Для Каждого Параметр Из Объект.ПараметрыАлгоритма Цикл
	    Если Параметр.Динамический Тогда
	    	МассивРеквизитов = Новый Массив;
			СтрТип = бит_ОбщегоНазначенияКлиентСервер.ПолучитьОписаниеИзСтроки(Параметр.СтрТип);
	    	МассивРеквизитов.Добавить(Новый РеквизитФормы(Параметр.Имя, СтрТип, "ТаблицаТочек")); 
	    	ИзменитьРеквизиты(МассивРеквизитов); 

	    	НоваяКолонка = Элементы.Добавить("ТаблицаТочек"+Параметр.Имя+"", Тип("ПолеФормы"), Элементы.ТаблицаТочек); 
	    	НоваяКолонка.Заголовок = Параметр.Имя; 
			НоваяКолонка.ПутьКДанным = "ТаблицаТочек."+Параметр.Имя+"";
	    	НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода; 
	    	НоваяКолонка.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;  
			Если Параметр.Обязательный Тогда
				НоваяКолонка.АвтоОтметкаНезаполненного = Истина;
			КонецЕсли;
	    КонецЕсли;
	 КонецЦикла;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если НЕ ВладелецФормы = Неопределено И ТипЗнч(ВладелецФормы) = Тип("УправляемаяФорма") Тогда
	
		Если ТипЗнч(ВладелецФормы.Объект.Ссылка) = Тип("СправочникСсылка.бит_уп_Алгоритмы") Тогда
			Оповестить("ОбновитьАлгоритм",,ВладелецФормы.УникальныйИдентификатор);
		КонецЕсли;
	
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаТочек

&НаКлиенте
Процедура ТаблицаТочекПриИзменении(Элемент)
	
	Индекс = 1;
	Для Каждого Стр Из ТаблицаТочек Цикл
		Стр.НомерСтроки = Индекс;
		Индекс = Индекс + 1;
    КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьТочки(Команда)
	
	Если ПроверитьЗаполнение() И ПроверитьТЧНаОбязательныеПараметры() Тогда
	    СоздатьТочкиАлгоритма();
		Закрыть();
    КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
// Изменение кода. Начало. 20.04.2015{{ Переделано оповещение.

	Флаг = Истина;
	
	Если ТаблицаТочек.Количество()>0 Тогда
		Флаг = Ложь;
		Если Элементы.ТаблицаТочек.ПодчиненныеЭлементы.Количество() > 3 Тогда			
			Вопрос = РежимДиалогаВопрос.ДаНет;
			Текст = НСтр("ru = 'Таблица будет очищена. В результате заполнения таблицы значениями параметров, количество комбинаций может оказаться очень большим. Продолжить?'");
			Оповещение = Новый ОписаниеОповещения("ВопросОбОчисткеПередЗаполнениемТаблицыЗавершение", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, Текст, Вопрос, 0);			
		Иначе 			
			Вопрос = РежимДиалогаВопрос.ДаНет;
			Текст = НСтр("ru = 'Таблица будет очищена. Продолжить?'");
			Оповещение = Новый ОписаниеОповещения("ВопросОбОчисткеПередЗаполнениемТаблицыЗавершение", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, Текст, Вопрос, 0);			
		КонецЕсли;		
	Иначе 		
		Если Элементы.ТаблицаТочек.ПодчиненныеЭлементы.Количество() > 3 Тогда
			Флаг = Ложь;
			Вопрос = РежимДиалогаВопрос.ДаНет;
			Текст = НСтр("ru = 'В результате заполнения таблицы значениями параметров, количество комбинаций может оказаться очень большим. Продолжить?'");
			Оповещение = Новый ОписаниеОповещения("ВопросОбОчисткеПередЗаполнениемТаблицыЗавершение", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, Текст, Вопрос, 0);			
		КонецЕсли;	
	КонецЕсли;
	
	Если Флаг Тогда	
		ТаблицаТочек.Очистить();
		ЗаполнитьТаблицуТочекАлгоритма();		
	КонецЕсли;
// Изменение кода. Конец. 20.04.2015}} 
КонецПроцедуры

// Процедура - обработчик оповещения "ВопросОбОчисткеПередЗаполнениемТаблицыЗавершение".
// 
&НаКлиенте
Процедура ВопросОбОчисткеПередЗаполнениемТаблицыЗавершение(Ответ, ДополнительныеДанные) Экспорт
	
	Флаг = Истина;
	
	Если Не Ответ = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;

	Если Флаг Тогда
		ТаблицаТочек.Очистить();
		ЗаполнитьТаблицуТочекАлгоритма();
	КонецЕсли;
	
КонецПроцедуры // ВопросОбОчисткеПередЗаполнениемТаблицыЗавершение() 

&НаКлиенте
Процедура Очистить(Команда)
	
	Вопрос = РежимДиалогаВопрос.ДаНет;
	Текст = НСтр( "ru = 'Таблица параметров точек будет очищена. Продолжить?'");
	Оповещение = Новый ОписаниеОповещения("ВопросОбОчисткеТаблицыЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, Текст, Вопрос, 0);
		
КонецПроцедуры

// Процедура - обработчик оповещения "ВопросОбОчисткеТаблицыЗавершение".
// 
&НаКлиенте
Процедура ВопросОбОчисткеТаблицыЗавершение(Ответ, ДополнительныеДанные) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда 
	    ТаблицаТочек.Очистить();
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ВопросОбОчисткеТаблицыЗавершение() 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПроверитьТЧНаОбязательныеПараметры() 
	
	Результат = Истина;
	
	ТаблицаПараметров = РеквизитФормыВЗначение("ТаблицаТочек");
	Для Каждого Стр Из ТаблицаПараметров Цикл
		Для Каждого Колонка Из ТаблицаПараметров.Колонки Цикл
			ИмяЭлемента = Элементы.Найти("ТаблицаТочек" + Колонка.Имя);
			Если ИмяЭлемента.АвтоОтметкаНезаполненного = Истина И Не ЗначениеЗаполнено(Стр[Колонка.Имя]) Тогда
				ТекстСообщения = Нстр("ru = 'В строке №%1%  не заполнен обязательный параметр ""%2%"", создание точек невозможно.'");
	            ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, Стр.НомерСтроки, Колонка.Имя);
	            бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
				Результат = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура СоздатьТочкиАлгоритма()
	
	ТаблицаПараметров = РеквизитФормыВЗначение("ТаблицаТочек");
	
	Для Каждого Стр Из ТаблицаПараметров Цикл
		СтрокаНеПустая = Ложь;
		Для Каждого Колонка Из ТаблицаПараметров.Колонки Цикл
			Если Колонка.Имя <> "НомерСтроки" И ЗначениеЗаполнено(Стр[Колонка.Имя]) Тогда
				СтрокаНеПустая = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если СтрокаНеПустая Тогда
			НоваяТочка = ДобавитьТочкуАлгоритма(Объект,Точка,ТекНаправление,Перечисления.бит_уп_ВидыТочекАлгоритмов.Действие,, Стр, ПользовательскоеДействие,ТаблицаПараметров);
			Если ЗначениеЗаполнено(Точка) Тогда
				ТочкаВхОб = Точка.ПолучитьОбъект();
					
				НоваяСтрока = ТочкаВхОб.ИсходящиеТочки.Добавить();
				НоваяСтрока.Точка       = НоваяТочка;
				НоваяСтрока.Направление = ТекНаправление;
					
				бит_ОбщегоНазначения.ЗаписатьСправочник(ТочкаВхОб,,"Ошибки");
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуТочекАлгоритма()
	
	ТаблицаПараметров = РеквизитФормыВЗначение("ТаблицаТочек");

	ТаблицаПараметровВладельца = Объект.ПараметрыАлгоритма;
	
    ЗапросАктуален = Ложь;
	
	Текст = "Выбрать" + Символы.ПС;
	ТекстПодвала = "ИЗ" + Символы.ПС;
	
	Индекс = 1;
	Для Каждого Колонка Из ТаблицаПараметров.Колонки Цикл
		Если Не Колонка.Имя = "НомерСтроки" Тогда
			СтрокаТаблицы = ТаблицаПараметровВладельца.Найти(Колонка.Имя); 
			СтрТип   = СтрокаТаблицы.СтрТип;
			Если  Найти(СтрТип, "/")= 0 И Найти(СтрТип, "Ссылка") > 0 Тогда
			   ПозицияТочки = Найти(СтрТип,".");
			   ИмяОбъекта = Прав(СтрТип,?(ПозицияТочки=0,СтрДлина(СтрТип),СтрДлина(СтрТип) - ПозицияТочки)); 
			   Текст = Текст + " "+ИмяОбъекта+".Ссылка Как "+Колонка.Имя+","+Символы.ПС;

			   Если Найти(СтрТип, "Справочник") <> 0 Тогда
				   ТекстВставки = " Справочник."+ИмяОбъекта+" как "+ИмяОбъекта+"," + Символы.ПС;
				   Если Найти(ТекстПодвала, ТекстВставки) = 0 Тогда
					   ТекстПодвала = ТекстПодвала + ТекстВставки;
				   КонецЕсли;
			   ИначеЕсли Найти(СтрТип, "Документ") <> 0 Тогда
				   ТекстВставки = " Документ."+ИмяОбъекта+" как "+ИмяОбъекта+"," + Символы.ПС;
				   Если Найти(ТекстПодвала, ТекстВставки) = 0 Тогда
					   ТекстПодвала = ТекстПодвала + ТекстВставки;
				   КонецЕсли;
			   КонецЕсли;
			   ЗапросАктуален = Истина;
		   КонецЕсли;
		   
	   КонецЕсли; 
	   Индекс = Индекс +1;
   КонецЦикла;
   
   Текст = Лев(Текст, СтрДлина(Текст)-2);
   ТекстПодвала = Лев(ТекстПодвала, СтрДлина(ТекстПодвала)-2);
   
   Если ЗапросАктуален Тогда
	   Запрос = Новый Запрос;
	   Запрос.Текст = Текст + Символы.ПС + ТекстПодвала;
	   
	   ТаблицаТочек.Загрузить(Запрос.Выполнить().Выгрузить());
   КонецЕсли;

   НомерСтроки = 1;
   Если ТаблицаТочек.Количество() >0 Тогда
	   Для Каждого Стр Из ТаблицаТочек Цикл
		   Стр.НомерСтроки = НомерСтроки;
		   НомерСтроки = НомерСтроки + 1;
	   КонецЦикла;
   КонецЕсли;
   
КонецПроцедуры

&НаСервере
Функция ДобавитьТочкуАлгоритма(Алгоритм,ТочкаВходящая,Направление,ВидТочки,РежимСообщений = "Ошибки", СтрокаТЧ, Действие,ТаблицаПараметров)
	
	НоваяТочка = Справочники.бит_уп_ТочкиАлгоритмов.ПустаяСсылка();
	
	ТочкаОб = Справочники.бит_уп_ТочкиАлгоритмов.СоздатьЭлемент();
	ТочкаОб.ВидТочки     = ВидТочки;
	ТочкаОб.Наименование = Строка(Действие);
	ТочкаОб.Владелец     = Алгоритм;
	ТочкаОб.ПользовательскоеДействие = Действие;      
	
	Для Каждого Колонка Из ТаблицаПараметров.Колонки Цикл
		Если Не Колонка.Имя = "НомерСтроки" Тогда
			НоваяСтрока          = ТочкаОб.ПараметрыПроцесса.Добавить();
			НоваяСтрока.Имя      = Колонка.Имя;
			
			ТаблицаПараметровВладельца = Алгоритм.ПараметрыАлгоритма;
			СтрокаТаблицы = ТаблицаПараметровВладельца.Найти(Колонка.Имя); 
			Если СтрокаТаблицы<> Неопределено Тогда
			   НоваяСтрока.СтрТип   = СтрокаТаблицы.СтрТип;
			КонецЕсли;   
	   
			НоваяСтрока.Значение = СтрокаТЧ[Колонка.Имя];
			ТочкаОб.Наименование = ТочкаОб.Наименование + ?(ЗначениеЗаполнено(СтрокаТЧ[Колонка.Имя]),", " + СтрокаТЧ[Колонка.Имя], "");
		КонецЕсли;
	КонецЦикла;

	Если ЗначениеЗаполнено(ТочкаВходящая) Тогда
		
		НоваяСтрока = ТочкаОб.ВходящиеТочки.Добавить();
		НоваяСтрока.Точка       = ТочкаВходящая;
		НоваяСтрока.Направление = Направление;
		
	КонецЕсли; 
	
	флДействиеВыполнено = бит_ОбщегоНазначения.ЗаписатьСправочник(ТочкаОб,,РежимСообщений);
	
	Если флДействиеВыполнено Тогда
		НоваяТочка = ТочкаОб.Ссылка;
	КонецЕсли;
	
	Возврат НоваяТочка;
	
КонецФункции // ДобавитьТочку()

#КонецОбласти

