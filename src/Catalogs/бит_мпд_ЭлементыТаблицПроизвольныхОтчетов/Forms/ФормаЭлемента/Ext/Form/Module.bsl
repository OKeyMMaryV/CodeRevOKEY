
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	фКэшЗначений = Новый Структура;
	фКэшЗначений.Вставить("НастройкиАналитик");	
	ЗаполнитьНастройкиАналитик();
	
	СпособКомпоновки = Объект.Владелец.СпособКомпоновки;

	Элементы.Алгоритм.СписокВыбора.ЗагрузитьЗначения(Справочники.бит_мпд_ЭлементыТаблицПроизвольныхОтчетов.ПереченьАлгоритмов());
	
	Если Параметры.Свойство("ВыделенныеЭлементы") Тогда
		 Для каждого Эл Из Параметры.ВыделенныеЭлементы Цикл
		 	НоваяСтрока = Объект.Аргументы.Добавить();
			НоваяСтрока.ЭлементТаблицы = Эл;
			НоваяСтрока.Коэффициент = 1;
		 КонецЦикла; 
		 
		 Если НЕ Эл = Неопределено Тогда
			 Объект.КодСортировки = Эл.КодСортировки+1;
		 КонецЕсли; 
	КонецЕсли; 
	
	НастройкиУстановлены = Параметры.НастройкиУстановлены;
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры // ПриСозданииНаСервере()   

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УправлениеФормой(ЭтотОбъект);
	Оповестить("бит_ЗаписанЭлементСтруктурыПроизвольногоОтчета",Новый Структура("Отчет", Объект.Владелец));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ВладелецПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВладелецПриИзмененииНаСервере()
	
	ЗаполнитьНастройкиАналитик();
		
КонецПроцедуры

&НаКлиенте
Процедура ПериодДанныхПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда
		
		 // автоматическое формирование наименования
		 Объект.Наименование = Формат(Объект.ПериодДанных, "ДФ=dd.MM.yyyy");
	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПоУмолчаниюЗначениеАналитикиПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда
		
		// автоматическое формирование наименования
		ТекущаяСтрока = Элементы.ЗначенияПоУмолчанию.ТекущиеДанные;
		
		Объект.Наименование = Строка(ТекущаяСтрока.ЗначениеАналитики);
	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементДанныхПриИзменении(Элемент)
	
	СписокРесурсов = Элементы.ИмяРесурса.СписокВыбора;
	Если ЗначениеЗаполнено(СписокРесурсов) И СписокРесурсов.Количество() = 1  Тогда	
		Объект.ИмяРесурса = СписокРесурсов[0].Значение;  	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЯчейкиПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗначенияПоУмолчанию

&НаКлиенте
Процедура ЗначенияПоУмолчаниюАналитикаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		
		Настройка    = фКэшЗначений.НастройкиАналитик[ВыбранноеЗначение];
		
		ТекущиеДанные = Элементы.ЗначенияПоУмолчанию.ТекущиеДанные;
		ТекущиеДанные.ИмяАналитики        = Настройка.ИмяАналитики;
		
		ТекущиеДанные.Аналитика           = ВыбранноеЗначение;
		ТекущиеДанные.ЗначениеАналитики   = Настройка.ЗначениеПоУмолчанию;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПоУмолчаниюЗначениеАналитикиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.ЗначенияПоУмолчанию.ТекущиеДанные;
	
	ИмяЭлемента = "ЗначениеАналитики";
	
	ТекНастройка = фКэшЗначений.НастройкиАналитик[ТекущаяСтрока.ИмяАналитики];
	
	СтрНастройки = Новый Структура;
	СтрНастройки.Вставить(ИмяЭлемента,ТекНастройка);
	
	
	бит_МеханизмДопИзмеренийКлиент.ВыбратьТипСоставнойАналитики(ЭтаФорма
														  ,Элемент
														  ,ТекущаяСтрока
														  ,ИмяЭлемента
														  ,СтандартнаяОбработка
														  ,СтрНастройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПоУмолчаниюЗначениеАналитикиОчистка(Элемент, СтандартнаяОбработка)
		
	ТекущаяСтрока = Элементы.ЗначенияПоУмолчанию.ТекущиеДанные;
	
	ИмяЭлемента = "ЗначениеАналитики";
	
	ТекНастройка = фКэшЗначений.НастройкиАналитик[ТекущаяСтрока.ИмяАналитики];
	
	СтрНастройки = Новый Структура;
	СтрНастройки.Вставить(ИмяЭлемента,ТекНастройка);
	
	бит_МеханизмДопИзмеренийКлиент.ОбработкаОчисткиДополнительногоИзмерения(Элемент
																			,ТекущаяСтрока
	                                                                        ,ИмяЭлемента
																			,СтандартнаяОбработка
																			,СтрНастройки);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыАргументы

&НаКлиенте
Процедура АргументыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущаяСтрока = Элементы.Аргументы.ТекущиеДанные;
	Если НоваяСтрока И НЕ Копирование Тогда
	
		 ТекущаяСтрока.Коэффициент = 1;
	
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура кэширует настройки аналитик и заполняет список выбора поля Аналитика.
//
&НаСервере
Процедура ЗаполнитьНастройкиАналитик()
	
	фКэшЗначений.НастройкиАналитик = Справочники.бит_НастройкиПроизвольныхОтчетов.ПолучитьНастройкуАналитик(Объект.Владелец, "Аналитика");	
	
	Элементы.ЗначенияПоУмолчаниюАналитика.СписокВыбора.Очистить();
	Для каждого КиЗ Из фКэшЗначений.НастройкиАналитик Цикл  		
		Настройка = КиЗ.Значение;
		Элементы.ЗначенияПоУмолчаниюАналитика.СписокВыбора.Добавить(Настройка.Аналитика,Настройка.Синоним); 	
	КонецЦикла;
	
	СпособКомпоновки = Объект.Владелец.СпособКомпоновки;
	
	// Список ресурсов
	СписокРесурсов = бит_МеханизмПолученияДанных.ПолучитьСписокПолейДляСпособаКомпоновки(СпособКомпоновки, "Ресурс", "СписокЗначений");
	Элементы.ИмяРесурса.СписокВыбора.ЗагрузитьЗначения(СписокРесурсов.ВыгрузитьЗначения());
	
	
КонецПроцедуры // ЗаполнитьНастройкиАналитик()

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ЭтоСтрока   = Объект.Вид 	   = ПредопределенноеЗначение("Перечисление.бит_мпд_ВидыЭлементовТаблицПроизвольныхОтчетов.Строка");
	ЭтоФормула  = Объект.ВидЯчейки = ПредопределенноеЗначение("Перечисление.бит_ВидыЯчеекПроизвольногоОтчета.Формула");
	ЭтоЗначение = Объект.ВидЯчейки = ПредопределенноеЗначение("Перечисление.бит_ВидыЯчеекПроизвольногоОтчета.Значение");
	ЕстьСпособКомпоновки = ЗначениеЗаполнено(Форма.СпособКомпоновки);
	
	Элементы.Владелец.ТолькоПросмотр = Форма.НастройкиУстановлены;
	Элементы.Таблица.ТолькоПросмотр  = Форма.НастройкиУстановлены;
	Элементы.Вид.ТолькоПросмотр 	 = Форма.НастройкиУстановлены;

	Элементы.ГруппаЗначенияПоУмолчанию.Видимость  = ЭтоЗначение;
	Элементы.ГруппаАналитикиПоУмолчанию.Видимость = ЭтоСтрока; 
	
	Элементы.ЭлементДанных.Видимость = ЭтоСтрока И ЭтоЗначение И ЕстьСпособКомпоновки;
	Элементы.ИмяРесурса.Видимость    = ЭтоСтрока И ЭтоЗначение И ЕстьСпособКомпоновки;
	
	Элементы.Алгоритм.Видимость 	   = ЭтоФормула;
	Элементы.ГруппаАргументы.Видимость = ЭтоФормула;

КонецПроцедуры // УправлениеФормой()
 
#КонецОбласти
