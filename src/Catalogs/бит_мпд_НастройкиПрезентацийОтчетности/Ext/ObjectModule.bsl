#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий
	
Процедура ПередЗаписью(Отказ)
		
	Если ОбменДанными.Загрузка Тогда			
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
		
	бит_ук_СлужебныйСервер.РегистрацияНачалоСобытия(Отказ, ЭтотОбъект.ДополнительныеСвойства);
		
КонецПроцедуры // ПередЗаписью()
	
Процедура ПриЗаписи(Отказ)
		
	Если ОбменДанными.Загрузка Тогда			
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
		
	бит_ук_СлужебныйСервер.РегистрацияПриЗаписи(Отказ, ЭтотОбъект.ДополнительныеСвойства, Метаданные().ПолноеИмя());
		
КонецПроцедуры // ПриЗаписи()	
	
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ЭтотОбъект.Тип = Перечисления.бит_мпд_ТипыПрезентацийОтчетности.PowerPoint;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Функция определяет загружен ли макет презентации.
// 
// Возвращаемое значение:
//  Результат - Строка.
// 
Функция МакетЗагружен() Экспорт

	флЗагружен = МакетПрезентации.Получить() <> Неопределено;

	Возврат флЗагружен;
	
КонецФункции // МакетЗагружен()

// Процедура сохраняет макет.
// 
// Параметры:
//  ДанныеМакета - Строка.
// 
Процедура СохранитьМакет(ДанныеМакета) Экспорт

	ЭтотОбъект.МакетПрезентации = Новый  ХранилищеЗначения(ДанныеМакета);

КонецПроцедуры // СохранитьМакет()

// Функция извлекает макет.
// 
// Возвращаемое значение:
//  Результат - Строка.
// 
Функция ИзвлечьМакет() Экспорт

	ДанныеМакета = ЭтотОбъект.МакетПрезентации.Получить();
	
	Возврат ДанныеМакета;
	
КонецФункции // ИзвлечьМакет()

#КонецОбласти

#КонецЕсли
