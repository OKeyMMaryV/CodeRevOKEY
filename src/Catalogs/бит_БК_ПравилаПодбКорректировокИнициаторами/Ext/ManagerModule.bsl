//{bit_SVKushnirenko 06.03.2017 #2596
Функция СписокАтрибутовДляУправленияИсточникамиКорректировки()
	
	Возврат  Новый Структура("ЦФО, СтатьяОборотов, Аналитика_2, Регион, Проект", 
	"ЦФО",
	"Статья оборотов", 
	"Объект", 
	"Регион", 
	"Проект"); 
КонецФункции // СписокАтрибутовДляУправленияИсточникамиКорректировки() }bit_SVKushnirenko 06.03.2017 #2596 

//{bit_SVKushnirenko 15.03.2017 #2596
//Возвращает частное условия для одного вида операции по строке параметра
//Параметры:
//парСтрокаУсловия - строка-условия которая конструируется в процессе вызова функции
//парСоответствиеПоВидамУсловий - соответствие с выражениями для выбранной операции параметра парВидОперации
//парВидОперации - Перечисление.бит_БК_УсловияЗначения, кторое идентифицирует вид операции, для которой накоплены конструкции частных условий
Функция УсловиеВидаОперации(парСтрокаУсловия, парСоответствиеПоВидамУсловий, парВидОперации);
	
	пЧастнаяСтрокаУсловия = СокрЛП(парСоответствиеПоВидамУсловий[парВидОперации]);
	
	Если пЧастнаяСтрокаУсловия = "" Тогда  
		
		Возврат парСтрокаУсловия;
	Иначе
		
		Если парВидОперации = Перечисления.бит_БК_УсловияЗначения.КлАн Тогда  
			
			Возврат парСтрокаУсловия + ?(СокрЛП(парСтрокаУсловия) = "", "", " И ") + 
			"НЕ 0 В
			|				(ВЫБРАТЬ ПЕРВЫЕ 1
			|					КОЛИЧЕСТВО(втЗапросКорр.Сценарий) КАК Колонка
			|				ИЗ
			|					втЗапросКорр КАК втЗапросКорр
			|				ГДЕ
			|					" + пЧастнаяСтрокаУсловия + ")";
		Иначе
			
			Возврат парСтрокаУсловия + ?(СокрЛП(парСтрокаУсловия) = "", "", " И ") + пЧастнаяСтрокаУсловия
		КонецЕсли;
	КонецЕсли;
КонецФункции // УсловиеВидаОперации() }bit_SVKushnirenko 15.03.2017 #2596 

//{bit_SVKushnirenko 06.03.2017 #2596
//Возвращает конструкцию условий по данным правил в ТЧ
//Параметры:
//парПараметрыЗапроса - параметры запроса, куда добавляются: синоним = "пзПараметрПравилаХХХ", значение = ссылке для правого значения для условий  = или <>
//парСтруктураАтрибутовУсловий - структура ключ=идентификатор, значение = синоним идентификатора
//парТЧУсловия - ТЧ которое содержит описатель условия
//парВыражениеИсточникаКлАн - строка-префикс адреса таблицы данных для операций сравнения "КлАн"
//парЛевоеВыражениеСравленияОсновнойТаблицы - строка-префикс адреса данных левой части условия для операций = или <>

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-11 (#2867)
//Функция КонструкторУсловияПоТЧПравил(парПараметрыЗапроса, парСтруктураАтрибутовУсловий, парТЧУсловия, парВыражениеИсточникаКлАн, парЛевоеВыражениеСравленияОсновнойТаблицы)
//Заменено на:
Функция КонструкторУсловияПоТЧПравил(парПараметрыЗапроса, парСтруктураАтрибутовУсловий, парТЧУсловия, парВыражениеИсточникаКлАн, парЛевоеВыражениеСравленияОсновнойТаблицы,УсловиеПоТЧЗапроса = Ложь)
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-11 (#2867)

	пИндексПараметров = парПараметрыЗапроса.Количество() + 1;
	пТекстУсловия = "";
	Для каждого пСтрокаУсловия Из парТЧУсловия Цикл
		
		//Инициализация хранения по видам условий
		пСоответствиеПоВидамУсловий = Новый Соответствие;
		
		//Выбор узначений  по видам условий для поля
		Для каждого пЭлемент Из парСтруктураАтрибутовУсловий Цикл
			
			пКлюч = пЭлемент.Ключ;
			пСиноним = пЭлемент.Значение;
			
			пУсловие = пСтрокаУсловия[пКлюч + "_Условие"];
			пЗначение = пСтрокаУсловия[пКлюч + "_Значение"];
								
			пСтрокаВыражения = СокрЛП(пСоответствиеПоВидамУсловий[пУсловие]);
			
			пУсловиеЭквиваленции = "";
			Если пУсловие = Перечисления.бит_БК_УсловияЗначения.Равно Тогда
				
				пУсловиеЭквиваленции = "=";
			ИначеЕсли пУсловие = Перечисления.бит_БК_УсловияЗначения.НеРавно Тогда 
				
				пУсловиеЭквиваленции = "<>";
			ИначеЕсли пУсловие = Перечисления.бит_БК_УсловияЗначения.КлАн Тогда 
				
				пУсловиеЭквиваленции = "КлАн";
			КонецЕсли;
			
			Если пУсловиеЭквиваленции = "КлАн" Тогда 
				
				пСтрокаВыражения = пСтрокаВыражения + ?(пСтрокаВыражения = "", "", " И ") + парВыражениеИсточникаКлАн + пКлюч  + " = " +  парЛевоеВыражениеСравленияОсновнойТаблицы + пКлюч;
			ИначеЕсли пУсловиеЭквиваленции = "=" или пУсловиеЭквиваленции = "<>"  Тогда 
				
				пКлючПараметраПравила = "пзПараметрПравила" + Формат(пИндексПараметров, "ЧГ=0");
				пСтрокаВыражения = пСтрокаВыражения + ?(пСтрокаВыражения = "", "", " И ") + парЛевоеВыражениеСравленияОсновнойТаблицы + пКлюч  + " " + пУсловиеЭквиваленции +" &" + пКлючПараметраПравила;
				парПараметрыЗапроса.Вставить(пКлючПараметраПравила, пЗначение);
				пИндексПараметров = пИндексПараметров + 1;
			КонецЕсли;
			
			пСоответствиеПоВидамУсловий.Вставить(пУсловие, пСтрокаВыражения);
		КонецЦикла; 
		
		//Компоновка представления по видам условий
		Если пТекстУсловия <> "" и Прав(пТекстУсловия, 1) <> Символы.ПС Тогда  
			
			пТекстУсловия = пТекстУсловия + Символы.ПС;
		КонецЕсли;
		
		пЛокальноеПредставлениеСтроки = "";
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-11 (#2867)
		//пЛокальноеПредставлениеСтроки = УсловиеВидаОперации(пЛокальноеПредставлениеСтроки, пСоответствиеПоВидамУсловий, Перечисления.бит_БК_УсловияЗначения.КлАн);
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-11 (#2867)
					
		пЛокальноеПредставлениеСтроки = УсловиеВидаОперации(пЛокальноеПредставлениеСтроки, пСоответствиеПоВидамУсловий, Перечисления.бит_БК_УсловияЗначения.Равно);
		пЛокальноеПредставлениеСтроки = УсловиеВидаОперации(пЛокальноеПредставлениеСтроки, пСоответствиеПоВидамУсловий, Перечисления.бит_БК_УсловияЗначения.НеРавно);
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-11 (#2867)
		УсловиеПоКлан = пСоответствиеПоВидамУсловий.Получить(Перечисления.бит_БК_УсловияЗначения.КлАн);
		
		Если УсловиеПоТЧЗапроса И
			 ЗначениеЗаполнено(УсловиеПоКлан) И
			 ЗначениеЗаполнено(пЛокальноеПредставлениеСтроки)
		Тогда 
			
			Если Прав(пЛокальноеПредставлениеСтроки, 3) = " И " Тогда //очистка некорректного завершения условия 
				
				пТекстУсловия = Лев(пТекстУсловия, СтрДлина(пЛокальноеПредставлениеСтроки) - 3);
			ИначеЕсли Прав(пЛокальноеПредставлениеСтроки, 5) = " ИЛИ "  Тогда
				
				пТекстУсловия = Лев(пЛокальноеПредставлениеСтроки, СтрДлина(пЛокальноеПредставлениеСтроки) - 5);
			КонецЕсли;

		
			пЛокальноеПредставлениеСтроки = "ВЫБОР КОГДА " + пЛокальноеПредставлениеСтроки + " ТОГДА 
											|	" + УсловиеПоКлан + "
											|ИНАЧЕ ЛОЖЬ КОНЕЦ";
		Иначе 
			пЛокальноеПредставлениеСтроки = УсловиеВидаОперации(пЛокальноеПредставлениеСтроки, пСоответствиеПоВидамУсловий, Перечисления.бит_БК_УсловияЗначения.КлАн);	
		КонецЕсли;
        //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-11 (#2867)
		
		Если пЛокальноеПредставлениеСтроки = "" Тогда  
			
			пТекстУсловия = пТекстУсловия + СокрЛП(пСтрокаУсловия.ГруппЛев) +
			" ИСТИНА " + СокрЛП(пСтрокаУсловия.ГруппПрав) + ?(СокрЛП(пСтрокаУсловия.ОператорСледующего) = "", "", " " + СокрЛП(пСтрокаУсловия.ОператорСледующего) + " ") ;
		Иначе
			
			пТекстУсловия = пТекстУсловия + СокрЛП(пСтрокаУсловия.ГруппЛев) +
			пЛокальноеПредставлениеСтроки + СокрЛП(пСтрокаУсловия.ГруппПрав) + ?(СокрЛП(пСтрокаУсловия.ОператорСледующего) = "", "", " " + СокрЛП(пСтрокаУсловия.ОператорСледующего) + " ") ;
		КонецЕсли;
		 
	КонецЦикла; 
	
	Если Прав(пТекстУсловия, 3) = " И " Тогда //очистка некорректного завершения условия 
		
		пТекстУсловия = Лев(пТекстУсловия, СтрДлина(пТекстУсловия) - 3);
	ИначеЕсли Прав(пТекстУсловия, 5) = " ИЛИ "  Тогда
		
		пТекстУсловия = Лев(пТекстУсловия, СтрДлина(пТекстУсловия) - 5);
	КонецЕсли;
	
	Возврат пТекстУсловия;
КонецФункции // КонструкторУсловияПоТЧПравил() }bit_SVKushnirenko 06.03.2017 #2596

//{bit_SVKushnirenko 15.03.2017 #2596
//Получает фрагмент запроса "ОБЪЕДИНИТЬ" для выявления правил, применимых к текущему набору КлАн
// Параметры:
//парПерваяТаблица - Истина = первая таблица (включает ПОМЕСТИТЬ...), Ложь = не первая таблица (не содержит ПОМЕСТИТЬ...)
//парУсловиеТаблицы - строка-условие соединения таблицы КлАн и справочника правил. Пример: втТЧЗапросаКорр.Сценарий = бит_БК_ПравилаПодбКорректировокИнициаторами.СценарийКонтролируемый
//парПараметрСсылки - строка-
Функция ФрагментЗапросаПравилПрименимыхДляКлАн(парПерваяТаблица = Ложь, парУсловиеТаблицы, парПараметрСсылки)
	
	пТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-01 (#2867)
	|	втТЧЗапросаКорр.Сценарий,
	|	втТЧЗапросаКорр.СценарийКонтролируемый,
	|	втТЧЗапросаКорр.ЦФО,
	|	втТЧЗапросаКорр.СтатьяОборотов,
	|	втТЧЗапросаКорр.Проект,
	|	втТЧЗапросаКорр.Аналитика_1,
	|	втТЧЗапросаКорр.Аналитика_2,
	|	втТЧЗапросаКорр.Регион,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-01 (#2867)
	|	бит_БК_ПравилаПодбКорректировокИнициаторами.Ссылка КАК ПравилоСсылка
	|ПОМЕСТИТЬ втПравила
	|ИЗ
	|	втТЧЗапросаКорр КАК втТЧЗапросаКорр
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_БК_ПравилаПодбКорректировокИнициаторами КАК бит_БК_ПравилаПодбКорректировокИнициаторами
	|		ПО втТЧЗапросаКорр.СценарийКонтролируемый = бит_БК_ПравилаПодбКорректировокИнициаторами.СценарийКонтролируемый
	|			И втТЧЗапросаКорр.Сценарий = бит_БК_ПравилаПодбКорректировокИнициаторами.Сценарий
	|			И (&УсловиеХХ)
	|ГДЕ
	|	бит_БК_ПравилаПодбКорректировокИнициаторами.Активность
	|	И бит_БК_ПравилаПодбКорректировокИнициаторами.Ссылка = &пзСсылкаНаЭлементПравилаХХ";
	
	Если НЕ парПерваяТаблица Тогда  
		
		пТекстЗапроса =  
		"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|" + пТекстЗапроса;
		
		пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "ПОМЕСТИТЬ втПравила", "");
	КонецЕсли;
	
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "пзСсылкаНаЭлементПравилаХХ", парПараметрСсылки);
	
	Если парУсловиеТаблицы <> ""  Тогда  
		
		пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "(&УсловиеХХ)", парУсловиеТаблицы);
	Иначе
		
		пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "И (&УсловиеХХ)", "");
	КонецЕсли;
	
	Возврат пТекстЗапроса; 
КонецФункции // ФрагментЗапросаПравилПрименимыхДляКлАн() }bit_SVKushnirenko 15.03.2017 #2596 
//{bit_SVKushnirenko 14.03.2017 #2596
//Возвращает текст запроса для получения списка действующих корректировок для набора данных КлАн
// Параметры:
//парТаблицаКлАн - таблица данных КлАн которая определяет допустимые правила поиска источников
//парПараметыЗапроса - параметры запроса (добавляются значения ссылок операций = и <>
Функция ПолучитьТекстЗапросаСоответствияПравилИсточникуКорректировки(парАдресМассивАктуальныхПравил, парПараметыЗапроса)
	
	пТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗапросКлАн.Сценарий,
	|	ЗапросКлАн.СценарийКонтролируемый,
	|	ЗапросКлАн.ЦФО,
	|	ЗапросКлАн.СтатьяОборотов,
	|	ЗапросКлАн.Проект,
	|	ЗапросКлАн.Аналитика_1,
	|	ЗапросКлАн.Аналитика_2,
	|	ЗапросКлАн.Регион
	|ПОМЕСТИТЬ втТЧЗапросаКорр
	|ИЗ
	|	&пзТаблицаКлАн КАК ЗапросКлАн
	|;
	|";

	//Формируется текст запроса правил по активным правилам подбора корректировок справочника
	пЗапрос = Новый Запрос;
	пЗапрос.Текст = 
	"ВЫБРАТЬ
	|	бит_БК_ПравилаПодбКорректировокИнициаторами.Ссылка КАК ПравилоСсылка
	|ИЗ
	|	Справочник.бит_БК_ПравилаПодбКорректировокИнициаторами КАК бит_БК_ПравилаПодбКорректировокИнициаторами
	|ГДЕ
	|	бит_БК_ПравилаПодбКорректировокИнициаторами.Активность";	
	
	пТЗАктивныхПравил = пЗапрос.Выполнить().Выгрузить();
	
	Если пТЗАктивныхПравил.Количество() = 0 Тогда 
		
		Сообщить("Нет активных правил подбора корректировки!", СтатусСообщения.Важное);
		Возврат "";
	КонецЕсли;
	 
	пПерваяИтерация = Истина;
	пИтераторСсылокНаПравила = 1;
	Для каждого пСтрокаПравило Из пТЗАктивныхПравил Цикл
		
		пКлючПараметраСсылки = "пзСсылкаНаПравило" + Формат(пИтераторСсылокНаПравила, "ЧГ=0");
		парПараметыЗапроса.Вставить(пКлючПараметраСсылки, пСтрокаПравило.ПравилоСсылка);
		
		пТекстЗапроса =  пТекстЗапроса + 
		
		ФрагментЗапросаПравилПрименимыхДляКлАн(
		пПерваяИтерация, 
		
		КонструкторУсловияПоТЧПравил(		
		парПараметыЗапроса,
		СписокАтрибутовДляУправленияИсточникамиКорректировки(),
		пСтрокаПравило.ПравилоСсылка.тбчУсловиеПолучателя, 
		"бит_БК_ПравилаПодбКорректировокИнициаторами.", 
		"втТЧЗапросаКорр."), 
		пКлючПараметраСсылки);
		
		пПерваяИтерация = Ложь;
		пИтераторСсылокНаПравила = пИтераторСсылокНаПравила + 1;
	КонецЦикла;
	
	пТекстЗапроса = пТекстЗапроса + 
	"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втПравила.ПравилоСсылка
	|ИЗ
	|	втПравила КАК втПравила
	|;
	|УНИЧТОЖИТЬ втТЧЗапросаКорр
	|;
	|УНИЧТОЖИТЬ втПравила
	|";
	Возврат пТекстЗапроса;
КонецФункции // ПолучитьТекстЗапросаСоответствияПравилИсточникуКорректировки() }bit_SVKushnirenko 14.03.2017 #2596


//{bit_SVKushnirenko 14.03.2017 #2596
//Возвращает текст запроса для получения списка действующих корректировок для набора данных КлАн
// Параметры:
//парТаблицаКлАн - таблица данных КлАн которая определяет допустимые правила поиска источников
//парПараметыЗапроса - параметры запроса (добавляются значения ссылок операций = и <>
Функция ПолучитьТекстЗапросаПравилКорректировки(парТаблицаКлАн, парПараметыЗапроса)
	
	пТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗапросКлАн.Сценарий,
	|	ЗапросКлАн.СценарийКонтролируемый,
	|	ЗапросКлАн.ЦФО,
	|	ЗапросКлАн.СтатьяОборотов,
	|	ЗапросКлАн.Проект,			
	|	ЗапросКлАн.Аналитика_1,
	|	ЗапросКлАн.Аналитика_2,
	|	ЗапросКлАн.Регион
	|ПОМЕСТИТЬ втТЧЗапросаКорр
	|ИЗ
	|	&пзТаблицаКлАн КАК ЗапросКлАн
	|;
	|";

	//Формируется текст запроса правил по активным правилам подбора корректировок справочника
	пЗапрос = Новый Запрос;
	пЗапрос.Текст = 
	"ВЫБРАТЬ
	|	бит_БК_ПравилаПодбКорректировокИнициаторами.Ссылка КАК ПравилоСсылка
	|ИЗ
	|	Справочник.бит_БК_ПравилаПодбКорректировокИнициаторами КАК бит_БК_ПравилаПодбКорректировокИнициаторами
	|ГДЕ
	|	бит_БК_ПравилаПодбКорректировокИнициаторами.Активность";	
	
	пТЗАктивныхПравил = пЗапрос.Выполнить().Выгрузить();
	
	Если пТЗАктивныхПравил.Количество() = 0 Тогда 
		
		Сообщить("Нет активных правил подбора корректировки!", СтатусСообщения.Важное);
		Возврат "";
	КонецЕсли;
	 
	пПерваяИтерация = Истина;
	пИтераторСсылокНаПравила = 1;
	Для каждого пСтрокаПравило Из пТЗАктивныхПравил Цикл
		
		пКлючПараметраСсылки = "пзСсылкаНаПравило" + Формат(пИтераторСсылокНаПравила, "ЧГ=0");
		парПараметыЗапроса.Вставить(пКлючПараметраСсылки, пСтрокаПравило.ПравилоСсылка);
		
		пТекстЗапроса =  пТекстЗапроса + 
		
		ФрагментЗапросаПравилПрименимыхДляКлАн(
		пПерваяИтерация, 
		
		КонструкторУсловияПоТЧПравил(		
		парПараметыЗапроса,
		СписокАтрибутовДляУправленияИсточникамиКорректировки(),
		пСтрокаПравило.ПравилоСсылка.тбчУсловиеПолучателя, 
		"бит_БК_ПравилаПодбКорректировокИнициаторами.", 
		"втТЧЗапросаКорр."), 
		пКлючПараметраСсылки);
		
		пПерваяИтерация = Ложь;
		пИтераторСсылокНаПравила = пИтераторСсылокНаПравила + 1;
	КонецЦикла;
	
	пТекстЗапроса = пТекстЗапроса + 
	"
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-02 (#2867)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПравила.Сценарий,
	|	втПравила.СценарийКонтролируемый,
	|	втПравила.ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-19 (#3232)
	|	""ТЧ_Год_Период"" КАК ПериодГод,	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-19 (#3232)
	|	втПравила.СтатьяОборотов,
	|	втПравила.Проект,
	|	втПравила.Аналитика_1,
	|	втПравила.Аналитика_2,
	|	втПравила.Регион,
	|	втПравила.ПравилоСсылка
	|ИЗ
	|	втПравила КАК втПравила
	|СГРУППИРОВАТЬ ПО
	|	втПравила.СтатьяОборотов,
	|	втПравила.Сценарий,
	|	втПравила.СценарийКонтролируемый,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-19 (#3232)
	|	""ТЧ_Год_Период"",
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-19 (#3232)
	|	втПравила.ЦФО,
	|	втПравила.Аналитика_2,
	|	втПравила.Проект,
	|	втПравила.Регион,
	|	втПравила.Аналитика_1,
	|	втПравила.ПравилоСсылка
	|
	|ИТОГИ ПО
	|ПравилоСсылка
	|
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-02 (#2867)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втПравила.ПравилоСсылка
	|ИЗ
	|	втПравила КАК втПравила
	|;
	|УНИЧТОЖИТЬ втТЧЗапросаКорр
	|;
	|УНИЧТОЖИТЬ втПравила
	|";
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-19 (#3232)
	пТекст_ТЧ_ПериодГод = "";
	бит_БК_Общий.ПолучитьВыражениеДляПериодов(бит_БК_Общий.СценариПланированияНастройкиВыбораСумм(), 
																			"втПравила.СценарийКонтролируемый", 	
																			"",
																			пТекст_ТЧ_ПериодГод);
	
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_Год_Период""", пТекст_ТЧ_ПериодГод);	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-19 (#3232)
	
	Возврат пТекстЗапроса;
КонецФункции // ПолучитьТекстЗапросаПравилКорректировки() }bit_SVKushnirenko 14.03.2017 #2596

//{bit_SVKushnirenko 14.03.2017 #2596
//Возвращает текст запроса с программными фильтрами по данным 
// Параметры:
//парМассивПравил - массив допустимых правил источников
//парПараметыЗапроса - параметры запроса (добавляются значения ссылок операций = и <>
Функция ПолучитьТекстЗапросаИсточниковКорректировки(парМассивПравил, парПараметыЗапроса)
	
	//Построение таблиц-источников, объединением из всех возможных источников, соедиенных с таблицей КлАн (включающей периоды)
	//Возврат
	//"ВЫБРАТЬ
	//|	бит_БК_ПравилаПодбКорректировокИнициаторами.Ссылка как ПравилоСсылка
	//|ИЗ
	//|	Справочник.бит_БК_ПравилаПодбКорректировокИнициаторами КАК бит_БК_ПравилаПодбКорректировокИнициаторами";
	
	пТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗапросКлАн.Сценарий,
	|	ЗапросКлАн.СценарийКонтролируемый,
	|	ЗапросКлАн.ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-15 (#3232)
	|	ЗапросКлАн.ПериодГод КАК ПериодГод,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-15 (#3232)
	|	ЗапросКлАн.КоррПериод,
	|	ЗапросКлАн.ЦФО КАК ЦФО1,
	|	ЗапросКлАн.СтатьяОборотов,
	|	ЗапросКлАн.Проект,
	|	ЗапросКлАн.Аналитика_1,
	|	ЗапросКлАн.Аналитика_2,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-11 (#2867)
	|	ЗапросКлАн.ИДСтроки КАК ИДСтроки,
	|	ЗапросКлАн.Правило КАК Правило,	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-11 (#2867)
	|	ЗапросКлАн.Регион
	|ПОМЕСТИТЬ втТЧЗапросаКорр
	|ИЗ
	|	&пзТаблицаКлАн КАК ЗапросКлАн
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТЧЗапросаКорр.Сценарий КАК Сценарий,
	|	втТЧЗапросаКорр.СценарийКонтролируемый КАК СценарийКонтролируемый,
	|	втТЧЗапросаКорр.ЦФО КАК ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-15 (#3232)
	|	втТЧЗапросаКорр.ПериодГод КАК ПериодГод,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-15 (#3232)
	|	втТЧЗапросаКорр.КоррПериод КАК КоррПериод,
	|	втТЧЗапросаКорр.ЦФО1 КАК ЦФО1,
	|	втТЧЗапросаКорр.СтатьяОборотов КАК СтатьяОборотов,
	|	втТЧЗапросаКорр.Проект КАК Проект,
	|	втТЧЗапросаКорр.Аналитика_1 КАК Аналитика_1,
	|	втТЧЗапросаКорр.Аналитика_2 КАК Аналитика_2,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-11 (#2867)
	|	втТЧЗапросаКорр.ИДСтроки,
	|	втТЧЗапросаКорр.Правило КАК Правило,		
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-11 (#2867)
	|	втТЧЗапросаКорр.Регион КАК Регион
	|ПОМЕСТИТЬ втЗапросКорр
	|ИЗ
	|	втТЧЗапросаКорр КАК втТЧЗапросаКорр
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сценарий,
	|	СценарийКонтролируемый,
	|	ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-15 (#3232)
	|	ПериодГод,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-15 (#3232)
	|	КоррПериод,
	|	ЦФО1,
	|	Проект,
	|	Аналитика_1,
	|	Аналитика_2,
	|	СтатьяОборотов,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-11 (#2867)
	|	ИДСтроки,
	|	Правило,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-11 (#2867)
	|	Регион
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втТЧЗапросаКорр.Сценарий КАК Сценарий,
	|	втТЧЗапросаКорр.СценарийКонтролируемый КАК СценарийКонтролируемый,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-15 (#3232)
	|	втТЧЗапросаКорр.ПериодГод КАК ПериодГод,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-15 (#3232)
	|	втТЧЗапросаКорр.КоррПериод,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-11 (#2867)
	|	втТЧЗапросаКорр.ИДСтроки КАК ИДСтроки,	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-11 (#2867)
	|	бит_БК_КоррОграниченияПериода.ДоступныйПериод
	|ПОМЕСТИТЬ втПарыСцКонтроля
	|ИЗ
	|	втТЧЗапросаКорр КАК втТЧЗапросаКорр
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_БК_КоррОграниченияПериода КАК бит_БК_КоррОграниченияПериода
	|		ПО втТЧЗапросаКорр.Сценарий = бит_БК_КоррОграниченияПериода.Сценарий
	|			И втТЧЗапросаКорр.СценарийКонтролируемый = бит_БК_КоррОграниченияПериода.СценарийКонтролируемый
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сценарий,
	|	СценарийКонтролируемый
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеСведения.Значение КАК Регион,
	|	ВЫРАЗИТЬ(ДополнительныеСведения.Объект КАК Справочник.ОбъектыСтроительства) КАК Объект
	|ПОМЕСТИТЬ втРегионы
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|		ПО ДополнительныеРеквизитыИСведения.Ссылка = ДополнительныеСведения.Свойство
	|ГДЕ
	|	ДополнительныеРеквизитыИСведения.Заголовок = ""Регион""
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Период КАК ПериодПлана,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-11 (#2867)
	|	втПарыСцКонтроля.ИДСтроки,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-11 (#2867)
	|	ВЫБОР
	|		КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
	|			ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, ГОД)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-05-20 (#3314)
	|		КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Полугодие)
	|			ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, ПОЛУГОДИЕ)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-05-20 (#3314)
	|		КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Квартал)
	|			ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, КВАРТАЛ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ)
	|	КОНЕЦ КАК КоррПериод,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий КАК Сценарий,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый КАК СценарийКонтролируемый,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО КАК ЦФО,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов КАК СтатьяОборотов,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект КАК Проект,
	|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета) КАК Аналитика_1,
	|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 КАК Справочник.ОбъектыСтроительства) КАК Аналитика_2,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(втРегионы.Регион, ЗНАЧЕНИЕ(Справочник.бит_БК_Регион.ПустаяСсылка)) КАК Справочник.бит_БК_Регион) КАК Регион,
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот - бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) КАК СуммаОстатка
	|ПОМЕСТИТЬ втИстДоПравил
	|ИЗ
	|	втПарыСцКонтроля КАК втПарыСцКонтроля
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(, , Месяц, Аналитика_1 = &пзНомерЗаявкиШапка) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ втРегионы КАК втРегионы
	|			ПО бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 = втРегионы.Объект
	|		ПО втПарыСцКонтроля.Сценарий = бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий
	|			И втПарыСцКонтроля.СценарийКонтролируемый = бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый
	|			И (ВЫБОР
	|				КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
	|					ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, ГОД) = втПарыСцКонтроля.КоррПериод
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-05-20 (#3314)
	|				КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Полугодие)
	|					ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, ПОЛУГОДИЕ) = втПарыСцКонтроля.КоррПериод
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-05-20 (#3314)
	|				КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Квартал)
	|					ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, КВАРТАЛ) = втПарыСцКонтроля.КоррПериод
	|				ИНАЧЕ НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ) = втПарыСцКонтроля.КоррПериод
	|			КОНЕЦ)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-15 (#3232)
	|ГДЕ
	|	НЕ втПарыСцКонтроля.ПериодГод
	|
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-15 (#3232)
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Период,
	|	ВЫБОР
	|		КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
	|			ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, ГОД)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-05-20 (#3314)
	|		КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Полугодие)
	|			ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, ПОЛУГОДИЕ)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-05-20 (#3314)
	|		КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Квартал)
	|			ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, КВАРТАЛ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ)
	|	КОНЕЦ,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-11 (#2867)
	|	втПарыСцКонтроля.ИДСтроки,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-11 (#2867)
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект,
	|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета),
	|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 КАК Справочник.ОбъектыСтроительства),
	|	ВЫРАЗИТЬ(ЕСТЬNULL(втРегионы.Регион, ЗНАЧЕНИЕ(Справочник.бит_БК_Регион.ПустаяСсылка)) КАК Справочник.бит_БК_Регион)
	|
	|ИМЕЮЩИЕ
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот - бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) > 0
	|
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-15 (#3232)
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Период,	
	|	втПарыСцКонтроля.ИДСтроки,	
	|	ВЫБОР
	|		КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
	|			ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, ГОД)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-05-20 (#3314)
	|		КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Полугодие)
	|			ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, ПОЛУГОДИЕ)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-05-20 (#3314)
	|		КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Квартал)
	|			ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, КВАРТАЛ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ)
	|	КОНЕЦ,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект,
	|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета),
	|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 КАК Справочник.ОбъектыСтроительства),
	|	ВЫРАЗИТЬ(ЕСТЬNULL(втРегионы.Регион, ЗНАЧЕНИЕ(Справочник.бит_БК_Регион.ПустаяСсылка)) КАК Справочник.бит_БК_Регион),
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот - бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот)	
	|ИЗ
	|	втПарыСцКонтроля КАК втПарыСцКонтроля
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(, , Год, Аналитика_1 = &пзНомерЗаявкиШапка) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ втРегионы КАК втРегионы
	|			ПО бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 = втРегионы.Объект
	|		ПО втПарыСцКонтроля.Сценарий = бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий
	|			И втПарыСцКонтроля.СценарийКонтролируемый = бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый
	|			И (ВЫБОР
	|				КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
	|					ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, ГОД) = втПарыСцКонтроля.КоррПериод
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-05-20 (#3314)
	|				КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Полугодие)
	|					ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, ПОЛУГОДИЕ) = втПарыСцКонтроля.КоррПериод
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-05-20 (#3314)
	|				КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Квартал)
	|					ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, КВАРТАЛ) = втПарыСцКонтроля.КоррПериод
	|				ИНАЧЕ НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ) = втПарыСцКонтроля.КоррПериод
	|			КОНЕЦ)	
	|ГДЕ
	|	втПарыСцКонтроля.ПериодГод
	|	
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Период,
	|	ВЫБОР
	|		КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
	|			ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, ГОД)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-05-20 (#3314)
	|		КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Полугодие)
	|			ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, ПОЛУГОДИЕ)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-05-20 (#3314)
	|		КОГДА втПарыСцКонтроля.ДоступныйПериод = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Квартал)
	|			ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, КВАРТАЛ)	
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ)
	|	КОНЕЦ,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов,
	|	втПарыСцКонтроля.ИДСтроки,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект,
	|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета),
	|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 КАК Справочник.ОбъектыСтроительства),
	|	ВЫРАЗИТЬ(ЕСТЬNULL(втРегионы.Регион, ЗНАЧЕНИЕ(Справочник.бит_БК_Регион.ПустаяСсылка)) КАК Справочник.бит_БК_Регион)
	|
	|ИМЕЮЩИЕ
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот - бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) > 0
	|
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-15 (#3232)
	|ИНДЕКСИРОВАТЬ ПО
	|	Сценарий,
	|	ЦФО,
	|	СтатьяОборотов,
	|	Проект,
	|	СценарийКонтролируемый,
	|	Аналитика_1,
	|	Аналитика_2,
	|	Регион,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-11 (#2867)
	|	ИДСтроки,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-11 (#2867)
	|	КоррПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-01 (#2867)
	//|ВЫБРАТЬ
	//|	втИстДоПравил.ПериодПлана,
	//|	втИстДоПравил.КоррПериод,
	//|	втИстДоПравил.Сценарий,
	//|	втИстДоПравил.СценарийКонтролируемый,
	//|	втИстДоПравил.ЦФО,
	//|	втИстДоПравил.СтатьяОборотов,
	//|	втИстДоПравил.Проект,
	//|	втИстДоПравил.Аналитика_1,
	//|	втИстДоПравил.Аналитика_2,
	//|	втИстДоПравил.Регион,
	//|	втИстДоПравил.СуммаОстатка
	//|ИЗ
	//|	втИстДоПравил КАК втИстДоПравил
	//|ГДЕ
	//|	&УсловиеХХ
	//Заменено на:
	|//ИтоговаяТаблицаПоПравилам";
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-01 (#2867)	
	
	//|	И НЕ 0 В
	//|				(ВЫБРАТЬ ПЕРВЫЕ 1
	//|					КОЛИЧЕСТВО(1) КАК Колонка
	//|				ИЗ
	//|					втТЧЗапросаКорр КАК втТЧЗапросаКорр
	//|				ГДЕ
	//|					втТЧЗапросаКорр.Сценарий = 1
	//|					И втТЧЗапросаКорр.ЦФО = 2)";

	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-01 (#2867)
	ТекстИтоговойТаблицы = "ВЫБРАТЬ
	|	втИстДоПравил.ПериодПлана,
	|	втИстДоПравил.КоррПериод,
	|   &пзСсылкаНаПравилоХХ КАК Правило,
	|	втИстДоПравил.ИДСтроки,		
	|	втИстДоПравил.Сценарий,
	|	втИстДоПравил.СценарийКонтролируемый,
	|	втИстДоПравил.ЦФО,
	|	втИстДоПравил.СтатьяОборотов,
	|	втИстДоПравил.Проект,
	|	втИстДоПравил.Аналитика_1,
	|	втИстДоПравил.Аналитика_2,
	|	втИстДоПравил.Регион,
	|	втИстДоПравил.СуммаОстатка
	|ИЗ
	|	втИстДоПравил КАК втИстДоПравил
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЗапросКорр КАК втЗапросКорр
	|	ПО втИстДоПравил.ИДСтроки = втЗапросКорр.ИДСтроки И
	|	втЗапросКорр.Правило = &пзСсылкаНаПравилоХХ			
    |
	|";
	ТекстЗапросПоПравилам = "";
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-01 (#2867)
	
	Если НЕ (парПараметыЗапроса.Свойство("пзНомерЗаявкиШапка") и ЗначениеЗаполнено(парПараметыЗапроса.пзНомерЗаявкиШапка)) Тогда  //исключаем отсечение данных по "№ заявки" из шапки
		
		пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "Аналитика_1 = &пзНомерЗаявкиШапка", "");
	КонецЕсли;
	
	пСписокАтрибутовУправления = СписокАтрибутовДляУправленияИсточникамиКорректировки();
	пИтераторСсылокНаПравила = 1;
	пТекстУсловия = "";
	Для каждого пПравилоСсылка Из парМассивПравил Цикл

		пКлючПараметраСсылки = "пзСсылкаНаПравило" + Формат(пИтераторСсылокНаПравила, "ЧГ=0");
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-01 (#2867)
		//Раскомментировал строку
		парПараметыЗапроса.Вставить(пКлючПараметраСсылки, пПравилоСсылка);						
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-01 (#2867)
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-01 (#2867)
		//пТекстУсловия = пТекстУсловия + ?(пТекстУсловия = "", "", " ИЛИ ") + КонструкторУсловияПоТЧПравил(		
		//Заменено на:
		пКлючПараметраСценарий = "пзСценарий" + Формат(пИтераторСсылокНаПравила, "ЧГ=0");
		пКлючПараметраКонтролируемыйСценарий = "пзСценарийКонтр" + Формат(пИтераторСсылокНаПравила, "ЧГ=0");
		
		парПараметыЗапроса.Вставить(пКлючПараметраСценарий, пПравилоСсылка.Сценарий);
		парПараметыЗапроса.Вставить(пКлючПараметраКонтролируемыйСценарий, пПравилоСсылка.СценарийКонтролируемый);
		ТекстЗапросПоПравилам = ТекстЗапросПоПравилам + ?(ПустаяСтрока(ТекстЗапросПоПравилам),"","
																			 |ОБЪЕДИНИТЬ
																			 |")   + ТекстИтоговойТаблицы + "
																			 |ГДЕ
																			 |" + КонструкторУсловияПоТЧПравил(		
																									  парПараметыЗапроса,
																									  пСписокАтрибутовУправления,
																									  пПравилоСсылка.тбчУсловиеПодбораИсточников, 
																									  "втЗапросКорр.", 
																									  "втИстДоПравил.") + "
																			  |		И	втИстДоПравил.Сценарий = &пзСценарийХХ
																			  |		И	втИстДоПравил.СценарийКонтролируемый = &пзСценарийКонтрХХ
																			  |		И	" + КонструкторУсловияПоТЧПравил(		
																			    					  парПараметыЗапроса,
																			    					  пСписокАтрибутовУправления,
																			    					  пПравилоСсылка.тбчУсловиеПодбораИсточников, 
																			    					  "втЗапросКорр.", 
																			    					  "втИстДоПравил.",Истина);
		ТекстЗапросПоПравилам = СтрЗаменить(ТекстЗапросПоПравилам,"пзСсылкаНаПравилоХХ" ,пКлючПараметраСсылки);
		ТекстЗапросПоПравилам = СтрЗаменить(ТекстЗапросПоПравилам,"пзСценарийХХ"		,пКлючПараметраСценарий);
		ТекстЗапросПоПравилам = СтрЗаменить(ТекстЗапросПоПравилам,"пзСценарийКонтрХХ"	,пКлючПараметраКонтролируемыйСценарий);
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-01 (#2867)
		
		пИтераторСсылокНаПравила = пИтераторСсылокНаПравила + 1;
	КонецЦикла;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-02 (#2867)
	//Если пТекстУсловия = "" Тогда  //нет правил
	//Заменено на:
	Если ПустаяСтрока(ТекстЗапросПоПравилам) Тогда //нет правил
		ТекстЗапросПоПравилам = ТекстИтоговойТаблицы;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-02 (#2867)	
		Сообщить("Для заявки, не обнаружено ни одного подходящего условия источников, в правилах подбора корректировок!", СтатусСообщения.Внимание);
		Сообщить("Необходимо создать правила подбора корректировок, которые содержат условие запроса корректировки, применимое для текущих ключевых аналитик документа!", СтатусСообщения.Важное);
		Сообщить("Сохраните сведения таблицы запроса корректировки и обратитесь к администратору системы.", СтатусСообщения.Важное);
		пТекстУсловия = "Ложь"; //нет правил = нет источников, таблица будет пуста
	КонецЕсли;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-01 (#2867)
	ТекстЗапросПоПравилам = ТекстЗапросПоПравилам + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодПлана";
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса,"//ИтоговаяТаблицаПоПравилам",ТекстЗапросПоПравилам);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-01 (#2867)
	
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "&УсловиеХХ", пТекстУсловия) + 
	"
	|;
	|УНИЧТОЖИТЬ втИстДоПравил
	|;
	|УНИЧТОЖИТЬ втРегионы
	|;
	|УНИЧТОЖИТЬ втПарыСцКонтроля
	|;
	|УНИЧТОЖИТЬ втТЧЗапросаКорр
	|;
	|УНИЧТОЖИТЬ втЗапросКорр
	|";
	Возврат пТекстЗапроса;
КонецФункции // ПолучитьТекстЗапросаИсточниковКорректировки() }bit_SVKushnirenko 14.03.2017 #2596 

//{bit_SVKushnirenko 14.03.2017 #2596
//Возвращает массив ссылок бит_БК_ПравилаПодбКорректировокИнициаторами, которые допустимы для парТаблицаКлАн
// Параметры:
//парТаблицаКлАн - таблица данных значений данных КлАн которая определяет допустимые правила поиска источников
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-02 (#2867)	
//Функция ПолучитьМассивПравилКорректировки(парТаблицаКлАн)
Функция ПолучитьМассивПравилКорректировки(парТаблицаКлАн, ЛинТЗДляСопостЗапрос)
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-02 (#2867)	
	
	пЗапрос = Новый Запрос;
	пЗапрос.Текст = ПолучитьТекстЗапросаПравилКорректировки(парТаблицаКлАн, пЗапрос.Параметры);
	
	Если пЗапрос.Текст = "" Тогда  //нет активных правил или правил вообще
		
		Возврат Новый Массив;
	КонецЕсли;
	
	пЗапрос.Параметры.Вставить("пзТаблицаКлАн", парТаблицаКлАн);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-02 (#2867)
	//пТЗРез = пЗапрос.Выполнить().Выгрузить();	
	//Заменено на:
	пСчетчик = 0;	
	Для Каждого СтрокаЗапрос Из парТаблицаКлАн Цикл 
		СтрокаЗапрос.ИДСтроки = пСчетчик;
		пСчетчик = пСчетчик + 1;
	КонецЦикла;
	
	РезультатПакет = пЗапрос.ВыполнитьПакет();
	
	СтруктураПоиска = Новый Структура("Аналитика_1,Аналитика_2,Проект,Регион,СтатьяОборотов,Сценарий,СценарийКонтролируемый,ЦФО");
	СтруктураПоискаЛинТЗ = Новый Структура("ИДСтроки,Правило");
	
	ВыборкаПоПравилам = РезультатПакет[РезультатПакет.Количество()-4].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоПравилам.Следующий() Цикл 
		ВыборкаДетали = ВыборкаПоПравилам.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл 
			ЗаполнитьЗначенияСвойств(СтруктураПоиска,ВыборкаДетали);
			МассивНайденныхСтрок = парТаблицаКлАн.НайтиСтроки(СтруктураПоиска);
			Для Каждого СтрокаТЧ ИЗ МассивНайденныхСтрок Цикл 								
				СтруктураПоискаЛинТЗ.Вставить("ИДСтроки",СтрокаТЧ.ИДСтроки);
				СтруктураПоискаЛинТЗ.Вставить("Правило" ,ВыборкаДетали.ПравилоСсылка);
				МассивНайденныхЛинТЗ = ЛинТЗДляСопостЗапрос.НайтиСтроки(СтруктураПоискаЛинТЗ);
				Если МассивНайденныхЛинТЗ.Количество() = 0 Тогда 
					СтрокаЛинТЗ = ЛинТЗДляСопостЗапрос.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаЛинТЗ,СтрокаТЧ);
					СтрокаЛинТЗ.Правило = ВыборкаДетали.ПравилоСсылка;
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-19 (#3232)
					СтрокаЛинТЗ.ПериодГод = ВыборкаДетали.ПериодГод;
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-19 (#3232)
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	пТЗРез = РезультатПакет[РезультатПакет.Количество()-3].Выгрузить();	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-02 (#2867)
	
	Если пТЗРез.Количество() = 0 Тогда  
		
		Возврат Новый Массив;
	Иначе
		
		Возврат пТЗРез.ВыгрузитьКолонку("ПравилоСсылка")
	КонецЕсли;
КонецФункции // ПолучитьМассивПравилКорректировки() }bit_SVKushnirenko 14.03.2017 #2596 

//{bit_SVKushnirenko 14.03.2017 #2596
//Возвращает таблицу данных источников корректировки
// Параметры:
//парАдресТЧЗапросаКорр - таблица данных КлАн которая определяет допустимые правила поиска источников
//парТаблицаИсточников - таблица данных, в которую выгружается результат запроса источников
//парНомерЗаявкиШапка - ссылка на "№ заявки" из шапки, которая ограничивает возможные корректировки
//парАдресМассиваАктуальныхПравил - адрес временного хранилища массива, в который будет выгружен набор актуальных правил, использованных в итерации запрос-источники
//парАдресДанныхИсточникаВХранилище - строка адрес в хранилище таблицы источник
Процедура ПолучитьТаблицуИсточниковДляКорректировки(парАдресТЧЗапросаКорр, парТаблицаИсточников, парНомерЗаявкиШапка, парАдресМассиваАктуальныхПравил, парАдресДанныхИсточникаВХранилище = "") Экспорт
	
	пТЧЗапросаКорр = ПолучитьИзВременногоХранилища(парАдресТЧЗапросаКорр); 
	Если ТипЗнч(пТЧЗапросаКорр) <> Тип("ТаблицаЗначений") Тогда  
		
		Возврат;
	КонецЕсли;
	
	пЗапрос = Новый Запрос;
	
	пЗапрос.УстановитьПараметр("пзНомерЗаявкиШапка", парНомерЗаявкиШапка); //номер заявки-шапка, если будет непустой ссылкой, то запрос отсечет данные корректировки по нему

	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-02 (#2867)
	ЛинТЗДляСопостЗапрос = пТЧЗапросаКорр.СкопироватьКолонки();
	ЛинТЗДляСопостЗапрос.Колонки.Добавить("Правило", Новый ОписаниеТипов("СправочникСсылка.бит_БК_ПравилаПодбКорректировокИнициаторами"));	
	СтруктураПоискаЛинТЗ = Новый Структура("Правило");
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-02 (#2867)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-19 (#3232)
	Если ЛинТЗДляСопостЗапрос.Колонки.Найти("ПериодГод") = Неопределено Тогда 
		ЛинТЗДляСопостЗапрос.Колонки.Добавить("ПериодГод", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-19 (#3232)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-02 (#2867)	
	//пМассивАктуальныхПравил = ПолучитьМассивПравилКорректировки(пТЧЗапросаКорр);
	//Заменено на:
	пМассивАктуальныхПравил = ПолучитьМассивПравилКорректировки(пТЧЗапросаКорр,ЛинТЗДляСопостЗапрос);	
	
	пЗапрос.УстановитьПараметр("пзТаблицаКлан",ЛинТЗДляСопостЗапрос);;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-02 (#2867)
	
	ПоместитьВоВременноеХранилище(пМассивАктуальныхПравил, парАдресМассиваАктуальныхПравил);
	
	пЗапрос.Текст = ПолучитьТекстЗапросаИсточниковКорректировки(пМассивАктуальныхПравил, пЗапрос.Параметры);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-23 (#2867)
	//пЗапрос.УстановитьПараметр("пзТаблицаКлан", пТЧЗапросаКорр); //ключ соединения данных источников
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-23 (#2867)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-02 (#2867)
	//пТЧИсточник = пЗапрос.Выполнить().Выгрузить();
	//Заменено на:	
	пТЧИсточник = парТаблицаИсточников.Выгрузить();	
	
	пТЧИсточник.Очистить();
	
	пСчетчик = 0;	
	
	КолонкиПоиска = "Аналитика_1,Аналитика_2,КоррПериод,ПериодПлана,Проект,Регион,СтатьяОборотов,СуммаОстатка,Сценарий,СценарийКонтролируемый,ЦФО";
	СтруктураПоиска = Новый Структура(КолонкиПоиска);
	КопияпТЧИсточникДляТипизирования = пТЧИсточник.СкопироватьКолонки(КолонкиПоиска);	
	СтрокаТипизирования = КопияпТЧИсточникДляТипизирования.Добавить();
	
	Выборка = пЗапрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		ЗаполнитьЗначенияСвойств(СтрокаТипизирования,Выборка);
		ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаТипизирования);
		МассивНайденныхСтрок = пТЧИсточник.НайтиСтроки(СтруктураПоиска);
		Если МассивНайденныхСтрок.Количество() = 0 Тогда 
			СтрокаТЧ = пТЧИсточник.Добавить();				
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка);		
			СтрокаТЧ.ИДСтроки = пСчетчик; 
			пСчетчик = пСчетчик + 1;
		Иначе
			СтрокаТЧ = МассивНайденныхСтрок[0];
		КонецЕсли;
		Если СтрокаТЧ.СписокПравилПодбора.НайтиПоЗначению(Выборка.Правило) = Неопределено Тогда
			СтрокаТЧ.СписокПравилПодбора.Добавить(Выборка.Правило);											
		КонецЕсли;
		
		СтрокаТЧЗапрос = пТЧЗапросаКорр.Найти(Выборка.ИДСтроки,"ИДСтроки");		
		Если СтрокаТЧЗапрос <> Неопределено Тогда 
			Если СтрокаТЧЗапрос.СписокПравилПодбора.НайтиПоЗначению(Выборка.Правило) = Неопределено Тогда
				СтрокаТЧЗапрос.СписокПравилПодбора.Добавить(Выборка.Правило);											
			КонецЕсли;
			
			Если СтрокаТЧЗапрос.СписокИДИсточников.НайтиПоЗначению(СтрокаТЧ.ИДСтроки) = Неопределено Тогда
				СтрокаТЧЗапрос.СписокИДИсточников.Добавить(СтрокаТЧ.ИДСтроки);											
			КонецЕсли;			
		КонецЕсли;		
	КонецЦикла;	 	
		
	ПоместитьВоВременноеХранилище(пТЧЗапросаКорр,парАдресТЧЗапросаКорр);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-01 (#2867)
	парАдресДанныхИсточникаВХранилище = ПоместитьВоВременноеХранилище(пТЧИсточник, Новый УникальныйИдентификатор());
	
	парТаблицаИсточников.Загрузить(пТЧИсточник);
КонецПроцедуры // ПолучитьТаблицуИсточниковДляКорректировки() }bit_SVKushnirenko 14.03.2017 #2596 

//{bit_SVKushnirenko 17.03.2017 #2596
//Возвращает массив правил для данных строки-источника
// Параметры:
//парСтруктураИсточник - данные строки-источника для поиска актуальных для нее правил подбора источников
//парМассивАктуальныхПравил - правила, актуальные для текущей итерации запрос-источник
Функция ПолучитьМассивПравилПоДаннымСтрокиИсточника(парСтруктураИсточник, парАдресМассиваАктуальныхПравил) Экспорт

	пЗапрос = Новый Запрос;
	
	//операции с заявкой отладим, когда будет в руках реальный пример подбора корректировки
	//пЗапрос.УстановитьПараметр("пзНомерЗаявкиШапка", парНомерЗаявкиШапка); //номер заявки-шапка, если будет непустой ссылкой, то запрос отсечет данные корректировки по нему
	
	пЗапрос.Текст = ПолучитьТекстЗапросаСоответствияПравилИсточникуКорректировки(парАдресМассиваАктуальныхПравил, пЗапрос.Параметры);
	
	//парМассивАктуальныхПравил.ЗагрузитьЗначения(пМассивАктуальныхПравил);
	//
	//пЗапрос.УстановитьПараметр("пзТаблицаКлан", пТЧЗапросаКорр); //ключ соединения данных источников
	//
	//парТаблицаИсточников.Загрузить(пЗапрос.Выполнить().Выгрузить())
КонецФункции // ПолучитьМассивПравилПоДаннымСтрокиИсточника() }bit_SVKushnirenko 17.03.2017 #2596 