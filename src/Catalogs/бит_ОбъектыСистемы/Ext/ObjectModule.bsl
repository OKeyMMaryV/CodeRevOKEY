#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

//  Процедура обработчик - перед записью.
// 
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;
	КонецЕсли; 	
	
	бит_ук_СлужебныйСервер.РегистрацияНачалоСобытия(Отказ, ЭтотОбъект.ДополнительныеСвойства); 	
	
	Если Не ЭтоНовый() И Не ПометкаУдаления=Ссылка.ПометкаУдаления Тогда
		// В случае установки или снятия пометки удаления не производить проверку.
		Возврат;
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(ВидОбъекта) Тогда
	
		Если ЗначениеЗаполнено(Родитель) Тогда		
			ВидОбъекта = Родитель.ВидОбъекта; 		
		КонецЕсли; 
	
	КонецЕсли;    	
	
КонецПроцедуры // ПередЗаписью()
	
Процедура ПриЗаписи(Отказ)
		
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
		
	бит_ук_СлужебныйСервер.РегистрацияПриЗаписи(Отказ, ЭтотОбъект.ДополнительныеСвойства, Метаданные().ПолноеИмя());
		
КонецПроцедуры // ПриЗаписи()

//  Процедура обработчик - при копировании.
// 
Процедура ПриКопировании(ОбъектКопирования)
	
	ВидОбъекта = Перечисления.бит_ВидыОбъектовСистемы.ПустаяСсылка();
	ИмяОбъекта       = "";
	ИмяОбъектаПолное = "";
	ТипЗначенияОбъекта = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Сохраняет тип объекта системы в хранилище значения.
// 
// Параметры:
//  ОписаниеТипов - ОписаниеТипов.
// 
Процедура СохранитьТип(ОписаниеТипов) Экспорт

	МассивТипов = ОписаниеТипов.Типы();
	
	Если МассивТипов.Количество() > 0 Тогда
		
		ТипОбъекта = МассивТипов[0];
		
	Иначе	
		
		ТипОбъекта = Неопределено;
		
	КонецЕсли; 
	
	ТипЗначенияОбъекта = Новый ХранилищеЗначения(ТипОбъекта);

КонецПроцедуры // СохранитьТип()

// Функция извлекае тип значения объекта системы из хранилища значения.
// 
// Возвращаемое значение:
//  ТипОбъекта - Тип.
// 
Функция ПолучитьТипЗначенияОбъекта() Экспорт
	
	ТипОбъекта  = Неопределено;
	
	ХранимыйТип = ТипЗначенияОбъекта.Получить();
	
	Если ТипЗнч(ХранимыйТип) = Тип("Тип") Тогда
		
		МассивВрем = Новый Массив;
		МассивВрем.Добавить(ХранимыйТип);
		
		ТипОбъекта = Новый ОписаниеТипов(МассивВрем);
		
	КонецЕсли; 
	
	Возврат ТипОбъекта;
	
КонецФункции // ПолучитьТипЗначенияОбъекта()

#КонецОбласти

#КонецЕсли
