#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПриЗаписиТочкиСлияния(Ссылка, Отказ) Экспорт 

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВходящиеТочки.Ссылка
	|ИЗ
	|	Справочник.бит_уп_ТочкиАлгоритмов.ВходящиеТочки КАК ВходящиеТочки
	|ГДЕ
	|	ВходящиеТочки.Точка.ВидТочки = &ВидТочкиУсловие
	|	И ВходящиеТочки.Ссылка.ВидТочки = &ВидТочкиСлияние
	|	И ВходящиеТочки.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("ВидТочкиСлияние", Перечисления.бит_уп_ВидыТочекАлгоритмов.Слияние);
	Запрос.УстановитьПараметр("ВидТочкиУсловие", Перечисления.бит_уп_ВидыТочекАлгоритмов.Условие);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТекстСообщения = НСтр("ru = 'При способе выполнения алгоритма ""поэтапно"" " 
								  + "добавление точки слияния после точки условия невозможно.'");
						   
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, , , Отказ); 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПроверитьЗаполнение(РеквизитыТочки, Отказ) Экспорт

	// 1 - несколько входящих,
	// 2 - несколько исходящих,
	// 3 - нет входящих,
	// 4 - нет исходящих,
	// 5 - неожиданные входящие точки,
	// 6 - неожиданные входящие точки.
	
	Ссылка 			  = РеквизитыТочки.Ссылка;
	Наименование 	  = РеквизитыТочки.Наименование;
	Владелец 		  = РеквизитыТочки.Владелец;
	ВидТочки 		  = РеквизитыТочки.ВидТочки;
	ВходящиеТочки 	  = РеквизитыТочки.ВходящиеТочки;
	ИсходящиеТочки 	  = РеквизитыТочки.ИсходящиеТочки;
	ПараметрыПроцесса = РеквизитыТочки.ПараметрыПроцесса;
	
	// Несколько входящих.
	Если ВидТочки <> Перечисления.бит_уп_ВидыТочекАлгоритмов.Слияние И ВходящиеТочки.Количество() > 1 Тогда
		ТекстСообщения = ТекстОшибкиЗаполнения(Наименование, 1);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Владелец,,,Отказ); 
	КонецЕсли; 
	
	// Несколько исходящих.
	Если ВидТочки <> Перечисления.бит_уп_ВидыТочекАлгоритмов.Разделение И ИсходящиеТочки.Количество() > 1 Тогда
		Если ВидТочки = Перечисления.бит_уп_ВидыТочекАлгоритмов.Условие Тогда
			Если ИсходящиеТочки.Количество() > 2 Тогда
				ТекстСообщения = ТекстОшибкиЗаполнения(Наименование, 0, НСтр("ru = 'Поддерживает только 2 связи.'"));
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Владелец,,,Отказ);
			КонецЕсли; 
		Иначе
			ТекстСообщения = ТекстОшибкиЗаполнения(Наименование, 2);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Владелец,,,Отказ);
		КонецЕсли;
	КонецЕсли; 
	
	// Нет входящих.
	Если ВидТочки <> Перечисления.бит_уп_ВидыТочекАлгоритмов.Старт И ВходящиеТочки.Количество() = 0 Тогда
		ТекстСообщения = ТекстОшибкиЗаполнения(Наименование, 3);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Владелец,,,Отказ); 
	КонецЕсли; 
	
	// Нет исходящих.
	Если ВидТочки <> Перечисления.бит_уп_ВидыТочекАлгоритмов.Завершение И ИсходящиеТочки.Количество() = 0 Тогда
		ТекстСообщения = ТекстОшибкиЗаполнения(Наименование, 4);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Владелец,,,Отказ); 
	КонецЕсли;
	
	// Неожиданные входящие точки.
	Если ВидТочки = Перечисления.бит_уп_ВидыТочекАлгоритмов.Старт И ВходящиеТочки.Количество() > 0 Тогда
		ТекстСообщения = ТекстОшибкиЗаполнения(Наименование, 5);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Владелец,,,Отказ); 
	КонецЕсли; 
	
	// Неожиданные входящие точки.
	Если ВидТочки = Перечисления.бит_уп_ВидыТочекАлгоритмов.Завершение И ИсходящиеТочки.Количество() > 0 Тогда
		ТекстСообщения = ТекстОшибкиЗаполнения(Наименование, 6);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Владелец,,,Отказ); 
	КонецЕсли;
	
	// Связи точки Условие.
	Если ВидТочки = Перечисления.бит_уп_ВидыТочекАлгоритмов.Условие Тогда
		Отбор = Новый Структура("Направление",Перечисления.бит_уп_Направление.Вертикаль);
		Результат = ИсходящиеТочки.НайтиСтроки(Отбор);
		Если Результат.Количество() > 1 Тогда
			Пояснение = НСтр("ru = 'Несколько связей ""Да"".'"); 
			ТекстСообщения = ТекстОшибкиЗаполнения(Наименование, 0, Пояснение);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Владелец,,,Отказ);
		КонецЕсли; 
		
		Отбор = Новый Структура("Направление",Перечисления.бит_уп_Направление.Горизонталь);
		Результат = ИсходящиеТочки.НайтиСтроки(Отбор);
		Если Результат.Количество() > 1 Тогда
			Пояснение = НСтр("ru = 'Несколько связей ""Нет"".'"); 
			ТекстСообщения = ТекстОшибкиЗаполнения(Наименование, 0, Пояснение);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Владелец,,,Отказ);
		КонецЕсли;
	КонецЕсли;
	
	// Проверка на зацикливание
	Если ИсходящиеТочки.Количество() > 0 Тогда
		Для каждого СтрокаТаблицы Из ИсходящиеТочки Цикл
			Если СтрокаТаблицы.Точка.ВидТочки = Перечисления.бит_уп_ВидыТочекАлгоритмов.Слияние Тогда
				ПроверитьЗацикливание(СтрокаТаблицы.Точка, СтрокаТаблицы.Точка, Ссылка, Отказ);
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
		
	Если Справочники.бит_уп_Алгоритмы.ЕстьДинамическиеПараметры(Владелец) 
		 И ВидТочки = Перечисления.бит_уп_ВидыТочекАлгоритмов.Действие Тогда
		
		бит_уп_Сервер.ПроверитьЗаполнениеПараметровПроцесса(ПараметрыПроцесса, Отказ);
	КонецЕсли; 

КонецПроцедуры
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

Процедура ПроверитьЗацикливание(ТекущаяТочка, ТочкаСтарт, Ссылка, Отказ)

	Для каждого СтрокаТаблицы Из ТекущаяТочка.ИсходящиеТочки Цикл
		Если СтрокаТаблицы.Точка = Ссылка Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Обнаружено зацикливание между точками ""%1"" и ""%2"".'"),
								Строка(ТочкаСтарт), Строка(СтрокаТаблицы.Точка));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, , ,Отказ); 
		КонецЕсли; 
		Если Отказ Тогда
			Прервать;
		КонецЕсли; 
		ПроверитьЗацикливание(СтрокаТаблицы.Точка, ТочкаСтарт, Ссылка, Отказ);
	КонецЦикла; 

КонецПроцедуры

Функция ТекстОшибкиЗаполнения(Представление, КодОшибки = 0, Пояснение = "")
	
	// 0 - недокументированная ошибка. Ожидается "пояснение".
	// 1 - несколько входящих,
	// 2 - несколько исходящих,
	// 3 - нет входящих,
	// 4 - нет исходящих,
	// 5 - неожиданные входящие точки,
	// 6 - неожиданные входящие точки.
	
	ТекстСообщения = "";
	ТекстОшибки    = НСтр("ru = 'Точка ""%1"" размещена некорректно.
							 	|%2'");
	
	Если КодОшибки = 1 Тогда
		ТекстСообщения = НСтр("ru = 'Несколько входящих связей не поддерживается. Используйте точку слияния.'"); 
	ИначеЕсли КодОшибки = 2 Тогда	
		ТекстСообщения = НСтр("ru = 'Несколько исходящих связей не поддерживается. Используйте точку разделения.'"); 
	ИначеЕсли КодОшибки = 3 Тогда	
		ТекстСообщения = НСтр("ru = 'Нет входящих связей.'");
	ИначеЕсли КодОшибки = 4 Тогда	
		ТекстСообщения = НСтр("ru = 'Нет исходящих связей.'");
	ИначеЕсли КодОшибки = 5 Тогда	
		ТекстСообщения = НСтр("ru = 'Входящие связи не поддерживаются.'");
	ИначеЕсли КодОшибки = 6 Тогда	
		ТекстСообщения = НСтр("ru = 'Исходящие связи не поддерживаются.'");
	ИначеЕсли КодОшибки = 0 Тогда	
		ТекстСообщения = Пояснение;	
	КонецЕсли; 
	
	Возврат СтрШаблон(ТекстОшибки, Представление, ТекстСообщения);
	
КонецФункции

#КонецОбласти

#КонецЕсли