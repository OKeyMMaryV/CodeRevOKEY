
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	
	
		
	// Вызов механизма защиты
	
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьКэшЗначенийНаСервере();
	ЗаполнитьПоУмолчаниюНовыйОбъектНаСервере();
	ИзвлечьПеременныеИзСтекаНаСервере();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьРеквизитыУтверждения();
	ОбновитьНазваниеКнопок();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура кнАвтоматическоеИзменение(Команда)
	
	Объект.ТолькоРучныеИзменения = не Объект.ТолькоРучныеИзменения;
	ОбновитьНазваниеКнопок();
	
КонецПроцедуры

&НаКлиенте
Процедура КодПриИзменении(Элемент)
	
	УстановитьНаименованиеВерсии();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	
	Объект.ШаблоныДвижений.Очистить();
	УстановитьНаименованиеВерсии();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УсловияОтбора = Новый Структура;
	УсловияОтбора.Вставить("ВидОбъекта", фКэшЗначений.Перечисления.бит_ВидыОбъектовСистемы.Документ);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", УсловияОтбора);
	ОткрытьФорму("Справочник.бит_ОбъектыСистемы.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусВерсииПриИзменении(Элемент)
	
	Если Объект.СтатусВерсии = фКэшЗначений.Перечисления.бит_СтатусыКомплектовДвижений.Утвержден Тогда
		
		ДатаУтвержденияВвод = ТекущаяДата();
		Подсказка = "Введите дату утверждения";
		ЧастьДаты = ЧастиДаты.Дата;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("СтатусВерсииПриИзмененииЗавершение", ЭтотОбъект, ДатаУтвержденияВвод);
		ПоказатьВводДаты(ОписаниеОповещения, ДатаУтвержденияВвод, Подсказка, ЧастьДаты);
		
	Иначе	
		
		Объект.Ответственный 	= фКэшЗначений.ПользователиПустаяСсылка;
		Объект.ДатаУтверждения = Дата("00010101000000");
		
		ОбновитьРеквизитыУтверждения();
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура обработчик оповещения "СтатусВерсииПриИзмененииЗавершение".
// 
// Параметры:
// Дата - ДатаВремя
// ДатаУтвержденияВвод - ДатаВремя
// 
&НаКлиенте
Процедура СтатусВерсииПриИзмененииЗавершение(Дата, ДатаУтвержденияВвод) Экспорт
	
	Если Дата <> Неопределено Тогда
		Объект.ДатаУтверждения = Дата;
		Объект.Ответственный = фКэшЗначений.ТекущийПользователь;
	Иначе
		Объект.СтатусВерсии = фКэшЗначений.Перечисления.бит_СтатусыКомплектовДвижений.Проект;
	КонецЕсли; 
	
	ОбновитьРеквизитыУтверждения();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыОсновноеОбработчикПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаОбработчикПроведения Тогда
		
		// Заполнить таблицу переменных
		ИзвлечьПеременныеИзСтекаНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыШаблоныДвижений

&НаКлиенте
Процедура ШаблоныДвиженийШаблонДвиженияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если не ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
		
		ТекстСообщения = НСтр("ru='Не выбран вид документа!'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		
	Иначе
		
		УсловияОтбора = Новый Структура;
		УсловияОтбора.Вставить("ВидДокумента", Объект.ВидДокумента);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", УсловияОтбора);
		ОткрытьФорму("Справочник.бит_ШаблоныДвижений.ФормаВыбора", ПараметрыФормы, Элемент);
				
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыИФункцииДляУправленияВнешнимВидомФормы

&НаКлиенте
Процедура ОбновитьРеквизитыУтверждения()
	
	// Если не ЗначениеЗаполнено(Объект.Ответственный) Тогда.
	// 	
	// 	Элементы.Ответственный.З 		= "<<Не утвержден>>";
	// 	Элементы.ДатаУтверждения	= "<<Не утвержден>>";
	// 	
	// КонецЕсли;
	
КонецПроцедуры

// Обновляет названия кнопок командных панелей формы элемента.
// 
&НаКлиенте
Процедура ОбновитьНазваниеКнопок()
	
	Элементы.ФормакнАвтоматическоеИзменение.Заголовок = ?(Объект.ТолькоРучныеИзменения, "Включить автоматическое изменение", "Отключить автоматическое изменение");
	Элементы.КодОбработчикаПроведения.ТолькоПросмотр = не Объект.ТолькоРучныеИзменения;
	
КонецПроцедуры

#КонецОбласти

// Заполняет реквизиты нового объекта данными по умолчанию.
// 
&НаСервере
Процедура ЗаполнитьПоУмолчаниюНовыйОбъектНаСервере()
	
	Если не Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Наименование 	= СформироватьНаименованиеВерсииНаСервере();
	Объект.Автор 			= ПараметрыСеанса.ТекущийПользователь;
	Объект.СтатусВерсии 	= Перечисления.бит_СтатусыКомплектовДвижений.Проект;
	
	Об = РеквизитФормыВЗначение("Объект");
	Об.УстановитьНовыйКод();
	ЗначениеВРеквизитФормы(Об, "Объект");
	
КонецПроцедуры

// Извлекает значения переменных из стека и помещает их в реквизит формы.
// 
&НаСервере
Процедура ИзвлечьПеременныеИзСтекаНаСервере()
	
	Об = РеквизитФормыВЗначение("Объект");
	
	СтекИзХранилища = Об.СтекПеременных.Получить();
	
	ТаблицаПеременные.Очистить();	
	
	Если СтекИзХранилища = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	инд = -1;
	
	Для Каждого Переменная Из СтекИзХранилища Цикл
		
		инд 				= инд + 1;
		НовСтр 				= ТаблицаПеременные.Добавить();
		НовСтр.Переменная 	= "МассивПеременных[" + Строка(Инд) + "]";
		НовСтр.Значение 	= Переменная;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет кэш значений на сервере.
// 
&НаСервере
Процедура ЗаполнитьКэшЗначенийНаСервере()
	
	фКэшЗначений = Новый Структура;
	
	бит_СтатусыКомплектовДвижений 	= бит_ОбщегоНазначения.КэшироватьЗначенияПеречисления(Перечисления.бит_СтатусыКомплектовДвижений);
	бит_ВидыОбъектовСистемы			= бит_ОбщегоНазначения.КэшироватьЗначенияПеречисления(Перечисления.бит_ВидыОбъектовСистемы);
	
	КэшПеречислений = Новый Структура;
	КэшПеречислений.Вставить("бит_СтатусыКомплектовДвижений", бит_СтатусыКомплектовДвижений);
	КэшПеречислений.Вставить("бит_ВидыОбъектовСистемы"		, бит_ВидыОбъектовСистемы);
	
	фКэшЗначений.Вставить("Перечисления"				, КэшПеречислений);
	фКэшЗначений.Вставить("ТекущийПользователь"			, ПараметрыСеанса.ТекущийПользователь);
	фКэшЗначений.Вставить("ПользователиПустаяСсылка" 	, Справочники.Пользователи.ПустаяСсылка());
	
КонецПроцедуры

// Функция возвращает наименование версии по умолчанию.
// 
// Параметры:
//  Нет.
// 
// Возвращаемое значение:
//  СтрокаНаименование - Строка.
// 
&НаСервере
Функция СформироватьНаименованиеВерсииНаСервере()
	
	Если Объект.ВидДокумента.Пустая() Тогда
		Возврат "";
	КонецЕсли;	
	
	СтрокаНаименование = Объект.ВидДокумента.Наименование + " Комплект №" + Объект.Код;
	
	Возврат СтрокаНаименование;
	
КонецФункции

// Процедура устанавливает наименование версии по умолчанию.
// 
// Параметры:
//  Нет.
// 
&НаКлиенте
Процедура УстановитьНаименованиеВерсии()
	
	Если не ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
		Возврат;
	КонецЕсли;	
	
	СтрокаНаименование = Строка(Объект.ВидДокумента) + " Комплект №" + Объект.Код;
	
	Объект.Наименование = СтрокаНаименование;
	
КонецПроцедуры

#КонецОбласти

