
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	 	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	фКэшЗначений = Новый Структура;
	фКэшЗначений.Вставить("НастройкиАналитик", Справочники.бит_НастройкиПроизвольныхОтчетов.ПолучитьНастройкуАналитик(Объект.Владелец));	
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ИзменениеВладельца();	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПоУмолчаниюАналитикаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = Новый СписокЗначений;   	
	Для каждого КиЗ Из фКэшЗначений.НастройкиАналитик Цикл  		
		Настройка = КиЗ.Значение;
		СписокВыбора.Добавить(КиЗ.Ключ,Настройка.Синоним); 	
	КонецЦикла;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗначенияПоУмолчаниюАналитикаНачалоВыбораИзСпискаЗавершение", ЭтотОбъект);
	
	ПоказатьВыборИзСписка(ОписаниеОповещения, СписокВыбора);
	
КонецПроцедуры

// Процедура обработчик оповещения "ЗначенияПоУмолчаниюАналитикаНачалоВыбораИзСпискаЗавершение".
// 
// Параметры:
// ВыбЭлемент - Структура.
// Параметры - Структура.
// 
&НаКлиенте
Процедура ЗначенияПоУмолчаниюАналитикаНачалоВыбораИзСпискаЗавершение(ВыбЭлемент, Параметры) Экспорт
	
	Если ВыбЭлемент <> Неопределено Тогда
		
		ИмяАналитики = ВыбЭлемент.Значение;
		Настройка    = фКэшЗначений.НастройкиАналитик[ИмяАналитики];
		
		ТекущиеДанные = Элементы.ЗначенияПоУмолчанию.ТекущиеДанные;
		ТекущиеДанные.ИмяАналитики        = ИмяАналитики;
		ТекущиеДанные.Аналитика           = Настройка.Аналитика;
		ТекущиеДанные.ЗначениеАналитики   = Настройка.ЗначениеПоУмолчанию;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПоУмолчаниюАналитикаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение <> Неопределено Тогда
	
		ИмяАналитики = ВыбранноеЗначение;
		Настройка    = фКэшЗначений.НастройкиАналитик[ИмяАналитики];
		
		ТекущиеДанные = Элементы.ЗначенияПоУмолчанию.ТекущиеДанные;
		ТекущиеДанные.ИмяАналитики        = ВыбранноеЗначение;
		ТекущиеДанные.Аналитика           = Настройка.Аналитика;
		ТекущиеДанные.ЗначениеАналитики   = Настройка.ЗначениеПоУмолчанию;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПоУмолчаниюАналитикаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();
	
	Для каждого КиЗ Из фКэшЗначений.НастройкиАналитик Цикл
		
		Настройка = КиЗ.Значение;
		Элемент.СписокВыбора.Добавить(КиЗ.Ключ,Настройка.Синоним);
	
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПоУмолчаниюЗначениеАналитикиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.ЗначенияПоУмолчанию.ТекущиеДанные;
	
	ИмяЭлемента = "ЗначениеАналитики";
	
	ТекНастройка = фКэшЗначений.НастройкиАналитик[ТекущаяСтрока.ИмяАналитики];
	
	СтрНастройки = Новый Структура;
	СтрНастройки.Вставить(ИмяЭлемента,ТекНастройка);
	
	
	бит_МеханизмДопИзмеренийКлиент.ВыбратьТипСоставнойАналитики(ЭтаФорма
														  ,Элемент
														  ,ТекущаяСтрока
														  ,ИмяЭлемента
														  ,СтандартнаяОбработка
														  ,СтрНастройки);
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПоУмолчаниюЗначениеАналитикиОчистка(Элемент, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.ЗначенияПоУмолчанию.ТекущиеДанные;
	
	ИмяЭлемента = "ЗначениеАналитики";
	
	ТекНастройка = фКэшЗначений.НастройкиАналитик[ТекущаяСтрока.ИмяАналитики];
	
	СтрНастройки = Новый Структура;
	СтрНастройки.Вставить(ИмяЭлемента,ТекНастройка);
	
	бит_МеханизмДопИзмеренийКлиент.ОбработкаОчисткиДополнительногоИзмерения(Элемент
																			,ТекущаяСтрока
	                                                                        ,ИмяЭлемента
																			,СтандартнаяОбработка
																			,СтрНастройки);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура обрабатывает изменение владельца элемента.
// 
&НаСервере
Процедура ИзменениеВладельца()
	
	фКэшЗначений.НастройкиАналитик = Справочники.бит_НастройкиПроизвольныхОтчетов.ПолучитьНастройкуАналитик(Объект.Владелец);	
	
КонецПроцедуры // ИзменениеВладельца()

#КонецОбласти

