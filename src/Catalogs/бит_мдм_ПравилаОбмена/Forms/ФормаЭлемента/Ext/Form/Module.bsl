
#Область ОписаниеПеременных

&НаКлиенте 
Перем мКэшРеквизитовФормы; // Хранит текущие значения реквизитов формы.

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	
	
	
	// Вызов механизма защиты
		
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 	
	
	УстановитьВидимость();
	ДоработатьТаблицуПравила();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ДоработатьТаблицуПравила();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Зададим имена реквизитов, подлежащих кешированию.
	мКэшРеквизитовФормы = Новый Структура;
	мКэшРеквизитовФормы.Вставить("Источник");
	мКэшРеквизитовФормы.Вставить("Приемник");
	
	ЗаполнитьТекущиеЗначенияРеквизитовФормы();	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИсточникПриИзменении(Элемент)
	
	Если Объект.Правила.Количество() > 0 Тогда
		
		ТекстСообщения =  НСтр("ru = 'Текущая настройка правил будет очищена. Продолжить?'");
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстСообщения, РежимДиалогаВопрос.ДаНет, 15, КодВозвратаДиалога.Нет);
		
	Иначе	
		
		ЗаполнитьПравила();
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриемникПриИзменении(Элемент)
	
	Если Объект.Правила.Количество() > 0 Тогда
		
		ТекстСообщения =  НСтр("ru = 'Текущая настройка правил будет очищена. Продолжить?'");
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстСообщения, РежимДиалогаВопрос.ДаНет, 15, КодВозвратаДиалога.Нет);
		
	Иначе	
		
		ЗаполнитьПравила();
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	Если ЗначениеЗаполнено(Объект.Источник) Тогда
		
		ДанныеВыбора.Добавить(Строка(Объект.Источник));
		
	КонецЕсли; 
	Если ЗначениеЗаполнено(Объект.Источник) И ЗначениеЗаполнено(Объект.Приемник) Тогда
	
		ДанныеВыбора.Добавить(Строка(Объект.Источник)+" --> "+Строка(Объект.Приемник));
	
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаполнить(Команда)
	
	Если Объект.Правила.Количество() > 0 Тогда
		
		ТекстСообщения =  НСтр("ru = 'Текущая настройка правил будет очищена. Продолжить?'");
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстСообщения, РежимДиалогаВопрос.ДаНет, 15, КодВозвратаДиалога.Нет);
		
	Иначе	
		
		ЗаполнитьПравила();
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура обработчик оповещения "ВопросЗаполнитьЗавершение".
// 
// Параметры:
// Ответ - КодВозвратаДиалога
// ДополнительныеДанные - Структура.
// 
&НаКлиенте 
Процедура ВопросЗаполнитьЗавершение(Ответ, ДополнительныеДанные) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ЗаполнитьПравила();
		
		ДобавитьВКэш("Источник");
		ДобавитьВКэш("Приемник");
		
	Иначе
		
		ИзвлечьИзКэша("Источник");
		ИзвлечьИзКэша("Приемник");
		
	КонецЕсли; 
	
КонецПроцедуры	// ВопросЗаполнитьЗавершение

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РаботаСКэшемРеквизитовФормы

// Процедура заполняет кэш реквизитов формы данными объекта.
// 
&НаКлиенте 
Процедура ЗаполнитьТекущиеЗначенияРеквизитовФормы()
	
	Для Каждого КлючИЗначение Из мКэшРеквизитовФормы Цикл
		мКэшРеквизитовФормы[КлючИЗначение.Ключ] = Объект[КлючИЗначение.Ключ];
	КонецЦикла; 
	
КонецПроцедуры // ЗаполнитьТекущиеЗначенияРеквизитовФормы()

// Процедура добавляет в кэш реквизитов текущее значение заданного реквизита.
// 
// Параметры:
// 	ИмяРеквизита - Строка.
// 
&НаКлиенте
Процедура ДобавитьВКэш(ИмяРеквизита)
	
	мКэшРеквизитовФормы[ИмяРеквизита] = Объект[ИмяРеквизита];	
	
КонецПроцедуры // ДобавитьВКэш()

// Процедура извлекает из кэша и присваивает объекту значение заданного реквизита.
// 
// Параметры:
// 	ИмяРеквизита - Строка.
// 
&НаКлиенте
Процедура ИзвлечьИзКэша(ИмяРеквизита)
	
	Объект[ИмяРеквизита] = мКэшРеквизитовФормы[ИмяРеквизита];
	
КонецПроцедуры // ИзвлечьИзКэша()

#КонецОбласти

// Процедура управляет видимостью/доступностью элементов формы.
// 
&НаСервере
Процедура УстановитьВидимость()

	

КонецПроцедуры // УстановитьВидимость()

// Процедура заполняет табличную часть правила. Соответствие устанавливается по именам.
// 
&НаСервере
Процедура ЗаполнитьПравила()
	
	Объект.Правила.Очистить();
	
	Если ЗначениеЗаполнено(Объект.Приемник) И ЗначениеЗаполнено(Объект.Источник) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Источник", Объект.Источник);
		Запрос.УстановитьПараметр("Приемник", Объект.Приемник);
		Запрос.Текст = "ВЫБРАТЬ
		               |	бит_мдм_ОписанияРеквизитовОбъектовОбмена.Имя,
		               |	бит_мдм_ОписанияРеквизитовОбъектовОбмена.ИмяТабличнойЧасти,
		               |	бит_мдм_ОписанияРеквизитовОбъектовОбмена.Ссылка КАК ОписаниеРеквизита
		               |ПОМЕСТИТЬ РеквизитыИсточника
		               |ИЗ
		               |	Справочник.бит_мдм_ОписанияРеквизитовОбъектовОбмена КАК бит_мдм_ОписанияРеквизитовОбъектовОбмена
		               |ГДЕ
		               |	бит_мдм_ОписанияРеквизитовОбъектовОбмена.Владелец = &Источник
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	бит_мдм_ОписанияРеквизитовОбъектовОбмена.Имя,
		               |	бит_мдм_ОписанияРеквизитовОбъектовОбмена.ИмяТабличнойЧасти,
		               |	бит_мдм_ОписанияРеквизитовОбъектовОбмена.Ссылка КАК ОписаниеРеквизита
		               |ПОМЕСТИТЬ РеквизитыПриемника
		               |ИЗ
		               |	Справочник.бит_мдм_ОписанияРеквизитовОбъектовОбмена КАК бит_мдм_ОписанияРеквизитовОбъектовОбмена
		               |ГДЕ
		               |	бит_мдм_ОписанияРеквизитовОбъектовОбмена.Владелец = &Приемник
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЛОЖЬ КАК Отключено,
		               |	РеквизитыИсточника.ОписаниеРеквизита КАК РеквизитИсточник,
		               |	РеквизитыПриемника.ОписаниеРеквизита КАК РеквизитПриемник
		               |ИЗ
		               |	РеквизитыИсточника КАК РеквизитыИсточника
		               |		ПОЛНОЕ СОЕДИНЕНИЕ РеквизитыПриемника КАК РеквизитыПриемника
		               |		ПО РеквизитыИсточника.Имя = РеквизитыПриемника.Имя
		               |			И РеквизитыИсточника.ИмяТабличнойЧасти = РеквизитыПриемника.ИмяТабличнойЧасти";
					   
		Результат = Запрос.Выполнить();
		
		Объект.Правила.Загрузить(Результат.Выгрузить());
		 
	КонецЕсли; 
	
	ДоработатьТаблицуПравила();
	
КонецПроцедуры // ЗаполнитьПравила()

// Процедура заполняет вычисляемые поля в табличном поле Правила.
// 
&НаСервере
Процедура ДоработатьТаблицуПравила()

	Для каждого СтрокаТаблицы Из Объект.Правила Цикл
	
		СтрокаТаблицы.ИмяТабличнойЧастиИсточник = СтрЗаменить(СтрокаТаблицы.РеквизитИсточник.ИмяТабличнойЧасти, "$","");
		СтрокаТаблицы.ИмяТабличнойЧастиПриемник = СтрЗаменить(СтрокаТаблицы.РеквизитПриемник.ИмяТабличнойЧасти, "$","");
	
	КонецЦикла; 

КонецПроцедуры // ДоработатьТаблицуПравила()

&НаКлиенте
Процедура ПравилаКодПередОбработкойРеквизитаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущаяСтрока     = Элементы.Правила.ТекущиеДанные;
	
	ИмяТабЧасти = ТекущаяСтрока.ИмяТабличнойЧастиПриемник;
	Если ВРег(ИмяТабЧасти) = ВРег("Реквизиты") ИЛИ ВРег(ИмяТабЧасти) = ВРег("СтандартныеРеквизиты") Тогда
	    СигнатураМетода = "ПередОбработкойРеквизита(ИмяРеквизитаИсточник, ИмяРеквизитаПриемник, Источник, Приемник)";
	Иначе	
	    СигнатураМетода = "ПередОбработкойРеквизита(ИмяРеквизитаИсточник, ИмяРеквизитаПриемник, Источник, Приемник, СтрокаИсточник, СтрокаПриемник)";
	КонецЕсли; 
	
	ПараметрыФормы   = Новый Структура("Текст, Заголовок, ИмяТабличногоПоля, ИмяПоля, ПроцедураФункция, СигнатураМетода, ИмяРеквизитаВозврат"
	                                     , ТекущаяСтрока.КодПередОбработкойРеквизита
										 , "Редактирование кода"
										 , "Правила"
										 , "ПроизвольныйКод"
										 , "Функция"
										 , СигнатураМетода
										 , "ЗначениеРеквизита");
										 
	ДополнительныеПараметры = Новый Структура("ИмяТабличногоПоля, ИмяРеквизита", "Правила", "КодПередОбработкойРеквизита");									 
	Оповещение = Новый ОписаниеОповещения("РедактированиеОбработчикаЗавершение", ЭтотОбъект, ДополнительныеПараметры);					 
	ОткрытьФорму("ОбщаяФорма.бит_ФормаРедактированияТекста", ПараметрыФормы, ЭтаФорма,,,,Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаКодПослеОбработкиРеквизитаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущаяСтрока     = Элементы.Правила.ТекущиеДанные;
	
	ИмяТабЧасти = ТекущаяСтрока.ИмяТабличнойЧастиПриемник;
	Если ВРег(ИмяТабЧасти) = ВРег("Реквизиты") ИЛИ ВРег(ИмяТабЧасти) = ВРег("СтандартныеРеквизиты") Тогда
	    СигнатураМетода = "ПослеОбработкиРеквизита(ИмяРеквизитаИсточник, ИмяРеквизитаПриемник, Источник, Приемник)";
	Иначе	
	    СигнатураМетода = "ПослеОбработкиРеквизита(ИмяРеквизитаИсточник, ИмяРеквизитаПриемник, Источник, Приемник, СтрокаИсточник, СтрокаПриемник)";
	КонецЕсли; 
	
	ПараметрыФормы   = Новый Структура("Текст, Заголовок, ИмяТабличногоПоля, ИмяПоля, ПроцедураФункция, СигнатураМетода, ИмяРеквизитаВозврат"
	                                     , ТекущаяСтрока.КодПослеОбработкиРеквизита
										 , "Редактирование кода"
										 , "Правила"
										 , "ПроизвольныйКод"
										 , "Функция"
										 , СигнатураМетода
										 , "ЗначениеРеквизита");
										 
	ДополнительныеПараметры = Новый Структура("ИмяТабличногоПоля, ИмяРеквизита", "Правила", "КодПослеОбработкиРеквизита");									 
	Оповещение = Новый ОписаниеОповещения("РедактированиеОбработчикаЗавершение", ЭтотОбъект, ДополнительныеПараметры);					 										 
	ОткрытьФорму("ОбщаяФорма.бит_ФормаРедактированияТекста", ПараметрыФормы, ЭтаФорма,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Процедура обработчик оповещения "РедактированиеОбработчикаЗавершение".
// 
// Параметры:
// РезДанные - Структура
// ДополнительныеДанные - Структура.
// 
&НаКлиенте 
Процедура РедактированиеОбработчикаЗавершение(РезДанные, ДополнительныеДанные) Экспорт

	Если ТипЗнч(РезДанные) = Тип("Структура") Тогда
		
		ТекущаяСтрока     = Элементы.Правила.ТекущиеДанные;
		ТекущаяСтрока[ДополнительныеДанные.ИмяРеквизита] = РезДанные.Текст;
		Модифицированность = Истина;
		
	КонецЕсли; 
	
КонецПроцедуры	// РедактированиеОбработчикаЗавершение

#КонецОбласти   
