
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	
	// СофтБаланс Начало Кузнецова С. [24.04.2014] 
	Если ЗначениеЗаполнено(Параметры.СБ_Объект) И Объект.Ссылка.Пустая() Тогда
		Объект.Объект = Параметры.СБ_Объект;
	КонецЕсли;	
	// СофтБаланс Окончание Кузнецова С. [24.04.2014]
	
	// Вызов механизма защиты
	 
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Получить файл из хранилища и поместить его в объект.
	Если ЭтоАдресВременногоХранилища(СсылкаНаФайлВоВременномХранилище) Тогда
		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(СсылкаНаФайлВоВременномХранилище);
		
		ТекущийОбъект.Хранилище = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(9));
		ТекущийОбъект.ИмяФайла  = ИмяФайла;
		ТекущийОбъект.ВидДанных = Перечисления.бит_ВидыДополнительнойИнформацииОбъектов.Файл;
		
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(Объект.Объект) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Объект"" не заполнено'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения, Объект, "Объект.Объект", Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Удалить файл из временного хранилища.
	Если ЭтоАдресВременногоХранилища(СсылкаНаФайлВоВременномХранилище) Тогда
		УдалитьИзВременногоХранилища(СсылкаНаФайлВоВременномХранилище);
	КонецЕсли;	
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПолноеИмяФайла = "";
	
	#Если Не ВебКлиент Тогда
		
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		Диалог.Каталог 					   = "";
		Диалог.Заголовок 				   = НСтр("ru = 'Выберите файл...'");
		Диалог.Фильтр 					   = бит_ХранениеДополнительнойИнформации.ПолучитьФильтрФайлов();
		Диалог.ПредварительныйПросмотр 	   = Истина;
		Диалог.ПроверятьСуществованиеФайла = Истина;
		Диалог.МножественныйВыбор 		   = Ложь;
		
		Если Не Диалог.Выбрать() Тогда
			Возврат;
		КонецЕсли;
		
		Попытка
			
			ДвоичныеДанные  = Новый ДвоичныеДанные(Диалог.ПолноеИмяФайла);
			АдресВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
			
			СсылкаНаФайлВоВременномХранилище = АдресВХранилище;
			
			Объект.ИмяФайла = Сред(Диалог.ПолноеИмяФайла, СтрДлина(Диалог.Каталог) + 1);
			ПолноеИмяФайла  = Диалог.ПолноеИмяФайла;
			
		Исключение
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение("" + ОписаниеОшибки(), Объект);
		КонецПопытки;
		
		Если ПолноеИмяФайла = "" Тогда
			Возврат;
		КонецЕсли;
		
		ИмяФайла = Объект.ИмяФайла;
		
		Если Не ЗначениеЗаполнено(Объект.Наименование) Тогда
			
			РасширениеФайла 	= бит_ХранениеДополнительнойИнформации.ПолучитьРасширениеФайла(ИмяФайла);
			Объект.Наименование = СтрЗаменить(ИмяФайла, Прав(ИмяФайла, СтрДлина(РасширениеФайла) + 1), "");
			
		КонецЕсли;
		
		УправлениеЭлементамиФормы();
		
		Модифицированность = Истина;
		
		РасширениеПодключено = ПодключитьРасширениеРаботыСФайлами();
		
		Если Не РасширениеПодключено Тогда
			Возврат;
		КонецЕсли;
		
		Оповещение = Новый ОписаниеОповещения("ОбработатьВопрос", ЭтотОбъект, ПолноеИмяФайла);
		ТекстВопроса = НСтр("ru='Удалить файл источник?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Нет, НСтр("ru = 'Удаление файла'"));
		
	#Иначе
		
		АдресВХранилище   = "";
		ВыбранноеИмяФайла = "";
		
		Обработчик = Новый ОписаниеОповещения("ОбработатьРезультатПомещенияФайла", ЭтотОбъект);
		НачатьПомещениеФайла(Обработчик, АдресВХранилище, , , УникальныйИдентификатор);
		
	#КонецЕсли
	
КонецПроцедуры

// Процедура обработчик оповещения ОбработатьРезультатПомещенияФайла.
// 
&НаКлиенте
Процедура ОбработатьРезультатПомещенияФайла(РезультатЗагрузки, АдресФайла, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт

	Если РезультатЗагрузки Тогда
		
		Файл = Новый Файл(ВыбранноеИмяФайла);
		
		Объект.ИмяФайла 				 = Файл.Имя;
		СсылкаНаФайлВоВременномХранилище = АдресФайла;
		
		ПолноеИмяФайла = ВыбранноеИмяФайла;
		
	КонецЕсли;
	
	Если ПолноеИмяФайла = "" Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайла = Объект.ИмяФайла;
	
	Если Не ЗначениеЗаполнено(Объект.Наименование) Тогда
		
		РасширениеФайла 	= бит_ХранениеДополнительнойИнформации.ПолучитьРасширениеФайла(ИмяФайла);
		Объект.Наименование = СтрЗаменить(ИмяФайла, Прав(ИмяФайла, СтрДлина(РасширениеФайла) + 1), "");
		
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
	Модифицированность = Истина;
	
	РасширениеПодключено = ПодключитьРасширениеРаботыСФайлами();
	
	Если Не РасширениеПодключено Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ОбработатьВопрос", ЭтотОбъект, ПолноеИмяФайла);
	ТекстВопроса = НСтр("ru='Удалить файл источник?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Нет, НСтр("ru = 'Удаление файла'"));
	
КонецПроцедуры

// Процедура обработчик оповещения ОбработатьВопрос.
// 
// Параметры:
// Ответ - КодВозвратаДиалога
// ПолноеИмяФайла - Строка
// 
&НаКлиенте
Процедура ОбработатьВопрос(Ответ, ПолноеИмяФайла) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		НачатьУдалениеФайлов(Новый ОписаниеОповещения("УдалениеФайловЗавершение", ЭтотОбъект),ПолноеИмяФайла);
	КонецЕсли;

КонецПроцедуры

// Обработчик завершения удаления файлов.
//  См. Синтакс-помощник: НачатьУдалениеФайлов().
//
&НаКлиенте
Процедура УдалениеФайловЗавершение(ДополнительныеПараметры) Экспорт

	Совместимо = Истина;	

КонецПроцедуры
 
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	
	Совместимо = Истина; // Для сертификации.
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайл(Команда)
	
	Совместимо = Истина; // Для сертификации.
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура осуществляет управление доступностью/видимостью элементов формы.
// 
&НаКлиенте
Процедура УправлениеЭлементамиФормы()
	
	Элементы.Объект.ТолькоПросмотр = НеРедактироватьОбъект;
	
	Если ЗначениеЗаполнено(Объект.ИмяФайла) Тогда
		ТекстСтатус = НСтр("ru = 'Файл загружен'");
	Иначе
		ТекстСтатус = НСтр("ru = 'Файл не загружен'");
	КонецЕсли;
	
	Элементы.ИнформацияСтатус.Заголовок = "   " + ТекстСтатус;
	
КонецПроцедуры // УправлениеЭлементамиФормы()

#КонецОбласти

