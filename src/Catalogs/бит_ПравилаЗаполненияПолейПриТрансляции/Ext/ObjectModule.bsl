#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если НЕ ЭтоГруппа Тогда
		
		ЭтотОбъект.РежимИспользованияСоответствий = Перечисления.бит_РежимыИспользованияСоответствийПриТрансляции.НеИспользовать;
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;
	КонецЕсли; 	
	
	бит_ук_СлужебныйСервер.РегистрацияНачалоСобытия(Отказ, ЭтотОбъект.ДополнительныеСвойства); 
	
	Если Не ЭтоНовый() И Не ПометкаУдаления=Ссылка.ПометкаУдаления Тогда
		// В случае установки или снятия пометки удаления не производить проверку.
		Возврат;
	КонецЕсли;	
	
	Заголовок = "Проверка заполнения элемента справочника """+Метаданные().Синоним+""" ";  	
	
	Если НЕ ЭтоГруппа Тогда
		
		// Проверим заполнение полей шапки
		СтруктураОбязательных = Новый Структура("Источник,Приемник");
		
		бит_РаботаСМетаданными.ПроверитьЗаполнениеШапки(ЭтотОбъект,СтруктураОбязательных,Отказ,Заголовок);
		
		// Проверим заполнение табличной части
		СтруктураОбязательных = Новый Структура("ИмяПоля");
		бит_РаботаСМетаданными.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект,"ПоляИсточника",СтруктураОбязательных,Отказ,Заголовок);
		
		// Проверим заполнение табличной части
		СтруктураОбязательных = Новый Структура("ИмяПоля");
		бит_РаботаСМетаданными.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект,"ПоляПриемника",СтруктураОбязательных,Отказ,Заголовок);
		
		
	КонецЕсли; 
	
КонецПроцедуры // ПередЗаписью()
	
Процедура ПриЗаписи(Отказ)
		
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
		
	бит_ук_СлужебныйСервер.РегистрацияПриЗаписи(Отказ, ЭтотОбъект.ДополнительныеСвойства, Метаданные().ПолноеИмя());
		
КонецПроцедуры // ПриЗаписи()

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Процедура генерирует код заполнения по таблице ПоляПриемника.
// 
Процедура ГенерироватьКод() Экспорт
	
	КодЗаполнения = бит_МеханизмТрансляцииКлиентСервер.ГенерироватьКод(ПоляПриемника);
	
КонецПроцедуры // ГенерироватьКод()

// Процедура генерирует код по строке таблицы ПоляПриемника.
// 
// Параметры:
//  СтрокаТаблицы  - СтрокаТабличнойЧасти.
// 
Функция ГенерироватьКодПоСтроке(СтрокаТаблицы) Экспорт
	
	СтрокаКод = бит_МеханизмТрансляцииКлиентСервер.ГенерироватьКодПоСтроке(СтрокаТаблицы);
	
	Возврат СтрокаКод;
	
КонецФункции // ГенерироватьКодПоСтроке()

#КонецОбласти

#КонецЕсли
