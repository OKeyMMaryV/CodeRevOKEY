#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	       	
#Область ОбработчикиСобытий
	
Процедура ПередЗаписью(Отказ)
		
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
	
	Если Ссылка.СтатусРегистрации = ЭтотОбъект.СтатусРегистрации Тогда
	
		ДополнительныеСвойства.Вставить("Автоматически", Истина);
	
	КонецЕсли; 
	
КонецПроцедуры // ПередЗаписью()
	
Процедура ПриЗаписи(Отказ)
		
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
	
	// Контроль уникальности
	Справочники.бит_ЧатыTelegram.ПроверкаУникальностиИД(?(ЭтоНовый(), Справочники.бит_ЧатыTelegram.ПустаяСсылка(), Ссылка), ИД, Отказ);
	
	Если НЕ Отказ Тогда
		
		Если НЕ ДополнительныеСвойства.Свойство("Автоматически") Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	бит_ЧатыTelegram.Ссылка КАК Чат,
			|	бит_ЧатыTelegram.СтатусРегистрации
			|ИЗ
			|	Справочник.бит_ЧатыTelegram КАК бит_ЧатыTelegram
			|ГДЕ
			|	бит_ЧатыTelegram.Ссылка = &Ссылка";
			
			Запрос.УстановитьПараметр("Ссылка", Ссылка);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				бит_ТелеграмСервер.НовоеСообщениеОСтатусеРегистрации(Выборка.СтатусРегистрации, Выборка.Чат);
				
			КонецЦикла;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры // ПриЗаписи()	

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИД = 0;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли