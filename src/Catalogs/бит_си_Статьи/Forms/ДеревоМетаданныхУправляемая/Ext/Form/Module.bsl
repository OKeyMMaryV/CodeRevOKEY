
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(Параметры.ИменаКоллекций) = Тип("Массив") Тогда
		ИменаКоллекций.ЗагрузитьЗначения(Параметры.ИменаКоллекций);
	КонецЕсли;
	
	ОповещатьОВыборе = Параметры.ОповещатьОВыборе;
	
	ОбновитьДерево(Параметры.ПоказыватьФормы);
	
	ВозвращаемоеЗначение = ?(Параметры.ВозвращаемоеЗначение = "", "Строка", Параметры.ВозвращаемоеЗначение);
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДеревоОбъектовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	КомандаВыбрать(ЭтаФорма.Команды.Найти("Выбрать"));
	
КонецПроцедуры // ДеревоОбъектовВыбор()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	Если Элементы.ДеревоОбъектов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	ИначеЕсли НЕ Элементы.ДеревоОбъектов.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Если Элементы.ДеревоОбъектов.ТекущиеДанные.Свойство(ВозвращаемоеЗначение) Тогда
			ВыбранноеЗначение = Элементы.ДеревоОбъектов.ТекущиеДанные[ВозвращаемоеЗначение];
		Иначе
			ВыбранноеЗначение = Элементы.ДеревоОбъектов.ТекущиеДанные;
		КонецЕсли;
		Если ОповещатьОВыборе Тогда
			ОповеститьОВыборе(ВыбранноеЗначение);
		Иначе
			Закрыть(ВыбранноеЗначение);
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры // КомандаВыбрать()

&НаКлиенте
Процедура КомандаОбновить(Команда)
	
	ОбновитьДерево();
	
КонецПроцедуры // КомандаОбновить()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура добавляет ветку в дерево объектов по коллекции метаданных.
//
// Параметры: 
// 	Дерево       - ДеревоЗначений - Дерево в которое добавляются объекты метаданных.                  
// 	ИмяКоллекции - Строка         - Имя коллекции метаданных, объекты которой добавляются.           
//
&НаСервере
Процедура ДобавитьВеткуДерева(Дерево, ИмяКоллекции, ДобавлятьФормы = Ложь)
	
	СтрокаДереваВерх = Дерево.Строки.Добавить();
	СтрокаДереваВерх.ВидОбъекта = ИмяКоллекции;
	
	Для Каждого Мета Из Метаданные[ИмяКоллекции] Цикл
		
		СтрокаДерева = СтрокаДереваВерх.Строки.Добавить();
		СтрокаДерева.ВидОбъекта = ИмяКоллекции;
		СтрокаДерева.ИмяОбъектаПолное = Мета.ПолноеИмя();
		СтрокаДерева.ИмяОбъекта = Мета.Имя;
		СтрокаДерева.Синоним    = Мета.Синоним;
		
		Формы = "";
		Попытка
			Формы = Мета.Формы;
		Исключение
		КонецПопытки;
		Если ДобавлятьФормы И НЕ Формы = "" Тогда
			Для Каждого Форма Из Формы Цикл
				СтрокаДереваФ = СтрокаДерева.Строки.Добавить();
				СтрокаДереваФ.ВидОбъекта = ИмяКоллекции;
				СтрокаДереваФ.ИмяОбъектаПолное = Мета.ПолноеИмя() + "." + Форма.Имя;
				СтрокаДереваФ.ИмяОбъекта = Форма.Имя;
				СтрокаДереваФ.Синоним    = Форма.Синоним;
			КонецЦикла;
		    СтрокаДерева.Строки.Сортировать("Синоним");
		КонецЕсли;
		
	КонецЦикла; 
	
	Если СтрокаДереваВерх.Строки.Количество() = 0 Тогда
		Дерево.Строки.Удалить(СтрокаДереваВерх);
	Иначе
		СтрокаДереваВерх.Строки.Сортировать("Синоним");
	КонецЕсли;		
		
КонецПроцедуры // ДобавитьВеткуДерева()

// Процедура обновляет дерево объектов метаданных конфигурации.
// 
&НаСервере
Процедура ОбновитьДерево(ДобавлятьФормы = Ложь)
	
	ВремДеревоОбъектов = РеквизитФормыВЗначение("ДеревоОбъектов");
	ВремДеревоОбъектов.Строки.Очистить();
	
	Если ИменаКоллекций.Количество() = 0 Тогда
		
		ИменаКоллекций.Добавить("Справочники");
		ИменаКоллекций.Добавить("Документы");
		ИменаКоллекций.Добавить("Отчеты");
		ИменаКоллекций.Добавить("Обработки");
		ИменаКоллекций.Добавить("РегистрыСведений");
	
	КонецЕсли; 
	
	Для Каждого ИмяКоллекции Из ИменаКоллекций Цикл
	
		ДобавитьВеткуДерева(ВремДеревоОбъектов, ИмяКоллекции.Значение, ДобавлятьФормы);
	
	КонецЦикла; 
	
	ЗначениеВРеквизитФормы(ВремДеревоОбъектов, "ДеревоОбъектов");
	
КонецПроцедуры // ОбновитьДерево()

#КонецОбласти
