
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);

	Если Не Объект.Ссылка.Пустая() Тогда 
		ПутьККартинкеЗаголовка = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "КартинкаЗаголовкаСИ");
	КонецЕсли;
	
	ВремСтрока = "<не задано>";
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ВремОбработка = Объект.Ссылка.Обработка.Получить();
	КонецЕсли;
	
	Если ТипЗнч(ВремОбработка) = Тип("Строка") Тогда
		Попытка
			ВремСтрока = Метаданные.Обработки[ВремОбработка].Представление();
		Исключение
			ТекстСообщения = НСтр("ru = 'Не удалось создать обработку источника справочной информации ""%1""!
										|Проверьте настройки источника.'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, ВремОбработка); 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецПопытки;
	ИначеЕсли ТипЗнч(ВремОбработка) = Тип("ДвоичныеДанные") Тогда
		ВремФайл = ПолучитьИмяВременногоФайла("epf");
		ВремОбработка.Записать(ВремФайл);
		ВремОбработкаОбъект = ВнешниеОбработки.Создать(ВремФайл);
		ВремСтрока = ВремОбработкаОбъект.Метаданные().Представление();
		Попытка
			УдалитьФайлы(ВремФайл);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	ОбработкаСправки = ВремСтрока;
	
	Если Не Объект.Ссылка.Пустая() Тогда
		НастройкаПоУмолчанию = 
							бит_си_ОбщегоНазначения.ПолучитьНастройкиОбработкиИсточникаТекстом(Объект.Ссылка.НастройкаПоУмолчанию.Получить(),
							   																   Объект.Ссылка);
		ТекущийОбъектНастройки = Объект.Ссылка.ПолучениеТекущегоОбъектаНастройки;
		ТекущийОбъект = бит_си_ПолныеПрава.ПолучитьТекущийОбъектНастройки(Объект.Ссылка);
		ВремТекущаяНастройка = бит_си_ПолныеПрава.ПолучитьТекущуюНастройкуИсточника(Объект.Ссылка, Истина);
		ТекущаяНастройка = 
						   бит_си_ОбщегоНазначения.ПолучитьНастройкиОбработкиИсточникаТекстом(ВремТекущаяНастройка.Получить(), Объект.Ссылка);
	КонецЕсли;
	
	Если ТекущийОбъект = Неопределено Тогда
		Элементы.ГруппаСтраницНастроек.ПодчиненныеЭлементы.ГруппаТекущейНастройки.Заголовок = "Настройка";
	Иначе
		Элементы.ГруппаСтраницНастроек.ПодчиненныеЭлементы.ГруппаТекущейНастройки.Заголовок = "Настройка ("+СокрЛП(ТекущийОбъект)+")";
	КонецЕсли;
	
	ЗаполнитьТаблицуНастроекОбъектов();
	ЗаполнитьСписокНастроекПолученияОбъекта();	
	УстановитьНастройкуПолученияОбъекта();
	ДоступностьВидимостьНастроек();
	
	АдресОбработкиВоВременномХранилище = ПоместитьОбработкуВоВременноеХранилище(Объект.Ссылка.Обработка.Получить(),
																				ЭтаФорма.УникальныйИдентификатор);
	АдресНастроекВоВременномХранилище = ПоместитьВоВременноеХранилище(Объект.Ссылка.НастройкаПоУмолчанию.Получить(),
																	  ЭтаФорма.УникальныйИдентификатор);																			
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТипЗнч(ПолучитьИзВременногоХранилища(АдресОбработкиВоВременномХранилище)) = Тип("ДвоичныеДанные") Тогда
		ТекущийОбъект.Обработка = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресОбработкиВоВременномХранилище));
	Иначе 
		Попытка
			ТекущийОбъект.Обработка = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресОбработкиВоВременномХранилище).Метаданные().Имя);
		Исключение
		КонецПопытки;
	КонецЕсли;
	Попытка
		ТекущийОбъект.НастройкаПоУмолчанию = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекВоВременномХранилище));
	Исключение
	КонецПопытки;
	
	ТекКартинкаЗаголовкаСИ = Новый Картинка();
		
	Если ЗначениеЗаполнено(ПутьККартинкеЗаголовка) Тогда
		Попытка
			ТекКартинкаЗаголовкаСИ = Новый Картинка(ПолучитьИзВременногоХранилища(ПутьККартинкеЗаголовка));
		Исключение
		КонецПопытки;
	КонецЕсли;
	ТекущийОбъект.КартинкаЗаголовкаСИ = Новый ХранилищеЗначения(ТекКартинкаЗаголовкаСИ);
	
	Попытка
		ТекущийОбъект.ПолучениеТекущегоОбъектаНастройки = Новый ХранилищеЗначения(ТекущаяНастройкаПолученияОбъекта);
	Исключение
	КонецПопытки;
	
КонецПроцедуры // ПередЗаписьюНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НастройкаПоУмолчаниюНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь;
    
    ВремЗаголовок = "Настройка параметров по умолчанию для источника справочной информации """ + Объект.Наименование + """";
    
    МассивРеквизитов = Новый Массив;
    
    ИмяФормыНастройки = ПолучитьИмяФормыОбработкиНастройки(АдресОбработкиВоВременномХранилище, МассивРеквизитов);
	Если Не ЗначениеЗаполнено(ИмяФормыНастройки) Тогда 
		Возврат;
	КонецЕсли;
    
    Форма = бит_си_ОбщегоНазначения.ПолучитьФормуНастройкиОбработкиИсточникаУправляемыйРежим(ИмяФормыНастройки,
																			 НастройкаПоУмолчанию,
																			 Элемент,
																			 ВремЗаголовок,
																			 ,
																			 МассивРеквизитов,
																			 АдресНастроекВоВременномХранилище);
	Если Форма = Неопределено Тогда
		Возврат;
    КонецЕсли;
    
	Форма.Открыть();
    
КонецПроцедуры // НастройкаПоУмолчаниюНачалоВыбора()

&НаКлиенте
Процедура НастройкаПоУмолчаниюОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь;
    
    Если Не ТипЗнч(ВыбранноеЗначение) = Тип("Структура") 
        И Не ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
    
    Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда 
		АдресНастроекВоВременномХранилище = ПоместитьВоВременноеХранилище(ВыбранноеЗначение,
																		  ЭтаФорма.УникальныйИдентификатор);
		НастройкаПоУмолчанию = бит_си_ОбщегоНазначения.ПолучитьНастройкиОбработкиИсточникаТекстом(ВыбранноеЗначение, 
																								  ЭтаФорма.Объект);
	Иначе 
		АдресНастроекВоВременномХранилище = ВыбранноеЗначение;
		НастройкаПоУмолчанию = ПолучитьНастройкиОбработкиИсточникаТекстом(АдресНастроекВоВременномХранилище, Объект.Ссылка);
    КонецЕсли;
    
	ЭтаФорма.Модифицированность = Истина;
    
КонецПроцедуры // НастройкаОбработкаВыбора()

&НаКлиенте
Процедура ОбработкаСправкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь;
    
    ВремМеню = ПолучитьСписокОбработокДляИсточника();
	ВремМеню.Добавить("ВыбратьИзФайла", "Выбрать из файла...");
	ВремВыбор = ВыбратьИзМеню(ВремМеню, Элемент);
    
	Если ВремВыбор = Неопределено Тогда
		Возврат;
	ИначеЕсли ВремВыбор.Значение = "ВыбратьИзФайла" Тогда
        
        ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогВыбора.МножественныйВыбор = Ложь;
		Если НЕ ДиалогВыбора.Выбрать() Тогда
			Возврат;
		КонецЕсли;
        
        АдресОбработкиВоВременномХранилище = "";
        
        Если Не ПоместитьФайл(АдресОбработкиВоВременномХранилище,
							  ДиалогВыбора.ПолноеИмяФайла,
							  ДиалогВыбора.ПолноеИмяФайла,
							  Ложь,
							  ЭтаФорма.УникальныйИдентификатор) Тогда
        	Возврат;
		КонецЕсли;
        
        АдресОбработкиВоВременномХранилище = ПоместитьОбработкуВоВременноеХранилище(АдресОбработкиВоВременномХранилище,
																					ЭтаФорма.УникальныйИдентификатор,
																					Объект.Наименование,
																					Объект.Заголовок,
																					Истина,
																					ОбработкаСправки,
																					ПутьККартинкеЗаголовка);
                                                                                    
                                                                                    Если Не ЗначениеЗаполнено(АдресОбработкиВоВременномХранилище) Тогда 
			Возврат;
        КонецЕсли;
        
	Иначе
        
        АдресОбработкиВоВременномХранилище = ПоместитьОбработкуВоВременноеХранилище(ВремВыбор.Значение,
																					ЭтаФорма.УникальныйИдентификатор,
																					Объект.Наименование,
																					Объект.Заголовок);
		ОбработкаСправки = ВремВыбор.Представление;
		ПутьККартинкеЗаголовка = ПоместитьВоВременноеХранилище(ВремВыбор.Картинка.ПолучитьДвоичныеДанные(),
															   ЭтаФорма.УникальныйИдентификатор);
    КонецЕсли;
                                                           
    ЭтаФорма.Модифицированность = Истина;
	УстановитьНастройкуПолученияОбъекта();
	ДоступностьВидимостьНастроек();
    
КонецПроцедуры // ОбработкаСправкиНачалоВыбора()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьКартинкуИзВстроенных(Команда)
    
    СписокКартинок = ПолучитьСписокОбщихКартинок();
	Выбор = СписокКартинок.ВыбратьЭлемент();
    
    Если Выбор <> Неопределено Тогда
		ПутьККартинкеЗаголовка = ПоместитьВоВременноеХранилище(Выбор.Картинка.ПолучитьДвоичныеДанные(),
															   ЭтаФорма.УникальныйИдентификатор);
		ЭтаФорма.Модифицированность = Истина;
    КонецЕсли;
    
КонецПроцедуры // ВыбратьКартинкуИзВстроенных()

&НаКлиенте
Процедура ВыбратьКартинкуИзФайла(Команда)
    
    ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.Заголовок = "Выберите файл с изображением";
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	ДиалогОткрытияФайла.ПредварительныйПросмотр = Истина;
	ДиалогОткрытияФайла.Фильтр = ПолучитьФильтрИзображений();
    
    Если ДиалогОткрытияФайла.Выбрать() Тогда
		ПутьККартинкеЗаголовка = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ДиалогОткрытияФайла.ПолноеИмяФайла),
															   ЭтаФорма.УникальныйИдентификатор);
		ЭтаФорма.Модифицированность = Истина;
	Иначе
		Возврат;
    КонецЕсли;
    
КонецПроцедуры // ВыбратьКартинкуИзФайла()

&НаКлиенте
Процедура ОчиститьКартинку(Команда)
    
    ПутьККартинкеЗаголовка = "";
	ЭтаФорма.Модифицированность = Истина;
    
КонецПроцедуры // ОчиститьКартинку()

&НаКлиенте
Процедура ВыбратьТекущийОбъектНастройки(Команда)
	
КонецПроцедуры // ВыбратьТекущийОбъектНастройки()

&НаКлиенте
Процедура Проверить(Команда)
	
КонецПроцедуры // Проверить()

&НаКлиенте
Процедура КнопкаТекущийОбъектНастройкиВыбор(Команда)
    
	// Если Кнопка.Имя = "ВыбратьИзФайла" Тогда
	// 	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	// 	ДиалогВыбора.МножественныйВыбор = Ложь;
	// 	Если НЕ ДиалогВыбора.Выбрать() Тогда
	// 		Возврат;
	// 	КонецЕсли;
	// 	ЭтотОбъект.Обработка = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ДиалогВыбора.ПолноеИмяФайла));
	// 	ЭлементыФормы.ТекущийОбъектНастройки.Прочитать(ДиалогВыбора.ПолноеИмяФайла);
	// 	ОпределитьНастройкуПоКоду();
	// Иначе
	// 	ТекНастройка = НастройкиПолученияОбъекта.Найти(Кнопка.Имя,"Имя");
	// 	Если ТекНастройка = Неопределено Тогда
	// 		ТекущаяНастройкаПолученияОбъекта = Неопределено;
	// 		ЭлементыФормы.НадписьТекущийОбъектНастройки.Заголовок = "<Не выбран способ получения текущего объекта настройки>";
	// 		ЭлементыФормы.ТекущийОбъектНастройки.УстановитьТекст("");
	// 	Иначе
	// 		ТекущаяНастройкаПолученияОбъекта = Новый Структура("Имя, Представление, Код",
	// 														   ТекНастройка.Имя,
	// 														   ТекНастройка.Представление,
	// 														   ТекНастройка.Код);
	// 		ЭлементыФормы.НадписьТекущийОбъектНастройки.Заголовок = ТекНастройка.Представление;
	// 		ЭлементыФормы.ТекущийОбъектНастройки.УстановитьТекст(ТекНастройка.Код);
	// 	КонецЕсли;
	// КонецЕсли;
    
КонецПроцедуры // Проверить()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получает строку-фильтр изображений для использования в диалогах открытия/сохранения файлов.
// 
// Параметры 
// Возвращаемое значение:
// 	Строка - Строка содержащая фильтр файлов изображений, как он может        
// 	           использоваться в диалогах открытия/сохранения файлов.             
//
&НаКлиенте
Функция ПолучитьФильтрИзображений()

	Возврат "Все картинки (*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf)"
		  + "|*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf|" 
	      + "Формат bmp (*.bmp;*.dib;*.rle)|*.bmp;*.dib;*.rle|"
	      + "Формат jpeg (*.jpg;*.jpeg)|*.jpg;*.jpeg|"
	      + "Формат tiff (*.tif)|*.tif|"
	      + "Формат gif (*.gif)|*.gif|"
	      + "Формат png (*.png)|*.png|"
	      + "Формат icon (*.ico)|*.ico|"
	      + "Формат метафайл (*.wmf;*.emf)|*.wmf;*.emf|";

КонецФункции // ПолучитьФильтрИзображений()

// Получает список общих картинок.
// 
// Возвращаемое значение:
// 	СписокЗначений - Список общих картинок.
//
&НаСервереБезКонтекста
Функция ПолучитьСписокОбщихКартинок()
    
    СписокКартинок = Новый СписокЗначений();
	Для Каждого ТекКартинка Из Метаданные.ОбщиеКартинки Цикл
		СписокКартинок.Добавить(ТекКартинка.Имя,ТекКартинка.Представление(),,БиблиотекаКартинок[ТекКартинка.Имя]);
    КонецЦикла;
    
	Возврат СписокКартинок;
    
КонецФункции // ПолучитьСписокОбщихКартинок()

// Заполняет таблицу настроек источника сохраненными настройками для всех пользователей.
// 
&НаСервере
Процедура ЗаполнитьТаблицуНастроекОбъектов()
    
    ВремОбработка = бит_си_ОбщегоНазначения.ПолучитьОбработкуИсточника(Объект);
	ЕстьНастройкиПоОбъектам = Ложь;
    
    Попытка
		ЕстьНастройкиПоОбъектам = ВремОбработка.ЕстьНастройкиПоОбъектам();
	Исключение
		Возврат;
    КонецПопытки;
    
	Если НЕ ЕстьНастройкиПоОбъектам Тогда
		Возврат;
    КонецЕсли;
    
	ВсеНастройки.Очистить();
    
    ВремТаб = бит_си_ПолныеПрава.ПолучитьНастройкиИсточника(Объект.Ссылка);
	Если ВремТаб.Количество() = 0 Тогда
		НоваяСтрока = ВсеНастройки.Добавить();
		НоваяСтрока.Объект				= ТекущийОбъект;
		НоваяСтрока.Настройка			= ПоместитьВоВременноеХранилище(бит_си_ПолныеПрава.ПолучитьТекущуюНастройкуИсточника(Объект.Ссылка,
																															 Истина),
																		ЭтаФорма.УникальныйИдентификатор);
		НоваяСтрока.НастройкаСтрокой	=
			бит_си_ОбщегоНазначения.ПолучитьНастройкиОбработкиИсточникаТекстом(ПолучитьИзВременногоХранилища(НоваяСтрока.Настройка),
																			   Объект.Ссылка);
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
	 
	Для Каждого ТекСтрока Из ВремТаб Цикл
		НоваяСтрока = ВсеНастройки.Добавить();
		НоваяСтрока.Объект				= ТекСтрока.Объект;
		НоваяСтрока.Настройка			= ТекСтрока.Настройка;
		НоваяСтрока.НастройкаСтрокой	=
			бит_си_ОбщегоНазначения.ПолучитьНастройкиОбработкиИсточникаТекстом(ПолучитьИзВременногоХранилища(НоваяСтрока.Настройка).Получить(),
																			   Объект.Ссылка);
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьТаблицуНастроекОбъектов()

// Создает таблицу, содержащую наименования способов и программный код получения текущего пользователя.
// Таблица сохраняется в переменную формы "НастройкиПолученияОбъектов".
//
// Таблица содержит колонки:
// Имя				- Строка	- Имя настройки получения пользователя.
// Представление	- Строка	- Представление для показа пользователю.
// Код				- Строка	- Программный код получения пользователя.
// 
// 
&НаСервере
Процедура ЗаполнитьСписокНастроекПолученияОбъекта()
    
    ВремКнопки = Элементы.ГруппаВыбрать.ПодчиненныеЭлементы;
	Удаляем = 0;
    
    Пока ВремКнопки.Количество() > 1 Цикл
		Если ВремКнопки[Удаляем].Имя = "ВыбратьИзФайла" Тогда
			Удаляем = Удаляем + 1;
			Продолжить;
		КонецЕсли;
		ЭтаФорма.Элементы.Удалить(ВремКнопки[Удаляем]);
	КонецЦикла;
	
	Попытка
		НастройкиПолученияОбъектаВрем = бит_си_ПолныеПрава.ПолучитьСписокНастроекПолученияОбъектаНастройки();
	Исключение
		Возврат;
    КонецПопытки;
    
	Для Каждого ТекНастройка Из НастройкиПолученияОбъектаВрем Цикл
		ВремКнопка = Элементы.Добавить(ТекНастройка.Имя,
										Тип("КнопкаФормы"),
										Элементы.ГруппаВыбрать);
		ВремКнопка.Заголовок = ТекНастройка.Представление;
		ВремКнопка.ИмяКоманды = "КнопкаТекущийОбъектНастройкиВыбор";
    КонецЦикла;
    
	НастройкиПолученияОбъекта.Загрузить(НастройкиПолученияОбъектаВрем);
    
КонецПроцедуры // ЗаполнитьСписокНастроекПолученияОбъекта()

// Определяет настройку получения пользователя по имени конфигурации.
// 
&НаСервере
Процедура УстановитьНастройкуПолученияОбъекта()
    
    ТекущаяНастройкаПолученияОбъекта = Объект.Ссылка.ПолучениеТекущегоОбъектаНастройки.Получить();
	
	Если ТипЗнч(ТекущаяНастройкаПолученияОбъекта) = Тип("Структура") Тогда
		Элементы.НадписьТекущийОбъектНастройки.Заголовок = ТекущаяНастройкаПолученияОбъекта.Представление;
		ТекущийОбъектНастройки = ТекущаяНастройкаПолученияОбъекта.Код;
	Иначе
		Строки = НастройкиПолученияОбъекта.НайтиСтроки(Новый Структура("Имя",Метаданные.Имя));
		ТекНастройка = ?(Строки.Количество() > 0,Строки[0],Неопределено);
		Если ТекНастройка = Неопределено Тогда
			ТекНастройка = НастройкиПолученияОбъекта.НайтиСтроки(Новый Структура("Имя","ПользовательИБИмя"))[0];
		КонецЕсли;
		ТекущаяНастройкаПолученияОбъекта = Новый Структура("Имя, Представление, Код",
														   ТекНастройка.Имя,
														   ТекНастройка.Представление,
														   ТекНастройка.Код);
		Элементы.НадписьТекущийОбъектНастройки.Заголовок = ТекНастройка.Представление;
		ТекущийОбъектНастройки = ТекНастройка.Код;
	КонецЕсли;
	ОпределитьНастройкуПоКоду();
    
КонецПроцедуры // УстановитьНастройкуПолученияОбъекта()

// Определяет настройку получения текущего объекта настроек по коду
// Для отображения наименования настройки.
// 
&НаСервере
Процедура ОпределитьНастройкуПоКоду()
    
    Если СокрЛП(ТекущийОбъектНастройки) = "" Тогда
		ТекущаяНастройкаПолученияОбъекта = Неопределено;
		Элементы.НадписьТекущийОбъектНастройки.Заголовок = "<Не выбран способ получения текущего объекта настройки>";
	Иначе
		ТекНастройкаПоКоду = НастройкиПолученияОбъекта.НайтиСтроки(Новый Структура("Код",ТекущийОбъектНастройки));
		ТекНастройкаПоИмени = НастройкиПолученияОбъекта.НайтиСтроки(
																	Новый Структура("Представление",Элементы.НадписьТекущийОбъектНастройки.Заголовок));
		Если ТекНастройкаПоКоду.Количество() = 0 Тогда
			ТекущаяНастройкаПолученияОбъекта = Новый Структура("Имя, Представление, Код",
															   "Пользователь",
															   "<Способ получения текущего объекта настройки указан вручную>",
															   ТекущийОбъектНастройки);
		ИначеЕсли ТекНастройкаПоИмени.Количество() = 0 Тогда
			ТекущаяНастройкаПолученияОбъекта = Новый Структура("Имя, Представление, Код",
															   ТекНастройкаПоКоду[0].Имя,
															   ТекНастройкаПоКоду[0].Представление,
															   ТекущийОбъектНастройки);
		ИначеЕсли НЕ ТекНастройкаПоИмени[0].Код = ТекНастройкаПоКоду[0].Код Тогда
			ТекущаяНастройкаПолученияОбъекта = Новый Структура("Имя, Представление, Код",
															   ТекНастройкаПоКоду[0].Имя,
															   ТекНастройкаПоКоду[0].Представление,
															   ТекущийОбъектНастройки);
		КонецЕсли;
		Элементы.НадписьТекущийОбъектНастройки.Заголовок = ТекущаяНастройкаПолученияОбъекта.Представление;
    КонецЕсли;
    
КонецПроцедуры // ОпределитьНастройкуПоКоду()

// Управляет доступностью и видимостью элементов формы
// в зависимости от роли пользователя.
//
&НаСервере
Процедура ДоступностьВидимостьНастроек()
    
    // Изменение кода. Начало. 23.01.2013{{
	// Администрирование = бит_си_ПолныеПрава.бит_си_РольДоступна("бит_си_Администрирование");
	Администрирование = бит_си_ПолныеПрава.бит_си_РольДоступна("ПолныеПрава");		
	// Изменение кода. Конец. 23.01.2013}}
	ВремОбработка = бит_си_ОбщегоНазначения.ПолучитьОбработкуИсточника(Объект.Ссылка);
	ЕстьНастройкиПоОбъектам = Ложь;
	Попытка
		ЕстьНастройкиПоОбъектам = ВремОбработка.ЕстьНастройкиПоОбъектам();
	Исключение
	КонецПопытки;
	Элементы.ГруппаСтраницНастроек.ПодчиненныеЭлементы.ГруппаВсехНастроек.Видимость       	    = Администрирование И ЕстьНастройкиПоОбъектам;
	Элементы.ГруппаСтраницНастроек.ПодчиненныеЭлементы.ГруппаТекущейНастройки.Видимость         = Администрирование И ЕстьНастройкиПоОбъектам;
	Элементы.ГруппаСтраницНастроек.ПодчиненныеЭлементы.СтраницаТекущийОбъектНастройки.Видимость	= ЕстьНастройкиПоОбъектам;
	
	Элементы.НастройкаПоУмолчанию.Доступность										 = Администрирование;
	Элементы.Наименование.Доступность												 = Администрирование;
	Элементы.Код.Доступность														 = Администрирование;
	Элементы.Заголовок.Доступность													 = Администрирование;
	Элементы.КартинкаЗаголовка.Доступность							   				 = Администрирование;
	Элементы.КартинкаЗаголовкаКонтекстноеМеню.Доступность 							 = Администрирование;
	Элементы.КартинкаЗаголовкаКонтекстноеМенюВыбратьКартинкуИзВстроенных.Доступность = Администрирование;
	Элементы.ОбработкаСправки.Доступность											 = Администрирование;
	Элементы.ВидимостьПоУмолчанию.Доступность										 = Администрирование;
    
КонецПроцедуры // ДоступностьВидимостьНастроек()

// Помещает обработку во временное хранилище на сервере.
//
// Параметры: 
// 	Обработка  	 		    - ОбработкаОбъект,Строка - Помещаемая во временное хранилище обработка.
// 	УникальныйИдентификатор	-	УникальныйИдентификатор - Уникальный идентификатор формы.
// 	Наименование            - Строка (По умолчанию = "").
//  Заголовок               - Строка (По умолчанию = "").
//  ЭтоВнешняяОбработка     - Булево (По умолчанию = Ложь).
//  ПредставлениеВФорме     - Строка (По умолчанию = "").
//  ПутьККартинке           - Строка (По умолчанию = "").
//
// Возвращаемое значение:
// 	Строка - Адрес во временном хранилище.        
// 	                   	  	                       	 
&НаСервереБезКонтекста
Функция ПоместитьОбработкуВоВременноеХранилище(Обработка,
											   УникальныйИдентификатор,
											   Наименование = "",
											   Заголовок = "",
											   ЭтоВнешняяОбработка = Ложь,
											   ПредставлениеВФорме = "",
											   ПутьККартинке = "")
	Адрес = "";
	Если ТипЗнч(Обработка) = Тип("Строка") И Не ЭтоВнешняяОбработка Тогда
        
        Адрес = ПоместитьВоВременноеХранилище(Обработки[Обработка].Создать(),УникальныйИдентификатор);
		Наименование = Метаданные.Обработки[Обработка].Синоним;
		ВремМакет = Метаданные.Обработки[Обработка].Макеты.Найти("Заголовок");
        
    ИначеЕсли ТипЗнч(Обработка) <> Тип("ДвоичныеДанные") И ТипЗнч(Обработка) <> Тип("Строка") И Обработка <> Неопределено Тогда
        
        Адрес = ПоместитьВоВременноеХранилище(Обработка,УникальныйИдентификатор);
		Наименование = Обработка.Метаданные().Синоним;
		ВремМакет = Обработка.Метаданные().Макеты.Найти("Заголовок");
        
    ИначеЕсли ТипЗнч(Обработка) = Тип("ДвоичныеДанные") Или ЭтоВнешняяОбработка Тогда
        
        ИмяВременнойОбработки = ПолучитьИмяВременногоФайла("epf");
        
        Если Не ЭтоВнешняяОбработка Тогда 
			Обработка.Записать(ИмяВременнойОбработки);
		Иначе 
			ПолучитьИзВременногоХранилища(Обработка).Записать(ИмяВременнойОбработки);
			Попытка
				ВремОбработкаОбъект = ВнешниеОбработки.Создать(ИмяВременнойОбработки);
				Если НЕ ВремОбработкаОбъект.ЭтоОбработкаИсточникаСИ() Тогда
					ТекстСообщения = НСтр("ru = 'Выбранный файл не является обработкой источника справочной информации!'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Возврат "";
				КонецЕсли;
			Исключение
				ТекстСообщения = НСтр("ru = 'Выбранный файл не является обработкой источника справочной информации!'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Возврат "";
			КонецПопытки;
		КонецЕсли;
        
        ВремОбр = ВнешниеОбработки.Создать(ИмяВременнойОбработки);
		Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяВременнойОбработки),УникальныйИдентификатор);
		Наименование = ВремОбр.Метаданные().Синоним;
		ВремМакет = ВремОбр.Метаданные().Макеты.Найти("Заголовок");
        
    КонецЕсли;
    
    Если ВремМакет <> Неопределено И СокрЛП(ВремМакет.ТипМакета) = "ТекстовыйДокумент" И
        
        ТипЗнч(Обработка) = Тип("Строка") И Не ЭтоВнешняяОбработка Тогда
		ВремОбработка = Обработки[Обработка].Создать();
		Заголовок	= ВремОбработка.ПолучитьМакет("Заголовок").ПолучитьТекст();
		ПредставлениеВФорме = ВремОбработка.Метаданные().Представление();
        
    ИначеЕсли ТипЗнч(Обработка) <> Тип("ДвоичныеДанные") И ТипЗнч(Обработка) <> Тип("Строка") И  Обработка <> Неопределено Тогда
        
        Попытка
			Заголовок = Обработка.ПолучитьМакет("Заголовок").ПолучитьТекст();
		Исключение
			Заголовок = Обработка.Метаданные().Представление();
		КонецПопытки;
		ПредставлениеВФорме = Обработка.Метаданные().Синоним;
        
    ИначеЕсли ТипЗнч(Обработка) = Тип("ДвоичныеДанные") Или ЭтоВнешняяОбработка Тогда
        
        Попытка
			Заголовок = ВремОбр.ПолучитьМакет("Заголовок").ПолучитьТекст();
		Исключение
			Заголовок = ВремОбр.Метаданные().Синоним;
		КонецПопытки;
        
        ПредставлениеВФорме = ВремОбр.Метаданные().Представление();
		Если Не ЭтоВнешняяОбработка Тогда 
			Возврат Адрес;
		КонецЕсли;
        
        ВремМакет = ВремОбр.Метаданные().Макеты.Найти("Картинка");
		Если НЕ ВремМакет = Неопределено И СокрЛП(ВремМакет.ТипМакета) = "ДвоичныеДанные" Тогда
			ПутьККартинке = ПоместитьВоВременноеХранилище(ВремОбр.ПолучитьМакет("Картинка"),УникальныйИдентификатор);
		Иначе
			ПутьККартинке = "";
		КонецЕсли;
        
        Попытка
			УдалитьФайлы(ВремОбр);
		Исключение
        КонецПопытки;
        
    КонецЕсли;
    
	Возврат Адрес;
    
КонецФункции // ПоместитьОбработкуВоВременноеХранилище()

// Получает имя формы настройки обработки.
//
// Параметры: 
// 	АдресВоВременномХранилище -	Строка - Адрес во временном хранилище.
// 	МассивРеквизитов	      -	Массив - Массив реквизитов обработки.
// 
// Возвращаемое значение:
// 	Строка - Имя формы.
// 	                   	  	                       	 
&НаСервереБезКонтекста
Функция ПолучитьИмяФормыОбработкиНастройки(АдресВоВременномХранилище,МассивРеквизитов)
    
    Имя = "";
    
    Если ЗначениеЗаполнено(АдресВоВременномХранилище) Тогда 
        
        Обработка = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
        
        Если Обработка = Неопределено Тогда 
			Возврат Имя;
		КонецЕсли;
        
        Если ТипЗнч(Обработка) = Тип("ДвоичныеДанные") Тогда
			ИмяВременнойОбработки = ПолучитьИмяВременногоФайла("epf");
			Обработка.Записать(ИмяВременнойОбработки);
			Обработка = ВнешниеОбработки.Создать(ИмяВременнойОбработки);
		КонецЕсли;
        
        Попытка
			Имя = Обработка.ПолучитьИмяФормыНастройкиОбработки();	
		Исключение
			Имя = "Обработка." + Обработка.Метаданные().Имя + "Форма.ФормаНастройкиУправляемая";
		КонецПопытки;
		Для Каждого РеквизитОбработки Из Обработка.Метаданные().Реквизиты Цикл 
			МассивРеквизитов.Добавить(РеквизитОбработки.Имя);
        КонецЦикла;
        
    КонецЕсли;
    
	Возврат Имя;
    
КонецФункции // ПоместитьОбработкуВоВременноеХранилище()

// Получает список обработок для источника.
//
// Возвращаемое значение:
// 	СписокЗначений - Список значений для выбора.
// 	                   	  	                       	 
&НаСервереБезКонтекста
Функция ПолучитьСписокОбработокДляИсточника()
    
    ВремМеню = Новый СписокЗначений();
    
    Для Каждого ВремОбработка Из Метаданные.Обработки Цикл
        
        Если НЕ Лев(ВремОбработка.Имя,15) = "бит_си_Источник" Тогда
			Продолжить;
        КонецЕсли;
        
		ВремОбработкаОбъект = Обработки[ВремОбработка.Имя].Создать();
        
        Попытка
			Если НЕ ВремОбработкаОбъект.ЭтоОбработкаИсточникаСИ() Тогда
				Продолжить;
			КонецЕсли;
		Исключение
			Продолжить;
        КонецПопытки;
        
		ВремМакет = ВремОбработкаОбъект.Метаданные().Макеты.Найти("Картинка");
		Если НЕ ВремМакет = Неопределено И СокрЛП(ВремМакет.ТипМакета) = "ДвоичныеДанные" Тогда
			ВремКартинка = Новый Картинка(ВремОбработкаОбъект.ПолучитьМакет("Картинка"));
		Иначе
			ВремКартинка = Новый Картинка();
		КонецЕсли;
		ВремМеню.Добавить(ВремОбработка.Имя,ВремОбработка.Представление(),,ВремКартинка);
        
    КонецЦикла;
    
	Возврат ВремМеню;
    
КонецФункции // ПоместитьОбработкуВоВременноеХранилище()

// Получает настройки обработки источника текстом.
//
// Параметры: 
// 	Адрес  -	Строка   		                  - Адрес настроек во временном хранилище.
// 	Ссылка -	СправочникСсылка.бит_си_Источники - Ссылка на источник.
// 						 	 		 
// Возвращаемое значение:
//  Строка - Текст настроек. 
// 	                   	  	                       	 
&НаСервереБезКонтекста
Функция ПолучитьНастройкиОбработкиИсточникаТекстом(Адрес, Ссылка)
    
    Текст = бит_си_ОбщегоНазначения.ПолучитьНастройкиОбработкиИсточникаТекстом(ПолучитьИзВременногоХранилища(Адрес),
																			   Ссылка);
	Возврат Текст;
    
КонецФункции // ПолучитьНастройкиОбработкиИсточникаТекстом()

#КонецОбласти
