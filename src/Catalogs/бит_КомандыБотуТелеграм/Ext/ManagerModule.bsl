#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура - Заполнить команды телеграм по умолчанию.
// Выполняет первоначальное заполнение справочника.
//
Процедура ЗаполнитьКомандыТелеграмПоУмолчанию() Экспорт 

	СпрОбъект = Справочники.бит_КомандыБотуТелеграм.BalanceCashBU.ПолучитьОбъект();
	СпрОбъект.Запрос 					= ТекстЗапросаBalanceCashBU();
	СпрОбъект.ТекстКлавиатуры			= Нстр("ru = 'Остаток ДС'");
	СпрОбъект.Определение 				= Нстр("ru = 'Остатки денежных средств по бухгалтерскому учету'");
	СпрОбъект.ИсточникПолученияДанных 	= СпрОбъект.Ссылка;
	СпрОбъект.ИспользоватьТолькоПериод = Истина;
	СпрОбъект.Записать();
	
	СпрОбъект = Справочники.бит_КомандыБотуТелеграм.BalanceCashUU.ПолучитьОбъект();
	СпрОбъект.Запрос 					= ТекстЗапросаBalanceCashUU();
	СпрОбъект.ТекстКлавиатуры			= Нстр("ru = 'Остаток ДС по УУ'");
	СпрОбъект.Определение 				= Нстр("ru = 'Остатки денежных средств по управленческому учету'");
	СпрОбъект.ИсточникПолученияДанных 	= СпрОбъект.Ссылка;
	СпрОбъект.ИспользоватьТолькоПериод = Истина;
	СпрОбъект.Записать();
	
	СпрОбъект = Справочники.бит_КомандыБотуТелеграм.CashFlow.ПолучитьОбъект();
	СпрОбъект.Запрос 					= ТекстЗапросаCashFlow();
	СпрОбъект.ТекстКлавиатуры			= Нстр("ru = 'Денежный поток'");
	СпрОбъект.Определение 				= Нстр("ru = 'Денежный поток за период'");
	СпрОбъект.ИсточникПолученияДанных 	= СпрОбъект.Ссылка;
	СпрОбъект.ИспользоватьНачалоИКонецПериода = Истина;
	СпрОбъект.Записать();
	
	СпрОбъект = Справочники.бит_КомандыБотуТелеграм.AllPaymentRequestToday.ПолучитьОбъект();
	СпрОбъект.Запрос 					= ТекстЗапросаAllPaymentRequestToday();
	СпрОбъект.ТекстКлавиатуры			= Нстр("ru = 'Сумма плановых заявок'");
	СпрОбъект.Определение 				= Нстр("ru = 'Сумма всех Заявок на расходование денежных средств на текущий день'");
	СпрОбъект.ИсточникПолученияДанных 	= СпрОбъект.Ссылка;
	СпрОбъект.Параметры.Очистить();
	СтрокаПараметров = СпрОбъект.Параметры.Добавить();
	СтрокаПараметров.Наименование 		= "ТекущийДень";
	СтрокаПараметров.Значение 			= "ТекущаяДатаСеанса()";
	СпрОбъект.Записать();
	
	СпрОбъект = Справочники.бит_КомандыБотуТелеграм.AllPaymentInflowToday.ПолучитьОбъект();
	СпрОбъект.Запрос 					= ТекстЗапросаAllPaymentInflowToday();
	СпрОбъект.ТекстКлавиатуры			= Нстр("ru = 'Сумма плановых поступлений'");
	СпрОбъект.Определение 				= Нстр("ru = 'Сумма всех Планируемых поступлений денежных средств на текущий день'");
	СпрОбъект.ИсточникПолученияДанных 	= СпрОбъект.Ссылка;
	СпрОбъект.Параметры.Очистить();
	СтрокаПараметров = СпрОбъект.Параметры.Добавить();
	СтрокаПараметров.Наименование 		= "ТекущийДень";
	СтрокаПараметров.Значение 			= "ТекущаяДатаСеанса()";
	СпрОбъект.Записать();
	
	СпрОбъект = Справочники.бит_КомандыБотуТелеграм.Revenue.ПолучитьОбъект();
	СпрОбъект.Запрос 					= ТекстЗапросаRevenue();
	СпрОбъект.ТекстКлавиатуры			= Нстр("ru = 'Выручка'");
	СпрОбъект.Определение 				= Нстр("ru = 'Выручка за период (из подсистемы бюджетирование, по сценарию Факт)'");
	СпрОбъект.ИсточникПолученияДанных 	= СпрОбъект.Ссылка;
	СпрОбъект.ИспользоватьНачалоИКонецПериода = Истина;
	СпрОбъект.Записать();
	
	СпрОбъект = Справочники.бит_КомандыБотуТелеграм.Expenses.ПолучитьОбъект();
	СпрОбъект.Запрос 					= ТекстЗапросаExpenses();
	СпрОбъект.ТекстКлавиатуры			= Нстр("ru = 'Затраты'");
	СпрОбъект.Определение 				= Нстр("ru = 'Затраты за период (из подсистемы бюджетирование, по сценарию Факт)'");
	СпрОбъект.ИсточникПолученияДанных 	= СпрОбъект.Ссылка;
	СпрОбъект.ИспользоватьНачалоИКонецПериода = Истина;
	СпрОбъект.Записать();
	
	СпрОбъект = Справочники.бит_КомандыБотуТелеграм.GrossProfit.ПолучитьОбъект();
	СпрОбъект.Запрос 					= ТекстЗапросаGrossProfit();
	СпрОбъект.ТекстКлавиатуры			= Нстр("ru = 'Валовая прибыль'");
	СпрОбъект.Определение 				= Нстр("ru = 'Валовая прибыль за период (из подсистемы бюджетирование, по сценарию Факт)'");
	СпрОбъект.ИсточникПолученияДанных 	= СпрОбъект.Ссылка;
	СпрОбъект.ИспользоватьНачалоИКонецПериода = Истина;
	СпрОбъект.Записать();
	
	СпрОбъект = Справочники.бит_КомандыБотуТелеграм.GrossProfitability.ПолучитьОбъект();
	СпрОбъект.Запрос 					= ТекстЗапросаGrossProfitability();
	СпрОбъект.ТекстКлавиатуры			= Нстр("ru = 'Валовая рентабельность'");
	СпрОбъект.Определение 				= Нстр("ru = 'Валовая рентабельность (из подсистемы бюджетирование, по сценарию Факт)'");
	СпрОбъект.ИсточникПолученияДанных 	= СпрОбъект.Ссылка;
	СпрОбъект.ИспользоватьНачалоИКонецПериода = Истина;
	СпрОбъект.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаBalanceCashBU() Экспорт 

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	Хозрасчетный.Ссылка
				|ПОМЕСТИТЬ СчетаКассы
				|ИЗ
				|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
				|ГДЕ
				|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Касса))
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	Хозрасчетный.Ссылка
				|ПОМЕСТИТЬ РасчетныеСчета
				|ИЗ
				|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
				|ГДЕ
				|	Хозрасчетный.Ссылка В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВалютныеСчета))
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	""Касса"" КАК Субконто,
				|	ВЫБОР
				|		КОГДА ХозрасчетныйОстатки.Счет.Валютный
				|			ТОГДА ЕСТЬNULL(ХозрасчетныйОстатки.ВалютнаяСуммаОстатокДт, 0)
				|		ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокДт, 0)
				|	КОНЕЦ КАК Сумма,
				|	ВЫБОР
				|		КОГДА ХозрасчетныйОстатки.Счет.Валютный
				|			ТОГДА ПРЕДСТАВЛЕНИЕССЫЛКИ(ХозрасчетныйОстатки.Валюта)
				|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(Константы.ВалютаРегламентированногоУчета)
				|	КОНЕЦ КАК Валюта
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.Остатки(
				|			&Период,
				|			Счет В
				|				(ВЫБРАТЬ
				|					Счета.Ссылка
				|				ИЗ
				|					СчетаКассы КАК Счета),
				|			,
				|			) КАК ХозрасчетныйОстатки
				|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
				|		ПО (ИСТИНА)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ХозрасчетныйОстатки.Субконто1.НомерСчета,
				|	ВЫБОР
				|		КОГДА ХозрасчетныйОстатки.Счет.Валютный
				|			ТОГДА ЕСТЬNULL(ХозрасчетныйОстатки.ВалютнаяСуммаОстатокДт, 0)
				|		ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокДт, 0)
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА ХозрасчетныйОстатки.Счет.Валютный
				|			ТОГДА ПРЕДСТАВЛЕНИЕССЫЛКИ(ХозрасчетныйОстатки.Валюта)
				|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(Константы.ВалютаРегламентированногоУчета)
				|	КОНЕЦ
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.Остатки(
				|			&Период,
				|			Счет В
				|				(ВЫБРАТЬ
				|					Счета.Ссылка
				|				ИЗ
				|					РасчетныеСчета КАК Счета),
				|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета),
				|			) КАК ХозрасчетныйОстатки
				|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
				|		ПО (ИСТИНА)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаBalanceCashUU() Экспорт 

	ТекстЗапроса = "ВЫБРАТЬ
				|	ВЫБОР
				|		КОГДА СведенияОбОстаткахДС.ВидДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.бит_ВидыДенежныхСредств.Наличные)
				|			ТОГДА ""Касса""
				|		ИНАЧЕ СведенияОбОстаткахДС.БанковскийСчет.НомерСчета
				|	КОНЕЦ КАК НомерСчета,
				|	СУММА(ЕСТЬNULL(СведенияОбОстаткахДС.СуммаКон, 0)) КАК Сумма,
				|	ПРЕДСТАВЛЕНИЕССЫЛКИ(СведенияОбОстаткахДС.Валюта) КАК Валюта
				|ИЗ
				|	РегистрСведений.бит_СведенияОбОстаткахДенежныхСредств.СрезПоследних(&Период, ) КАК СведенияОбОстаткахДС
				|
				|СГРУППИРОВАТЬ ПО
				|	ВЫБОР
				|		КОГДА СведенияОбОстаткахДС.ВидДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.бит_ВидыДенежныхСредств.Наличные)
				|			ТОГДА ""Касса""
				|		ИНАЧЕ СведенияОбОстаткахДС.БанковскийСчет.НомерСчета
				|	КОНЕЦ,
				|	ПРЕДСТАВЛЕНИЕССЫЛКИ(СведенияОбОстаткахДС.Валюта)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаCashFlow() Экспорт 

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СУММА(ВЫБОР
				|			КОГДА бит_ОборотыПоБюджетамОбороты.СтатьяОборотов.РасходДоход = ЗНАЧЕНИЕ(Перечисление.бит_РасходДоход.Поступление)
				|				ТОГДА бит_ОборотыПоБюджетамОбороты.СуммаРеглОборот
				|			ИНАЧЕ 0
				|		КОНЕЦ) КАК СуммаПоступление,
				|	ВЫБОР
				|		КОГДА бит_ОборотыПоБюджетамОбороты.СтатьяОборотов.РасходДоход = ЗНАЧЕНИЕ(Перечисление.бит_РасходДоход.Расходование)
				|			ТОГДА бит_ОборотыПоБюджетамОбороты.СуммаРеглОборот
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК СуммаРасходование
				|ПОМЕСТИТЬ Обороты
				|ИЗ
				|	РегистрНакопления.бит_ОборотыПоБюджетам.Обороты(
				|			&НачалоПериода,
				|			&КонецПериода,
				|			,
				|			Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт)
				|				И СтатьяОборотов.ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.бит_ТипыСтатейОборотов.БДДС)) КАК бит_ОборотыПоБюджетамОбороты
				|
				|СГРУППИРОВАТЬ ПО
				|	ВЫБОР
				|		КОГДА бит_ОборотыПоБюджетамОбороты.СтатьяОборотов.РасходДоход = ЗНАЧЕНИЕ(Перечисление.бит_РасходДоход.Расходование)
				|			ТОГДА бит_ОборотыПоБюджетамОбороты.СуммаРеглОборот
				|		ИНАЧЕ 0
				|	КОНЕЦ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	СУММА(Обороты.СуммаПоступление - Обороты.СуммаРасходование) КАК Сумма,
				|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Константы.ВалютаРегламентированногоУчета) КАК Валюта
				|ИЗ
				|	Обороты КАК Обороты,
				|	Константы КАК Константы
				|
				|СГРУППИРОВАТЬ ПО
				|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Константы.ВалютаРегламентированногоУчета)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаAllPaymentRequestToday() Экспорт 

	ТекстЗапроса = "ВЫБРАТЬ
				|	бит_ПланируемыйРасходДенежныхСредствОстатки.СуммаРеглОстаток КАК Сумма,
				|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Константы.ВалютаРегламентированногоУчета) КАК Валюта
				|ИЗ
				|	РегистрНакопления.бит_ПланируемыйРасходДенежныхСредств.Остатки(
				|			,
				|			ДокументПланирования В
				|				(ВЫБРАТЬ
				|					бит_ЗаявкаНаРасходованиеСредств.Ссылка
				|				ИЗ
				|					Документ.бит_ЗаявкаНаРасходованиеСредств КАК бит_ЗаявкаНаРасходованиеСредств
				|				ГДЕ
				|					бит_ЗаявкаНаРасходованиеСредств.ДатаРасхода = &ТекущийДень)) КАК бит_ПланируемыйРасходДенежныхСредствОстатки,
				|	Константы КАК Константы";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаAllPaymentInflowToday() Экспорт 

	ТекстЗапроса = "ВЫБРАТЬ
				|	бит_ПланируемоеПоступлениеДенежныхСредствОбороты.СуммаРеглОборот КАК Сумма,
				|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Константы.ВалютаРегламентированногоУчета) КАК Валюта
				|ИЗ
				|	РегистрНакопления.бит_ПланируемоеПоступлениеДенежныхСредств.Обороты(
				|			,
				|			,
				|			,
				|			ДокументПланирования В
				|				(ВЫБРАТЬ
				|					бит_ПланируемоеПоступлениеДенежныхСредств.Ссылка
				|				ИЗ
				|					Документ.бит_ПланируемоеПоступлениеДенежныхСредств КАК бит_ПланируемоеПоступлениеДенежныхСредств
				|				ГДЕ
				|					бит_ПланируемоеПоступлениеДенежныхСредств.ДатаПоступления = &ТекущийДень)) КАК бит_ПланируемоеПоступлениеДенежныхСредствОбороты,
				|	Константы КАК Константы";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаRevenue() Экспорт 

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СУММА(бит_ОборотыПоБюджетамОбороты.СуммаРеглОборот) КАК Сумма,
				|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Константы.ВалютаРегламентированногоУчета) КАК Валюта
				|ИЗ
				|	РегистрНакопления.бит_ОборотыПоБюджетам.Обороты(
				|			&НачалоПериода,
				|			&КонецПериода,
				|			,
				|			Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт)
				|				И СтатьяОборотов.РасходДоход = ЗНАЧЕНИЕ(Перечисление.бит_РасходДоход.Поступление)
				|				И СтатьяОборотов.ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.бит_ТипыСтатейОборотов.БДР)) КАК бит_ОборотыПоБюджетамОбороты,
				|	Константы КАК Константы
				|
				|СГРУППИРОВАТЬ ПО
				|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Константы.ВалютаРегламентированногоУчета)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаExpenses() Экспорт 

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СУММА(бит_ОборотыПоБюджетамОбороты.СуммаРеглОборот) КАК Сумма,
				|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Константы.ВалютаРегламентированногоУчета) КАК Валюта
				|ИЗ
				|	РегистрНакопления.бит_ОборотыПоБюджетам.Обороты(
				|			&НачалоПериода,
				|			&КонецПериода,
				|			,
				|			Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт)
				|				И СтатьяОборотов.РасходДоход = ЗНАЧЕНИЕ(Перечисление.бит_РасходДоход.Расходование)
				|				И СтатьяОборотов.ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.бит_ТипыСтатейОборотов.БДР)) КАК бит_ОборотыПоБюджетамОбороты,
				|	Константы КАК Константы
				|
				|СГРУППИРОВАТЬ ПО
				|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Константы.ВалютаРегламентированногоУчета)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаGrossProfit() Экспорт 

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СУММА(ВЫБОР
				|			КОГДА бит_ОборотыПоБюджетамОбороты.СтатьяОборотов.РасходДоход = ЗНАЧЕНИЕ(Перечисление.бит_РасходДоход.Поступление)
				|				ТОГДА бит_ОборотыПоБюджетамОбороты.СуммаРеглОборот
				|			ИНАЧЕ 0
				|		КОНЕЦ) КАК СуммаПоступление,
				|	СУММА(ВЫБОР
				|			КОГДА бит_ОборотыПоБюджетамОбороты.СтатьяОборотов.РасходДоход = ЗНАЧЕНИЕ(Перечисление.бит_РасходДоход.Расходование)
				|				ТОГДА бит_ОборотыПоБюджетамОбороты.СуммаРеглОборот
				|			ИНАЧЕ 0
				|		КОНЕЦ) КАК СуммаРасходование
				|ПОМЕСТИТЬ Обороты
				|ИЗ
				|	РегистрНакопления.бит_ОборотыПоБюджетам.Обороты(
				|			&НачалоПериода,
				|			&КонецПериода,
				|			,
				|			Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт)
				|				И СтатьяОборотов.ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.бит_ТипыСтатейОборотов.БДР)) КАК бит_ОборотыПоБюджетамОбороты
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	СУММА(Обороты.СуммаПоступление - Обороты.СуммаРасходование) КАК Сумма,
				|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Константы.ВалютаРегламентированногоУчета) КАК Валюта
				|ИЗ
				|	Обороты КАК Обороты,
				|	Константы КАК Константы
				|
				|СГРУППИРОВАТЬ ПО
				|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Константы.ВалютаРегламентированногоУчета)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаGrossProfitability() Экспорт 

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СУММА(ВЫБОР
				|			КОГДА бит_ОборотыПоБюджетамОбороты.СтатьяОборотов.РасходДоход = ЗНАЧЕНИЕ(Перечисление.бит_РасходДоход.Поступление)
				|				ТОГДА бит_ОборотыПоБюджетамОбороты.СуммаРеглОборот
				|			ИНАЧЕ 0
				|		КОНЕЦ) КАК СуммаПоступление,
				|	СУММА(ВЫБОР
				|			КОГДА бит_ОборотыПоБюджетамОбороты.СтатьяОборотов.РасходДоход = ЗНАЧЕНИЕ(Перечисление.бит_РасходДоход.Расходование)
				|				ТОГДА бит_ОборотыПоБюджетамОбороты.СуммаРеглОборот
				|			ИНАЧЕ 0
				|		КОНЕЦ) КАК СуммаРасходование
				|ПОМЕСТИТЬ ВаловаяПрибыль
				|ИЗ
				|	РегистрНакопления.бит_ОборотыПоБюджетам.Обороты(
				|			&НачалоПериода,
				|			&КонецПериода,
				|			,
				|			Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт)
				|				И СтатьяОборотов.ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.бит_ТипыСтатейОборотов.БДР)) КАК бит_ОборотыПоБюджетамОбороты
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СУММА(ЕСТЬNULL(бит_ОборотыПоБюджетамОбороты.СуммаРеглОборот, 0)) КАК Сумма
				|ПОМЕСТИТЬ Выручка
				|ИЗ
				|	РегистрНакопления.бит_ОборотыПоБюджетам.Обороты(
				|			&НачалоПериода,
				|			&КонецПериода,
				|			,
				|			Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт)
				|				И СтатьяОборотов.РасходДоход = ЗНАЧЕНИЕ(Перечисление.бит_РасходДоход.Поступление)
				|				И СтатьяОборотов.ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.бит_ТипыСтатейОборотов.БДР)) КАК бит_ОборотыПоБюджетамОбороты
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	СУММА(ВЫБОР
				|			КОГДА Выручка.Сумма <> 0
				|				ТОГДА (ВаловаяПрибыль.СуммаПоступление - ВаловаяПрибыль.СуммаРасходование) / Выручка.Сумма
				|			ИНАЧЕ 0
				|		КОНЕЦ) КАК Сумма,
				|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Константы.ВалютаРегламентированногоУчета) КАК Валюта
				|ИЗ
				|	ВаловаяПрибыль КАК ВаловаяПрибыль,
				|	Выручка КАК Выручка,
				|	Константы КАК Константы
				|
				|СГРУППИРОВАТЬ ПО
				|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Константы.ВалютаРегламентированногоУчета)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли
