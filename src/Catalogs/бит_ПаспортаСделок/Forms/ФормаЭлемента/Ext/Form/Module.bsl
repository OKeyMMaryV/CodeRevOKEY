
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
		
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли; 
	
	УправлениеЭлементамиФормы();
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	
	СтрОбъекта = Новый Структура("ДоговорКонтрагента, ВалютаДоговора, Сумма");
	ЗаполнитьЗначенияСвойств(СтрОбъекта, Объект);
	ДоговорКонтрагентаПриИзмененииСервер(СтрОбъекта);
	ЗаполнитьЗначенияСвойств(Объект, СтрОбъекта);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте                                           
Процедура Подключаемый_УстановитьСостояние(Команда)
	                           
	ДопПараметры = Новый Структура("СостояниеСтрока", Команда.Имя);
	Оповещение = Новый ОписаниеОповещения("УстановитьСостояниеОкончание", ЭтотОбъект, ДопПараметры);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ВыполнитьОбработкуОповещения(Оповещение, Истина);
	Иначе
		ТекстВопроса = НСтр("ru = 'Установка состояния возможна только после записи.
			|Данные будут записаны.'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена,,КодВозвратаДиалога.Отмена);
	КонецЕсли;
	
КонецПроцедуры

// Процедура окончание процедуры "УстановитьСостояние". 
//
// Параметры:
//  Результат - КодВозвратаДиалога
//  Параметры - Структура.
//
&НаКлиенте 
Процедура УстановитьСостояниеОкончание(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		Записать();
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Задайте дату смены состояния.'");
	Оповещение = Новый ОписаниеОповещения("УстановитьДатуОкончание", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВводДаты(Оповещение, ТекущаяДата(), ТекстВопроса, ЧастиДаты.Дата);
                
КонецПроцедуры

// Процедура окончание процедуры "УстановитьСостояниеОкончание". 
//
// Параметры:
//  Дата - Дата
//  ДополнительныеДанные - Структура.
//
&НаКлиенте 
Процедура УстановитьДатуОкончание(Дата, ДополнительныеПараметры) Экспорт
	
	Если Дата = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СостояниеНаСервере(Дата, ДополнительныеПараметры.СостояниеСтрока);
	
	УправлениеЭлементамиФормы();
                
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	Состояние = Справочники.бит_ПаспортаСделок.ПолучитьСостояние(Объект.Ссылка);
	
	ЗначенияСостоянийСделок = Метаданные.Перечисления.бит_СостоянияПаспортовСделок.ЗначенияПеречисления;
	Для Каждого ЗначениеПеречисления Из ЗначенияСостоянийСделок Цикл
		
		Если Объект.ВидРегистрацииДоговора = Перечисления.бит_ВидыРегистрацийДоговоров.ПаспортСделки
			И (ЗначениеПеречисления = ЗначенияСостоянийСделок.Черновик
			ИЛИ ЗначениеПеречисления = ЗначенияСостоянийСделок.ПоданоЗаявлениеНаОткрытие
			ИЛИ ЗначениеПеречисления = ЗначенияСостоянийСделок.ПринятБанком
			ИЛИ ЗначениеПеречисления = ЗначенияСостоянийСделок.ПоданоЗаявлениеНаПереоформление
			ИЛИ ЗначениеПеречисления = ЗначенияСостоянийСделок.Переоформлен
			ИЛИ ЗначениеПеречисления = ЗначенияСостоянийСделок.ПоданоЗаявлениеНаЗакрытие
			ИЛИ ЗначениеПеречисления = ЗначенияСостоянийСделок.Закрыт) Тогда 
			
			ДобавитьКомандуСостояния(ЗначениеПеречисления);		
			
		ИначеЕсли Объект.ВидРегистрацииДоговора = Перечисления.бит_ВидыРегистрацийДоговоров.УникальныйНомерДоговора
			И (ЗначениеПеречисления = ЗначенияСостоянийСделок.Записан
			ИЛИ ЗначениеПеречисления = ЗначенияСостоянийСделок.ПоданоЗаявлениеОПостановкеНаУчет
			ИЛИ ЗначениеПеречисления = ЗначенияСостоянийСделок.ПоставленНаУчет
			ИЛИ ЗначениеПеречисления = ЗначенияСостоянийСделок.ПоданоЗаявлениеНаВнесениеИзменений
			ИЛИ ЗначениеПеречисления = ЗначенияСостоянийСделок.ВнесеныИзменения
			ИЛИ ЗначениеПеречисления = ЗначенияСостоянийСделок.ПоданоЗаявлениеОСнятииСУчета
			ИЛИ ЗначениеПеречисления = ЗначенияСостоянийСделок.СнятСУчета) Тогда 
			
			ДобавитьКомандуСостояния(ЗначениеПеречисления);		
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры // ПодготовитьФормуНаСервере()

&НаСервере
Процедура ДобавитьКомандуСостояния(ЗначениеПеречисления)

	НоваяКоманда 			= Команды.Добавить(ЗначениеПеречисления.Имя);
	НоваяКоманда.Действие 	= "Подключаемый_УстановитьСостояние";
	
	НовыйЭлемент 			= Элементы.Добавить(ЗначениеПеречисления.Имя,Тип("КнопкаФормы"),Элементы.ПодменюСостояние);
	НовыйЭлемент.ИмяКоманды = ЗначениеПеречисления.Имя;
	НовыйЭлемент.Заголовок 	= ЗначениеПеречисления.Синоним;

КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	УНД = ?(Объект.ВидРегистрацииДоговора = Перечисления.бит_ВидыРегистрацийДоговоров.УникальныйНомерДоговора, Истина, Ложь);
	
	Элементы.ПричинаЗакрытия.Заголовок = ?(УНД, НСтр("ru = 'Причина снятия с учета'"),НСтр("ru = 'Причина закрытия'"));
	
	Заголовок = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(
				?(УНД,НСтр("ru = 'Уникальный номер договора %1% (%2%)'"),НСтр("ru = 'Паспорт сделки %1% (%2%)'")), 
				Объект.Код, Состояние);
	
	ИмяСостояния = бит_ОбщегоНазначения.ПолучитьИмяЗначенияПеречисления(Перечисления.бит_СостоянияПаспортовСделок,Состояние);
	
	Для Каждого ТекЭлемент Из Элементы.ПодменюСостояние.ПодчиненныеЭлементы Цикл
		
		ТекЭлемент.Пометка = ТекЭлемент.Имя = ИмяСостояния;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СостояниеНаСервере(Знач Дата, Знач СостояниеСтрока)
	
	Состояние = Перечисления.бит_СостоянияПаспортовСделок[СостояниеСтрока];
	Справочники.бит_ПаспортаСделок.УстановитьСостояние(Объект.Ссылка, Дата, Состояние);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДоговорКонтрагентаПриИзмененииСервер(Объект)

	Справочники.бит_ПаспортаСделок.ЗаполнитьОбъектПоДоговоруКонтрагента(Объект);

КонецПроцедуры // ДоговорКонтрагентаПриИзмененииСервер()

#КонецОбласти
