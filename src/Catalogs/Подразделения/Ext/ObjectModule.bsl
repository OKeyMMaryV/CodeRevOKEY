#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

// Процедура - обработчик события "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда	
		Возврат;     	
	КонецЕсли; 
	
    // Не удалять пока нужна в УппКа
	// Выполним синхронизацию пометки на удаление объекта и дополнительных файлов.
	бит_ХранениеДополнительнойИнформации.СинхронизацияПометкиНаУдалениеУДополнительныхФайлов(ЭтотОбъект);
	
	// проверка изменения пометки на удаление в режиме синхронизации
	флРежимСинхронизации = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("бит_СинхронизироватьПодразделенияРеглЦФО");
	
	Если флРежимСинхронизации И НЕ ПометкаУдаления = Ссылка.ПометкаУдаления Тогда
	
		Отказ = Истина;
		ТекстСообщения =  НСтр("ru = 'Включен режим синхронизации подразделений регл. и ЦФО. Изменение пометки на удаление вручную запрещено.'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
	
	КонецЕсли; 
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ОбработкаЗаполнения" объекта справочника.
// 
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	                 	
	Если ЭтоНовый() Тогда
		
		РегистрыСведений.бит_МаскиКодов.ЗаполнитьКодификаторДляЭлементаСправочника(ДанныеЗаполнения, Ссылка, Кодификатор);
		
	КонецЕсли; 
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ПриКопировании(ОбъектКопирования)
	
	Кодификатор = "";
	
	Если ЗначениеЗаполнено(ОбъектКопирования.Родитель) Тогда
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("Родитель", ОбъектКопирования.Родитель);
	Иначе
		ДанныеЗаполнения = Неопределено;
	КонецЕсли;
	
	РегистрыСведений.бит_МаскиКодов.ЗаполнитьКодификаторДляЭлементаСправочника(ДанныеЗаполнения, Ссылка, Кодификатор);
	
КонецПроцедуры // ПриКопировании()

#КонецОбласти

#КонецЕсли
