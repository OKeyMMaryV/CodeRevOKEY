
#Область ОписаниеПеременных

&НаКлиенте 
Перем мСчетАП; // Хранит текущие значения Счета А/П.

&НаКлиенте 
Перем мСчетА; // Хранит текущие значения Счета А.

&НаКлиенте 
Перем мСчетП; // Хранит текущие значения Счета П.
        
#КонецОбласти

#Область ОбработчикиСобытийФормы

// Процедура - обработчик события "ПриСозданииНаСервере" формы.
// 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Изменение кода. Начало. 03.04.2014{{
	УстановитьПараметрыВыбораДляСчетов();
    // Изменение кода. Конец. 03.04.2014}}

КонецПроцедуры // ПриСозданииНаСервере()
  
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРазнесение

&НаКлиенте
Процедура РазнесениеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.Разнесение.ТекущиеДанные;
	УровеньДтл    = 4;
	
	НоваяСтрока = Объект.Разнесение.Добавить();
	
	Если Копирование Тогда
				
		НоваяСтрока.СчетА 			   = ТекущиеДанные.СчетА;
		НоваяСтрока.СчетП 			   = ТекущиеДанные.СчетП;
		НоваяСтрока.УровеньДетализации = ТекущиеДанные.УровеньДетализации;
			
	Иначе
				
		НоваяСтрока.УровеньДетализации = УровеньДтл;
	
	КонецЕсли;
	
	Элементы.Разнесение.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	
	мСчетАП = НоваяСтрока.СчетАП;
	мСчетА  = НоваяСтрока.СчетА;
	мСчетП  = НоваяСтрока.СчетП;
	
КонецПроцедуры // РазнесениеПередНачаломДобавления()

&НаКлиенте
Процедура РазнесениеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	мСчетАП = ТекущиеДанные.СчетАП;
	мСчетА  = ТекущиеДанные.СчетА;
	мСчетП  = ТекущиеДанные.СчетП; 	
	
КонецПроцедуры // РазнесениеПриНачалеРедактирования()

&НаКлиенте
Процедура РазнесениеСчетАПНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Разнесение.ТекущиеДанные;	
	мСчетАП = ТекущиеДанные.СчетАП;
	
	ОткрытьФормуВыбораСчета(Элемент, ВидСчета.АктивноПассивный);	
	
КонецПроцедуры // РазнесениеСчетАПНачалоВыбора()

&НаКлиенте
Процедура РазнесениеСчетАППриИзменении(Элемент)
	   	
	ТекущиеДанные = Элементы.Разнесение.ТекущиеДанные;	
	Ид = ТекущиеДанные.ПолучитьИдентификатор();
	Отказ = Ложь;
	
	Если Не СчетКорректен(ТекущиеДанные.СчетАП, ВидСчета.АктивноПассивный, Ид) Тогда   		
		ТекстСообщения = Нстр("ru = 'Ошибка выбора счета. Счет А/П должен быть активно-пассивным и не забалансовым, а также должны совпадать признаки валютного учета у всех счетов в строке.'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);    		
		Отказ = Истина; 			
	КонецЕсли;
	
	Для каждого СтрокаТабл Из Объект.Разнесение Цикл
		
		Если СтрокаТабл.ПолучитьИдентификатор() <> Ид И СтрокаТабл.СчетАП = ТекущиеДанные.СчетАП Тогда 
			НомСтр  = Строка(СтрокаТабл.НомерСтроки);
			СчетСтр = Строка(СтрокаТабл.СчетАП);
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Ошибка выбора счета. Значение %1 уже подобрано в строке № %2.'"),
										СчетСтр, НомСтр);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина; 				 						
		КонецЕсли; 	
		
	КонецЦикла;
	
	Если Отказ Тогда 	
		ТекущиеДанные.СчетАП = мСчетАП;  	
	КонецЕсли;
	
КонецПроцедуры // РазнесениеСчетАППриИзменении()

&НаКлиенте
Процедура РазнесениеСчетАНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Разнесение.ТекущиеДанные;	
	мСчетА = ТекущиеДанные.СчетА;
	
	ОткрытьФормуВыбораСчета(Элемент, ВидСчета.Активный);
	
КонецПроцедуры // РазнесениеСчетАНачалоВыбора()

&НаКлиенте
Процедура РазнесениеСчетАПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Разнесение.ТекущиеДанные;
	Ид = ТекущиеДанные.ПолучитьИдентификатор();
	
	Если Не СчетКорректен(ТекущиеДанные.СчетА, ВидСчета.Активный, Ид) Тогда
		
		ТекстСообщения = Нстр("ru = 'Ошибка выбора счета. Счет А должен быть активным и не забалансовым, а также должны совпадать признаки валютного учета у всех счетов в строке.'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		
		ТекущиеДанные.СчетА = мСчетА;
		
	КонецЕсли;
	
КонецПроцедуры // РазнесениеСчетАПриИзменении()

&НаКлиенте
Процедура РазнесениеСчетПНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Разнесение.ТекущиеДанные;	
	мСчетП = ТекущиеДанные.СчетП;
	
	ОткрытьФормуВыбораСчета(Элемент, ВидСчета.Пассивный);
	
КонецПроцедуры // РазнесениеСчетПНачалоВыбора()

&НаКлиенте
Процедура РазнесениеСчетППриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Разнесение.ТекущиеДанные;
	Ид = ТекущиеДанные.ПолучитьИдентификатор();
	
	Если Не СчетКорректен(ТекущиеДанные.СчетП, ВидСчета.Пассивный, Ид) Тогда
		
		ТекстСообщения = Нстр("ru = 'Ошибка выбора счета. Счет П должен быть пассивным и не забалансовым, а также должны совпадать признаки валютного учета у всех счетов в строке.'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		
		ТекущиеДанные.СчетП = мСчетП;
		
	КонецЕсли;
	
КонецПроцедуры // РазнесениеСчетППриИзменении()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СчетКорректен(Счет, Вид, Ид)

	СчетКорректен = Истина;
	
	Если ЗначениеЗаполнено(Счет) Тогда
        
        СвСч = бит_БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Счет);
        
		Если (СвСч.Вид <> Вид ИЛИ СвСч.Забалансовый) Тогда	
            
            СчетКорректен = Ложь;			
            
        Иначе
            
            ТекущиеДанные = Объект.Разнесение.НайтиПоИдентификатору(Ид);
        		
            Если ЗначениеЗаполнено(ТекущиеДанные.СчетАП) Тогда
                СвСчАП = бит_БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(ТекущиеДанные.СчетАП);
    			ВалютныйСчет = СвСчАП.Валютный;
            КонецЕсли;
            
            Если ЗначениеЗаполнено(ТекущиеДанные.СчетА) Тогда
                СвСчА = бит_БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(ТекущиеДанные.СчетА);
    			Если ВалютныйСчет = Неопределено Тогда
    				ВалютныйСчет = СвСчА.Валютный;
    			ИначеЕсли ВалютныйСчет <> СвСчА.Валютный Тогда
    				СчетКорректен = Ложь;
    			КонецЕсли;
            КонецЕсли;
            
            Если ЗначениеЗаполнено(ТекущиеДанные.СчетП) Тогда
                СвСчП = бит_БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(ТекущиеДанные.СчетП);
    			Если ВалютныйСчет <> СвСчП.Валютный Тогда
    				СчетКорректен = Ложь;
    			КонецЕсли;
            КонецЕсли;
        
        КонецЕсли;				
			
	КонецЕсли;

	Возврат СчетКорректен;
	
КонецФункции // СчетКорректен() 

// Процедура устанвливает параметры выбора для элементов формы. 
// 
// Параметры:
//  МассивЭлементов - Массив.
// 
&НаСервере
Процедура УстановитьПараметрыВыбораДляСчетов()

	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(Элементы.РазнесениеСчетАП);
	МассивЭлементов.Добавить(Элементы.РазнесениеСчетА);
	МассивЭлементов.Добавить(Элементы.РазнесениеСчетП);
	
	бит_РаботаСДиалогамиСервер.УстановитьПараметрыВыбораДляЭлементов(МассивЭлементов);
	
КонецПроцедуры // УстановитьПараметрыВыбораДляСчетов() 

&НаКлиенте
Процедура ОткрытьФормуВыбораСчета(Элемент, Вид)
	
	//БИТ Тртилек 02.07.2012
	//Отбор = Новый Структура;
	//Отбор.Вставить("Вид"		 , Вид);
	//Отбор.Вставить("Забалансовый", Ложь);
	//
	//ПараметрыФормы = Новый Структура;
	//ПараметрыФормы.Вставить("Отбор", Отбор);
	//
	//ОткрытьФорму("ПланСчетов.бит_Дополнительный_2.Форма.ФормаВыбора", 
	//					ПараметрыФормы, Элемент);	
	//БИТ Тртилек
	
	// 1c-izhtc, ChuckNorris, 03.07.2015 ( 
	Если Вид = ВидСчета.АктивноПассивный Тогда
		СчетРасшифровки = Элементы.Разнесение.ТекущиеДанные.СчетАП;
	ИначеЕсли Вид = ВидСчета.Активный Тогда
		СчетРасшифровки = Элементы.Разнесение.ТекущиеДанные.СчетА;
	Иначе СчетРасшифровки = Элементы.Разнесение.ТекущиеДанные.СчетП;
	КонецЕсли;
	
	ОткрытьФормуМодально("ПланСчетов.бит_Дополнительный_2.ФормаВыбора", Новый Структура("ТекущаяСтрока", СчетРасшифровки), Элемент);
	// 1c-izhtc, ChuckNorris, 03.07.2015 )

КонецПроцедуры // ОткрытьФормуВыбораСчета()

#КонецОбласти
