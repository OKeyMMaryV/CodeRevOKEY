#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ТаблицаСоставляющих = СоставляющиеПлатежа.Выгрузить();
	
	// Проверим набор составляющих платежа
	МассивСоставляющих = ТаблицаСоставляющих.ВыгрузитьКолонку("СоставляющаяПлатежа");
	
	бит_РаботаСКоллекциями.УдалитьПовторяющиесяЭлементыМассива(МассивСоставляющих, Истина);
	
	КоличествоОсновнойДолг  = 0;
	КоличествоПроценты		= 0;
	
	Для Каждого ТекущаяСоставляющая Из МассивСоставляющих Цикл
		
		Если ТекущаяСоставляющая.ТипПлатежаПоФинДоговору = Перечисления.бит_ТипыПлатежейПоФинансовымДоговорам.ОсновнойДолг Тогда
			КоличествоОсновнойДолг = КоличествоОсновнойДолг + 1;
		ИначеЕсли ТекущаяСоставляющая.ТипПлатежаПоФинДоговору = Перечисления.бит_ТипыПлатежейПоФинансовымДоговорам.Проценты Тогда	
			КоличествоПроценты = КоличествоПроценты + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	Если КоличествоОсновнойДолг > 1 Тогда
		ТекстСообщения = НСтр("ru='В способе расчета может быть использована только одна составляющая с типом ""Основной долг""!'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,,Отказ);
	КонецЕсли;
	Если КоличествоПроценты > 1 Тогда
		ТекстСообщения = НСтр("ru='В способе расчета может быть использована только одна составляющая с типом ""Проценты""!'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,,Отказ);
	КонецЕсли;
	
	// Проверим наборы параметров у составляющих.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоставляющиеПлатежа.СоставляющаяПлатежа,
	|	СоставляющиеПлатежа.Параметр,
	|	СоставляющиеПлатежа.ЗначениеПоУмолчанию
	|ПОМЕСТИТЬ Составляющие
	|ИЗ
	|	&СоставляющиеПлатежа КАК СоставляющиеПлатежа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Составляющие.СоставляющаяПлатежа = ЗНАЧЕНИЕ(Справочник.бит_СоставляющиеПлатежейПоФинДоговорам.ПустаяСсылка)
	|			ТОГДА ""Общие параметры""
	|		ИНАЧЕ Составляющие.СоставляющаяПлатежа
	|	КОНЕЦ КАК СоставляющаяПлатежа,
	|	Составляющие.Параметр,
	|	КОЛИЧЕСТВО(Составляющие.Параметр) КАК ПараметрКоличество
	|ИЗ
	|	Составляющие КАК Составляющие
	|
	|СГРУППИРОВАТЬ ПО
	|	Составляющие.Параметр,
	|	ВЫБОР
	|		КОГДА Составляющие.СоставляющаяПлатежа = ЗНАЧЕНИЕ(Справочник.бит_СоставляющиеПлатежейПоФинДоговорам.ПустаяСсылка)
	|			ТОГДА ""Общие параметры""
	|		ИНАЧЕ Составляющие.СоставляющаяПлатежа
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	СоставляющаяПлатежа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Составляющие";
	
	Запрос.УстановитьПараметр("СоставляющиеПлатежа", ТаблицаСоставляющих);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ПараметрКоличество > 1 Тогда
			ТекстСообщения = НСтр("ru='Для составляющей ""%1%"" параметр ""%2%"" имеет дубли. Параметр должен быть указан только 1 раз'");
			ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, Выборка.СоставляющаяПлатежа, Выборка.Параметр);
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,, Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;
	КонецЕсли; 	
	
	бит_ук_СлужебныйСервер.РегистрацияНачалоСобытия(Отказ, ЭтотОбъект.ДополнительныеСвойства);
	
	Если Не ЭтоНовый() И Не ПометкаУдаления=Ссылка.ПометкаУдаления Тогда
		// В случае установки или снятия пометки удаления не производить проверку.
		Возврат;
	КонецЕсли;       

	Для Каждого ТекущаяСтрока Из СоставляющиеПлатежа Цикл
		
		Если НЕ ТекущаяСтрока.Параметр.ТипЗначения = Неопределено Тогда
			ТекущаяСтрока.ЗначениеПоУмолчанию = ТекущаяСтрока.Параметр.ТипЗначения.ПривестиЗначение(ТекущаяСтрока.ЗначениеПоУмолчанию);
		Иначе
			ТекущаяСтрока.ЗначениеПоУмолчанию = Неопределено;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ПередЗаписью()
	
Процедура ПриЗаписи(Отказ)
		
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
		
	бит_ук_СлужебныйСервер.РегистрацияПриЗаписи(Отказ, ЭтотОбъект.ДополнительныеСвойства, Метаданные().ПолноеИмя());
		
КонецПроцедуры // ПриЗаписи()

#КонецОбласти

#КонецЕсли
