#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ОсновнаяОрганизация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	// бит_Финанс изменение кода. Начало. 22.01.2015{{
	бит_РаботаСДиалогамиСервер.РБП_Элемент_ДобавитьДинамическиеЭлементы(Элементы);
	// бит_Финанс изменение кода. Конец. 22.01.2015}}
	
	//ОК Ванюков К. +//  // 2012-03-28
	ИжТиСи_СВД_Сервер.ОК_ВывестиРеквизиты(ЭтаФорма, "Справочник.РасходыБудущихПериодов.ФормаЭлемента");
	ОК_ДополнитьДействияФормы();
	//ОК Ванюков К. -
	
	//СофтЛаб Начало 2018-09-24 3091
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Ок_ПроверятьНДС = Истина;
	КонецЕсли;
	//СофтЛаб Конец 2018-09-24 3091
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-11-16 (#3415)
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.Ок_СозданНаОснованииОперацииАксапты Тогда
		
		БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииСчета(ЭтотОбъект, Объект, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
		
		Элементы.Контрагент.Доступность             = Ложь;
        Элементы.ДоговорКонтрагента.Доступность     = Ложь;
		Элементы.Объект.Доступность                 = Ложь;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-02-06 (#3636)
		//Элементы.ПринадлежностьРасчетов.Доступность = Ложь;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-02-06 (#3636)
        Элементы.ОК_Функция.Доступность             = Ложь;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-02-06 (#3636)
		//Элементы.Родитель.Доступность               = Ложь;
		Если НРег(СокрЛП(Элементы.СубконтоЗатрат1.Заголовок)) = НРег("Функции") Тогда
			Элементы.СубконтоЗатрат1.Доступность	= Ложь;
		КонецЕсли;
		Если НРег(СокрЛП(Элементы.СубконтоЗатрат2.Заголовок)) = НРег("Функции") Тогда
			Элементы.СубконтоЗатрат2.Доступность	= Ложь;
		КонецЕсли;
		Если НРег(СокрЛП(Элементы.СубконтоЗатрат3.Заголовок)) = НРег("Функции") Тогда
			Элементы.СубконтоЗатрат3.Доступность	= Ложь;
		КонецЕсли;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-02-06 (#3636)
		Элементы.Сумма.Доступность                  = Ложь;
		Элементы.СубконтоЗатрат1.Доступность        = Ложь;
		Элементы.СубконтоЗатрат2.Доступность 		= Ложь;
		Элементы.СубконтоЗатрат2.Доступность 		= Ложь;
		
	КонецЕсли;	
		
КонецПроцедуры
//ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-11-16 (#3415)//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2019-12-29 (#3415)

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Закрыть(Объект.Ссылка);
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2019-12-29 (#3415)

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СчетЗатратПриИзменении(Элемент)
	
	БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииСчета(
		ЭтотОбъект, Объект, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	
	УстановитьВидАктива(ЭтаФорма, Объект.СчетЗатрат);
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоЗатрат1ПриИзменении(Элемент)
	
	ПриИзмененииСубконто(1);

КонецПроцедуры

&НаКлиенте
Процедура СубконтоЗатрат1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоЗатрат2ПриИзменении(Элемент)
	
	ПриИзмененииСубконто(2);

КонецПроцедуры

&НаКлиенте
Процедура СубконтоЗатрат2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоЗатрат3ПриИзменении(Элемент)
	
	ПриИзмененииСубконто(3);

КонецПроцедуры

&НаКлиенте
Процедура СубконтоЗатрат3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

// Для статей РБП по договорам добровольного страхования предлагается автоматическая установка способа
// признания расходов по календарным дням соответственно статье 272 гл.25 НК.
&НаКлиенте
Процедура ВидРБПОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УказанныйСпособПризнанияРасходов = Объект.СпособПризнанияРасходов; 
	УказанныйВидРБП = ВыбранноеЗначение;
	
	Если УказанныйВидРБП = ПредопределенноеЗначение("Перечисление.ВидыРБП.УбыткиОтРеализацииАмортизируемогоИмущества") Тогда
		Объект.СчетЗатрат = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПрочиеРасходы");
		СчетЗатратПриИзменении(Элемент);
		Объект.СпособПризнанияРасходов = ПредопределенноеЗначение("Перечисление.СпособыПризнанияРасходов.ПоМесяцам");
	КонецЕсли;
	
	Если УказанныйВидРБП = ПредопределенноеЗначение("Перечисление.ВидыРБП.УбыткиПрошлыхЛет") Тогда
		Объект.СпособПризнанияРасходов = ПредопределенноеЗначение("Перечисление.СпособыПризнанияРасходов.ВОсобомПорядке");
		Объект.СчетЗатрат = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПустаяСсылка");
		СчетЗатратПриИзменении(Элемент);
	КонецЕсли;
	
	Если ВидыРБПДобровольноеСтрахование.НайтиПоЗначению(УказанныйВидРБП) <> Неопределено Тогда
		Если УказанныйСпособПризнанияРасходов <> ПредопределенноеЗначение("Перечисление.СпособыПризнанияРасходов.ПоКалендарнымДням") Тогда
			ТекстВопроса = НСтр("ru='Расходы по добровольному страхованию следует списывать
				|пропорционально количеству календарных дней действия договора.
				|Изменить способ признания расходов?'");
				
			Оповещение = Новый ОписаниеОповещения("ВопросИзменитьСпособПризнанияРасходовЗавершение", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидРБППриИзменении(Элемент)
	
	Если ВидыРБПНУ.НайтиПоЗначению(Объект.ВидРБП) <> Неопределено Тогда
		Объект.ВидАктива = Неопределено;
	ИначеЕсли Не ЗначениеЗаполнено(Объект.ВидАктива) Тогда
		Объект.ВидАктива = ВидАктиваПоУмолчанию;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СпособПризнанияРасходовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	УказанныйСпособПризнанияРасходов = ВыбранноеЗначение; 
	УказанныйВидРБП = Объект.ВидРБП;
	Если ВидыРБПДобровольноеСтрахование.НайтиПоЗначению(УказанныйВидРБП) <> Неопределено Тогда
		Если УказанныйСпособПризнанияРасходов <> ПредопределенноеЗначение("Перечисление.СпособыПризнанияРасходов.ПоКалендарнымДням") Тогда
			СтандартнаяОбработка = Ложь;
			
			ТекстВопроса = НСтр("ru='Расходы по добровольному страхованию следует списывать
				|пропорционально количеству календарных дней действия договора.
				|Продолжить?'");
			Оповещение = Новый ОписаниеОповещения("ВопросСписыватьПропорциональноКоличествуКалендарныхДнейЗавершение", ЭтотОбъект, УказанныйСпособПризнанияРасходов);
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	БухгалтерскийУчетКлиентСервер.УстановитьНачальныеСвойстваСубконтоШапки(
		ЭтотОбъект, Объект, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	
	ВидыРБПДобровольноеСтрахование.Добавить(Перечисления.ВидыРБП.ДолгосрочноеСтрахованиеЖизни);
	ВидыРБПДобровольноеСтрахование.Добавить(Перечисления.ВидыРБП.СтрахованиеНаОплатуМедицинскихРасходов);
	ВидыРБПДобровольноеСтрахование.Добавить(Перечисления.ВидыРБП.СтрахованиеНаСлучайСмертиИУтратыРаботоспособности);
	
	ВидыРБПНУ.Добавить(Перечисления.ВидыРБП.УбыткиОтРеализацииАмортизируемогоИмущества);
	ВидыРБПНУ.Добавить(Перечисления.ВидыРБП.УбыткиПрошлыхЛет);
	ВидыРБПНУ.Добавить(Перечисления.ВидыРБП.УбыткиПрошлыхЛетОбслуживающихПроизводствИХозяйств);
	
	ВидАктиваПоУмолчанию = Метаданные.Справочники.РасходыБудущихПериодов.Реквизиты.ВидАктива.ЗначениеЗаполнения;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.ВидАктива.Доступность = (Форма.ВидыРБПНУ.НайтиПоЗначению(Объект.ВидРБП) = Неопределено);
	
	//СофтЛаб Начало 2018-09-24 3091
	#Если Сервер Тогда
		
		Если НЕ Элементы.Ок_ПроверятьНДС.Видимость
			И РольДоступна("ПолныеПрава") Тогда
			
			Элементы.Ок_ПроверятьНДС.Видимость = Истина;
			
		КонецЕсли;
		
	#КонецЕсли
	//СофтЛаб Конец 2018-09-24 3091
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидАктива(ЭтаФорма, СчетЗатрат)
	
	Если Не ЗначениеЗаполнено(ЭтаФорма.Объект.ВидАктива) Тогда
		ЭтаФорма.Объект.ВидАктива = ОпределитьВидАктиваРБП(СчетЗатрат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросИзменитьСпособПризнанияРасходовЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.СпособПризнанияРасходов = ПредопределенноеЗначение("Перечисление.СпособыПризнанияРасходов.ПоКалендарнымДням");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСписыватьПропорциональноКоличествуКалендарныхДнейЗавершение(Результат, УказанныйСпособПризнанияРасходов) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.СпособПризнанияРасходов = УказанныйСпособПризнанияРасходов;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОпределитьВидАктиваРБП(СчетСписания) Экспорт
	
	Если Не ЗначениеЗаполнено(СчетСписания) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Хозрасчетный.Ссылка В ИЕРАРХИИ (&Счет01)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ОсновныеСредства)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Хозрасчетный.Ссылка В ИЕРАРХИИ (&Счет08)
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПрочиеВнеоборотныеАктивы)
		|				ИНАЧЕ ВЫБОР
		|						КОГДА Хозрасчетный.Ссылка В ИЕРАРХИИ (&СчетЗатрат)
		|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.Запасы)
		|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы)
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ВидАктива
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Ссылка = &ТекущийСчет";

	Запрос.УстановитьПараметр("ТекущийСчет", СчетСписания);
	Запрос.УстановитьПараметр("Счет01", ПланыСчетов.Хозрасчетный.ОсновныеСредства);
	Запрос.УстановитьПараметр("Счет08", ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы);
	Массив = Новый Массив;
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.БракВПроизводстве);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ОбслуживающиеПроизводства);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасходыНаПродажу);

	Запрос.УстановитьПараметр("СчетЗатрат", Массив);

	Результат = Запрос.Выполнить().Выбрать();
	Результат.Следующий();

	Возврат Результат.ВидАктива;

КонецФункции

&НаКлиенте
Процедура ПриИзмененииСубконто(НомерСубконто)

	БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииСубконто(
		ЭтотОбъект, Объект, НомерСубконто, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДанныеОбъекта = БухгалтерскийУчетКлиентСервер.ДанныеУстановкиПараметровСубконто(
		Объект, 
		ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
		
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(ЭтаФорма, Элемент, СтандартнаяОбработка, ДанныеОбъекта);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыУстановкиСвойствСубконто(Форма)

	Результат = БухгалтерскийУчетКлиентСервер.ПараметрыУстановкиСвойствСубконтоПоШаблону(
		"СубконтоЗатрат", "", "СубконтоЗатрат", "", "СчетЗатрат");
	Результат.ДопРеквизиты.Вставить("Организация", Форма.ОсновнаяОрганизация);
	
	Возврат Результат;

КонецФункции

#КонецОбласти

//ОК Ванюков К. +//  // 2012-03-28
&НаСервере
Процедура ОК_ДополнитьДействияФормы()

//ОК Ванюков К. +// автоматическое проставление вида РБП по МСФО при выборе статьи затрат (по регистру соответствия) // 2012-03-28
	Элементы.СубконтоЗатрат1.УстановитьДействие("ПриИзменении", "ОК_СубконтоПриИзменении");
	Элементы.СубконтоЗатрат2.УстановитьДействие("ПриИзменении", "ОК_СубконтоПриИзменении");
	// +СБ. Светличный Михаил. 2017-01-25.  Справочник РБП (#2757)
	//Элементы.СубконтоЗатрат2.УстановитьДействие("ПриИзменении", "СубконтоЗатрат3");
	Элементы.СубконтоЗатрат3.УстановитьДействие("ПриИзменении", "ОК_СубконтоПриИзменении");
	Элементы.Контрагент.УстановитьДействие("ПриИзменении", "СБ_КонтрагентПриИзменении");
	Элементы.ДоговорКонтрагента.УстановитьДействие("ПриИзменении", "СБ_ДоговорКонтрагентаПриИзменении");
	// -СБ. Светличный Михаил. 2017-01-25.
//ОК Ванюков К. -

КонецПроцедуры

// БИТ Тртилек 02.12.11 Процедура отслеживает изменения в ВИДРБП_МСФО и задает 
// типы для Субконто МСФО
&НаКлиенте
Процедура ПриИзменениибит_ВидРБП_МСФО(Элемент)
	
	//+СБ Пискунова #2799 28.03.2017
	Если ТакойЭлементСуществует(Неопределено) Тогда
		Сообщить("Элемент справочника РБП с таким наименованием уже существует! Пожалуйста, измените наименование."); 
		Возврат
	КонецЕсли;
	//-СБ Пискунова #2799 28.03.2017
	
	//ОК Ванюков К. +// Вызывало ошибку // 2013-03-19
	//НашОбъект = Элемент.ТекущаяСтрока.ПолучитьОбъект(); 
	//ОК Ванюков К. -
	
	// ++ БоровинскаяОА (СофтЛаб) 18.12.18 Начало (#3130)
	РБП = бит_ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.бит_ВидРБП_МСФО, "ТипСубконто1, ТипСубконто2");
	Если РБП.ТипСубконто1 <> ПредопределенноеЗначение("ПланВидовХарактеристик.бит_ВидыСубконтоДополнительные_2.ПустаяСсылка") Тогда
		Элементы.бит_Субконто1.ВыбиратьТип = Ложь;
	Иначе
		Объект.бит_Субконто1 = "";
		Элементы.бит_Субконто1.ВыбиратьТип = Истина;
	КонецЕсли;
	Если РБП.ТипСубконто2 <> ПредопределенноеЗначение("ПланВидовХарактеристик.бит_ВидыСубконтоДополнительные_2.ПустаяСсылка") Тогда
		Элементы.бит_Субконто2.ВыбиратьТип = Ложь;
	Иначе
		Объект.бит_Субконто2 = "";
		Элементы.бит_Субконто2.ВыбиратьТип = Истина;
	КонецЕсли;
	
	СоздатьСвязанныйСРБП_НМА = Ложь;
	СоздатьНМАДляСубконто = Ложь;
		
	// +СБ. Светличный Михаил. 2017-02-16.  Справочник РБП (#2757)
	Если ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(РБП.ТипСубконто1, "ТипЗначения") <> Новый ОписаниеТипов("СправочникСсылка.НематериальныеАктивы")
		// ++ БоровинскаяОА (СофтЛаб) 22.10.19 Начало (#3508)
		// изменила условие, иначе оно всегда было = Истина, и всегда сбрасывалось значение НМА
		//ИЛИ
		И
		// -- БоровинскаяОА (СофтЛаб) 22.10.19 Конец (#3508)
		ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(РБП.ТипСубконто2, "ТипЗначения") <> Новый ОписаниеТипов("СправочникСсылка.НематериальныеАктивы")
		Тогда
		// ++ БоровинскаяОА (СофтЛаб) 22.10.19 Начало (#3508)
		// закомментирова, похоже на ошибку - зачем создавать НМА для каждого РБП, идля тех у которых есть субконто НМА и для тех у кого нет.. 
		//СоздатьСвязанныйСРБП_НМА = Истина;
		// -- БоровинскаяОА (СофтЛаб) 22.10.19 Конец (#3508)
		Объект.бит_НМА_МСФО = ПредопределенноеЗначение("Справочник.НематериальныеАктивы.ПустаяСсылка");
	КонецЕсли;
	// -СБ. Светличный Михаил. 2017-02-16.

	Если ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(РБП.ТипСубконто1, "ТипЗначения") = Новый ОписаниеТипов("СправочникСсылка.НематериальныеАктивы") Тогда
		Если ЗначениеЗаполнено(Объект.бит_НМА_МСФО) И НЕ ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(Объект.бит_НМА_МСФО, "бит_УчитываетсяКакНМАВМСФО") Тогда 
			Ответ = Вопрос("Существует НМА, сопоставленный данному РБП, но данный НМА не учитывается в МСФО. Создать новый НМА?", РежимДиалогаВопрос.ДаНет);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				СоздатьНМАДляСубконто = Истина;
			КонецЕсли;
		ИначеЕсли НЕ ЗначениеЗаполнено(Объект.бит_НМА_МСФО) Тогда 
			СоздатьНМАДляСубконто = Истина;
		КонецЕсли;
	КонецЕсли;
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-03 (#3715)
	//ЗаполнитьСвязанныеСВидомРБПМСФОДанныеНаСервере(СоздатьСвязанныйСРБП_НМА,СоздатьНМАДляСубконто);	
	Если Объект.Ок_СозданНаОснованииОперацииАксапты Тогда
		ЗаполнитьСвязанныеСВидомРБПМСФОДанныеНаСервере(СоздатьСвязанныйСРБП_НМА,СоздатьНМАДляСубконто, Ложь);
	Иначе
		ЗаполнитьСвязанныеСВидомРБПМСФОДанныеНаСервере(СоздатьСвязанныйСРБП_НМА,СоздатьНМАДляСубконто);	
	КонецЕсли; 
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-03 (#3715)
	
	Если ТипЗнч(Объект.бит_Субконто1) = Тип("СправочникСсылка.ОбъектыСтроительства") Тогда 
		Если Объект.Объект = ПредопределенноеЗначение("Справочник.ОбъектыСтроительства.ПустаяСсылка") Тогда
			Предупреждение("Субконто1 имеет тип Объекты строительства, заполните соответствующую колонку Объект", 4, "Предупреждение");
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Объект.бит_Субконто2) = Тип("СправочникСсылка.ОбъектыСтроительства") Тогда 
		Если Объект.Объект = ПредопределенноеЗначение("Справочник.ОбъектыСтроительства.ПустаяСсылка") Тогда
			Предупреждение("Субконто2 имеет тип Объекты строительства, заполните соответствующую колонку Объект", 4, "Предупреждение");
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Объект.бит_Субконто1) = Тип("СправочникСсылка.Контрагенты") Тогда 
		Если Объект.Контрагент = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка") Тогда
			Предупреждение("Субконто1 имеет тип Контрагенты, заполните соответствующую колонку Контрагент", 4, "Предупреждение");
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Объект.бит_Субконто2) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда    
		Если Объект.ДоговорКонтрагента = ПредопределенноеЗначение("Справочник.ДоговорыКонтрагентов.ПустаяСсылка") Тогда
			Предупреждение("Субконто2 имеет тип Договора контрагентов, заполните соответствующую колонку Договор Контрагента", 4, "Предупреждение");
		КонецЕсли;
	КонецЕсли;
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-03 (#3715)
	//Если ЗначениеЗаполнено(Объект.ОК_Функция) Тогда 
	//	ОК_ФункцияПриИзменении(Неопределено);
	//КонецЕсли;
	//// -- БоровинскаяОА (СофтЛаб) 18.12.18 Конец (#3130)
	//
	//Если ЗначениеЗаполнено(Объект.Объект) Тогда 
	//	ОбъектПриИзменении(Неопределено);
	//	//Модифицированность = Истина;
	//КонецЕсли;
	Если НЕ Объект.Ок_СозданНаОснованииОперацииАксапты Тогда
		Если ЗначениеЗаполнено(Объект.ОК_Функция) Тогда 
			ОК_ФункцияПриИзменении(Неопределено);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Объект) Тогда 
			ОбъектПриИзменении(Неопределено);
		КонецЕсли;
	КонецЕсли; 
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-03 (#3715)
	
//ОК Ванюков К. -
	
КонецПроцедуры

// ++ БоровинскаяОА (СофтЛаб) 18.12.18 Начало (#3130)
&НаСервере
//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-03 (#3715)
//Процедура ЗаполнитьСвязанныеСВидомРБПМСФОДанныеНаСервере(СоздатьСвязанныйСРБП_НМА,СоздатьНМАДляСубконто)
Процедура ЗаполнитьСвязанныеСВидомРБПМСФОДанныеНаСервере(СоздатьСвязанныйСРБП_НМА,СоздатьНМАДляСубконто, ЗаполнятьФункцию = Истина)
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-03 (#3715)
	
	нОбъект = РеквизитФормыВЗначение("Объект");
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-03 (#3715)
	//нОбъект.ЗаполнитьСвязанныеСВидомРБПМСФОДанные(СоздатьСвязанныйСРБП_НМА,СоздатьНМАДляСубконто);
	нОбъект.ЗаполнитьСвязанныеСВидомРБПМСФОДанные(СоздатьСвязанныйСРБП_НМА,СоздатьНМАДляСубконто, ЗаполнятьФункцию);
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-03 (#3715)
	ЗначениеВРеквизитФормы(нОбъект,"Объект");
	
Конецпроцедуры
// -- БоровинскаяОА (СофтЛаб) 18.12.18 Начало (#3130)

//+СБ Пискунова 28.03.2017 #2799
&НаСервере
Функция УзнатьФункцию(ОК_Функция, ЭлементРодитель)
	//*Дремов ОКЕЙ. немного поменял логику. Функция ФрешМаркет устанавливается ВСЕГДА, 
	//* вне зависимостиот того, заполнена или Функция в Виде РБП ил нет
	Если ЗначениеЗаполнено(ЭлементРодитель) 
		и (ЭлементРодитель.ПринадлежитЭлементу(Справочники.РасходыБудущихПериодов.НайтиПоКоду("Огр-00248"))  //*ФрешМаркет
		или ЭлементРодитель = Справочники.РасходыБудущихПериодов.НайтиПоКоду("Огр-00248"))
		Тогда
		Возврат  Справочники.Подразделения.НайтиПоКоду("000000042");
	Иначе
		Возврат ОК_Функция;
	КонецЕсли;
КонецФункции
//-СБ Пискунова 28.03.2017 #2799


&НаСервереБезКонтекста
Функция ПриИзменениибит_ВидРБП_МСФО_НаСервере_СозданиеНМА(Объект, Наименование)
	
	//+СБ Пискунова 28.03.2017 #2799/ Добавила проверку по наименованию на уже существующий эдемент справочника НМА
	
	//НовыйЭлементНМА = Справочники.НематериальныеАктивы.СоздатьЭлемент();
	////НовыйЭлементНМА.УдалитьИжтиси_бит_КодРБП = Элемент.ТекущаяСтрока;
	//НовыйЭлементНМА.бит_ОбъектСтроительства = Объект;
	//НовыйЭлементНМА.бит_УчитываетсяКакНМАВМСФО = ИСТИНА;
	//НовыйЭлементНМА.Наименование = Наименование;
	//НовыйЭлементНМА.Записать();
	//Возврат НовыйЭлементНМА.Ссылка;
	
	
	Наименование = СокрЛП(Наименование);
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	НематериальныеАктивы.Ссылка
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|ГДЕ
	|	НематериальныеАктивы.Наименование = &Наименование
	|	И НЕ НематериальныеАктивы.ПометкаУдаления";
	Запрос.УстановитьПараметр("Наименование", Наименование);			
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		НовыйЭлементНМА = Справочники.НематериальныеАктивы.СоздатьЭлемент();
		//НовыйЭлементНМА.УдалитьИжтиси_бит_КодРБП = Элемент.ТекущаяСтрока;
		НовыйЭлементНМА.бит_ОбъектСтроительства = Объект;
		НовыйЭлементНМА.бит_УчитываетсяКакНМАВМСФО = ИСТИНА;
		НовыйЭлементНМА.Наименование = Наименование;
		НовыйЭлементНМА.Записать();
		Возврат НовыйЭлементНМА.Ссылка;
	Иначе   			
		Выборка = РезультатЗапроса.Выбрать(); 			
		Выборка.Следующий();
		Возврат  Выборка.Ссылка;
	КонецЕсли;
	//+СБ Пискунова 28.03.2017 #2799/ Добавила проверку по наименованию на уже существующий эдемент справочника НМА

КонецФункции

&НаСервереБезКонтекста
Функция ПриИзменениибит_ВидРБП_МСФО_НаСервере_УстановитьВидАктива(бит_ВидРБП_МСФО)
//ОК Ванюков К. +// заполнить реквизит «вид актива» в элементах справочника Расходы будущих периодов   через соответствие «вида актива» «виду РБП по МСФО» // 2012-06-21
	ВидАктива = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	бит_СоответствияАналитик.ПраваяАналитика_1 КАК ВидАктива
	               |ИЗ
	               |	РегистрСведений.бит_СоответствияАналитик КАК бит_СоответствияАналитик
	               |ГДЕ
	               |	бит_СоответствияАналитик.ВидСоответствия = ЗНАЧЕНИЕ(Справочник.бит_ВидыСоответствийАналитик.ВидРБП_МСФО_ВидАктива)
	               |	И бит_СоответствияАналитик.ЛеваяАналитика_1 = &ВидРБП_МСФО";
				   
	Запрос.УстановитьПараметр("ВидРБП_МСФО", бит_ВидРБП_МСФО);	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		ВидАктива	= Выборка.ВидАктива;
	// +СБ. Светличный Михаил. 25-01-2017. Справочник РБП (#2757)
	//КонецЕсли;
	Иначе 
		Сообщить("Для """ + бит_ВидРБП_МСФО + """ не найден Вид актива ");
		Возврат ВидАктива = Перечисления.ВидыАктивовДляРБП.ПустаяСсылка();
	КонецЕсли;
	// -СБ. Светличный Михаил. 25-01-2017.		
	Возврат ВидАктива;
//ОК Ванюков К. +// Заполнение Функции, объекта // 2013-03-19
КонецФункции

//ОК Ванюков К. +// автоматическое проставление вида РБП по МСФО при выборе статьи затрат (по регистру соответствия) // 2012-03-28
&НаКлиенте
Процедура ОК_СубконтоПриИзменении(Элемент)

	Если ТипЗнч(Объект[Элемент.Имя]) = Тип("СправочникСсылка.СтатьиЗатрат")
	Или ТипЗнч(Объект[Элемент.Имя]) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы")
		Тогда 
		Объект.бит_ВидРБП_МСФО = ОК_СубконтоПриИзмененииНаСервере(Объект[Элемент.Имя]);
		Если ЗначениеЗаполнено(Объект.бит_ВидРБП_МСФО) Тогда 
			ПриИзменениибит_ВидРБП_МСФО(Элемент);
			// +СБ. Светличный Михаил. 25-01-2017. Справочник РБП (#2757)
		Иначе
			Объект.ВидАктива =  ПредопределенноеЗначение("Перечисление.ВидыАктивовДляРБП.ПустаяСсылка"); 
			// -СБ. Светличный Михаил. 25-01-2017 
		КонецЕсли;
	КонецЕсли;
	// +СБ. Светличный Михаил. 2017-01-25.  Справочник РБП (#2757)
	Если ТипЗнч(Объект[Элемент.Имя]) = Тип("СправочникСсылка.ОбъектыСтроительства") Тогда 
		Объект.Объект = Объект[Элемент.Имя];
		ОбъектПриИзменении(Элемент);
	КонецЕсли;
	// -СБ. Светличный Михаил. 2017-01-25.

	//+СБ Пискунова 28.03.2017 #2799
	Если ТипЗнч(Объект[Элемент.Имя]) = Тип("СправочникСсылка.Подразделения") Тогда 
		//Объект.ОК_Функция = Объект[Элемент.Имя];	
		//Объект.ОК_Функция	= ОК_Функция;
		Объект.ОК_Функция = УзнатьФункцию(Объект[Элемент.Имя],Объект.Родитель);	
		Объект.СубконтоЗатрат3 = УзнатьФункцию(Объект.ОК_Функция,Объект.Родитель);
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-03 (#3715)
		нОК_Функция = ПолучитьФункциюПоВидуРБП();
		Если НЕ Объект.Ок_СозданНаОснованииОперацииАксапты 
			И ЗначениеЗаполнено(нОК_Функция) 
			И Объект.ОК_Функция <> нОК_Функция Тогда 
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Выбранная функция не соответствует функции, указанной в реквизите «Вид РБП» и будет заменена.";
			СообщениеПользователю.Сообщить();
			
		КонецЕсли;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-03 (#3715)
		
	КонецЕсли;
	//-СБ Пискунова 28.03.2017 #2799
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОК_СубконтоПриИзмененииНаСервере(СубконтоЗатрат)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	бит_СоответствияАналитик.ПраваяАналитика_1 КАК ВидРБП_МСФО
	               |ИЗ
	               |	РегистрСведений.бит_СоответствияАналитик КАК бит_СоответствияАналитик
	               |ГДЕ
	               |	бит_СоответствияАналитик.ВидСоответствия = ЗНАЧЕНИЕ(Справочник.бит_ВидыСоответствийАналитик.Субконто_ВидРБП_МСФО)
	               |	И бит_СоответствияАналитик.ЛеваяАналитика_1 = &Субконто";
	
	Запрос.УстановитьПараметр("Субконто", СубконтоЗатрат);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.ВидРБП_МСФО;
	Иначе 
		Сообщить("Для """ + СубконтоЗатрат + """ не найден Вид РБП(МСФО)");
		Возврат Справочники.бит_му_ВидыРБП.ПустаяСсылка();
	КонецЕсли;
КонецФункции

//ОК Ванюков К. +// Заполнение Функции // 2013-03-19
&НаКлиенте
Процедура ОК_ФункцияПриИзменении(Элемент)

	Если ТипЗнч(Объект.СубконтоЗатрат3) = Тип("СправочникСсылка.Подразделения") Тогда 
		//+СБ Пискунова 28.03.2017 #2799
		//Объект.СубконтоЗатрат3 = Объект.ОК_Функция; 				
		Объект.СубконтоЗатрат3 = УзнатьФункцию(Объект.ОК_Функция,Объект.Родитель);
		//-СБ Пискунова 28.03.2017 #2799   
	КонецЕсли;
	Если ТипЗнч(Объект.бит_Субконто1) = Тип("СправочникСсылка.Подразделения") Тогда 
		Объект.бит_Субконто1 = Объект.ОК_Функция;
	КонецЕсли;
	Если ТипЗнч(Объект.бит_Субконто2) = Тип("СправочникСсылка.Подразделения") Тогда 
		Объект.бит_Субконто2 = Объект.ОК_Функция;
	КонецЕсли;

	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-03 (#3715)
	нОК_Функция = ПолучитьФункциюПоВидуРБП();
	Если НЕ Объект.Ок_СозданНаОснованииОперацииАксапты 
		И ЗначениеЗаполнено(нОК_Функция) 
		И Объект.ОК_Функция <> нОК_Функция Тогда 
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Выбранная функция не соответствует функции, указанной в реквизите «Вид РБП» и будет заменена.";
		СообщениеПользователю.Сообщить();
		
	КонецЕсли;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-03 (#3715)
	
КонецПроцедуры

//ОК Ванюков К. +// Заполнение Объекта // 2013-03-19
&НаКлиенте
Процедура ОбъектПриИзменении(Элемент)

	Если ТипЗнч(Объект.СубконтоЗатрат2) = Тип("СправочникСсылка.ОбъектыСтроительства") Тогда 
		Объект.СубконтоЗатрат2 = Объект.Объект;
	КонецЕсли;
	Если ТипЗнч(Объект.бит_Субконто1) = Тип("СправочникСсылка.ОбъектыСтроительства") Тогда 
		Объект.бит_Субконто1 = Объект.Объект;
	КонецЕсли;
	// +СБ. Светличный Михаил. 2017-01-25.  Справочник РБП (#2757)
	Если ТипЗнч(Объект.СубконтоЗатрат1) = Тип("СправочникСсылка.ОбъектыСтроительства") Тогда 
		Объект.СубконтоЗатрат1 = Объект.Объект;
	КонецЕсли;
	Если ТипЗнч(Объект.бит_Субконто2) = Тип("СправочникСсылка.ОбъектыСтроительства") Тогда 
		Объект.бит_Субконто2 = Объект.Объект;
	КонецЕсли;
	// -СБ. Светличный Михаил. 2017-01-25.

КонецПроцедуры

// +СБ. Светличный Михаил. 2017-01-25.  Справочник РБП (#2757)
&НаКлиенте
Процедура СБ_СубконтоЗатрат3ПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.СубконтоЗатрат3) = Тип("СправочникСсылка.Подразделения") Тогда 
		//+СБ Пискунова 28.03.2017 #2799
		//Объект.ОК_Функция = Объект.СубконтоЗатрат3;    
		Объект.ОК_Функция = УзнатьФункцию(Объект.СубконтоЗатрат3,Объект.Родитель);
		//-СБ Пискунова 28.03.2017 #2799
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СБ_КонтрагентПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.бит_Субконто1) = Тип("СправочникСсылка.Контрагенты") Тогда 
		Объект.бит_Субконто1 = Объект.Контрагент;
	КонецЕсли;
	Если ТипЗнч(Объект.бит_Субконто2) = Тип("СправочникСсылка.Контрагенты") Тогда 
		Объект.бит_Субконто2 = Объект.Контрагент;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СБ_ДоговорКонтрагентаПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.бит_Субконто2) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда 
		Объект.бит_Субконто2 = Объект.ДоговорКонтрагента;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи) 
	
	//+СБ Пискунова 28.03.2017 #2799/ Добавила проверку по наименованию на уже существующий эдемент справочника РБП
	Если ТакойЭлементСуществует(Неопределено) Тогда
		Сообщить("Элемент справочника РБП с таким наименованием уже существует! Пожалуйста, измените наименование."); 
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	//-СБ Пискунова 28.03.2017 #2799/ Добавила проверку по наименованию на уже существующий эдемент справочника РБП
	                	
	СубконтоЗатрат = Новый Массив;
	СубконтоЗатрат.Добавить(Объект.СубконтоЗатрат1);
	СубконтоЗатрат.Добавить(Объект.СубконтоЗатрат2);
	СубконтоЗатрат.Добавить(Объект.СубконтоЗатрат3);
	
	Элемент = Неопределено;
	
	Для Индекс = 0 по СубконтоЗатрат.Количество()-1 Цикл
		
		Если ТипЗнч(СубконтоЗатрат[Индекс]) = Тип("СправочникСсылка.СтатьиЗатрат")
			Или ТипЗнч(СубконтоЗатрат[Индекс]) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы")
			Тогда 
			Объект.бит_ВидРБП_МСФО = ОК_СубконтоПриИзмененииНаСервере(СубконтоЗатрат[Индекс]);
			//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-11-16 (#3415)
			ФункцияВидаРБП = бит_ОбщегоНазначения.ПолучитьЗначениеРеквизитаОбъекта(Объект.бит_ВидРБП_МСФО, "ОК_Функция");
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-03 (#3715)
			//Если ЗначениеЗаполнено(ФункцияВидаРБП) И ФункцияВидаРБП <> Объект.ОК_Функция Тогда
			Если Объект.Ок_СозданНаОснованииОперацииАксапты
				И ЗначениеЗаполнено(ФункцияВидаРБП) 
				И ФункцияВидаРБП <> Объект.ОК_Функция Тогда
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-03 (#3715)
				Сообщить ("Значение реквизита ""Функция"" текущего элемента не совпадает со значением функции Вида РБП. Элемент не записан." );
				Отказ = Истина;
			КонецЕсли;	
			//ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-11-16 (#3415)
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-03 (#3715)
			Если Отказ Тогда
				Прервать;
			КонецЕсли;
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-03 (#3715)
			Если ЗначениеЗаполнено(СубконтоЗатрат[Индекс]) Тогда 
				ПриИзменениибит_ВидРБП_МСФО(Элемент);
			Иначе
				Объект.ВидАктива =  ПредопределенноеЗначение("Перечисление.ВидыАктивовДляРБП.ПустаяСсылка"); 
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// -СБ. Светличный Михаил. 2017-01-25

//+СБ Пискунова 28.03.2017 #2799
&НаСервере
Функция ТакойЭлементСуществует(ВыбранноеЗначение)
	Наименование = ?(ЗначениеЗаполнено(ВыбранноеЗначение), ВыбранноеЗначение, СокрЛП(Объект.Наименование));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|	РасходыБудущихПериодов.Ссылка
	|ИЗ
	|	Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
	|ГДЕ
	|	РасходыБудущихПериодов.Наименование = &Наименование
	|	И РасходыБудущихПериодов.Ссылка <> &РБП
	|	И НЕ РасходыБудущихПериодов.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.УстановитьПараметр("РБП", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;			             

КонецФункции

&НаКлиенте
Процедура РодительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Объект.ОК_Функция = УзнатьФункцию(Объект.ОК_Функция,ВыбранноеЗначение);
	Объект.СубконтоЗатрат3 =  УзнатьФункцию(Объект.ОК_Функция,ВыбранноеЗначение);
	
КонецПроцедуры
//-СБ Пискунова 28.03.2017 #2799

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-07 (#3715)
&НаСервере
Функция ПолучитьФункциюПоВидуРБП()

	нОК_Функция = Справочники.Подразделения.ПустаяСсылка();
	Если ЗначениеЗаполнено(Объект.Родитель) 
		и (Объект.Родитель.ПринадлежитЭлементу(Справочники.РасходыБудущихПериодов.НайтиПоКоду("Огр-00248"))  //*ФрешМаркет
		или Объект.Родитель = Справочники.РасходыБудущихПериодов.НайтиПоКоду("Огр-00248"))
		Тогда
		Отбор = Новый Структура("Группа,ИмяНастройки, СБ_ПорядковыйНомерЗначения","ФМ_Функция","ФМ_Функция", 0);
		СтруктураНастроек = РегистрыСведений.бит_му_Настройки.Получить(Отбор);
		Если СтруктураНастроек.Количество() > 0 ИЛИ ЗначениеЗаполнено(СтруктураНастроек.Значение) Тогда 
			нОК_Функция =  СтруктураНастроек.Значение;
		КонецЕсли;	
	Иначе
		нОК_Функция = Объект.бит_ВидРБП_МСФО.ОК_Функция;
	КонецЕсли;
	
	Возврат нОК_Функция;
	
КонецФункции
//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-07 (#3715)
