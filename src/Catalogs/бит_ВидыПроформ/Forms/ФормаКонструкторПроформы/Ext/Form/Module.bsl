
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Параметры.Свойство("ВидКонструктора", ВидКонструктора);
	
	Если ВидКонструктора = "ДанныеБюджета" Тогда
		
		// Заполнение аналитик бюджетирования
		ИсключенныеИзмерения = Новый Массив;
		ИсключенныеИзмерения.Добавить("Сценарий");
		
		Обязательные = Новый Структура;
		Обязательные.Вставить("ЦФО");
		Обязательные.Вставить("СтатьяОборотов");
		
		ИзмеренияБюдж = бит_Бюджетирование.ПолучитьИзмеренияБюджетирования("все","тип","СписокЗначений",ИсключенныеИзмерения);
		НастройкиДопИзмерений = бит_МеханизмДопИзмерений.ПолучитьНастройкиДополнительныхИзмерений();
		
		НоваяСтрока = АналитикиБюджета.Добавить();
		НоваяСтрока.Имя = "Период";
		НоваяСтрока.ТипЗначения = "Дата";
		НоваяСтрока.Использование = Истина;
		НоваяСтрока.Обязательно = Истина;
		
		Для каждого Элемент Из ИзмеренияБюдж Цикл
			
			НоваяСтрока = АналитикиБюджета.Добавить();
			НоваяСтрока.Имя = Элемент.Представление;
			
			Если Найти(НоваяСтрока.Имя,"Аналитика_") > 0 Тогда
				
				ТекНастройка = НастройкиДопИзмерений[НоваяСтрока.Имя];
				Если ТипЗнч(ТекНастройка) = Тип("Структура") Тогда
					НоваяСтрока.ТипЗначения = бит_ОбщегоНазначения.СтроковоеПредставлениеОписанияТипов(ТекНастройка.ТипЗначения);
				Иначе	
					НоваяСтрока.ТипЗначения = "";
				КонецЕсли; 
				
			Иначе
				
				НоваяСтрока.ТипЗначения = бит_ОбщегоНазначения.СтроковоеПредставлениеОписанияТипов(Элемент.Значение);
				
			КонецЕсли; 
			
			Если Обязательные.Свойство(НоваяСтрока.Имя) Тогда
				
				НоваяСтрока.Использование = Истина;
				НоваяСтрока.Обязательно = Истина;
				
			КонецЕсли; 
			
		КонецЦикла; // по аналитикам бюджетирования 
		
		НоваяСтрока = АналитикиБюджета.Добавить();
		НоваяСтрока.Имя = "Количество";
		НоваяСтрока.ТипЗначения = "Число(15,3)";
		
		НоваяСтрока = АналитикиБюджета.Добавить();
		НоваяСтрока.Имя = "Сумма";
		НоваяСтрока.ТипЗначения = "Число(15,2)";
		
		НоваяСтрока.Использование = Истина;
		НоваяСтрока.Обязательно = Истина;
		
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	РезСтруктура = Новый Структура;
	Для каждого СтрокаТаблицы Из АналитикиБюджета Цикл
		
		Если СтрокаТаблицы.Использование Тогда
			
			РезСтруктура.Вставить(СтрокаТаблицы.Имя, СтрокаТаблицы.ТипЗначения);
			
		КонецЕсли; 
		
	КонецЦикла; // Аналитики бюджета
	
	Закрыть(РезСтруктура);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьВсе(Команда)
	
	ОбработатьФлаги(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьВсе(Команда)
	
	ОбработатьФлаги(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаИнвертировать(Команда)
	
	ОбработатьФлаги(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция устанавливает значения флагов в табличной части АналитикиБюджета.
//
// Параметры:
//  ЗначениеФлага - Булево, Неопределено.
//
&НаКлиенте
Процедура ОбработатьФлаги(ЗначениеФлага)

	Для каждого СтрокаТаблицы Из АналитикиБюджета Цикл
		
		Если СтрокаТаблицы.Обязательно Тогда
		
			 Продолжить;
		
		КонецЕсли; 
		
		Если ЗначениеФлага = Неопределено Тогда
			
			СтрокаТаблицы.Использование = НЕ СтрокаТаблицы.Использование;
			
		Иначе	
			
			СтрокаТаблицы.Использование = ЗначениеФлага;
			
		КонецЕсли; 
	
	КонецЦикла; 
	
КонецПроцедуры // ОбработатьФлаги()

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.АналитикиБюджета.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("АналитикиБюджета.Обязательно");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

#КонецОбласти



