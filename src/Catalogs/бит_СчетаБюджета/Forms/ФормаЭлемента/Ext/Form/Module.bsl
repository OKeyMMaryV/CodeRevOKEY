
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	
	
	
	// Вызов механизма защиты
	 
	
	// Изменение кода. Начало. 14.04.2014{{
	УстановитьПараметрыВыбораДляСчетов();
	// Изменение кода. Конец. 14.04.2014}}
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьФлагФормироватьНаименованиеПолноеАвтоматически();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)

	СформироватьНаименованиеПолноеАвтоматически();

КонецПроцедуры // НаименованиеПриИзменении()

&НаКлиенте
Процедура НаименованиеПолноеПриИзменении(Элемент)

	УстановитьФлагФормироватьНаименованиеПолноеАвтоматически();

КонецПроцедуры // НаименованиеПолноеПриИзменении()

&НаКлиенте
Процедура НаименованиеПолноеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение <> Неопределено Тогда
	
		Объект.НаименованиеПолное = ВыбранноеЗначение;
		АвтоНаименованиеПолное = Истина;
	
	КонецЕсли;
	
КонецПроцедуры // НаименованиеПолноеОбработкаВыбора()

&НаКлиенте
Процедура НаименованиеПолноеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();
	
	Элемент.СписокВыбора.Добавить(Объект.Наименование);
	
КонецПроцедуры // НаименованиеПолноеАвтоПодбор()

&НаКлиенте
Процедура СчетПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Счет) Тогда
		
		ЗаполнитьРеквизитыПоДаннымСчета(Объект.Счет, 
						Объект.Наименование, Объект.НаименованиеПолное,
						Объект.Кодификатор, Объект.Коэффициент);
				
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура СчетОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработкаВыбораСчета(ВыбранноеЗначение,
						Объект.Счет, Объект.Владелец,
						Объект.Наименование, Объект.НаименованиеПолное,
						Объект.Кодификатор, Объект.Коэффициент);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура заполняет необходимые реквизиты по данным счета.
// 
// Параметры:
//  Счет  	 			- ПланСчетовСсылка.бит_Бюджетирование
//  Наименование  		- Строка
//  НаименованиеПолное  - Строка
//  Кодификатор 		- Число
//  Коэффициент			- Число
// 
&НаСервереБезКонтекста
Процедура ЗаполнитьРеквизитыПоДаннымСчета(Счет, Наименование, НаименованиеПолное, Кодификатор, Коэффициент)

	Наименование 	  	= Счет.Наименование;
	НаименованиеПолное 	= Счет.НаименованиеПолное;
	Кодификатор 	    = Счет.Код;
	
	Если Коэффициент = 0 Тогда
		Коэффициент = 1;
	КонецЕсли; 
     
КонецПроцедуры // ЗаполнитьРеквизитыПоДаннымСчета()

// Процедура обрабатывает выбор счета.
// 
// Параметры:
//  ВыбранноеЗначение   - ПланСчетовСсылка.бит_Бюджетирование
//  Счет  	 			- ПланСчетовСсылка.бит_Бюджетирование
//  Бюджет				- СправочникСсылка.бит_Бюджеты
//  Наименование  		- Строка
//  НаименованиеПолное  - Строка
//  Кодификатор 		- Число
//  Коэффициент			- Число
// 
&НаСерверебезКонтекста
Процедура ОбработкаВыбораСчета(ВыбранноеЗначение, Счет, Бюджет, Наименование, НаименованиеПолное, Кодификатор, Коэффициент)

	НайденныйСчет = Справочники.бит_СчетаБюджета.НайтиПоРеквизиту("Счет", ВыбранноеЗначение,, Бюджет);	
	СчетНайден = ?(ЗначениеЗаполнено(НайденныйСчет), Истина, Ложь);
    
	Если СчетНайден Тогда
		ТекстСообщения = СтрШаблон(Нстр("ru = 'Счет %1 уже подобран в бюджет ""%2"".'"), ВыбранноеЗначение, Бюджет);
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 
	Иначе
		Счет = ВыбранноеЗначение;
		ЗаполнитьРеквизитыПоДаннымСчета(Счет, Наименование, НаименованиеПолное, Кодификатор, Коэффициент);
	КонецЕсли; 
 		
КонецПроцедуры

// Процедура устанвливает параметры выбора для элементов формы. 
// 
// Параметры:
//  МассивЭлементов - Массив.
// 
&НаСервере
Процедура УстановитьПараметрыВыбораДляСчетов()

	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(Элементы.Счет);
	
	бит_РаботаСДиалогамиСервер.УстановитьПараметрыВыбораДляЭлементов(МассивЭлементов);
	
КонецПроцедуры // УстановитьПараметрыВыбораДляСчетов() 

// Процедура проверяет, совпадало ли ранее полное наименование с наименованием,
// и присваивает соответствующее значение переменной мФормироватьНаименованиеПолноеАвтоматически.
// 
// Параметры:
//  Нет.
// 
&НаКлиенте
Процедура УстановитьФлагФормироватьНаименованиеПолноеАвтоматически()

	Если ПустаяСтрока(Объект.НаименованиеПолное) 
	 ИЛИ Объект.НаименованиеПолное = Объект.Наименование Тогда
		АвтоНаименованиеПолное = Истина;
	Иначе
		АвтоНаименованиеПолное = Ложь;
	КонецЕсли;

КонецПроцедуры // УстановитьФлагФормироватьНаименованиеПолноеАвтоматически()

// Процедура проверяет, необходимо ли формировать полное наименование автоматически или нет,
// и, если необходимо, формирует его.
// 
// Параметры:
//  Нет.
// 
&НаКлиенте
Процедура СформироватьНаименованиеПолноеАвтоматически()

	Если АвтоНаименованиеПолное Тогда
		Объект.НаименованиеПолное = Объект.Наименование;
	КонецЕсли;

КонецПроцедуры // СформироватьНаименованиеПолноеАвтоматически()

#КонецОбласти

