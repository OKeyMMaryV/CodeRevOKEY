
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает ручную корректировку по переданному документу.
// При включении учета по подразделениям на счете 44 для ряда документов некуда переносить подразделение из субконто.
// И чтобы при перепроведении оно не слетало, зафиксируем проводки ручной корректировкой.
// Количество таких документов не должно быть большим.
//
// Параметры:
//  Ссылка    - ДокументСсылка - Регистратор набора записей
//  Процессор - Структура - Конструктор состояния обработки (обновления) данных порциями,
//                             см ОбновлениеИнформационнойБазыПорционное.НовыйПроцессорПорционнойОбработки() 
//
Процедура УстановитьРучнуюКорректировкуДляДокументовБезПодразделенияЗатрат(Ссылка, Процессор) Экспорт
	
	ДокументыБезПодразделенияЗатрат = Процессор.ОбщиеДанные.ДокументыБезПодразделенияЗатрат;
	СписокСчетов = Процессор.ОбщиеДанные.СписокСчетов; // Список счетов 44, на которых установлено субконто "Подразделение"
	ТолькоГоловнойУзел = Процессор.ТолькоГоловнойУзел;
	
	Если ДокументыБезПодразделенияЗатрат.Найти(ТипЗнч(Ссылка)) <> Неопределено Тогда
		// Для документов ТребованиеНакладная и ОтчетПроизводстваЗаСмену ручная корректировка только в случае заполненного счета списания НДС
		Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.ТребованиеНакладная")
			Или ТипЗнч(Ссылка) = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") Тогда
			Если СписокСчетов.Найти(Ссылка.СчетСписанияНДС) = Неопределено Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		ДокОбъект = Ссылка.ПолучитьОбъект();
		Если ДокОбъект <> Неопределено Тогда
			ДокОбъект.РучнаяКорректировка = Истина;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокОбъект, ТолькоГоловнойУзел, Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	УправлениеДоступомБПВызовСервера.ВыполнитьПроверкуПраваДоступаКДаннымБухгалтерии();
	
КонецПроцедуры

//СофтЛаб Начало 2019-09-22 #3493
Процедура ПроверитьЗапретРедактированияДокументовФакта(НаборЗаписей, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	СписокСчетов 				= СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("Ок_ФормированиеЗнРДС_СписокСчетовВзаиморасчетовДляФормированияЗнРДС", Неопределено);
	СтатусыЗаявокДляИсключений 	= СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("Ок_ФормированиеЗнРДС_СтатусыЗаявокДляИсключений", Неопределено);
	МассивДокументовРасчета 	= Новый Массив();
	
	Если СписокСчетов = Неопределено
		ИЛИ СтатусыЗаявокДляИсключений = Неопределено 
		ИЛИ ТипЗнч(СписокСчетов) = Тип("СписокЗначений")
			И СписокСчетов.Количество() = 0 
		ИЛИ ТипЗнч(СтатусыЗаявокДляИсключений) = Тип("СписокЗначений")
			И СтатусыЗаявокДляИсключений.Количество() = 0 Тогда
	
		Возврат;
	
	КонецЕсли; 
	
	Для каждого ТекущаяЗапись Из НаборЗаписей Цикл
	
		//Если СписокСчетов.НайтиПоЗначению(ТекущаяЗапись.СчетДт) <> Неопределено
		//	И ЗначениеЗаполнено(ТекущаяЗапись.СубконтоДт.ДокументыРасчетовСКонтрагентами) Тогда
		//
		//	МассивДокументовРасчета.Добавить(ТекущаяЗапись.СубконтоДт.ДокументыРасчетовСКонтрагентами);
		//
		//КонецЕсли; 
		
		Если Не СписокСчетов.НайтиПоЗначению(ТекущаяЗапись.СчетКт) = Неопределено
			И ЗначениеЗаполнено(ТекущаяЗапись.СубконтоКт.ДокументыРасчетовСКонтрагентами)
			И ТекущаяЗапись.СубконтоКт.ДокументыРасчетовСКонтрагентами = ТекущаяЗапись.Регистратор Тогда
		
			МассивДокументовРасчета.Добавить(ТекущаяЗапись.СубконтоКт.ДокументыРасчетовСКонтрагентами);
		
		КонецЕсли; 

	КонецЦикла; 
	
	Если ПроверитьНаличиеСозданногоДокументаЗнРДСВСтатусе(МассивДокументовРасчета) Тогда
		// найдены ЗнРДС, нельзя проводить
		ТекстОшибки = НСтр("ru = 'Проведение документа запрещено!
		|Найдена заявка на расходование денежных средств в статусе, по которому нельзя редактировать первичный документ. 
		|Ожидайте завершение процесса оплаты.'");
		 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , , , Отказ);
	КонецЕсли; 
	
КонецПроцедуры

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-09-17 (#3758)
//Функция ПроверитьНаличиеСозданногоДокументаЗнРДСВСтатусе(МассивДокументовРасчета, ВыводитьСообщение = Ложь) Экспорт
Функция ПроверитьНаличиеСозданногоДокументаЗнРДСВСтатусе(МассивДокументовРасчета, ВыводитьСообщение = Ложь, СтатусыЗаявокДляИсключений = Неопределено) Экспорт
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-09-17 (#3758)

	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-09-17 (#3758)
	//СтатусыЗаявокДляИсключений = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("Ок_ФормированиеЗнРДС_СтатусыЗаявокДляИсключений", Неопределено);
	Если СтатусыЗаявокДляИсключений = Неопределено Тогда
		СтатусыЗаявокДляИсключений = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("Ок_ФормированиеЗнРДС_СтатусыЗаявокДляИсключений", Неопределено);
	КонецЕсли; 
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-09-17 (#3758)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЗаявкаНаРасходованиеСредств.ДокументОснование КАК ДокументРасчета,
	|	ЗаявкаНаРасходованиеСредств.Ссылка КАК Ссылка,
	|	ЗаявкаНаРасходованиеСредств.Номер КАК НомерЗнРДС,
	|	ЗаявкаНаРасходованиеСредств.Дата КАК ДатаЗнРДС,
	|	СтатусыОбъектов.Статус КАК СтатутсЗнРДС
	|ИЗ
	|	Документ.бит_ЗаявкаНаРасходованиеСредств КАК ЗаявкаНаРасходованиеСредств
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО ЗаявкаНаРасходованиеСредств.Ссылка = СтатусыОбъектов.Объект
	|			И (СтатусыОбъектов.ВидСтатуса = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСтатусовОбъектов.Статус))
	|			И (СтатусыОбъектов.Статус В (&СтатусыЗаявокДляИсключений))
	|ГДЕ
	|	ЗаявкаНаРасходованиеСредств.ДокументОснование В(&МассивДокументовРасчета)
	|	И НЕ ЗаявкаНаРасходованиеСредств.ПометкаУдаления
	|	И ЗаявкаНаРасходованиеСредств.Проведен"
	;
	
	Запрос.УстановитьПараметр("МассивДокументовРасчета", МассивДокументовРасчета);
	Запрос.УстановитьПараметр("СтатусыЗаявокДляИсключений", СтатусыЗаявокДляИсключений);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если ВыводитьСообщение Тогда
		
		Выборка = РезультатЗапроса.Выбрать();	
		Если Выборка.Следующий() Тогда  
			ТестСообщения = НСтр("ru = 'Заявка на расходование денежных средство № %1 от %2 в статусе %3'");
			ТестСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТестСообщения, Выборка.НомерЗнРДС, Выборка.ДатаЗнРДС, Выборка.СтатутсЗнРДС);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТестСообщения, Выборка.Ссылка);
		КонецЕсли;
	КонецЕсли;	
		
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции
//СофтЛаб Конец 2019-09-22 #3493