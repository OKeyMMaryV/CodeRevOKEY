#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события "ПередЗаписью".
// 
Процедура ПередЗаписью(Отказ)

	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Регистратор = ЭтотОбъект.Отбор.Регистратор.Значение;
	
	Если Количество()>0 Тогда
	    Заголовок = СокрЛП(Регистратор);
	КонецЕсли; 
	
	ВидыСоставныхСубконто = Новый Соответствие;

	Для Каждого Проводка Из ЭтотОбъект Цикл
        
        СвСчДт = бит_БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
        СвСчКт = бит_БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
        
		Если НЕ ЗначениеЗаполнено(Проводка.СчетДт) И НЕ СвСчКт.Забалансовый Тогда
			бит_ОбщегоНазначения.СообщитьОбОшибке("Проводка № "+(Проводка.НомерСтроки+1) +" <"+Проводка.Содержание+">: не заполнен счет дебета.",Отказ,Заголовок);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Проводка.СчетКт) И НЕ СвСчДт.Забалансовый Тогда
			бит_ОбщегоНазначения.СообщитьОбОшибке("Проводка № "+(Проводка.НомерСтроки+1) +" <"+Проводка.Содержание+">: не заполнен счет кредита.",Отказ,Заголовок);
		КонецЕсли;
		
		бит_БухгалтерияСервер.КорректировкаПустыхЗначенийСубконто(Проводка.СубконтоДт, ВидыСоставныхСубконто);
		бит_БухгалтерияСервер.КорректировкаПустыхЗначенийСубконто(Проводка.СубконтоКт, ВидыСоставныхСубконто);
		
	КонецЦикла;

	бит_УправленческийУчет.ОбработатьПроводкиПоТипамПроводок(ЭтотОбъект, Регистратор);
	
КонецПроцедуры // ПередЗаписью()

#КонецОбласти

#КонецЕсли
