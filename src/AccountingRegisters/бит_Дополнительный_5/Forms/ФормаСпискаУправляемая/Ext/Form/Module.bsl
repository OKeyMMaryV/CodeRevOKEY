
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МетаданныеОбъекта = Метаданные.РегистрыБухгалтерии.бит_Дополнительный_5;
	фИмяОбъекта = МетаданныеОбъекта.Имя;
	
	бит_РаботаСДиалогамиСервер.ФормаСпискаРегистраПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтотОбъект);

	// Заголовок
    бит_НазначениеСинонимовОбъектов.ВывестиЗаголовокФормы(МетаданныеОбъекта
														 ,ЭтаФорма
														 ,Перечисления.бит_ВидыФормОбъекта.Списка);
														 
	// Отбор по счету
	Если Параметры.Свойство("Счет") Тогда
		ОтборСчет = Параметры.Счет;
		ИзменитьЭлементОтбораСписка("Счет", ОтборСчет, ВидСравненияКомпоновкиДанных.ВИерархии);
	КонецЕсли;
	
	// Отбор по организации
	ОтборОрганизация = бит_РаботаСДиалогамиСервер.УстановитьОтборПоОсновнойОрганизацииБит(ЭтаФорма);
		
	// Формирование списка доступных регистраторов.
	ОписаниеТиповРегистраторов = Метаданные.РегистрыБухгалтерии[фИмяОбъекта].СтандартныеРеквизиты.Регистратор.Тип;
	Элементы.ОтборРегистратор.ОграничениеТипа = ОписаниеТиповРегистраторов;
	   	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборСчетПриИзменении(Элемент)
	
	ИзменитьЭлементОтбораСписка("Счет", ОтборСчет, ВидСравненияКомпоновкиДанных.ВИерархии);
	
КонецПроцедуры // ОтборСчетПриИзменении()

&НаКлиенте
Процедура ОтборРегистраторНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ОтборРегистратор) Тогда
		Элементы.ОтборРегистратор.ВыбиратьТип = Ложь;	
	Иначе
		Элементы.ОтборРегистратор.ВыбиратьТип = Истина;
	КонецЕсли;	
	
КонецПроцедуры // ОтборРегистраторНачалоВыбора()

&НаКлиенте
Процедура ОтборРегистраторПриИзменении(Элемент)
	
	ИзменитьЭлементОтбораСписка("Регистратор", ОтборРегистратор);
	
КонецПроцедуры // ОтборРегистраторПриИзменении()

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ИзменитьЭлементОтбораСписка("Организация", ОтборОрганизация);
	
КонецПроцедуры // ОтборОрганизацияПриИзменении()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереключитьАктивностьПроводок(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные; 	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	Если НЕ ПереключениеПроводокДоступно(ТекущиеДанные, "бит_Дополнительный_2") Тогда
	    Возврат;
	КонецЕсли; 

	ПереключитьАктивностьПроводокСервер(ТекущиеДанные.Регистратор);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста 
Функция ПереключениеПроводокДоступно(Объект, ИмяРегистраБухгалтерии)
		
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Регистратор, "Организация, Дата");
	Возврат бит_КонтрольЗакрытогоПериода.ПереключениеПроводокДоступно(Объект.Регистратор, 
				Реквизиты.Организация, Реквизиты.Дата, ИмяРегистраБухгалтерии);
	
КонецФункции
			
// Процедура переключает активность для движений документа.
// 
// Параметры:
//  Документ - ДокументСсылка
// 
&НаСервере
Процедура ПереключитьАктивностьПроводокСервер(Документ)
	
	бит_ОбщегоНазначения.ПереключитьАктивностьПроводокДокументаДляРегистраБухгалтерии(Документ, фИмяОбъекта);

	Элементы.Список.Обновить();
	
КонецПроцедуры // ПереключитьАктивностьПроводокСервер()

// Процедура меняет отбор списка.
// 
// Параметры:
//  ИмяПоля        - Строка - имя поля компоновки, отбор по которому нужно установить
//  ПравоеЗначение - Произвольный
//  ВидСравнения   - ВидСравненияКомпоновкиДанных (По умолчанию = Равно).
// 
&НаСервере
Процедура ИзменитьЭлементОтбораСписка(ИмяПоля, ПравоеЗначение, ВидСравнения = Неопределено)

	бит_РаботаСДиалогамиСервер.ИзменитьЭлементОтбораСписка(Список, ИмяПоля, ПравоеЗначение, ЗначениеЗаполнено(ПравоеЗначение), ВидСравнения);

КонецПроцедуры // ИзменитьЭлементОтбораСписка()

#КонецОбласти

