
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Ключ текущих настроек
	Перем КлючТекущихНастроек;
	
	КлючОбъекта         = Параметры.КлючОбъекта;
	КлючТекущихНастроек = Параметры.КлючТекущихНастроек;		
		
	ОбновитьТаблицуВариантов();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДекорациюВарианта();
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеВариантаОчистка(Элемент, СтандартнаяОбработка)
	
	ОчиститьТекущийВариант();
		 	
КонецПроцедуры // НаименованиеВариантаОчистка()

&НаКлиенте
Процедура НаименованиеВариантаПриИзменении(Элемент)
	
	СтрокаДоступна  = Истина;
	НайденнаяСтрока = Неопределено;
	
	Если ПустаяСтрока(НаименованиеВарианта) Тогда
		
		ОчиститьТекущийВариант();	
		
	Иначе
		
		Если фСписокНеДоступныхИмен.НайтиПоЗначению(НаименованиеВарианта) <> Неопределено Тогда
			
			ТекстСообщения = Нстр("ru = 'Указанный вариант существует. Доступ на его изменение отсуствует.'");
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
									
			СтрокаДоступна = Ложь;
			
		Иначе
			
			ИдНайденной = НайтиСтрокуСохраненногоВариантаВТаблице();
			Если ИдНайденной <> Неопределено Тогда
				НайденнаяСтрока = ТаблицаСохраненныеВарианты.НайтиПоИдентификатору(ИдНайденной);			
			КонецЕсли;                                                                                                        			
			
		КонецЕсли;
		
		Если НайденнаяСтрока = Неопределено Тогда		
			ОчиститьТекущийВариант(Не СтрокаДоступна);			  
		Иначе  		  
		  	СохраненныйВариант = НайденнаяСтрока.СохраненныйВариант;
		КонецЕсли; 
		
	КонецЕсли; 
	
	УстановитьДекорациюВарианта();
	
КонецПроцедуры // НаименованиеВариантаПриИзменении()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаСохраненныеВарианты

&НаКлиенте
Процедура ТаблицаСохраненныеВариантыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаСохраненныеВарианты.ТекущиеДанные;
	Если ТекущиеДанные.ЭтоПредопределенный Тогда
		
		ТекстСообщения = Нстр("ru = 'Нельзя выбрать предопределенный элемент.'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
			
		СтандартнаяОбработка = Ложь;
		Возврат;
		
	КонецЕсли;
	
	НаименованиеВарианта    = ТекущиеДанные.СохраненныйВариант;
	ИспользоватьПриОткрытии = ТекущиеДанные.ИспользоватьПриОткрытии;
	СохраненныйВариант      = ТекущиеДанные.СохраненныйВариант;
	
	УстановитьДекорациюВарианта();
	
КонецПроцедуры // ТаблицаСохраненныеВариантыВыбор()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьВариант(Команда)
	
	Если ПустаяСтрока(НаименованиеВарианта) Тогда
		
		ТекстСообщения = НСтр("ru = 'Не указано наименование сохраняемого варианта!'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,, "НаименованиеВарианта");
		Возврат;
	
	КонецЕсли; 
	
	СтруктураРезультата = СоздатьОбновитьВариант();
	РезВариант = СтруктураРезультата.РезВариант;
	                              
	Если ЗначениеЗаполнено(РезВариант) Тогда
		
		КлючТекВарианта = СтруктураРезультата.КлючВарианта;
		ВыборНастроек = Новый ВыборНастроек(КлючТекВарианта);
						
		Закрыть(ВыборНастроек);		

	ИначеЕсли Не СтруктураРезультата.ИзменениеДоступно Тогда
		
		ТекстСообщения = Нстр("ru = 'Недостаточно прав для изменения варианта.'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		
	Иначе
		
		Закрыть();
		
	КонецЕсли;

КонецПроцедуры // СохранитьВариант()

&НаКлиенте
Процедура КомандаОбновить(Команда)
	
	ОбновитьТаблицуВариантов();
	
КонецПроцедуры // КомандаОбновить()

&НаКлиенте
Процедура КомандаИспользоватьПриОткрытии(Команда)
	
	ТекущиеДанные = Элементы.ТаблицаСохраненныеВарианты.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда
	 	Возврат;
	КонецЕсли;
	
	ИзменитьИспользоватьПриОткрытии(ТекущиеДанные.ПолучитьИдентификатор()); 
	
КонецПроцедуры // КомандаИспользоватьПриОткрытии()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СоздатьЭлементСправочникаВариантыОтчетов(ТекПользователь)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Наименование"	  		  , НаименованиеВарианта);
	СтруктураПараметров.Вставить("КлючОбъекта"		      , КлючОбъекта);
	СтруктураПараметров.Вставить("Ответственный"	      , ТекПользователь);
	СтруктураПараметров.Вставить("ТипВарианта"			  , Перечисления.бит_ТипыВариантовОтчетов.Пользовательский);
		
	РезВариант = Справочники.бит_ВариантыОтчетов.СоздатьВариант(СтруктураПараметров);
	
	Если РезВариант <> Неопределено  Тогда
		// Запись настроек доступности по умолчанию (РегистрыСведений.бит_НастройкиДоступностиВариантовОтчетов).
		бит_ОтчетыСервер.ЗаписьНабораНастроекДоступности(РезВариант.Ссылка, ТекПользователь);
	КонецЕсли;
	
	СохраненныйВариант = РезВариант;
	
	Возврат РезВариант;
	
КонецФункции // СоздатьЭлементСправочникаВариантыОтчетов()

&НаСервере
Функция ОбновитьВариант()

	УстановитьПривилегированныйРежим(Истина);
	
	СпрОб = СохраненныйВариант.ПолучитьОбъект();
	СпрОб.Наименование            = НаименованиеВарианта;
	// СпрОб.ИспользоватьПриОткрытии = ИспользоватьПриОткрытии;
	
	флДействиеВыполнено = бит_ОбщегоНазначения.ЗаписатьСправочник(СпрОб, ,"Ошибки");	
	Если флДействиеВыполнено Тогда 		
		РезВариант = СпрОб.Ссылка; 			
	Иначе		
		РезВариант = Справочники.бит_ВариантыОтчетов.ПустаяСсылка(); 		
	КонецЕсли; 

	УстановитьПривилегированныйРежим(Ложь);
	            
	Возврат РезВариант;
	
КонецФункции // ОбновитьВариант()

&НаСервере
Функция СоздатьОбновитьВариант()

	СтруктураРезультата = Новый Структура;
	ИзменениеДоступно 	= Истина;
	РезВариант 		    = Неопределено;
	
	ТекПользователь = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
	
	Если ЗначениеЗаполнено(СохраненныйВариант) Тогда
		Если фСписокНеИзменяемыхВариантов.НайтиПоЗначению(СохраненныйВариант.КлючВарианта) = Неопределено Тогда
	    	РезВариант = ОбновитьВариант();
		Иначе
			ИзменениеДоступно = Ложь;
		КонецЕсли;
	Иначе	
	    РезВариант = СоздатьЭлементСправочникаВариантыОтчетов(ТекПользователь);
	КонецЕсли; 
	
	Если РезВариант <> Неопределено Тогда
		бит_ОтчетыСервер.ИзменитьИспользоватьПриОткрытии(РезВариант, ИспользоватьПриОткрытии, ТекПользователь);	
	КонецЕсли;
	
	КлючВарианта = ?(ЗначениеЗаполнено(РезВариант), РезВариант.КлючВарианта, Неопределено);	
	
	СтруктураРезультата.Вставить("РезВариант"		, РезВариант);
	СтруктураРезультата.Вставить("ИзменениеДоступно", ИзменениеДоступно);
	СтруктураРезультата.Вставить("КлючВарианта"		, КлючВарианта);	

	Возврат СтруктураРезультата;
	
КонецФункции // СоздатьОбновитьВариант()

&НаСервере
Процедура ОбновитьТаблицуВариантов()
	
	СтруктураДоступности = бит_ОтчетыСервер.ПроверитьДоступностьВариантовНастроек(КлючОбъекта, Истина);
	фСписокНеДоступныхВариантов  = СтруктураДоступности.СписокНеДоступныхВариантов;
	фСписокНеИзменяемыхВариантов = СтруктураДоступности.СписокНеИзменяемыхВариантов;
	КлючВариантаПоУмолчанию      = СтруктураДоступности.ИспользуемыйПриОткрытииВариант;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КлючОбъекта", КлючОбъекта);
	Запрос.Текст = "
	|ВЫБРАТЬ
    |	бит_ВариантыОтчетов.Ссылка,
    |	бит_ВариантыОтчетов.Наименование,
	|	бит_ВариантыОтчетов.Ответственный,
    |	бит_ВариантыОтчетов.КлючВарианта,
    |	бит_ВариантыОтчетов.ТипВарианта
    |ИЗ
    |	Справочник.бит_ВариантыОтчетов КАК бит_ВариантыОтчетов
    |ГДЕ
    |	бит_ВариантыОтчетов.КлючОбъекта = &КлючОбъекта
    |
    |УПОРЯДОЧИТЬ ПО
    |	бит_ВариантыОтчетов.Наименование
    |АВТОУПОРЯДОЧИВАНИЕ
	|";
				   
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	ТаблицаСохраненныеВарианты.Очистить();
		
	// Пользовательские варианты
	Пока Выборка.Следующий() Цикл
		
		Если фСписокНеДоступныхВариантов.НайтиПоЗначению(Выборка.КлючВарианта) <> Неопределено Тогда
			фСписокНеДоступныхИмен.Добавить(Выборка.Наименование);
			Продолжить;		
		КонецЕсли;
		НоваяСтрока = ТаблицаСохраненныеВарианты.Добавить();
		НоваяСтрока.СохраненныйВариант 		= Выборка.Ссылка;
		НоваяСтрока.Ответственный 			= Выборка.Ответственный;
		
		НоваяСтрока.ИспользоватьПриОткрытии = Выборка.КлючВарианта = КлючВариантаПоУмолчанию;
		
		НоваяСтрока.ЭтоПредопределенный = Выборка.ТипВарианта = Перечисления.бит_ТипыВариантовОтчетов.Предопределенный; 		
				
	КонецЦикла; 

КонецПроцедуры // ОбновитьТаблицуВариантов()

&НаСервере
Процедура ИзменитьИспользоватьПриОткрытии(ИдСтроки)

	ТекущиеДанные = ТаблицаСохраненныеВарианты.НайтиПоИдентификатору(ИдСтроки);
	Если ТекущиеДанные <> Неопределено Тогда

		бит_ОтчетыСервер.ИзменитьИспользоватьПриОткрытии(ТекущиеДанные.СохраненныйВариант, ИспользоватьПриОткрытии);
		ОбновитьТаблицуВариантов(); 		

	КонецЕсли; 

КонецПроцедуры // ИзменитьИспользоватьПриОткрытии()

&НаСервере
Функция НайтиСтрокуСохраненногоВариантаВТаблице()

	НайденнаяСтрока = Неопределено;
	
	Для каждого СтрокаТаблицы Из ТаблицаСохраненныеВарианты Цикл
				
		Если Строка(СтрокаТаблицы.СохраненныйВариант.Наименование) = НаименованиеВарианта Тогда
			
			Если СтрокаТаблицы.ЭтоПредопределенный Тогда			
				Продолжить;				
			Иначе
		        НайденнаяСтрока 	    = СтрокаТаблицы.ПолучитьИдентификатор();
				ИспользоватьПриОткрытии = СтрокаТаблицы.ИспользоватьПриОткрытии;
				Прервать; 				
			КонецЕсли;
			
		КонецЕсли; 
	
	КонецЦикла; 

	Возврат НайденнаяСтрока;
	
КонецФункции // НайтиСтрокуСохраненногоВариантаВТаблице()

&НаКлиенте
Процедура УстановитьДекорациюВарианта()

	Если ЗначениеЗаполнено(СохраненныйВариант) Тогда
	   ТекстВариантаСтарыйНовый = "Существующий вариант";
	Иначе	
	   ТекстВариантаСтарыйНовый = "Новый вариант";
	КонецЕсли; 
	
КонецПроцедуры // УстановитьДекорациюВарианта()

&НаКлиенте
Процедура ОчиститьТекущийВариант(ОчищатьНаименование = Истина)

	 СохраненныйВариант = Неопределено;
	 ИспользоватьПриОткрытии = Ложь;

	 Если ОчищатьНаименование Тогда		 
		 НаименованиеВарианта = "";		 
	 КонецЕсли; 
	 
	УстановитьДекорациюВарианта(); 	 
	 
КонецПроцедуры // ОчиститьТекущийВариант()

#КонецОбласти
