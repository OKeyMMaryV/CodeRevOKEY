


&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	СсылкаНаДокумент = ПараметрКоманды;
	
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками")); // 60
	МассивСчетов.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами")); // 76
	
	Дата			= ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(СсылкаНаДокумент, "Дата");
	Организация		= ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(СсылкаНаДокумент, "Организация");
	Контрагент		= ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(СсылкаНаДокумент, "Контрагент");
	ДоговорКонтрагента = ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(СсылкаНаДокумент, "ДоговорКонтрагента");
	НачалоПериода	= НачалоМесяца(Дата);
	КонецПериода	= КонецДня(Дата);
	ПоСубсчетам		= Истина;
	Периодичность	= 0;
	
	ИмяОтчета = "ОборотноСальдоваяВедомостьПоСчету";
	ИмяФормы = СтрШаблон("Отчет.%1.Форма.ФормаОтчета", ИмяОтчета);
	
	Для каждого Счет Из МассивСчетов Цикл
	
		КлючФормы = СтрШаблон("%1%2%3", Строка(Счет), Строка(Контрагент.УникальныйИдентификатор()), Строка(ДоговорКонтрагента.УникальныйИдентификатор()));		
		
	    ПользовательскиеНастройкиКомпоновкиДанных = Новый ПользовательскиеНастройкиКомпоновкиДанных;
	    ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.Вставить("Счет"			, Счет);
		ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.Вставить("НачалоПериода"	, НачалоПериода);
	    ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.Вставить("КонецПериода"	, КонецПериода);
	    ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.Вставить("Организация"		, Организация);
		ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.Вставить("ПоСубсчетам"		, ПоСубсчетам);
		ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.Вставить("Периодичность"	, Периодичность);
		

		НовыйОтбор = ПользовательскиеНастройкиКомпоновкиДанных.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		
		НовыйОтбор.ИдентификаторПользовательскойНастройки = "Отбор";    
		БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(НовыйОтбор, "Субконто1"	, Контрагент);
		БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(НовыйОтбор, "Субконто2"	, ДоговорКонтрагента);

		// Контрагенты.
		ТабличнаяЧастьГруппировка = Новый Массив;
		
		ОписаниеГруппировки = Новый Структура;
		ОписаниеГруппировки.Вставить("Использование", Истина);
		ОписаниеГруппировки.Вставить("Поле", "Субконто1");
		ОписаниеГруппировки.Вставить("Представление", "Контрагенты");
		ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
		ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
		
		// Договоры.
		ОписаниеГруппировки = Новый Структура;
		ОписаниеГруппировки.Вставить("Использование", Истина);
		ОписаниеГруппировки.Вставить("Поле", "Субконто2");
		ОписаниеГруппировки.Вставить("Представление", "Договоры");
		ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
		ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
		
		Если Счет = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками") Тогда
		
			// Документы расчетов с контрагентом.
			ОписаниеГруппировки = Новый Структура;
			ОписаниеГруппировки.Вставить("Использование", Истина);
			ОписаниеГруппировки.Вставить("Поле", "Субконто3");
			ОписаниеГруппировки.Вставить("Представление", "Документы расчетов с контрагентом");
			ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
			ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
		
		КонецЕсли;
		
		ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.Вставить("Группировка", ТабличнаяЧастьГруппировка);
		
	    НастройкиРасшифровки = Новый Структура;
	    НастройкиРасшифровки.Вставить(ИмяОтчета, ПользовательскиеНастройкиКомпоновкиДанных);
	    
	    УсловияОтбора = Новый Структура();
	    УсловияОтбора.Вставить("НастройкиРасшифровки", НастройкиРасшифровки);
	        
	    ОбщиеНастройки = Новый Структура();
	    ОбщиеНастройки.Вставить("Объект"           	   , УсловияОтбора);
	    ОбщиеНастройки.Вставить("НастройкиРасшифровки" , НастройкиРасшифровки);
	    
	    АдресХранилища = ПоместитьВоВременноеХранилище(ОбщиеНастройки, Новый УникальныйИдентификатор);
		
	    ЗаполнятьТиповыеНастройки = Новый Структура;
	    ЗаполнятьТиповыеНастройки.Вставить("Отбор"          , Ложь);
	    ЗаполнятьТиповыеНастройки.Вставить("Группировка"    , Ложь);
	    ЗаполнятьТиповыеНастройки.Вставить("ВыводимыеДанные", Истина);
	    ЗаполнятьТиповыеНастройки.Вставить("Показатели"     , Истина);
		
	    ПараметрыОтчета = Новый Структура;
	    ПараметрыОтчета.Вставить("ВидРасшифровки"         , 1);
	    ПараметрыОтчета.Вставить("АдресНастроек"          , АдресХранилища);
	    ПараметрыОтчета.Вставить("СформироватьПриОткрытии", Истина);
	    ПараметрыОтчета.Вставить("ИДРасшифровки"          , ИмяОтчета);
	    ПараметрыОтчета.Вставить("РежимРасшифровки"       , Истина);
	    ПараметрыОтчета.Вставить("ЗаполняемыеНастройки"   , ЗаполнятьТиповыеНастройки);
		
		ОткрытьФорму(ИмяФормы, ПараметрыОтчета, ПараметрыВыполненияКоманды.Источник, КлючФормы);
		
	КонецЦикла;
	
КонецПроцедуры
