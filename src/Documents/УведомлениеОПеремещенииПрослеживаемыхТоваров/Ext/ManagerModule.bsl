#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ВыгрузитьУведомлениеОПеремещенииПрослеживаемыхТоваров(Документ) Экспорт
	
	ПараметрыВыгрузки = ПараметрыУведомления(Документ);
	
	Контейнер = ИнтерфейсыВзаимодействияБРО.СтруктураКонтейнераДанных(ПараметрыВыгрузки);
	
	Если Контейнер.Свойство("Ошибки") 
		И Контейнер.Ошибки.Количество() > 0 Тогда
		
		Возврат Новый Структура("АдресФайлаВыгрузки,ИмяФайлаВыгрузки,Ошибки",
					Контейнер.АдресФайлаВыгрузки, Контейнер.ИмяФайлаВыгрузки, Контейнер.Ошибки);
	
	КонецЕсли;
	
	ЗаполнитьДополнительныеРеквизиты(Контейнер, Документ);
	
	Если ЗначениеЗаполнено(Контейнер.Раздел1) Тогда
		ЗаполнитьРаздел1(Контейнер.Раздел1, Документ);
	КонецЕсли;
	
	Результат = ИнтерфейсыВзаимодействияБРО.ВыгрузитьДанныеАлгоритмамиРегламентированногоОтчета(Контейнер);
	
	Возврат Новый Структура("АдресФайлаВыгрузки,ИмяФайлаВыгрузки,Ошибки",
					Результат.АдресФайлаВыгрузки, Результат.ИмяФайлаВыгрузки, Результат.Ошибки);
	
КонецФункции

// Формирует заполненные таблицы документа
//
// Параметры:
//  Параметры - Структура: 
//						- Организация - СправочникСсылка - организация
//						- Период - Дата - дата помощника получения РНПТ
//  АдресРезультата - строка - адрес, куда будет помещен результат 
// 
Процедура ЗаполнитьДокумент(Параметры, АдресРезультата) Экспорт
	
	ДанныеТаблиц = ЗаполнитьДокументДанными(
		Параметры.Дата,
		Параметры.Организация);
	
	ПоместитьВоВременноеХранилище(ДанныеТаблиц, АдресРезультата);
	
КонецПроцедуры

#Область ПодготовкаПараметровПроведенияДокумента

// Функция подготавливает параметры проведения документа
Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = 
		ПрослеживаемостьПереопределяемый.ТекстЗапросаТаблицаТоваровУведомлениеОПеремещении(НомераТаблиц, ДокументСсылка);
	
	ПрослеживаемостьПереопределяемый.ДополнительныеПараметрыЗапроса(НомераТаблиц, Запрос);
	
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	
	Возврат ПараметрыПроведения;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСписокПечатныхФормУведомлениеОПеремещенииПрослеживаемыхТоваров(Документ) Экспорт
	
	ПараметрыПечати = ПараметрыУведомления(Документ);
	
	Контейнер = ИнтерфейсыВзаимодействияБРО.СтруктураКонтейнераДанных(ПараметрыПечати);
	
	Если Контейнер.Свойство("Ошибки") 
		И Контейнер.Ошибки.Количество() > 0 Тогда
		
		Возврат Новый СписокЗначений;
	
	КонецЕсли;
	
	ЗаполнитьДополнительныеРеквизиты(Контейнер, Документ);
	
	Если ЗначениеЗаполнено(Контейнер.Раздел1) Тогда
		ЗаполнитьРаздел1(Контейнер.Раздел1, Документ);
	КонецЕсли;
	
	Результат = ИнтерфейсыВзаимодействияБРО.ПечатныйБланкСформированныйАлгоритмамиРегламентированныхОтчетов(Контейнер);
	
	Если Результат.Количество() = 0 Тогда
		Возврат Новый СписокЗначений;
	КонецЕсли;
	
	СписокПечатныхФорм = Новый СписокЗначений;
	
	НомерЛиста = 0;
	Для каждого ТекущаяСтрокаРезультат Из Результат Цикл
		
		НомерЛиста = НомерЛиста + 1;
		
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(ТекущаяСтрокаРезультат);
		МассивПараметров.Добавить(Новый УникальныйИдентификатор());
		МассивПараметров.Добавить("");
		
		ТекстПечатнойформы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Уведомление о перемещении. Лист %1'"), НомерЛиста);
		СписокПечатныхФорм.Добавить(МассивПараметров, ТекстПечатнойформы);
		
	КонецЦикла;
	
	Возврат СписокПечатныхФорм;
	
КонецФункции

Процедура ЗаполнитьРаздел1(ТаблицаРаздел1, Документ)

	// Схема таблицы ТаблицаРаздел1
	// Данные - Структура данные контрагента
	// ДанныеМногострочныхЧастей - Дерево значений -  Содержит две таблицы  П00001М1, П00001М1
	//
	//	П00001М1 - дерево значений - содержит "сведения о сопроводительном документе"
	//		Данные - Структура - 
	//                 П00001М100001 - Строка - Возможны значения: 1-счет-фактура, 2-УПД, 3-Иное.
	//                 П00001М100002 - Строка - номер докуента
	//                 П00001М100003 - Дата   - дата документа
	//		ДанныеМногострочныхЧастей - Структура
	//
	//	П00001М2 - дерево значений - содержатся "Сведения о пунктах назначения товара, подлежащего прослеживаемости,
	//                        на территории государств-членов ЕАЭС в соответствии с сопроводительным документом"
	//		Данные - Структура - показатели:
	//					П00001М200001 - Строка -  пункт назначения
	//      ДанныеМногострочныхЧастей - Структура
	//
	//	П00001М3 - дерево значений - содержатся строки по товарам
	//		Данные - Структура - показатели:
	//                 П00001М300001 - Число  - порядковый номер номенклатуры в сопроводительном документе
	//                 П00001М300002 - Строка - наименование товара
	//                 П00001М300003 - Число  - количество
	//                 П00001М300004 - Строка - единица измерения
	//                 П00001М300005 - Строка - РНПТ.
	//                 П00001М300006 - Строка - единица измерения прослеживаемости
	//                 П00001М300007 - Число  - количество прослеживаемости.
	//                 П00001М300008 - Число  - сумма без НДС
	//
	//      ДанныеМногострочныхЧастей - Структура
	
	// Формируем запрос по данным
	Запрос = Новый Запрос;
	Запрос.Текст = ПрослеживаемостьПереопределяемый.ТекстЗапросаПоТаблицамУведомленияОПеремещенииПрослеживаемыхТоваров();
	Запрос.УстановитьПараметр("Документ", Документ);
	Выборка = Запрос.Выполнить();
	
	Если Выборка.Пустой() Тогда
		Возврат ;
	КонецЕсли;
	
	ПустаяТаблицаРаздел1 = ТаблицаРаздел1.Скопировать();
	
	Результат = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// Формируем шаблоны таблицы заполнения
	Раздел1 = ТаблицаРаздел1.Строки[0];
	ШаблонДанныеРазделДанныеКонтрагента = Раздел1.Данные;
	ШаблонДанныеМногострочныхЧастейРаздел1 = Раздел1.ДанныеМногострочныхЧастей;
	
	ШаблонТаблицаП00001М1СопроводительныйДокумент = ШаблонДанныеМногострочныхЧастейРаздел1.П00001М1.Скопировать();
		ШаблонДанныеТаблицаП00001М1СопроводительныйДокумент = ШаблонТаблицаП00001М1СопроводительныйДокумент.Строки[0].Данные;
		
	ШаблонТаблицаП00001М2ПунктыНазначенияТоваров = ШаблонДанныеМногострочныхЧастейРаздел1.П00001М2.Скопировать();
		ШаблонДанныеТаблицаП00001М2ПунктыНазначенияТовара = ШаблонТаблицаП00001М2ПунктыНазначенияТоваров.Строки[0].Данные;
		
	ШаблонТаблицаП00001М3Товары = ШаблонДанныеМногострочныхЧастейРаздел1.П00001М3.Скопировать();
		ШаблонДанныеТаблицаП00001М3Товары = ШаблонТаблицаП00001М3Товары.Строки[0].Данные;
	
	ПрослеживаемостьФормированиеОтчетности.ОчиститьЗначенияПоказателей(ШаблонДанныеРазделДанныеКонтрагента);
	ПрослеживаемостьФормированиеОтчетности.ОчиститьЗначенияПоказателей(
		ШаблонДанныеТаблицаП00001М1СопроводительныйДокумент);
	ПрослеживаемостьФормированиеОтчетности.ОчиститьЗначенияПоказателей(ШаблонДанныеТаблицаП00001М2ПунктыНазначенияТовара);
	ПрослеживаемостьФормированиеОтчетности.ОчиститьЗначенияПоказателей(ШаблонДанныеТаблицаП00001М3Товары);
	
	ШаблонТаблицаП00001М1СопроводительныйДокумент.Строки.Очистить();
	ШаблонТаблицаП00001М2ПунктыНазначенияТоваров.Строки.Очистить();
	ШаблонТаблицаП00001М3Товары.Строки.Очистить();
	ТаблицаРаздел1.Строки.Очистить();
	
	// Заполняем таблицу Раздел1 данными
	
	// Выборка по контрагенту
	Пока Результат.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Результат.Контрагент) Тогда
			ТаблицаРаздел1 = ПустаяТаблицаРаздел1.Скопировать();
			Возврат ;
		КонецЕсли;
		
		Раздел1НоваяСтрока = ТаблицаРаздел1.Строки.Добавить();
		Раздел1НоваяСтрока.Данные = 
			ПрослеживаемостьФормированиеОтчетности.НоваяСтруктура(ШаблонДанныеРазделДанныеКонтрагента);
		Раздел1НоваяСтрока.ДанныеМногострочныхЧастей = 
			ПрослеживаемостьФормированиеОтчетности.НоваяСтруктура(ШаблонДанныеМногострочныхЧастейРаздел1);
		
		ДанныеРаздел1 = Раздел1НоваяСтрока.Данные;
		ДанныеМногострочныхЧастейРаздел1 = Раздел1НоваяСтрока.ДанныеМногострочныхЧастей;
		
		ДанныеКонтрагента = ПрослеживаемостьПереопределяемый.РеквизитыКонтрагента(Результат.Контрагент);
		ДанныеРаздел1.П000010000100 = ДанныеКонтрагента["Признак"]; // Признак физического лица, возможны значения: "V" - физ. лицо; "" - организация.
		ДанныеРаздел1.П000010000200 = ДанныеКонтрагента["Наименование"]; // Наименование организации (1 - 1000 символов).
		ДанныеРаздел1.П000010000300 = ДанныеКонтрагента["Фамилия"]; // Фамилия физического лица (1 - 60 символов).
		ДанныеРаздел1.П000010000400 = ДанныеКонтрагента["Имя"]; // Имя физического лица (1 - 60 символов).
		ДанныеРаздел1.П000010000500 = ДанныеКонтрагента["Отчетсво"]; // Отчество физического лица (1 - 60 символов).
		ДанныеРаздел1.П000010000600 = ДанныеКонтрагента["КодГосударства"]; // Код государства-члена ЕАЭС по ОКСМ (3 цифры).
		ДанныеРаздел1.П000010000700 = ДанныеКонтрагента["ИдентификационныйКод"]; // Идентификационный код (номер) в государстве-члене ЕАЭС (8 - 14 символов).
		ДанныеРаздел1.П000010000800 = ДанныеКонтрагента["Адрес"]; // Адрес (Строка: 1 - 1000 символов).
		
		// Добавляем в таблицу данные по сопроводительным документам
		ВыборкаПоСопроводительнымДокументам = Результат.Выбрать(
			ОбходРезультатаЗапроса.ПоГруппировкам, "СопроводительныйДокумент"
			);
		
		СписокПунктовНазначения = ДобавитьДанныеПоСопроводительномуДокументуПоКонтрагенту(
																	ДанныеМногострочныхЧастейРаздел1,
																	ШаблонТаблицаП00001М1СопроводительныйДокумент,
																	ШаблонДанныеТаблицаП00001М1СопроводительныйДокумент,
																	ВыборкаПоСопроводительнымДокументам);
		
		ДобавитьДанныеПоПунктуНазначенияПоКонтрагенту(
			ДанныеМногострочныхЧастейРаздел1,
			ШаблонТаблицаП00001М2ПунктыНазначенияТоваров,
			ШаблонДанныеТаблицаП00001М2ПунктыНазначенияТовара,
			СписокПунктовНазначения);
		
		// Добавляем в таблицу данные по товарам
		ВыборкаНомерСтроки = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ПорядковыйНомер");
			
		ДобавитьДанныеПоТоварамПоКонтрагенту(
			ДанныеМногострочныхЧастейРаздел1,
			ШаблонТаблицаП00001М3Товары,
			ШаблонДанныеТаблицаП00001М3Товары,
			ВыборкаНомерСтроки);
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьДанныеПоПунктуНазначенияПоКонтрагенту(ДанныеМногострочныхЧастейРаздел1,
			ШаблонТаблицаП00001М2ПунктыНазначенияТоваров, ШаблонДанныеТаблицаП00001М2ПунктыНазначенияТовара,
			ВыборкаПоПунктамНазначения)

		ДанныеМногострочныхЧастейРаздел1.П00001М2 = ШаблонТаблицаП00001М2ПунктыНазначенияТоваров.Скопировать();
		ПунктыНазначения = ДанныеМногострочныхЧастейРаздел1.П00001М2;
		
		Для каждого ТекущаяСтрока Из ВыборкаПоПунктамНазначения Цикл

			ПунктыНазначенияНоваяСтрока = ПунктыНазначения.Строки.Добавить();
			ПунктыНазначенияНоваяСтрока.Данные = 
				ПрослеживаемостьФормированиеОтчетности.НоваяСтруктура(ШаблонДанныеТаблицаП00001М2ПунктыНазначенияТовара);
			ПунктыНазначенияНоваяСтрока.Данные.П00001М200001 = ТекущаяСтрока.Значение; 
			
		КонецЦикла;
			
КонецПроцедуры

Функция ДобавитьДанныеПоСопроводительномуДокументуПоКонтрагенту(ДанныеМногострочныхЧастейРаздел1,
			ШаблонТаблицаП00001М1СопроводительныйДокумент, ШаблонДанныеТаблицаП00001М1СопроводительныйДокумент,
			ВыборкаПоСопроводительнымДокументам)

		ДанныеМногострочныхЧастейРаздел1.П00001М1 = ШаблонТаблицаП00001М1СопроводительныйДокумент.Скопировать();
		СопроводительныеДокументы = ДанныеМногострочныхЧастейРаздел1.П00001М1;
		
		СписокПунктовНазначения = Новый СписокЗначений;
		
		Пока ВыборкаПоСопроводительнымДокументам.Следующий() Цикл

			ДанныеСтроки = ПрослеживаемостьПереопределяемый.ПолучитьДанныеСтрокиВыборки(ВыборкаПоСопроводительнымДокументам);
			
			СопроводительныйДокументНоваяСтрока = СопроводительныеДокументы.Строки.Добавить();
			СопроводительныйДокументНоваяСтрока.Данные = 
				ПрослеживаемостьФормированиеОтчетности.НоваяСтруктура(ШаблонДанныеТаблицаП00001М1СопроводительныйДокумент);
			СопроводительныйДокументНоваяСтрока.Данные.П00001М100001 = 2;  // Возможны значения: 1 - СФ, 2 - УПД, 3 - Иное.
			СопроводительныйДокументНоваяСтрока.Данные.П00001М100002 = ДанныеСтроки["НомерСопроводительногоДокумента"]; // Строка - графа 2 (1 - 255 символов).
			СопроводительныйДокументНоваяСтрока.Данные.П00001М100003 = ДанныеСтроки["ДатаСопроводительногоДокумента"]; // графа 3, дата
			
			Если ЗначениеЗаполнено(ДанныеСтроки.АдресДоставки)
				И СписокПунктовНазначения.НайтиПоЗначению(ДанныеСтроки.АдресДоставки) = Неопределено Тогда
				
				СписокПунктовНазначения.Добавить(ДанныеСтроки.АдресДоставки);
			
			КонецЕсли;
			
		КонецЦикла;
		
		
		Возврат СписокПунктовНазначения;
		
КонецФункции

Процедура ДобавитьДанныеПоТоварамПоКонтрагенту(ДанныеМногострочныхЧастейРаздел1, ШаблонТаблицаП00001М3Товары,
			ШаблонДанныеТаблицаП00001М3Товары, ВыборкаНомерСтроки)
			
		ДанныеМногострочныхЧастейРаздел1.П00001М3 = ШаблонТаблицаП00001М3Товары.Скопировать();
		Товары = ДанныеМногострочныхЧастейРаздел1.П00001М3;
		
		НомерСтроки = 0;
		Пока ВыборкаНомерСтроки.Следующий() Цикл

			ДанныеСтроки = ПрослеживаемостьПереопределяемый.ПолучитьДанныеСтрокиВыборки(ВыборкаНомерСтроки);
			
			НомерСтроки = НомерСтроки + 1;
			
			ТоварыНоваяСтрока = Товары.Строки.Добавить();
			ТоварыНоваяСтрока.Данные = ПрослеживаемостьФормированиеОтчетности.НоваяСтруктура(ШаблонДанныеТаблицаП00001М3Товары);
			ТоварыНоваяСтрока.Данные.П00001М300001 = ПроверитьНаNull(ДанныеСтроки["ПорядковыйНомерВСопроводительномДокументе"], 0); // - Число  - графа 1 (0 - 999)
			ТоварыНоваяСтрока.Данные.П00001М300002 = ПроверитьНаNull(ДанныеСтроки["НаименованиеТовара"], ""); //- Строка - графа 2 (1 - 255 символов).
			ТоварыНоваяСтрока.Данные.П00001М300003 = ПроверитьНаNull(ДанныеСтроки["Количество"], 0); // Число  - графа 3 (0 - 9999999999999.999999).
			ТоварыНоваяСтрока.Данные.П00001М300004 = ПроверитьНаNull(ДанныеСтроки["КодЕдиницаИзмерения"], ""); // - Строка - графа 4 (3 - 4 цифры).
			ТоварыНоваяСтрока.Данные.П00001М300005 = ПроверитьНаNull(ДанныеСтроки["РНПТ"], ""); // - Строка - графа 5 (1 - 29 смволов).
			ТоварыНоваяСтрока.Данные.П00001М300006 = ПроверитьНаNull(ДанныеСтроки["ЕдиницаПрослеживаемости"], ""); // - Строка - графа 6 (3 - 4 цифры).
			ТоварыНоваяСтрока.Данные.П00001М300007 = ПроверитьНаNull(ДанныеСтроки["КоличествоПрослеживаемости"], 0); //Число  - графа 7 (0 - 999999999999999.99999999999).
			ТоварыНоваяСтрока.Данные.П00001М300008 = ПроверитьНаNull(ДанныеСтроки["СуммаБезНДС"], 0); //- Число  - графа 8 (0 - 99999999999999999.99).
			
		КонецЦикла;
			
КонецПроцедуры

Функция ПроверитьНаNull(Значение, ЗначениеПоУмолчанию)

	Если Значение = Null Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

Функция ЗаполнитьДополнительныеРеквизиты(Контейнер, Документ)
	
	ПараметрыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, "Организация,Дата,Номер");
	
	Контейнер.Организация = Документ.Организация;
	Контейнер.НалоговыйОрган = ПрослеживаемостьПереопределяемый.КодГосударственногоОрганаОрганизации(
			ПараметрыДокумента.Организация);
			
	Контейнер.ДатаУведомления = ПараметрыДокумента.Дата;
	Контейнер.ДатаПодписи = ПараметрыДокумента.Дата;
	
	Контейнер.КПП = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыДокумента.Организация, "КПП");
	Контейнер.НомерУведомления = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ПараметрыДокумента.Номер, Истина, Ложь);
	Контейнер.ДатаУведомления = ПараметрыДокумента.Дата;
	
КонецФункции

Функция ЗаполнитьДокументДанными(Период, Организация, ДокументОснование = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияПрослеживаемыхТоваровОстатки.Контрагент КАК Контрагент,
	|	РеализацияПрослеживаемыхТоваровОстатки.СопроводительныйДокумент КАК СопроводительныйДокумент,
	|	РеализацияПрослеживаемыхТоваровОстатки.Номенклатура КАК Номенклатура,
	|	РеализацияПрослеживаемыхТоваровОстатки.РНПТ КАК РНПТ,
	|	РеализацияПрослеживаемыхТоваровОстатки.ПорядковыйНомер КАК ПорядковыйНомер,
	|	РеализацияПрослеживаемыхТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	РеализацияПрослеживаемыхТоваровОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемостиОстаток,
	|	РеализацияПрослеживаемыхТоваровОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ВЫРАЗИТЬ(РеализацияПрослеживаемыхТоваровОстатки.Номенклатура КАК Справочник.Номенклатура).КодТНВЭД КАК КодТНВЭД,
	|	ВЫРАЗИТЬ(РеализацияПрослеживаемыхТоваровОстатки.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВТ_ВыборкаДанных
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТоварыОтгруженныеВЕАЭС.Остатки(&Период, Организация = &Организация) КАК РеализацияПрослеживаемыхТоваровОстатки
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ДокументОснование <> НЕОПРЕДЕЛЕНО
	|				ТОГДА РеализацияПрослеживаемыхТоваровОстатки.СопроводительныйДокумент = &ДокументОснование
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВыборкаДанных.Контрагент КАК Контрагент
	|ИЗ
	|	ВТ_ВыборкаДанных КАК ВТ_ВыборкаДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ВыборкаДанных.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВыборкаДанных.Номенклатура КАК Номенклатура,
	|	ВТ_ВыборкаДанных.РНПТ КАК РНПТ,
	|	ВТ_ВыборкаДанных.Контрагент КАК Контрагент,
	|	ВТ_ВыборкаДанных.ПорядковыйНомер КАК ПорядковыйНомер,
	|	ВТ_ВыборкаДанных.КоличествоОстаток КАК Количество,
	|	ВТ_ВыборкаДанных.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемости,
	|	ВТ_ВыборкаДанных.СуммаОстаток КАК Сумма,
	|	ВТ_ВыборкаДанных.СопроводительныйДокумент КАК СопроводительныйДокумент,
	|	ВТ_ВыборкаДанных.КодТНВЭД КАК КодТНВЭД,
	|	ВТ_ВыборкаДанных.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЫРАЗИТЬ(ВТ_ВыборкаДанных.КодТНВЭД КАК Справочник.КлассификаторТНВЭД).ЕдиницаИзмерения КАК ЕдиницаПрослеживаемости
	|ИЗ
	|	ВТ_ВыборкаДанных КАК ВТ_ВыборкаДанных";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	// В таблице товары СопроводительныйДокумент показывает сигнал к новому ключу
	ТаблицаКонтрагенты = РезультатЗапроса[1].Выгрузить();
	ТаблицаКонтрагенты.Колонки.Добавить("КлючСтроки", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ТаблицаКонтрагенты.Колонки.Добавить("ЕдиницыПрослеживаемостиСовпадают", Новый ОписаниеТипов("Булево"));
	
	ТаблицаТовары = РезультатЗапроса[2].Выгрузить();
	ТаблицаТовары.Колонки.Добавить("КлючСтроки", Новый ОписаниеТипов("УникальныйИдентификатор"));
	
	ФильтрОтбора = Новый Структура("Контрагент");
	
	Для каждого ТекущаСтрокаКонтрагенты Из ТаблицаКонтрагенты Цикл
		
		ЗаполнитьЗначенияСвойств(ФильтрОтбора, ТекущаСтрокаКонтрагенты);
		ТекущаСтрокаКонтрагенты.КлючСтроки = Новый УникальныйИдентификатор();
		
		ТекущаСтрокаКонтрагенты.ЕдиницыПрослеживаемостиСовпадают = Истина;
		
		НаденныйСтрокиТовары = ТаблицаТовары.НайтиСтроки(ФильтрОтбора);
		
		Для каждого ТекущаяСтрокаТовары Из НаденныйСтрокиТовары Цикл
			
			ТекущаяСтрокаТовары.КлючСтроки = ТекущаСтрокаКонтрагенты.КлючСтроки;
			
			Если ТекущаяСтрокаТовары.ЕдиницаИзмерения <> ТекущаяСтрокаТовары.ЕдиницаПрослеживаемости Тогда
				
				ТекущаСтрокаКонтрагенты.ЕдиницыПрослеживаемостиСовпадают = Ложь;
				
			КонецЕсли;
		
		КонецЦикла;
	КонецЦикла;
	
	Возврат Новый Структура("Контрагенты,Товары", ТаблицаКонтрагенты, ТаблицаТовары)
	
КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПараметрыУведомления(Документ)
	
	ПараметрыВыгрузки = Новый Структура();
	ПараметрыВыгрузки.Вставить("ИсточникОтчета", "РегламентированныйОтчетПрослеживаемыеТоварыПеремещение");
	ПараметрыВыгрузки.Вставить("ВыбраннаяФорма", "ФормаОтчета2021Кв3");
	ПараметрыВыгрузки.Вставить("ВерсияФормата",  "5.01");
	ПараметрыВыгрузки.Вставить("СсылкаНаВнешнийОбъект", Документ);
	
	Возврат ПараметрыВыгрузки;
	
КонецФункции

#КонецОбласти

#КонецЕсли
