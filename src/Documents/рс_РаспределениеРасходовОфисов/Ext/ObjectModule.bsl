		 
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура выполняет первоначальное заполнение созданного/скопированного документа.
//
// Параметры:
//  ПараметрОбъектКопирования - ДокументОбъект.
//
Процедура ПервоначальноеЗаполнениеДокумента(ПараметрОбъектКопирования = Неопределено)
	
	бит_ОбщегоНазначения.ЗаполнитьШапкуДокумента(ЭтотОбъект
												,бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь")
												,ПараметрОбъектКопирования);
												
	// Rarus-spb 2013.01.22 {											
	СуммаДокумента = 0;
	// Rarus-spb 2013.01.22 }		
	
КонецПроцедуры // ПервоначальноеЗаполнениеДокумента() 
											
// Процедура выполняет первоначальное заполнение созданного/скопированного документа.
//
// Параметры:
//  СтруктураШапкиДокумента - Структура
//  СтруктураТаблиц         - Структура
//  Отказ            		- Булево
//  Заголовок 				- Строка
//
Процедура ПроверкаДанных(Отказ, Заголовок)
	
    Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	рс_РаспределениеРасходовОфисов.Ссылка
	|ИЗ
	|	Документ.рс_РаспределениеРасходовОфисов КАК рс_РаспределениеРасходовОфисов
	|ГДЕ
	|	рс_РаспределениеРасходовОфисов.Ссылка <> &Ссылка
	|	И рс_РаспределениеРасходовОфисов.ВидОперации = &ВидОперации
	|	И рс_РаспределениеРасходовОфисов.Организация = &Организация
	|	И рс_РаспределениеРасходовОфисов.Период = &Период
	|	И рс_РаспределениеРасходовОфисов.Проведен = ИСТИНА";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидОперации", ВидОперации);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Период);
	ТаблицаЗапрос = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаЗапрос.Количество() > 0 Тогда
		бит_ОбщегоНазначения.СообщитьОбОшибке("Уже есть проведенный документ с такими же организацией, видом операции и периодом!", Отказ, Заголовок);
	КонецЕсли;
	
	// Rarus-spb byse 2012.12.28 {
	// Проверям что объект - ТЦ
	Если ВидОперации = Перечисления.рс_ВидыОперацийРаспределениеРасходовОфисов.НаТЦ Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ Первые 1
		|		Объект, Свойство, Значение
		|	ИЗ
		|		РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|	ГДЕ
		| 		(ДополнительныеСведения.Объект = &Объект
		|	И ДополнительныеСведения.Свойство.Заголовок = ""Формат объекта"")";
		Запрос.УстановитьПараметр("Объект", Объект);
		Выборка = Запрос.Выполнить().Выбрать();
		
		мВид = Неопределено;
		Если Выборка.Следующий() Тогда
			мВид = Выборка.Значение;
		КонецЕсли;
		
		 Если мВид <> Перечисления.бит_БК_ФорматОбъекта.ТЦ Тогда
			бит_ОбщегоНазначения.СообщитьОбОшибке("Статус объекта " + Объект + " отличается от ""ТЦ""",Отказ,Заголовок);
		КонецЕсли;	
	КонецЕсли;
	// Rarus-spb byse 2012.12.28 }
	
КонецПроцедуры // ПроверкаДанных()

Функция ПолучитьТаблицуРасчета() Экспорт
	
	Если ВидОперации = Перечисления.рс_ВидыОперацийРаспределениеРасходовОфисов.НаМагазины Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА бит_Дополнительный_2Обороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.бит_Дополнительный_2.ВыручкаОтРеализацииТоваров)
		|				ТОГДА бит_Дополнительный_2Обороты.СуммаРеглОборотКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОборотКт611,
		|	СУММА(ВЫБОР
		|			КОГДА бит_Дополнительный_2Обороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.бит_Дополнительный_2.ВыручкаОтРеализацииТоваров)
		|				ТОГДА бит_Дополнительный_2Обороты.СуммаРеглОборотДт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОборотДт611,
		|	СУММА(ВЫБОР
		|			КОГДА бит_Дополнительный_2Обороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.бит_Дополнительный_2.ВыручкаОтРеализацииПродукцииОбщественногоПитания)
		|				ТОГДА бит_Дополнительный_2Обороты.СуммаРеглОборотКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОборотКт612,
		|	СУММА(ВЫБОР
		|			КОГДА бит_Дополнительный_2Обороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.бит_Дополнительный_2.ВыручкаОтРеализацииПродукцииОбщественногоПитания)
		|				ТОГДА бит_Дополнительный_2Обороты.СуммаРеглОборотДт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОборотДт612,
		|	&Коэффициент КАК Коэффициент,
		|	бит_Дополнительный_2Обороты.Субконто1 КАК Объект
		|ПОМЕСТИТЬ ТаблицаОбороты
		|ИЗ
		|	РегистрБухгалтерии.бит_Дополнительный_2.Обороты(&ДатаНач, &ДатаКон, , Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.бит_Дополнительный_2.ВыручкаОтПродаж)), , , , ) КАК бит_Дополнительный_2Обороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|		ПО бит_Дополнительный_2Обороты.Субконто1 = ДополнительныеСведения.Объект
		|ГДЕ
		|	(ДополнительныеСведения.Свойство.Наименование = ""Формат объекта"")
		|	И ((ДополнительныеСведения.Значение = ЗНАЧЕНИЕ(Перечисление.бит_БК_ФорматОбъекта.ГМ)
		|			ИЛИ ДополнительныеСведения.Значение = ЗНАЧЕНИЕ(Перечисление.бит_БК_ФорматОбъекта.СМ)))
		|СГРУППИРОВАТЬ ПО
		|	бит_Дополнительный_2Обороты.Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОбороты.ОборотКт611,
		|	ТаблицаОбороты.ОборотДт611,
		|	ТаблицаОбороты.ОборотКт612,
		|	ТаблицаОбороты.ОборотДт612,
		|	ТаблицаОбороты.ОборотКт611 - ТаблицаОбороты.ОборотДт611 + ТаблицаОбороты.ОборотКт612 - ТаблицаОбороты.ОборотДт612 КАК Оборот61,
		|	ТаблицаОбороты.Коэффициент,
		|	ТаблицаОбороты.Коэффициент * (ТаблицаОбороты.ОборотКт611 - ТаблицаОбороты.ОборотДт611 + ТаблицаОбороты.ОборотКт612 - ТаблицаОбороты.ОборотДт612) КАК СуммаРасходыОфисов,
		|	ТаблицаОбороты.Объект
		|ИЗ
		|	ТаблицаОбороты КАК ТаблицаОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаОбороты.Объект.Наименование";
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Период.Дата));
		Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Период.Дата));
		
		НормативныйКоэффициентДляНачисленияРасходовОфисов = рс_ОбщийМодуль.ПолучитьНастройкуЭкономическогоУчета(Справочники.рс_ПоказателиНастроекЭУ.НормативныйКоэффициентДляНачисленияРасходовОфисов, Дата, 0);
		Запрос.УстановитьПараметр("Коэффициент", НормативныйКоэффициентДляНачисленияРасходовОфисов);
		
		ТаблицаЗапрос = Запрос.Выполнить().Выгрузить();
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(бит_Дополнительный_2Обороты.СуммаРеглОборотКт) КАК ОборотКт62103,
		|	СУММА(бит_Дополнительный_2Обороты.СуммаРеглОборотДт) КАК ОборотДт62103,
		|	&Коэффициент КАК Коэффициент,
		|	бит_Дополнительный_2Обороты.Субконто1 КАК Объект
		|ПОМЕСТИТЬ ТаблицаОбороты
		|ИЗ
		|	РегистрБухгалтерии.бит_Дополнительный_2.Обороты(&ДатаНач, &ДатаКон, , Счет = ЗНАЧЕНИЕ(ПланСчетов.бит_Дополнительный_2.ДоходыОтАрендыПомещений), , Субконто1 = &Объект, , ) КАК бит_Дополнительный_2Обороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|		ПО бит_Дополнительный_2Обороты.Субконто1 = ДополнительныеСведения.Объект
		|ГДЕ
		|	(ДополнительныеСведения.Свойство.Наименование = ""Формат объекта"")
		|	И ((ДополнительныеСведения.Значение = ЗНАЧЕНИЕ(Перечисление.бит_БК_ФорматОбъекта.ТЦ)))
		|
		|СГРУППИРОВАТЬ ПО
		|	бит_Дополнительный_2Обороты.Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОбороты.ОборотКт62103,
		|	ТаблицаОбороты.ОборотДт62103,
		|	ТаблицаОбороты.ОборотКт62103 - ТаблицаОбороты.ОборотДт62103 КАК Оборот62103,
		|	ТаблицаОбороты.Коэффициент,
		|	ТаблицаОбороты.Коэффициент * (ТаблицаОбороты.ОборотКт62103 - ТаблицаОбороты.ОборотДт62103) КАК СуммаРасходыОфисов,
		|	ТаблицаОбороты.Объект
		|ИЗ
		|	ТаблицаОбороты КАК ТаблицаОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаОбороты.Объект.Наименование";
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Период.Дата));
		Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Период.Дата));
		Запрос.УстановитьПараметр("Объект", Объект);
		
		НормативныйКоэффициентДляНачисленияРасходовОфисов = рс_ОбщийМодуль.ПолучитьНастройкуЭкономическогоУчета(Справочники.рс_ПоказателиНастроекЭУ.НормативныйКоэффициентДляНачисленияРасходовОфисов, Дата, 0);
		Запрос.УстановитьПараметр("Коэффициент", НормативныйКоэффициентДляНачисленияРасходовОфисов);
		
		ТаблицаЗапрос = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	Возврат ТаблицаЗапрос;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Процедура выполняет движения по регистрам.
//
Процедура ДвиженияПоРегистрам(Отказ, Заголовок)
	
	ТаблицаРасчета = ПолучитьТаблицуРасчета();
	
	ДвиженияМСФО	= Движения.бит_Дополнительный_2;
	
	Если ВидОперации = Перечисления.рс_ВидыОперацийРаспределениеРасходовОфисов.НаМагазины Тогда
		
		Для Каждого СтрокаРасчета Из ТаблицаРасчета Цикл
			
			Движение = ДвиженияМСФО.Добавить();
//ОК Ванюков К. +// Необходимо,чтобы дата проводок была равна дате документа Распределение расходов офисов. // 2013-05-21
			//Движение.Период 	 		= КонецМесяца(Период.Дата);
			Движение.Период 	 		= Дата;
//ОК Ванюков К. -			
			Движение.Организация 		= Организация;
			
			Движение.СчетДт 			= Счет;
			рс_ОбщийМодуль.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Объект",  СтрокаРасчета.Объект);
			рс_ОбщийМодуль.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Функции",  ФункцияЦФО);
			рс_ОбщийМодуль.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Периоды",  Период);
			
			Движение.СуммаМУ			= СтрокаРасчета.СуммаРасходыОфисов;
			Движение.Содержание 		= "Начислены расходы офисов за " + Формат(Период.Дата, "ДФ='ММММ гггг'");

			Движение.ВидДвиженияМСФО	= Перечисления.БИТ_ВидыДвиженияМСФО.КорректировкаЭУ;
			
		КонецЦикла;
		
		Если ТаблицаРасчета.Итог("СуммаРасходыОфисов") <> 0 Тогда
			
			Движение = ДвиженияМСФО.Добавить();
//ОК Ванюков К. +// Необходимо,чтобы дата проводок была равна дате документа Распределение расходов офисов. // 2013-05-21
			//Движение.Период 	 		= КонецМесяца(Период.Дата);
			Движение.Период 	 		= Дата;
//ОК Ванюков К. -			
			Движение.Организация 		= Организация;
			
			Движение.СчетКт 			= Счет;
			рс_ОбщийМодуль.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Объект",  рс_ОбщийМодуль.ПолучитьНастройкуЭкономическогоУчета(Справочники.рс_ПоказателиНастроекЭУ.ОбъектCancellation, Дата));
			рс_ОбщийМодуль.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Функции",  ФункцияЦФО);
			рс_ОбщийМодуль.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Периоды",  Период);
			
			Движение.СуммаМУ			= ТаблицаРасчета.Итог("СуммаРасходыОфисов");
			Движение.Содержание 		= "Начислены расходы офисов за " + Формат(Период.Дата, "ДФ='ММММ гггг'");
			
			Движение.ВидДвиженияМСФО	= Перечисления.БИТ_ВидыДвиженияМСФО.КорректировкаЭУ;
			
		КонецЕсли;
		
	Иначе
		
		Для Каждого СтрокаРасчета Из ТаблицаРасчета Цикл
			
			Движение = ДвиженияМСФО.Добавить();
			Движение.Период 	 		= Дата;
			Движение.Организация 		= Организация;
			
			Движение.СчетДт 			= Счет;
			рс_ОбщийМодуль.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Объект",  СтрокаРасчета.Объект);
			рс_ОбщийМодуль.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Функции",  ФункцияЦФО);
			рс_ОбщийМодуль.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Периоды",  Период);
			
			Движение.СчетКт 			= Счет;
			рс_ОбщийМодуль.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Объект",  рс_ОбщийМодуль.ПолучитьНастройкуЭкономическогоУчета(Справочники.рс_ПоказателиНастроекЭУ.ОбъектCancellation, Дата));
			рс_ОбщийМодуль.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Функции",  ФункцияЦФО);
			рс_ОбщийМодуль.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Периоды",  Период);
			
			Движение.СуммаМУ			= СтрокаРасчета.СуммаРасходыОфисов;
			Движение.Содержание 		= "Начислены расходы офисов за " + Формат(Период.Дата, "ДФ='ММММ гггг'");
			
			Движение.ВидДвиженияМСФО	= Перечисления.БИТ_ВидыДвиженияМСФО.КорректировкаЭУ;
			
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры // ДвиженияПоРегистрам()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ПриКопировании"
//
Процедура ПриКопировании(ОбъектКопирования)
	
	ПервоначальноеЗаполнениеДокумента(ОбъектКопирования);
	
	
КонецПроцедуры // ПриКопировании()

// Процедура - обработчик события "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидОперации <> Перечисления.рс_ВидыОперацийРаспределениеРасходовОфисов.НаТЦ Тогда
		Объект = Неопределено;	
	КонецЕсли;	
	
	Если Не Отказ Тогда
	КонецЕсли;
	
	// Rarus-spb byse 2012.12.27 {
	Если Не Отказ Тогда
		РассчитатьСуммуДокумента();
	КонецЕсли;
	// Rarus-spb byse 2012.12.27 }

КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ОбработкаПроведения".
//
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияБПВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);
		
	// Проверка данных
	ПроверкаДанных(Отказ, Заголовок);
	
	// Проведение
	Если Не Отказ Тогда
		ДвиженияПоРегистрам(Отказ, Заголовок);
	КонецЕсли; 
	
	// Rarus-spb byse 2012.12.27 {
	//МассивСсылок = Новый Массив;
	//МассивСсылок.Добавить(Ссылка);
	
	//ПечатнаяФорма = Документы.рс_РаспределениеРасходовОфисов.СформироватьПечатнуюФормуПротоколРасчета("", МассивСсылок);
	//ХранилищеПечатнойФормы = Новый ХранилищеЗначения(ПечатнаяФорма, Новый СжатиеДанных(9));
	//Движение = Движения.рс_ПротоколыРасчета.Добавить();
	//Движение.Документ		 = Ссылка;
	//Движение.ПротоколРасчета = ХранилищеПечатнойФормы;
	Документы.рс_РаспределениеРасходовОфисов.СохранениеПечатнойФормы(ЭтотОбъект);
	// Rarus-spb byse 2012.12.27 {
	Если Не Отказ Тогда
		РассчитатьСуммуДокумента();
		ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	// Rarus-spb byse 2012.12.27 }
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ВидОперации = Перечисления.рс_ВидыОперацийРаспределениеРасходовОфисов.НаМагазины Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Объект"));
		
		Если НЕ Счет.Забалансовый Тогда
			Сообщить("Для операции """ + ВидОперации + """ счет должен быть забалансовым!");
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
		
КонецПроцедуры

// Rarus-spb byse 2012.12.27 {
Процедура РассчитатьСуммуДокумента () Экспорт
	Если ВидОперации = Перечисления.рс_ВидыОперацийРаспределениеРасходовОфисов.НаТЦ Тогда
		СуммаДокумента = Движения.бит_Дополнительный_2.Итог("СуммаМУ");
	ИначеЕсли ВидОперации = Перечисления.рс_ВидыОперацийРаспределениеРасходовОфисов.НаМагазины Тогда		
		СуммаДокумента = Движения.бит_Дополнительный_2.Итог("СуммаМУ") / 2;
	КонецЕсли;
КонецПроцедуры	                        
// Rarus-spb byse 2012.12.27 {
