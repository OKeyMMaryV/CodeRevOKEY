//	 + БИТ AMerkulov 2015-05-05 
Перем мВводИзТонкогоКлиента Экспорт;

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{ bit_SVKushnirenko 24.01.2017 #2657
	//ИсходныйКод{
	//Если НЕ ДанныеЗаполнения = Неопределено Тогда
	//	ЗаполнитьПоДанныеЗаполнения(ДанныеЗаполнения);
	//КонецЕсли;
	//}ИсходныйКод
	//Удален неактуальный код заполнения закрытия остатков на основанииФВБ
	//} bit_SVKushnirenko 24.01.2017 #2657
КонецПроцедуры

//{ bit_SVKushnirenko 24.01.2017 #2657
//ИсходныйКод{
//Процедура ЗаполнитьПоДанныеЗаполнения(ДанныеЗаполнения)
//	Если НЕ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.бит_ФормаВводаБюджета") Тогда		
//		Комментарий = "_*_ОтказПриОткрытии_*_";
//		Возврат;
//	КонецЕсли;

//	Если НЕ (ДанныеЗаполнения.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный ИЛИ
//		ДанныеЗаполнения.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный ИЛИ
//		ДанныеЗаполнения.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт) Тогда		
//		Комментарий = "_*_ОтказПриОткрытии_*_";
//		Возврат;
//	КонецЕсли;
//	
//	ПричинаЗакрытия = ОткрытьФормуВыбораПричиныЗакрытия();
//	Если ПричинаЗакрытия = Неопределено Тогда 
//		Комментарий = "_*_ОтказПриОткрытии_*_";
//		Возврат;
//	КонецЕсли;
//	
//	ДанныеБДДС = ДанныеЗаполнения.БДДС;
//	ТаблицаДляЗаполнения = ТабличнаяЧасть.ВыгрузитьКолонки();
//	Для Каждого ТекСтрока ИЗ ДанныеБДДС Цикл
//		НоваяСтрока = ТаблицаДляЗаполнения.Добавить();
//		НоваяСтрока.Период = ТекСтрока.Период;
//		НоваяСтрока.бит_БК_Организация = ТекСтрока.бит_БК_Организация;
//		НоваяСтрока.ЦФО = ТекСтрока.ЦФО;
//		НоваяСтрока.Проект = ТекСтрока.Проект;
//		НоваяСтрока.СтатьяОборотов = ТекСтрока.СтатьяОборотов;
//		НоваяСтрока.Аналитика_2 = ТекСтрока.Аналитика_2;
//		//НоваяСтрока.ПричинаЗакрытия = ПричинаЗакрытия;
//		НоваяСтрока.Аналитика_1 = ТекСтрока.Аналитика_1;
//		НоваяСтрока.Сценарий = ТекСтрока.Сценарий;
//		НоваяСтрока.СтавкаНДС = ТекСтрока.бит_СтавкаНДС;
//	КонецЦикла;
//	ТаблицаДляЗаполнения.Свернуть("Период,бит_БК_Организация,ЦФО,Проект,СтатьяОборотов,Аналитика_2,Аналитика_1,Сценарий, СтавкаНДС","СуммаБезНДС,СуммаСНДС");
//	////Заменяем сценарий на Контролируемый
//	//Для Каждого ТекСтрока Из ТаблицаДляЗаполнения Цикл
//	//	 СценарийКонтролируемый = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролируемый сценарий", ТекСтрока.Сценарий);
//	//	 ТекСтрока.Сценарий = СценарийКонтролируемый;
//	//КонецЦикла;
//	
//	ПолучитьОстатки(ТаблицаДляЗаполнения);
//	ТабличнаяЧасть.Загрузить(ТаблицаДляЗаполнения);
//	Для Каждого ТекСтрока Из ТабличнаяЧасть Цикл
//		ПересчитатьСуммыВТЧ("СуммаБезНДС", ТекСтрока);
//	КонецЦикла;
//	
//	//{ bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
//	//ИсходныйКод{
//	////+Сундукова 24.05.2016 №2481
//	//ит = ТабличнаяЧасть.Количество();
//	//
//	//Пока ит>0 цикл
//	//	ит=ит-1;
//	//	Стр = ТабличнаяЧасть.Получить(ит);
//	//	Если стр.СуммаБезНДС=0 тогда
//	//		ТабличнаяЧасть.Удалить(стр);
//	//	КонецЕсли;
//	//	
//	//КонецЦикла;	
//	////-Сундукова 24.05.2016  №2481
//	//}ИсходныйКод
//	
//	//+Сенин С.В. 17.10.16 №2657
//	
//	МассивУдаления = Новый Массив;
//	
//	//БИТ_ФормаДокумента = ?(ДополнительныеСвойства.Свойство("БИТ_ФормаДокумента"),ДополнительныеСвойства.БИТ_ФормаДокумента,"");
//	
//	Для каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
//	
//		Если СтрокаТЧ.СуммаБезНДС=0 тогда
//			МассивУдаления.добавить(СтрокаТЧ);
//		
//		ИначеЕсли СтрокаТЧ.СуммаБезНДС<=0 
//			//и БИТ_ФормаДокумента = "ФормаЗаявкаНаОперационныеРасходы" 
//			Тогда
//			МассивУдаления.добавить(СтрокаТЧ);
//		КонецЕсли;
//	КонецЦикла; 
//	
//	Для каждого СтрокаТЧ Из МассивУдаления Цикл
//	
//		ТабличнаяЧасть.Удалить(СтрокаТЧ);	
//	
//	КонецЦикла;  
//	//-Сенин С.В. 17.10.16 №2657
//	//} bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
//	
//КонецПроцедуры
//}ИсходныйКод
// Удален неактуальный код заполнения на основе ФВБ
//} bit_SVKushnirenko 24.01.2017 #2657

//{ bit_SVKushnirenko 24.01.2017 #2657
//ИсходныйКод{
//Процедура ПолучитьОстатки(ТаблицаДляЗаполнения)
//	ТаблицаБДДС = ПодготовитьТаблицу(ТаблицаДляЗаполнения);
//	// по регистру контрольные значения
//	ТаблицаСценариев = ТаблицаБДДС.Скопировать(,"Сценарий");
//	ТаблицаСценариев.Свернуть("Сценарий");
//	
//	
//	Для Каждого СтрокаСценарий Из ТаблицаСценариев Цикл
//		ТекСценарий = СтрокаСценарий.Сценарий;
//		ТаблицаБДДСПоСценарию = ТаблицаБДДС.Скопировать(Новый Структура("Сценарий",ТекСценарий));
//		//Структура измерений для контроля
//		СтруктураИзмерений = Новый Структура;
//		СтруктураИзмерений.Вставить("Период");
//		СтруктураИзмерений.Вставить("Сценарий");
//		СтруктураИзмерений.Вставить("СтатьяОборотов");
//		Результат = ВыполнитьЗапросПоОстаткам(ТаблицаБДДСПоСценарию,ТекСценарий, СтруктураИзмерений);	
//		
//		Выборка = Результат.Выбрать();
//		Пока Выборка.Следующий() Цикл
//			Для Каждого ЭлементСтруктуры Из СтруктураИзмерений Цикл
//				СтруктураИзмерений.Вставить(ЭлементСтруктуры.Ключ,Выборка[ЭлементСтруктуры.Ключ]);
//			КонецЦикла;
//			
//			//Отбор = Новый Структура("Период,ЦФО,Проект,СтатьяОборотов,Аналитика_2,Аналитика_1,Сценарий",Выборка.Период,Выборка.ЦФО,Выборка.Проект,Выборка.СтатьяОборотов,Выборка.Аналитика_2,Выборка.Аналитика_1,Выборка.Сценарий);
//			СтрокиДляЗаполнения = ТаблицаДляЗаполнения.НайтиСтроки(СтруктураИзмерений);
//			
//			Если СтрокиДляЗаполнения.Количество() Тогда
//				СтрокиДляЗаполнения[0].СуммаБезНДС = Выборка.Остаток;
//			КонецЕсли;
//		КонецЦикла;
//		
//	КонецЦикла;
//	
//КонецПроцедуры
//}ИсходныйКод
//Закоментирован неактуальный код заполнения на основании ФВБ
//} bit_SVKushnirenko 24.01.2017 #2657

Функция ПодготовитьТаблицу(ТаблицаДляЗаполнения = Неопределено)
	
	//РазмерностьСумм = бит_ОбщегоНазначения.ПолучитьРазмерностьЕдиницыИзмеренияСумм(ЕдиницаИзмеренияСумм);
	
	Запрос = Новый Запрос;
	Запрос = Новый Запрос;
	Если ТаблицаДляЗаполнения = Неопределено Тогда 
		Текст = "ВЫБРАТЬ
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_1
		        |ПОМЕСТИТЬ Аналитика
		        |ИЗ
		        |	Документ.бит_БК_ЗакрытиеОстатков.ТабличнаяЧасть КАК бит_БК_ЗакрытиеОстатковТабличнаяЧасть
		        |ГДЕ
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Ссылка = &Ссылка
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Ссылка
		        |ПОМЕСТИТЬ Закрытия
		        |ИЗ
		        |	Документ.бит_БК_ЗакрытиеОстатков.ТабличнаяЧасть КАК бит_БК_ЗакрытиеОстатковТабличнаяЧасть
		        |ГДЕ
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_1 В
		        |			(ВЫБРАТЬ
		        |				Аналитика.Аналитика_1
		        |			ИЗ
		        |				Аналитика КАК Аналитика)
		        |	И бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Ссылка <> &Ссылка
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	бит_КонтрольныеЗначенияБюджетовОбороты.Период,
		        |	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО,
		        |	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов,
		        |	бит_КонтрольныеЗначенияБюджетовОбороты.Проект,
		        |	бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1,
		        |	бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2,
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-27 (#3046)
				|	бит_КонтрольныеЗначенияБюджетовОбороты.Контрагент КАК Контрагент,
				|	бит_КонтрольныеЗначенияБюджетовОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-27 (#3046)
				
				//1c-izhtc spawn 26.08.15 (
				//|	СУММА(ВЫБОР
				//|			КОГДА бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_3 = ЗНАЧЕНИЕ(Перечисление.бит_БК_ВариантыБюджета.ВРамкахБюджета)
				//|				ТОГДА бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот
				//|			ИНАЧЕ 0
				//|		КОНЕЦ) КАК ВРамках,
				//|	СУММА(ВЫБОР
				//|			КОГДА бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_3 = ЗНАЧЕНИЕ(Перечисление.бит_БК_ВариантыБюджета.ЗаРамкамиБюджета)
				//|				ТОГДА бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот
				//|			ИНАЧЕ 0
				//|		КОНЕЦ) КАК ЗаРамками
				|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) КАК СуммаСценарийИсполнениеОборот
				//1c-izhtc spawn 26.08.15 )
		        |ПОМЕСТИТЬ Остатки
		        |ИЗ
		        |	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
		        |			,
		        |			,
		        |			Регистратор,
		        |			(НЕ Аналитика_1 В
		        |					(ВЫБРАТЬ
		        |						Аналитика.Аналитика_1
		        |					ИЗ
		        |						Аналитика КАК Аналитика))) КАК бит_КонтрольныеЗначенияБюджетовОбороты
		        |ГДЕ
		        |	(бит_КонтрольныеЗначенияБюджетовОбороты.Регистратор В
		        |				(ВЫБРАТЬ
		        |					Аналитика.Аналитика_1
		        |				ИЗ
		        |					Аналитика КАК Аналитика)
		        |			ИЛИ бит_КонтрольныеЗначенияБюджетовОбороты.Регистратор В
		        |				(ВЫБРАТЬ
		        |					Закрытия.Ссылка
		        |				ИЗ
		        |					Закрытия КАК Закрытия))
		        |
		        |СГРУППИРОВАТЬ ПО
		        |	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов,
		        |	бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1,
		        |	бит_КонтрольныеЗначенияБюджетовОбороты.Проект,
		        |	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО,
		        |	бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2,
		        |	бит_КонтрольныеЗначенияБюджетовОбороты.Период
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-27 (#3046)
				|	,бит_КонтрольныеЗначенияБюджетовОбороты.Контрагент,
				|	бит_КонтрольныеЗначенияБюджетовОбороты.ДоговорКонтрагента
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-27 (#3046)
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Период,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сценарий КАК Сценарий,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.ЦФО КАК ЦФО,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СтатьяОборотов КАК СтатьяОборотов,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_2 КАК Аналитика_2,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_1 КАК Аналитика_1,
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-27 (#3046)
				|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Контрагент КАК Контрагент,
				|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.ДоговорКонтрагента КАК ДоговорКонтрагента,
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-27 (#3046)
				|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Проект,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СтавкаНДС,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_Организация КАК бит_БК_Организация,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаСНДС, 0)) КАК Сумма,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаБезНДС, 0)) КАК СуммаБезНДС,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаСНДС, 0)) КАК СуммаРегл,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаБезНДС, 0)) КАК СуммаБезНДСРегл,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаСНДС, 0)) КАК СуммаУпр,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаБезНДС, 0)) КАК СуммаБезНДСУпр,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаСНДС, 0)) КАК СуммаСценарий,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаБезНДС, 0)) КАК СуммаБезНДССценарий,
				//1c-izhtc spawn 26.08.15 (
				//|	СУММА(ВЫБОР
				//|			КОГДА бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_3 = ЗНАЧЕНИЕ(Перечисление.бит_БК_ВариантыБюджета.ВРамкахБюджета)
				//|				ТОГДА ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаБезНДС, 0)
				//|			ИНАЧЕ 0
				//|		КОНЕЦ) КАК бит_БК_СуммаВРамкахБюджетаБезНДС,
				//|	СУММА(ВЫБОР
				//|			КОГДА бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_3 = ЗНАЧЕНИЕ(Перечисление.бит_БК_ВариантыБюджета.ЗаРамкамиБюджета)
				//|				ТОГДА ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаБезНДС, 0)
				//|			ИНАЧЕ 0
				//|		КОНЕЦ) КАК бит_БК_СуммаЗаРамкамиБюджетаБезНДС,
				//|	СУММА(ВЫБОР
				//|			КОГДА бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_3 = ЗНАЧЕНИЕ(Перечисление.бит_БК_ВариантыБюджета.ВРамкахБюджета)
				//|				ТОГДА ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаСНДС, 0)
				//|			ИНАЧЕ 0
				//|		КОНЕЦ) КАК бит_БК_СуммаВРамкахБюджетаСНДС,
				//|	СУММА(ВЫБОР
				//|			КОГДА бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_3 = ЗНАЧЕНИЕ(Перечисление.бит_БК_ВариантыБюджета.ЗаРамкамиБюджета)
				//|				ТОГДА ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаСНДС, 0)
				//|			ИНАЧЕ 0
				//|		КОНЕЦ) КАК бит_БК_СуммаЗаРамкамиБюджетаСНДС,
				|	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаБезНДС, 0)) КАК бит_БК_СуммаБезНДС,
				|	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаСНДС, 0)) КАК бит_БК_СуммаСНДС,
				//1c-izhtc spawn 26.08.15 )
		        |	СУММА(0) КАК Количество,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_1.бит_БК_НомерЗаявки КАК НомерЗаявкиПоКонтролирующемуСценарию
		        |ПОМЕСТИТЬ ЗакрытиеТЧ
		        |ИЗ
		        |	Документ.бит_БК_ЗакрытиеОстатков.ТабличнаяЧасть КАК бит_БК_ЗакрытиеОстатковТабличнаяЧасть
		        |ГДЕ
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Ссылка = &Ссылка
		        |	И бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаБезНДС <> 0
		        |
		        |СГРУППИРОВАТЬ ПО
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Период,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сценарий,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.ЦФО,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СтатьяОборотов,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_2,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_1,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Проект,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СтавкаНДС,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_Организация,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_1.бит_БК_НомерЗаявки
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-27 (#3046)
				|	,бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Контрагент,
				|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.ДоговорКонтрагента
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-27 (#3046)
				|;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Период,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сценарий КАК Сценарий,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.ЦФО КАК ЦФО,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СтатьяОборотов КАК СтатьяОборотов,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_2 КАК Аналитика_2,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_1 КАК Аналитика_1,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Проект,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СтавкаНДС,
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-27 (#3046)
				|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Контрагент КАК Контрагент,
				|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.ДоговорКонтрагента КАК ДоговорКонтрагента,
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-27 (#3046)
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_Организация КАК бит_БК_Организация,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сумма, 0)) КАК Сумма,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаБезНДС, 0)) КАК СуммаБезНДС,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаРегл, 0)) КАК СуммаРегл,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаБезНДСРегл, 0)) КАК СуммаБезНДСРегл,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаУпр, 0)) КАК СуммаУпр,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаБезНДСУпр, 0)) КАК СуммаБезНДСУпр,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаСценарий, 0)) КАК СуммаСценарий,
		        |	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СуммаБезНДССценарий, 0)) КАК СуммаБезНДССценарий,
		        |	СУММА(0) КАК Количество,
				//1c-izhtc spawn 26.08.15 (
				//|	СУММА(ЕСТЬNULL(остатки.ВРамках,0)) КАК Заявка_бит_БК_СуммаВРамкахБюджетаБезНДС,
				//|	СУММА(ЕСТЬNULL(остатки.ЗаРамками,0)) КАК Заявка_бит_БК_СуммаЗаРамкамиБюджетаБезНДС,
				//|	СУММА(ЕСТЬNULL(остатки.ВРамках,0) + ЕСТЬNULL(остатки.ЗаРамками,0)) КАК Заявка_бит_БК_СуммаБезНДС,
				|	СУММА(ЕСТЬNULL(остатки.СуммаСценарийИсполнениеОборот,0)) КАК Заявка_бит_БК_СуммаБезНДС,
				//1c-izhtc spawn 26.08.15 )
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_1.бит_БК_НомерЗаявки КАК НомерЗаявкиПоКонтролирующемуСценарию,
				//1c-izhtc spawn 26.08.15 (
				//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_СуммаВРамкахБюджетаБезНДС,
				//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_СуммаЗаРамкамиБюджетаБезНДС,
				//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_СуммаВРамкахБюджетаСНДС,
				//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_СуммаЗаРамкамиБюджетаСНДС
				|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_СуммаБезНДС,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_СуммаСНДС
				//1c-izhtc spawn 26.08.15 )
		        |ИЗ
		        |	ЗакрытиеТЧ КАК бит_БК_ЗакрытиеОстатковТабличнаяЧасть
		        |		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК остатки
		        |		ПО бит_БК_ЗакрытиеОстатковТабличнаяЧасть.ЦФО = остатки.ЦФО
		        |			И бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СтатьяОборотов = остатки.СтатьяОборотов
		        |			И бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Проект = остатки.Проект
		        |			И бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Период = остатки.Период
		        |			И бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_2 = остатки.Аналитика_2
				// BIT AMerkulov 09-03-2015 ++
		        |			И бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_1 = остатки.Аналитика_1						
				// BIT AMerkulov 09-03-2015 --
				|
		        |СГРУППИРОВАТЬ ПО
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_1,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_2,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Проект,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_Организация,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сценарий,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Период,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.ЦФО,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СтатьяОборотов,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СтавкаНДС,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_1.бит_БК_НомерЗаявки,
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-27 (#3046)
				|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Контрагент,
				|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.ДоговорКонтрагента,
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-27 (#3046)
				//1c-izhtc spawn 26.08.15 (
				//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_СуммаВРамкахБюджетаБезНДС,
				//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_СуммаЗаРамкамиБюджетаБезНДС,
				//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_СуммаВРамкахБюджетаСНДС,
				//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_СуммаЗаРамкамиБюджетаСНДС";
				|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_СуммаБезНДС,
		        |	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.бит_БК_СуммаСНДС";
				//1c-izhtc spawn 26.08.15 )
	Иначе 
		Текст = "ВЫБРАТЬ
		|	ТаблицаДляЗаполнения.Период,
		|	ТаблицаДляЗаполнения.Сценарий,
		|	ТаблицаДляЗаполнения.ЦФО,
		|	ТаблицаДляЗаполнения.Проект,
		|	ТаблицаДляЗаполнения.Аналитика_1,
		|	ТаблицаДляЗаполнения.Аналитика_2,
		|	ТаблицаДляЗаполнения.СуммаБезНДС,
		|	ТаблицаДляЗаполнения.СуммаСНДС,
		|	ТаблицаДляЗаполнения.СтатьяОборотов,
		|	ТаблицаДляЗаполнения.бит_БК_Организация,
		|	ТаблицаДляЗаполнения.СтавкаНДС,
		|	ЕСТЬNULL(ТаблицаДляЗаполнения.СуммаСНДС, 0) КАК Сумма,
		|	ЕСТЬNULL(ТаблицаДляЗаполнения.СуммаБезНДС, 0) КАК СуммаБезНДС,
		|	ЕСТЬNULL(ТаблицаДляЗаполнения.СуммаСНДС, 0) КАК СуммаРегл,
		|	ЕСТЬNULL(ТаблицаДляЗаполнения.СуммаБезНДС, 0) КАК СуммаБезНДСРегл,
		|	ЕСТЬNULL(ТаблицаДляЗаполнения.СуммаСНДС, 0) КАК СуммаУпр,
		|	ЕСТЬNULL(ТаблицаДляЗаполнения.СуммаБезНДС, 0) КАК СуммаБезНДСУпр,
		|	ЕСТЬNULL(ТаблицаДляЗаполнения.СуммаСНДС, 0) КАК СуммаСценарий,
		|	ЕСТЬNULL(ТаблицаДляЗаполнения.СуммаБезНДС, 0) КАК СуммаБезНДССценарий,
		//1c-izhtc spawn 26.08.15 (
		//|	ЕСТЬNULL(ТаблицаДляЗаполнения.СуммаБезНДС, 0) КАК бит_БК_СуммаВРамкахБюджетаБезНДС,
		//|	0 КАК бит_БК_СуммаЗаРамкамиБюджетаБезНДС,
		//|	0 КАК бит_БК_СуммаВРамкахБюджетаСНДС,
		//|	0 КАК бит_БК_СуммаЗаРамкамиБюджетаСНДС,
		|	ЕСТЬNULL(ТаблицаДляЗаполнения.СуммаБезНДС, 0) КАК бит_БК_СуммаБезНДС,
		|	0 КАК бит_БК_СуммаСНДС,
		//1c-izhtc spawn 26.08.15 )
		|	0 КАК Количество
		|ПОМЕСТИТЬ ТаблицаДляЗаполнения
		|ИЗ
		|	&ТаблицаДляЗаполнения КАК ТаблицаДляЗаполнения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДляЗаполнения.Период,
		|	ТаблицаДляЗаполнения.Сценарий,
		|	ТаблицаДляЗаполнения.ЦФО,
		|	ТаблицаДляЗаполнения.Проект,
		|	ТаблицаДляЗаполнения.Аналитика_1,
		|	ТаблицаДляЗаполнения.Аналитика_2,
		|	ТаблицаДляЗаполнения.СуммаБезНДС,
		|	ТаблицаДляЗаполнения.СуммаСНДС,
		|	ТаблицаДляЗаполнения.СтатьяОборотов,
		|	ТаблицаДляЗаполнения.бит_БК_Организация,
		|	ТаблицаДляЗаполнения.СтавкаНДС,
		|	ТаблицаДляЗаполнения.Сумма,
		|	ТаблицаДляЗаполнения.СуммаБезНДС КАК СуммаБезНДС,
		|	ТаблицаДляЗаполнения.СуммаРегл,
		|	ТаблицаДляЗаполнения.СуммаБезНДСРегл,
		|	ТаблицаДляЗаполнения.СуммаУпр,
		|	ТаблицаДляЗаполнения.СуммаБезНДСУпр,
		|	ТаблицаДляЗаполнения.СуммаСценарий,
		|	ТаблицаДляЗаполнения.СуммаБезНДССценарий,
		//1c-izhtc spawn 26.08.15 (
		//|	ТаблицаДляЗаполнения.бит_БК_СуммаВРамкахБюджетаБезНДС,
		//|	ТаблицаДляЗаполнения.бит_БК_СуммаЗаРамкамиБюджетаБезНДС,
		//|	ТаблицаДляЗаполнения.бит_БК_СуммаВРамкахБюджетаСНДС,
		//|	ТаблицаДляЗаполнения.бит_БК_СуммаЗаРамкамиБюджетаСНДС,
		|	ТаблицаДляЗаполнения.бит_БК_СуммаБезНДС,
		|	ТаблицаДляЗаполнения.бит_БК_СуммаСНДС,
		//1c-izhtc spawn 26.08.15 )
		|	ТаблицаДляЗаполнения.Количество
		|ИЗ
		|	ТаблицаДляЗаполнения КАК ТаблицаДляЗаполнения";
	КонецЕсли;
	
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("Ссылка"		   , Ссылка);			   
	Запрос.УстановитьПараметр("ТаблицаДляЗаполнения", ТаблицаДляЗаполнения);
	
	
	
	Результат = Запрос.Выполнить();
	
	ТаблицаБДДС = Результат.Выгрузить();
	
		
	// получим таблицу периодов
	КурсыПоПериодам = Неопределено;
	
	//Если Сценарий.ИспользоватьКурсыСценария Тогда
	//	
	//	ТаблицаПериодов = БДДС.Выгрузить();
	//	ТаблицаПериодов.Свернуть("Период");
	//	
	//	 установим настройки для получения курсов по периодам
	//	СтруктураПараметров = бит_Бюджетирование.ЗаполнитьСтруктуруПараметровПолученияКурсовПоПериодам(Сценарий,ВалютаДокумента);
	//	
	//	 получим курсы по периодам
	//	КурсыПоПериодам = бит_ОбщегоНазначения.ПолучитьКурсыВалютПоПериодам(ТаблицаПериодов,Сценарий,СтруктураПараметров);
	//	
	//КонецЕсли;
	
	//бит_Бюджетирование.ВыполнитьПересчетыВТаблицеОборотов(ТаблицаБДДС,КурсыПоПериодам,СтруктураКурсыВалют);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-06 (#3046)
	СоотНастройкиКлАнСценарию = бит_БК_Общий.СоответствиеНастройкиКлючевыхАналитикСценарию();
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-06 (#3046)
	
	//Добавляем контролируемый сценарий
	ТаблицаБДДС.Колонки.Добавить("СценарийКонтролируемый", Новый ОписаниеТипов("СправочникСсылка.СценарииПланирования"));
	//Добавляем контролирующий сценарий
	ТаблицаБДДС.Колонки.Добавить("СценарийКонтролирующий", Новый ОписаниеТипов("СправочникСсылка.СценарииПланирования"));
	Для Каждого ТекСтрока Из ТаблицаБДДС Цикл
		СценарийКонтролируемый = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролируемый сценарий", ТекСтрока.Сценарий);
		ТекСтрока.СценарийКонтролируемый = СценарийКонтролируемый;
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-27 (#3046)
		пЗначениеСоотКлАнСценарию = СоотНастройкиКлАнСценарию.Получить(ТекСтрока.СценарийКонтролируемый);
		Если пЗначениеСоотКлАнСценарию<>Неопределено Тогда 
			Если пЗначениеСоотКлАнСценарию.НайтиПоЗначению(ПредопределенноеЗначение("Перечисление.бит_БК_ДопИзмеренияКонтроля.Контрагент"))=Неопределено Тогда 
				ТекСтрока.Контрагент		 = Неопределено;
			КонецЕсли;
			Если пЗначениеСоотКлАнСценарию.НайтиПоЗначению(ПредопределенноеЗначение("Перечисление.бит_БК_ДопИзмеренияКонтроля.ДоговорКонтрагента"))=Неопределено Тогда 
				ТекСтрока.ДоговорКонтрагента = Неопределено;
			КонецЕсли;			
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-27 (#3046)
		
		СценарийКонтролирующий = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролирующий сценарий", ТекСтрока.Сценарий);
		ТекСтрока.СценарийКонтролирующий = СценарийКонтролирующий;
	КонецЦикла;
	
	Возврат ТаблицаБДДС;
	
КонецФункции // ПодготовитьТаблицуБДДС()

Функция ВыполнитьЗапросПоОстаткам(ТаблицаБДДС,Сценарий, СтруктураИзмерений)
	//Начало_бит_БК_Магомедов_16.11.2011
	//получаем необходимые Настройки
	СценарийКонтролируемый = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролируемый сценарий", Сценарий);
	СценарийКонтролирующий = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролирующий сценарий", Сценарий);
	ЗначениеПревышения = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Допустимый % превышения", Сценарий, 0);
	
	ТаблицаДляКонтроля = ТаблицаБДДС.Скопировать();	
	
	ИзмеренияКонтроля = ПолучитьИзмеренияКонтроля(Сценарий, СтруктураИзмерений);
	
	Периодичность = бит_КонтрольПоБюджету.ПериодичностьКонтроляСценария(СценарийКонтролирующий);	
	бит_БК_Общий.СвернутьТаблицуКонтроля(ТаблицаДляКонтроля,ИзмеренияКонтроля,Периодичность);
	
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ИзмеренияКонтроля"            ,ИзмеренияКонтроля);
	СтруктураПараметров.Вставить("Сценарий"                     ,Сценарий);
	СтруктураПараметров.Вставить("КонтролироватьНеУстановленные",Истина);
	СтруктураПараметров.Вставить("РежимКонтроля"                ,"Бюджет");
	//Начало_бит_БК_Магомедов_30.11.2011 
	СтруктураПараметров.Вставить("ВидОперации"                ,Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.ПустаяСсылка());
	//Конец_бит_БК_Магомедов_30.11.2011 
	
	ТекстЗапросаДляКонтроля = бит_БК_Общий.СформироватьТекстЗапросаДляКонтроля(СтруктураПараметров);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДляКонтроля;
	
	
	ТаблицаДляКонтроля.Сортировать("Период Возр");
	
	Если ТаблицаДляКонтроля.Количество()>0 Тогда
		
		ДатаНачала    = ТаблицаДляКонтроля[0].Период;
		ДатаОкончания = ТаблицаДляКонтроля[ТаблицаДляКонтроля.Количество()-1].Период;
		
	Иначе
		
		ДатаНачала    = Дата;
		ДатаОкончания = Дата;
		
	КонецЕсли; 
	
	ДатаНач = бит_Бюджетирование.ПолучитьНачалоПериода(ДатаНачала,Периодичность);
	ДатаКон = бит_Бюджетирование.ПолучитьКонецПериода(ДатаОкончания,Периодичность);
	
	МассивСтатей = ТаблицаДляКонтроля.ВыгрузитьКолонку("СтатьяОборотов");
	ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(МассивСтатей);
	
	
	Запрос.УстановитьПараметр("ДатаНачала"    ,ДатаНач);
	Запрос.УстановитьПараметр("ДатаОкончания" ,ДатаКон);
	Запрос.УстановитьПараметр("СценарийКонтролируемый", СценарийКонтролируемый);
	Запрос.УстановитьПараметр("МассивСтатьяОборотов"  , МассивСтатей);
	Запрос.УстановитьПараметр("Ссылка"                , Ссылка);
	Запрос.УстановитьПараметр("ТаблицаДляКонтроля"    , ТаблицаДляКонтроля);
	Запрос.УстановитьПараметр("ЗначениеПревышения",ЗначениеПревышения);
	//Начало_бит_БК_Магомедов_28.11.2011 
	Запрос.УстановитьПараметр("ЭтоФинПлан",Ложь);
	бит_КонтрольПоБюджету.ЗаполнитьПараметрыПоИзмерениямКонтроля(ТаблицаДляКонтроля,ИзмеренияКонтроля,Запрос);
	
	
	Результат = Запрос.Выполнить();
	Возврат Результат;
КонецФункции

Функция ПолучитьИзмеренияКонтроля(Сценарий, СтруктураИзмерений)
	МассивИсключений = Новый Массив;
	МассивИсключений.Добавить("Сценарий");
	МассивИсключений.Добавить("СтатьяОборотов");
	
	//Начало_бит_БК_Магомедов_16.11.2011 
	//Добавим в массив исключений не входящие в настройку измерения если такая настройка есть
	бит_СписокИзмеренийКонтроляБюджета = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Измерения контроля бюджета", Сценарий, Новый СписокЗначений, "СписокЗначений"); 
	Для Каждого ЗначениеПеречисления Из Перечисления.бит_БК_ИзмеренияКонтроляБюджета Цикл
		Мета = Метаданные.Перечисления.бит_БК_ИзмеренияКонтроляБюджета.ЗначенияПеречисления[Перечисления.бит_БК_ИзмеренияКонтроляБюджета.Индекс(ЗначениеПеречисления)];
		Если бит_СписокИзмеренийКонтроляБюджета.НайтиПоЗначению(ЗначениеПеречисления) = Неопределено Тогда    		
			МассивИсключений.Добавить(Мета.Имя);
		Иначе //добавляем в структуру измерений для контроля 
			СтруктураИзмерений.Вставить(Мета.Имя);
		КонецЕсли;
	КонецЦикла;
	//Конец_бит_БК_Магомедов_17.11.2011 
    
	Возврат бит_КонтрольПоБюджету.КонструкторСтруктурыИзмеренияКонтроля(МассивИсключений,,,);
КонецФункции

//{ bit_SVKushnirenko 24.01.2017 #2657
//ИсходныйКод{
//Процедура ПроверкаОстатковПередПроведением(ТаблицаБДДС, Отказ, Заголовок)
//		// по регистру контрольные значения
//	ТаблицаСценариев = ТаблицаБДДС.Скопировать(,"Сценарий");
//	ТаблицаСценариев.Свернуть("Сценарий");
//	
//	Для Каждого СтрокаСценарий Из ТаблицаСценариев Цикл
//		ТекСценарий = СтрокаСценарий.Сценарий;
//		ТаблицаБДДСПоСценарию = ТаблицаБДДС.Скопировать(Новый Структура("Сценарий",ТекСценарий));
//		//Структура измерений для контроля
//		СтруктураИзмерений = Новый Структура;
//		СтруктураИзмерений.Вставить("Период");
//		СтруктураИзмерений.Вставить("Сценарий");
//		СтруктураИзмерений.Вставить("СтатьяОборотов");
//		Результат = ВыполнитьЗапросПоОстаткам(ТаблицаБДДСПоСценарию,ТекСценарий, СтруктураИзмерений);
//		
//		ИзмеренияКонтроля    = ПолучитьИзмеренияКонтроля(ТекСценарий, СтруктураИзмерений);	
//				
//		СтруктураПараметров = Новый Структура;
//		СтруктураПараметров.Вставить("ИзмеренияКонтроля", ИзмеренияКонтроля);
//		СтруктураПараметров.Вставить("Сценарий", ТекСценарий);
//		СтруктураПараметров.Вставить("КонтролироватьБюджет", Истина);
//		СтруктураПараметров.Вставить("СверхБюджета", Ложь);
//		СценарийКонтролируемый = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролируемый сценарий", ТекСценарий);
//		СценарийКонтролирующий = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролирующий сценарий", ТекСценарий); 
//		СтруктураПараметров.Вставить("СценарийКонтролируемый", СценарийКонтролируемый);
//		СтруктураПараметров.Вставить("СценарийКонтролирующий", СценарийКонтролирующий);
//		СтруктураПараметров.Вставить("ВидОперации", Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.ПустаяСсылка());
//		СтруктураПараметров.Вставить("ДокументСсылка", Неопределено);
//		бит_БК_Общий.ОбработатьРезультатКонтроля(Результат,,СтруктураПараметров,Отказ,Заголовок,, Истина)
//	КонецЦикла;
//КонецПроцедуры

//Функция ОткрытьФормуВыбораПричиныЗакрытия()
//	//ФормаВыбора = Справочники.бит_ПричиныЗакрытияДокументовПланированияПлатежа.ПолучитьФормуВыбора();
//	//ФормаВыбора.Заголовок = "Укажите причину закрытия заявки";
//	//Возврат ФормаВыбора.ОткрытьМодально();
//	
//	Возврат ПредопределенноеЗначение("Справочник.бит_ПричиныЗакрытияДокументовПланированияПлатежа.РешениеОЦР");
//	
//КонецФункции
//}ИсходныйКод
//Закоммментирован неактуальный код проверки остатков по БК, все приведено к универсальному запросу БК
//} bit_SVKushnirenko 24.01.2017 #2657

// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

//Процедура выполняет проверку заполнения шапки и таб. частей
//
// Параметры:
// Отказ - булево
// Заголовок  – Строка
Процедура ПроверкаРеквизитов(Отказ,Заголовок)

	// проверим заполнение шапки
	СтруктураОбязательныхПолей = Новый Структура;
	//СтруктураОбязательныхПолей.Вставить("НастройкаФормы");
	//СтруктураОбязательныхПолей.Вставить("ЕдиницаИзмеренияСумм");
	//СтруктураОбязательныхПолей.Вставить("ВалютаДокумента");
	//СтруктураОбязательныхПолей.Вставить("КурсДокумента");
	//СтруктураОбязательныхПолей.Вставить("КратностьДокумента");
	//ТаблицаСценариев = КонтрольБюджета.Выгрузить(,"Сценарий");
	//ТаблицаСценариев.Свернуть("Сценарий");
	//Если ТаблицаСценариев.Количество() > 0 Тогда
	//	Если НЕ (ТаблицаСценариев.Количество() = 1 И ТаблицаСценариев[0].Сценарий = Справочники.СценарииПланирования.Факт_А) Тогда 
	//		 СтруктураОбязательныхПолей.Вставить("НомерЗаявки");
	//	 КонецЕсли;
	// КонецЕсли;
	 
	
	//ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект,  СтруктураОбязательныхПолей,   Отказ, Заголовок);
	
	// проверим таблицу 
	СтруктураОбязательныхПолей = Новый Структура;
	СтруктураОбязательныхПолей.Вставить("Период");		
	СтруктураОбязательныхПолей.Вставить("Сценарий");
	СтруктураОбязательныхПолей.Вставить("ЦФО");
	СтруктураОбязательныхПолей.Вставить("СтатьяОборотов");	
	СтруктураОбязательныхПолей.Вставить("Аналитика_2");
	//+Сундукова 14.04.16
	СтруктураОбязательныхПолей.Вставить("СуммаБезНДС");
	//-Сундукова 14.04.16
	//СтруктураОбязательныхПолей.Вставить("Аналитика_3");
	//СтруктураОбязательныхПолей.Вставить("СтавкаНДС");
	
	// обязательные измерения из разряда дополнительных
	//Для каждого КлючИЗначение Из мНастройкиИзмерений Цикл
	//
	//	ИмяИзмерения = КлючИЗначение.Ключ;
	//	Настройка    = КлючИЗначение.Значение;
	//	
	//	Если Настройка.Обязательное Тогда
	//		
	//		ТекстСообщения = "Не заполнено значение реквизита """+Настройка.Синоним+"""!";
	//		СтруктураОбязательныхПолей.Вставить(ИмяИзмерения,ТекстСообщения);	
	//	
	//	КонецЕсли; 
	//
	//КонецЦикла; 

	
	бит_Бюджетирование.ПроверитьЗаполнениеТабличнойЧастиБДДС(ЭтотОбъект,"ТабличнаяЧасть",СтруктураОбязательныхПолей,Отказ,Заголовок);
	
	
КонецПроцедуры //ПроверкаРеквизитов()

Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента,ТаблицаБДДС,Отказ,Заголовок)
	
	// движения по регистру обороты по бюджетам
	ТаблицаДвижений = Движения.бит_ОборотыПоБюджетам.Выгрузить();
	ТаблицаДвижений.Очистить();
	
	Для каждого СтрокаТаблицы Из ТаблицаБДДС Цикл
						
		//1c-izhtc spawn 26.08.15 (
		////в рамках
		//Если СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаБезНДС <> 0 ИЛИ СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаСНДС <> 0 Тогда 
		//	НоваяСтрока = ТаблицаДвижений.Добавить();
		//	ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
		//	НоваяСтрока.Аналитика_3 = Перечисления.бит_БК_ВариантыБюджета.ВРамкахБюджета;
		//	//без НДС
		//	НоваяСтрока.СуммаБезНДСРегл = -СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаБезНДС;
		//	НоваяСтрока.СуммаБезНДСУпр = -СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаБезНДС;
		//	НоваяСтрока.СуммаБезНДССценарий = -СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаБезНДС;
		//	//с НДС
		//	НоваяСтрока.СуммаРегл = -СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаСНДС;
		//	НоваяСтрока.СуммаУпр = -СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаСНДС;
		//	НоваяСтрока.СуммаСценарий = -СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаСНДС;
		//КонецЕсли;
		//Если СтрокаТаблицы.бит_БК_СуммаЗаРамкамиБюджетаБезНДС <> 0 ИЛИ СтрокаТаблицы.бит_БК_СуммаЗаРамкамиБюджетаСНДС <> 0 Тогда 
		//	//за рамками
		//	НоваяСтрока = ТаблицаДвижений.Добавить();
		//	ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
		//	НоваяСтрока.Аналитика_3 = Перечисления.бит_БК_ВариантыБюджета.ЗаРамкамиБюджета;
		//	//без НДС
		//	НоваяСтрока.СуммаБезНДСРегл = -СтрокаТаблицы.бит_БК_СуммаЗаРамкамиБюджетаБезНДС;
		//	НоваяСтрока.СуммаБезНДСУпр = -СтрокаТаблицы.бит_БК_СуммаЗаРамкамиБюджетаБезНДС;
		//	НоваяСтрока.СуммаБезНДССценарий = -СтрокаТаблицы.бит_БК_СуммаЗаРамкамиБюджетаБезНДС;
		//	//с НДС
		//	НоваяСтрока.СуммаРегл = -СтрокаТаблицы.бит_БК_СуммаЗаРамкамиБюджетаСНДС;
		//	НоваяСтрока.СуммаУпр = -СтрокаТаблицы.бит_БК_СуммаЗаРамкамиБюджетаСНДС;
		//	НоваяСтрока.СуммаСценарий = -СтрокаТаблицы.бит_БК_СуммаЗаРамкамиБюджетаСНДС;
		//КонецЕсли;
		Если СтрокаТаблицы.бит_БК_СуммаБезНДС <> 0 ИЛИ СтрокаТаблицы.бит_БК_СуммаСНДС <> 0 Тогда 
			НоваяСтрока = ТаблицаДвижений.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
			////без НДС
			//НоваяСтрока.СуммаБезНДСРегл = -СтрокаТаблицы.бит_БК_СуммаБезНДС;
			//НоваяСтрока.СуммаБезНДСУпр = -СтрокаТаблицы.бит_БК_СуммаБезНДС;
			//НоваяСтрока.СуммаБезНДССценарий = -СтрокаТаблицы.бит_БК_СуммаБезНДС;
			//с НДС
			//+Сундукова 01032016 - форма ввода бюджета - пишет именно без НДС
			//НоваяСтрока.СуммаРегл = -СтрокаТаблицы.бит_БК_СуммаСНДС;
			//НоваяСтрока.СуммаУпр = -СтрокаТаблицы.бит_БК_СуммаСНДС;
			//НоваяСтрока.СуммаСценарий = -СтрокаТаблицы.бит_БК_СуммаСНДС;
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-03 (#3046)
			НоваяСтрока.СтавкаНДС = Неопределено;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-03 (#3046)
			
			НоваяСтрока.Сумма = -СтрокаТаблицы.бит_БК_СуммаБезНДС;
			НоваяСтрока.СуммаРегл = -СтрокаТаблицы.бит_БК_СуммаБезНДС;
			НоваяСтрока.СуммаУпр = -СтрокаТаблицы.бит_БК_СуммаБезНДС;
			НоваяСтрока.СуммаСценарий = -СтрокаТаблицы.бит_БК_СуммаБезНДС;
			//+Сундукова 01032016 - форма ввода бюджета - пишет именно без НДС
		КонецЕсли;
		//1c-izhtc spawn 26.08.15 )
		
	КонецЦикла;	
	
	Движения.бит_ОборотыПоБюджетам.мТаблицаДвижений = ТаблицаДвижений;
	Движения.бит_ОборотыПоБюджетам.ДобавитьДвижение();
	
	
	// по регистру контрольные значения
	
	ТаблицаДвижений = Движения.бит_КонтрольныеЗначенияБюджетов.Выгрузить();
	ТаблицаДвижений.Очистить();
	
	//Начало_бит_Магомедов_07.02.2013
	//получаем соотвествие статей для замены для контролирующего сценария
	СоответствиеСтатей = бит_БК_Общий.ПолучитьТаблицуСоответствиеСтатей(ТаблицаБДДС);
	ТекстСообщения = "";
	бит_БК_Общий.УстановитьСооветствиеСтатейОборотов(СоответствиеСтатей, Отказ, ТекстСообщения);
	Если Отказ Тогда
		Сообщить(ТекстСообщения, СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;	
	//Конец_бит_Магомедов_07.02.2013 
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-06 (#3046)
	СоотНастройкиКлАнСценарию = бит_БК_Общий.СоответствиеНастройкиКлючевыхАналитикСценарию();
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-06 (#3046)
	
	Для Каждого  СтрокаТаблицы Из ТаблицаБДДС Цикл
		//Начало_бит_Магомедов_07.02.2013
		//Если СценарийКонтролирующий - это ФинПлан, то Ищем контролирующую статью, движения будут  по ней
		Если СтрокаТаблицы.СценарийКонтролирующий = Справочники.СценарииПланирования.Бюджет_А
			ИЛИ СтрокаТаблицы.СценарийКонтролирующий = Справочники.СценарииПланирования.Бюджет_Инвест
			ИЛИ СтрокаТаблицы.СценарийКонтролирующий = Справочники.СценарииПланирования.Бюджет_У Тогда 
			Отбор = Новый Структура("Период, СтатьяОборотов",СтрокаТаблицы.Период,СтрокаТаблицы.СтатьяОборотов);
			МассивСтрокСоответствия = СоответствиеСтатей.НайтиСтроки(Отбор);
			//Для Контролируемой статьи на каждый период может быть только одна Контролирующая
			КонтролирующаяСтатья = МассивСтрокСоответствия[0].КонтролирующаяСтатья;
		иначе
			КонтролирующаяСтатья = СтрокаТаблицы.СтатьяОборотов;
		КонецЕсли;
		 //Конец_бит_Магомедов_07.02.2013 
	//ОК Ванюков К. +// Исправление ошибки, когда СтрокаТаблицы.Заявка_бит_БК_СуммаЗаРамкамиБюджетаБезНДС = null вылетате с ошибкой сравнения с неподходящим типом // 2012-09-10
		//1c-izhtc spawn 26.08.15 (
		//Если СтрокаТаблицы.Заявка_бит_БК_СуммаЗаРамкамиБюджетаБезНДС = null тогда 
		//	СтрокаТаблицы.Заявка_бит_БК_СуммаЗаРамкамиБюджетаБезНДС = 0;
		//КонецЕсли;
        Если СтрокаТаблицы.Заявка_бит_БК_СуммаБезНДС = null тогда 
			СтрокаТаблицы.Заявка_бит_БК_СуммаБезНДС = 0;
		КонецЕсли;
		//1c-izhtc spawn 26.08.15 )
//ОК Ванюков К. -

				//Начало_бит_Магомедов_27.03.2013 Исправлено:Закрывается как есть в ТЧ документа
		//Движения для контролирующего сценария
		//Если сумма закрытия меньше суммыВРамках заявки, вся сумма идет в рамках иначе сумма не уложившаяся в рамки идет за рамками 
		//Если СтрокаТаблицы.СуммаБезНДС <= СтрокаТаблицы.Заявка_бит_БК_СуммаЗаРамкамиБюджетаБезНДС Тогда
		//	НоваяСтрока = ТаблицаДвижений.Добавить();
		//	ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
		//	НоваяСтрока.Сценарий = СтрокаТаблицы.СценарийКонтролирующий;
		//	НоваяСтрока.СценарийКонтролируемый = СтрокаТаблицы.Сценарий;
		//////	НоваяСтрока.Аналитика_3 = Перечисления.бит_БК_ВариантыБюджета.ЗаРамкамиБюджета;			
		//	НоваяСтрока.СуммаСценарийИсполнение = - СтрокаТаблицы.СуммаБезНДС;
		//	НоваяСтрока.Аналитика_1 = СтрокаТаблицы.НомерЗаявкиПоКонтролирующемуСценарию;
		//	//Начало_бит_Магомедов_07.02.2013 
		//	НоваяСтрока.СтатьяОборотов = КонтролирующаяСтатья;
		//иначе
		//Начало_бит_Магомедов_27.03.2013 : Сумму ЗаРамками закрываем только если Сценарий не ФинПлан
		//1c-izhtc spawn 26.08.15 (
		//Если СтрокаТаблицы.бит_БК_СуммаЗаРамкамиБюджетаБезНДС <> 0 Тогда 
		//	НоваяСтрока = ТаблицаДвижений.Добавить();
		//	ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
		//	НоваяСтрока.Сценарий = СтрокаТаблицы.СценарийКонтролирующий;
		//	НоваяСтрока.СценарийКонтролируемый = СтрокаТаблицы.Сценарий;
		//	НоваяСтрока.Аналитика_3 = Перечисления.бит_БК_ВариантыБюджета.ЗаРамкамиБюджета;			
		//	//НоваяСтрока.СуммаСценарийИсполнение = - СтрокаТаблицы.Заявка_бит_БК_СуммаЗаРамкамиБюджетаБезНДС;
		//	НоваяСтрока.СуммаСценарийИсполнение = - СтрокаТаблицы.бит_БК_СуммаЗаРамкамиБюджетаБезНДС;
		//	НоваяСтрока.Аналитика_1 = СтрокаТаблицы.НомерЗаявкиПоКонтролирующемуСценарию;
		//	//Начало_бит_Магомедов_07.02.2013 
		//	НоваяСтрока.СтатьяОборотов = КонтролирующаяСтатья;
		//КонецЕсли;
		//Если СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаБезНДС <> 0 Тогда 
		//	НоваяСтрока = ТаблицаДвижений.Добавить();
		//	ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
		//	НоваяСтрока.Сценарий = СтрокаТаблицы.СценарийКонтролирующий;
		//	НоваяСтрока.СценарийКонтролируемый = СтрокаТаблицы.Сценарий;			
		//	НоваяСтрока.Аналитика_3 = Перечисления.бит_БК_ВариантыБюджета.ВРамкахБюджета;			
		//	//НоваяСтрока.СуммаСценарийИсполнение = - (СтрокаТаблицы.СуммаБезНДС - СтрокаТаблицы.Заявка_бит_БК_СуммаЗаРамкамиБюджетаБезНДС);
		//	НоваяСтрока.СуммаСценарийИсполнение = - СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаБезНДС;
		//	НоваяСтрока.Аналитика_1 = СтрокаТаблицы.НомерЗаявкиПоКонтролирующемуСценарию;
		//	//Начало_бит_Магомедов_07.02.2013 
		//	НоваяСтрока.СтатьяОборотов = КонтролирующаяСтатья;
		//КонецЕсли;
		////Движения для контролируемого сценария все в рамках	
		////в рамках
		////Если СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаБезНДС <> 0 Тогда 
		//Если СтрокаТаблицы.СуммаБезНДС <> 0 Тогда	
		//	НоваяСтрока = ТаблицаДвижений.Добавить();
		//	ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
		//	НоваяСтрока.Аналитика_3 = Перечисления.бит_БК_ВариантыБюджета.ВРамкахБюджета;
		//	НоваяСтрока.СценарийКонтролируемый = СтрокаТаблицы.СценарийКонтролируемый;
		//	//НоваяСтрока.СуммаСценарийКонтроль = - СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаБезНДС;
		//	НоваяСтрока.СуммаСценарийКонтроль = - СтрокаТаблицы.СуммаБезНДС;
		//	ЗначениеПревышения = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Допустимый % превышения", СтрокаТаблицы.Сценарий, 0);
		//	//НоваяСтрока.СуммаСценарийКонтрольСПревышением = -(СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаБезНДС + СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаБезНДС/100*ЗначениеПревышения);
		//	НоваяСтрока.СуммаСценарийКонтрольСПревышением = -(СтрокаТаблицы.СуммаБезНДС + СтрокаТаблицы.СуммаБезНДС/100*ЗначениеПревышения);
		//КонецЕсли;
		Если СтрокаТаблицы.бит_БК_СуммаБезНДС <> 0 Тогда 
			НоваяСтрока = ТаблицаДвижений.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
			НоваяСтрока.Сценарий = СтрокаТаблицы.СценарийКонтролирующий;
			НоваяСтрока.СценарийКонтролируемый = СтрокаТаблицы.Сценарий;
			НоваяСтрока.СуммаСценарийИсполнение = - СтрокаТаблицы.бит_БК_СуммаБезНДС;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-06 (#3046)
			//НоваяСтрока.Аналитика_1 = СтрокаТаблицы.НомерЗаявкиПоКонтролирующемуСценарию;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-06 (#3046)
			НоваяСтрока.СтатьяОборотов = КонтролирующаяСтатья;
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-27 (#3046)
			пЗначениеСоотКлАнСценарию = СоотНастройкиКлАнСценарию.Получить(НоваяСтрока.СценарийКонтролируемый);
			Если пЗначениеСоотКлАнСценарию<>Неопределено Тогда 
				Если пЗначениеСоотКлАнСценарию.НайтиПоЗначению(ПредопределенноеЗначение("Перечисление.бит_БК_ДопИзмеренияКонтроля.Контрагент"))=Неопределено Тогда 
					НоваяСтрока.Контрагент		 = Неопределено;
				КонецЕсли;
				Если пЗначениеСоотКлАнСценарию.НайтиПоЗначению(ПредопределенноеЗначение("Перечисление.бит_БК_ДопИзмеренияКонтроля.ДоговорКонтрагента"))=Неопределено Тогда 
					НоваяСтрока.ДоговорКонтрагента = Неопределено;
				КонецЕсли;			
				Если пЗначениеСоотКлАнСценарию.НайтиПоЗначению(ПредопределенноеЗначение("Перечисление.бит_БК_ДопИзмеренияКонтроля.Аналитика_1"))=Неопределено Тогда 
					НоваяСтрока.Аналитика_1		 = Неопределено;
				КонецЕсли; 
			КонецЕсли;			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-27 (#3046)
			
		КонецЕсли;
		//Движения для контролируемого сценария
		Если СтрокаТаблицы.СуммаБезНДС <> 0 Тогда
			НоваяСтрока = ТаблицаДвижений.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
			НоваяСтрока.СценарийКонтролируемый = СтрокаТаблицы.СценарийКонтролируемый;
			НоваяСтрока.СуммаСценарийКонтроль = - СтрокаТаблицы.СуммаБезНДС;
			ЗначениеПревышения = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Допустимый % превышения", СтрокаТаблицы.Сценарий, 0);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-06 (#3042)
			//НоваяСтрока.СуммаСценарийКонтрольСПревышением = -(СтрокаТаблицы.СуммаБезНДС + СтрокаТаблицы.СуммаБезНДС/100*ЗначениеПревышения);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-06 (#3042)
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-27 (#3046)
			пЗначениеСоотКлАнСценарию = СоотНастройкиКлАнСценарию.Получить(НоваяСтрока.СценарийКонтролируемый);
			Если пЗначениеСоотКлАнСценарию<>Неопределено Тогда 
				Если пЗначениеСоотКлАнСценарию.НайтиПоЗначению(ПредопределенноеЗначение("Перечисление.бит_БК_ДопИзмеренияКонтроля.Контрагент"))=Неопределено Тогда 
					НоваяСтрока.Контрагент		 = Неопределено;
				КонецЕсли;
				Если пЗначениеСоотКлАнСценарию.НайтиПоЗначению(ПредопределенноеЗначение("Перечисление.бит_БК_ДопИзмеренияКонтроля.ДоговорКонтрагента"))=Неопределено Тогда 
					НоваяСтрока.ДоговорКонтрагента = Неопределено;
				КонецЕсли;			
				Если пЗначениеСоотКлАнСценарию.НайтиПоЗначению(ПредопределенноеЗначение("Перечисление.бит_БК_ДопИзмеренияКонтроля.Аналитика_1"))=Неопределено Тогда 
					НоваяСтрока.Аналитика_1		 = Неопределено;
				КонецЕсли;
			КонецЕсли;					
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-27 (#3046)
			
		КонецЕсли;
		//1c-izhtc spawn 26.08.15 )
			
	КонецЦикла; 
	
	Движения.бит_КонтрольныеЗначенияБюджетов.мТаблицаДвижений = ТаблицаДвижений;
	Движения.бит_КонтрольныеЗначенияБюджетов.ДобавитьДвижение();
	
	// регистру бухгалтерии бюджетирование
	//	бит_Бюджетирование.СформироватьПроводкиБюджетирования(ТаблицаБДДС,Движения.бит_Бюджетирование);
	
КонецПроцедуры //ДвиженияПоРегистрам()

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		// Заголовок для сообщений об ошибках проведения.
	Заголовок = бит_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Проверка ручной корректировки
	Если бит_ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект,Ложь) Тогда
		Возврат
	КонецЕсли;
	
	ПроверкаРеквизитов(Отказ,Заголовок);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 

	//{ bit SVKushnirenko Bit 27.01.2017 #2657
	ЭтотОбъект.Движения.бит_КонтрольныеЗначенияБюджетов.ДополнительныеСвойства.Вставить("бит_БК_УстановкаСтатусаПослеПроведения", Истина);
	//} bit SVKushnirenko Bit 27.01.2017 #2657

	СтруктураШапкиДокумента = бит_ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
    //ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-10-11 (#3098)
	//ТаблицаБДДС = ПодготовитьТаблицу(Неопределено);
	//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-10-11 (#3098)
	
	//{ bit_SVKushnirenko 24.01.2017 #2657
	//ИсходныйКод{
	////Начало_бит_БК_Магомедов_21.03.2012 
	//ПроверкаОстатковПередПроведением(ТаблицаБДДС, Отказ, Заголовок);
	////Конец_бит_БК_Магомедов_21.03.2012 
	//}ИсходныйКод
	
	пТзБДДС = ЭтотОбъект.ТабличнаяЧасть.Выгрузить();
	Если пТзБДДС.Количество() > 0 
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-07-17 (#3044)
		И (Не ДополнительныеСвойства.Свойство("НеПроверятьОстатки") 
		   ИЛИ НЕ ДополнительныеСвойства.НеПроверятьОстатки)
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-07-17 (#3044)
		
	Тогда //Сверхбюджетные документы - отключаем контроль превышения по БК ОК
		
		//Подготвка колонок для запроса БК
		пТзБДДС.Колонки.СуммаБезНДС.Имя = "Сумма";
		пЗависимыеСценарии = бит_БК_Общий.ПолучитьСоответствиеКонтроллируемыхСценариев(пТзБДДС.ВыгрузитьКолонку("Сценарий"));
		
		Для каждого пТекущаяСтрока Из пТзБДДС Цикл
			
			пТекущаяСтрока.Сценарий = пЗависимыеСценарии[пТекущаяСтрока.Сценарий]; //поскольку типовая проверка остатков делается со стороны подчиненных сценариев
			//пТекущаяСтрока.Сумма = - пТекущаяСтрока.Сумма;
		КонецЦикла; 
		
		//выполнение контроля по бюджету, принятие решения о возможности проведения и сообщения пользователю
		бит_БК_Общий.БюджетныйКонтрольОперативный(пТзБДДС, Неопределено,  Ссылка, Отказ, "Проведение: "+ Ссылка);
	КонецЕсли;
	//} bit_SVKushnirenko 24.01.2017 #2657
	
	Если НЕ Отказ Тогда
		
		//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-10-11 (#3098)
		ТаблицаБДДС = ПодготовитьТаблицу(Неопределено);
		//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-10-11 (#3098)		
		ДвиженияПоРегистрам(СтруктураШапкиДокумента,ТаблицаБДДС,Отказ,Заголовок);
				
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	//{ bit SVKushnirenko Bit 27.01.2017 #2657
	ЭтотОбъект.Движения.бит_КонтрольныеЗначенияБюджетов.ДополнительныеСвойства.Вставить("бит_БК_УстановкаСтатусаПередУдалением", Истина);
	//} bit SVKushnirenko Bit 27.01.2017 #2657
	
	бит_ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, );
КонецПроцедуры

//Суммы //В ТЧ
Процедура ПересчитатьСуммыВТЧ(ТочкаВхода, ТекущаяСтрока) Экспорт
	Если ТочкаВхода = "СуммаСНДС" Тогда
		ПересчитатьСуммыПриИзмененииСуммаСНДС(ТекущаяСтрока);
	ИначеЕсли ТочкаВхода = "СуммаБезНДС" Тогда
		ПересчитатьСуммыПриИзмененииСуммаБезНДС(ТекущаяСтрока);
	ИначеЕсли ТочкаВхода = "СтавкаНДС" Тогда
		ПересчитатьСуммыПриИзмененииСтавкаНДС(ТекущаяСтрока);
	КонецЕсли;
КонецПроцедуры

//Ставка НДС
Процедура ПересчитатьСуммыПриИзмененииСтавкаНДС(ТекСтрока)	
	Если ЗначениеЗаполнено(ТекСтрока.СуммаБезНДС) Тогда
		ПересчитатьСуммыПриИзмененииСуммаБезНДС(ТекСтрока);
	ИначеЕсли ЗначениеЗаполнено(ТекСтрока.СуммаСНДС) Тогда  
		ПересчитатьСуммыПриИзмененииСуммаСНДС(ТекСтрока);
	КонецЕсли; 		
КонецПроцедуры

Процедура ПересчитатьСуммыПриИзмененииСуммаСНДС(ТекСтрока)
	Если НЕ ЗначениеЗаполнено(ТекСтрока.СтавкаНДС) Тогда 
		Возврат;
	КонецЕсли;
	ТекСтрока.НДС = бит_БухгалтерияКлиентСервер.РассчитатьСуммуНДС(ТекСтрока.СуммаСНДС, Истина, Истина, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ТекСтрока.СтавкаНДС));
	ТекСтрока.СуммаБезНДС = ТекСтрока.СуммаСНДС - ТекСтрока.НДС;
КонецПроцедуры

Процедура ПересчитатьСуммыПриИзмененииСуммаБезНДС(ТекСтрока)
	
	Если НЕ ЗначениеЗаполнено(ТекСтрока.СтавкаНДС) Тогда 
		Возврат;
	КонецЕсли;
	ТекСтрока.НДС = бит_БухгалтерияКлиентСервер.РассчитатьСуммуНДС(ТекСтрока.СуммаБезНДС, Истина, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ТекСтрока.СтавкаНДС));
	ТекСтрока.СуммаСНДС = ТекСтрока.СуммаБезНДС + ТекСтрока.НДС;
КонецПроцедуры

#КонецЕсли

Процедура ПриКопировании(ОбъектКопирования)
	//+БИТ_Сундукова 01032016
	Ответственный = Пользователи.ТекущийПользователь();
	//-БИТ_Сундукова 01032016
КонецПроцедуры

//{ bit SVKushnirenko 02.12.2016 #Перенос кода SSenin #2657
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//+Сенин С.В. 16.09.16 #2657
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;	
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Если ТабличнаяЧасть.Количество()=0 Тогда
			
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение("В табличная часть пуста: проведение документа невозможно!", ЭтотОбъект.Ссылка);
			Отказ = Истина;
			Возврат;
		КонецЕсли; 
	КонецЕсли; 
	//-Сенин С.В. 16.09.16 #2657	
КонецПроцедуры
//} bit SVKushnirenko 02.12.2016 #Перенос кода SSenin #2657


//	 + БИТ AMerkulov 2015-05-05 
ВводИзТонкогоКлиента = Ложь;
//	 - БИТ AMerkulov 2015-05-05 	
	