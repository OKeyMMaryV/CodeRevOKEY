#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем мПометкаИзГрафикаПлатажей Экспорт;
Перем мПометкаИзГрафикаНачислений Экспорт;	

//Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
//	
//	Документы[Метаданные().Имя].ЗаполнениеПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
//	
//КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// движения по регистру обороты по бюджетам
	НаборДвижений = Движения.бит_ОборотыПоБюджетам;
	НаборДвижений.Очистить();
	
	//в рамках
	Для Каждого СтрокаТЧ Из База Цикл
		Движение = НаборДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ЭтотОбъект);
		Движение.Период 			= Дата;
		
		Движение.Аналитика_1 		= НомерЗаявки;
		//Движение.Аналитика_2 		= Объект;
		Движение.Аналитика_2 		= СтрокаТЧ.Объект;
		//Движение.Аналитика_3 		= Перечисления.бит_БК_ВариантыБюджета.ВРамкахБюджета; //1c-izhtc spawn 26.08.15
		Движение.Аналитика_4 		= ID;
		//Движение.ЦФО 				= ЭтотОбъект.ФункцияЦФО;
		Движение.ЦФО 				= СтрокаТЧ.ФункцияЦФО;
		Движение.Сценарий 			= Справочники.СценарииПланирования.рс_ЭкономическийУчет;
		Движение.бит_БК_Организация	= Организация;
		Движение.СтатьяОборотов     = СтрокаТЧ.СтатьяОборотов;
		
		//без НДС
		//1c-izhtc spawn 26.08.15 (
		//Движение.СуммаБезНДСРегл 	 = СтрокаТЧ.СуммаБезНДС;
		//Движение.СуммаБезНДСУпр 	 = СтрокаТЧ.СуммаБезНДС;
		//Движение.СуммаБезНДССценарий = СтрокаТЧ.СуммаБезНДС;
		//1c-izhtc spawn 26.08.15 )
		//с НДС
		Движение.СуммаРегл 			= СтрокаТЧ.Сумма;
		Движение.СуммаУпр 			= СтрокаТЧ.Сумма;
		Движение.СуммаСценарий		= СтрокаТЧ.Сумма;
	КонецЦикла;
КонецПроцедуры

//устанавливает ID_Разнесения И ID_РазнесенияЧ
Процедура УстановитьIDРазнесения(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Номер) Тогда
		УстановитьНовыйНомер();
	КонецЕсли;
	
	ВидДокумента = рс_ОбщийМодуль.ПолучитьНастройкуЭкономическогоУчета(Справочники.рс_ПоказателиНастроекЭУ.ВидДокументаДляЗаявкиНаДоговор, Дата);
	
	//ОК Калинин М. 180912 по умолчанию берем первый бит как единица
	//Префикс = Формат(ВидДокумента.Первый_бит_ID,"ЧЦ=1; ЧН=");
	Префикс = Формат(?(ЗначениеЗаполнено(ВидДокумента),ВидДокумента.Первый_бит_ID,1),"ЧЦ=1; ЧН=");
	//ОК Калинин М. 
	
	Корень = Формат(Число(Номер),"ЧЦ=6; ЧВН=; ЧГ=0");
	СтрокаРезультат = Префикс + Корень;
	
	//вычисляем постфикс
	мСумма = 0;
	Для сч = 0 по 6 Цикл
		НомерСимвола = 7-сч; //от 7 до 1
		СимволС = Сред(СтрокаРезультат,НомерСимвола,1);
		СимволЧ = Число(СимволС);
		Если Цел(НомерСимвола/2) = НомерСимвола/2 Тогда
			СимволЧ = СимволЧ * 2;
			Если СимволЧ > 9 Тогда 
				СимволЧ = СимволЧ - 9;
			КонецЕсли;
		КонецЕсли;
		мСумма = мСумма + СимволЧ;
	КонецЦикла;
	мСумма = (1-(мСумма/10 - Цел(мСумма/10)))*10;
	Если мСумма = 10 Тогда 
		мСумма = 0;
	КонецЕсли;
	СтрокаРезультат = СтрокаРезультат + Строка(мСумма);
	
	ID_РазнесенияЧ = Число(СтрокаРезультат);
	ID_Разнесения = Сред(СтрокаРезультат,1,4) + "-" + Сред(СтрокаРезультат,5,4);
	
	ID = ID_Разнесения;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ЗначениеЗаполнено(ID) Тогда
		УстановитьIDРазнесения(Отказ);
	КонецЕсли;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Сценарий = Справочники.СценарииПланирования.рс_ЭкономическийУчет;
	
	// Rarus-spb byse 2012.12.20 {	
	Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип ("ДокументСсылка.бит_ДополнительныеУсловияПоДоговору") Тогда
		//ВариантБюджета = ДанныеЗаполнения.Аналитика3;
		//НомерЗаявки = ;
		//СодержаниеЗатрат = ;
	КонецЕсли;	
	// Rarus-spb byse 2012.12.20 }
	
	
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ID = "";
КонецПроцедуры

Процедура РассчитатьСуммуДокумента () Экспорт
	СуммаБезНДС    = База.Итог("СуммаБезНДС");
	мСтавка        = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДС);
  	НДС            = УчетНДСКлиентСервер.РассчитатьСуммуНДС(СуммаБезНДС,Ложь,мСтавка);
	Сумма          = НДС + СуммаБезНДС;
КонецПроцедуры	


//ОК Калинин М. 180213 
Функция ОткрытьФормуВнешнегоОтчета(имяотчета_,ДополнительныеПараметры)
	//////ОтчетРезультат=неопределено;
	//////попытка
	//////	ИмяФайла = ПолучитьИмяВременногоФайла("epf");		
	//////	Справочники.ВнешниеОбработки.НайтиПоНаименованию(имяотчета_).ХранилищеВнешнейОбработки.Получить().Записать(ИмяФайла);		
	//////	Отчет = ВнешниеОбработки.Создать(ИмяФайла);
	//////	Отчет.ДополнительныеПараметры=ДополнительныеПараметры;
	//////	Отчет.СсылкаНаОБъект=Ссылка;
	//////	ОтчетРезультат=Отчет.Печать();
	//////исключение
	//////	сообщить(ОписаниеОшибки());		
	//////конецпопытки; 
	//////
	//////Возврат ОтчетРезультат;
КонецФункции	

Процедура Печать() Экспорт
	//////СОбъектами	= Истина;
	//////НаПринтер	= Ложь;
	//////КоличествоЭкземпляров=1;
	//////ДополнительныеПараметры=новый  структура("НаПринтер,СОбъектами",НаПринтер,СОбъектами);
	//////ТабДокумент=ОткрытьФормуВнешнегоОтчета("Печать заявки на договор",ДополнительныеПараметры);
	//////Если не ТабДокумент=неопределено тогда
	//////	СсылкаНаОбъект=Ссылка;
	//////	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер,СсылкаНаОбъект.Метаданные().Имя + " № " + СсылкаНаОбъект.Номер + " от " + Формат(СсылкаНаОбъект.Дата, "ДФ='дд ММММ гггг'")+ " г.", СсылкаНаОбъект);
	//////КонецЕсли;	
КонецПроцедуры
//ОК Калинин М. 180213

#КонецЕсли