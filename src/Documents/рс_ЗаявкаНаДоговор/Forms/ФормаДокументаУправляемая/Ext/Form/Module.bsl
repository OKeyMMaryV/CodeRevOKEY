////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущие значения реквизитов формы. Клиент.
&НаКлиенте 
Перем мКэшРеквизитовФормы;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устнавливает заголовок формы документа.
//
// Параметры:
//  Нет.
//
&НаКлиенте 
Процедура УстановитьЗаголовокФормыДокумента()
	
	СтруктураЗаголовка = Новый Структура;
	СтруктураЗаголовка.Вставить("ПредставлениеОбъекта", фКэшЗначений.ПредставлениеОбъекта);
	СтруктураЗаголовка.Вставить("СтрокаВидаОперации"  , Строка(""));
	СтруктураЗаголовка.Вставить("ЭтоНовый"			  , Параметры.Ключ.Пустая());
	СтруктураЗаголовка.Вставить("ДокументПроведен"	  , Объект.Проведен);
	
	бит_РаботаСДиалогамиКлиент.УстановитьЗаголовокФормыДокумента(ЭтаФорма
																,СтруктураЗаголовка);
	
КонецПроцедуры // УстановитьЗаголовокФормыДокумента()

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С КЭШЕМ РЕКВИЗИТОВ ФОРМЫ

// Процедура заполняет кэш реквизитов формы данными объекта.
//
// Параметры:
//  Нет.
//
&НаКлиенте 
Процедура ЗаполнитьТекущиеЗначенияРеквизитовФормы()
	
	Для Каждого КлючИЗначение Из мКэшРеквизитовФормы Цикл
		мКэшРеквизитовФормы[КлючИЗначение.Ключ] = Объект[КлючИЗначение.Ключ];
	КонецЦикла; 
	
КонецПроцедуры // ЗаполнитьТекущиеЗначенияРеквизитовФормы()

// Процедура добавляет в кэш реквизитов текущее значение заданного реквизита.
//
// Параметры:
// 	ИмяРеквизита - Строка.
//
&НаКлиенте
Процедура ДобавитьВКэш(ИмяРеквизита)
	
	мКэшРеквизитовФормы[ИмяРеквизита] = Объект[ИмяРеквизита];	
	
КонецПроцедуры // ДобавитьВКэш()

// Процедура извлекает из кэша и присваивает объекту значение заданного реквизита.
//
// Параметры:
// 	ИмяРеквизита - Строка.
//
&НаКлиенте
Процедура ИзвлечьИзКэша(ИмяРеквизита)
	
	Объект[ИмяРеквизита] = мКэшРеквизитовФормы[ИмяРеквизита];
	
КонецПроцедуры // ИзвлечьИзКэша()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭтоНовый = ?(Параметры.Ключ.Пустая(), Истина, Ложь);
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	УстановитьЗаголовокФормыДокумента();
	
	// Зададим имена реквизитов, подлежащих кешированию.
	мКэшРеквизитовФормы = Новый Структура;
	//мКэшРеквизитовФормы.Вставить("Организация");
	
	// Запомним текущие значения реквизитов формы.
	ЗаполнитьТекущиеЗначенияРеквизитовФормы();
	
	Если ЭтоНовый Тогда
		Объект.Дата = КонецДня(Объект.Дата);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	УстановитьЗаголовокФормыДокумента();
	Модифицированность = Ложь;
	
	//ОповеститьОЗаписиНового(Объект);
	
КонецПроцедуры // ПослеЗаписи()

// Процедура - обработчик события "ПриИзменении" поля "Сумма без НДС" ТЧ База
//
&НаКлиенте
Процедура БазаСуммаБезНДСПриИзменении(Элемент)
	РассчитатьСуммуСервер();
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля "Сумма" ТЧ База
//
&НаКлиенте
Процедура БазаСуммаПриИзменении(Элемент)
	РассчитатьСуммуСервер();
КонецПроцедуры

// Процедура - обработчик события "ОкончаниеРедактирования" ТЧ База
//
&НаКлиенте
Процедура БазаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	РассчитатьСуммуСервер();
КонецПроцедуры

// Процедура - обработчик события поля "ПриИзменении" поля "СтавкаНДС"
//
&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	РассчитатьСуммуСервер();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ     

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-29 (#3842)
&НаКлиенте
Процедура ок_СоздатьЗаявкиРасходованияДС(Команда)
	
	стрРезультат = ок_СоздатьЗаявкиРасходованияДСНаСервере();
	Для Каждого пСозданныйДокумент ИЗ стрРезультат.СозданныеДокументы Цикл 
		
		пТекст = НСтр("ru = 'На основании создан документ %1'");
		пТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(пТекст,пСозданныйДокумент);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(пТекст,пСозданныйДокумент);
		
	КонецЦикла;
	
	Если Не ПустаяСтрока(стрРезультат.Ошибки) Тогда 
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(стрРезультат.Ошибки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ок_СоздатьЗаявкиРасходованияДСНаСервере()
	
	Возврат ОК_ОбщегоНазначения.СоздатьЗаявкиРасходованияДСНаСервере(Объект.Ссылка);
	
КонецФункции
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-29 (#3842)

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЕРВЕРНЫЕ ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриЧтенииНаСервере" формы.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаполнитьКэшЗначений();
	УстановитьНастройкиДоступностиЭлементов();
			
КонецПроцедуры // ПриЧтенииНаСервере()

// Процедура - обработчик события "ПриСозданииНаСервере" формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МетаданныеОбъекта = Объект.Ссылка.Метаданные();
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Открытие нового 
   	Если Параметры.Ключ.Пустая() Тогда
		
		ЗаполнитьКэшЗначений();
		
	КонецЕсли;

	УстановитьВидимость();
	
	//СофтЛаб Начало 2019-09-22 #3493
	ок_УправлениеФормами.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	//СофтЛаб Конец 2019-09-22 #3493
	
КонецПроцедуры // ПриСозданииНаСервере()

// Процедура - обработчик события "ПередЗаписьюНаСервере" формы.
//
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Если Не Отказ Тогда		
			//ТекущийОбъект.ДополнительныеСвойства.Вставить("СуммаАбсолютногоРасхождения"	  , Объект.СуммаАбсолютногоРасхождения);
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписьюНаСервере()

// Процедура - обработчик события "ПослеЗаписиНаСервере" формы.
//
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьНастройкиДоступностиЭлементов();
	
КонецПроцедуры // ПослеЗаписиНаСервере()

////////////////////////////////////////////////////////////////////////////////
// СЕРВЕРНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура заполняет кэш значений, необходимый при работе на клиенте.
//
// Параметры:
//  Нет.
//
&НаСервере
Процедура ЗаполнитьКэшЗначений()

	фКэшЗначений = Новый Структура;
	МетаданныеОбъекта = Объект.Ссылка.Метаданные();

	фКэшЗначений.Вставить("ПредставлениеОбъекта", МетаданныеОбъекта.ПредставлениеОбъекта);
	фКэшЗначений.Вставить("ИмяТипаОбъекта", "ДокументОбъект." + МетаданныеОбъекта.Имя);
 	
КонецПроцедуры // ЗаполнитьКэшЗначений()

// Процедура устанавлиант видимость доступность элементов формы
//
// Параметры:
//  Нет
//
&НаСервере
Процедура УстановитьВидимость()
	
	//ЭтоРегистрБюдж = Объект.РегистрБухгалтерии.ИмяОбъекта = "бит_Бюджетирование";
	//Элементы.Сценарий.Видимость = ЭтоРегистрБюдж;
	
КонецПроцедуры // УстановитьВидимостьДоступностьПоРегБух()

// Процедура применяет настройки доступности и видимости для элементов формы.
//
// Параметры:
//  Нет.
//
&НаСервере
Процедура УстановитьНастройкиДоступностиЭлементов() Экспорт
	
	// Получение таблицы настроек доступности элементов управления.
	ТаблицаНастроекДоступности = бит_ОбщегоНазначения.ПолучитьНастройкиДоступностиЭлементовУправления(Объект, Истина);
	
	// Фильтр таблицы настроек по статусу.
	ДокументЗаявка 			  = ДанныеФормыВЗначение(Объект, Тип(фКэшЗначений.ИмяТипаОбъекта));
	ТекущийСтатус			  = Неопределено;
	ТаблицаАктуальныхНастроек = бит_ОбщегоНазначения.ПолучитьАктуальныеНастройки(ТаблицаНастроекДоступности
																				,ТекущийСтатус);
	
	// Структура параметров для проверки произвольного условия.
	ПараметрыУсловия = Новый Структура;
	ПараметрыУсловия.Вставить("ТекущийОбъект", Объект);
	//ПараметрыУсловия.Вставить("Статус"		 , ТекущийСтатус);
	
	// Применяем настройки.
	бит_ОбщегоНазначения.УстановитьДоступностьЭлементовУправленияПоНастройкам(ЭтаФорма
																			 ,ТаблицаАктуальныхНастроек
																			 ,ПараметрыУсловия);
КонецПроцедуры // УстановитьНастройкиДоступностиЭлементов()

// Процедура рассчитывает сумму документа на сервере
//
&НаСервере
Процедура РассчитатьСуммуСервер()
	мОбъект = РеквизитФормыВЗначение("Объект");
	мОбъект.РассчитатьСуммуДокумента();
	ЗначениеВРеквизитФормы(мОбъект,"Объект");
КонецПроцедуры	

//ОК Калинин М. 180213  
&НаСервере
Функция ОткрытьФормуВнешнегоОтчета(имяотчета_,ДополнительныеПараметры)
	//////ОтчетРезультат=неопределено;
	//////попытка
	//////	ИмяФайла = ПолучитьИмяВременногоФайла("epf");		
	//////	Справочники.ВнешниеОбработки.НайтиПоНаименованию(имяотчета_).ХранилищеВнешнейОбработки.Получить().Записать(ИмяФайла);		
	//////	Отчет = ВнешниеОбработки.Создать(ИмяФайла);
	//////	Отчет.ДополнительныеПараметры=ДополнительныеПараметры;
	//////	Отчет.СсылкаНаОбъект=ЭтаФорма.Объект.Ссылка;
	//////	ОтчетРезультат=Отчет.Печать();
	//////исключение
	//////	сообщить(ОписаниеОшибки());		
	//////конецпопытки; 
	//////
	//////Возврат ОтчетРезультат;
КонецФункции	

&НаКлиенте
Процедура Печать() Экспорт
	//////СОбъектами	= Истина;
	//////НаПринтер	= Ложь;
	//////КоличествоЭкземпляров=1;
	//////ДополнительныеПараметры=новый  структура("НаПринтер,СОбъектами",НаПринтер,СОбъектами);
	//////ТабДокумент=ОткрытьФормуВнешнегоОтчета("Печать заявки на договор",ДополнительныеПараметры);
	//////Если не ТабДокумент=неопределено тогда
	//////	СсылкаНаОбъект=ЭтаФорма.Объект.Ссылка;
	//////	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер,СсылкаНаОбъект.Метаданные().Имя + " № " + СсылкаНаОбъект.Номер + " от " + Формат(СсылкаНаОбъект.Дата, "ДФ='дд ММММ гггг'")+ " г.", СсылкаНаОбъект);
	//////КонецЕсли;	
КонецПроцедуры
//ОК Калинин М. 180213



