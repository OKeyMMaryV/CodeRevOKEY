////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ (Параметры.ОсновнойОтбор = Неопределено) Тогда
		
		ОплаченоИспользование					 = Параметры.ОсновнойОтбор.Свойство("Оплачено",					Оплачено);
		ФормаОплатыИспользование				 = Параметры.ОсновнойОтбор.Свойство("ФормаОплаты",				ФормаОплаты);
		ОрганизацияИспользование				 = Параметры.ОсновнойОтбор.Свойство("Организация",				Организация);
		БанковскийСчетОрганизацияИспользование	 = Параметры.ОсновнойОтбор.Свойство("БанковскийСчетОрганизация",БанковскийСчетОрганизация);
		ПлатежнаяПозицияИспользование			 = Параметры.ОсновнойОтбор.Свойство("ПлатежнаяПозиция",			ПлатежнаяПозиция);
		ВалютаДокументаИспользование			 = Параметры.ОсновнойОтбор.Свойство("ВалютаДокумента",			ВалютаДокумента);
		СуммаИспользование						 = Параметры.ОсновнойОтбор.Свойство("Сумма",					Сумма);
		СуммаОстатокИспользование				 = Параметры.ОсновнойОтбор.Свойство("СуммаОстаток",				СуммаОстаток);
		ВалютаИспользование						 = Параметры.ОсновнойОтбор.Свойство("Валюта",					Валюта);
		СуммаКОплатеНачИспользование			 = Параметры.ОсновнойОтбор.Свойство("СуммаКОплатеНач",			СуммаКОплатеНач);
		СуммаКОплатеИспользование				 = Параметры.ОсновнойОтбор.Свойство("СуммаКОплате",				СуммаКОплате);

		//Дополнительные
		Параметры.ОсновнойОтбор.Свойство("Контрагент",			Контрагент);
		Параметры.ОсновнойОтбор.Свойство("ДоговорКонтрагента",	ДоговорКонтрагента);
		Параметры.ОсновнойОтбор.Свойство("СтатьяОборотов",		СтатьяОборотов);
	   	Параметры.ОсновнойОтбор.Свойство("ВидСтатьиОборота",	ВидСтатьиОборота);
		//Параметры.ОсновнойОтбор.Свойство("Контрагент, ДоговорКонтрагента, СтатьяОборотов, ВидСтатьиОборота",);
		//Параметры.ОсновнойОтбор.Свойство("Контрагент, ДоговорКонтрагента, СтатьяОборотов, ВидСтатьиОборота",);
		
	КонецЕсли; 
	//ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Контрагент, ДоговорКонтрагента, СтатьяОборотов, ВидСтатьиОборота"); 
	
	//ВосстановитьОсновнойОтборСписка(Параметры.АдресОсновногоОтбора);
	
	ЗаполнитьСпискиВыбораВидыСравнения();
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОплаченоВидСравненияПриИзменении(Элемент)
	ВидСравненияПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ФормаОплатыВидСравненияПриИзменении(Элемент)
	ВидСравненияПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияВидСравненияПриИзменении(Элемент)
	ВидСравненияПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетОрганизацияВидСравненияПриИзменении(Элемент)
	ВидСравненияПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкаВидСравненияПриИзменении(Элемент)
	ВидСравненияПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПлатежнаяПозицияВидСравненияПриИзменении(Элемент)
	ВидСравненияПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДокументаВидСравненияПриИзменении(Элемент)
	ВидСравненияПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СуммаВидСравненияПриИзменении(Элемент)
	ВидСравненияПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СуммаОстатокВидСравненияПриИзменении(Элемент)
	ВидСравненияПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВалютаВидСравненияПриИзменении(Элемент)
	ВидСравненияПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СуммаКОплатеНачВидСравненияПриИзменении(Элемент)
	ВидСравненияПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СуммаКОплатеВидСравненияПриИзменении(Элемент)
	ВидСравненияПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВидСравненияПриИзменении(Элемент)
	
	ИмяРеквизита = СтрЗаменить(Элемент.Имя, "ВидСравнения", "");
	
	ЭтаФорма[ИмяРеквизита + "Использование"] = Истина;	
	
	УстановитьВидимостьЭлементовРеквизита(ИмяРеквизита);
	
КонецПроцедуры

&НаКлиенте
Процедура ОплаченоПриИзменении(Элемент)
	ЗначениеПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ФормаОплатыПриИзменении(Элемент)
	ЗначениеПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ЗначениеПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетОрганизацияПриИзменении(Элемент)
	ЗначениеПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкаПриИзменении(Элемент)
	ЗначениеПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПлатежнаяПозицияПриИзменении(Элемент)
	ЗначениеПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДокументаПриИзменении(Элемент)
	ЗначениеПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	ЗначениеПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СуммаОстатокПриИзменении(Элемент)
	ЗначениеПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	ЗначениеПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СуммаКОплатеНачПриИзменении(Элемент)
	ЗначениеПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СуммаКОплатеПриИзменении(Элемент)
	ЗначениеПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПриИзменении(Элемент)
	
	ИмяРеквизита = СтрЗаменить(Элемент.Имя, "ВидСравнения", "");
	
	ЭтаФорма[ИмяРеквизита + "Использование"] = Истина;	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Отобрать(Команда)
	
	СтруктураОтборов = Новый Структура;
	Если ОплаченоИспользование Тогда
	    СтруктураОтборов.Вставить("Оплачено",Оплачено);
	КонецЕсли; 
	Если ФормаОплатыИспользование Тогда
	    СтруктураОтборов.Вставить("ФормаОплаты",ФормаОплаты);
	КонецЕсли;	
	Если ОрганизацияИспользование Тогда
	    СтруктураОтборов.Вставить("Организация",Организация);
	КонецЕсли;
	Если БанковскийСчетОрганизацияИспользование Тогда
	    СтруктураОтборов.Вставить("БанковскийСчетОрганизация",БанковскийСчетОрганизация);
	КонецЕсли;
	Если ПлатежнаяПозицияИспользование Тогда
	    СтруктураОтборов.Вставить("ПлатежнаяПозиция",ПлатежнаяПозиция);
	КонецЕсли;	
	Если ВалютаДокументаИспользование Тогда
	    СтруктураОтборов.Вставить("ВалютаДокумента",ВалютаДокумента);
	КонецЕсли;
	Если СуммаИспользование Тогда
	    СтруктураОтборов.Вставить("Сумма",Сумма);
	КонецЕсли; 
	Если СуммаОстатокИспользование Тогда
	    СтруктураОтборов.Вставить("СуммаОстаток",СуммаОстаток);
	КонецЕсли;	
	Если ВалютаИспользование Тогда
	    СтруктураОтборов.Вставить("Валюта",Валюта);
	КонецЕсли;
	Если СуммаКОплатеНачИспользование Тогда
	    СтруктураОтборов.Вставить("СуммаКОплатеНач",СуммаКОплатеНач);
	КонецЕсли;
	Если СуммаКОплатеИспользование Тогда
	    СтруктураОтборов.Вставить("СуммаКОплате",СуммаКОплате);
	КонецЕсли;	
	
	//Дополнительные
	Если НЕ (Контрагент = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка")) Тогда
	    СтруктураОтборов.Вставить("Контрагент",Контрагент);
	КонецЕсли; 
	Если НЕ (ДоговорКонтрагента = ПредопределенноеЗначение("Справочник.ДоговорыКонтрагентов.ПустаяСсылка")) Тогда
	    СтруктураОтборов.Вставить("ДоговорКонтрагента",ДоговорКонтрагента);
	КонецЕсли;	
	Если НЕ (СтатьяОборотов = ПредопределенноеЗначение("Справочник.бит_СтатьиОборотов.ПустаяСсылка")) Тогда
	    СтруктураОтборов.Вставить("СтатьяОборотов",СтатьяОборотов);
	КонецЕсли;
	Если НЕ (ВидСтатьиОборота = ПредопределенноеЗначение("Справочник.бит_ВидыСтатейОборотов.ПустаяСсылка")) Тогда
	    СтруктураОтборов.Вставить("ВидСтатьиОборота",ВидСтатьиОборота);
	КонецЕсли;
	
	//СтруктураОтборов.Вставить("Контрагент", 		Контрагент);
	//СтруктураОтборов.Вставить("ДоговорКонтрагента", ДоговорКонтрагента);
	//СтруктураОтборов.Вставить("СтатьяОборотов",		СтатьяОборотов);
	//СтруктураОтборов.Вставить("ВидСтатьиОборота", 	ВидСтатьиОборота);
	//
	//ОсновнойОтбор = Новый Массив;
	//
	//Для каждого ИмяРеквизита Из РеквизитыОсновногоОтбора() Цикл
	//	
	//	ЭлементОтбора = Новый Структура;
	//	ЭлементОтбора.Вставить("ПолеОтбора", 	ИмяРеквизита);
	//	ЭлементОтбора.Вставить("Использование", ЭтаФорма[ИмяРеквизита + "Использование"]);
	//	ЭлементОтбора.Вставить("ВидСравнения",  ЭтаФорма[ИмяРеквизита + "ВидСравнения"]);
	//	ЭлементОтбора.Вставить("Значение",		ЭтаФорма[ИмяРеквизита]);
	//	
	//	Если ЭлементОтбора.ВидСравнения = ВидСравнения.ВСписке
	//		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравнения.НеВСписке Тогда
	//		
	//		ЭлементОтбора.Вставить("ЗначениеСписок", ЭтаФорма[ИмяРеквизита + "Список"].ВыгрузитьЗначения());
	//	
	//	КонецЕсли; 
	//	
	//	Если ЭлементОтбора.ВидСравнения = ВидСравнения.Интервал
	//		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы
	//		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравнения.ИнтервалВключаяНачало
	//		ИЛИ ЭлементОтбора.ВидСравнения = ВидСравнения.ИнтервалВключаяОкончание Тогда
	//	
	//		ЭлементОтбора.Вставить("ЗначениеС", 	ЭтаФорма[ИмяРеквизита + "С"]);
	//		ЭлементОтбора.Вставить("ЗначениеПо", 	ЭтаФорма[ИмяРеквизита + "По"]);
	//	
	//	КонецЕсли;
	//	
	//	ОсновнойОтбор.Добавить(ЭлементОтбора);
	//	
	//КонецЦикла; 
	//
	//СтруктураОтборов.Вставить("ОсновнойОтбор",		ОсновнойОтбор);
	
	Закрыть(СтруктураОтборов);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ОПОВЕЩЕНИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ВосстановитьОсновнойОтборСписка(АдресОсновногоОтбора)

	КоллекцияОтборов = ПолучитьИзВременногоХранилища(АдресОсновногоОтбора);
	Если НЕ (КоллекцияОтборов = Неопределено) Тогда
	 
		Для каждого ЭлементОтбора Из КоллекцияОтборов Цикл
			
			ИмяРеквизита = ЭлементОтбора.Имя;
			
			ЭтаФорма[ИмяРеквизита + "Использование"] 	= ЭлементОтбора.Использование;
			ЭтаФорма[ИмяРеквизита + "ВидСравнения"]		= ЭлементОтбора.ВидСравнения;
			
			Если Элементы.Найти(ИмяРеквизита + "С") <> Неопределено Тогда
				ЭтаФорма[ИмяРеквизита + "С"] 			= ЭлементОтбора.ЗначениеС;
				ЭтаФорма[ИмяРеквизита + "По"]			= ЭлементОтбора.ЗначениеПо;
			КонецЕсли; 
			
			Значение = ЭлементОтбора.Значение;
			
			Если ТипЗнч(Значение) = Тип("СписокЗначений") Тогда
				ЗначениеСписок 	= Значение;
				Значение 		= ?(Значение.Количество() = 0, Неопределено, Значение[0].Значение);
			Иначе
				ЗначениеСписок = Новый СписокЗначений;
				Если ЗначениеЗаполнено(Значение) Тогда
					ЗначениеСписок.Добавить(Значение);
				КонецЕсли; 
			КонецЕсли; 
			
			ЭтаФорма[ИмяРеквизита] = Значение;
			
			Если Элементы.Найти(ИмяРеквизита + "Список") <> Неопределено Тогда
				ЭтаФорма[ИмяРеквизита + "Список"].ЗагрузитьЗначения(ЗначениеСписок.ВыгрузитьЗначения());
			КонецЕсли; 
			
		КонецЦикла; 
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиВыбораВидыСравнения()

	Для каждого ИмяРеквизита Из РеквизитыОсновногоОтбора() Цикл
	
		СписокВыбора = Элементы[ИмяРеквизита + "ВидСравнения"].СписокВыбора;
		
		СписокВыбора.Добавить(ВидСравнения.Равно);
		СписокВыбора.Добавить(ВидСравнения.НеРавно);
		
		ТипЗначения = ТипЗнч(ЭтаФорма[ИмяРеквизита]);
		
		Если ТипЗначения <> Тип("Булево") Тогда
			СписокВыбора.Добавить(ВидСравнения.ВСписке);
			СписокВыбора.Добавить(ВидСравнения.НеВСписке);
		КонецЕсли; 
		
		Если ТипЗначения = Тип("Число") Тогда
			СписокВыбора.Добавить(ВидСравнения.Интервал);
			СписокВыбора.Добавить(ВидСравнения.ИнтервалВключаяГраницы);
			СписокВыбора.Добавить(ВидСравнения.ИнтервалВключаяНачало);
			СписокВыбора.Добавить(ВидСравнения.ИнтервалВключаяОкончание);
		КонецЕсли; 
		ЭтаФорма[ИмяРеквизита + "ВидСравнения"] = ВидСравнения.Равно;
		Элементы[ИмяРеквизита + "ВидСравнения"].ТолькоПросмотр = Истина;
	КонецЦикла; 

КонецПроцедуры
 
&НаСервере
Процедура УстановитьВидимостьЭлементов()

	Для каждого ИмяРеквизита Из РеквизитыОсновногоОтбора() Цикл
		УстановитьВидимостьЭлементовРеквизита(ИмяРеквизита);	
	КонецЦикла; 		

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовРеквизита(ИмяРеквизита)

	ТекВидСравнения = ЭтаФорма[ИмяРеквизита + "ВидСравнения"];
	
	ДоступенСписок 		= Ложь;
	ДоступноЗначение 	= Ложь;
	ДоступенИнтервал 	= Ложь;
	
	Если ТекВидСравнения = ВидСравнения.ВСписке
		ИЛИ ТекВидСравнения = ВидСравнения.НеВСписке Тогда
	
		ДоступенСписок 		= Истина;
		
	ИначеЕсли ТекВидСравнения = ВидСравнения.Интервал
		ИЛИ ТекВидСравнения = ВидСравнения.ИнтервалВключаяГраницы
		ИЛИ ТекВидСравнения = ВидСравнения.ИнтервалВключаяНачало
		ИЛИ ТекВидСравнения = ВидСравнения.ИнтервалВключаяОкончание Тогда
		
		ДоступенИнтервал 	= Истина;
		
	Иначе
		
		ДоступноЗначение 	= Истина;
		
	КонецЕсли; 	
	
	Элементы[ИмяРеквизита].Видимость 							= ДоступноЗначение;
	
	Если Элементы.Найти(ИмяРеквизита + "Список") <> Неопределено Тогда
		Элементы[ИмяРеквизита + "Список"].Видимость 				= ДоступенСписок;
	КонецЕсли; 
	
	Если Элементы.Найти("Группа" + ИмяРеквизита + "Интервал") <> Неопределено Тогда
		Элементы["Группа" + ИмяРеквизита + "Интервал"].Видимость 	= ДоступенИнтервал;
	КонецЕсли; 

КонецПроцедуры
 
&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыОсновногоОтбора()

	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить("Оплачено");
	МассивРеквизитов.Добавить("ФормаОплаты");
	МассивРеквизитов.Добавить("Организация");
	МассивРеквизитов.Добавить("БанковскийСчетОрганизация");
	//МассивРеквизитов.Добавить("Заявка");
	МассивРеквизитов.Добавить("ПлатежнаяПозиция");
	МассивРеквизитов.Добавить("ВалютаДокумента");
	МассивРеквизитов.Добавить("Сумма");
	МассивРеквизитов.Добавить("СуммаОстаток");
	МассивРеквизитов.Добавить("Валюта");
 	МассивРеквизитов.Добавить("СуммаКОплатеНач");
 	МассивРеквизитов.Добавить("СуммаКОплате");
	
	Возврат МассивРеквизитов;

КонецФункции 



 
 