
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
 	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
		
	Настройки 			 = Документы.бит_РеестрПлатежей.НовыеНастройкиФормыДокумента();
	СохраненныеНастройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("Документ.бит_РеестрПлатежей", "Настройки", Настройки);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СохраненныеНастройки);
	
	Если ТипЗнч(Параметры.СвойстваОбъекта) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.СвойстваОбъекта);
	КонецЕсли; 

	ВерсияДокументооборота = ?(бит_ОбщегоНазначения.СхемаДвиженияДокументовПоПлатежамИзменена(),1,0);
	
	ЗаполнитьКэшЗначений();
	УправлениеФормой();
		
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИсточникДанныхТаблоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	бит_РаботаСДиалогамиКлиент.НачалоВыбораИсточникаДанныхТабло(ДанныеВыбора,
														ЭтоБухгалтерия, 
														фКэшЗначений.Перечисления.бит_РежимПолученияДанныхТаблоСчетов,
														СтандартнаяОбработка);
														
КонецПроцедуры // ИсточникДанныхТаблоНачалоВыбора()
   
&НаКлиенте
Процедура ИсточникДанныхТаблоПриИзменении(Элемент)
	
	ИсточникБУ       = фКэшЗначений.Перечисления.бит_РежимПолученияДанныхТаблоСчетов.ДанныеБухгалтерскогоУчета;
	ИсточникДляУппКа = фКэшЗначений.Перечисления.бит_РежимПолученияДанныхТаблоСчетов.УппКа_ДанныеПоДенежнымСредствам;
	
	Если ЭтоБухгалтерия 
		И ИсточникДанныхТабло = ИсточникДляУппКа Тогда
		
		ТекстСообщения = НСтр("ru = 'В данном решении невозможно получать данные по денежным средствам.'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
			
		ИсточникДанныхТабло = ИсточникБУ;
	
	КонецЕсли;
	
	Элементы.ПоказыватьСуммуПланируемыхПоступлений.Видимость = ИсточникДанныхТабло = ИсточникБУ 
															 ИЛИ ИсточникДанныхТабло = ИсточникДляУппКа;
	
КонецПроцедуры // ИсточникДанныхТаблоПриИзменении()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)

	Если ВерсияДокументооборота = 0 Тогда
		НеФормироватьПлатежныеПоручения = Истина;
		ПроводитьПлатежныеПоручения  	= Ложь;
	Иначе
		Если СозданиеПлатежныхПоручений = 0 Тогда
			НеФормироватьПлатежныеПоручения = Истина;
			ПроводитьПлатежныеПоручения  	= Ложь;
		ИначеЕсли СозданиеПлатежныхПоручений = 1 Тогда
			НеФормироватьПлатежныеПоручения = Ложь;
			ПроводитьПлатежныеПоручения  	= Ложь;
		ИначеЕсли СозданиеПлатежныхПоручений = 2 Тогда
			НеФормироватьПлатежныеПоручения = Ложь;
			ПроводитьПлатежныеПоручения  	= Истина;
		КонецЕсли; 
	КонецЕсли; 

	Если СозданиеДокументовОплаты = 0 Тогда
		НеФормироватьДокументыОплаты = Истина;
		ПроводитьДокументыОплаты     = Ложь;
		РежимЗаписи = "";
	ИначеЕсли СозданиеДокументовОплаты = 1 Тогда
		НеФормироватьДокументыОплаты = Ложь;
		ПроводитьДокументыОплаты     = Ложь;
		РежимЗаписи = "Запись";
	ИначеЕсли СозданиеДокументовОплаты = 2 Тогда
		НеФормироватьДокументыОплаты = Ложь;
		ПроводитьДокументыОплаты     = Истина;
		РежимЗаписи = "Проведение";
	КонецЕсли; 
		
	Закрыть(СохранитьНастройки());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура заполняет кеш значений.
// 
// Параметры:
//  Нет
// 
&НаСервере
Процедура ЗаполнитьКэшЗначений()

	ЭтоБухгалтерия = бит_ОбщегоНазначения.ЭтоБухгалтерияПредприятия();
	
	фКэшЗначений 	= Новый Структура;
	КэшПеречисления = Новый Структура;
		
	КэшПеречисления.Вставить("бит_РежимПолученияДанныхТаблоСчетов", 
							бит_ОбщегоНазначения.КэшироватьЗначенияПеречисления(Перечисления.бит_РежимПолученияДанныхТаблоСчетов));
	
    фКэшЗначений.Вставить("Перечисления", КэшПеречисления);
	
КонецПроцедуры // ЗаполнитьКэшЗначений()

// Процедура осуществляет управление видимостью/доступностью элементов управления формы.
// 
// Параметры:
//  Нет.
// 
&НаСервере
Процедура УправлениеФормой()
	
	Если ПроводитьДокументыОплаты Тогда
		СозданиеДокументовОплаты = 2;
	ИначеЕсли НеФормироватьДокументыОплаты = Ложь Тогда
		СозданиеДокументовОплаты = 1;
	КонецЕсли; 
	
	Если ПроводитьПлатежныеПоручения Тогда
		СозданиеПлатежныхПоручений = 2;
	ИначеЕсли НеФормироватьПлатежныеПоручения = Ложь Тогда
		СозданиеПлатежныхПоручений = 1;
	КонецЕсли; 
	
	Элементы.ПоказыватьСуммуПланируемыхПоступлений.Видимость = ИсточникДанныхТабло = Перечисления.бит_РежимПолученияДанныхТаблоСчетов.ДанныеБухгалтерскогоУчета 
								ИЛИ ИсточникДанныхТабло = Перечисления.бит_РежимПолученияДанныхТаблоСчетов.УппКа_ДанныеПоДенежнымСредствам;
	
КонецПроцедуры // УстановитьВидимость()

&НаСервере
Функция СохранитьНастройки() 
	
	Настройки = Документы.бит_РеестрПлатежей.НовыеНастройкиФормыДокумента();
	ЗаполнитьЗначенияСвойств(Настройки, ЭтотОбъект);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("Документ.бит_РеестрПлатежей", "Настройки", Настройки);
	Возврат Настройки;
	
КонецФункции

#КонецОбласти   