
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
 	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
    
	бит_РаботаСДиалогамиСервер.СписокПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма);
	
	Если ПравоДоступа("Администрирование", Метаданные) Тогда
		ЗаполнитьАвтоматическиПроводитьДокументы();
	Иначе
		Элементы.ГруппаПодвал.Видимость = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АвтоматическиПроводитьДокументыПриИзменении(Элемент)
	
	АвтоматическиПроводитьДокументыНаСервере(АвтоматическиПроводитьДокументы);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемыОбработчикиКоманд

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	
	Оповещение = Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", ЭтотОбъект); 
	Открытьформу("Документ.бит_УстановкаКонтрольныхЗначений.Форма.НастройкаПроведенияПоРасписанию",,
		ЭтотОбъект, ЭтотОбъект,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеЗавершение(Результат, Дополнительно) Экспорт

	Если ТипЗнч(Результат) = Тип("Булево") Тогда
		АвтоматическиПроводитьДокументы = Результат;
	КонецЕсли; 

КонецПроцедуры
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьАвтоматическиПроводитьДокументы()
	
	Задания = ТекущиеЗадания();				
	Для каждого Элемент Из Задания Цикл
		АвтоматическиПроводитьДокументы = Макс(АвтоматическиПроводитьДокументы, Элемент.Использование);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура АвтоматическиПроводитьДокументыНаСервере(Использовать)
	
	Задания = ТекущиеЗадания();
	Для каждого Элемент Из Задания Цикл
		Элемент.Использование = Использовать;
		Элемент.Записать();
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Функция ТекущиеЗадания()
	
	Задания = РегламентныеЗадания.ПолучитьРегламентныеЗадания(
				Новый Структура("Метаданные", Метаданные.РегламентныеЗадания.бит_УстановкаКонтрольныхЗначений));
	Возврат Задания; 

КонецФункции
 	
#КонецОбласти 