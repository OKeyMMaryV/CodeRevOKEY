#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление, некомментированный исправленный код (
	Если ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.ИнвентаризацияОС") И Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ИнвентаризацияОС = Параметры.Основание;
 	КонецЕсли;	
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление, некомментированный исправленный код )
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборОсновныхСредств.Форма.Форма" Тогда
		ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "ПроведениеПеремещениеОС";
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление, некомментированный исправленный код (
	Если ЗначениеЗаполнено(ИнвентаризацияОС) Тогда
		КолвоФорм = ПолучитьКоличествоОткрываемыхФорм();
		Если КолвоФорм = 0 Тогда Возврат КонецЕсли;
		Отказ = Истина;
		
		МассивДанныхФорм = Новый Массив;
		Для ъ = 1 По КолвоФорм Цикл
			ФормаПеремещенияОС = ПолучитьФорму("Документ.ПеремещениеОС.ФормаОбъекта",,, ъ);
			ДанныеФормы = ФормаПеремещенияОС.Объект;
			МассивДанныхФорм.Добавить(ДанныеФормы);
		КонецЦикла;
		
		ЗаполнитьДанныеИзИнвентаризации(МассивДанныхФорм);
		Для Каждого текЭлемент Из МассивДанныхФорм Цикл
			ФормаПеремещенияОС = ПолучитьФорму("Документ.ПеремещениеОС.ФормаОбъекта",,, Истина);
			КопироватьДанныеФормы(текЭлемент, ФормаПеремещенияОС.Объект);
			ФормаПеремещенияОС.Открыть();
		КонецЦикла;
	КонецЕсли;	
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление, некомментированный исправленный код )
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ИзмененаИнформацияОС", Объект.Ссылка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)

	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;

	ТребуетсяВызовСервера = Ложь;

	// Проверим наличие строк в табличной части.
	Если Объект.ОС.Количество() > 0 Тогда
		ТребуетсяВызовСервера = НЕ ЗначениеЗаполнено(МаксПериодПервоначальныхСведенийОС) 
			ИЛИ (МаксПериодПервоначальныхСведенийОС >= Объект.Дата);
	КонецЕсли;
		
	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		ДатаПриИзмененииНаСервере();
	КонецЕсли;
	
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Организация) И Объект.ОС.Количество() > 0 Тогда
		ЗаполнитьИнвентарныеНомераОС();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОС

//1С-ИжТиСи, Кондратьев, 03.2020, обновление, некомментированный исправленный код (
&НаСервере
Функция ОбъектОсновногоСредства(ОсновноеСредство);
	Возврат ОсновноеСредство.Объект
КонецФункции
//1С-ИжТиСи, Кондратьев, 03.2020, обновление, некомментированный исправленный код )

&НаКлиенте
Процедура ОСОсновноеСредствоПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.ОС.ТекущиеДанные;
	ОсновноеСредство = СтрокаТЧ.ОсновноеСредство;
	Если НЕ ЗначениеЗаполнено(ОсновноеСредство) Тогда
		СтрокаТЧ.ИнвентарныйНомер = "";
	Иначе
		СтруктураСведений 					= СведенияОбИнвентарномНомереОС(ОсновноеСредство, Объект.Организация, Объект.Дата);
		СтрокаТЧ.ИнвентарныйНомер 			= СтруктураСведений.ИнвентарныйНомер;
		МаксПериодПервоначальныхСведенийОС 	= Макс(МаксПериодПервоначальныхСведенийОС, СтруктураСведений.Период);
		// ОКЕЙ Чернов И.Е.(СофтЛаб) Начало 2018-03-02 (#2994)
		СтрокаТЧ.ОК_Объект = ОбъектОсновногоСредства(ОсновноеСредство);
		// ОКЕЙ Чернов И.Е.(СофтЛаб) Конец 2018-03-02 (#2994)		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоНаименованию(Команда)
	
	ОсновноеСредство = УправлениеВнеоборотнымиАктивамиКлиент.ПолучитьОСДляЗаполнениеПоНаименованию(
		ПараметрыЗаполненияПоНаименованию(ЭтаФорма));
	
	Если ЗначениеЗаполнено(ОсновноеСредство) Тогда
		
		ЗаполнитьПоНаименованиюСервер(ОсновноеСредство);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыФормы = Новый Структура;
	Если Объект.ОС.Количество() > 0 Тогда
		ПараметрыФормы.Вставить("АдресОСВХранилище", ПоместитьОСВХранилище());
	КонецЕсли;
	//ОКЕЙ Иванов А.Е.(СофтЛаб) Начало 2018-04-25 (#3010)
	Если ЗначениеЗаполнено(Объект.ПодразделениеОрганизации) Тогда
		ПараметрыФормы.Вставить("МестонахождениеОС", Объект.ПодразделениеОрганизации);
	КонецЕсли;
	//ОКЕЙ Иванов А.Е.(СофтЛаб) Конец 2018-04-25 (#3010)
	
	ОткрытьФорму("Обработка.ПодборОсновныхСредств.Форма.Форма", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	УстановитьСостояниеДокумента();
	
	ТекущаяДатаДокумента = Объект.Дата;
	
	Если ЗначениеЗаполнено(Объект.Организация) И Объект.ОС.Количество() > 0 Тогда
		ЗаполнитьИнвентарныеНомераОС();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнвентарныеНомераОС()
	
	// ОКЕЙ Чернов И.Е.(СофтЛаб) Начало 2018-03-02 (#2994)
	//ТаблицаОС = Объект.ОС.Выгрузить(, "НомерСтроки, ОсновноеСредство");
	ТаблицаОС = Объект.ОС.Выгрузить(, "НомерСтроки, ОсновноеСредство, ОК_Объект");
	// ОКЕЙ Чернов И.Е.(СофтЛаб) Конец 2018-03-02 (#2994)
	
	ТаблицаНомеров = УчетОС.ПолучитьТаблицуИнвентарныхНомеровОС(ТаблицаОС,
		Объект.Организация, Объект.Дата);
	
	Объект.ОС.Загрузить(ТаблицаНомеров);
	
	// Запомним максимальную дату первоначальных сведений ОС
	ТаблицаНомеров.Сортировать("Период");
	Если ТаблицаНомеров.Количество() > 0 Тогда
		МаксПериодПервоначальныхСведенийОС = ТаблицаНомеров[ТаблицаНомеров.Количество() - 1].Период;
	Иначе
		МаксПериодПервоначальныхСведенийОС = '0001-01-01';
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СведенияОбИнвентарномНомереОС(ОсновноеСредство, Организация, Дата)

	Возврат УчетОС.СведенияОбИнвентарномНомереОС(ОсновноеСредство, Организация, Дата);

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыЗаполненияПоНаименованию(Форма)
	
	Результат = Новый Структура;
	Результат.Вставить("Форма", Форма);
	Результат.Вставить("Объект", Форма.Объект);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПоНаименованиюСервер(Знач ОсновноеСредство)
	
	УчетОС.ДозаполнитьТабличнуюЧастьОсновнымиСредствамиПоНаименованию(
		ПараметрыЗаполненияПоНаименованию(ЭтаФорма), ОсновноеСредство);
	
КонецПроцедуры

&НаСервере
Функция ПоместитьОСВХранилище()
	
	ТаблицаОС = Объект.ОС.Выгрузить(, "НомерСтроки, ОсновноеСредство");
	Возврат ПоместитьВоВременноеХранилище(ТаблицаОС);
	
КонецФункции

&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(Знач ВыбранноеЗначение)
	
	ДобавленныеСтроки = УчетОС.ОбработатьПодборОсновныхСредств(Объект.ОС, ВыбранноеЗначение);
	
	ЗаполнитьИнвентарныеНомераОС();
	// ОКЕЙ Чернов И.Е.(СофтЛаб) Начало 2018-03-02 (#2994)
	Для Каждого Строка ИЗ Объект.ОС Цикл
		Строка.ОК_Объект = Строка.ОсновноеСредство.Объект;
	КонецЦикла;
	// ОКЕЙ Чернов И.Е.(СофтЛаб) Конец 2018-03-02 (#2994)
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()

	ЗаполнитьИнвентарныеНомераОС();
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

//ОК Калинин М. 130313
// Процедура - обработчик события "НачалоВыбора" поля ввода СпособыОтраженияРасходовПоАмортизации
//
&НаКлиенте
Процедура СпособОтраженияРасходовПоАмортизацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// ОКЕЙ Наумов А.(СофтЛаб) Начало 2018-06-06 (#3014)
	////ОК Калинин М. 130313
	//Если ЗначениеЗаполнено(Объект.ПодразделениеПолучатель) И ИнтеграцияЕГАИСВызовСервера.ЗначениеРеквизитаОбъекта(Объект.ПодразделениеПолучатель, "ОК_КонтрольОбъекта") тогда
	//	//фильтр в отборе открываемой формы (по первому объекту)
	//	_объект=ИнтеграцияЕГАИСВызовСервера.ЗначениеРеквизитаОбъекта(Объект.ПодразделениеПолучатель, "ОК_ОбъектСтроительства");
	//	//Если ЗначениеЗаполнено(объект) тогда
	//		бит_БК_ОбщийКлиент.НачалоВыбораЗначенияСпособовОтраженияРасходовПоАмортизации(Элемент, неопределено, СтандартнаяОбработка, _объект, Объект.СпособОтраженияРасходовПоАмортизации);
	//	//конецесли;	
	//
	//конецесли;
	////ОК Калинин М.
	
	РеквизитыПодразделения = РеквизитыПодразделения(Объект.ПодразделениеПолучатель, "ОК_КонтрольОбъекта, ОК_ОбъектСтроительства"); 
	Если РеквизитыПодразделения.ОК_КонтрольОбъекта = Истина И ЗначениеЗаполнено(РеквизитыПодразделения.ОК_ОбъектСтроительства) Тогда
		бит_БК_ОбщийКлиент.НачалоВыбораЗначенияСпособовОтраженияРасходовПоАмортизации(Элемент, Объект.Организация, СтандартнаяОбработка, РеквизитыПодразделения.ОК_ОбъектСтроительства, Объект.СпособОтраженияРасходовПоАмортизации);	
	КонецЕсли;	
	// ОКЕЙ Наумов А.(СофтЛаб) Конец 2018-06-06 (#3014) 		
КонецПроцедуры

// ОКЕЙ Наумов А.(СофтЛаб) Начало 2018-06-06 (#3014)
&НаСервереБезКонтекста
Функция РеквизитыПодразделения(ПодразделениеОрганизации, Реквизиты)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПодразделениеОрганизации, Реквизиты);
	
КонецФункции
// ОКЕЙ Наумов А.(СофтЛаб) Конец 2018-06-06 (#3014)

&НаСервере
Функция ДобавитьДанныеФормыПеремещения(МассивДанныхФорм, Знач ДанныеФормы, перемещениеОС)
	ЗначениеВДанныеФормы(перемещениеОС, ДанныеФормы);
	МассивДанныхФорм.Добавить(ДанныеФормы);
КонецФункции
	
&НаСервере
Функция ЗаполнитьДанныеИзИнвентаризации(МассивДанныхФорм)
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ОсновноеСредство", ИнвентаризацияОС.ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.УстановитьПараметр("Организация",      ИнвентаризацияОС.Организация);
	Запрос.УстановитьПараметр("Дата",             ИнвентаризацияОС.Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ КАК МОЛ
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&ОсновноеСредство)) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|ИТОГИ ПО
	|	МОЛ";
	
	Результат = Запрос.Выполнить();
	Если  не Результат.Пустой() тогда
		деревоМолОс=результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
		СчетчикФорм = 0;
		для каждого стр из деревоМолОс.строки
		Цикл
			перемещениеОС=Документы.ПеремещениеОС.СоздатьДокумент();				
			перемещениеОС.Дата = ИнвентаризацияОС.Дата;
			перемещениеОС.ДокументОснование = ИнвентаризацияОС.Ссылка;
			перемещениеОС.Организация=ИнвентаризацияОС.Организация;
			перемещениеОС.МОЛОрганизации=стр.мол;
			перемещениеОС.ПодразделениеОрганизации=ИнвентаризацияОС.ПодразделениеОрганизации;												
			Для Каждого стр_ Из стр.Строки Цикл
				ЗаполнитьЗначенияСвойств(перемещениеОС.Ос.Добавить(), стр_);					
			КонецЦикла;
			
		    // Окей Видяйкин 20190306 (реквизит "Объект" необходимо обязательно заполнить) +
			Для Каждого стр_ Из перемещениеОС.Ос Цикл
				стр_.ОК_Объект = стр_.ОсновноеСредство.Объект;					
			КонецЦикла;
			// Окей Видяйкин 20190306 -
			
			ЗначениеВДанныеФормы(перемещениеОС, МассивДанныхФорм[СчетчикФорм]);
			СчетчикФорм = СчетчикФорм + 1;
		КонецЦикла;
	КонецЕсли;
	Возврат МассивДанныхФорм;
КонецФункции

&НаСервере
Функция ПолучитьКоличествоОткрываемыхФорм()
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ОсновноеСредство", ИнвентаризацияОС.ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.УстановитьПараметр("Организация",      ИнвентаризацияОС.Организация);
	Запрос.УстановитьПараметр("Дата",             ИнвентаризацияОС.Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ Различные
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ КАК КолвоМОЛ
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&ОсновноеСредство)) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних";
	
	Возврат Запрос.Выполнить().Выгрузить().Количество();
КонецФункции

// ОКЕЙ Чернов И.Е.(СофтЛаб) Начало 2018-03-02 (#2994)
&НаСервере
Процедура ПодразделениеПолучательПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.ПодразделениеПолучатель) Тогда
		Объект.ОбъектПолучатель = Объект.ПодразделениеПолучатель.ОК_ОбъектСтроительства;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПолучательПриИзменении(Элемент)
	// ОКЕЙ Наумов А.(СофтЛаб) Начало 2018-06-06 (#3014)
	//ПодразделениеПолучательПриИзмененииНаСервере()
	РеквизитыПодразделения = РеквизитыПодразделения(Объект.ПодразделениеПолучатель, "ОК_ОбъектСтроительства");
	Объект.ОбъектПолучатель = РеквизитыПодразделения.ОК_ОбъектСтроительства;
	// ОКЕЙ Наумов А.(СофтЛаб) Конец 2018-06-06 (#3014)
КонецПроцедуры
// ОКЕЙ Чернов И.Е.(СофтЛаб) Конец 2018-03-02 (#2994)
