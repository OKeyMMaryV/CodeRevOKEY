
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтотОбъект, Объект);
    Если Отказ Тогда
		Возврат;
    КонецЕсли;
    
	ЗаполнитьКэшЗначений(фКэшЗначений);
	
	// Зададим имена реквизитов, подлежащих кешированию.
	фКэшРеквизитов = Новый Структура;
	фКэшРеквизитов.Вставить("Дата");
	фКэшРеквизитов.Вставить("Организация");
	
	// Запомним текущие значения реквизитов формы.
	ЗаполнитьКэшРеквизитовФормы();
	
	ЗаполнитьИнвентарныеНомера();
	
	Если Параметры.Ключ.Пустая() Тогда
		УстановитьСостояниеДокумента();
	КонецЕсли;
	
	// Установить видимость реквизитов и заголовков колонок.	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьЗаголовокФормыДокумента();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		Если ВыбранноеЗначение.Свойство("Действие") Тогда
			
			Если ВРег(ВыбранноеЗначение.Действие) = ВРег("Загрузить") Тогда
				
				Если Объект.ОсновныеСредства.Количество()>0 Тогда
					
					Оповещение = Новый ОписаниеОповещения("ОбработкаВыбораЗавершение", ЭтотОбъект, ВыбранноеЗначение);
					ТекстВопроса = НСтр("ru='Табличная часть будет очищена. Продолжить?'");
					ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 5, КодВозвратаДиалога.Нет);
					
				Иначе
					
					ОбработатьПодборОС(ВыбранноеЗначение);
					
				КонецЕсли; 
				
			Иначе
				
				ОбработатьПодборОС(ВыбранноеЗначение);
				
			КонецЕсли; 
			
		КонецЕсли; // В структуре есть поле действие 
		
	КонецЕсли; // Это структура
	
КонецПроцедуры

// Процедура - завершение выбора ОС 
// 
&НаКлиенте
Процедура ОбработкаВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ОсновныеСредства.Очистить();
	
	ОбработатьПодборОС(ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьИнвентарныеНомера();
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьЗаголовокФормыДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
		
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "Проведениебит_му_ПеремещениеОС";
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	фКэшРеквизитов.Дата = Объект.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Объект.Организация <> фКэшРеквизитов.Организация 
		И Объект.ОсновныеСредства.Количество() > 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("ОбработатьИзменениеОрганизации", ЭтотОбъект);
		ТекстВопроса = НСтр("ru='Табличная часть будет очищена. Продолжить?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 5, КодВозвратаДиалога.Нет);
		
	Иначе
		
		ПриИзмененииОрганизации();
	
		фКэшРеквизитов.Организация = Объект.Организация;
	
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - завершение изменения реквизита "Организация".
// 
&НаКлиенте
Процедура ОбработатьИзменениеОрганизации(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.Да Тогда
		Объект.Организация = фКэшРеквизитов.Организация;
		Возврат;
	КонецЕсли;
	
	Объект.ОсновныеСредства.Очистить();
	
	ПриИзмененииОрганизации();
	
	фКэшРеквизитов.Организация = Объект.Организация;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОсновныеСредства

&НаКлиенте
Процедура ОсновныеСредстваПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ТекстСообщения = НСтр("ru='Не заполнена Организация. Добавление новых строк невозможно!'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,,Отказ);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеСредстваОсновноеСредствоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ОсновныеСредства.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПриИзмененииОС(ТекущаяСтрока.ПолучитьИдентификатор());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемыОбработчикиКоманд

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
Процедура ПодборОС(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ТекстСообщения = НСтр("ru='Не заполнена Организация. Подбор невозможен!'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		
		Возврат;
	
	КонецЕсли; 
	
	ПараметрыФормы = ЗаполнитьПараметрыПодбора();
	
	ОткрытьФорму("Обработка.бит_му_ПодборВНА.Форма",ПараметрыФормы,ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВсе(Команда)
	
	Если Объект.ОсновныеСредства.Количество() > 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("КомандаЗаполнитьВсеЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru='Параметры в табличной части будут перезаполнены. Продолжить?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 5, КодВозвратаДиалога.Нет);
		
	Иначе
		
		ЗаполнитьПараметрыОССервер();
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - завершение обработки команды "ЗаполнитьВсе".
// 
&НаКлиенте
Процедура КомандаЗаполнитьВсеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПараметрыОССервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоТекущейСтроке(Команда)
	
	ТекущаяСтрока = Элементы.ОсновныеСредства.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПараметрыВСтроке(ТекущаяСтрока.ПолучитьИдентификатор());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = бит_ОбщегоНазначения.СостояниеДокумента(Объект);
	
КонецПроцедуры

// Процедура осуществляет управление доступностью/видимостью элементов формы.
// 
// Параметры:
//  Нет.
// 
&НаСервере 
Процедура УправлениеЭлементамиФормы()
	
	Элементы.ОтразитьВЗакрытомПериоде.Видимость = бит_ПраваДоступа.ПолучитьЗначениеДопПраваПользователя(
	 					                           бит_ОбщиеПеременныеСервер.ЗначениеПеременной("ТекущийПользователь"),
	 					                           ПланыВидовХарактеристик.бит_ДополнительныеПраваПользователей.РазрешеноОтражениеДокументовВЗакрытомПериоде);
	
КонецПроцедуры // УправлениеЭлементамиФормы()
											   
&НаСервере
Процедура ЗаполнитьКэшЗначений(КэшированныеЗначения)
	
	КэшированныеЗначения = Новый Структура;
	
	// Запишем параметр для формирования заголовка.
	КэшированныеЗначения.Вставить("ПредставлениеОбъекта", Объект.Ссылка.Метаданные().ПредставлениеОбъекта);
									
	КэшПеречисления = Новый Структура;
	
	КэшПеречисления.Вставить("бит_му_РежимыПодбораВНА", бит_ОбщегоНазначения.КэшироватьЗначенияПеречисления(Перечисления.бит_му_РежимыПодбораВНА));
	
	КэшированныеЗначения.Вставить("Перечисления", КэшПеречисления);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКэшРеквизитовФормы()
	
	Для Каждого КэшРеквизита Из фКэшРеквизитов Цикл
		
		фКэшРеквизитов[КэшРеквизита.Ключ] = Объект[КэшРеквизита.Ключ];
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнвентарныеНомера(ИДСтроки=Неопределено)
	
	СоответствиеОС_ИнвентарныйНомер = Новый Соответствие;
	
	Если ИДСтроки = Неопределено Тогда
		
		бит_му_ВНА.ЗаполнитьСоответствиеОС_ИнвентарныйНомер(СоответствиеОС_ИнвентарныйНомер
															,Объект.ОсновныеСредства.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство")
															,Объект.Организация);
													   
		Для Каждого ТекСтрока Из Объект.ОсновныеСредства Цикл
			ТекСтрока.ИнвентарныйНомер = СоответствиеОС_ИнвентарныйНомер[ТекСтрока.ОсновноеСредство];
		КонецЦикла;
		
	Иначе
		ДанныеСтроки = Объект.ОсновныеСредства.НайтиПоИдентификатору(ИДСтроки);
		
		Если НЕ ДанныеСтроки = Неопределено Тогда
			ДанныеСтроки.ИнвентарныйНомер = бит_му_ВНА.ПолучитьСоответствиеОС_ИнвентарныйНомер(СоответствиеОС_ИнвентарныйНомер
																					,ДанныеСтроки.ОсновноеСредство
																					,Объект.Организация);
		КонецЕсли;
																				
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПодборОС(ВыбранноеЗначение)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.ЗаполнитьОсновныеСредства(ВыбранноеЗначение);
	ЗначениеВРеквизитФормы(Документ, "Объект");
	
	ЗаполнитьИнвентарныеНомера();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОрганизации()
	
	бит_ОбщегоНазначения.ПроверитьПринадлежностьАналитики(Объект
	                                                      ,
														  ,"Подразделение"
														  ,"Владелец"
														  ,"Организация"
														  ,"СправочникСсылка.ПодразделенияОрганизаций"
														  ,"В документе"
														  ,"Изменение значения реквизита Организация");
														  
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОС(ИДСтроки)
	
	ЗаполнитьПараметрыВСтроке(ИДСтроки);
	
	ЗаполнитьИнвентарныеНомера(ИДСтроки);
	
	//Начало_бит_Магомедов_20.07.2012
	ТекущаяСтрока = Объект.ОсновныеСредства.НайтиПоИдентификатору(ИДСтроки);
	
	_объект = РеквизитФормыВЗначение("Объект");
	ПараметрыОбъектов = _объект.ПолучитьПараметры(ТекущаяСтрока.ОсновноеСредство);
	ЗначениеВРеквизитФормы(_объект, "Объект");
	
	СтрокаДанных = ПараметрыОбъектов[ТекущаяСтрока.ОсновноеСредство];
	
	//ЗаполнитьСтрокуТЧПоСтрокеДанных(ТекущаяСтрока,СтрокаДанных);
	//БИТ Тртилек К.И. 19.11.2012 добавим проверку на неопределенность
	Если СтрокаДанных <> Неопределено Тогда
		///БИТ Тртилек
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока,СтрокаДанных);
		//БИТ Тртилек К.И. 19.11.2012
		
		//обходим 4 субконто, ищем Объект
		Для сч = 1 по мКоличествоСубконтоМУ Цикл 
			Если ТипЗнч(СтрокаДанных["СубконтоУчета"+сч]) = Тип("СправочникСсылка.ОбъектыСтроительства") Тогда 
				ТекущаяСтрока.бит_му_Объект_старый = СтрокаДанных["СубконтоУчета"+сч];
				ТекущаяСтрока.бит_му_Объект		   = СтрокаДанных["СубконтоУчета"+сч];
				Прервать;
			КонецЕсли;
		КонецЦикла;
		//Объект новый берем из элемента ОС
		ТекущаяСтрока.бит_му_Объект = ТекущаяСтрока.ОсновноеСредство.Объект;
		//Конец_бит_Магомедов_20.07.2012 
	Иначе
		Сообщить("Данное основное средство не было принято к учету документом ""Принятие к учету ОС МСФО"" для организации: " + Объект.Организация.Наименование, СтатусСообщения.Важное);
		ТекущаяСтрока.ОсновноеСредство = Справочники.ОсновныеСредства.ПустаяСсылка();
	КонецЕсли;
	///БИТ Тртилек 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыВСтроке(ИДСтроки)
	
	ТекущаяСтрока = Объект.ОсновныеСредства.НайтиПоИдентификатору(ИДСтроки);
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОС = ПолучитьПараметрыОС(ТекущаяСтрока.ОсновноеСредство);
    ЗаполнитьСтрокуТЧПоДанным(ТекущаяСтрока,ПараметрыОС);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыОССервер()
	
	МассивОС = Объект.ОсновныеСредства.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство");
	ПараметрыОС = ПолучитьПараметрыОС(МассивОС);	
	
	Для Каждого ТекущаяСтрока Из Объект.ОсновныеСредства Цикл
		
		ЗаполнитьСтрокуТЧПоДанным(ТекущаяСтрока,ПараметрыОС);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыОС(ОсновноеСредство)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация"     ,Объект.Организация);
	СтруктураПараметров.Вставить("ОсновноеСредство",ОсновноеСредство);
	СтруктураПараметров.Вставить("МоментВремени"   ,?(Параметры.Ключ.Пустая(),КонецДня(Объект.Дата),Объект.Ссылка.МоментВремени()));
	
	ПараметрыВНА = Новый Массив;
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.Местонахождение_ОС);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.МОЛ_ОС);
	//Начало_бит_Магомедов_20.07.2012
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СчетСниженияСтоимости_ОС);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СчетНачисленияАмортизации_ОС);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СчетУчета_ОС);
	//Конец_бит_Магомедов_20.07.2012
	
	СтруктураПараметров.Вставить("ПараметрыВНА",ПараметрыВНА);
	
	РезЗначения = бит_му_ВНА.ПолучитьТаблицуПараметровВНА(СтруктураПараметров,"Соответствие");
	
	Возврат РезЗначения;

КонецФункции // ПолучитьПараметрыОС()

&НаСервере
Процедура ЗаполнитьСтрокуТЧПоДанным(ТекущаяСтрока,РезЗначения)
	
	Если РезЗначения <> Неопределено 
		И ТекущаяСтрока <> Неопределено Тогда
		
		ПараметрыОС = РезЗначения[ТекущаяСтрока.ОсновноеСредство];
		
		Если ПараметрыОС <> Неопределено Тогда
			
			Для каждого КиЗ Из ПараметрыОС Цикл
				
				ТекущееЗначение    = КиЗ.Значение;
				Параметр           = КиЗ.Ключ;
				ИмяПараметра       = ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.ПолучитьИмяПредопределенного(Параметр); 
				ИмяРеквизита       = СтрЗаменить(ИмяПараметра,"_ОС","");
				ИмяРеквизитаСтарый = ИмяРеквизита+"_Старый";
				
				ТекущаяСтрока[ИмяРеквизита]        = ТекущееЗначение;
				ТекущаяСтрока[ИмяРеквизитаСтарый]  = ТекущееЗначение;
				
			КонецЦикла; // По параметрам 	
			
		КонецЕсли; // Есть параметры
		
	КонецЕсли; 

КонецПроцедуры // ЗаполнитьСтрокуТЧПоСтрокеДанных()

// Процедура устнавливает заголовок формы документа.
// 
// Параметры:
//  Нет.
// 
&НаКлиенте 
Процедура УстановитьЗаголовокФормыДокумента()
	
	СтруктураЗаголовка = Новый Структура;
	СтруктураЗаголовка.Вставить("ПредставлениеОбъекта", фКэшЗначений.ПредставлениеОбъекта);
	СтруктураЗаголовка.Вставить("СтрокаВидаОперации"  , "");
	СтруктураЗаголовка.Вставить("ЭтоНовый"			  , Параметры.Ключ.Пустая());
	СтруктураЗаголовка.Вставить("ДокументПроведен"	  , Объект.Проведен);
	
	бит_РаботаСДиалогамиКлиент.УстановитьЗаголовокФормыДокумента(ЭтотОбъект,СтруктураЗаголовка);
	
КонецПроцедуры // УстановитьЗаголовокФормыДокумента()

&НаСервере
Функция ЗаполнитьПараметрыПодбора()

	Документ = РеквизитФормыВЗначение("Объект");
	ПараметрыПодбора = Документ.ЗаполнитьПараметрыПодбора();
	
	Возврат ПараметрыПодбора;
	
КонецФункции // ЗаполнитьПараметрыПодбора()

#КонецОбласти

//1С-ИжТиСи, Кондратьев, 03.2020, обновление, некомментированный исправленный код (
мКоличествоСубконтоМУ = 4;
//1С-ИжТиСи, Кондратьев, 03.2020, обновление, некомментированный исправленный код )