
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
 	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
    
	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.СписокПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма);	
	
	ЗаполнитьКэшЗначений();
	
	ПустойСценарий = Справочники[бит_ОбщегоНазначения.ПолучитьИмяСправочникаСценарииБюджетирования()].ПустаяСсылка();

	// Параметры списка
	Список.Параметры.УстановитьЗначениеПараметра("Сценарий"		 , СценарийОтбор);
	Список.Параметры.УстановитьЗначениеПараметра("ПустойСценарий", ПустойСценарий);  	
	
	// Параметры таблицы движений
	УстановитьПараметрыТаблицыДвижений(фКэшЗначений.ПустаяСсылка);
	
	ЕстьИзмерениеОрг = бит_МеханизмДопИзмерений.ЕстьДопИзмерениеОрганизация();
	Элементы.Организация.Видимость = ЕстьИзмерениеОрг;
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СценарийОтборПриИзменении(Элемент)
	
	УстановитьПараметрыОсновногоСписка();
		
КонецПроцедуры // СценарийОтборПриИзменении()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОжиданиеАктивизацииСтрокиСписка", 0.1, Истина);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры // СписокПриАктивизацииСтроки()

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемыОбработчикиКоманд

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
Процедура СписокПереключитьАктивность(Команда)
	
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	бит_ОбщегоНазначения.ПереключитьАктивностьПроводокДокументаДляРегистраБухгалтерии(ТекущаяСтрока, "бит_Бюджетирование");
	Элементы.ДвиженияБюджетирование.Обновить();
	
КонецПроцедуры // СписокПереключитьАктивность()

&НаКлиенте
Процедура ПолучитьДанные(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЭтоЗаполнениеИзДокументаОперации", Истина);
	ПараметрыФормы.Вставить("ОбъектСистемы"			     	  , фКэшЗначений.ОбъектСистемы);
	ПараметрыФормы.Вставить("Режим"        				 	  , "Множественный");
	
	ОткрытьФорму("Обработка.бит_ПолучениеДанныхРегистровБухгалтерии.Форма.ФормаУправляемая", ПараметрыФормы, ЭтаФорма);
		
КонецПроцедуры // ПолучитьДанные()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура заполняет кэш значений, необходимый при работе на клиенте.
// 
&НаСервере
Процедура ЗаполнитьКэшЗначений()

	фКэшЗначений = Новый Структура;
	фКэшЗначений.Вставить("ПустаяСсылка" , Документы.бит_ОперацияБюджетирование.ПустаяСсылка());
	фКэшЗначений.Вставить("ОбъектСистемы", бит_ПраваДоступа.ПолучитьОбъектДоступаПоМетаданным(Метаданные.РегистрыБухгалтерии.бит_Бюджетирование));
	
КонецПроцедуры // ЗаполнитьКэшЗначений()

// Процедура устанавливает параметры для таблицы движений.
// 
&НаСервере
Процедура УстановитьПараметрыОсновногоСписка()

	Список.Параметры.УстановитьЗначениеПараметра("Сценарий", СценарийОтбор);	

КонецПроцедуры // УстановитьПараметрыОсновногоСписка()

// Процедура устанавливает параметры для таблицы движений.
// 
// Параметры:
//  СсылкаНаДокумент  - ДокументСсылка.бит_ОперацияБюджетирование.
// 
&НаСервере
Процедура УстановитьПараметрыТаблицыДвижений(СсылкаНаДокумент)

	ДвиженияБюджетирование.Параметры.УстановитьЗначениеПараметра("Регистратор", СсылкаНаДокумент);	

КонецПроцедуры // УстановитьПараметрыТаблицыДвижений()

// Процедура - обработчик ожидания активизации строки списка.
// 
&НаКлиенте
Процедура ОжиданиеАктивизацииСтрокиСписка()

	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	СсылкаОтбор = ?(ТекущаяСтрока = Неопределено, фКэшЗначений.ПустаяСсылка, ТекущаяСтрока);
	
	УстановитьПараметрыТаблицыДвижений(СсылкаОтбор);
	
КонецПроцедуры // ОжиданиеАктивизацииСтрокиСписка()

#КонецОбласти
