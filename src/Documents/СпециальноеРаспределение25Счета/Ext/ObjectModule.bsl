#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем ТЗЭксплАренды, ТЗСтроительства, ТЗПрРешений, ТЗБаза, ТЗБазаСтроит, ТЗБаза1, ТЗБазаРеш, СписокОтбораПодр;
Перем ТЗЭксплАрендыНУ, ТЗСтроительстваНУ, ТЗПрРешенийНУ, ТЗБазаНУ, ТЗБаза1НУ, ТЗБазаРешНУ, ТЗБазаСтроитНУ, ЗапросПрямыеРасходы;

Процедура ОписаниеТипов()
	
	// Департамент эксплуатации и департамент аренды
	ТЗЭксплАренды = Новый ТаблицаЗначений;                                      
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));    
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗЭксплАренды.Колонки.Добавить("Подразделения",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.СтатьиЗатрат"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗЭксплАренды.Колонки.Добавить("СтатьяЗатрат",ОписаниеТиповСтр);
	Массив.Очистить();
	КЧ = Новый КвалификаторыЧисла(15,2);
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ТЗЭксплАренды.Колонки.Добавить("Сумма", ОписаниеТиповЧ,,);
	
	// Департамент строительства
	ТЗСтроительства = Новый ТаблицаЗначений;                                      
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));    
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗСтроительства.Колонки.Добавить("Подразделения",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.СтатьиЗатрат"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗСтроительства.Колонки.Добавить("СтатьяЗатрат",ОписаниеТиповСтр);
	Массив.Очистить();
	КЧ = Новый КвалификаторыЧисла(15,2);
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ТЗСтроительства.Колонки.Добавить("Сумма", ОписаниеТиповЧ,,);
	
	// Отдел проектных решений
	ТЗПрРешений = Новый ТаблицаЗначений;                                      
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));    
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗПрРешений.Колонки.Добавить("Подразделения",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.СтатьиЗатрат"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗПрРешений.Колонки.Добавить("СтатьяЗатрат",ОписаниеТиповСтр);
	Массив.Очистить();
	КЧ = Новый КвалификаторыЧисла(15,2);
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ТЗПрРешений.Колонки.Добавить("Сумма", ОписаниеТиповЧ,,);
	
	// База распределения - КО счета 90.01.1
	ТЗБаза = Новый ТаблицаЗначений;
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.НоменклатурныеГруппы"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗБаза.Колонки.Добавить("НомГруппа",ОписаниеТиповСтр);
	Массив.Очистить();
	КЧ = Новый КвалификаторыЧисла(15,2);
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ТЗБаза.Колонки.Добавить("Сумма", ОписаниеТиповЧ,,);
	
	// База распределения счета 08.03
	ТЗБазаСтроит = Новый ТаблицаЗначений;
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.ОбъектыСтроительства"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗБазаСтроит.Колонки.Добавить("ОбъектСтроительства",ОписаниеТиповСтр);
	Массив.Очистить();
	//Массив.Добавить(Тип("СправочникСсылка.СтатьиЗатрат"));
	//ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	//ТЗБазаСтроит.Колонки.Добавить("СтатьяЗатрат",ОписаниеТиповСтр);
	//Массив.Очистить();
	Массив.Добавить(Тип("ПеречислениеСсылка.СпособыСтроительства"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);     
	ТЗБазаСтроит.Колонки.Добавить("СпособСтроительства",ОписаниеТиповСтр);
	Массив.Очистить();
	КЧ = Новый КвалификаторыЧисла(15,2);
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ТЗБазаСтроит.Колонки.Добавить("Сумма", ОписаниеТиповЧ,,);
	
	ТЗБаза1 = Новый ТаблицаЗначений;
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.ОбъектыСтроительства"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗБаза1.Колонки.Добавить("ОбъектСтроительства",ОписаниеТиповСтр);
	Массив.Очистить();
	КЧ = Новый КвалификаторыЧисла(15,2);
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ТЗБаза1.Колонки.Добавить("Сумма", ОписаниеТиповЧ,,);
	
	// База распределения отдела проектных решений
	ТЗБазаРеш = Новый ТаблицаЗначений;                                      
	Массив.Очистить();
	Массив.Добавить(Тип("ПланСчетовСсылка.Хозрасчетный"));    
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗБазаРеш.Колонки.Добавить("Счет",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.НоменклатурныеГруппы"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗБазаРеш.Колонки.Добавить("НомГруппа",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.ОбъектыСтроительства"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗБазаРеш.Колонки.Добавить("ОбъектСтроительства",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("ПеречислениеСсылка.СпособыСтроительства"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);     
	ТЗБазаРеш.Колонки.Добавить("СпособСтроительства",ОписаниеТиповСтр);
	Массив.Очистить();
	КЧ = Новый КвалификаторыЧисла(15,2);
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ТЗБазаРеш.Колонки.Добавить("Сумма", ОписаниеТиповЧ,,);
	
КонецПроцедуры

Процедура ОписаниеТиповНУ()
	
	// Департамент эксплуатации и департамент аренды
	ТЗЭксплАрендыНУ = Новый ТаблицаЗначений;                                      
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));    
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗЭксплАрендыНУ.Колонки.Добавить("Подразделения",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.СтатьиЗатрат"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗЭксплАрендыНУ.Колонки.Добавить("СтатьяЗатрат",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗЭксплАрендыНУ.Колонки.Добавить("ВидУчета",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("ПланСчетовСсылка.Хозрасчетный"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗЭксплАрендыНУ.Колонки.Добавить("СчетЗатрат",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("Булево"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗЭксплАрендыНУ.Колонки.Добавить("ПрямыеРасходы",ОписаниеТиповСтр);
	Массив.Очистить();
	КЧ = Новый КвалификаторыЧисла(15,2);
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ТЗЭксплАрендыНУ.Колонки.Добавить("Сумма", ОписаниеТиповЧ,,);
	
	// Департамент строительства
	ТЗСтроительстваНУ = Новый ТаблицаЗначений;                                      
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));    
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗСтроительстваНУ.Колонки.Добавить("Подразделения",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.СтатьиЗатрат"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗСтроительстваНУ.Колонки.Добавить("СтатьяЗатрат",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗСтроительстваНУ.Колонки.Добавить("ВидУчета",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("ПланСчетовСсылка.Хозрасчетный"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗСтроительстваНУ.Колонки.Добавить("СчетЗатрат",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("Булево"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗСтроительстваНУ.Колонки.Добавить("ПрямыеРасходы",ОписаниеТиповСтр);
	Массив.Очистить();
	КЧ = Новый КвалификаторыЧисла(15,2);
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ТЗСтроительстваНУ.Колонки.Добавить("Сумма", ОписаниеТиповЧ,,);
	
	// Отдел проектных решений
	ТЗПрРешенийНУ = Новый ТаблицаЗначений;                                      
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));    
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗПрРешенийНУ.Колонки.Добавить("Подразделения",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.СтатьиЗатрат"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗПрРешенийНУ.Колонки.Добавить("СтатьяЗатрат",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗПрРешенийНУ.Колонки.Добавить("ВидУчета",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("ПланСчетовСсылка.Хозрасчетный"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗПрРешенийНУ.Колонки.Добавить("СчетЗатрат",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("Булево"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗПрРешенийНУ.Колонки.Добавить("ПрямыеРасходы",ОписаниеТиповСтр);
	Массив.Очистить();
	КЧ = Новый КвалификаторыЧисла(15,2);
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ТЗПрРешенийНУ.Колонки.Добавить("Сумма", ОписаниеТиповЧ,,);
	
	// База распределения - КО счета 90.01.1
	ТЗБазаНУ = Новый ТаблицаЗначений;
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.НоменклатурныеГруппы"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗБазаНУ.Колонки.Добавить("НомГруппа",ОписаниеТиповСтр);
	Массив.Очистить();
	КЧ = Новый КвалификаторыЧисла(15,2);
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ТЗБазаНУ.Колонки.Добавить("Сумма", ОписаниеТиповЧ,,);
	
	// База распределения счета 08.03
	ТЗБазаСтроитНУ = Новый ТаблицаЗначений;
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.ОбъектыСтроительства"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗБазаСтроитНУ.Колонки.Добавить("ОбъектСтроительства",ОписаниеТиповСтр);
	Массив.Очистить();
	//Массив.Добавить(Тип("СправочникСсылка.СтатьиЗатрат"));
	//ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	//ТЗБазаСтроит.Колонки.Добавить("СтатьяЗатрат",ОписаниеТиповСтр);
	//Массив.Очистить();
	Массив.Добавить(Тип("ПеречислениеСсылка.СпособыСтроительства"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);     
	ТЗБазаСтроитНУ.Колонки.Добавить("СпособСтроительства",ОписаниеТиповСтр);
	Массив.Очистить();
	КЧ = Новый КвалификаторыЧисла(15,2);
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ТЗБазаСтроитНУ.Колонки.Добавить("Сумма", ОписаниеТиповЧ,,);
	
	ТЗБаза1НУ = Новый ТаблицаЗначений;
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.ОбъектыСтроительства"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗБаза1НУ.Колонки.Добавить("ОбъектСтроительства",ОписаниеТиповСтр);
	Массив.Очистить();
	КЧ = Новый КвалификаторыЧисла(15,2);
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ТЗБаза1НУ.Колонки.Добавить("Сумма", ОписаниеТиповЧ,,);
	
	// База распределения отдела проектных решений
	ТЗБазаРешНУ = Новый ТаблицаЗначений;                                      
	Массив.Очистить();
	Массив.Добавить(Тип("ПланСчетовСсылка.Хозрасчетный"));    
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗБазаРешНУ.Колонки.Добавить("Счет",ОписаниеТиповСтр);
	Массив.Очистить();
	//Массив.Добавить(Тип("ПеречислениеСсылка.ВидыУчетаПоПБУ18"));    
	//ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	//ТЗБазаРешНУ.Колонки.Добавить("ВидУчета",ОписаниеТиповСтр);
	//Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.НоменклатурныеГруппы"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗБазаРешНУ.Колонки.Добавить("НомГруппа",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.ОбъектыСтроительства"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);
	ТЗБазаРешНУ.Колонки.Добавить("ОбъектСтроительства",ОписаниеТиповСтр);
	Массив.Очистить();
	Массив.Добавить(Тип("ПеречислениеСсылка.СпособыСтроительства"));
	ОписаниеТиповСтр = Новый ОписаниеТипов(Массив, , ,);     
	ТЗБазаРешНУ.Колонки.Добавить("СпособСтроительства",ОписаниеТиповСтр);
	Массив.Очистить();
	КЧ = Новый КвалификаторыЧисла(15,2);
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ТЗБазаРешНУ.Колонки.Добавить("Сумма", ОписаниеТиповЧ,,);
	
	ЗапросПрямыеРасходы = Новый Запрос;
	ЗапросПрямыеРасходы.Текст = "ВЫБРАТЬ
	|	МАКСИМУМ(МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия) КАК ПериодДействия,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.КорСчет
	|ПОМЕСТИТЬ ВТ_Период
	|ИЗ
	|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК МетодыОпределенияПрямыхРасходовПроизводстваВНУ
	|ГДЕ
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Организация = &Организация
	|	И МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Счет = &Счет
	|	И МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение = &Подразделение
	|	И МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СтатьяЗатрат = &СтатьяЗатрат
	|	И МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия <= &ПериодДействия
	|	И МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ВидРасходовНУ = &ВидРасходовНУ
	|
	|СГРУППИРОВАТЬ ПО
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.КорСчет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Организация,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ВидРасходовНУ,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Счет,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.КорСчет,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СтатьяЗатрат
	|ИЗ
	|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК МетодыОпределенияПрямыхРасходовПроизводстваВНУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Период КАК ВТ_Период
	|		ПО МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия = ВТ_Период.ПериодДействия
	|			И МетодыОпределенияПрямыхРасходовПроизводстваВНУ.КорСчет = ВТ_Период.КорСчет
	|ГДЕ
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Организация = &Организация
	|	И МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение = &Подразделение
	|	И МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Счет = &Счет
	|	И МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СтатьяЗатрат = &СтатьяЗатрат";
	
КонецПроцедуры

Процедура ФормированиеБазыСтроитОбъектовОС()
	
	Запрос = Новый Запрос();
	Если ЗатратыФилиала тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Субконто1 КАК ОбъектСтр,
		|	ХозрасчетныйОбороты.Субконто3 КАК Способ,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК ДО,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт) КАК ОстДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			,
		|			Счет = &Счет08,
		|			,
		|			Организация = &Организация
		|				И Субконто2 <> &КредитОбеспечение
		|				И Субконто2 <> &ОбщепроизвРасход
		|				И Субконто1.Подразделение В (&СпПодр),
		|			,
		|			) КАК ХозрасчетныйОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата2, Счет = &Счет08, , Организация = &Организация) КАК ХозрасчетныйОстатки
		|		ПО ХозрасчетныйОбороты.Субконто1 = ХозрасчетныйОстатки.Субконто1
		|			И ХозрасчетныйОбороты.Субконто3 = ХозрасчетныйОстатки.Субконто3
		|			И ХозрасчетныйОбороты.Счет = ХозрасчетныйОстатки.Счет
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Субконто1,
		|	ХозрасчетныйОбороты.Субконто3";
		Запрос.УстановитьПараметр("Дата1", ДатаНачала);
		Запрос.УстановитьПараметр("Дата2", КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("КредитОбеспечение", Константы.СтатьяЗатратКредитноеОбеспечение.Получить());
		Запрос.УстановитьПараметр("ОбщепроизвРасход", Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить());
		Запрос.УстановитьПараметр("СпПодр", СписокОтбораПодр);
		Запрос.УстановитьПараметр("Счет08", ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств);	
	Иначе	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Субконто1 КАК ОбъектСтр,
		|	ХозрасчетныйОбороты.Субконто3 КАК Способ,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК ДО,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт) КАК ОстДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			,
		|			Счет = &Счет08,
		|			,
		|			Организация = &Организация
		|				И Субконто2 <> &КредитОбеспечение
		|				И Субконто2 <> &ОбщепроизвРасход
		//ОК Довбешка Т. 01.07.2013
		//|				И Субконто1.Подразделение <> &ПустоеПодразделение,       
		|				И Субконто1.Подразделение В (&СпПодр),
		//ОК Довбешка Т. 
		|			,
		|			) КАК ХозрасчетныйОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата2, Счет = &Счет08, , Организация = &Организация) КАК ХозрасчетныйОстатки
		|		ПО ХозрасчетныйОбороты.Субконто1 = ХозрасчетныйОстатки.Субконто1
		|			И ХозрасчетныйОбороты.Субконто3 = ХозрасчетныйОстатки.Субконто3
		|			И ХозрасчетныйОбороты.Счет = ХозрасчетныйОстатки.Счет
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Субконто1,
		|	ХозрасчетныйОбороты.Субконто3";
		Запрос.УстановитьПараметр("Дата1", ДатаНачала);
		Запрос.УстановитьПараметр("Дата2", КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("КредитОбеспечение", Константы.СтатьяЗатратКредитноеОбеспечение.Получить());
		Запрос.УстановитьПараметр("ОбщепроизвРасход", Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить());
		//ОК Довбешка Т. 01.07.2013
		//Запрос.УстановитьПараметр("ПустоеПодразделение",Справочники.ПодразделенияОрганизаций.ПустаяСсылка());   
		Запрос.УстановитьПараметр("СпПодр", СписокОтбораПодр);
		//ОК Довбешка Т.
		Запрос.УстановитьПараметр("Счет08", ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если (Не Выборка.ДО = 0) И (Не Выборка.ОстДт = 0) Тогда	
			НовСтр = ТЗБазаСтроит.Добавить();
			НовСтр.ОбъектСтроительства = Выборка.ОбъектСтр;
			НовСтр.СпособСтроительства = Выборка.Способ;
			НовСтр.Сумма = Выборка.ДО;	
			Нов = ТЗБаза1.Добавить();
			Нов.ОбъектСтроительства = Выборка.ОбъектСтр;
			Нов.Сумма = Выборка.ДО;	
		КонецЕсли;
	КонецЦикла;
	ТЗБаза1.Свернуть("ОбъектСтроительства","Сумма");
	
КонецПроцедуры

Процедура ФормированиеБазыСтроитОбъектовОСНУ()
	
	Запрос = Новый Запрос();
	Если ЗатратыФилиала Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Субконто1 КАК ОбъектСтр,
		|	ХозрасчетныйОбороты.Субконто3 КАК Способ,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК ДО,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт) КАК ОстДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			,
		|			Счет = &Счет08,
		|			,
		|			Организация = &Организация
		|				И Субконто2 <> &КредитОбеспечение
		|				И Субконто2 <> &ОбщепроизвРасход
		|				И Субконто1.Подразделение В (&СпПодр),
		|			,
		|			) КАК ХозрасчетныйОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата2, Счет = &Счет08, , Организация = &Организация) КАК ХозрасчетныйОстатки
		|		ПО ХозрасчетныйОбороты.Субконто1 = ХозрасчетныйОстатки.Субконто1
		|			И ХозрасчетныйОбороты.Субконто3 = ХозрасчетныйОстатки.Субконто3
		|			И ХозрасчетныйОбороты.Счет = ХозрасчетныйОстатки.Счет
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Субконто1,
		|	ХозрасчетныйОбороты.Субконто3";
		Запрос.УстановитьПараметр("Дата1", ДатаНачала);
		Запрос.УстановитьПараметр("Дата2", КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("КредитОбеспечение", Константы.СтатьяЗатратКредитноеОбеспечение.Получить());
		Запрос.УстановитьПараметр("ОбщепроизвРасход", Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить());
		Запрос.УстановитьПараметр("СпПодр", СписокОтбораПодр);
		Запрос.УстановитьПараметр("Счет08", ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств);	
	Иначе	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Субконто1 КАК ОбъектСтр,
		|	ХозрасчетныйОбороты.Субконто3 КАК Способ,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК ДО,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт) КАК ОстДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			,
		|			Счет = &Счет08,
		|			,
		|			Организация = &Организация
		|				И Субконто2 <> &КредитОбеспечение
		|				И Субконто2 <> &ОбщепроизвРасход
		//ОК Довбешка Т. 01.07.2013
		//|				И Субконто1.Подразделение <> &ПустоеПодразделение,       
		|				И Субконто1.Подразделение В (&СпПодр),
		//ОК Довбешка Т. 
		|			,
		|			) КАК ХозрасчетныйОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата2, Счет = &Счет08, , Организация = &Организация) КАК ХозрасчетныйОстатки
		|		ПО ХозрасчетныйОбороты.Субконто1 = ХозрасчетныйОстатки.Субконто1
		|			И ХозрасчетныйОбороты.Субконто3 = ХозрасчетныйОстатки.Субконто3
		|			И ХозрасчетныйОбороты.Счет = ХозрасчетныйОстатки.Счет
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Субконто1,
		|	ХозрасчетныйОбороты.Субконто3";
		Запрос.УстановитьПараметр("Дата1", ДатаНачала);
		Запрос.УстановитьПараметр("Дата2", КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("КредитОбеспечение", Константы.СтатьяЗатратКредитноеОбеспечение.Получить());
		Запрос.УстановитьПараметр("ОбщепроизвРасход", Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить());
		//ОК Довбешка Т. 01.07.2013
		//Запрос.УстановитьПараметр("ПустоеПодразделение",Справочники.ПодразделенияОрганизаций.ПустаяСсылка());   
		Запрос.УстановитьПараметр("СпПодр", СписокОтбораПодр);
		//ОК Довбешка Т.
		Запрос.УстановитьПараметр("Счет08", ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств);
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если (Не Выборка.ДО = 0) И (Не Выборка.ОстДт = 0) Тогда	
			НовСтр = ТЗБазаСтроитНУ.Добавить();
			НовСтр.ОбъектСтроительства = Выборка.ОбъектСтр;
			НовСтр.СпособСтроительства = Выборка.Способ;
			НовСтр.Сумма = Выборка.ДО;	
			Нов = ТЗБаза1НУ.Добавить();
			Нов.ОбъектСтроительства = Выборка.ОбъектСтр;
			Нов.Сумма = Выборка.ДО;	
		КонецЕсли;
	КонецЦикла;
	ТЗБаза1НУ.Свернуть("ОбъектСтроительства", "Сумма"); 	
	
КонецПроцедуры

Процедура РаспределениеДепартаментаЭксплАренды()
	
	Запрос = Новый Запрос;
	МассивКоэф = Новый Массив();
	Если ЗатратыФилиала Тогда
		АрендаСкорр = Новый СписокЗначений;
		ВыбАренда = Справочники.НоменклатурныеГруппы.ВыбратьИерархически(Константы.НоменклатурнаяГруппаАренда.Получить());
		Пока ВыбАренда.Следующий() Цикл
			Если Не ВыбАренда.ЭтоГруппа
					И ВыбАренда.Объект <> Справочники.ОбъектыСтроительства.ПустаяСсылка()
					И ВыбАренда.Объект.Подразделение <> Справочники.ПодразделенияОрганизаций.ПустаяСсылка()
					И СписокОтбораПодр.НайтиПоЗначению(ВыбАренда.Объект.Подразделение) <> Неопределено Тогда
				АрендаСкорр.Добавить(ВыбАренда.Ссылка);
			КонецЕсли;	
		КонецЦикла;	
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Субконто1 КАК НомГруппа,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК КО
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&Дата1, &Дата2, , Счет.Код = ""90.01.1"", , Организация = &Организация, , ) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто1 В (&АрендаСкорректированная)
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Субконто1";
		Запрос.УстановитьПараметр("Дата1", ДатаНачала);
		Запрос.УстановитьПараметр("Дата2", КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("АрендаСкорректированная", АрендаСкорр);		
	Иначе	
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Субконто1 КАК НомГруппа,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК КО
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&Дата1, &Дата2, , Счет.Код = ""90.01.1"", , Организация = &Организация, , ) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто1 В ИЕРАРХИИ(&Аренда)
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Субконто1";
		Запрос.УстановитьПараметр("Дата1", ДатаНачала);
		Запрос.УстановитьПараметр("Дата2", КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Аренда", Константы.НоменклатурнаяГруппаАренда.Получить());
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НовСтр = ТЗБаза.Добавить();
		НовСтр.НомГруппа = Выборка.НомГруппа;
		НовСтр.Сумма = Выборка.КО;
		МассивКоэф.Добавить(Выборка.КО);
	КонецЦикла;
	
	Массив = Новый Массив();
	Для Каждого СтрТз Из ТЗЭксплАренды Цикл
		ИсхСумма = СтрТз.Сумма;
		Если Не Массив = Неопределено Тогда
			Массив.Очистить();
		КонецЕсли;
		// Ок Видяйкин В. 20180129 + AT-1635555
		//Массив = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(ИсхСумма, МассивКоэф);
		Массив = РаспределитьСуммуПропорциональноКоэффициентамЛокальная(ИсхСумма, МассивКоэф);
		// Ок Видяйкин В. 20180129 -
		Если Не Массив = Неопределено Тогда
			// Дт 20 - Кт 25
			Для Нч = 0 По (Массив.Количество()-1) Цикл      
				Движение =  Движения.Хозрасчетный.Добавить();
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
				Движение.ПодразделениеДт = СтрТз.Подразделения;
				Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБаза[Нч].НомГруппа;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
				Движение.ПодразделениеКт = СтрТз.Подразделения;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
				Движение.Сумма  = Массив[Нч];
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры       // распределение расходов департаментов эксплуатации и аренды

Процедура РаспределениеДепартаментаЭксплАрендыНУ()
	
	Запрос = Новый Запрос;
	МассивКоэф = Новый Массив();
	Если ЗатратыФилиала Тогда
		АрендаСкорр = Новый СписокЗначений;
		ВыбАренда = Справочники.НоменклатурныеГруппы.ВыбратьИерархически(Константы.НоменклатурнаяГруппаАренда.Получить());
		Пока ВыбАренда.Следующий() Цикл
			Если Не ВыбАренда.ЭтоГруппа
					И ВыбАренда.Объект <> Справочники.ОбъектыСтроительства.ПустаяСсылка()
					И ВыбАренда.Объект.Подразделение <> Справочники.ПодразделенияОрганизаций.ПустаяСсылка()
					И СписокОтбораПодр.НайтиПоЗначению(ВыбАренда.Объект.Подразделение) <> Неопределено Тогда
				АрендаСкорр.Добавить(ВыбАренда.Ссылка);
			КонецЕсли;	
		КонецЦикла;	
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НалоговыйОбороты.Субконто1 КАК НомГруппа,
		|	СУММА(НалоговыйОбороты.СуммаНУОборотДт - НалоговыйОбороты.СуммаНУОборотКт) КАК КО
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&Дата1, &Дата2, , Счет.Код = ""90.01.1"", , Организация = &Организация, , ) КАК НалоговыйОбороты
		|ГДЕ
		|	НалоговыйОбороты.Субконто1 В(&АрендаСкорректированная)
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.Субконто1";
		Запрос.УстановитьПараметр("Дата1", ДатаНачала);
		Запрос.УстановитьПараметр("Дата2", КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("АрендаСкорректированная", АрендаСкорр);		
	Иначе	
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НалоговыйОбороты.Субконто1 КАК НомГруппа,
		|	СУММА(НалоговыйОбороты.СуммаНУОборотДт - НалоговыйОбороты.СуммаНУОборотКт) КАК КО
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&Дата1, &Дата2, , Счет.Код = ""90.01.1"", , Организация = &Организация, , ) КАК НалоговыйОбороты
		|ГДЕ
		|	НалоговыйОбороты.Субконто1 В ИЕРАРХИИ(&Аренда)
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.Субконто1";
		Запрос.УстановитьПараметр("Дата1", ДатаНачала);
		Запрос.УстановитьПараметр("Дата2", КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Аренда", Константы.НоменклатурнаяГруппаАренда.Получить());
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НовСтр = ТЗБазаНУ.Добавить();
		НовСтр.НомГруппа = Выборка.НомГруппа;
		НовСтр.Сумма = Выборка.КО;
		МассивКоэф.Добавить(Выборка.КО);
	КонецЦикла;
	
	Массив = Новый Массив();
	Для Каждого СтрТз Из ТЗЭксплАрендыНУ Цикл
		ИсхСумма = СтрТз.Сумма;
		Если Не Массив = Неопределено Тогда
			Массив.Очистить();
		КонецЕсли;
		// Ок Видяйкин В. 20180129 +  AT-1635555
		//Массив = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(ИсхСумма, МассивКоэф);
		Массив = РаспределитьСуммуПропорциональноКоэффициентамЛокальная(ИсхСумма, МассивКоэф);
		// Ок Видяйкин В. 20180129 -
		Если Не Массив = Неопределено Тогда
			// Дт 20 - Кт 25 в БУ
			Для Нч = 0 По (Массив.Количество()-1) Цикл
				Если СтрТз.ВидУчета = "" Тогда
					////Не может быть пустого вида учета
				Иначе	
					Если СтрТз.ВидУчета = "ВР" Тогда
						Если СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И Не СтрТз.ПрямыеРасходы Тогда
							////Не бывает
						Иначе	
							// Дт 90.08 - Кт 25.01 (-) ВР
							//Движение =  Движения.Налоговый.Добавить();
							//Движение.Период = Дата;
							//Движение.Организация = Организация;
							//Движение.СчетДт = ПланыСчетов.Налоговый.Продажи_УправленческиеРасходы;
							//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБазаНУ[Нч].НомГруппа;
							//Движение.СчетКт = ПланыСчетов.Налоговый.ОбщепроизводственныеРасходы;
							//Движение.ПодразделениеКт = СтрТз.Подразделения;
							//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							//Движение.Сумма  = -Массив[Нч];	
							// Дт 20.01.1 - Кт 25.01 ВР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
							Движение.ПодразделениеДт = СтрТз.Подразделения;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБазаНУ[Нч].НомГруппа;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							Движение.СчетКт = Планысчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							Движение.СуммаВРДт  = Массив[Нч];	
							Движение.СуммаВРКт  = Массив[Нч];	
							// Дт 90.02 - Кт 20.01.1 ВР
							//Движение =  Движения.Налоговый.Добавить();
							//Движение.Период = Дата;
							//Движение.Организация = Организация;
							//Движение.СчетДт = ПланыСчетов.Налоговый.СебестоимостьПродаж;
							//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБазаНУ[Нч].НомГруппа;
							//Движение.СчетКт = ПланыСчетов.Налоговый.ОсновноеПроизводство;
							//Движение.ПодразделениеКт = СтрТз.Подразделения;
							//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБазаНУ[Нч].НомГруппа;
							//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							//Движение.Сумма  = Массив[Нч];	
						КонецЕсли;
					ИначеЕсли СтрТз.ВидУчета = "НУ" Тогда
						Если СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И СтрТз.ПрямыеРасходы Тогда
							// Дт 20.01.1 - Кт 25.01 НУ
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
							Движение.ПодразделениеДт = СтрТз.Подразделения;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБазаНУ[Нч].НомГруппа;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							Движение.СчетКт = СтрТз.СчетЗатрат;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.НУ;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.НУ;
							Движение.СуммаНУДт  = Массив[Нч];	
							Движение.СуммаНУКт  = Массив[Нч];	
						ИначеЕсли СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И Не СтрТз.ПрямыеРасходы Тогда
							// Дт 90.08 - Кт 25.02 НУ
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД;
							//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБазаНУ[Нч].НомГруппа;
							Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.НУ;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.НУ;
							Движение.СуммаНУДт  = Массив[Нч];	
							Движение.СуммаНУКт  = Массив[Нч];	
							// Дт 90.08 - Кт 25.01 (-) ВР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД;
							//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБазаНУ[Нч].НомГруппа;
							Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							Движение.СуммаВРДт  = -Массив[Нч];	
							Движение.СуммаВРКт  = -Массив[Нч];	
							// Дт 20.01.1 - Кт 25.01 ВР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
							Движение.ПодразделениеДт = СтрТз.Подразделения;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБазаНУ[Нч].НомГруппа;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							Движение.СчетКт = Планысчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							Движение.СуммаВРДт  = Массив[Нч];	
							Движение.СуммаВРКт  = Массив[Нч];	
							// Дт 90.02 - Кт 20.01.1 ВР
							//Движение =  Движения.Налоговый.Добавить();
							//Движение.Период = Дата;
							//Движение.Организация = Организация;
							//Движение.СчетДт = ПланыСчетов.Налоговый.СебестоимостьПродаж;
							//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБазаНУ[Нч].НомГруппа;
							//Движение.СчетКт = ПланыСчетов.Налоговый.ОсновноеПроизводство;
							//Движение.ПодразделениеКт = СтрТз.Подразделения;
							//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБазаНУ[Нч].НомГруппа;
							//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							//Движение.Сумма  = Массив[Нч];	
						КонецЕсли;
					ИначеЕсли СтрТз.ВидУчета = "ПР" Тогда	
						Если СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И СтрТз.ПрямыеРасходы Тогда
							///Такого счета не может быть для ПР
						ИначеЕсли СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И Не СтрТз.ПрямыеРасходы Тогда
							// Дт 90.08 - Кт 25.02 ПР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД;
							//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБазаНУ[Нч].НомГруппа;
							Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							Движение.СуммаПРДт  = Массив[Нч];	
							Движение.СуммаПРКт  = Массив[Нч];	
							// Дт 90.08 - Кт 25.01 (-) ПР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД;
							//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБазаНУ[Нч].НомГруппа;
							Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							Движение.СуммаПРДт  = -Массив[Нч];	
							Движение.СуммаПРКт  = -Массив[Нч];	
							// Дт 20.01.1 - Кт 25.01 ПР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
							Движение.ПодразделениеДт = СтрТз.Подразделения;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБазаНУ[Нч].НомГруппа;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							Движение.СчетКт = Планысчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							Движение.СуммаПРДт  = Массив[Нч];	
							Движение.СуммаПРКт  = Массив[Нч];	
							// Дт 90.02 - Кт 20.01.1 ПР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБазаНУ[Нч].НомГруппа;
							Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] =  ТЗБазаНУ[Нч].НомГруппа;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							Движение.СуммаПРДт  = Массив[Нч];	
							Движение.СуммаПРКт  = Массив[Нч];	
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры       // распределение расходов департаментов эксплуатации и аренды

Процедура РаспределениеДепартаментаСтроительства()
	//#Если Клиент Тогда
	//Состояние("Формирование базы распределения");
	//#КонецЕсли
	Массив = Новый Массив;
	МассивКоэф = Новый Массив;             
	Для Каждого ВыбСтрока Из ТЗБаза1 Цикл
		МассивКоэф.Добавить(ВыбСтрока.Сумма);
	КонецЦикла;
	//#Если Клиент Тогда
	//Состояние("Списание расходов департамента строительства");
	//#КонецЕсли
	Отбор = Новый Структура();
	СпособыСтр = Новый Массив();
	МассивКоэф1 = Новый Массив();
	Массив1 = Новый Массив();
	Для Каждого СтрТз Из ТЗСтроительства Цикл
		ИсхСумма = СтрТЗ.Сумма;
		Если Массив<>Неопределено тогда
			Массив.Очистить();
		КонецЕсли;	
		// Ок Видяйкин В. 20180129 +  AT-1635555
		//Массив = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(ИсхСумма, МассивКоэф);
		Массив = РаспределитьСуммуПропорциональноКоэффициентамЛокальная(ИсхСумма, МассивКоэф);
		// Ок Видяйкин В. 20180129 -
		Если Массив<>Неопределено тогда
			Для Нч = 0 По (Массив.Количество() - 1) Цикл
				Если ТЗБаза1[Нч].ОбъектСтроительства.Родитель=Справочники.ОбъектыСтроительства.ПустаяСсылка() тогда
					Сообщить("Сумма "+Массив[Нч]+" не распределена, т.к. объект "+ТЗБаза1[Нч].ОбъектСтроительства+" - это объект эксплуатации")
				Иначе		
					Движение =  Движения.Хозрасчетный.Добавить();
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Если ТЗБаза1[Нч].ОбъектСтроительства.Счет = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
						//  Дт 20.01 - Кт 25
						Движение.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
						Движение.ПодразделениеДт = СтрТз.Подразделения;
						НомГруппа = Справочники.НоменклатурныеГруппы.НайтиПоРеквизиту("Объект",ТЗБаза1[Нч].ОбъектСтроительства,Константы.НоменклатурнаяГруппаУслугЗаказчикаЗастройщика.Получить());
						Если НомГруппа = Справочники.НоменклатурныеГруппы.ПустаяСсылка() Тогда
							Сообщить("Для объекта строительства:" + ТЗБаза1[Нч].ОбъектСтроительства+" (код: "+ТЗБаза1[Нч].ОбъектСтроительства.Код+", родитель: "+ТЗБаза1[Нч].ОбъектСтроительства.Родитель+") не найдена номенклатурная группа!", СтатусСообщения.Важное);
						Иначе
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
						КонецЕсли;	
						Движение.Сумма  = Массив[Нч];
					ИначеЕсли  ТЗБаза1[Нч].ОбъектСтроительства.Счет = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств Тогда
						
						Сумма = Массив[Нч];
						Отбор.Очистить();
						СпособыСтр.Очистить();
						Отбор.Вставить("ОбъектСтроительства",ТЗБаза1[Нч].ОбъектСтроительства);
						СпособыСтр =  ТЗБазаСтроит.НайтиСтроки(Отбор);
						
						//	Дт 08.03 - Кт 25
						Движение.СчетДт = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств;
						Движение.ПодразделениеДт = СтрТз.Подразделения;
						Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства] = ТЗБаза1[Нч].ОбъектСтроительства;
						Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СпособыСтроительства] = СпособыСтр[0].СпособСтроительства;
						Если СпособыСтр.Количество() > 1 Тогда
							ИсхСумма1 = Массив[Нч];
							МассивКоэф1.Очистить();
							Для Каждого ВыбСтрока Из СпособыСтр Цикл
								МассивКоэф1.Добавить(ВыбСтрока.Сумма);	
							КонецЦикла;
							// Ок Видяйкин В. 20180129 +  AT-1635555
							//Массив1 = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(ИсхСумма1, МассивКоэф1);
							Массив1 = РаспределитьСуммуПропорциональноКоэффициентамЛокальная(ИсхСумма1, МассивКоэф1);
							// Ок Видяйкин В. 20180129 -
							Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СпособыСтроительства] = СпособыСтр[0].СпособСтроительства;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТЗ.СтатьяЗатрат;
							Движение.Сумма  = Массив1[0];
							
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств;
							Движение.ПодразделениеДт = СтрТз.Подразделения;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства] = ТЗБаза1[Нч].ОбъектСтроительства;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СпособыСтроительства] = СпособыСтр[1].СпособСтроительства;
							Сумма = Массив1[1];
						КонецЕсли;
						Движение.Сумма = Сумма;
					Иначе
						Сообщить("Для объекта строительства "+ТЗБаза1[Нч].ОбъектСтроительства+" не указан счет распределения");	
					КонецЕсли;
					Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
					Движение.ПодразделениеКт = СтрТз.Подразделения;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТЗ.СтатьяЗатрат;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры   // распределение расходов департамента строительства

Процедура РаспределениеДепартаментаСтроительстваНУ()
	#Если Клиент Тогда
	Состояние("Формирование базы распределения");
	#КонецЕсли
	Массив = Новый Массив;
	МассивКоэф = Новый Массив;             
	Для Каждого ВыбСтрока Из ТЗБаза1НУ Цикл
		МассивКоэф.Добавить(ВыбСтрока.Сумма);
	КонецЦикла;
	#Если Клиент Тогда
	Состояние("Списание расходов департамента строительства");
	#КонецЕсли
	Отбор = Новый Структура();
	СпособыСтр = Новый Массив();
	МассивКоэф1 = Новый Массив();
	Массив1 = Новый Массив();
	Для Каждого СтрТз Из ТЗСтроительстваНУ Цикл
		Если СтрТЗ.ВидУчета = "ВР" И СтрТЗ.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И Не СтрТз.ПрямыеРасходы Тогда
			///ВР и 25.02 не может быть
			Продолжить;
		КонецЕсли;
		Если СтрТЗ.ВидУчета = "ПР" И СтрТЗ.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И СтрТз.ПрямыеРасходы Тогда
			///ПР и 25.01 не может быть
			Продолжить;
		КонецЕсли;	
		ИсхСумма = СтрТЗ.Сумма;
		Если Массив<>Неопределено Тогда
			Массив.Очистить();
		КонецЕсли;	
		// Ок Видяйкин В. 20180129 +   AT-1635555
		//Массив = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(ИсхСумма, МассивКоэф);
		Массив = РаспределитьСуммуПропорциональноКоэффициентамЛокальная(ИсхСумма, МассивКоэф);
		// Ок Видяйкин В. 20180129 -
		Если Массив<>Неопределено Тогда
			Для Нч = 0 По (Массив.Количество()-1) Цикл
				Если ТЗБаза1НУ[Нч].ОбъектСтроительства.Родитель=Справочники.ОбъектыСтроительства.ПустаяСсылка() Тогда
					Сообщить("Сумма "+Массив[Нч]+" не распределена, т.к. объект "+ТЗБаза1НУ[Нч].ОбъектСтроительства+" - это объект эксплуатации")
				Иначе		
					Если ТЗБаза1НУ[Нч].ОбъектСтроительства.Счет = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
						//  Дт 20.01 - Кт 25 в БУ
						НомГруппа = Справочники.НоменклатурныеГруппы.НайтиПоРеквизиту("Объект",ТЗБаза1НУ[Нч].ОбъектСтроительства,Константы.НоменклатурнаяГруппаУслугЗаказчикаЗастройщика.Получить());
						Если НомГруппа = Справочники.НоменклатурныеГруппы.ПустаяСсылка() тогда
							Сообщить("Для объекта строительства:" + ТЗБаза1НУ[Нч].ОбъектСтроительства + " не найдена номенклатурная группа! Проводка тем не менее сформирована!");
						КонецЕсли;	
						Если СтрТЗ.ВидУчета = "ВР" Тогда
							Если СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И Не СтрТз.ПрямыеРасходы Тогда
								////Не бывает
							Иначе	
								// Дт 90.08 - Кт 25.01 (-) ВР
								//Движение =  Движения.Налоговый.Добавить();
								//Движение.Период = Дата;
								//Движение.Организация = Организация;
								//Движение.СчетДт = ПланыСчетов.Налоговый.Продажи_УправленческиеРасходы;
								//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
								//Движение.СчетКт = ПланыСчетов.Налоговый.ОбщепроизводственныеРасходы;
								//Движение.ПодразделениеКт = СтрТз.Подразделения;
								//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
								//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								//Движение.Сумма  = -Массив[Нч];	
								// Дт 20.01.1 - Кт 25.01 ВР
								Движение =  Движения.Хозрасчетный.Добавить();
								Движение.Период = Дата;
								Движение.Организация = Организация;
								Движение.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
								Движение.ПодразделениеДт = СтрТз.Подразделения;
								Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
								Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
								Движение.СчетКт = Планысчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
								Движение.ПодразделениеКт = СтрТз.Подразделения;
								Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТЗ.СтатьяЗатрат;
								//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								Движение.СуммаВРДт  = Массив[Нч];	
								Движение.СуммаВРКт  = Массив[Нч];	
								// Дт 90.02 - Кт 20.01.1 ВР
								//Движение =  Движения.Налоговый.Добавить();
								//Движение.Период = Дата;
								//Движение.Организация = Организация;
								//Движение.СчетДт = ПланыСчетов.Налоговый.СебестоимостьПродаж;
								//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
								//Движение.СчетКт = ПланыСчетов.Налоговый.ОсновноеПроизводство;
								//Движение.ПодразделениеКт = СтрТз.Подразделения;
								//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
								//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
								//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								//Движение.Сумма  = Массив[Нч];	
							КонецЕсли;	
						ИначеЕсли СтрТз.ВидУчета = "НУ" Тогда
							Если СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И СтрТз.ПрямыеРасходы Тогда
								// Дт 20.01.1 - Кт 25.01 НУ
								Движение =  Движения.Хозрасчетный.Добавить();
								Движение.Период = Дата;
								Движение.Организация = Организация;
								Движение.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
								Движение.ПодразделениеДт = СтрТз.Подразделения;
								Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
								Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
								Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
								Движение.ПодразделениеКт = СтрТз.Подразделения;
								Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
								//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.НУ;
								//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.НУ;
								Движение.СуммаНУДт  = Массив[Нч];	
								Движение.СуммаНУКт  = Массив[Нч];	
							ИначеЕсли СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И Не СтрТз.ПрямыеРасходы Тогда
								// Дт 90.08 - Кт 25.02 НУ
								Движение =  Движения.Хозрасчетный.Добавить();
								Движение.Период = Дата;
								Движение.Организация = Организация;
								Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД;
								//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
								Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
								Движение.ПодразделениеКт = СтрТз.Подразделения;
								Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
								//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.НУ;
								//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.НУ;
								Движение.СуммаНУДт  = Массив[Нч];	
								Движение.СуммаНУКт  = Массив[Нч];	
								// Дт 90.08 - Кт 25.01 (-) ВР
								Движение =  Движения.Хозрасчетный.Добавить();
								Движение.Период = Дата;
								Движение.Организация = Организация;
								Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД;
								//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
								Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
								Движение.ПодразделениеКт = СтрТз.Подразделения;
								Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
								//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								Движение.СуммаВРДт  = -Массив[Нч];	
								Движение.СуммаВРКт  = -Массив[Нч];	
								// Дт 20.01.1 - Кт 25.01 ВР
								Движение =  Движения.Хозрасчетный.Добавить();
								Движение.Период = Дата;
								Движение.Организация = Организация;
								Движение.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
								Движение.ПодразделениеДт = СтрТз.Подразделения;
								Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
								Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
								Движение.СчетКт = Планысчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
								Движение.ПодразделениеКт = СтрТз.Подразделения;
								Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
								//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								Движение.СуммаВРДт  = Массив[Нч];	
								Движение.СуммаВРКт  = Массив[Нч];	
								// Дт 90.02 - Кт 20.01.1 ВР
								//Движение =  Движения.Налоговый.Добавить();
								//Движение.Период = Дата;
								//Движение.Организация = Организация;
								//Движение.СчетДт = ПланыСчетов.Налоговый.СебестоимостьПродаж;
								//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
								//Движение.СчетКт = ПланыСчетов.Налоговый.ОсновноеПроизводство;
								//Движение.ПодразделениеКт = СтрТз.Подразделения;
								//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
								//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
								//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								//Движение.Сумма  = Массив[Нч];	
							КонецЕсли;
						ИначеЕсли СтрТз.ВидУчета = "ПР" Тогда
							// Дт 90.08 - Кт 25.02 ПР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД;
							//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
							Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							Движение.СуммаПРДт  = Массив[Нч];	
							Движение.СуммаПРКт  = Массив[Нч];	
							// Дт 90.08 - Кт 25.01 (-) ПР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД;
							//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
							Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							Движение.СуммаПРДт  = -Массив[Нч];	
							Движение.СуммаПРКт  = -Массив[Нч];	
							// Дт 20.01.1 - Кт 25.01 ПР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
							Движение.ПодразделениеДт = СтрТз.Подразделения;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							Движение.СчетКт = Планысчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							Движение.СуммаПРДт  = Массив[Нч];	
							Движение.СуммаПРКт  = Массив[Нч];	
							// Дт 90.02 - Кт 20.01.1 ПР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
							Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = НомГруппа;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							Движение.СуммаПРДт  = Массив[Нч];	
							Движение.СуммаПРКт  = Массив[Нч];	
						КонецЕсли;
						
					ИначеЕсли  ТЗБаза1НУ[Нч].ОбъектСтроительства.Счет = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств Тогда
						//	Дт 08.03 - Кт 25 (БУ) в НУ разбивается на 2 проводки
						
						///1 проводка Дт 25 с "-"
						Движение =  Движения.Хозрасчетный.Добавить();
						Движение.Период = Дата;
						Движение.Организация = Организация;
                        Движение.СчетДт = СтрТз.СчетЗатрат;
                        Движение.СчетКт = ПланыСчетов.Хозрасчетный.Вспомогательный;
						//Движение.ВидУчетаДт=СтрТз.ВидУчета;
						Движение.ПодразделениеДт = СтрТз.Подразделения;
						Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТЗ.СтатьяЗатрат;
						Движение["Сумма" + СтрТз.ВидУчета + "Дт"] =  -Массив[Нч]; ///Распределенная сумма берется с "-"
						
						
						///2 проводка Дт 08.03 с "+"
						Сумма = Массив[Нч];
						Отбор.Очистить();
						СпособыСтр.Очистить();
						Отбор.Вставить("ОбъектСтроительства",ТЗБаза1НУ[Нч].ОбъектСтроительства);
						СпособыСтр =  ТЗБазаСтроитНУ.НайтиСтроки(Отбор);
						
						Если СпособыСтр.Количество() = 1 Тогда
							////Если один способ строительства
							
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств;
							Движение.ПодразделениеДт = СтрТз.Подразделения;
                        	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Вспомогательный;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства] = ТЗБаза1НУ[Нч].ОбъектСтроительства;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СпособыСтроительства] = СпособыСтр[0].СпособСтроительства;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=СтрТз.ВидУчета;
 							Движение["Сумма" + СтрТз.ВидУчета + "Дт"] = Массив[Нч]; ///Распределенная сумма берется с "+"

						ИначеЕсли СпособыСтр.Количество() > 1 Тогда
							////Если два способа строительства, то проводим дополнительное распределение по способам
							
							ИсхСумма1 = Массив[Нч]; ///Сумма для дополнительного распределения берется с "+"
							МассивКоэф1.Очистить();
							Для Каждого ВыбСтрока Из СпособыСтр Цикл
								МассивКоэф1.Добавить(ВыбСтрока.Сумма);	
							КонецЦикла;
							// Ок Видяйкин В. 20180129 +  AT-1635555
							//Массив1 = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(ИсхСумма1, МассивКоэф1);
							Массив1 = РаспределитьСуммуПропорциональноКоэффициентамЛокальная(ИсхСумма1, МассивКоэф1);
							// Ок Видяйкин В. 20180129 -
							
							Движение =  Движения.Хозрасчетный.Добавить(); ////Для 1-го способа стройки
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств;
							Движение.ПодразделениеДт = СтрТз.Подразделения;
                        	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Вспомогательный;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства] = ТЗБаза1НУ[Нч].ОбъектСтроительства;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СпособыСтроительства] = СпособыСтр[0].СпособСтроительства;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=СтрТз.ВидУчета;
							Движение["Сумма" + СтрТз.ВидУчета + "Дт"] = Массив1[0]; ///Распределенная сумма берется с "+"
							
							Движение =  Движения.Хозрасчетный.Добавить(); ////Для 2-го способа стройки
							//Движение.ВидУчетаДт=СтрТз.ВидУчета;
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств;
							Движение.ПодразделениеДт = СтрТз.Подразделения;
                        	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Вспомогательный;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства] = ТЗБаза1НУ[Нч].ОбъектСтроительства;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СпособыСтроительства] = СпособыСтр[1].СпособСтроительства;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							Движение["Сумма" + СтрТз.ВидУчета + "Дт"] = Массив1[1]; ///Распределенная сумма берется с "+"

						КонецЕсли;
					Иначе
						Сообщить("Для объекта строительства "+ТЗБаза1[Нч].ОбъектСтроительства+" не указан счет распределения");	
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры   // распределение расходов департамента строительства

Процедура РаспределениеОтделаПрРешений()
	Запрос = Новый Запрос;
	МассивКоэф = Новый Массив;
	Если ЗатратыФилиала тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Счет КАК ВыбСчет,
		|	ХозрасчетныйОбороты.Субконто1 КАК Первое,
		|	ХозрасчетныйОбороты.Субконто2 КАК Второе,
		|	ХозрасчетныйОбороты.Субконто3 КАК Третье,
		|	ХозрасчетныйОбороты.СуммаОборотДт КАК ДО
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			,
		|			,
		|			,
		|			Организация = &Организация
		|				И Подразделение В (&СпПодр)
		|				И (Субконто1 = &Статья
		|					ИЛИ Субконто2 = &Статья),
		|			,
		|			) КАК ХозрасчетныйОбороты";
		Запрос.УстановитьПараметр("Дата1",ДатаНачала);
		Запрос.УстановитьПараметр("Дата2",КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("Статья",Константы.СтатьяЗатратПроектныеРаботы.Получить());      
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("СпПодр",СписокОтбораПодр);
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Счет КАК ВыбСчет,
		|	ХозрасчетныйОбороты.Субконто1 КАК Первое,
		|	ХозрасчетныйОбороты.Субконто2 КАК Второе,
		|	ХозрасчетныйОбороты.Субконто3 КАК Третье,
		|	ХозрасчетныйОбороты.СуммаОборотДт КАК ДО
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			,
		|			,
		|			,
		|			Организация = &Организация
		|				И (Субконто2 = &Статья
		|					ИЛИ Субконто3 = &Статья),
		|			,
		|			) КАК ХозрасчетныйОбороты";
		Запрос.УстановитьПараметр("Дата1",ДатаНачала);
		Запрос.УстановитьПараметр("Дата2",КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("Статья",Константы.СтатьяЗатратПроектныеРаботы.Получить());      
		Запрос.УстановитьПараметр("Организация",Организация);
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ОсобоеРаспределениеОтделаПрРешений();
		Возврат;
	КонецЕсли;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Нов = ТЗБазаРеш.Добавить();
		Нов.Счет = Выборка.ВыбСчет;
		Если Нов.Счет = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			Нов.НомГруппа = Выборка.Первое;
		ИначеЕсли  Нов.Счет = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств Тогда
			Нов.ОбъектСтроительства = Выборка.Первое; 
			Нов.СпособСтроительства = Выборка.Третье;
		КонецЕсли;
		Нов.Сумма = Выборка.ДО;
		МассивКоэф.Добавить(Выборка.ДО);
	КонецЦикла;
	
	Массив = Новый Массив();
	Для Каждого СтрТз Из ТЗПрРешений Цикл
		ИсхСумма = СтрТз.Сумма;
		Если Не Массив = неопределено тогда
			Массив.Очистить();
		КонецЕсли;
		// Ок Видяйкин В. 20180129 +  AT-1635555
		//Массив = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(ИсхСумма, МассивКоэф);
		Массив = РаспределитьСуммуПропорциональноКоэффициентамЛокальная(ИсхСумма, МассивКоэф);
		// Ок Видяйкин В. 20180129 -
		Если Не Массив = неопределено тогда 
			Для Нч = 0 По (Массив.Количество()-1) Цикл
				Если  ТЗБазаРеш[Нч].Счет = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
					// Дт 20 - Кт 25
					Движение =  Движения.Хозрасчетный.Добавить();
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
					Движение.ПодразделениеДт = СтрТз.Подразделения;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
					Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
					Движение.ПодразделениеКт = СтрТз.Подразделения;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
					Движение.Сумма  = Массив[Нч];
				Иначе
					// Дт 08.03 - Кт 25
					Движение =  Движения.Хозрасчетный.Добавить();
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СчетДт = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств;
					Движение.ПодразделениеДт = СтрТз.Подразделения;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства] = ТЗБазаРеш[Нч].ОбъектСтроительства;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СпособыСтроительства] = ТЗБазаРеш[Нч].СпособСтроительства;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
					Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
					Движение.ПодразделениеКт = СтрТз.Подразделения;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
					Движение.Сумма  = Массив[Нч];
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры         // распределение расходов отдела проектных решений

Процедура РаспределениеОтделаПрРешенийНУ()
	Запрос = Новый Запрос;
	МассивКоэф = Новый Массив;
	Если ЗатратыФилиала тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НалоговыйОбороты.Счет КАК ВыбСчет,
		|	НалоговыйОбороты.Субконто1 КАК Первое,
		|	НалоговыйОбороты.Субконто2 КАК Второе,
		|	НалоговыйОбороты.Субконто3 КАК Третье,
		|	НалоговыйОбороты.СуммаНУОборотДт КАК ДО
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			,
		|			,
		|			,
		|			Организация = &Организация
		|				И Подразделение В (&СпПодр)
		|				И (Субконто1 = &Статья
		|					ИЛИ Субконто2 = &Статья),
		|			,
		|			) КАК НалоговыйОбороты";
		Запрос.УстановитьПараметр("Дата1",ДатаНачала);
		Запрос.УстановитьПараметр("Дата2",КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("Статья",Константы.СтатьяЗатратПроектныеРаботы.Получить());      
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("СпПодр",СписокОтбораПодр);
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НалоговыйОбороты.Счет КАК ВыбСчет,
		|	НалоговыйОбороты.Субконто1 КАК Первое,
		|	НалоговыйОбороты.Субконто2 КАК Второе,
		|	НалоговыйОбороты.Субконто3 КАК Третье,
		|	НалоговыйОбороты.СуммаОборотДт КАК ДО
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			,
		|			,
		|			,
		|			Организация = &Организация
		|				И (Субконто2 = &Статья
		|					ИЛИ Субконто3 = &Статья),
		|			,
		|			) КАК НалоговыйОбороты";
		Запрос.УстановитьПараметр("Дата1",ДатаНачала);
		Запрос.УстановитьПараметр("Дата2",КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("Статья",Константы.СтатьяЗатратПроектныеРаботы.Получить());      
		Запрос.УстановитьПараметр("Организация",Организация);
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ОсобоеРаспределениеОтделаПрРешений();
		Возврат;
	КонецЕсли;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Нов = ТЗБазаРешНУ.Добавить();
		Нов.Счет = Выборка.ВыбСчет;
		Если Нов.Счет = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
			Нов.НомГруппа = Выборка.Первое;
		ИначеЕсли  Нов.Счет = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств Тогда
			Нов.ОбъектСтроительства = Выборка.Первое; 
			Нов.СпособСтроительства = Выборка.Третье;
		КонецЕсли;
		Нов.Сумма = Выборка.ДО;
		МассивКоэф.Добавить(Выборка.ДО);
	КонецЦикла;
	
	Массив = Новый Массив();
	Для Каждого СтрТз Из ТЗПрРешенийНУ Цикл
		Если СтрТЗ.ВидУчета = "ВР" Тогда
			///ВР не может быть
			Продолжить;
		КонецЕсли;	
		Если СтрТЗ.ВидУчета = "ПР" И СтрТЗ.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И СтрТз.ПрямыеРасходы Тогда
			///ПР и 25.01 не может быть
			Продолжить;
		КонецЕсли;	
		ИсхСумма = СтрТз.Сумма;
		Если Не Массив = Неопределено Тогда
			Массив.Очистить();
		КонецЕсли;
		// Ок Видяйкин В. 20180129 +  AT-1635555
		//Массив = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(ИсхСумма, МассивКоэф);
		Массив = РаспределитьСуммуПропорциональноКоэффициентамЛокальная(ИсхСумма, МассивКоэф);
		// Ок Видяйкин В. 20180129 -
		Если Не Массив = Неопределено Тогда
			Для Нч = 0 По (Массив.Количество()-1) Цикл
				Если  ТЗБазаРешНУ[Нч].Счет = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство Тогда
					// Дт 20 - Кт 25 в БУ
					Если  СтрТз.ВидУчета = "ВР" Тогда
						Если СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И Не СтрТз.ПрямыеРасходы Тогда
								////Не бывает
							Иначе	
								// Дт 90.08 - Кт 25.01 (-) ВР
								//Движение =  Движения.Налоговый.Добавить();
								//Движение.Период = Дата;
								//Движение.Организация = Организация;
								//Движение.СчетДт = ПланыСчетов.Налоговый.Продажи_УправленческиеРасходы;
								//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
								//Движение.СчетКт = ПланыСчетов.Налоговый.ОбщепроизводственныеРасходы;
								//Движение.ПодразделениеКт = СтрТз.Подразделения;
								//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
								//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								//Движение.Сумма  = -Массив[Нч];	
								// Дт 20.01.1 - Кт 25.01 ВР
								Движение =  Движения.Хозрасчетный.Добавить();
								Движение.Период = Дата;
								Движение.Организация = Организация;
								Движение.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
								Движение.ПодразделениеДт = СтрТз.Подразделения;
								Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
								Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
								Движение.СчетКт = Планысчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
								Движение.ПодразделениеКт = СтрТз.Подразделения;
								Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
								//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								Движение.СуммаВРДт  = Массив[Нч];	
								Движение.СуммаВРКт  = Массив[Нч];	
								// Дт 90.02 - Кт 20.01.1 ВР
								//Движение =  Движения.Налоговый.Добавить();
								//Движение.Период = Дата;
								//Движение.Организация = Организация;
								//Движение.СчетДт = ПланыСчетов.Налоговый.СебестоимостьПродаж;
								//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
								//Движение.СчетКт = ПланыСчетов.Налоговый.ОсновноеПроизводство;
								//Движение.ПодразделениеКт = СтрТз.Подразделения;
								//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
								//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
								//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
								//Движение.Сумма  = Массив[Нч];	
							КонецЕсли;	
					ИначеЕсли СтрТз.ВидУчета = "НУ" Тогда
						Если СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И СтрТз.ПрямыеРасходы Тогда
							// Дт 20.01.1 - Кт 25.01 НУ
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
							Движение.ПодразделениеДт = СтрТз.Подразделения;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.НУ;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.НУ;
							Движение.СуммаНУКт  = Массив[Нч];	
							Движение.СуммаНУДт  = Массив[Нч];	
						ИначеЕсли СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И Не СтрТз.ПрямыеРасходы Тогда
							// Дт 90.08 - Кт 25.02 НУ
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД;
							//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
							Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.НУ;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.НУ;
							Движение.СуммаНУДт  = Массив[Нч];	
							Движение.СуммаНУКт  = Массив[Нч];	
							// Дт 90.08 - Кт 25.01 (-) ВР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД;
							//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
							Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							Движение.СуммаВРДт  = -Массив[Нч];	
							Движение.СуммаВРКт  = -Массив[Нч];	
							// Дт 20.01.1 - Кт 25.01 ВР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
							Движение.ПодразделениеДт = СтрТз.Подразделения;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							Движение.СчетКт = Планысчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							Движение.СуммаВРДт  = Массив[Нч];	
							Движение.СуммаВРКт  = Массив[Нч];	
							// Дт 90.02 - Кт 20.01.1 ВР
							//Движение =  Движения.Налоговый.Добавить();
							//Движение.Период = Дата;
							//Движение.Организация = Организация;
							//Движение.СчетДт = ПланыСчетов.Налоговый.СебестоимостьПродаж;
							//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
							//Движение.СчетКт = ПланыСчетов.Налоговый.ОсновноеПроизводство;
							//Движение.ПодразделениеКт = СтрТз.Подразделения;
							//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
							//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ВР;
							//Движение.Сумма  = Массив[Нч];	
						КонецЕсли;
					ИначеЕсли СтрТз.ВидУчета = "ПР" Тогда
						Если СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И СтрТз.ПрямыеРасходы Тогда
						Иначе	
							// Дт 90.08 - Кт 25.02 ПР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД;
							//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
							Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							Движение.СуммаПРДт  = Массив[Нч];	
							Движение.СуммаПРКт  = Массив[Нч];	
							// Дт 90.08 - Кт 25.01 (-) ПР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД;
							//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
							Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							Движение.СуммаПРДт  = -Массив[Нч];	
							Движение.СуммаПРКт  = -Массив[Нч];	
							// Дт 20.01.1 - Кт 25.01 ПР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
							Движение.ПодразделениеДт = СтрТз.Подразделения;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							Движение.СчетКт = Планысчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							Движение.СуммаПРДт  = Массив[Нч];	
							Движение.СуммаПРКт  = Массив[Нч];	
							// Дт 90.02 - Кт 20.01.1 ПР
							Движение =  Движения.Хозрасчетный.Добавить();
							Движение.Период = Дата;
							Движение.Организация = Организация;
							Движение.СчетДт = ПланыСчетов.Хозрасчетный.СебестоимостьПродаж;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
							Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
							Движение.ПодразделениеКт = СтрТз.Подразделения;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы] = ТЗБазаРеш[Нч].НомГруппа;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
							//Движение.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							//Движение.ВидУчетаКт=Перечисления.ВидыУчетаПоПБУ18.ПР;
							Движение.СуммаПРДт  = Массив[Нч];	
							Движение.СуммаПРКт  = Массив[Нч];	
						КонецЕсли;
					КонецЕсли;	
				Иначе
					// Дт 08.03 - Кт 25 в БУ
					Если СтрТз.ВидУчета = "ВР" И СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И Не СтрТз.ПрямыеРасходы Тогда
						///Не бывает
						Продолжить;
					КонецЕсли;
					Если СтрТз.ВидУчета = "ПР" И СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы И СтрТз.ПрямыеРасходы Тогда
						///Не бывает
						Продолжить;
					КонецЕсли;
					Движение = Движения.Хозрасчетный.Добавить();
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СчетДт = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств;
					Движение.ПодразделениеДт = СтрТз.Подразделения;
                    Движение.СчетКт = ПланыСчетов.Хозрасчетный.Вспомогательный;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства] = ТЗБазаРешНУ[Нч].ОбъектСтроительства;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СпособыСтроительства] = ТЗБазаРешНУ[Нч].СпособСтроительства;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
					//Движение.ВидУчетаДт=СтрТз.ВидУчета;
					Движение["Сумма" + СтрТз.ВидУчета + "Дт"] = Массив[Нч];
					
					Движение =  Движения.Хозрасчетный.Добавить();
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СчетДт = СтрТз.СчетЗатрат;
                    Движение.СчетКт = ПланыСчетов.Хозрасчетный.Вспомогательный;
					Движение.ПодразделениеДт = СтрТз.Подразделения;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТз.СтатьяЗатрат;
					//Движение.ВидУчетаДт=СтрТз.ВидУчета;
					Движение["Сумма" + СтрТз.ВидУчета + "Дт"]  = -Массив[Нч];		
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры         // распределение расходов отдела проектных решений

Процедура ОсобоеРаспределениеОтделаПрРешений()
	Массив = Новый Массив;
	Массив1 = Новый Массив;
	МассивКоэф = Новый Массив;
	МассивКоэф1 = Новый Массив;
	Отбор = Новый Структура();
	СпособыСтр = Новый Массив();
	ФормированиеБазыСтроитОбъектовОС();
	Для Каждого ВыбСтрока Из ТЗБаза1 Цикл
		МассивКоэф.Добавить(ВыбСтрока.Сумма);
	КонецЦикла; 
	Для Каждого СтрТз Из ТЗПрРешений Цикл
		ИсхСумма = СтрТЗ.Сумма;
		Если Не Массив = Неопределено тогда
			Массив.Очистить();
		КонецЕсли;
		// Ок Видяйкин В. 20180129 +  AT-1635555
		//Массив = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(ИсхСумма, МассивКоэф);
		Массив = РаспределитьСуммуПропорциональноКоэффициентамЛокальная(ИсхСумма, МассивКоэф);
		// Ок Видяйкин В. 20180129 -
		Если Массив = Неопределено тогда
		Иначе	
			Для Нч = 0 По (Массив.Количество()-1) Цикл 
				СпСтроит = 0;
				Сумма = Массив[Нч];
				Отбор.Очистить();
				СпособыСтр.Очистить();
				Отбор.Вставить("ОбъектСтроительства",ТЗБаза1[Нч].ОбъектСтроительства);
				СпособыСтр =  ТЗБазаСтроит.НайтиСтроки(Отбор);
				Если СпособыСтр.Количество() > 1 Тогда
					СпСтроит = 1;
					ИсхСумма = Массив[Нч];
					МассивКоэф1.Очистить();
					Для Каждого ВыбСтрока Из СпособыСтр Цикл
						МассивКоэф1.Добавить(ВыбСтрока.Сумма);	
					КонецЦикла;
					// Ок Видяйкин В. 20180129 +  AT-1635555
					//Массив1 = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(ИсхСумма, МассивКоэф1);
					Массив1 = РаспределитьСуммуПропорциональноКоэффициентамЛокальная(ИсхСумма, МассивКоэф1);
					// Ок Видяйкин В. 20180129 -					
					//	Дт 08.03 - Кт 25
					Движение =  Движения.Хозрасчетный.Добавить();
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СчетДт = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств;
					Движение.ПодразделениеДт = СтрТз.Подразделения;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства] = ТЗБаза1[Нч].ОбъектСтроительства;
					Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СпособыСтроительства] = СпособыСтр[0].СпособСтроительства;
					Движение.ПодразделениеКт = СтрТз.Подразделения;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТЗ.СтатьяЗатрат;
					Движение.Сумма  = Массив1[0];
					Сумма = Массив1[1];
				КонецЕсли;
				//	Дт 08.03 - Кт 25
				Движение =  Движения.Хозрасчетный.Добавить();
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.СчетДт = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств;
				Движение.ПодразделениеДт = СтрТз.Подразделения;
				Движение.СчетКт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства] = ТЗБаза1[Нч].ОбъектСтроительства;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СпособыСтроительства] = СпособыСтр[СпСтроит].СпособСтроительства;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
				Движение.ПодразделениеКт = СтрТз.Подразделения;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТЗ.СтатьяЗатрат;
				Движение.Сумма = Сумма;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	 	
КонецПроцедуры

Процедура ОсобоеРаспределениеОтделаПрРешенийНУ()
	Массив = Новый Массив;
	Массив1 = Новый Массив;
	МассивКоэф = Новый Массив;
	МассивКоэф1 = Новый Массив;
	Отбор = Новый Структура();
	СпособыСтр = Новый Массив();
	ФормированиеБазыСтроитОбъектовОСНУ();
	Для Каждого ВыбСтрока Из ТЗБаза1НУ Цикл
		МассивКоэф.Добавить(ВыбСтрока.Сумма);
	КонецЦикла; 
	Для Каждого СтрТз Из ТЗПрРешенийНУ Цикл
		ИсхСумма = СтрТЗ.Сумма;
		Если Не Массив = Неопределено Тогда
			Массив.Очистить();
		КонецЕсли;
		// Ок Видяйкин В. 20180129 +  AT-1635555
		//Массив = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(ИсхСумма, МассивКоэф);
		Массив = РаспределитьСуммуПропорциональноКоэффициентамЛокальная(ИсхСумма, МассивКоэф);
		// Ок Видяйкин В. 20180129 -
		Если Массив = Неопределено тогда
		Иначе	
			Для Нч = 0 По (Массив.Количество()-1) Цикл 
				Если СтрТз.ВидУчета = "ВР" И СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы Тогда
					///Не бывает
					Продолжить;
				КонецЕсли;
				Если СтрТз.ВидУчета = "ПР" И СтрТз.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы Тогда
					///Не бывает
					Продолжить;
				КонецЕсли;
				
				//	Дт 08.03 - Кт 25 (БУ) в НУ разбивается на 2 проводки
				
				///1 проводка Дт 25 с "-"
				Движение =  Движения.Хозрасчетный.Добавить();
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.СчетДт = СтрТз.СчетЗатрат;
				//Движение.ВидУчетаДт=СтрТз.ВидУчета;
				Движение.ПодразделениеДт = СтрТз.Подразделения;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = СтрТЗ.СтатьяЗатрат;
				Движение["Сумма" + СтрТз.ВидУчета + "Дт"] = -Массив[Нч]; ///Распределенная сумма берется с "-"
				
				
				///2 проводка Дт 08.03 с "+"
				Сумма = Массив[Нч];
				Отбор.Очистить();
				СпособыСтр.Очистить();
				Отбор.Вставить("ОбъектСтроительства",ТЗБаза1НУ[Нч].ОбъектСтроительства);
				СпособыСтр =  ТЗБазаСтроитНУ.НайтиСтроки(Отбор);
				
				Если СпособыСтр.Количество() = 1 Тогда
					////Если один способ строительства
					
					Движение =  Движения.Хозрасчетный.Добавить();
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СчетДт = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств;
					Движение.ПодразделениеДт = СтрТз.Подразделения;
                    Движение.СчетКт = ПланыСчетов.Хозрасчетный.Вспомогательный;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства] = ТЗБаза1НУ[Нч].ОбъектСтроительства;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СпособыСтроительства] = СпособыСтр[0].СпособСтроительства;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
					//Движение.ВидУчетаДт=СтрТз.ВидУчета;
					Движение["Сумма" + СтрТз.ВидУчета + "Дт"]  = Массив[Нч]; ///Распределенная сумма берется с "+"
					
				ИначеЕсли СпособыСтр.Количество() > 1 Тогда
					////Если два способа строительства, то проводим дополнительное распределение по способам
					
					ИсхСумма1 = Массив[Нч]; ///Сумма для дополнительного распределения берется с "+"
					МассивКоэф1.Очистить();
					Для Каждого ВыбСтрока Из СпособыСтр Цикл
						МассивКоэф1.Добавить(ВыбСтрока.Сумма);	
					КонецЦикла;
					// Ок Видяйкин В. 20180129 +  AT-1635555
					//Массив1 = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(ИсхСумма1, МассивКоэф1);
					Массив1 = РаспределитьСуммуПропорциональноКоэффициентамЛокальная(ИсхСумма1, МассивКоэф1);
					// Ок Видяйкин В. 20180129 -
					
					Движение =  Движения.Хозрасчетный.Добавить(); ////Для 1-го способа стройки
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СчетДт = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств;
					Движение.ПодразделениеДт = СтрТз.Подразделения;
                    Движение.СчетКт = ПланыСчетов.Хозрасчетный.Вспомогательный;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства] = ТЗБаза1НУ[Нч].ОбъектСтроительства;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СпособыСтроительства] = СпособыСтр[0].СпособСтроительства;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
					//Движение.ВидУчетаДт=СтрТз.ВидУчета;
					Движение["Сумма" + СтрТз.ВидУчета + "Дт"] = Массив1[0]; ///Распределенная сумма берется с "+"
					
					Движение =  Движения.Хозрасчетный.Добавить(); ////Для 2-го способа стройки
					//Движение.ВидУчетаДт=СтрТз.ВидУчета;
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.СчетДт = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств;
					Движение.ПодразделениеДт = СтрТз.Подразделения;
                    Движение.СчетКт = ПланыСчетов.Хозрасчетный.Вспомогательный;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства] = ТЗБаза1НУ[Нч].ОбъектСтроительства;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СпособыСтроительства] = СпособыСтр[1].СпособСтроительства;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат] = Константы.СтатьяЗатратОбщепроизводственныхРасходов.Получить();
					Движение["Сумма" + СтрТз.ВидУчета + "Дт"] = Массив1[1]; ///Распределенная сумма берется с "+"
					
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	 	
КонецПроцедуры

Функция ПолучитьСписокОтбораПодр()
	СписокОтбораПодр=Новый СписокЗначений;
	Если ЗатратыФилиала тогда
		///Берем только подразделения филиала
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	бит_СоответствияАналитик.ПраваяАналитика_1 КАК ПодразделениеГоловнойОрганизации
		|ИЗ
		|	РегистрСведений.бит_СоответствияАналитик КАК бит_СоответствияАналитик
		|ГДЕ
		|	бит_СоответствияАналитик.ВидСоответствия = &ВидСоответствия
		|	И бит_СоответствияАналитик.ЛеваяАналитика_1.Владелец = &Вл";
		Запрос.УстановитьПараметр("ВидСоответствия", Справочники.бит_ВидыСоответствийАналитик.ПодразделениеФилиала_ПодразделениеГоловнойОрганизации);
		Запрос.УстановитьПараметр("Вл", РаспределяемаяОрганизация);
		Выборка=Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокОтбораПодр.Добавить(Выборка.ПодразделениеГоловнойОрганизации);
		КонецЦикла; 
	Иначе
		///Берем все подразделения организации, которые не имеют связи с подразделениями филиалов
		Выборка = Справочники.ПодразделенияОрганизаций.ВыбратьИерархически(,Организация);
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	бит_СоответствияАналитик.ПраваяАналитика_1 КАК ПодразделениеГоловнойОрганизации
		|ИЗ
		|	РегистрСведений.бит_СоответствияАналитик КАК бит_СоответствияАналитик
		|ГДЕ
		|	бит_СоответствияАналитик.ВидСоответствия = &ВидСоответствия
		|	И бит_СоответствияАналитик.ПраваяАналитика_1.Владелец = &Вл";
		Запрос.УстановитьПараметр("ВидСоответствия", Справочники.бит_ВидыСоответствийАналитик.ПодразделениеФилиала_ПодразделениеГоловнойОрганизации);
		Запрос.УстановитьПараметр("Вл", Организация);
		МасНенужныхПодразделений = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПодразделениеГоловнойОрганизации");
		Пока Выборка.Следующий() Цикл
			Если МасНенужныхПодразделений.Найти(Выборка.Ссылка) = Неопределено Тогда
				СписокОтбораПодр.Добавить(Выборка.Ссылка);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат СписокОтбораПодр;
	
КонецФункции	

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.Хозрасчетный.ДополнительныеСвойства.Вставить("СуммыНалоговогоУчетаЗаполнены", Истина);
	Движения.Хозрасчетный.Записывать = Истина;
	
	Если ФормироватьПроводкиБУ Тогда
		ОписаниеТипов();
		СписокОтбораПодр = ПолучитьСписокОтбораПодр();
		//#Если Клиент Тогда
		//Состояние("Формирование баз распределения...");
		//#КонецЕсли
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Подразделение КАК Подразделения,
		|	ХозрасчетныйОбороты.СуммаОборотДт - ХозрасчетныйОбороты.СуммаОборотКт КАК Расход,
		|	ХозрасчетныйОбороты.Субконто1 КАК СтатьяЗатрат
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			,
		|			Счет = &Счет25,
		|			,
		|			Организация = &Организация
		|				И Подразделение В (&СпПодр),
		|			,
		|			) КАК ХозрасчетныйОбороты";
		Запрос.УстановитьПараметр("Дата1",ДатаНачала);
		Запрос.УстановитьПараметр("Дата2",КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("Счет25",ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("СпПодр",СписокОтбораПодр);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.Подразделения =  ДепартаментСтроит Тогда
				НовСтр = ТЗСтроительства.Добавить();
			ИначеЕсли (Выборка.Подразделения = ОтделПроектныхРеш) И (ОтделПроектныхРеш<>Справочники.ПодразделенияОрганизаций.ПустаяСсылка()) Тогда
				НовСтр = ТЗПрРешений.Добавить();
			Иначе
				НовСтр = ТЗЭксплАренды.Добавить();
			КонецЕсли;
			НовСтр.Подразделения = Выборка.Подразделения;
			НовСтр.СтатьяЗатрат = Выборка.СтатьяЗатрат;
			НовСтр.Сумма = Выборка.Расход;
		КонецЦикла;
		
		Если РаспрЭксплуатации Тогда
			//#Если Клиент Тогда
			//Состояние("БУ Распределение деп. экспл. ...");
			//#КонецЕсли
			РаспределениеДепартаментаЭксплАренды();
		КонецЕсли;
		Если РаспрДепартаментаСтроит Тогда
			//#Если Клиент Тогда
			//Состояние("БУ Распределение деп. строит. ...");
			//#КонецЕсли
			ФормированиеБазыСтроитОбъектовОС();
			РаспределениеДепартаментаСтроительства();
		КонецЕсли;
		Если РаспрПроектныхРешений Тогда
			//#Если Клиент Тогда
			//Состояние("БУ Распределение отд. пр. реш. ...");
			//#КонецЕсли
			РаспределениеОтделаПрРешений();
		КонецЕсли;
	КонецЕсли;
	
	Если ФормироватьПроводкиНУ тогда
		Список25СчетовНУ=Новый СписокЗначений;
		Список25СчетовНУ.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
		//Список25СчетовНУ.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
		ОписаниеТиповНУ();
		СписокОтбораПодр=ПолучитьСписокОтбораПодр();
		#Если Клиент Тогда
		Состояние("Формирование баз распределения...");
		#КонецЕсли
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НалоговыйОбороты.Подразделение КАК Подразделения,
		|	НалоговыйОбороты.Счет,
		|	НалоговыйОбороты.СуммаНУОборотДт - НалоговыйОбороты.СуммаНУОборотКт КАК РасходНУ,
		|	НалоговыйОбороты.СуммаПРОборотДт - НалоговыйОбороты.СуммаПРОборотКт КАК РасходПР,
		|	НалоговыйОбороты.СуммаВРОборотДт - НалоговыйОбороты.СуммаВРОборотКт КАК РасходВР,
		|	НалоговыйОбороты.Субконто1 КАК СтатьяЗатрат
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			,
		|			Счет В (&СпСчет25),
		|			,
		|			Организация = &Организация
		|				И Подразделение В (&СпПодр),
		|			,
		|			) КАК НалоговыйОбороты";
		Запрос.УстановитьПараметр("Дата1",ДатаНачала);
		Запрос.УстановитьПараметр("Дата2",КонецДня(ДатаОкончания));
		Запрос.УстановитьПараметр("СпСчет25",Список25СчетовНУ);
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("СпПодр",СписокОтбораПодр);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.РасходНУ <> 0 тогда
				Если Выборка.Подразделения =  ДепартаментСтроит Тогда
					НовСтр 				= ТЗСтроительстваНУ.Добавить();
				ИначеЕсли (Выборка.Подразделения = ОтделПроектныхРеш) И (ОтделПроектныхРеш<>Справочники.ПодразделенияОрганизаций.ПустаяСсылка()) Тогда
					НовСтр 				= ТЗПрРешенийНУ.Добавить();
				Иначе
					НовСтр 				= ТЗЭксплАрендыНУ.Добавить();
				КонецЕсли;
				НовСтр.ВидУчета			= "НУ";
				НовСтр.Подразделения 	= Выборка.Подразделения;
				НовСтр.СтатьяЗатрат 	= Выборка.СтатьяЗатрат;
				НовСтр.СчетЗатрат 		= Выборка.Счет;
				НовСтр.Сумма 			= Выборка.РасходНУ;
				НовСтр.ПрямыеРасходы	= ОпределитьПрямыеРасходы(Выборка.Счет,Выборка.Подразделения,Выборка.СтатьяЗатрат);
			КонецЕсли;
			Если Выборка.РасходПР <> 0 тогда
				Если Выборка.Подразделения =  ДепартаментСтроит Тогда
					НовСтр 				= ТЗСтроительстваНУ.Добавить();
				ИначеЕсли (Выборка.Подразделения = ОтделПроектныхРеш) И (ОтделПроектныхРеш<>Справочники.ПодразделенияОрганизаций.ПустаяСсылка()) Тогда
					НовСтр 				= ТЗПрРешенийНУ.Добавить();
				Иначе
					НовСтр 				= ТЗЭксплАрендыНУ.Добавить();
				КонецЕсли;
				НовСтр.ВидУчета			= "ПР";
				НовСтр.Подразделения 	= Выборка.Подразделения;
				НовСтр.СтатьяЗатрат 	= Выборка.СтатьяЗатрат;
				НовСтр.СчетЗатрат 		= Выборка.Счет;
				НовСтр.Сумма 			= Выборка.РасходПР;
				НовСтр.ПрямыеРасходы	= ОпределитьПрямыеРасходы(Выборка.Счет,Выборка.Подразделения,Выборка.СтатьяЗатрат);
			КонецЕсли;
			Если Выборка.РасходВР <> 0 тогда
				Если Выборка.Подразделения =  ДепартаментСтроит Тогда
					НовСтр 				= ТЗСтроительстваНУ.Добавить();
				ИначеЕсли (Выборка.Подразделения = ОтделПроектныхРеш) И (ОтделПроектныхРеш<>Справочники.ПодразделенияОрганизаций.ПустаяСсылка()) Тогда
					НовСтр 				= ТЗПрРешенийНУ.Добавить();
				Иначе
					НовСтр 				= ТЗЭксплАрендыНУ.Добавить();
				КонецЕсли;
				НовСтр.ВидУчета			= "ВР";
				НовСтр.Подразделения 	= Выборка.Подразделения;
				НовСтр.СтатьяЗатрат 	= Выборка.СтатьяЗатрат;
				НовСтр.СчетЗатрат 		= Выборка.Счет;
				НовСтр.Сумма 			= Выборка.РасходВР;
				НовСтр.ПрямыеРасходы	= ОпределитьПрямыеРасходы(Выборка.Счет,Выборка.Подразделения,Выборка.СтатьяЗатрат);
			КонецЕсли;
			
		КонецЦикла;
		
		Если РаспрЭксплуатации Тогда
			//#Если Клиент Тогда
			//Состояние("НУ Распределение деп. экспл. ...");
			//#КонецЕсли
			РаспределениеДепартаментаЭксплАрендыНУ();
		КонецЕсли;
		Если РаспрДепартаментаСтроит Тогда
			//#Если Клиент Тогда
			//Состояние("НУ Распределение деп. строит. ...");
			//#КонецЕсли
			ФормированиеБазыСтроитОбъектовОСНУ();
			РаспределениеДепартаментаСтроительстваНУ();
		КонецЕсли;
		Если РаспрПроектныхРешений Тогда
			//#Если Клиент Тогда
			//Состояние("НУ Распределение отд. пр. реш. ...");
			//#КонецЕсли
			РаспределениеОтделаПрРешенийНУ();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Функция определяет принадлежность к прямым расходам
// Возвращаемое значение:
//   Булево   - Истина означает прямые расходы, ложь - косвенные
//
Функция ОпределитьПрямыеРасходы(Счет, Подразделение, СтатьяЗатрат)
	
	ЗапросПрямыеРасходы.УстановитьПараметр("Организация", Организация);
	ЗапросПрямыеРасходы.УстановитьПараметр("ПериодДействия", Дата);
	ЗапросПрямыеРасходы.УстановитьПараметр("Счет", Счет);
	ЗапросПрямыеРасходы.УстановитьПараметр("Подразделение", Подразделение);
	ЗапросПрямыеРасходы.УстановитьПараметр("СтатьяЗатрат", СтатьяЗатрат);
	ЗапросПрямыеРасходы.УстановитьПараметр("ВидРасходовНУ", СтатьяЗатрат.ВидРасходовНУ);
	
	ТЗПрямыеРасходы = ЗапросПрямыеРасходы.Выполнить().Выгрузить();
	
	Если ТЗПрямыеРасходы.Количество() > 0 Тогда Возврат Истина; КонецЕсли;
	
	ЗапросПрямыеРасходы.УстановитьПараметр("Подразделение", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	ТЗПрямыеРасходы = ЗапросПрямыеРасходы.Выполнить().Выгрузить();
	
	Если ТЗПрямыеРасходы.Количество() > 0 Тогда Возврат Истина; КонецЕсли;

	ЗапросПрямыеРасходы.УстановитьПараметр("СтатьяЗатрат", Справочники.СтатьиЗатрат.ПустаяСсылка());
	ТЗПрямыеРасходы = ЗапросПрямыеРасходы.Выполнить().Выгрузить();
	
	Если ТЗПрямыеРасходы.Количество() > 0 Тогда Возврат Истина; КонецЕсли;
	
	ЗапросПрямыеРасходы.УстановитьПараметр("ВидРасходовНУ", Перечисления.ВидыРасходовНУ.ПустаяСсылка());
	ТЗПрямыеРасходы = ЗапросПрямыеРасходы.Выполнить().Выгрузить();
	
	Если ТЗПрямыеРасходы.Количество() > 0 Тогда Возврат Истина; КонецЕсли;
	
	Возврат Ложь;

КонецФункции // ОпределитьПрямыеРасходы()

// Ок Видяйкин 20180129 +  AT-1635555
// функция из общего модуля "РаспределитьСуммуПропорциональноКоэффициентам()" останавливает работу, если есть отрицательные значения коэффициентов.
// Функция РаспределитьСуммуПропорциональноКоэффициентамЛокальная работает с отрицательными значениями. 
// 
//
////////////////////////////////////////////////////////////////////////////////
// Математические процедуры и функции.

// Выполняет пропорциональное распределение суммы в соответствии
// с заданными коэффициентами распределения.
//
// Параметры:
//  РаспределяемаяСумма - Число - сумма, которую надо распределить;
//  МассивКоэффициентов - Массив - коэффициенты распределения;
//  Точность - Число - точность округления при распределении. Необязателен.
//
// Возвращаемое значение:
//  Массив - массив размерностью равный массиву коэффициентов, содержит
//           суммы в соответствии с весом коэффициента (из массива коэффициентов).
//           В случае если распределить не удалось (сумма = 0, кол-во коэффициентов = 0,
//           или суммарный вес коэффициентов = 0), тогда возвращается значение Неопределено.
//
Функция РаспределитьСуммуПропорциональноКоэффициентамЛокальная(Знач РаспределяемаяСумма, Коэффициенты, Знач Точность = 2) 
	
	Если Коэффициенты.Количество() = 0 Или Не ЗначениеЗаполнено(РаспределяемаяСумма) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИндексМаксимальногоКоэффициента = 0;
	МаксимальныйКоэффициент = 0;
	РаспределеннаяСумма = 0;
	СуммаКоэффициентов  = 0;
	
	Для Индекс = 0 По Коэффициенты.Количество() - 1 Цикл
		Коэффициент = Коэффициенты[Индекс];
		
		АбсолютноеЗначениеКоэффициента = ?(Коэффициент > 0, Коэффициент, -Коэффициент);
		Если МаксимальныйКоэффициент < АбсолютноеЗначениеКоэффициента Тогда
			МаксимальныйКоэффициент = АбсолютноеЗначениеКоэффициента;
			ИндексМаксимальногоКоэффициента = Индекс;
		КонецЕсли;
		
		СуммаКоэффициентов = СуммаКоэффициентов + Коэффициент;
	КонецЦикла;
	
	Если СуммаКоэффициентов = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = Новый Массив(Коэффициенты.Количество());
	
	Для Индекс = 0 По Коэффициенты.Количество() - 1 Цикл
		Результат[Индекс] = Окр(РаспределяемаяСумма * Коэффициенты[Индекс] / СуммаКоэффициентов, Точность, 1);
		РаспределеннаяСумма = РаспределеннаяСумма + Результат[Индекс];
	КонецЦикла;
	
	// Погрешности округления отнесем на коэффициент с максимальным весом.
	Если Не РаспределеннаяСумма = РаспределяемаяСумма Тогда
		Результат[ИндексМаксимальногоКоэффициента] = Результат[ИндексМаксимальногоКоэффициента] + РаспределяемаяСумма - РаспределеннаяСумма;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
// Ок Видяйкин 20180129 -

#КонецЕсли