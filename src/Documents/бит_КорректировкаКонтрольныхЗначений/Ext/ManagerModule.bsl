#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки	 - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

// Функция подготавливает параметры проведения.
// 
// Параметры:
//  ДокументСсылка - ДокументСсылка.бит_КорректировкаКонтрольныхЗначений - ссылка на документ.
//  Отказ          - Булево - признак обнаружения ошибки и отказа от дальнейших действий.
//
// Возвращаемое значение:
//  Структура - структура параметров проведения.
//
Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура(); 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Сценарий КАК Сценарий,
	|	Реквизиты.РежимПринятияКУчету КАК РежимПринятияКУчету,
	|	Реквизиты.СценарийКонтролируемый КАК СценарийКонтролируемый,
	|	Реквизиты.ВидКорректировки КАК ВидКорректировки,
	|	Реквизиты.ВидОперации КАК ВидОперации
	|ИЗ
	|	Документ.бит_КорректировкаКонтрольныхЗначений КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	Результат = Запрос.Выполнить().Выгрузить();
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Результат[0]);
	
	Если НЕ бит_ОбщегоНазначения.ВалютаУпрУчетаУстановлена(Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;

	НомераТаблиц = Новый Структура(); 
	ТекстЗапроса = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)
				 + ТекстЗапросаКонтрольныеЗначенияБюджетов(НомераТаблиц)
				 + ТекстЗапросаПроверкаКонтрольныхЗначений(НомераТаблиц);
				 
	Запрос = Новый Запрос(); 
	Запрос.УстановитьПараметр("Ссылка",				ДокументСсылка);
	Запрос.УстановитьПараметр("ВидКорректировки",	Реквизиты.ВидКорректировки);
	Запрос.УстановитьПараметр("ИмяСписка",			НСтр("ru='СуммыКорректировок'")); 
	Запрос.УстановитьПараметр("ПредставлениеСписка",НСтр("ru='Суммы корректировок'"));

	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла; 	
	ПараметрыПроведения.Вставить("Реквизиты", Реквизиты);
	
	ПроверкаКонтрольныхГраницыПериода = ПараметрыПроведения["ПроверкаКонтрольныхГраницыПериода"];
	Если НЕ ПроверкаКонтрольныхГраницыПериода.Количество() = 0 Тогда
		СтрокаТаблицы = ПроверкаКонтрольныхГраницыПериода[0];
		ПроверкаКонтрольныхЗначенийРеквизиты = ПараметрыПроведения["ПроверкаКонтрольныхЗначенийРеквизиты"];
		ПроверкаКонтрольныхЗначенийРеквизиты.ЗаполнитьЗначения(СтрокаТаблицы.НачалоПериода, "НачалоПериода");
		ПроверкаКонтрольныхЗначенийРеквизиты.ЗаполнитьЗначения(СтрокаТаблицы.КонецПериода, "КонецПериода");
	КонецЕсли;
	
	ПроводитьПослеУтверждения = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("бит_ПроводитьДокументыПослеУтверждения");
	Если ПроводитьПослеУтверждения И Реквизиты.РежимПринятияКУчету = 1 Тогда
		ПараметрыСтатуса = бит_Визирование.ПолучитьСтатусОбъекта(ДокументСсылка);
		ТекущийСтатус = ПараметрыСтатуса.Статус;
		Если ТекущийСтатус <> Справочники.бит_СтатусыОбъектов.КорректировкаКонтрольныхЗначений_Утвержден Тогда
			ПараметрыПроведения.КонтрольныеЗначенияБюджетов.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	Возврат ПараметрыПроведения;
	
КонецФункции 

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Процедура заполняет первоначальное значение служебного реквизита РежимПринятияКУчету,
//  в зависимости от значения константы ПроводитьПослеУтверждения.
//
Процедура ЗаполнитьВерсиюПринятийКУчету() Экспорт
	
	ПроводитьПослеУтверждения = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("бит_ПроводитьДокументыПослеУтверждения");
	Если ПроводитьПослеУтверждения = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КорректировкаКонтрольныхЗначений.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.бит_КорректировкаКонтрольныхЗначений КАК КорректировкаКонтрольныхЗначений
	|ГДЕ
	|	КорректировкаКонтрольныхЗначений.РежимПринятияКУчету = 1";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Запрос = Новый Запрос();
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КорректировкаКонтрольныхЗначений.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.бит_КорректировкаКонтрольныхЗначений КАК КорректировкаКонтрольныхЗначений
		|ГДЕ
		|	КорректировкаКонтрольныхЗначений.Проведен
		|	И КорректировкаКонтрольныхЗначений.ОтправленНаСогласование";
		
		Выборка = Запрос.Выполнить().Выбрать();
	
		НачатьТранзакцию();
		Попытка
			Пока Выборка.Следующий() Цикл
				ДокументСсылка = Выборка.Ссылка;
				ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
				ДокументОбъект.РежимПринятияКУчету	= 1;
				ДокументОбъект.ОбменДанными.Загрузка= Истина;
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект, Ложь, Ложь, РежимЗаписиДокумента.Запись);
			КонецЦикла;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

// Процедура проверяет наличие необходимых остатков в регистре КонтрольныеЗначнияБюджетов.
//
// Параметры:
//  ТаблицаДляКонтроля	 - ТаблицаЗначений - данные документа для проверки. 
//  РеквизитыДляКонтроля - ТаблицаЗначений - реквизиты документа для проверки.
//  Отказ			 	 - Булево - признак проведения документа.
//
Процедура ПроверитьОстаткиПоКонтрольнымЗначениям(ТаблицаДляКонтроля, РеквизитыДляКонтроля, Отказ) Экспорт
	
	Если ТаблицаДляКонтроля.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	// Получаем имя типа Сценарии бюджетирования в зависимости от текущего решения.
	ИмяТипаСценарии = бит_ОбщегоНазначения.ПолучитьИмяТипаСценарииБюджетирования();
	
	Реквизиты 	   = РеквизитыДляКонтроля[0];
	ВалютаСценария = Реквизиты.ВалютаСценария;
	
	ТаблицаДляКонтроля.Колонки.Добавить("Сценарий", Новый ОписаниеТипов(ИмяТипаСценарии));
	ТаблицаДляКонтроля.ЗаполнитьЗначения(Реквизиты.СценарийДляПроверки, "Сценарий");
	
	ДатаНач = бит_Бюджетирование.ПолучитьНачалоПериода(Реквизиты.НачалоПериода, Реквизиты.ПериодичностьКонтроля);
	ДатаКон = бит_Бюджетирование.ПолучитьКонецПериода(Реквизиты.КонецПериода,	Реквизиты.ПериодичностьКонтроля);
	
	МассивИсключений = Новый Массив;
	МассивИсключений.Добавить("Сценарий");
	МассивИсключений.Добавить("СтатьяОборотов");
	
	НастройкиИзмерений = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("бит_НастройкиДополнительныхИзмерений");
	ИзмеренияКонтроля = бит_КонтрольПоБюджету.КонструкторСтруктурыИзмеренияКонтроля(МассивИсключений,,,НастройкиИзмерений);
	
	бит_КонтрольПоБюджету.СвернутьТаблицуКонтроля(ТаблицаДляКонтроля,ИзмеренияКонтроля,Реквизиты.ПериодичностьКонтроля);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ИзмеренияКонтроля"            ,ИзмеренияКонтроля);
	СтруктураПараметров.Вставить("КонтролироватьНеУстановленные",Истина);
	СтруктураПараметров.Вставить("Сценарий"      				,Реквизиты.СценарийДляПроверки);
	
	Если Реквизиты.ВидОперации = Перечисления.бит_ВидыОперацийКорректировкаКонтрольныхЗначений.КонтрольЗаявок Тогда
		СтруктураПараметров.Вставить("РежимКонтроля" ,"Заявки");
	ИначеЕсли Реквизиты.ВидОперации = Перечисления.бит_ВидыОперацийКорректировкаКонтрольныхЗначений.КонтрольГрафиковДоговоров Тогда
		СтруктураПараметров.Вставить("РежимКонтроля" ,"ГрафикиДоговоров");
	Иначе	
		СтруктураПараметров.Вставить("РежимКонтроля" ,"Бюджет");
	КонецЕсли;
	
	ТекстЗапроса = бит_КонтрольПоБюджету.СформироватьТекстЗапросаДляКонтроля(СтруктураПараметров);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	МассивСтатей = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ТаблицаДляКонтроля.ВыгрузитьКолонку("СтатьяОборотов"));
	
	Запрос.УстановитьПараметр("ДатаНачала"    ,ДатаНач);
	Запрос.УстановитьПараметр("ДатаОкончания" ,ДатаКон);
	Запрос.УстановитьПараметр("МассивСтатьяОборотов", МассивСтатей);
	Запрос.УстановитьПараметр("Ссылка"              , Реквизиты.Регистратор);
	Запрос.УстановитьПараметр("ТаблицаДляКонтроля"  , ТаблицаДляКонтроля);
	Запрос.УстановитьПараметр("Сценарий"      		  , Реквизиты.СценарийДляПроверки);
	Запрос.УстановитьПараметр("СценарийКонтролируемый", Реквизиты.СценарийКонтролируемый);
	
	бит_КонтрольПоБюджету.ЗаполнитьПараметрыПоИзмерениямКонтроля(ТаблицаДляКонтроля,ИзмеренияКонтроля,Запрос);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Разность < 0 ИЛИ Выборка.КоличествоРазность < 0 Тогда
			
			флЕстьПревышение = Истина;
			
			ПредставлениеПериода = бит_Бюджетирование.СформироватьПредставлениеПериода(Выборка.Период, Реквизиты.ПериодичностьКонтроля);   
			
			// Соберем информацию о заполнении доп. аналитик.
			ТекстАналитика = "";
			Для каждого КлючИЗначение Из ИзмеренияКонтроля Цикл
				
				ИмяИзмерения = КлючИЗначение.Ключ;
				Синоним = КлючИЗначение.Значение.Синоним;
				
				Если Выборка["Есть"+ИмяИзмерения] = 1 Тогда
					ЗначениеИзмерения = Выборка[ИмяИзмерения];				   
					ТекстАналитика = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстАналитика,"- "+Синоним+" """+ЗначениеИзмерения+"""",Символы.ПС);
				КонецЕсли; 
			КонецЦикла; 
			
			// Сформируем текст сообщения.
			ТекстСообщения = СтрШаблон(НСтр("ru = 'По сценарию ""%1"",%2по аналитике:%3- Статья оборотов ""%4""'"),
								Реквизиты.СценарийДляПроверки, Символы.ПС, Символы.ПС, Выборка.СтатьяОборотов);
								
			Если НЕ ПустаяСтрока(ТекстАналитика) Тогда
				ТекстСообщения = ТекстСообщения + Символы.ПС + ТекстАналитика;
			КонецЕсли; 
			
			ТекстСообщения = ТекстСообщения + " " + СтрШаблон(НСтр("ru = 'превышен бюджет периода ""%1"".'"),
								ПредставлениеПериода);
								
			Если Выборка.Разность < 0 Тогда
				ТекстСообщения = ТекстСообщения + Символы.ПС 
							   + СтрШаблон(НСтр("ru = 'Остаток бюджета: %1, сумма в документе: %2, не достаточно: %3.'"), 
								 бит_ОбщегоНазначения.ФорматСумм(Выборка.Остаток,ВалютаСценария,"0.00"),
								 бит_ОбщегоНазначения.ФорматСумм(Выборка.Сумма,ВалютаСценария,"0.00"),
								 бит_ОбщегоНазначения.ФорматСумм(-Выборка.Разность,ВалютаСценария,"0.00"));
			КонецЕсли; 
			
			Если Выборка.КоличествоРазность <0 Тогда
				ТекстСообщения = ТекстСообщения + Символы.ПС 
							   + СтрШаблон(НСтр("ru = 'Количество бюджета: %1, количество в документе: %2, не достаточно: %3.'"),
								 бит_ОбщегоНазначения.ФорматСумм(Выборка.КоличествоОстаток,,"0.000"),
								 бит_ОбщегоНазначения.ФорматСумм(Выборка.Количество,,"0.000"),
								 бит_ОбщегоНазначения.ФорматСумм(-Выборка.КоличествоРазность,,"0.000"));
			КонецЕсли; 
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, , ,Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьКонтрольныеЗначениябюджетов(КонтрольныеЗначения, Реквизиты, Движения, Отказ) Экспорт

	ТаблицаДвижений = Движения.бит_КонтрольныеЗначенияБюджетов.Выгрузить();
	ТаблицаДвижений.Очистить();
	
	Для каждого СтрокаТаблицы Из КонтрольныеЗначения Цикл
		НоваяСтрока = ТаблицаДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла; 
	
	Движения.бит_КонтрольныеЗначенияБюджетов.Записывать = Истина;
	Движения.бит_КонтрольныеЗначенияБюджетов.мТаблицаДвижений = ТаблицаДвижений;
	Движения.бит_КонтрольныеЗначенияБюджетов.ДобавитьДвижение();

КонецПроцедуры
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
 
Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаСуммыКорректировок", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(&ИмяСписка КАК СТРОКА(50)) КАК ИмяСписка,
	|	ВЫРАЗИТЬ(&ПредставлениеСписка КАК СТРОКА(50)) КАК ПредставлениеСписка,
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.Период КАК Период,
	|	Таблица.ВидДвижения КАК ВидДвижения,
	|	Таблица.ЦФО КАК ЦФО,
	|	Таблица.СтатьяОборотов КАК СтатьяОборотов,
	|	Таблица.Сумма КАК Сумма,
	|	Таблица.Количество КАК Количество,
	|	Таблица.ИД КАК ИД,
	|	Таблица.ИДВладельца КАК ИДВладельца,
	|	Таблица.Аналитика_1 КАК Аналитика_1,
	|	Таблица.Аналитика_2 КАК Аналитика_2,
	|	Таблица.Аналитика_3 КАК Аналитика_3,
	|	Таблица.Аналитика_4 КАК Аналитика_4,
	|	Таблица.Аналитика_5 КАК Аналитика_5,
	|	Таблица.Аналитика_6 КАК Аналитика_6,
	|	Таблица.Аналитика_7 КАК Аналитика_7,
	|	Таблица.Контрагент КАК Контрагент,
	|	Таблица.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Таблица.Проект КАК Проект,
	|	Таблица.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	Таблица.БанковскийСчет КАК БанковскийСчет
	|ПОМЕСТИТЬ ТаблицаСуммыКорректировок
	|ИЗ
	|	Документ.бит_КорректировкаКонтрольныхЗначений.СуммыКорректировок КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + бит_ОбщегоНазначения.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПроверкаКонтрольныхЗначений(НомераТаблиц)

	НомераТаблиц.Вставить("ПроверкаКонтрольныхЗначенийРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПроверкаКонтрольныхГраницыПериода", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПроверкаКонтрольныхЗначений", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Сценарий КАК Сценарий,
	|	Реквизиты.СценарийКонтролируемый КАК СценарийКонтролируемый,
	|	ВЫБОР
	|		КОГДА Реквизиты.Сценарий.ПериодичностьКонтроля = ЗНАЧЕНИЕ(Перечисление.бит_ПериодичностьПланирования.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.бит_ПериодичностьПланирования.Месяц)
	|		ИНАЧЕ Реквизиты.Сценарий.ПериодичностьКонтроля
	|	КОНЕЦ КАК ПериодичностьКонтроля,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бит_ВидыОперацийКорректировкаКонтрольныхЗначений.КонтрольБюджета)
	|			ТОГДА Реквизиты.СценарийКонтролируемый
	|		ИНАЧЕ Реквизиты.Сценарий
	|	КОНЕЦ КАК СценарийДляПроверки,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бит_ВидыОперацийКорректировкаКонтрольныхЗначений.КонтрольБюджета)
	|			ТОГДА Реквизиты.СценарийКонтролируемый.Валюта
	|		ИНАЧЕ Реквизиты.Сценарий.Валюта
	|	КОНЕЦ КАК ВалютаСценария,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК НачалоПериода,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК КонецПериода,
	|	Реквизиты.ВидОперации КАК ВидОперации
	|ИЗ
	|	Документ.бит_КорректировкаКонтрольныхЗначений КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаДокумента.Период) КАК КонецПериода,
	|	МИНИМУМ(ТаблицаДокумента.Период) КАК НачалоПериода
	|ИЗ
	|	ТаблицаСуммыКорректировок КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидДвижения <> ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.ИмяСписка КАК ИмяСписка,
	|	ТаблицаДокумента.ПредставлениеСписка КАК ПредставлениеСписка,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.ВидДвижения КАК ВидДвижения,
	|	ТаблицаДокумента.ЦФО КАК ЦФО,
	|	ТаблицаДокумента.СтатьяОборотов КАК СтатьяОборотов,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.ИД КАК ИД,
	|	ТаблицаДокумента.ИДВладельца КАК ИДВладельца,
	|	ТаблицаДокумента.Аналитика_1 КАК Аналитика_1,
	|	ТаблицаДокумента.Аналитика_2 КАК Аналитика_2,
	|	ТаблицаДокумента.Аналитика_3 КАК Аналитика_3,
	|	ТаблицаДокумента.Аналитика_4 КАК Аналитика_4,
	|	ТаблицаДокумента.Аналитика_5 КАК Аналитика_5,
	|	ТаблицаДокумента.Аналитика_6 КАК Аналитика_6,
	|	ТаблицаДокумента.Аналитика_7 КАК Аналитика_7,
	|	ТаблицаДокумента.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ТаблицаДокумента.Проект КАК Проект,
	|	ТаблицаДокумента.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ТаблицаДокумента.БанковскийСчет КАК БанковскийСчет
	|ИЗ
	|	ТаблицаСуммыКорректировок КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ВидДвижения <> ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)";

	Возврат ТекстЗапроса + бит_ОбщегоНазначения.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаКонтрольныеЗначенияБюджетов(НомераТаблиц)

	НомераТаблиц.Вставить("КонтрольныеЗначенияБюджетов", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаСуммыКорректировок.ИмяСписка КАК ИмяСписка,
	|	ТаблицаСуммыКорректировок.ПредставлениеСписка КАК ПредставлениеСписка,
	|	ТаблицаСуммыКорректировок.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСуммыКорректировок.Период КАК Период,
	|	ТаблицаСуммыКорректировок.ВидДвижения КАК ВидДвижения,
	|	ТаблицаСуммыКорректировок.ЦФО КАК ЦФО,
	|	ТаблицаСуммыКорректировок.СтатьяОборотов КАК СтатьяОборотов,
	|	ВЫБОР
	|		КОГДА &ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.бит_ВидыКорректировокКонтрольныхЗначений.ВозвратЛимита)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|					ТОГДА ТаблицаСуммыКорректировок.Сумма
	|				ИНАЧЕ -ТаблицаСуммыКорректировок.Сумма
	|			КОНЕЦ
	|	КОНЕЦ КАК СуммаСценарийКонтроль,
	|	ВЫБОР
	|		КОГДА &ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.бит_ВидыКорректировокКонтрольныхЗначений.ВозвратЛимита)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|					ТОГДА ТаблицаСуммыКорректировок.Количество
	|				ИНАЧЕ -ТаблицаСуммыКорректировок.Количество
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоСценарийКонтроль,
	|	ВЫБОР
	|		КОГДА &ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.бит_ВидыКорректировокКонтрольныхЗначений.ВозвратЛимита)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|						ТОГДА -ТаблицаСуммыКорректировок.Сумма
	|					ИНАЧЕ ТаблицаСуммыКорректировок.Сумма
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаСценарийИсполнение,
	|	ВЫБОР
	|		КОГДА &ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.бит_ВидыКорректировокКонтрольныхЗначений.ВозвратЛимита)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|						ТОГДА -ТаблицаСуммыКорректировок.Количество
	|					ИНАЧЕ ТаблицаСуммыКорректировок.Количество
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоСценарийИсполнение,
	|	ТаблицаСуммыКорректировок.Сумма КАК Сумма,
	|	ТаблицаСуммыКорректировок.Количество КАК Количество,
	|	ТаблицаСуммыКорректировок.Аналитика_1 КАК Аналитика_1,
	|	ТаблицаСуммыКорректировок.Аналитика_2 КАК Аналитика_2,
	|	ТаблицаСуммыКорректировок.Аналитика_3 КАК Аналитика_3,
	|	ТаблицаСуммыКорректировок.Аналитика_4 КАК Аналитика_4,
	|	ТаблицаСуммыКорректировок.Аналитика_5 КАК Аналитика_5,
	|	ТаблицаСуммыКорректировок.Аналитика_6 КАК Аналитика_6,
	|	ТаблицаСуммыКорректировок.Аналитика_7 КАК Аналитика_7,
	|	ТаблицаСуммыКорректировок.Контрагент КАК Контрагент,
	|	ТаблицаСуммыКорректировок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ТаблицаСуммыКорректировок.Проект КАК Проект,
	|	ТаблицаСуммыКорректировок.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ТаблицаСуммыКорректировок.БанковскийСчет КАК БанковскийСчет
	|ИЗ
	|	ТаблицаСуммыКорректировок КАК ТаблицаСуммыКорректировок";

	Возврат ТекстЗапроса + бит_ОбщегоНазначения.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#КонецОбласти 

#КонецЕсли
