#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УведомлениеОбОстаткахПрослеживаемыхТоваров") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"УведомлениеОбОстаткахПрослеживаемыхТоваров", 
			"Уведомление об остатках прослеживаемого товара",
			ПечатьУведомленияОбОстаткахПрослеживаемогоТовара(МассивОбъектов, ОбъектыПечати));
			
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "УведомлениеОбОстаткахПрослеживаемыхТоваров";
	КомандаПечати.Представление  = НСтр("ru = 'Печать'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Уведомление об остатках прослеживаемых товаров'");
	КомандаПечати.Обработчик     = "ПрослеживаемостьФормыКлиент.ВыполнитьКомандуПечатиУведомленияОбОСтаткахПрослеживаемыхТоваров";
	КомандаПечати.СписокФорм     = "ФормаДокументаОсновная,ФормаДокументаКорректировочная,ФормаСписка";
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаДокумента"
		И ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;
	
	Если (Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ)) Тогда
		ВидУведомления= ОпределитьВидУведомления(
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "НомерКорректировки"));
	ИначеЕсли (Параметры.Свойство("Основание") И ЗначениеЗаполнено(Параметры.Основание)) Тогда
		ВидУведомления= ОпределитьВидУведомления(
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Основание, "НомерКорректировки"));
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ФормыУведомлений = ПолучитьСоответствиеВидовУведомленийФормам();
	ВыбраннаяФорма = ФормыУведомлений[ВидУведомления];
	Если ВыбраннаяФорма = Неопределено Тогда
		ВыбраннаяФорма = "ФормаДокументаОсновная";
		Параметры.Вставить("ИзменитьВидОперации");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ПодготовкаПараметровПроведенияДокумента

// Функция подготавливает параметры проведения документа
Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ПрослеживаемостьПереопределяемый.ТекстЗапросаТаблицаТоваровУведомлениеОбОстатках(
																								НомераТаблиц, ДокументСсылка);
	
	ПрослеживаемостьПереопределяемый.ДополнительныеПараметрыЗапроса(НомераТаблиц, Запрос);
	
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьУведомленияОбОстаткахПрослеживаемогоТовара(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = ПодготовитьТаблицыУведомленияОбОстаткахПрослеживаемогоТовара(МассивОбъектов);
	
	Возврат ТабДокумент;

КонецФункции

Функция ПодготовитьТаблицыУведомленияОбОстаткахПрослеживаемогоТовара(МассивДокументов)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ПолеСверху = 10;
	ТабДокумент.ПолеСнизу  = 10;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УведомлениеОбОстаткахПрослеживаемыхТоваров";
	ТабДокумент.ЭкземпляровНаСтранице = 1;
	
	ПервыйДокумент = Истина;
	
	Для каждого ТекущееЗначение Из МассивДокументов Цикл
		
		Результат = ПолучитьПечатнуюФормуУведомлениеОбОстаткахПрослеживаемыхТоваров(ТекущееЗначение);
		
		Если НЕ ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли; 
		
		ПервыйДокумент = Ложь;
		
		ТабДокумент.Вывести(Результат);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьПечатнуюФормуУведомлениеОбОстаткахПрослеживаемыхТоваров(Документ) Экспорт
	
	ПараметрыПечати = ПараметрыУведомления(Документ);
	
	Контейнер = ИнтерфейсыВзаимодействияБРО.СтруктураКонтейнераДанных(ПараметрыПечати);
	
	Если Контейнер.Свойство("Ошибки") 
		И Контейнер.Ошибки.Количество() > 0 Тогда
		
		Возврат Новый ТабличныйДокумент;
	
	КонецЕсли;
	
	ЗаполнитьДополнительныеРеквизиты(Контейнер, Документ);
	
	ЗаполнитьСодержательнуюЧасть(Контейнер.СодержательнаяЧасть, Документ);
	
	Результат = ИнтерфейсыВзаимодействияБРО.ПечатныйБланкСформированныйАлгоритмамиРегламентированныхОтчетов(Контейнер);
	
	Если Результат.Количество() = 0 Тогда
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;
	
	Возврат ПолучитьИзВременногоХранилища(Результат[0]);
	
КонецФункции

Функция ВыгрузитьУведомлениеОбОстаткахПрослеживаемыхТоваров(Документ) Экспорт
	
	ПараметрыВыгрузки = ПараметрыУведомления(Документ);
	
	Контейнер = ИнтерфейсыВзаимодействияБРО.СтруктураКонтейнераДанных(ПараметрыВыгрузки);
	
	Если Контейнер.Свойство("Ошибки") 
		И Контейнер.Ошибки.Количество() > 0 Тогда
		
		Возврат Новый Структура("АдресФайлаВыгрузки,ИмяФайлаВыгрузки,Ошибки",
					Контейнер.АдресФайлаВыгрузки, Контейнер.ИмяФайлаВыгрузки, Контейнер.Ошибки);
	
	КонецЕсли;
	
	ЗаполнитьДополнительныеРеквизиты(Контейнер, Документ);
	
	ЗаполнитьСодержательнуюЧасть(Контейнер.СодержательнаяЧасть, Документ);
	
	Результат = ИнтерфейсыВзаимодействияБРО.ВыгрузитьДанныеАлгоритмамиРегламентированногоОтчета(Контейнер);
	
	Возврат Новый Структура("АдресФайлаВыгрузки,ИмяФайлаВыгрузки,Ошибки",
					Результат.АдресФайлаВыгрузки, Результат.ИмяФайлаВыгрузки, Результат.Ошибки);
	
КонецФункции

Функция ПараметрыУведомления(Документ)
	
	ПараметрыВыгрузки = Новый Структура();
	ПараметрыВыгрузки.Вставить("ИсточникОтчета", "РегламентированныйОтчетПрослеживаемыеТоварыОстатки");
	ПараметрыВыгрузки.Вставить("ВыбраннаяФорма", "ФормаОтчета2021Кв3");
	ПараметрыВыгрузки.Вставить("ВерсияФормата",  "5.01");
	ПараметрыВыгрузки.Вставить("СсылкаНаВнешнийОбъект", Документ);
	
	Возврат ПараметрыВыгрузки;
	
КонецФункции

Функция ЗаполнитьДополнительныеРеквизиты(Контейнер, Документ)
	
	ПараметрыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, 
		"Организация,Дата,Номер,НомерКорректировки,ДокументУведомлениеОбОстатках,
		|КодФормыРеорганизации,ПризнакУведомления,ИННДоРеорганизации,КППДоРеорганизации");
	
	НомерУведомления = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ПараметрыДокумента.Номер, Истина, Ложь);
	Если ПараметрыДокумента.НомерКорректировки > 0 Тогда
		НомерУведомления = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыДокумента.ДокументУведомлениеОбОстатках, "Номер"),
				Истина, Ложь);
	КонецЕсли;
	
	Контейнер.Организация = Документ.Организация;
	Контейнер.НалоговыйОрган = ПрослеживаемостьПереопределяемый.КодГосударственногоОрганаОрганизации(
			ПараметрыДокумента.Организация);
			
	Контейнер.ДатаУведомления = ПараметрыДокумента.Дата;
	Контейнер.ДатаПодписи = ПараметрыДокумента.Дата;
	
	Контейнер.КПП = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыДокумента.Организация, "КПП");
	Контейнер.НомерУведомления = НомерУведомления;
	Контейнер.ДатаУведомления = ПараметрыДокумента.Дата;
	Контейнер.НомерКорректировки = ПараметрыДокумента.НомерКорректировки;
	
	Если ПараметрыДокумента.ПризнакУведомления > 0 Тогда
		Контейнер.ПризнакУведомления = ПрослеживаемостьБРУ.ПолучитьПризнакУведомления(ПараметрыДокумента.ПризнакУведомления);
		
		Контейнер.ИННПродавца = ИННПродавцовСтрокой(Документ);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыДокумента.КодФормыРеорганизации) Тогда
		
		Контейнер.КодФормыРеорганизации = ПараметрыДокумента.КодФормыРеорганизации;
		Контейнер.ИННРеорганизованнойОрганизации = ПараметрыДокумента.ИННДоРеорганизации;
		Контейнер.КППРеорганизованнойОрганизации = ПараметрыДокумента.КППДоРеорганизации;
		
	КонецЕсли;
		
КонецФункции

Функция ИННПродавцовСтрокой(Документ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Документ);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.ИНН КАК ИНН
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.Продавцы КАК УведомлениеОбОстаткахПрослеживаемыхТоваровПродавцы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО УведомлениеОбОстаткахПрослеживаемыхТоваровПродавцы.Продавец = Контрагенты.Ссылка
	|ГДЕ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваровПродавцы.Ссылка = &Ссылка";
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	СтрокаИННПродавцов = "";
	НеобходимостьЗапятой = Ложь;
	НомерСтроки = 0;
	КоличествоСтрок = ТаблицаРезультат.Количество();
	
	Для каждого ТекущаяСтрока Из ТаблицаРезультат Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
		Если КоличествоСтрок > 1 
			И КоличествоСтрок <> НомерСтроки Тогда
			НеобходимостьЗапятой = Истина;
		Иначе
			НеобходимостьЗапятой = Ложь;
		КонецЕсли;
		
		СтрокаИННПродавцов = СтрокаИННПродавцов + ТекущаяСтрока.ИНН + ?(НеобходимостьЗапятой, ",","");
		
	КонецЦикла;
	
	Возврат СтрокаИННПродавцов;
	
КонецФункции

Процедура ЗаполнитьСодержательнуюЧасть(СодержательнаяЧасть, Документ)

	Запрос = Новый Запрос;
	
	Запрос.Текст = ПрослеживаемостьПереопределяемый.ТекстЗапросаПоТаблицеТоваровУведомленияОбОстатках();
	
	Запрос.УстановитьПараметр("Документ", Документ);
	ТаблицаРезультатов = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРезультатов.Количество() = 0 Тогда
		Возврат ;
	КонецЕсли;
	
	ТаблицаРезультатов.Свернуть(
		"НомПервичДок,ДатаПервичДок,НаимТовДок,ЕдинИзмерДок,КодТНВЭД,КодОКПД2,ЕдинИзмерПер,РегНомерТов",
		"КолТоварДок,КоличТоварПер,СтТоварБезНДС"
		);
	
	Если ТаблицаРезультатов.Количество() > 1 Тогда
		
		
		Для каждого ТекущаяСтрока Из ТаблицаРезультатов Цикл
			
			ТекущаяСтрока.КодОКПД2 = "";
			
		КонецЦикла;
		
		ТаблицаРезультатов.Свернуть(
			"НомПервичДок,ДатаПервичДок,НаимТовДок,ЕдинИзмерДок,КодТНВЭД,КодОКПД2,ЕдинИзмерПер,РегНомерТов",
			"КолТоварДок,КоличТоварПер,СтТоварБезНДС"
			);
		
	КонецЕсли;
	
	Результат = ТаблицаРезультатов[0];
	
	СодержательнаяЧасть.П000010000101 = НСтр("ru='Инвентаризация товаров'"); // НаимПервичДок
	СодержательнаяЧасть.П000010000201 = Результат["НомПервичДок"];     // НомПервичДок
	СодержательнаяЧасть.П000010000301 = Результат["ДатаПервичДок"];    // ДатаПервичДок
	СодержательнаяЧасть.П000010000401 = Результат["НаимТовДок"];       // НаимТовДок
	СодержательнаяЧасть.П000010000501 = Результат["КолТоварДок"];      // КолТоварДок
	СодержательнаяЧасть.П000010000601 = Результат["ЕдинИзмерДок"];     // ЕдинИзмерДок
	СодержательнаяЧасть.П000010000701 = Результат["КодТНВЭД"];         // КодТНВЭД
	СодержательнаяЧасть.П000010000801 = Результат["КодОКПД2"];         // КодОКПД2
	СодержательнаяЧасть.П000010000901 = Результат["КоличТоварПер"];    // КоличТоварПер
	СодержательнаяЧасть.П000010001001 = Результат["ЕдинИзмерПер"];     // ЕдинИзмерПер
	СодержательнаяЧасть.П000010001101 = Результат["РегНомерТов"];      // РегНомерТов
	СодержательнаяЧасть.П000010001201 = Результат["СтТоварБезНДС"];    // СтТоварБезНДС
	
КонецПроцедуры

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.РНПТ КАК РНПТ,
	|	Реквизиты.ПервичныйДокумент КАК Основание,
	|	Реквизиты.НомерКорректировки > 0 КАК ЭтоКорректировочноеУведомление,
	|	Реквизиты.ДокументУведомлениеОбОстатках КАК ДокументУведомлениеОбОстатках,
	|	Реквизиты.ПолученоПодтверждениеИзФНС КАК ПолученоПодтверждениеИзФНС
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.РНПТ КАК РНПТ,
	|	Реквизиты.Основание КАК Основание,
	|	Реквизиты.ДокументУведомлениеОбОстатках КАК ДокументУведомлениеОбОстатках,
	|	Реквизиты.ПолученоПодтверждениеИзФНС КАК ПолученоПодтверждениеИзФНС,
	|	Реквизиты.ЭтоКорректировочноеУведомление КАК ЭтоКорректировочноеУведомление
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПоследнийДокументИсправления(ДокументОснование, ДокументИсключение)
	
	Запрос = Новый Запрос();
		ПараметрыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, "НомерКорректировки,ДокументУведомлениеОбОстатках");
	Запрос.УстановитьПараметр("ДокументОснование", ?(ПараметрыДокумента.НомерКорректировки>0, 
			ПараметрыДокумента.ДокументУведомлениеОбОстатках, ДокументОснование));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка КАК Ссылка,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки КАК НомерКорректировки
	|ПОМЕСТИТЬ ТаблицаДокументов
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК УведомлениеОбОстаткахПрослеживаемыхТоваров
	|ГДЕ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.ДокументУведомлениеОбОстатках = &ДокументОснование
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК УведомлениеОбОстаткахПрослеживаемыхТоваров
	|ГДЕ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаДокументов.Ссылка КАК Ссылка,
	|	ТаблицаДокументов.НомерКорректировки КАК НомерКорректировки
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаДокументов.НомерКорректировки УБЫВ"
	;
	
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат ДокументОснование;
	КонецЕсли;
	
КонецФункции

Функция ЗаполнитьДокументДанными(Период, Организация, ДокументОснование = Неопределено, ДокументИсключение = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ПоследнийДокументИсправления", ПоследнийДокументИсправления(ДокументОснование, ДокументИсключение));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка КАК Ссылка,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.ВерсияДанных КАК ВерсияДанных,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.ПометкаУдаления КАК ПометкаУдаления,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Дата КАК Дата,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Проведен КАК Проведен,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.КодТНВЭД
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваров.КодТНВЭДПослеИзменения
	|	КОНЕЦ КАК КодТНВЭД,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.РНПТ КАК РНПТ,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.ПервичныйДокумент КАК ПервичныйДокумент,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Ответственный КАК Ответственный,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Комментарий КАК Комментарий,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.РучнаяКорректировка КАК РучнаяКорректировка,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.ЕдиницаИзмерения
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваров.ЕдиницаИзмеренияПослеИзменения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.ЕдиницаПрослеживаемости
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваров.ЕдиницаПрослеживаемостиПослеИзменения
	|	КОНЕЦ КАК ЕдиницаПрослеживаемости,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки + 1 КАК НомерКорректировки,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.ДокументУведомлениеОбОстатках = ЗНАЧЕНИЕ(Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПустаяСсылка)
	|			ТОГДА &ДокументОснование
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваров.ДокументУведомлениеОбОстатках
	|	КОНЕЦ КАК ДокументУведомлениеОбОстатках,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.КодТНВЭД
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваров.КодТНВЭДПослеИзменения
	|	КОНЕЦ КАК КодТНВЭДПослеИзменения,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.КодОКПД2
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваров.КодОКПД2ПослеИзменения
	|	КОНЕЦ КАК КодОКПД2ПослеИзменения,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.ЕдиницаИзмерения
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваров.ЕдиницаИзмеренияПослеИзменения
	|	КОНЕЦ КАК ЕдиницаИзмеренияПослеИзменения,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.ЕдиницаПрослеживаемости
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваров.ЕдиницаПрослеживаемостиПослеИзменения
	|	КОНЕЦ КАК ЕдиницаПрослеживаемостиПослеИзменения,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.ПризнакУведомления КАК ПризнакУведомления,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.КодФормыРеорганизации КАК КодФормыРеорганизации,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.ИННДоРеорганизации КАК ИННДоРеорганизации,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.КППДоРеорганизации КАК КППДоРеорганизации,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.ПризнакУведомления КАК ПризнакУведомленияДоИзменения
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК УведомлениеОбОстаткахПрослеживаемыхТоваров
	|ГДЕ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка = &ПоследнийДокументИсправления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Ссылка КАК Ссылка,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.НомерСтроки КАК НомерСтроки,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Номенклатура КАК Номенклатура,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.КодОКПД2 КАК КодОКПД2,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Количество
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.КоличествоПослеИзменения
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.КоличествоПрослеживаемости
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.КоличествоПрослеживаемостиПослеИзменения
	|	КОНЕЦ КАК КоличествоПрослеживаемости,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Сумма
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.СуммаПослеИзменения
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Количество
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.КоличествоПослеИзменения
	|	КОНЕЦ КАК КоличествоПослеИзменения,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.КоличествоПрослеживаемости
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.КоличествоПрослеживаемостиПослеИзменения
	|	КОНЕЦ КАК КоличествоПрослеживаемостиПослеИзменения,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Сумма
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.СуммаПослеИзменения
	|	КОНЕЦ КАК СуммаПослеИзменения,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.СтранаПроисхождения
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.СтранаПроисхожденияПослеИзменения
	|	КОНЕЦ КАК СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.СтранаПроисхождения
	|		ИНАЧЕ УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.СтранаПроисхожденияПослеИзменения
	|	КОНЕЦ КАК СтранаПроисхожденияПослеИзменения
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК УведомлениеОбОстаткахПрослеживаемыхТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.Товары КАК УведомлениеОбОстаткахПрослеживаемыхТоваровТовары
	|		ПО УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка = УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Ссылка
	|ГДЕ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка = &ПоследнийДокументИсправления";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизиты = РезультатЗапроса[0].Выгрузить();
	ТаблицаТовары = РезультатЗапроса[1].Выгрузить();
	
	Возврат Новый Структура("Реквизиты,Товары", ТаблицаРеквизиты, ТаблицаТовары)
	
КонецФункции

Функция ПолучитьСоответствиеВидовУведомленийФормам() Экспорт

	ВидыУведомлений = ПрослеживаемостьБРУ.ВидыУведомлений();
	
	ФормыУведомленияОбОстатках = Новый Соответствие;
	ФормыУведомленияОбОстатках.Вставить(ВидыУведомлений.Уведомление, "ФормаДокументаОсновная");
	ФормыУведомленияОбОстатках.Вставить(ВидыУведомлений.КорректировочноеУведомление, "ФормаДокументаКорректировочная");
	
	Возврат ФормыУведомленияОбОстатках;

КонецФункции 

Функция ОпределитьВидУведомления(НомерКорректировки)

	ВидыУведомлений = ПрослеживаемостьБРУ.ВидыУведомлений();
	
	Если НомерКорректировки > 0 Тогда
		Возврат ВидыУведомлений.КорректировочноеУведомление;
	КонецЕсли;
	
	Возврат ВидыУведомлений.Уведомление;

КонецФункции 

Процедура ЗаполнитьКорректировочноеУведомлениеОбОстаткахПрослеживаемыхТоваров(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	УведомлениеОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Проведен,РНПТ");
	
	Если НЕ РеквизитыДокумента.Проведен Тогда
		
		ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен!'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ВызватьИсключение ТекстОшибки;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(РеквизитыДокумента.РНПТ) Тогда
		
		ТекстОшибки = НСтр("ru='В документе %Документ% не указан РНПТ. Ввод на основании документа запрещен!'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ДанныеТаблиц = Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров.ЗаполнитьДокументДанными(
		УведомлениеОбъект.Дата, УведомлениеОбъект.Организация, ДанныеЗаполнения);
		
	ЗаполнитьЗначенияСвойств(УведомлениеОбъект, 
		?(ДанныеТаблиц.Реквизиты.Количество()>0, ДанныеТаблиц.Реквизиты[0], Новый ТаблицаЗначений));
	
	УведомлениеОбъект.Товары.Загрузить(ДанныеТаблиц.Товары);
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли
