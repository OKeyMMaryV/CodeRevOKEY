#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 13, 0);
	
КонецФункции

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
	|	,Реквизиты.Склад.ТипСклада КАК ТипСклада,
	|	Реквизиты.ОсталисьМатериальныеЦенностиОтВыбытия КАК ОсталисьМатериальныеЦенностиОтВыбытия,
	|	Реквизиты.Ссылка КАК Регистратор
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)
	|ИЗ
	|	Документ.СписаниеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";

	Результат = Запрос.Выполнить();
	Реквизиты = ОбщегоНазначенияБПВызовСервера.ПолучитьСтруктуруИзРезультатаЗапроса(Результат);

	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
	ПрослеживаемостьРеквизиты = Результат.Выгрузить();
	ПлательщикНДС                    = УчетнаяПолитика.ПлательщикНДС(Реквизиты.Организация, Реквизиты.Период);
	ПрименяетсяУСН                   = УчетнаяПолитика.ПрименяетсяУСН(Реквизиты.Организация, Реквизиты.Период);
	ПрименяетсяУСНДоходыМинусРасходы = УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Реквизиты.Организация, Реквизиты.Период);
	ПлательщикНДФЛ                   = УчетнаяПолитика.ПлательщикНДФЛ(Реквизиты.Организация, Реквизиты.Период);
	СпособОценкиТоваровВРознице      = УчетнаяПолитика.СпособОценкиТоваровВРознице(Реквизиты.Организация, Реквизиты.Период);
	ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Реквизиты.Период);

	Запрос.УстановитьПараметр("ПлательщикНДС", ПлательщикНДС);
	Запрос.УстановитьПараметр("ПрименяетсяУСН", ПрименяетсяУСН);
	Запрос.УстановитьПараметр("ПлательщикНДФЛ", ПлательщикНДФЛ);
	
	Запрос.УстановитьПараметр("СинонимЦенностиОтВыбытия",	НСтр("ru = 'Оставшиеся товары'"));
	
	Запрос.УстановитьПараметр("СпособОценкиТоваровВРознице",	СпособОценкиТоваровВРознице);
	Запрос.УстановитьПараметр("ТипСклада", Реквизиты.ТипСклада);
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	ОтражатьВРасходахУСН = (Реквизиты.Период >= '20130101') И ПрименяетсяУСНДоходыМинусРасходы
		И Не (Реквизиты.ТипСклада = Перечисления.ТипыСкладов.НеавтоматизированнаяТорговаяТочка И СпособОценкиТоваровВРознице = Перечисления.СпособыОценкиТоваровВРознице.ПоПродажнойСтоимости);
	Запрос.УстановитьПараметр("ОтражатьВРасходахУСН", ОтражатьВРасходахУСН);
	
	Запрос.УстановитьПараметр("Счета10", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Материалы));
	Запрос.УстановитьПараметр("МоментСписания",                 Новый МоментВремени(Реквизиты.Период, ДокументСсылка));
	Запрос.УстановитьПараметр("Организация",                    Реквизиты.Организация);
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)
	
	Запрос.УстановитьПараметр("СинонимОС",	НСтр("ru='Основные средства'"));
	
	Запрос.УстановитьПараметр("ВестиУчетПоВидамДеятельностиИП",	УчетнаяПолитика.ВестиУчетПоВидамДеятельностиИП(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ОсновнаяНоменклатурнаяГруппа",	УчетнаяПолитика.ОсновнаяНоменклатурнаяГруппа(Реквизиты.Организация, Реквизиты.Период));

	НомераТаблиц = Новый Структура;

	Запрос.Текст =
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
	ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц) +
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)
		ТекстЗапросаТаблицаОС(НомераТаблиц)
		+ ТекстЗапросаВыбытиеОС(НомераТаблиц)
		+ ТекстЗапросаСостоянияОС(НомераТаблиц)
		+ ТекстЗапросаСписаниеОстаточнойСтоимости(НомераТаблиц)
		+ ТекстЗапросаПроверкиПоОС(НомераТаблиц)
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
		//+ ТекстЗапросаСписаниеОСиНМАИП(НомераТаблиц);
		+ ТекстЗапросаСписаниеОСиНМАИП(НомераТаблиц)
		+ ТекстЗапросаОприходованиеТоваров(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаОприходованиеТоваровНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаОприходованиеТоваровУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаКнигаУчетаДоходовИРасходовУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаОприходованиеТоваровИП(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРегистрацияОтложенныхРасчетовВПоследовательности(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПрослеживаемыеТовары(НомераТаблиц, ПараметрыПроведения, ВедетсяУчетПрослеживаемыхТоваров);
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)

	Результат = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;

	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
	ПараметрыПроведения.Вставить("ПрослеживаемостьРеквизиты", ПрослеживаемостьРеквизиты);
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)
	
	Возврат ПараметрыПроведения;

КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт о списании ОС (ОС-4)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОС4";
	КомандаПечати.Представление = НСтр("ru = 'Акт о списании ОС (ОС-4)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Акт о списании автотранспортных средств (ОС-4а)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОС4а";
	КомандаПечати.Представление = НСтр("ru = 'Акт о списании автотранспортных средств (ОС-4а)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Списание ОС""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС4") Тогда

		ИмяМакета = "ОС4";
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОС4", НСтр("ru = 'ОС-4 (Акт о списании ОС)'"), 
			ПечатьОС4(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета),, ИмяМакета);
			
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС4а") Тогда

		ИмяМакета = "ОС4а";
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОС4а",
			НСтр("ru = 'ОС-4а (Акт о списании автотранспортных средств)'"), 
			ПечатьОС4(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета),, ИмяМакета);

	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	

КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "СобытиеОС");
	
	Возврат Результат;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
функция ПодготовитьДоходыИРасходыСУчетомТоваров(ТаблицаСтоимости, ОприходованиеТоваровТаблицаТовары) Экспорт
	
	ДоходыИРасходы = Новый Структура();
	ДоходыИРасходы.Вставить("РасходыОтЛиквидацииОС", Неопределено);
	ДоходыИРасходы.Вставить("ДоходыОтОприходованияТоваров", Неопределено);
	ДоходыИРасходы.Вставить("ОприходованиеТоваров", Неопределено);
	ДоходыИРасходы.Вставить("РасчетСтоимостиТоваров", Неопределено);
	
	Если Не ЗначениеЗаполнено(ОприходованиеТоваровТаблицаТовары) Тогда
		// Если нет оприходованных товаров, то и корректировать расходы не нужно.
		// Расходы будут равны балансовой стоимости.
		// Доходов в этом случае также не будет.
		ДоходыИРасходы.РасходыОтЛиквидацииОС = ТаблицаСтоимости.Скопировать();
		Возврат ДоходыИРасходы;
	КонецЕсли;
	
	РасходыОтЛиквидацииОС = УчетОС.НовыйТаблицаОстаточнойСтоимостиОС();
	ДоходыОтОприходованияТоваров = Документы.СписаниеОС.НовыйТаблицаДоходыОтОприходованияТоваров();
	РасчетСтоимостиТоваров = РегистрыСведений.РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.НовыйТаблицаРасчетСтоимостиТоваров();
	ОприходованиеТоваров = УчетТоваров.НовыйТаблицаОприходованияТоваров();
	
	Для Каждого СтрокаСтоимости Из ТаблицаСтоимости Цикл
		
		СтрокаРасхода = РасходыОтЛиквидацииОС.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаРасхода, СтрокаСтоимости);
		
		РыночнаяСтоимостьТоваров = 0;
		КоэффициентыСтоимостиТоваров = Новый Массив;
		
		ОтборСтрок = Новый Структура("ОсновноеСредство", СтрокаРасхода.ОсновноеСредство);
		СтрокиДляНомераСтрокиОС = ОприходованиеТоваровТаблицаТовары.НайтиСтроки(ОтборСтрок);
		Для Каждого СтрокаТовара Из СтрокиДляНомераСтрокиОС Цикл
			РыночнаяСтоимостьТоваров = РыночнаяСтоимостьТоваров + СтрокаТовара.Сумма;
			КоэффициентыСтоимостиТоваров.Добавить(СтрокаТовара.Сумма);
		КонецЦикла;
		
		// Стоимость оприходуемых товаров в бухгалтерском учете не может превышать
		// балансовую стоимость. В балансовую стоимость в том числе входят и затраты на демонтаж.
		// Они учтены в СтоимостьБУ таблицы стоимости ОС.
		БалансоваяСтоимость = СтрокаРасхода.СтоимостьБУ;
		СтоимостьТоваровБУ = Мин(БалансоваяСтоимость, РыночнаяСтоимостьТоваров);
		РаспределеннаяСтоимостьТоваровБУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			СтоимостьТоваровБУ, КоэффициентыСтоимостиТоваров);
		
		ИндексСтроки = 0;
		Для Каждого СтрокаТовара Из СтрокиДляНомераСтрокиОС Цикл
			
			СтрокаОприходованияТоваров = ОприходованиеТоваров.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаОприходованияТоваров, СтрокаТовара, , "Сумма");
			Если ЗначениеЗаполнено(РаспределеннаяСтоимостьТоваровБУ) Тогда
				СтрокаОприходованияТоваров.Сумма = РаспределеннаяСтоимостьТоваровБУ[ИндексСтроки];
			КонецЕсли;
			
			СтрокаРасчетСтоимостиТоваров = РасчетСтоимостиТоваров.Добавить();
			СтрокаРасчетСтоимостиТоваров.ОсновноеСредство = СтрокаРасхода.ОсновноеСредство;
			СтрокаРасчетСтоимостиТоваров.НомерСтрокиМатериала = ИндексСтроки + 1;
			СтрокаРасчетСтоимостиТоваров.Количество = СтрокаТовара.Количество;
			СтрокаРасчетСтоимостиТоваров.Стоимость = СтрокаТовара.Сумма;
			СтрокаРасчетСтоимостиТоваров.СтоимостьБухгалтерскийУчет = СтрокаОприходованияТоваров.Сумма;
			Если РыночнаяСтоимостьТоваров <> 0 Тогда
				СтрокаРасчетСтоимостиТоваров.ДоляСтоимости = СтрокаТовара.Сумма / РыночнаяСтоимостьТоваров;
			КонецЕсли;
			
			СтрокаРасчетСтоимостиТоваров.БалансоваяСтоимостьОС = БалансоваяСтоимость - СтрокаСтоимости.ЗатратыНаСписаниеОС;
			СтрокаРасчетСтоимостиТоваров.ЗатратыНаСписаниеОС = СтрокаСтоимости.ЗатратыНаСписаниеОС;
			СтрокаРасчетСтоимостиТоваров.Номенклатура = СтрокаТовара.Номенклатура;
			
			ИндексСтроки = ИндексСтроки + 1;
			
		КонецЦикла;
		
		// Уменьшим расходы от ликвидации ОС в бухгалтерском учете на стоимость товаров в бух.учете.
		// В налоговом учете расходы должны соответствовать балансовой стоимости (с учетом затрат на демонтаж).
		СтрокаРасхода.СтоимостьБУ = СтрокаРасхода.СтоимостьБУ - СтоимостьТоваровБУ;
		СтрокаРасхода.СтоимостьВР = СтрокаРасхода.СтоимостьВР + СтоимостьТоваровБУ;
		
		СтрокаДоходы = ДоходыОтОприходованияТоваров.Добавить();
		СтрокаДоходы.ОсновноеСредство = СтрокаСтоимости.ОсновноеСредство;
		СтрокаДоходы.СуммаНУ = РыночнаяСтоимостьТоваров;
		
	КонецЦикла;
	
	ДоходыИРасходы.РасходыОтЛиквидацииОС = РасходыОтЛиквидацииОС;
	ДоходыИРасходы.ДоходыОтОприходованияТоваров = ДоходыОтОприходованияТоваров;
	ДоходыИРасходы.ОприходованиеТоваров = ОприходованиеТоваров;
	ДоходыИРасходы.РасчетСтоимостиТоваров = РасчетСтоимостиТоваров;
	Возврат ДоходыИРасходы;
	
КонецФункции

Функция НовыйТаблицаДоходыОтОприходованияТоваров() Экспорт
	
	ДоходыОтОприходованияТоваров = Новый ТаблицаЗначений;
	
	ДоходыОтОприходованияТоваров.Колонки.Добавить("ОсновноеСредство", Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
	ДоходыОтОприходованияТоваров.Колонки.Добавить("СуммаНУ", Метаданные.РегистрыБухгалтерии.Хозрасчетный.Ресурсы.СуммаНУ.Тип);
	
	Возврат ДоходыОтОприходованияТоваров;
	
КонецФункции

Процедура СформироватьДвиженияОтраженияДоходовОтОприходованияТоваров(ДоходыОтОприходованияТоваров, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(ДоходыОтОприходованияТоваров) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыОтраженияДоходовОтОприходованияТоваров(ДоходыОтОприходованияТоваров, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	// Доходы от оприходования товаров отражаются только в налоговом учете.
	// Поэтому если организация не платит налог на прибыль - то делать проводку не нужно.
	Если Не УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из Параметры.ДоходыОтОприходованияТоваров Цикл
		
		Проводка = Движения.Хозрасчетный.Добавить();
		
		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		Проводка.Содержание  = НСтр("ru = 'Доходы от поступивших ценностей при списании ОС'");
		
		Проводка.СчетДт = ПланыСчетов.Хозрасчетный.ВыбытиеОС;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);
		
		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = Реквизиты.Подразделение;
		КонецЕсли;
		
		Проводка.СчетКт = Реквизиты.СчетУчетаДоходов;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Реквизиты.СубконтоДоходов);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, СтрокаТаблицы.ОсновноеСредство);
		
		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = Реквизиты.Подразделение;
		КонецЕсли;
		
		Проводка.Сумма = 0;
		
		НалоговыйУчет.ЗаполнитьНалоговыеСуммыПроводки(
			СтрокаТаблицы.СуммаНУ, СтрокаТаблицы.СуммаНУ,
			0, 0,
			- СтрокаТаблицы.СуммаНУ, - СтрокаТаблицы.СуммаНУ,
			Проводка, Истина);
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;
	
КонецПроцедуры

Процедура ДобавитьКолонкуСодержание(ТаблицаЗначений) Экспорт
	
	Если ТаблицаЗначений = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	КонецЕсли;

	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		Содержание = НСтр("ru = 'Оприходование %1 при списании ОС'");
		Содержание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Содержание, 
			БухгалтерскийУчетПовтИсп.НазваниеОбъектаПоСчетуУчета(СтрокаТаблицы.СчетУчета));
		СтрокаТаблицы.Содержание = Содержание;
	КонецЦикла;

КонецПроцедуры

Процедура ДобавитьКолонкуСодержаниеУСН(ТаблицаЗначений) Экспорт
	
	Если ТаблицаЗначений = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(300));
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		
		СтрокаТаблицы.Содержание = НСтр("ru = 'Оприходованы материалы при списании ОС.'");
		
	КонецЦикла;
	
КонецПроцедуры
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаТаблицаОС(НомераТаблиц)

	НомераТаблиц.Вставить("ОсновныеСредства", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка           КАК Регистратор,
	|	ТаблицаОС.НомерСтроки      КАК НомерСтроки,
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
	|	ТаблицаОС.КлючСтроки КАК КлючСтроки,
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)
	//ОК+ Аверьянова #2538 от 21.06.16 //заполнение функции(3-е с/к) в 91 счете
	|	ТаблицаОС.Ссылка.Субконто3 КАК Субконто3,
	//ОК-	
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	Документ.СписаниеОС.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции // ТекстЗапросаТаблицыДокумента()

Функция ТекстЗапросаВыбытиеОС(НомераТаблиц)

	НомераТаблиц.Вставить("ВыбытиеОС", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка                   КАК Регистратор,
	|	Реквизиты.Дата                     КАК Период,
	|	Реквизиты.Номер                    КАК Номер,
	|	Реквизиты.Организация              КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	""ОС""                             КАК ИмяСписка,
	|	Реквизиты.СобытиеОС                КАК СобытиеОС,
	|	ИСТИНА                             КАК СписыватьТолькоЛинейныйНУ,
	|	""Списание ОС: "" + Реквизиты.ПричинаСписания.Наименование КАК Содержание
	|ИЗ
	|	Документ.СписаниеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаСостоянияОС(НомераТаблиц)

	НомераТаблиц.Вставить("СостоянияОС", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Номер,
	|	Реквизиты.Организация,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета) КАК СостояниеОС,
	|	""ОС"" КАК ИмяСписка
	|ИЗ
	|	Документ.СписаниеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаСписаниеОстаточнойСтоимости(НомераТаблиц)

	НомераТаблиц.Вставить("СписаниеОстаточнойСтоимости", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеОстаточнойСтоимостиТаблица", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Номер,
	|	Реквизиты.Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	""ОС"" КАК ИмяСписка,
	|	Реквизиты.СобытиеОС,
	|	""Списание ОС: "" + Реквизиты.ПричинаСписания.Наименование КАК Содержание,
	//ОК+ Аверьянова #2538 от 21.06.16 //заполнение функции(3-е с/к) в 91 счете
	|	Реквизиты.Субконто3,
	//ОК-	
	|	ИСТИНА КАК СписыватьТолькоЛинейныйНУ
	|ИЗ
	|	Документ.СписаниеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.Ссылка              КАК Регистратор,
	|	ТаблицаОС.НомерСтроки         КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство    КАК ОсновноеСредство,
	|	ЛОЖЬ                          КАК Арендованное,
	|	ТаблицаОС.Ссылка.Субконто     КАК Субконто,
	//ОК+ Аверьянова #2538 от 21.06.16 //заполнение функции(3-е с/к) в 91 счете
	|	ТаблицаОС.Ссылка.Субконто3 КАК Субконто3,
	//ОК-	
	|	ТаблицаОС.Ссылка.СчетСписания КАК СчетСписания,
	|	ТаблицаОС.Ссылка.Субконто     КАК СубконтоНУ,
	|	ТаблицаОС.Ссылка.СчетСписания КАК СчетСписанияНУ
	|ИЗ
	|	Документ.СписаниеОС.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПроверкиПоОС(НомераТаблиц)

	НомераТаблиц.Вставить("ПроверкиПоОС", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	""ОС"" КАК ИмяСписка,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК МОЛ
	|ИЗ
	|	Документ.СписаниеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаСписаниеОСиНМАИП(НомераТаблиц)

	НомераТаблиц.Вставить("СписаниеОСиНМАИПРеквизиты",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеОСиНМАИПТаблица",	НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	""СписаниеОС"" КАК ВидОперации
	|ИЗ
	|	Документ.СписаниеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ОС"" КАК ИмяСписка,
	|	&СинонимОС КАК СинонимСписка,
	|	ТаблицаОС.НомерСтроки,
	|	ВЫБОР
	|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
	|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
	|		КОГДА Реквизиты.Субконто ССЫЛКА Справочник.НоменклатурныеГруппы
	|			ТОГДА Реквизиты.Субконто
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НоменклатурнаяГруппа,
	|	ТаблицаОС.ОсновноеСредство КАК Номенклатура,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновныеСредства) КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА Реквизиты.Субконто ССЫЛКА Справочник.СтатьиЗатрат
	|				ИЛИ Реквизиты.Субконто ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|				ИЛИ Реквизиты.Субконто ССЫЛКА Справочник.РасходыБудущихПериодов
	|			ТОГДА Реквизиты.Субконто
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА Реквизиты.Субконто ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидРасходовНУ,
	|	ВЫБОР
	|		КОГДА Реквизиты.Субконто ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПринятиеКналоговомуУчету,
	|	ВЫБОР
	|		КОГДА Реквизиты.Субконто ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		КОГДА Реквизиты.Субконто ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(Реквизиты.Субконто КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|	Реквизиты.СчетСписания КАК СчетДоходов,
	|	0 КАК Выручка,
	|	0 КАК НДСНачисленный
	|ИЗ
	|	Документ.СписаниеОС.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС КАК Реквизиты
	|		ПО ТаблицаОС.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ПечатьОС4(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета)

	Перем ПодразделениеОтветственныхЛиц;

	Если МассивОбъектов.Количество() = 0 Тогда
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;
	
	Автотранспорт = ИмяМакета = "ОС4а";
	
	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеОС_ОС4";

	КоличествоОС4 = 0;
	КоличествоОС4а = 0;
	КоличествоОС4б = 0;
	МакетОС4  = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеОС.ПФ_MXL_ОС4");
	МакетОС4а = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеОС.ПФ_MXL_ОС4а");
	МакетОС4б = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеОС.ПФ_MXL_ОС4б");

	// Области макетов
	ОбластьЗаголовок = МакетОС4.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок4а = МакетОС4а.ПолучитьОбласть("Заголовок");

	Шапка0 = МакетОС4б.ПолучитьОбласть("Шапка0");
	Шапка1 = МакетОС4б.ПолучитьОбласть("Шапка1");
	Шапка2 = МакетОС4б.ПолучитьОбласть("Шапка2");
	Строка1 = МакетОС4б.ПолучитьОбласть("Строка1");

	// Дополняет регистры сведений колонками ДатаНачала и ДатаОкончания
	//  для более удобного объединения в общем запросе
	МВТ = Новый МенеджерВременныхТаблиц;
	СоздатьВременныеТаблицыРегистров(МВТ, МассивОбъектов);

	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МВТ;

	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаОС.Ссылка КАК Ссылка,
	               |	ТаблицаОС.Ссылка.Номер КАК Номер,
	               |	ТаблицаОС.Ссылка.Дата КАК Дата,
	               |	ТаблицаОС.Ссылка.СобытиеОС КАК Состояние,
	               |	ТаблицаОС.Ссылка.ПричинаСписания КАК ПричинаСписания,
	               |	ТаблицаОС.Ссылка.Организация КАК Организация,
	               |	ТаблицаОС.Ссылка.Организация.КодПоОКПО КАК КодОКПО,
	               |	ТаблицаОС.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	               |	ТаблицаОС.Ссылка.МоментВремени КАК МоментВремени,
	               |	ТаблицаОС.НомерСтроки КАК Нп,
	               |	ТаблицаОС.ОсновноеСредство КАК ОС,
	               |	ТаблицаОС.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
	               |	ТаблицаОС.ОсновноеСредство.ДатаВыпуска КАК ГодВыпуска,
	               |	ТаблицаОС.ОсновноеСредство.НаименованиеПолное КАК НаимОС,
	               |	ТаблицаОС.ОсновноеСредство.ГруппаОС КАК Группа,
	               |	ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.ПервоначальнаяСтоимость КАК НачСтоимость,
	               |	ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.ИнвентарныйНомер КАК ИнвНомер,
	               |	ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	               |	ВТ_МестонахождениеОСБухгалтерскийУчет.Местонахождение КАК Подразделение,
	               |	ВТ_МестонахождениеОСБухгалтерскийУчет.МОЛ КАК МОЛ,
	               |	ЕСТЬNULL(ВТ_СтоимостьОС.СуммаОборот, 0) КАК Стоимость,
	               |	ВЫБОР
	               |		КОГДА ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	               |				ИЛИ ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса)
	               |			ТОГДА ЕСТЬNULL(ВТ_ИзносОС.СуммаОборот, 0)
	               |		ИНАЧЕ ЕСТЬNULL(ВТ_АмортизацияОС.СуммаОборот, 0)
	               |	КОНЕЦ КАК НачАмортизация
	               |ИЗ
	               |	Документ.СписаниеОС.ОС КАК ТаблицаОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет КАК ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет
	               |		ПО (ТаблицаОС.Ссылка.Дата МЕЖДУ ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.ДатаНачала И ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.ДатаОкончания)
	               |			И ТаблицаОС.ОсновноеСредство = ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство
	               |			И ТаблицаОС.Ссылка.Организация = ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.Организация
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчетаОС КАК ВТ_СчетаБухгалтерскогоУчетаОС
	               |		ПО (ТаблицаОС.Ссылка.Дата МЕЖДУ ВТ_СчетаБухгалтерскогоУчетаОС.ДатаНачала И ВТ_СчетаБухгалтерскогоУчетаОС.ДатаОкончания)
	               |			И ТаблицаОС.Ссылка.Организация = ВТ_СчетаБухгалтерскогоУчетаОС.Организация
	               |			И ТаблицаОС.ОсновноеСредство = ВТ_СчетаБухгалтерскогоУчетаОС.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестонахождениеОСБухгалтерскийУчет КАК ВТ_МестонахождениеОСБухгалтерскийУчет
	               |		ПО (ТаблицаОС.Ссылка.Дата МЕЖДУ ВТ_МестонахождениеОСБухгалтерскийУчет.ДатаНачала И ВТ_МестонахождениеОСБухгалтерскийУчет.ДатаОкончания)
	               |			И ТаблицаОС.Ссылка.Организация = ВТ_МестонахождениеОСБухгалтерскийУчет.Организация
	               |			И ТаблицаОС.ОсновноеСредство = ВТ_МестонахождениеОСБухгалтерскийУчет.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьОС КАК ВТ_СтоимостьОС
	               |		ПО ТаблицаОС.Ссылка = ВТ_СтоимостьОС.Регистратор
	               |			И (ВТ_СчетаБухгалтерскогоУчетаОС.СчетУчета = ВТ_СтоимостьОС.СчетКт)
	               |			И ТаблицаОС.ОсновноеСредство = ВТ_СтоимостьОС.СубконтоКт1
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК ВТ_АмортизацияОС
	               |		ПО ТаблицаОС.Ссылка = ВТ_АмортизацияОС.Регистратор
	               |			И (ВТ_СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации = ВТ_АмортизацияОС.СчетДт)
	               |			И ТаблицаОС.ОсновноеСредство = ВТ_АмортизацияОС.СубконтоДт1
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИзносОС КАК ВТ_ИзносОС
	               |		ПО ТаблицаОС.Ссылка = ВТ_ИзносОС.Регистратор
	               |			И (ВТ_СчетаБухгалтерскогоУчетаОС.СчетНачисленияИзносаАмортизации = ВТ_ИзносОС.СчетКт)
	               |			И ТаблицаОС.ОсновноеСредство = ВТ_ИзносОС.СубконтоКт1
	               |ГДЕ
	               |	ТаблицаОС.Ссылка В(&МассивОбъектов)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТаблицаОС.Ссылка.Дата,
	               |	ТаблицаОС.Ссылка,
	               |	Нп
	               |ИТОГИ ПО
	               |	Ссылка";

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда

		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		Возврат ТабличныйДокумент;

	КонецЕсли;

	ВыборкаДокументов = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ПервыйДокумент = Истина;

	// Цикл по документам
	Пока ВыборкаДокументов.Следующий() Цикл

		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;

		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаДокументов.Организация, ВыборкаДокументов.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");

		ПодразделениеОтветственныхЛиц = ВыборкаДокументов.ПодразделениеОрганизации;

		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(ВыборкаДокументов.Организация, ВыборкаДокументов.Дата, ПодразделениеОтветственныхЛиц);

		// Выборка по табличной части
		ВыборкаСтрок = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.Прямой);

		Если ВыборкаСтрок.Количество() = 1 Тогда

			ВыборкаСтрок.Следующий();
			
			Если Не ЗначениеЗаполнено(ВыборкаСтрок.ОС) Тогда
				ТабличныйДокумент.Вывести(ОбластьЗаголовок);
				Продолжить;
			КонецЕсли;

			Если Автотранспорт Тогда
				КоличествоОС4а = КоличествоОС4 + 1;
				Область = ОбластьЗаголовок4а;
			Иначе
				КоличествоОС4 = КоличествоОС4 + 1;
				Область = ОбластьЗаголовок;
			КонецЕсли;

			ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаДокументов.Организация, ВыборкаСтрок.МОЛ, ВыборкаДокументов.Дата, Истина);

			Область.Параметры.Заполнить(ВыборкаСтрок);
			Область.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаСтрок.Номер, Истина, Ложь);
			Область.Параметры.Организация = ПредставлениеОрганизации;
			Область.Параметры.ТабНомерМОЛ = ДанныеФизЛица.ТабельныйНомер;

			Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.НаимОС) Тогда
				Область.Параметры["НаимОС"] = ВыборкаСтрок.ОС;
			КонецЕслИ;

			ДокументПринятияКУчету     = "";
			ДокументВводаВЭксплуатацию = "";
			ПринятоКУчету              = "";
			ВведеноВЭксплуатацию       = "";

			УчетОС.ПолучитьДокументБухСостоянияОС(
				ВыборкаСтрок.ОС,
				ВыборкаСтрок.Организация,
				Перечисления.СостоянияОС.ПринятоКУчету,
				ДокументВводаВЭксплуатацию,
				ВведеноВЭксплуатацию);
			УчетОС.ПолучитьДокументБухСостоянияОС(
				ВыборкаСтрок.ОС,
				ВыборкаСтрок.Организация,
				Перечисления.СостоянияОС.ПринятоКУчету,
				ДокументПринятияКУчету,
				ПринятоКУчету);

			Если Автотранспорт Тогда
				Область.Параметры.ВведеноВЭксплуатацию = ВведеноВЭксплуатацию;
				Если ДокументВводаВЭксплуатацию = Неопределено Тогда
					Область.Параметры.Пробег = ПолучитьПробегАвто(ВыборкаСтрок.ОС, ВыборкаСтрок.Дата, ВыборкаСтрок.Дата, ВыборкаСтрок.Организация);
				Иначе
					Область.Параметры.Пробег = ПолучитьПробегАвто(ВыборкаСтрок.ОС, ДокументВводаВЭксплуатацию.Дата, ВыборкаСтрок.Дата, ВыборкаСтрок.Организация);
				КонецЕсли;
			Иначе
				
				СрокЭкспл = УправлениеВнеоборотнымиАктивами.ОпределитьФактическийСрокИспользования(ВведеноВЭксплуатацию, ВыборкаСтрок.Дата);
				Область.Параметры.СрокЭкспл = ?(НЕ ЗначениеЗаполнено(СрокЭкспл), "-",
					УправлениеВнеоборотнымиАктивами.РасшифровкаСрокаПолезногоИспользования(СрокЭкспл));
					
			КонецЕсли;

			СтоимостьОС = ?(ВыборкаСтрок.ПорядокПогашенияСтоимости = Перечисления.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету,
				ВыборкаСтрок.НачСтоимость,
				ВыборкаСтрок.Стоимость);

			АмортизацияОС = ?(ВыборкаСтрок.ПорядокПогашенияСтоимости = Перечисления.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету,
				0,
				ВыборкаСтрок.НачАмортизация);

			Область.Параметры.ГодВыпуска     = ?(ЗначениеЗаполнено(ВыборкаСтрок.ГодВыпуска), Год(ВыборкаСтрок.ГодВыпуска), 0);
			Область.Параметры.ПринятоКУчету  = ПринятоКУчету;
			Область.Параметры.НачСтоимость   = СтоимостьОС;
			Область.Параметры.НачАмортизация = АмортизацияОС;

			Область.Параметры.ОстСтоимость = ?(ВыборкаСтрок.ПорядокПогашенияСтоимости = Перечисления.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету,
				0,
				СтоимостьОС - АмортизацияОС);

			Область.Параметры.ГлавБух               = ОтветственныеЛица.ГлавныйБухгалтерПредставление;
			Область.Параметры.Руководитель          = ОтветственныеЛица.РуководительПредставление;
			Область.Параметры.ДолжностьРуководителя = ОтветственныеЛица.РуководительДолжностьПредставление;

			ТабличныйДокумент.Вывести(Область);

		Иначе // Табличная часть состоит их нескольких строк

			ПерваяИтерация = Истина;
			Пока ВыборкаСтрок.Следующий() Цикл
				
				Если ПерваяИтерация Тогда 
					
					ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаДокументов.Организация, ВыборкаСтрок.МОЛ, ВыборкаДокументов.Дата, Истина);
					
					Шапка0.Параметры.Заполнить(ВыборкаСтрок);
					Шапка0.Параметры.Номер                 = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаСтрок.Номер, Истина, Ложь);
					Шапка0.Параметры.Организация           = ПредставлениеОрганизации;
					Шапка0.Параметры.Руководитель          = ОтветственныеЛица.РуководительПредставление;
					Шапка0.Параметры.ДолжностьРуководителя = ОтветственныеЛица.РуководительДолжностьПредставление;
					Шапка0.Параметры.ТабНомерМОЛ           = ДанныеФизЛица.ТабельныйНомер;

					ТабличныйДокумент.Вывести(Шапка0);

					Шапка1.Параметры.Заполнить(ВыборкаСтрок);
					ТабличныйДокумент.Вывести(Шапка1);
					ПерваяИтерация = Ложь;
					
				КонецЕсли;

				Строка1.Параметры.Заполнить(ВыборкаСтрок);
				Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.НаимОС) Тогда
					Строка1.Параметры["НаимОС"] = ВыборкаСтрок.ОС;
				КонецЕсли;

				СтоимостьОС = ?(ВыборкаСтрок.ПорядокПогашенияСтоимости = Перечисления.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету,
					ВыборкаСтрок.НачСтоимость,
					ВыборкаСтрок.Стоимость);

				АмортизацияОС = ?(ВыборкаСтрок.ПорядокПогашенияСтоимости = Перечисления.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету,
					0,
					ВыборкаСтрок.НачАмортизация);

				Строка1.Параметры.Заполнить(ВыборкаСтрок);
				Строка1.Параметры.НачСтоимость = СтоимостьОС;
				Строка1.Параметры.НачАмортизация = АмортизацияОС;
				Строка1.Параметры.ОстСтоимость = ?(ВыборкаСтрок.ПорядокПогашенияСтоимости = Перечисления.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету,
					0,
					СтоимостьОС - АмортизацияОС);

				Строка1.Параметры.Причина = ВыборкаСтрок.ПричинаСписания;

				ДокументПринятияКУчету     = "";
				ДокументВводаВЭксплуатацию = "";
				ПринятоКУчету              = "";
				ВведеноВЭксплуатацию       = "";

				УчетОС.ПолучитьДокументБухСостоянияОС(
					ВыборкаСтрок.ОС,
					ВыборкаСтрок.Организация,
					Перечисления.СостоянияОС.ПринятоКУчету,
					ДокументВводаВЭксплуатацию,
					ВведеноВЭксплуатацию);

				СрокЭкспл = УправлениеВнеоборотнымиАктивами.ОпределитьФактическийСрокИспользования(ВведеноВЭксплуатацию, ВыборкаСтрок.Дата);
				Строка1.Параметры.СрокЭкспл = ?(НЕ ЗначениеЗаполнено(СрокЭкспл), "-",
					УправлениеВнеоборотнымиАктивами.РасшифровкаСрокаПолезногоИспользования(СрокЭкспл));

				ТабличныйДокумент.Вывести(Строка1);

			КонецЦикла;

			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			Шапка2.Параметры.Заполнить(ВыборкаСтрок);
			Шапка2.Параметры.ГлавБух = ОтветственныеЛица.ГлавныйБухгалтерПредставление;
			ТабличныйДокумент.Вывести(Шапка2);
			
			Если Не ПерваяИтерация Тогда 
				КоличествоОС4б = КоличествоОС4б + 1;
			КонецЕсли;

		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Ссылка);

	КонецЦикла;
	
	Если КоличествоОС4 = 0 И КоличествоОС4а = 0 Тогда 
		ИмяМакета = "Документ.СписаниеОС.ПФ_MXL_ОС4б";
	ИначеЕсли КоличествоОС4 = 0 И КоличествоОС4б = 0 Тогда 
		ИмяМакета = "Документ.СписаниеОС.ПФ_MXL_ОС4а";
	ИначеЕсли КоличествоОС4а = 0 И КоличествоОС4б = 0 Тогда 
		ИмяМакета = "Документ.СписаниеОС.ПФ_MXL_ОС4";
	КонецЕсли;

	Возврат ТабличныйДокумент;

КонецФункции

// Процедура создает временные "виртуальные" таблицы регистров сведений для дальнейшей работы с ними
//
// Параметры:
//  МВТ            - МенеджерВременныхТаблиц, где будут храниться временные таблицы
//  МассивОбъектов - Массив документов
//
Процедура СоздатьВременныеТаблицыРегистров(МВТ, МассивОбъектов)

	// 1. Определим "границы" регистров сведений - список организаций, ОС, период, ...
	//    чтобы ограничить выборку из регистров сведений
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|// 1. Период дат
	|ВЫБРАТЬ
	|	МИНИМУМ(Док.Дата)  КАК ДатаОТ,
	|	МАКСИМУМ(Док.Дата) КАК ДатаДО
	|ИЗ
	|	Документ.СписаниеОС КАК Док
	|ГДЕ
	|	Док.Ссылка В (&МассивОбъектов)
	|;
	|
	|// 2. Список организаций
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Док.Организация КАК Организация
	|ИЗ
	|	Документ.СписаниеОС КАК Док
	|ГДЕ
	|	Док.Ссылка В (&МассивОбъектов)
	|;
	|
	|// 3. Список ОС
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Док.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	Документ.СписаниеОС.ОС КАК Док
	|ГДЕ
	|	Док.Ссылка В (&МассивОбъектов)
	|
	|";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	Результат = Запрос.ВыполнитьПакет();
	// 1.1. Интервал дат
	Выборка = Результат[0].Выбрать(ОбходРезультатаЗапроса.Прямой);
	Выборка.Следующий();
	ДатаОТ = Выборка.ДатаОТ;
	ДатаДО = Выборка.ДатаДО;

	// 1.2. Список организаций
	МассивОрганизаций = Результат[1].Выгрузить(ОбходРезультатаЗапроса.Прямой).ВыгрузитьКолонку("Организация");

	// 1.3. Список ОС
	МассивОС = Результат[2].Выгрузить(ОбходРезультатаЗапроса.Прямой).ВыгрузитьКолонку("ОсновноеСредство");

	// 2. Создание временных таблиц
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ДатаОТ",            ДатаОТ);
	Запрос.УстановитьПараметр("ДатаДО",            ДатаДО);
	Запрос.УстановитьПараметр("МассивОбъектов",    МассивОбъектов);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	Запрос.УстановитьПараметр("МассивОС",          МассивОС);
	Запрос.Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// 1. Список ОС
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОС.Ссылка           КАК Ссылка,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ
	|	ВТ_ВсеОС
	|ИЗ
	|	Документ.СписаниеОС.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка В (&МассивОбъектов)
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// 2. Первоначальные сведения ОС
	|
	|// 2.1. Временный подзапрос, получение интервалов дат
	|ВЫБРАТЬ
	|	Рег1.Период           КАК Период,
	|	Рег1.Организация      КАК Организация,
	|	МИНИМУМ(Рег2.Период)  КАК ПервыйПериод,
	|	Рег1.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ
	|	ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет_Рег2
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК Рег1
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК Рег2
	|	ПО
	|		Рег1.ОсновноеСредство = Рег2.ОсновноеСредство
	|		И Рег1.Период         < Рег2.Период
	|ГДЕ
	|	Рег1.Период <= &ДатаДО
	|	И Рег1.ОсновноеСредство В (&МассивОС)
	|	И Рег2.Период <= &ДатаДО
	|	И Рег2.ОсновноеСредство В (&МассивОС)
	|СГРУППИРОВАТЬ ПО
	|	Рег1.Период,
	|	Рег1.Организация,
	|	Рег1.ОсновноеСредство
	|ИНДЕКСИРОВАТЬ ПО
	|	Рег1.Период,
	|	Рег1.Организация,
	|	Рег1.ОсновноеСредство
	|;
	|
	|// 2.2. Запрос к первоначальным сведениям ОС
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Рег2.ПервыйПериод ЕСТЬ NULL ТОГДА
	|			ДАТАВРЕМЯ(3999,12,31)
	|		ИНАЧЕ
	|			ДОБАВИТЬКДАТЕ(Рег2.ПервыйПериод, СЕКУНДА, -1)
	|	КОНЕЦ                            КАК ДатаОкончания,
	|	Рег1.Период                      КАК ДатаНачала,
	|	Рег1.ОсновноеСредство            КАК ОсновноеСредство,
	|	Рег1.Организация                 КАК Организация,
	|	Рег1.ИнвентарныйНомер            КАК ИнвентарныйНомер,
	|	Рег1.СпособПоступления           КАК СпособПоступления,
	|	Рег1.ПервоначальнаяСтоимость     КАК ПервоначальнаяСтоимость,
	|	Рег1.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	Рег1.ПараметрВыработки           КАК ПараметрВыработки,
	|	Рег1.ПорядокПогашенияСтоимости   КАК ПорядокПогашенияСтоимости
	|ПОМЕСТИТЬ
	|	ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК Рег1
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет_Рег2 КАК Рег2
	|	ПО
	|		Рег1.ОсновноеСредство = Рег2.ОсновноеСредство
	|		И Рег1.Период         = Рег2.Период
	|ГДЕ
	|	Рег1.Период <= &ДатаДО
	|	И Рег1.ОсновноеСредство В (&МассивОС)
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаНачала,
	|	ДатаОкончания,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// 3. Счета бухгалтерского учета ОС
	|
	|// 3.1. Временный подзапрос, получение интервалов дат
	|ВЫБРАТЬ
	|	Рег1.Период           КАК Период,
	|	МИНИМУМ(Рег2.Период)  КАК ПервыйПериод,
	|	Рег1.Организация      КАК Организация,
	|	Рег1.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ
	|	ВТ_СчетаБухгалтерскогоУчетаОС_Рег2
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК Рег1
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК Рег2
	|	ПО
	|		Рег1.ОсновноеСредство = Рег2.ОсновноеСредство
	|		И Рег1.Организация    = Рег2.Организация
	|		И Рег1.Период         < Рег2.Период
	|ГДЕ
	|	Рег1.Период <= &ДатаДО
	|	И Рег1.Организация В (&МассивОрганизаций)
	|	И Рег1.ОсновноеСредство В (&МассивОС)
	|	И Рег2.Период <= &ДатаДО
	|	И Рег2.Организация В (&МассивОрганизаций)
	|	И Рег2.ОсновноеСредство В (&МассивОС)
	|СГРУППИРОВАТЬ ПО
	|	Рег1.Период,
	|	Рег1.Организация,
	|	Рег1.ОсновноеСредство
	|ИНДЕКСИРОВАТЬ ПО
	|	Рег1.Период,
	|	Рег1.Организация,
	|	Рег1.ОсновноеСредство
	|;
	|
	|// 3.2. Запрос к счетам бухгалтерского учета ОС
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Рег2.ПервыйПериод ЕСТЬ NULL ТОГДА
	|			ДАТАВРЕМЯ(3999,12,31)
	|		ИНАЧЕ
	|			ДОБАВИТЬКДАТЕ(Рег2.ПервыйПериод, СЕКУНДА, -1)
	|	КОНЕЦ                          КАК ДатаОкончания,
	|	Рег1.Период                    КАК ДатаНачала,
	|	Рег1.Организация               КАК Организация,
	|	Рег1.ОсновноеСредство          КАК ОсновноеСредство,
	|	Рег1.СчетУчета                 КАК СчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетНачисленияИзноса,
	|	Рег1.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	Рег1.СчетНачисленияАмортизации КАК СчетНачисленияИзносаАмортизации
	|ПОМЕСТИТЬ
	|	ВТ_СчетаБухгалтерскогоУчетаОС
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК Рег1
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТ_СчетаБухгалтерскогоУчетаОС_Рег2 КАК Рег2
	|	ПО
	|		Рег1.ОсновноеСредство = Рег2.ОсновноеСредство
	|		И Рег1.Организация    = Рег2.Организация
	|		И Рег1.Период         = Рег2.Период
	|ГДЕ
	|	Рег1.Период <= &ДатаДО
	|	И Рег1.Организация В (&МассивОрганизаций)
	|	И Рег1.ОсновноеСредство В (&МассивОС)
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаНачала,
	|	ДатаОкончания,
	|	Организация,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// 4. Местонахождение ОС
	|
	|// 4.1. Временный подзапрос, получение интервалов дат
	|ВЫБРАТЬ
	|	Рег1.Период           КАК Период,
	|	МИНИМУМ(Рег2.Период)  КАК ПервыйПериод,
	|	Рег1.Организация      КАК Организация,
	|	Рег1.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ
	|	ВТ_МестонахождениеОСБухгалтерскийУчет_Рег2
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК Рег1
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК Рег2
	|	ПО
	|		Рег1.ОсновноеСредство = Рег2.ОсновноеСредство
	|		И Рег1.Организация    = Рег2.Организация
	|		И Рег1.Период         < Рег2.Период
	|ГДЕ
	|	Рег1.Период <= &ДатаДО
	|	И Рег1.Организация В (&МассивОрганизаций)
	|	И Рег1.ОсновноеСредство В (&МассивОС)
	|	И Рег2.Период <= &ДатаДО
	|	И Рег2.Организация В (&МассивОрганизаций)
	|	И Рег2.ОсновноеСредство В (&МассивОС)
	|СГРУППИРОВАТЬ ПО
	|	Рег1.Период,
	|	Рег1.Организация,
	|	Рег1.ОсновноеСредство
	|ИНДЕКСИРОВАТЬ ПО
	|	Рег1.Период,
	|	Рег1.Организация,
	|	Рег1.ОсновноеСредство
	|;
	|
	|// 4.2. Запрос к Местонахождение ОС
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Рег2.ПервыйПериод ЕСТЬ NULL ТОГДА
	|			ДАТАВРЕМЯ(3999,12,31)
	|		ИНАЧЕ
	|			ДОБАВИТЬКДАТЕ(Рег2.ПервыйПериод, СЕКУНДА, -1)
	|	КОНЕЦ                          КАК ДатаОкончания,
	|	Рег1.Период                    КАК ДатаНачала,
	|	Рег1.Организация               КАК Организация,
	|	Рег1.ОсновноеСредство          КАК ОсновноеСредство,
	|	Рег1.МОЛ                       КАК МОЛ,
	|	Рег1.Местонахождение           КАК Местонахождение
	|ПОМЕСТИТЬ
	|	ВТ_МестонахождениеОСБухгалтерскийУчет
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК Рег1
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТ_МестонахождениеОСБухгалтерскийУчет_Рег2 КАК Рег2
	|	ПО
	|		Рег1.ОсновноеСредство = Рег2.ОсновноеСредство
	|		И Рег1.Организация    = Рег2.Организация
	|		И Рег1.Период         = Рег2.Период
	|ГДЕ
	|	Рег1.Период <= &ДатаДО
	|	И Рег1.Организация В (&МассивОрганизаций)
	|	И Рег1.ОсновноеСредство В (&МассивОС)
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаНачала,
	|	ДатаОкончания,
	|	Организация,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// 5. СтоимостьОС, итоги по каждому документу
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.Регистратор КАК Регистратор,
	|	ХозрасчетныйОборотыДтКт.СчетКт      КАК СчетКт,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот
	|ПОМЕСТИТЬ
	|	ВТ_СтоимостьОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|		ДОБАВИТЬКДАТЕ(&ДатаОТ, СЕКУНДА, -1),
	|		ДОБАВИТЬКДАТЕ(&ДатаДО, СЕКУНДА, 1),
	|		Регистратор,
	|		СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС),
	|		,
	|		,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|		Организация В (&МассивОрганизаций)
	|	) КАК ХозрасчетныйОборотыДтКт
	|ГДЕ
	|	ХозрасчетныйОборотыДтКт.Регистратор В (&МассивОбъектов)
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	СчетКт,
	|	СубконтоКт1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// 6. АмортизацияОС, итоги по каждому документу
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.Регистратор        КАК Регистратор,
	|	ХозрасчетныйОборотыДтКт.СчетДт             КАК СчетДт,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт1        КАК СубконтоДт1,
	|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК СуммаОборот
	|ПОМЕСТИТЬ
	|	ВТ_АмортизацияОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|		ДОБАВИТЬКДАТЕ(&ДатаОТ, СЕКУНДА, -1),
	|		ДОБАВИТЬКДАТЕ(&ДатаДО, СЕКУНДА, 1),
	|		Регистратор,
	|		,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|		СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС),
	|		,
	|		Организация В (&МассивОрганизаций)
	|	) КАК ХозрасчетныйОборотыДтКт
	|ГДЕ
	|	ХозрасчетныйОборотыДтКт.Регистратор В (&МассивОбъектов)
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОборотыДтКт.Регистратор,
	|	ХозрасчетныйОборотыДтКт.СчетДт,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт1
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	СчетДт,
	|	СубконтоДт1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// 7. Износ или Амортизация ОС (в зависимости от конфигурации), итоги по каждому документу
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.Регистратор  КАК Регистратор,
	|	ХозрасчетныйОборотыДтКт.СчетКт       КАК СчетКт,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1  КАК СубконтоКт1,
	|	СУММА(ХозрасчетныйОборотыДтКт.Сумма) КАК СуммаОборот
	|ПОМЕСТИТЬ
	|	ВТ_ИзносОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|		ДОБАВИТЬКДАТЕ(&ДатаОТ, СЕКУНДА, -1),
	|		ДОБАВИТЬКДАТЕ(&ДатаДО, СЕКУНДА, 1),
	|		Организация В (&МассивОрганизаций)
	|			И СубконтоКт1 В (&МассивОС)
	|			И СчетКт В (ВЫБРАТЬ ВТ_СчетаБухгалтерскогоУчетаОС.СчетНачисленияИзносаАмортизации ИЗ ВТ_СчетаБухгалтерскогоУчетаОС)
	|	) КАК ХозрасчетныйОборотыДтКт
	|ГДЕ
	|	ХозрасчетныйОборотыДтКт.Регистратор В (&МассивОбъектов)
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОборотыДтКт.Регистратор,
	|	ХозрасчетныйОборотыДтКт.СчетКт,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	СчетКт,
	|	СубконтоКт1
	|;
	|
	|";
	Запрос.Выполнить();

КонецПроцедуры

// Функция возвращает параметры ОС
//
Функция ПолучитьПробегАвто(ОбъектОС, НачДата, КонДата, Организация)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КонДата", КонДата);
	Запрос.УстановитьПараметр("НачГраница", Новый Граница(НачДата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонГраница", Новый Граница(КонДата, ВидГраницы.Включая));
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ВыработкаОС.КоличествоОборот КАК Пробег
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|		&КонДата,
		|		ОсновноеСредство = &ОС
		|			И Организация = &Организация
		|	) КАК РегСведенияОС
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|
		|	РегистрНакопления.ВыработкаОС.Обороты(
		|		&НачГраница,
		|		&КонГраница,
		|		,
		|		ОсновноеСредство = &ОС
		|	) КАК ВыработкаОС
		|
		|	ПО
		|		РегСведенияОС.ОсновноеСредство = ВыработкаОС.ОсновноеСредство
		|		И РегСведенияОС.ПараметрВыработки = ВыработкаОС.ПараметрВыработки
		|";

	Запрос.УстановитьПараметр("ОС", ОбъектОС);
	Запрос.УстановитьПараметр("Организация", Организация);

	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();

	Возврат Выборка.Пробег;

КонецФункции

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
Функция ТекстЗапросаПрослеживаемыеТовары(НомераТаблиц, ПараметрыПроведения, ВедетсяУчетПрослеживаемыхТоваров)
	
	Если НЕ ВедетсяУчетПрослеживаемыхТоваров Тогда
		ПараметрыПроведения.Вставить("ПрослеживаемыеОперации", Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеОС", Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеТовары", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВТ_Прослеживаемость",    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ОстаткиМатериалов",   НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РНПТКСписанию",       НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеОперации", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеОС",       НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеТовары",   НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПрослеживаемыеОСОстатки.ОсновноеСредство КАК ОС,
	|	ПрослеживаемыеОСОстатки.Организация КАК Организация,
	|	ПрослеживаемыеОСОстатки.РНПТ КАК РНПТ,
	|	ПрослеживаемыеОСОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СУММА(ПрослеживаемыеОСОстатки.КоличествоОстаток) КАК Количество,
	|	СУММА(ПрослеживаемыеОСОстатки.КоличествоПрослеживаемостиОстаток) КАК КоличествоПрослеживаемости,
	|	ПрослеживаемыеОСОстатки.Комплектующие КАК Комплектующие
	|ПОМЕСТИТЬ ВТ_Прослеживаемость
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(
	|			&МоментСписания,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписаниеОСОС.ОсновноеСредство КАК ОсновноеСредство
	|					ИЗ
	|						Документ.СписаниеОС.ОС КАК СписаниеОСОС
	|					ГДЕ
	|						СписаниеОСОС.Ссылка = &Ссылка
	|						И СписаниеОСОС.ПрослеживаемыйТовар = ИСТИНА)) КАК ПрослеживаемыеОСОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеОСОстатки.РНПТ,
	|	ПрослеживаемыеОСОстатки.СтранаПроисхождения,
	|	ПрослеживаемыеОСОстатки.Организация,
	|	ПрослеживаемыеОСОстатки.Комплектующие,
	|	ПрослеживаемыеОСОстатки.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеОСОС.ОсновноеСредство КАК ОС,
	|	СписаниеОСЦенностиОтВыбытия.Номенклатура КАК Номенклатура,
	|	СУММА(СписаниеОСЦенностиОтВыбытия.Количество) КАК Количество,
	|	СУММА(СписаниеОСЦенностиОтВыбытия.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	СписаниеОСЦенностиОтВыбытия.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СписаниеОСЦенностиОтВыбытия.РНПТ КАК РНПТ
	|ПОМЕСТИТЬ ОстаткиМатериалов
	|ИЗ
	|	Документ.СписаниеОС.ОС КАК СписаниеОСОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеОС.ЦенностиОтВыбытия КАК СписаниеОСЦенностиОтВыбытия
	|		ПО СписаниеОСОС.КлючСтроки = СписаниеОСЦенностиОтВыбытия.КлючСтроки
	|ГДЕ
	|	СписаниеОСОС.Ссылка = &Ссылка
	|	И СписаниеОСОС.ПрослеживаемыйТовар = ИСТИНА
	|	И СписаниеОСЦенностиОтВыбытия.ПрослеживаемыйТовар = ИСТИНА
	|	И СписаниеОСЦенностиОтВыбытия.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СписаниеОСЦенностиОтВыбытия.Номенклатура,
	|	СписаниеОСОС.ОсновноеСредство,
	|	СписаниеОСЦенностиОтВыбытия.СтранаПроисхождения,
	|	СписаниеОСЦенностиОтВыбытия.РНПТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Прослеживаемость.ОС КАК ОС,
	|	ВТ_Прослеживаемость.Организация КАК Организация,
	|	ВТ_Прослеживаемость.РНПТ КАК РНПТ,
	|	ВТ_Прослеживаемость.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СУММА(ВТ_Прослеживаемость.Количество - ЕСТЬNULL(ОстаткиМатериалов.Количество, 0)) КАК Количество,
	|	СУММА(ВТ_Прослеживаемость.КоличествоПрослеживаемости - ЕСТЬNULL(ОстаткиМатериалов.КоличествоПрослеживаемости, 0)) КАК КоличествоПрослеживаемости,
	|	ВТ_Прослеживаемость.Комплектующие КАК Комплектующие
	|ПОМЕСТИТЬ РНПТПоОСКСписанию
	|ИЗ
	|	ВТ_Прослеживаемость КАК ВТ_Прослеживаемость
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиМатериалов КАК ОстаткиМатериалов
	|		ПО ВТ_Прослеживаемость.ОС = ОстаткиМатериалов.ОС
	|			И ВТ_Прослеживаемость.Комплектующие = ОстаткиМатериалов.Номенклатура
	|			И ВТ_Прослеживаемость.СтранаПроисхождения = ОстаткиМатериалов.СтранаПроисхождения
	|			И ВТ_Прослеживаемость.РНПТ = ОстаткиМатериалов.РНПТ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Прослеживаемость.ОС,
	|	ВТ_Прослеживаемость.РНПТ,
	|	ВТ_Прослеживаемость.СтранаПроисхождения,
	|	ВТ_Прослеживаемость.Комплектующие,
	|	ВТ_Прослеживаемость.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РНПТПоОСКСписанию.Организация КАК Организация,
	|	РНПТПоОСКСписанию.РНПТ КАК РНПТ,
	|	РНПТПоОСКСписанию.СтранаПроисхождения КАК СтранаПроисхождения,
	|	НАЧАЛОПЕРИОДА(СписаниеОС.Дата, КВАРТАЛ) КАК ПериодОперации,
	|	СписаниеОС.Ссылка КАК ДокументОперации,
	|	СписаниеОС.Номер КАК НомерДокумента,
	|	СписаниеОС.Дата КАК ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях) КАК ОтражениеВОтчетности,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Акт) КАК ТипДокументаВПрослеживаемости,
	|	СписаниеОС.КодОперацииПрослеживаемости КАК КодОперации,
	|	ВЫБОР
	|		КОГДА РНПТПоОСКСписанию.Комплектующие = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА РНПТПоОСКСписанию.ОС
	|		ИНАЧЕ РНПТПоОСКСписанию.Комплектующие
	|	КОНЕЦ КАК Номенклатура,
	|	РНПТПоОСКСписанию.Количество КАК Количество,
	|	РНПТПоОСКСписанию.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	0 КАК СуммаБезНДС
	|ИЗ
	|	РНПТПоОСКСписанию КАК РНПТПоОСКСписанию,
	|	Документ.СписаниеОС КАК СписаниеОС
	|ГДЕ
	|	СписаниеОС.Ссылка = &Ссылка
	|	И РНПТПоОСКСписанию.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Прослеживаемость.ОС КАК ОсновноеСредство,
	|	ВТ_Прослеживаемость.Организация КАК Организация,
	|	ВТ_Прослеживаемость.РНПТ КАК РНПТ,
	|	ВТ_Прослеживаемость.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_Прослеживаемость.Количество КАК Количество,
	|	ВТ_Прослеживаемость.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ВТ_Прослеживаемость.Комплектующие КАК Комплектующие
	|ИЗ
	|	ВТ_Прослеживаемость КАК ВТ_Прослеживаемость
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиМатериалов.ОС КАК ОсновноеСредство,
	|	ОстаткиМатериалов.Номенклатура КАК Номенклатура,
	|	ОстаткиМатериалов.Количество КАК Количество,
	|	ОстаткиМатериалов.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ОстаткиМатериалов.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ОстаткиМатериалов.РНПТ КАК РНПТ,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК Комиссионер,
	|	НЕОПРЕДЕЛЕНО КАК ОснованиеДляВозврата,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации
	|ИЗ
	|	ОстаткиМатериалов КАК ОстаткиМатериалов";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	СписаниеОСОС.НомерСтроки КАК НомерСтрокиОС,
	|	СписаниеОСОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДСВРознице,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.СчетУчета.Забалансовый КАК СчетУчетаЗабалансовый,
	|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.Принимаются) КАК ОтражениеВУСН,
	|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаПроисхождения,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.СписаниеОС.ЦенностиОтВыбытия КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС.ОС КАК СписаниеОСОС
	|		ПО ТаблицаТовары.Ссылка = СписаниеОСОС.Ссылка
	|			И ТаблицаТовары.КлючСтроки = СписаниеОСОС.КлючСтроки
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаОприходованиеТоваров(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если Не Реквизиты.ОсталисьМатериальныеЦенностиОтВыбытия Тогда
		ПараметрыПроведения.Вставить("ОприходованиеТоваровРеквизиты", Неопределено);
		ПараметрыПроведения.Вставить("ОприходованиеТоваровТаблицаТовары", Неопределено);
		Возврат "";
	КонецЕсли;
	
	// Структура таблицы реквизитов должна содержать все поля, которые есть в таблице рекивизитов
	// для метода УчетТоваров.СформироватьДвиженияОприходованиеТоваров()
	НомераТаблиц.Вставить("ОприходованиеТоваровРеквизиты",		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОприходованиеТоваровТаблицаТовары",	НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Документ.ИнвентаризацияТоваровНаСкладе.ПустаяСсылка) КАК ИнвентаризацияТоваровНаСкладе,
	|	Реквизиты.СчетУчетаДоходов КАК СчетУчетаДоходов,
	|	Реквизиты.СубконтоДоходов КАК СубконтоДоходов
	|ИЗ
	|	Документ.СписаниеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ЦенностиОтВыбытия"" КАК ИмяСписка,
	|	&СинонимЦенностиОтВыбытия КАК СинонимСписка,
	|	ТаблицаТовары.НомерСтрокиОС КАК НомерСтрокиОС,
	|	ТаблицаТовары.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Сумма КАК СуммаНУ,
	|	ТаблицаТовары.СтавкаНДСВРознице КАК СтавкаНДСВРознице,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС) КАК СчетДоходов,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеДоходов,
	|	ТаблицаТовары.ОсновноеСредство КАК СубконтоДоходов1
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС КАК Реквизиты
	|		ПО (Реквизиты.Ссылка = &Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиОС,
	|	ТаблицаТовары.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаОприходованиеТоваровНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если Не Реквизиты.ОсталисьМатериальныеЦенностиОтВыбытия Тогда
		ПараметрыПроведения.Вставить("РеквизитыНДС", Неопределено);
		ПараметрыПроведения.Вставить("ТоварыНДС", Неопределено);
		ПараметрыПроведения.Вставить("НомераГТД", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РеквизитыНДС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТоварыНДС",    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("НомераГТД",    НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение
	|ИЗ
	|	Документ.СписаниеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПлательщикНДС
	|	И НЕ ТаблицаТовары.СчетУчета.Забалансовый
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И НЕ ТаблицаТовары.СчетУчета.Забалансовый
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаОприходованиеТоваровУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если Не Реквизиты.ОсталисьМатериальныеЦенностиОтВыбытия Тогда
		ПараметрыПроведения.Вставить("РеквизитыПоступлениеРасходовУСН", Неопределено);
		ПараметрыПроведения.Вставить("УСНТаблицаРасходов", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РеквизитыПоступлениеРасходовУСН", НомераТаблиц.Количество());
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	&ВалютаРеглУчета КАК Валюта,
	|	ЛОЖЬ КАК УчетАгентскогоНДС,
	|	ИСТИНА КАК ЭтоВозврат,
	|	ЛОЖЬ КАК РасходыПредпринимателя
	|ИЗ
	|	Документ.СписаниеОС КАК Реквизиты
	|ГДЕ
	|	&ОтражатьВРасходахУСН
	|	И Реквизиты.Ссылка = &Ссылка"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	НомераТаблиц.Вставить("УСНТаблицаРасходов", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура) КАК ВидРасхода,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыПартийУСН.Купленные) КАК СтатусыПартийУСН,
	|	ТаблицаТовары.СчетУчета,
	|	ТаблицаТовары.Ссылка КАК Партия,
	|	ТаблицаТовары.Номенклатура КАК ЭлементРасхода,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СчетУчета В (&Счета10)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СчетУчета В (&Счета10)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоМатериал,
	|	ТаблицаТовары.ОтражениеВУСН,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.Сумма,
	|	0 КАК НДС
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ ТаблицаТовары.СчетУчетаЗабалансовый
	|	И &ОтражатьВРасходахУСН";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаКнигаУчетаДоходовИРасходовУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Не Реквизиты.ОсталисьМатериальныеЦенностиОтВыбытия Тогда
		ПараметрыПроведения.Вставить("РеквизитыУСН", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РеквизитыУСН", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	0 КАК СтрокаДокумента,
	|	СУММА(ТаблицаТовары.Сумма) КАК Графа4,
	|	СУММА(ТаблицаТовары.Сумма) КАК Графа5,
	|	0 КАК Графа6,
	|	0 КАК Графа7,
	|	0 КАК НДС,
	|	НЕОПРЕДЕЛЕНО КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Документ.ИнвентаризацияТоваровНаСкладе.ПустаяСсылка) КАК ИнвентаризацияТоваровНаСкладе
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС КАК Реквизиты
	|		ПО (Реквизиты.Ссылка = &Ссылка)
	|ГДЕ
	|	&ПрименяетсяУСН
	|
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.Ссылка,
	|	Реквизиты.Дата,
	|	Реквизиты.Организация,
	|	Реквизиты.Номер";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаОприходованиеТоваровИП(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если Не Реквизиты.ОсталисьМатериальныеЦенностиОтВыбытия Тогда
		ПараметрыПроведения.Вставить("ОприходованиеТоваровИПРеквизиты", Неопределено);
		ПараметрыПроведения.Вставить("ОприходованиеТоваровИПТаблица", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ОприходованиеТоваровИПРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОприходованиеТоваровИПТаблица",   НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад.ТипСклада КАК ТипСклада,
	|	Реквизиты.СубконтоДоходов КАК СтатьяДоходов,
	|	Реквизиты.СубконтоДоходов.ВидДеятельностиДляНалоговогоУчетаЗатрат КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|	ЕСТЬNULL(Реквизиты.СубконтоДоходов.ПринятиеКналоговомуУчету, ЛОЖЬ) КАК ПринятиеКналоговомуУчету
	|ИЗ
	|	Документ.СписаниеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ЦенностиОтВыбытия"" КАК ИмяСписка,
	|	&СинонимЦенностиОтВыбытия КАК СинонимСписка,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
	|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
	|		ИНАЧЕ ТаблицаТовары.Номенклатура.НоменклатурнаяГруппа
	|	КОНЕЦ КАК НоменклатурнаяГруппа,
	|	ТаблицаТовары.Ссылка КАК Партия,
	|	ТаблицаТовары.Ссылка КАК ДокументОплаты,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СчетУчета
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПлательщикНДФЛ
	|	И НЕ(&СпособОценкиТоваровВРознице = ЗНАЧЕНИЕ(Перечисление.СпособыОценкиТоваровВРознице.ПоПродажнойСтоимости)
	|				И &ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.НеавтоматизированнаяТорговаяТочка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		
КонецФункции

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовВПоследовательности(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период) Тогда
		ПараметрыПроведения.Вставить("ТаблицаРегистрации", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ТаблицаРегистрации", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.СчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК КорСчетСписания
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ПодготовитьПараметрыОтраженияДоходовОтОприходованияТоваров(ДоходыОтОприходованияТоваров, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ДоходыОтОприходованияТоваров

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство,"  // <СправочникСсылка.ОсновныеСредства> - основное средство, по которому получен доход от оприходования ценностей.
	+ "СуммаНУ";           // <Число,15,2> - сумма в рублях в налоговом учете
	
	Параметры.Вставить("ДоходыОтОприходованияТоваров",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ДоходыОтОприходованияТоваров, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Регистратор,"                   // <ДокументСсылка.*> - документ-регистратор движений
	+ "Период,"                        // <Дата> - период движений - дата документа
	+ "Организация,"                   // <СправочникСсылка.Организация> - организация, в которую приходуется товар
	+ "Подразделение,"                 // <Ссылка на справочник подразделений> - подразделение, в которое приходуется товар
	+ "СчетУчетаДоходов,"              // <ПланСчетовСсылка.Хозрасчетный> - счет, по которому отражаются доходы.
	+ "СубконтоДоходов";               // <ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Значение> - аналитика доходов.

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

#Область СчетаУчета

Функция УстановитьПравилаЗаполненияСчетовУчета(Правила) Экспорт
	
	// Шапка
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетСписания", "РасходыОтСписанияОС");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто", "СубконтоЗатрат1");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчетаДоходов", "ДоходыОтСписанияОС");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоДоходов", "СубконтоПрочихДоходов1");
	
	// Табличная часть ЦенностиОтВыбытия
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ЦенностиОтВыбытия", "СчетУчета", "ЗапасыКромеЗабалансовых");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхЗаполнения(Правила, "Склад", "Склад");
	
	// Данные заполнения
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Дата");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Организация");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Склад");
	
	Возврат Правила;
	
КонецФункции

Функция РеквизитыЗаСсылками() Экспорт
	
	РеквизитыЗаСсылками = Новый Соответствие;
	
	// Прячутся за "Расходы и доходы"
	РеквизитыЗаСсылками.Вставить("СчетСписания", "ОписаниеДоходовИРасходов");
	РеквизитыЗаСсылками.Вставить("Субконто", "ОписаниеДоходовИРасходов");
	РеквизитыЗаСсылками.Вставить("СчетУчетаДоходов", "ОписаниеДоходовИРасходов");
	РеквизитыЗаСсылками.Вставить("СубконтоДоходов", "ОписаниеДоходовИРасходов");
	
	// Прячутся за "ЦенностиОтВыбытия"
	РеквизитыЗаСсылками.Вставить("ЦенностиОтВыбытия.Номенклатура", "ЦенностиОтВыбытия");
	РеквизитыЗаСсылками.Вставить("ЦенностиОтВыбытия.Количество", "ЦенностиОтВыбытия");
	РеквизитыЗаСсылками.Вставить("ЦенностиОтВыбытия.СчетУчета", "ЦенностиОтВыбытия");
	
	Возврат РеквизитыЗаСсылками;
	
КонецФункции

#КонецОбласти
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)
#КонецОбласти

#КонецЕсли