#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
	УстановитьВидимостьСчетовУчета();
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборОсновныхСредств.Форма.Форма" Тогда
		ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
	ИначеЕсли ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ВыборКодаОперацииПрослеживаемости" Тогда
		ОбработкаВыбораКодаОперацииПрослеживаемости(ВыбранноеЗначение);
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "ПроведениеСписаниеОС";
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ИзмененаИнформацияОС", Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Организация) И Объект.ОС.Количество() > 0 Тогда
		ЗаполнитьИнвентарныеНомераОС();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;

	ТребуетсяВызовСервера = Ложь;

	// Проверим наличие строк в табличной части.
	Если Объект.ОС.Количество() > 0 Тогда
		ТребуетсяВызовСервера = НЕ ЗначениеЗаполнено(МаксПериодПервоначальныхСведенийОС) 
			ИЛИ (МаксПериодПервоначальныхСведенийОС >= Объект.Дата);
	КонецЕсли;
		
	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		ДатаПриИзмененииНаСервере();
	КонецЕсли;
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
	УстановитьПараметрыПоПрослеживаемости();
	
	ОбновитьПризнакПрослеживаемости();
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)
	
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура СчетСписанияПриИзменении(Элемент)
	
	БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииСчета(
		ЭтотОбъект, Объект, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	
КонецПроцедуры

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		СкладПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеДоходовИРасходовНажатие(Элемент, СтандартнаяОбработка)
	
	Если Не ТолькоПросмотр Тогда
		ЗаблокироватьДанныеФормыДляРедактирования();
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ОповещениеОЗакрытииФормыВыбора = Новый ОписаниеОповещения("Подключаемый_ЗавершениеВыбораСчетовДоходовРасходов", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура(ИменаПолейСчетовДоходовРасходов());
	ЗаполнитьЗначенияСвойств(ПараметрыФормы, Объект);
	ПараметрыФормы.Вставить("Организация", Объект.Организация);
	ПараметрыФормы.Вставить("ПоказыватьДоходы", Объект.ОсталисьМатериальныеЦенностиОтВыбытия);
	ПараметрыФормы.Вставить("ТолькоПросмотр", ТолькоПросмотр);
	
	ОткрытьФорму("Документ.СписаниеОС.Форма.ФормаДоходыРасходы", ПараметрыФормы,
		ЭтотОбъект, УникальныйИдентификатор, , , ОповещениеОЗакрытииФормыВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоступилиЦенностиОтЛиквидацииПриИзменении(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьОписаниеДоходовРасходов(ЭтотОбъект);
	УстановитьВидимостьЭлементовЦенностейОтВыбытия(ЭтотОбъект);
	Если Объект.ОсталисьМатериальныеЦенностиОтВыбытия Тогда
		ЗаполнитьЦенностиОтВыбытия();
	КонецЕсли;
	
КонецПроцедуры
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОС

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
&НаКлиенте
Процедура ОСПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущиеДанныеОС = Элементы.ОС.ТекущиеДанные;
		ТекущиеДанныеОС.ОписаниеЦенностейОтВыбытия = НаименованиеНазаполненныхЦенностей();
	КонецЕсли;
	
КонецПроцедуры
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)

&НаКлиенте
Процедура ОСОсновноеСредствоПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.ОС.ТекущиеДанные;
	ОсновноеСредство = СтрокаТЧ.ОсновноеСредство;
	Если НЕ ЗначениеЗаполнено(ОсновноеСредство) Тогда
		СтрокаТЧ.ИнвентарныйНомер = "";
	Иначе
		СтруктураСведений 					= СведенияОбИнвентарномНомереОС(ОсновноеСредство, Объект.Организация, Объект.Дата);
		СтрокаТЧ.ИнвентарныйНомер 			= СтруктураСведений.ИнвентарныйНомер;
		МаксПериодПервоначальныхСведенийОС 	= Макс(МаксПериодПервоначальныхСведенийОС, СтруктураСведений.Период);
	КонецЕсли;
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
	Если ВедетсяУчетПрослеживаемыхТоваров Тогда
		СтрокаТЧ.ПрослеживаемыйТовар = ПрослеживаемостьФормыВызовСервера.ПолучитьПризнакПрослеживаемости(СтрокаТЧ.ОсновноеСредство);
	КонецЕсли;
	
	НастроитьВидимостьНадписиКодаОперацииПрослеживаемости();
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)
КонецПроцедуры

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
&НаКлиенте
Процедура ОСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ОСЦенностиОтВыбытия" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ВыбраннаяСтрока = Элементы.ОС.ТекущиеДанные;
		ОткрытьСписокЦенностей(ВыбраннаяСтрока);
		
	КонецЕсли;
	
	Если Поле.Имя = "ОСПрослеживаемыйТовар" Тогда
		ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
		Если ТекущиеДанные.ПрослеживаемыйТовар Тогда
			ПрослеживаемостьФормыКлиентБП.ПоказатьПредупреждениеПрослеживаемыйТовар();
		Конецесли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОСПослеУдаления(Элемент)
	НастроитьВидимостьНадписиКодаОперацииПрослеживаемости();
КонецПроцедуры
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405) 
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоНаименованию(Команда)
	
	ОсновноеСредство = УправлениеВнеоборотнымиАктивамиКлиент.ПолучитьОСДляЗаполнениеПоНаименованию(
		ПараметрыЗаполненияПоНаименованию(ЭтаФорма));
	
	Если ЗначениеЗаполнено(ОсновноеСредство) Тогда
		
		ЗаполнитьПоНаименованиюСервер(ОсновноеСредство);
		
	КонецЕсли;
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
	НастроитьВидимостьНадписиКодаОперацииПрослеживаемости();
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыФормы = Новый Структура;
	Если Объект.ОС.Количество() > 0 Тогда
		ПараметрыФормы.Вставить("АдресОСВХранилище", ПоместитьОСВХранилище());
	КонецЕсли;
	//ОКЕЙ Иванов А.Е.(СофтЛаб) Начало 2018-04-25 (#3010)
	Если ЗначениеЗаполнено(Объект.ПодразделениеОрганизации) Тогда
		ПараметрыФормы.Вставить("МестонахождениеОС", Объект.ПодразделениеОрганизации);
	КонецЕсли;
	//ОКЕЙ Иванов А.Е.(СофтЛаб) Конец 2018-04-25 (#3010)	
	
	ОткрытьФорму("Обработка.ПодборОсновныхСредств.Форма.Форма", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	УстановитьСостояниеДокумента();
	
	ТекущаяДатаДокумента = Объект.Дата;
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
	УстановитьОписаниеДоходовРасходов(ЭтотОбъект);
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)
	ЗаполнитьИнвентарныеНомераОС();
	
	БухгалтерскийУчетКлиентСервер.УстановитьНачальныеСвойстваСубконтоШапки(
		ЭтотОбъект, Объект, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
		
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
	УстановитьВидимостьЭлементовЦенностейОтВыбытия(ЭтотОбъект);
	
	ЗаполнитьЦенностиОтВыбытия();
	
	УстановитьПараметрыПоПрослеживаемости();
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-18 (#4405)
&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.Организация) И Объект.ОС.Количество() > 0 Тогда
		ЗаполнитьИнвентарныеНомераОС();
	КонецЕсли;
	
	ЗаполнениеДокументов.ПриИзмененииЗначенияОрганизации(Объект, Пользователи.ТекущийПользователь());
	
	ПричиныИзменения = Новый Массив();
	ПричиныИзменения.Добавить("Организация");
	
	ПодразделениеПоУмолчанию = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновноеПодразделениеОрганизации");
	Если БухгалтерскийУчетПереопределяемый.ПодразделениеПринадлежитОрганизации(ПодразделениеПоУмолчанию, Объект.Организация) Тогда
		Объект.ПодразделениеОрганизации = ПодразделениеПоУмолчанию;
		ПричиныИзменения.Добавить("ПодразделениеОрганизации");
	КонецЕсли;
	
	СчетаУчетаВДокументах.ЗаполнитьОбъектПриИзменении(ОтчетПроизводстваЗаСменуФормыКлиентСервер.НачатьЗаполнениеСчетовУчета(ПричиныИзменения, Объект));
	
КонецПроцедуры

&НаСервере
Процедура СкладПриИзмененииНаСервере()
	
	СчетаУчетаВДокументах.ЗаполнитьОбъектПриИзменении(
		ОтчетПроизводстваЗаСменуФормыКлиентСервер.НачатьЗаполнениеСчетовУчета("Склад", Объект));
	
КонецПроцедуры
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-18 (#4405)

&НаСервере
Процедура ЗаполнитьИнвентарныеНомераОС()
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
	//ТаблицаОС = Объект.ОС.Выгрузить(, "НомерСтроки, ОсновноеСредство");
	ТаблицаОС = Объект.ОС.Выгрузить(, "НомерСтроки, ОсновноеСредство, ПрослеживаемыйТовар");
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
	
	ТаблицаНомеров = УчетОС.ПолучитьТаблицуИнвентарныхНомеровОС(ТаблицаОС,
		Объект.Организация, Объект.Дата);
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
	//Объект.ОС.Загрузить(ТаблицаНомеров);
	Для Каждого СтрокаОС Из Объект.ОС Цикл
		
		СтрокаНомера = ТаблицаНомеров.Найти(СтрокаОС.ОсновноеСредство, "ОсновноеСредство");
		Если СтрокаНомера = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаОС.ИнвентарныйНомер = СтрокаНомера.ИнвентарныйНомер;
		
	КонецЦикла;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
	
	// Запомним максимальную дату первоначальных сведений ОС
	ТаблицаНомеров.Сортировать("Период");
	Если ТаблицаНомеров.Количество() > 0 Тогда
		МаксПериодПервоначальныхСведенийОС = ТаблицаНомеров[ТаблицаНомеров.Количество() - 1].Период;
	Иначе
		МаксПериодПервоначальныхСведенийОС = '0001-01-01';
	КонецЕсли;
	
КонецПроцедуры

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
&НаСервере
Процедура ЗаполнитьЦенностиОтВыбытия()
	
	Если Не Объект.ОсталисьМатериальныеЦенностиОтВыбытия Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияЦенностей = ОписанияЦенностейОтВыбытия(Объект.ЦенностиОтВыбытия);
	
	НаименованиеНезаполненныхЦенностей = НаименованиеНазаполненныхЦенностей();
	
	Для Каждого СтрокаОС ИЗ Объект.ОС Цикл
		
		СтрокаОС.ОписаниеЦенностейОтВыбытия = НаименованиеНезаполненныхЦенностей;
		
		Если Не ЗначениеЗаполнено(СтрокаОС.КлючСтроки) Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеЦенностейСтроки = ОписанияЦенностей.Получить(СтрокаОС.КлючСтроки);
		Если ОписаниеЦенностейСтроки = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаОС.ОписаниеЦенностейОтВыбытия = СтрСоединить(ОписаниеЦенностейСтроки, ", ");
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОписаниеЦенностейСтроки(ЦенностиОтВыбытияСтроки)
	
	НаименованияЦенностей = НаименованияЦенностей(ЦенностиОтВыбытияСтроки);
	
	Если Не ЗначениеЗаполнено(НаименованияЦенностей) Тогда
		Возврат НаименованиеНазаполненныхЦенностей();
	КонецЕсли;
	
	НаименованияНоменклатур = Новый Массив;
	Для Каждого КлючЗначение Из НаименованияЦенностей Цикл
		НаименованияНоменклатур.Добавить(КлючЗначение.Значение);
	КонецЦикла;
	
	Возврат СтрСоединить(НаименованияНоменклатур, ", ");
	
КонецФункции

&НаСервереБезКонтекста
Функция ОписанияЦенностейОтВыбытия(ЦенностиОтВыбытия)
	
	НаименованияЦенностей = НаименованияЦенностей(ЦенностиОтВыбытия);
	
	ОписанияЦенностейОтВыбытия = Новый Соответствие;
	
	СписокНоменклатуры = Новый Массив;
	Для Каждого СтрокаЦенности Из ЦенностиОтВыбытия Цикл
		
		НаименованиеЦенности = НаименованияЦенностей.Получить(СтрокаЦенности.Номенклатура);
		Если НаименованиеЦенности = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеДляКлючаСтроки = ОписанияЦенностейОтВыбытия.Получить(СтрокаЦенности.КлючСтроки);
		Если ОписаниеДляКлючаСтроки = Неопределено Тогда
			ОписаниеДляКлючаСтроки = Новый Массив;
			ОписанияЦенностейОтВыбытия.Вставить(СтрокаЦенности.КлючСтроки, ОписаниеДляКлючаСтроки);
		КонецЕсли;
		
		ОписаниеДляКлючаСтроки.Добавить(НаименованиеЦенности);
		
	КонецЦикла;
	
	Возврат ОписанияЦенностейОтВыбытия;
	
КонецФункции

&НаСервереБезКонтекста
Функция НаименованияЦенностей(ЦенностиОтВыбытия)
	
	ТаблицаНоменклатуры = ЦенностиОтВыбытия.Выгрузить(,"Номенклатура");
	ТаблицаНоменклатуры.Свернуть("Номенклатура");
	НаименованияЦенностей = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(
		ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура"), "Наименование");
	
	Возврат НаименованияЦенностей;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НаименованиеНазаполненныхЦенностей()
	
	Возврат НСтр("ru = 'Нет'");
	
КонецФункции
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)

&НаСервереБезКонтекста
Функция СведенияОбИнвентарномНомереОС(ОсновноеСредство, Организация, Дата)

	Возврат УчетОС.СведенияОбИнвентарномНомереОС(ОсновноеСредство, Организация, Дата);

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыЗаполненияПоНаименованию(Форма)
	
	Результат = Новый Структура;
	Результат.Вставить("Форма", Форма);
	Результат.Вставить("Объект", Форма.Объект);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПоНаименованиюСервер(Знач ОсновноеСредство)
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
	//УчетОС.ДозаполнитьТабличнуюЧастьОсновнымиСредствамиПоНаименованию(
	//	ПараметрыЗаполненияПоНаименованию(ЭтаФорма), ОсновноеСредство);
	Если УчетОС.ДозаполнитьТабличнуюЧастьОсновнымиСредствамиПоНаименованию(
		ПараметрыЗаполненияПоНаименованию(ЭтаФорма), ОсновноеСредство) Тогда
		ЗаполнитьЦенностиОтВыбытия();
	КонецЕсли;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
	
КонецПроцедуры

&НаСервере
Функция ПоместитьОСВХранилище()
	
	ТаблицаОС = Объект.ОС.Выгрузить(, "НомерСтроки, ОсновноеСредство");
	Возврат ПоместитьВоВременноеХранилище(ТаблицаОС);
	
КонецФункции

&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(Знач ВыбранноеЗначение)
	
	ДобавленныеСтроки = УчетОС.ОбработатьПодборОсновныхСредств(Объект.ОС, ВыбранноеЗначение);
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
	Для Каждого ДобавленнаяСтрока Из ДобавленныеСтроки Цикл
		ДобавленнаяСтрока.ОписаниеЦенностейОтВыбытия = НаименованиеНазаполненныхЦенностей();
		Если ВедетсяУчетПрослеживаемыхТоваров Тогда
			ДобавленнаяСтрока.ПрослеживаемыйТовар = ПрослеживаемостьФормыВызовСервера.ПолучитьПризнакПрослеживаемости(ДобавленнаяСтрока.ОсновноеСредство);
		КонецЕсли;
	КонецЦикла;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
	
	ЗаполнитьИнвентарныеНомераОС();
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()

	ЗаполнитьИнвентарныеНомераОС();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыУстановкиСвойствСубконто(Форма)
	
	Результат = БухгалтерскийУчетКлиентСервер.НовыеПараметрыУстановкиСвойствСубконто();
	
	Результат.ПоляФормы.Субконто1   = "Субконто";
	Результат.ПоляОбъекта.Субконто1 = "Субконто";
	Результат.ПоляОбъекта.СчетУчета = "СчетСписания";
	
	Результат.ДопРеквизиты.Вставить("Организация", Форма.Объект.Организация);
	
	Возврат Результат;
	
КонецФункции

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
&НаКлиентеНаСервереБезКонтекста
Функция ИменаПолейСчетовДоходовРасходов()
	Возврат "СчетСписания,Субконто,СчетУчетаДоходов,СубконтоДоходов";
КонецФункции

&НаКлиенте
Процедура Подключаемый_ЗавершениеВыбораСчетовДоходовРасходов(РезультатВыбораСчетов, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(РезультатВыбораСчетов) Тогда
		ЗаполнитьЗначенияСвойств(Объект, РезультатВыбораСчетов, ИменаПолейСчетовДоходовРасходов());
		УстановитьОписаниеДоходовРасходов(ЭтотОбъект);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЗаголовокОписанияСчетовДоходовРасходов(Форма)
	
	Если Форма.Объект.ОсталисьМатериальныеЦенностиОтВыбытия Тогда
		Возврат НСтр("ru = 'Доходы и расходы'");
	Иначе
		Возврат НСтр("ru = 'Расходы'");
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОписаниеСчетовДоходовРасходов(СчетаАналитика, ОсталисьМатериальныеЦенностиОтВыбытия)
	
	ЧастиОписания = Новый Массив;
	Если ОсталисьМатериальныеЦенностиОтВыбытия Тогда
		ЧастиОписания.Добавить(Строка(СчетаАналитика.СчетУчетаДоходов));
		Если ЗначениеЗаполнено(СчетаАналитика.СубконтоДоходов) Тогда
			ЧастиОписания.Добавить(Строка(СчетаАналитика.СубконтоДоходов));
		Иначе
			ЧастиОписания.Добавить(ОбщегоНазначенияБПКлиентСервер.ПредставлениеНезаполненногоЗначения());
		КонецЕсли;
	КонецЕсли;
	ЧастиОписания.Добавить(Строка(СчетаАналитика.СчетСписания));
	Если ЗначениеЗаполнено(СчетаАналитика.Субконто) Тогда
		ЧастиОписания.Добавить(Строка(СчетаАналитика.Субконто));
	Иначе
		ЧастиОписания.Добавить(ОбщегоНазначенияБПКлиентСервер.ПредставлениеНезаполненногоЗначения());
	КонецЕсли;
	Возврат СтрСоединить(ЧастиОписания, ", ");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СчетаАналитикаДоходовРасходов(Форма)
	
	СчетаАналитика = Новый Структура(ИменаПолейСчетовДоходовРасходов());
	ЗаполнитьЗначенияСвойств(СчетаАналитика, Форма.Объект);
	Возврат СчетаАналитика;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОписаниеДоходовРасходов(Форма)
	
	Форма.Элементы.ОписаниеДоходовИРасходов.Заголовок = ЗаголовокОписанияСчетовДоходовРасходов(Форма);
	Форма.ОписаниеДоходовИРасходов = ОписаниеСчетовДоходовРасходов(
		СчетаАналитикаДоходовРасходов(Форма), Форма.Объект.ОсталисьМатериальныеЦенностиОтВыбытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокЦенностей(ВыбраннаяСтрока)
	
	АдресВременногоХранилища = ПоместитьЦенностиВоВременноеХранилище(ВыбраннаяСтрока.КлючСтроки);
	
	ПараметрыЗакрытияФормы = Новый Структура;
	ПараметрыЗакрытияФормы.Вставить("ВыбраннаяСтрока", ВыбраннаяСтрока);
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("АдресХранилищаЦенностей", АдресВременногоХранилища);
	ПараметрыОткрытияФормы.Вставить("Склад",                   Объект.Склад);
	ПараметрыОткрытияФормы.Вставить("Организация",             Объект.Организация);
	ПараметрыОткрытияФормы.Вставить("ПодразделениеОрганизации", Объект.ПодразделениеОрганизации);
	ПараметрыОткрытияФормы.Вставить("Дата",                    Объект.Дата);
	ПараметрыОткрытияФормы.Вставить("ОсновноеСредство",        ВыбраннаяСтрока.ОсновноеСредство);
	ПараметрыОткрытияФормы.Вставить("ВедетсяУчетПрослеживаемыхТоваров", ВедетсяУчетПрослеживаемыхТоваров и ВыбраннаяСтрока.ПрослеживаемыйТовар);
	
	ОповещениеОЗакрытииФормыВыбора = Новый ОписаниеОповещения("Подключаемый_ПослеРедактированияСпискаЦенностейСтроки",
		ЭтотОбъект, ПараметрыЗакрытияФормы);
	
	ОткрытьФорму("Документ.СписаниеОС.Форма.ФормаЦенностиОтВыбытия", ПараметрыОткрытияФормы, ЭтотОбъект, , , ,
		ОповещениеОЗакрытииФормыВыбора, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Функция ПоместитьЦенностиВоВременноеХранилище(КлючСтроки);
	
	Если ЗначениеЗаполнено(КлючСтроки) Тогда
		Отбор = Новый Структура("КлючСтроки", КлючСтроки);
		ТаблицаЦенностей = Объект.ЦенностиОтВыбытия.Выгрузить(Отбор);
	Иначе
		ТаблицаЦенностей = Неопределено;
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаЦенностей, УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПослеРедактированияСпискаЦенностейСтроки(РезультатЗакрытия, ПараметрыЗакрытияФормы) Экспорт
	
	ВыбраннаяСтрока = ПараметрыЗакрытияФормы.ВыбраннаяСтрока;
	
	Если ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		
		ЗаполнитьОписаниеЦенностейОтВыбытияСтроки(ВыбраннаяСтрока, РезультатЗакрытия.ЦенностиОтВыбытия);
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОписаниеЦенностейОтВыбытияСтроки(ВыбраннаяСтрока, ЦенностиОтВыбытияСтроки)
	
	Если ЗначениеЗаполнено(ВыбраннаяСтрока.КлючСтроки) Тогда
		УдалитьЦенностиСтроки(ВыбраннаяСтрока.КлючСтроки);
	Иначе
		ВыбраннаяСтрока.КлючСтроки = Строка(Новый УникальныйИдентификатор);
	КонецЕсли;
	
	Для Каждого СтрокаЦенности Из ЦенностиОтВыбытияСтроки Цикл
		СтрокаЦенностиОбъекта = Объект.ЦенностиОтВыбытия.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаЦенностиОбъекта, СтрокаЦенности, 
			"Номенклатура,Количество,Цена,Сумма,СчетУчета,ПрослеживаемыйТовар,СтранаПроисхождения,РНПТ,КоличествоПрослеживаемости");
		СтрокаЦенностиОбъекта.КлючСтроки = ВыбраннаяСтрока.КлючСтроки;
	КонецЦикла;
	
	ВыбраннаяСтрока.ОписаниеЦенностейОтВыбытия = ОписаниеЦенностейСтроки(ЦенностиОтВыбытияСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЦенностиСтроки(КлючСтроки)
	
	Отбор = Новый Структура("КлючСтроки", КлючСтроки);
	СтрокиНаУдаление = Объект.ЦенностиОтВыбытия.НайтиСтроки(Отбор);
	
	Для Каждого Строка Из СтрокиНаУдаление Цикл
		Объект.ЦенностиОтВыбытия.Удалить(Строка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьЭлементовЦенностейОтВыбытия(Форма)
	
	Элементы = Форма.Элементы;
	ОсталисьМатериальныеЦенностиОтВыбытия = Форма.Объект.ОсталисьМатериальныеЦенностиОтВыбытия;
	Элементы.Склад.Видимость = ОсталисьМатериальныеЦенностиОтВыбытия;
	Элементы.ОСЦенностиОтВыбытия.Видимость = ОсталисьМатериальныеЦенностиОтВыбытия;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСчетовУчета()
	
	ПользовательУправляетСчетамиУчета = СчетаУчетаВДокументахВызовСервераПовтИсп.ПользовательУправляетСчетамиУчета();
	Элементы.ОписаниеДоходовИРасходов.Видимость = ПользовательУправляетСчетамиУчета;
	
КонецПроцедуры
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
&НаКлиенте
Процедура КодОперацииПрослеживаемостиНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("КодОперацииПрослеживаемости", Объект.КодОперацииПрослеживаемости);
	СтруктураПараметров.Вставить("ЭтоОС",                       Истина);
	
	ОткрытьФорму("ОбщаяФорма.ВыборКодаОперацииПрослеживаемости", СтруктураПараметров, ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьНадписиКодаОперацииПрослеживаемости()
	
	ПрослеживаемыйТоварВТЧ = Объект.ОС.НайтиСтроки(Новый Структура("ПрослеживаемыйТовар", Истина));
	
	Если ПрослеживаемыйТоварВТЧ.Количество() > 0 И ВедетсяУчетПрослеживаемыхТоваров Тогда
		ЕстьПрослеживаемыйТовар = Истина;
		ОбновитьЗаголовокКодаОперацииПрослеживаемости();
	Иначе
		Объект.КодОперацииПрослеживаемости =
		ПредопределенноеЗначение("Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка");
		ЕстьПрослеживаемыйТовар = Ложь;
	КонецЕсли;
	
	Элементы.НадписьКодОперации.Видимость = ЕстьПрослеживаемыйТовар;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовокКодаОперацииПрослеживаемости()
	
	Если ЗначениеЗаполнено(Объект.КодОперацииПрослеживаемости) Тогда 
		НадписьКодОперации = СтрШаблон("%1 - %2",
		Объект.КодОперацииПрослеживаемости, 
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.КодОперацииПрослеживаемости, "Наименование"));
		
		Элементы.НадписьКодОперации.ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
	Иначе
		НадписьКодОперации = НСтр("ru='<Выбрать>'");
		Элементы.НадписьКодОперации.ЦветТекста = ЦветаСтиля.ВажноеСобытие;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьПризнакПрослеживаемости()
	РаботаСНоменклатурой.ОбновитьПризнакПрослеживаемости(Объект.ОС, ВедетсяУчетПрослеживаемыхТоваров, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораКодаОперацииПрослеживаемости(ВыбранноеЗначение)
	
	Если Объект.КодОперацииПрослеживаемости <> ВыбранноеЗначение Тогда
		Модифицированность = Истина;
		Объект.КодОперацииПрослеживаемости = ВыбранноеЗначение;
		ОбновитьЗаголовокКодаОперацииПрослеживаемости();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыПоПрослеживаемости()
	
	ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Объект.Дата);
	Элементы.ОСПрослеживаемыйТовар.Видимость = ВедетсяУчетПрослеживаемыхТоваров;
	
	НастроитьВидимостьНадписиКодаОперацииПрослеживаемости();
	
КонецПроцедуры
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
#КонецОбласти