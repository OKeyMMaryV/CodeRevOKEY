
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
			
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	фЭтоАдмин = бит_мдм.ЭтоАдминистраторМДМ();
	СформироватьИнформациюСтатус(Статус, ДатаИзмененияСтатуса, ИнформацияСтатус);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
	
		 Если ВыбранноеЗначение.Свойство("Статус") Тогда
		 
			 ЭтаФорма.Статус               = ВыбранноеЗначение.Статус;
			 ЭтаФорма.ДатаИзмененияСтатуса = ВыбранноеЗначение.ДатаИзмененияСтатуса;
			 СтруктураПараметров  = Новый Структура("Статус,ДатаИзмененияСтатуса"
			                                        ,ВыбранноеЗначение.Статус
													,ВыбранноеЗначение.ДатаИзмененияСтатуса);
			 ИнформацияСтатус     = бит_ОбщегоНазначенияКлиентСервер.СформироватьИнформациюСтатус(СтруктураПараметров);
		 
		 КонецЕсли; 
	
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбновитьПараметрыСтатуса();
	
	УправлениеЭлементамиФормы();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьПараметрыСтатуса();
	СформироватьИнформациюСтатус(Статус, ДатаИзмененияСтатуса, ИнформацияСтатус);
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
		
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "Проведениебит_мдм_ЗаявкаНаУдаление";
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененСтатус" И Источник = УникальныйИдентификатор Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметр);
		СформироватьИнформациюСтатус(Статус, ДатаИзмененияСтатуса, ИнформацияСтатус);
		УправлениеЭлементамиФормы();
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОписаниеОбъектаПриИзменении(Элемент)
	УстановитьТипПредмета();
КонецПроцедуры

&НаКлиенте
Процедура ПредметОчистка(Элемент, СтандартнаяОбработка)
	
	УстановитьТипПредмета();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнформацияСтатусНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Фильтр 		   = Новый Структура("Объект", Объект.Ссылка);
	ПараметрыФормы = Новый Структура("Отбор", Фильтр);
	Открытьформу("РегистрСведений.бит_ИсторияИзмененияСтатусовОбъектов.ФормаСписка", 
		ПараметрыФормы, ЭтотОбъект, ЭтотОбъект,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемыОбработчикиКоманд

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
Процедура КомандаВыполнить(Команда)
	КомандаВыполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаВыполнитьНаСервере()
	
	ТекущийОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.бит_мдм_ЗаявкаНаУдаление"));
	ТекущийОбъект.ИсполнитьЗаявку();
	
	ЗначениеВДанныеФормы(ТекущийОбъект, Объект);
	
	ОбновитьПараметрыСтатуса();
	СформироватьИнформациюСтатус(Статус, ДатаИзмененияСтатуса, ИнформацияСтатус);
	
	УправлениеЭлементамиФормы();	
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

// Процедура управляет видимостью/доступностью элементов формы. 
// 
&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	флУтверждена = ?(Статус = Справочники.бит_СтатусыОбъектов.ЗаявкаНаУдаление_Утверждена, Истина, Ложь);
	Элементы.ФормаКомандаВыполнить.Доступность = флУтверждена И фЭтоАдмин;
	
	флДоступностьЭлементов = ?(Статус = Справочники.бит_СтатусыОбъектов.ЗаявкаНаУдаление_Черновик
								ИЛИ Статус = Справочники.бит_СтатусыОбъектов.ПустаяСсылка(), Истина, Ложь);
	
	Имена = Новый Массив;
	Имена.Добавить("Дата");		
	Имена.Добавить("ОписаниеОбъекта");
	Имена.Добавить("Предмет");
	Имена.Добавить("Комментарий");
	Имена.Добавить("Ответственный");
	
	Для каждого Имя Из Имена Цикл
		
		Элементы[Имя].ТолькоПросмотр = НЕ флДоступностьЭлементов;
		
	КонецЦикла; 
	
	УстановитьНастройкиДоступностиЭлементов();
	
КонецПроцедуры

// Процедура применяет настройки доступности и видимости для элементов формы.
// 
&НаСервере
Процедура УстановитьНастройкиДоступностиЭлементов()

	бит_ОбщегоНазначения.УстановитьНастройкиДоступностиЭлементовДляФормы(ЭтаФорма, Объект, Статус);
	
КонецПроцедуры

// Процедура устанавливает тип реквизита Предмет в зависимости от выбранного описания объекта. 
// 
&НаСервере
Процедура УстановитьТипПредмета()
	
	Если ЗначениеЗаполнено(Объект.ОписаниеОбъекта) Тогда
		
		Если НЕ Метаданные.Справочники.Найти(Объект.ОписаниеОбъекта.Имя) = Неопределено Тогда
			ИмяТипа = "СправочникСсылка."+Объект.ОписаниеОбъекта.Имя;
		Иначе	
			ИмяТаблицы = бит_мдм.ИмяОбъектаХранения(Объект.ОписаниеОбъекта);			
			ИмяТипа = "СправочникСсылка."+ИмяТаблицы;
		КонецЕсли; 
		
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип(ИмяТипа));
		
		Описание = Новый ОписаниеТипов(МассивТипов);
		Объект.Предмет = Описание.ПривестиЗначение(Объект.Предмет);
		
	Иначе	
		
		Объект.Предмет = Неопределено;
		
	КонецЕсли; 
	
	
КонецПроцедуры  // УстановитьТипПредмета()

&НаСервере
Процедура ОбновитьПараметрыСтатуса()
	
	Результат = бит_Визирование.ПолучитьСтатусОбъекта(Объект.Ссылка);
	
	Статус 				 = Результат.Статус;
	ДатаИзмененияСтатуса = Результат.Дата;	

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура СформироватьИнформациюСтатус(Статус, ДатаИзмененияСтатуса, ИнформацияСтатус)

	СтруктураПараметров = Новый Структура("Статус, ДатаИзмененияСтатуса", Статус, ДатаИзмененияСтатуса);
	ИнформацияСтатус    = бит_ОбщегоНазначенияКлиентСервер.СформироватьИнформациюСтатус(СтруктураПараметров);
	
КонецПроцедуры

#КонецОбласти
