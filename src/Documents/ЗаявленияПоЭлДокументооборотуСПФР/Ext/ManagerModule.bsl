#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

Функция ВыгрузитьЗаявление(Заявление) Экспорт
	
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	Если КонтекстЭДОСервер = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат КонтекстЭДОСервер.ВыгрузитьЗаявленияПоЭлДокументооборотуСПФР(Заявление);
	
КонецФункции

Функция ПолучательЗаявления(Организация) Экспорт

	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// Именно так определяется код ПФ при отправке заявления и отчетов в ПФР
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	Возврат КонтекстЭДОСервер.ОпределитьОрганПФРОрганизации(Организация);
	
КонецФункции

Процедура ЗаполнитьИзБазы(Объект) Экспорт

	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	
	СтруктураРеквизитов = Новый Структура();
	СтруктураРеквизитов.Вставить("Организация", Объект.Организация);
	СтруктураРеквизитов.Вставить("ПриОткрытии", Истина);
	СтруктураРеквизитов.Вставить("АдресЮридический",);
	СтруктураРеквизитов.Вставить("АдресФактический",);
	
	КонтекстЭДОСервер.ЗаполнитьДанныеОрганизации(СтруктураРеквизитов);
	ДанныеОрганизацииИОтветственныхЛиц = КонтекстЭДОСервер.ДополнитьДанныеОрганизацииДаннымиПоОтветственнымЛицам(СтруктураРеквизитов);
	ДанныеОрганизации = ДанныеОрганизацииИОтветственныхЛиц.СтруктураДанныхОрганизации;

	ЭтоЮридическоеЛицо = РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Объект.Организация);
	
	Если ЭтоЮридическоеЛицо Тогда
		Объект.НаименованиеКраткое = ДанныеОрганизации.КраткоеНаименование;
		Объект.НаименованиеПолное  = ДанныеОрганизации.НаимЮЛПол;
		Объект.КПП = ДанныеОрганизации.КППЮЛ;
	КонецЕсли;
	
	Объект.РегНомерПФР	= ДанныеОрганизации.РегНомПФР;
	Объект.ИНН = ДанныеОрганизации.ИННЮЛ;
	
	Объект.АдресРегистрации = ДанныеОрганизацииИОтветственныхЛиц.АдресЮридическийЗначение;
	Объект.АдресФактический = ДанныеОрганизацииИОтветственныхЛиц.АдресФактическийЗначение;
	
	Объект.ЭлектроннаяПочта = ДанныеОрганизации.ЭлектроннаяПочта;
	Руководитель = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервераПереопределяемый.Руководитель(Объект.Организация); 
	
	Если ЗначениеЗаполнено(Руководитель) Тогда
		
		ДанныеСотрудника = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ПолучитьДанныеСотрудника(
			Перечисления.ТипыВладельцевЭЦП.Руководитель,
			ДанныеОрганизации,
			Руководитель);
			
		Объект.Имя       = ДанныеСотрудника.ФИО.Имя;
		Объект.Фамилия   = ДанныеСотрудника.ФИО.Фамилия;
		Объект.Отчество  = ДанныеСотрудника.ФИО.Отчество;
		
		Если ЭтоЮридическоеЛицо Тогда
			Объект.Должность = ДанныеСотрудника.Должность;
		Иначе
			Объект.Должность = НСтр("ru = 'Индивидуальный предприниматель'");
		КонецЕсли;
		
		Объект.СНИЛС     = ДанныеСотрудника.СНИЛС;
		
		ПередставлениеТелефона = ЭлектроннаяПодписьВМоделиСервисаКлиентСервер.ПолучитьПредставлениеТелефона(ДанныеСотрудника.ТелефонРабочий); 
		Если ПередставлениеТелефона = "" Тогда
			Объект.Телефон = ДанныеСотрудника.ТелефонРабочий;
		Иначе
			Объект.Телефон = ПередставлениеТелефона;
		КонецЕсли;

	КонецЕсли;
	
	Объект.Получатель = ПолучательЗаявления(Объект.Организация);
	
КонецПроцедуры

Функция ПечатнаяФорма(Заявление) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	Если Заявление.Вид = Перечисления.ВидыЗаявленийНаЭДОВПФР.НаПодключение
		ИЛИ Заявление.Вид = Перечисления.ВидыЗаявленийНаЭДОВПФР.НаОтключение Тогда
	
		Бланк = Документы.ЗаявленияПоЭлДокументооборотуСПФР.ПолучитьМакет("Заявление");
		
		ЗаполнитьШапку(Заявление, ТабДокумент, Бланк);
		ЗаполнитьИпИОрганизацию(Заявление, ТабДокумент, Бланк);
		ЗаполнитьОператора(Заявление, ТабДокумент, Бланк);
		ЗаполнитьПодвал(Заявление, ТабДокумент, Бланк);
		
	КонецЕсли;
	
	ЗаполнитьПодпись(Заявление, ТабДокумент);
	
	ТабДокумент.МасштабПечати = 100;
	Возврат ТабДокумент;
	
КонецФункции

Функция ПараметрыЗаполненияОператора(Организация, Вид) Экспорт
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ОператорРегНомерПФР", "");
	ДополнительныеПараметры.Вставить("ОператорНаименованиеПолное", "");
	ДополнительныеПараметры.Вставить("ОператорНаименованиеКраткое", "");
	ДополнительныеПараметры.Вставить("ОператорИНН", "");
	ДополнительныеПараметры.Вставить("ОператорКПП", "");
	
	УказанаОрганизация = ЗначениеЗаполнено(Организация);
	
	Если УказанаОрганизация Тогда
		
		КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
		
		УчетнаяЗапись     = КонтекстЭДОСервер.УчетнаяЗаписьОрганизации(Организация);
		ЕстьУчетнаяЗапись = ЗначениеЗаполнено(УчетнаяЗапись);
		ЕстьОператор      = ЕстьУчетнаяЗапись И ЗначениеЗаполнено(УчетнаяЗапись.СпецоператорСвязи);
		
		ЭтоКалуга = ЕстьУчетнаяЗапись И ЕстьОператор
			И УчетнаяЗапись.СпецоператорСвязи = Перечисления.СпецоператорыСвязи.КалугаАстрал;
			
		ЭтоФорус = ЕстьУчетнаяЗапись И ЕстьОператор
			И УчетнаяЗапись.СпецоператорСвязи = Перечисления.СпецоператорыСвязи.Форус;
			
		ЭтоТакском = ЕстьУчетнаяЗапись И ЕстьОператор
			И УчетнаяЗапись.СпецоператорСвязи = Перечисления.СпецоператорыСвязи.Такском;
			
		ЭтоНужныйОператор = ЭтоКалуга ИЛИ ЭтоФорус ИЛИ ЭтоТакском;
		
		Если ЭтоНужныйОператор Тогда
			
			УчетнаяЗапись = УчетнаяЗапись;
			
			ДополнительныеПараметры["ОператорРегНомерПФР"] = УчетнаяЗапись.ОператорРегНомерПФР;
			ДополнительныеПараметры["ОператорНаименованиеПолное"] = УчетнаяЗапись.ОператорНаименованиеПолное;
			ДополнительныеПараметры["ОператорНаименованиеКраткое"] = УчетнаяЗапись.ОператорНаименованиеКраткое;
			ДополнительныеПараметры["ОператорИНН"] = УчетнаяЗапись.ОператорИНН;
			ДополнительныеПараметры["ОператорКПП"] = УчетнаяЗапись.ОператорКПП;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнятьВручную =
		НЕ ЗначениеЗаполнено(ДополнительныеПараметры.ОператорРегНомерПФР)
		ИЛИ НЕ ЗначениеЗаполнено(ДополнительныеПараметры.ОператорНаименованиеПолное)
		ИЛИ НЕ ЗначениеЗаполнено(ДополнительныеПараметры.ОператорНаименованиеКраткое)
		ИЛИ НЕ ЗначениеЗаполнено(ДополнительныеПараметры.ОператорИНН)
		ИЛИ НЕ ЗначениеЗаполнено(ДополнительныеПараметры.ОператорКПП);
		
	ДополнительныеПараметры.Вставить("ЗаполнятьВручную", ЗаполнятьВручную);
	
	Возврат ДополнительныеПараметры;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьШапку(Заявление, ТабДокумент, Бланк)
	
 	ОбластьШапка = Бланк.ПолучитьОбласть("Шапка");
	Если Заявление.Вид = Перечисления.ВидыЗаявленийНаЭДОВПФР.НаПодключение Тогда
		ОбластьШапка.Параметры.Заголовок = НСтр("ru = 'Заявление на подключение страхователя к электронному документообороту ПФР'");
		ОбластьШапка.Параметры.Текст = НСтр("ru = 'Прошу подключить в качестве участника электронного документооборота Пенсионного фонда Российской Федерации по телекоммуникационным каналам связи через Оператора.'");
	ИначеЕсли Заявление.Вид = Перечисления.ВидыЗаявленийНаЭДОВПФР.НаОтключение Тогда
		ОбластьШапка.Параметры.Заголовок = НСтр("ru = 'Заявление на отключение страхователя от электронного документооборота ПФР'");
		ОбластьШапка.Параметры.Текст = НСтр("ru = 'Прошу отключить от электронного документооборота Пенсионного фонда Российской Федерации по телекоммуникационным каналам связи через Оператора.'");
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьШапка);
	
КонецПроцедуры

Процедура ЗаполнитьИпИОрганизацию(Заявление, ТабДокумент, Бланк)
	
	ЭтоЮридическоеЛицо = РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Заявление.Организация);
	ОбластьОрганизация = Бланк.ПолучитьОбласть("Организация");
	ОбластьИП          = Бланк.ПолучитьОбласть("ИП");
	
	Если ЭтоЮридическоеЛицо Тогда
		ОбластьОрганизация.Параметры.Заполнить(Заявление);
		ОбластьОрганизация.Параметры.АдресРегистрацииПредставление = ПредставлениеАдреса(Заявление.АдресРегистрации);
		ОбластьОрганизация.Параметры.АдресФактическийПредставление = ПредставлениеАдреса(Заявление.АдресФактический);
	Иначе
		ОбластьИП.Параметры.Заполнить(Заявление);
		ОбластьИП.Параметры.АдресРегистрацииПредставление = ПредставлениеАдреса(Заявление.АдресРегистрации);
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьОрганизация);
	ТабДокумент.Вывести(ОбластьИП);

КонецПроцедуры

Процедура ЗаполнитьОператора(Заявление, ТабДокумент, Бланк)
	
	Если Заявление.Вид = Перечисления.ВидыЗаявленийНаЭДОВПФР.НаПодключение Тогда
	
		ОбластьОператор = Бланк.ПолучитьОбласть("Оператор");
		ОбластьОператор.Параметры.Заполнить(Заявление);
		ТабДокумент.Вывести(ОбластьОператор);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПодвал(Заявление, ТабДокумент, Бланк)
	
	ОбластьПодвал = Бланк.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.Заполнить(Заявление);
	
	ФИО = Новый Структура();
	ФИО.Вставить("Фамилия", 	Заявление.Фамилия);
	ФИО.Вставить("Имя", 		Заявление.Имя);
	ФИО.Вставить("Отчество", 	Заявление.Отчество);
	
	Руководитель = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФИО);
	
	ОбластьПодвал.Параметры.ФИО = Руководитель;
	
	ТабДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Процедура ЗаполнитьПодпись(Заявление, ТабДокумент)
	
	ТипыСообщений = Новый Массив;
	ТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПервичноеСообщениеСодержащееОтчетностьПФР);
	ТипыСообщений.Добавить(Перечисления.ТипыТранспортныхСообщений.ПротоколПФР);
	
	//"ПротоколПФР" - Уведомления о результате рассмотрения,
	//"ПодтверждениеПолученияОтчетностиПФР" - Уведомления о доставке,
	//"УведомлениеОбОшибкеПФР"
	
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	КонтекстЭДОСервер.ДобавитьШтампПодписиПодДокументом(
		Заявление,
		ТипыСообщений,
		ТабДокумент,
		2,
		Ложь); 

КонецПроцедуры

Функция ПредставлениеАдреса(ЗначениеАдреса) Экспорт
	
	ЭтоАдресПоФИАСу = УправлениеКонтактнойИнформациейКлиентСервер.ЭтоКонтактнаяИнформацияВXML(ЗначениеАдреса);
	Если ЭтоАдресПоФИАСу Тогда
		Возврат УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(ЗначениеАдреса);
	Иначе
		Возврат РегламентированнаяОтчетностьКлиентСервер.ПредставлениеАдресаВФормате9Запятых(ЗначениеАдреса, Истина);
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	// инициализируем контекст ЭДО - модуль обработки
	ТекстСообщения = "";
	КонтекстЭДО = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО(ТекстСообщения);
	Если КонтекстЭДО = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ОбработкаПолученияФормы("Документ", "ЗаявленияПоЭлДокументооборотуСПФР", ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти