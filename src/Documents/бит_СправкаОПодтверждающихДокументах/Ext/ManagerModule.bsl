#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки	 - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
			
	// Справка о подтверждающих документах.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор	= "СправкаОПодтверждающихДокументах";
	КомандаПечати.Представление	= НСтр("ru = 'Справка о подтверждающих документах'");
	Если НЕ бит_ОбщегоНазначения.ЭтоУТ() Тогда
		КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КонецЕсли;
	КомандаПечати.Порядок		= 10;	
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СправкаОПодтверждающихДокументах") Тогда					
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СправкаОПодтверждающихДокументах",
			НСтр("ru = 'Справка о подтверждающих документах'"), 
			СформироватьПечатнуюФормуСПД(МассивОбъектов),,
			"Документ.бит_СправкаОПодтверждающихДокументах.СправкаОПодтверждающихДокументах");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);		

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Функция - Действующая справка
//
// Параметры:
//  ПаспортСделки	 - СправочникСсылка.бит_ПаспортаСделок	 - условие отбора.
//  ДатаЗаполнения	 - Дата	 - условие отбора.
//  Документ		 - ДокументСсылка.бит_СправкаОПодтверждающихДокументах	 - условие отбора. 
// 
// Возвращаемое значение:
//  ДокументСсылка.бит_СправкаОПодтверждающихДокументах - Ссылка на действующую справку.
//
Функция ДействующаяСправка(ПаспортСделки, ДатаЗаполнения, Документ) Экспорт
	
	Результат = Документы.бит_СправкаОПодтверждающихДокументах.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПаспортСделки",  ПаспортСделки);
	Запрос.УстановитьПараметр("ДатаЗаполнения", ДатаЗаполнения);
	Запрос.УстановитьПараметр("Документ", 		Документ);
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Документ.Ссылка
	|ИЗ
	|	Документ.бит_СправкаОПодтверждающихДокументах КАК Документ
	|ГДЕ
	|	Документ.Проведен
	|	И Документ.ПаспортСделки = &ПаспортСделки
	|	И Документ.ДатаЗаполнения = &ДатаЗаполнения
	|	И Документ.Ссылка <> &Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ.МоментВремени УБЫВ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Результат = Выборка.Ссылка;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	НомераТаблиц = Новый Структура;

	Запрос.Текст = ТекстЗапросаРеквизиты(НомераТаблиц)
		+ ТекстЗапросаПодтверждающиеДокументы(НомераТаблиц);

	Результат = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;

	Возврат ПараметрыПроведения;

КонецФункции

Процедура ПроверитьВозможностьПроведения(Реквизиты,Объект,РеквизитыМетаданных,Отказ) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка"				, Реквизиты.Регистратор);
	Запрос.УстановитьПараметр("ПаспортСделки"		, Реквизиты.ПаспортСделки);
	Запрос.УстановитьПараметр("ДокументОснование"	, Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("ДатаЗаполнения"		, Реквизиты.ДатаЗаполнения);
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Документ.Ссылка
		|ИЗ
		|	Документ.бит_СправкаОПодтверждающихДокументах КАК Документ
		|ГДЕ
		|	Документ.Ссылка <> &Ссылка
		|	И Документ.ПаспортСделки = &ПаспортСделки
		|	И Документ.ДокументОснование = &ДокументОснование
		|	И Документ.ДатаЗаполнения = &ДатаЗаполнения
		|	И Документ.Проведен";
	
	Если НЕ Запрос.Выполнить().Пустой() Тогда
		
		ШаблонСообщения = "Дублирование Справки о подтверждающих документах";
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("ПОЛЕ"
							,"КОРРЕКТНОСТЬ"
							,РеквизитыМетаданных.ПаспортСделки.Представление()
							,
							,
							,ШаблонСообщения);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения
							,Объект
							,"ПаспортСделки"
							,
							,Отказ);
		
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("ПОЛЕ"
							,"КОРРЕКТНОСТЬ"
							,РеквизитыМетаданных.ДатаЗаполнения.Представление()
							,
							,
							,ШаблонСообщения);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения
							,Объект
							,"ДатаЗаполнения"
							,
							,Отказ);
						
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьВозможностьУдаленияПроведения(Ссылка, Отказ) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Документ.Ссылка
	|ИЗ
	|	Документ.бит_СправкаОПодтверждающихДокументах КАК Документ
	|ГДЕ
	|	Документ.ДокументОснование = &Ссылка
	|	И Документ.Проведен";
	
	Если НЕ Запрос.Выполнить().Пустой() Тогда
		бит_ОбщегоНазначения.СообщитьОбОшибке(
			НСтр("ru = 'Существуют корректировочные справки к текущему документу. Отмена проведения невозможна!.'"),
			Отказ,,
			СтатусСообщения.Важное);
	КонецЕсли;

КонецПроцедуры

Процедура ДвиженияПоРегиструДанныеПоПаспортамСделок(ПодтверждающиеДокументы, Реквизиты, Движения, Отказ) Экспорт

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка"					,Реквизиты.Регистратор);
	Запрос.УстановитьПараметр("ДокументОснование"		,Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("ПаспортСделки"			,Реквизиты.ПаспортСделки);
	Запрос.УстановитьПараметр("ПодтверждающиеДокументы"	,ПодтверждающиеДокументы);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПодтверждающиеДокументы.СуммаДокумента,
		|	ПодтверждающиеДокументы.Дата,
		|	ПодтверждающиеДокументы.ПодтверждающийДокумент
		|ПОМЕСТИТЬ ВТ_ПодтверждающиеДокументы
		|ИЗ
		|	&ПодтверждающиеДокументы КАК ПодтверждающиеДокументы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеПоПаспортуСделкиОбороты.ПаспортСделки КАК ПаспортСделки,
		|	-ДанныеПоПаспортуСделкиОбороты.СуммаПодтверждающийДокументОборот КАК СуммаПодтверждающийДокумент,
		|	ДанныеПоПаспортуСделкиОбороты.Период КАК Период,
		|	ДанныеПоПаспортуСделкиОбороты.УчетныйДокумент,
		|	-ДанныеПоПаспортуСделкиОбороты.СуммаВалютнаяОперацияОборот КАК СуммаВалютнаяОперация,
		|	ЛОЖЬ КАК Активность
		|ИЗ
		|	РегистрНакопления.бит_ДанныеПоПаспортамСделок.Обороты(, , Регистратор, ) КАК ДанныеПоПаспортуСделкиОбороты
		|ГДЕ
		|	ДанныеПоПаспортуСделкиОбороты.Регистратор = &ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&ПаспортСделки,
		|	СУММА(ПодтверждающиеДокументы.СуммаДокумента),
		|	ПодтверждающиеДокументы.Дата,
		|	ПодтверждающиеДокументы.ПодтверждающийДокумент,
		|	0,
		|	ЛОЖЬ
		|ИЗ
		|	ВТ_ПодтверждающиеДокументы КАК ПодтверждающиеДокументы
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодтверждающиеДокументы.Дата,
		|	ПодтверждающиеДокументы.ПодтверждающийДокумент";
	
	ТаблицаДвижений = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаДвижений.Количество() > 0 Тогда
	
		Движения.бит_ДанныеПоПаспортамСделок.Записывать = Истина;
		Движения.бит_ДанныеПоПаспортамСделок.мТаблицаДвижений = ТаблицаДвижений;
		Движения.бит_ДанныеПоПаспортамСделок.ДобавитьДвижение();
		
	КонецЕсли;	
	
КонецПроцедуры

// Функция возвращает параметры выбора кода из макета.
// 
// Параметры:
//  НазваниеМакета 		- Строка
//  ТекущийПериод 		- Дата
//  НаименованиеОбласти - Строка имя области в макете.
// 
// Возвращаемое значение:
//  Параметры - Структура
// 
Функция ПолучитьПараметрыФормыВыбораДляКода(НазваниеМакета, ТекущийПериод, НаименованиеОбласти) Экспорт
	
	Классификатор = Новый ТаблицаЗначений;
	
	Классификатор.Колонки.Добавить("Код");
	Классификатор.Колонки.Добавить("Наименование");
	Классификатор.Индексы.Добавить("Код");
	
	Макет	= ПолучитьМакет(НазваниеМакета);
	
	ТекущаяОбласть = Макет.Области.Найти(НаименованиеОбласти);
	
	Если НЕ ТекущаяОбласть = Неопределено Тогда
		
		Для НомерСтр = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
			
			КодПоказателя	= СокрП(Макет.Область(НомерСтр, 1).Текст);
			Название		= СокрП(Макет.Область(НомерСтр, 2).Текст);
			
			Если КодПоказателя = "###" Тогда
				Прервать;
			ИначеЕсли ПустаяСтрока(КодПоказателя) Тогда
				Продолжить;
			Иначе
				НоваяСтрока = Классификатор.Добавить();
				НоваяСтрока.Код				= КодПоказателя;
				НоваяСтрока.Наименование	= Название;
			КонецЕсли;	
				
		КонецЦикла;
		
	КонецЕсли;
	
	Параметры = Новый Структура;
	Параметры.Вставить("СписокКодов",	Классификатор);
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует печатную форму справки о валютных операциях.
// 
// Параметры:
//  МассивСсылок 		   	  - Массив.
// 
// Возвращаемое значение:
//  ТабличныйДокумент - ТабличныйДокумент.
// 
Функция СформироватьПечатнуюФормуСПД(МассивСсылок)

	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_бит_СправкаОПодтверждающихДокументах_СправкаОПодтверждающихДокументах";
	
	// Формируем запрос по документу.
	Результат 	= ПолучитьРезультатЗапросаПоСправке(МассивСсылок);
	Выборка 	= Результат.Выбрать();
	
	Если НЕ Результат.Пустой() Тогда
		
		// Получаем макет и области.
		Макет = ПолучитьМакет("СправкаОПодтверждающихДокументах");
		
		Шапка 					= Макет.ПолучитьОбласть("Шапка");
		ОбластьПДШапка 			= Макет.ПолучитьОбласть("ПодтверждающиеДокументыШапка");
		ОбластьПД 				= Макет.ПолучитьОбласть("ПодтверждающиеДокументы");
		ОбластьПримечаниеШапка 	= Макет.ПолучитьОбласть("ПримечаниеШапка");
		ОбластьПодвал 			= Макет.ПолучитьОбласть("Подвал");
		
		Пока Выборка.Следующий() Цикл

			Шапка.Параметры.Заполнить(Выборка);
			
			ДлинаСтроки = Мин(СтрДлина(Выборка.ПаспортСделки), 22);
			Индекс = 1;
			
			Пока Индекс <= ДлинаСтроки Цикл 
				ИмяПараметра = "ПаспортСделкиНомер_" + Индекс;
				Шапка.Параметры[ИмяПараметра] = Сред(Выборка.ПаспортСделки, Индекс, 1);
				Индекс = Индекс + 1;
			КонецЦикла;
			
			ТабДок.Вывести(Шапка, Выборка.Уровень());

			ТабДок.Вывести(ОбластьПДШапка);
			
			МассивОбластейПримечание = Новый Массив;
			
			ВыборкаТабДок = Выборка.ПодтверждающиеДокументы.Выбрать();
			Пока ВыборкаТабДок.Следующий() Цикл
				ОбластьПД.Параметры.Заполнить(ВыборкаТабДок);
				Если НЕ ПустаяСтрока(ВыборкаТабДок.Примечание) Тогда
					ОбластьПримечание = Макет.ПолучитьОбласть("Примечание");
					ОбластьПримечание.Параметры.Заполнить(ВыборкаТабДок);
					МассивОбластейПримечание.Добавить(ОбластьПримечание);
				КонецЕсли;
				
				ТабДок.Вывести(ОбластьПД, ВыборкаТабДок.Уровень());
			КонецЦикла;
			
			ТабДок.Вывести(ОбластьПримечаниеШапка);
			Для Каждого ТекОбластьПримечание Из МассивОбластейПримечание Цикл
				ТабДок.Вывести(ТекОбластьПримечание)
			КонецЦикла;
			
			ТабДок.Вывести(ОбластьПодвал);
			
		КонецЦикла;
	КонецЕсли;	
		
	Возврат ТабДок;
			
КонецФункции

// Функция получает результат запроса по массиву документов.
// 
// Параметры:
//  МассивСсылок - Массив
// 
// Возвращаемое значение:
//  Результат - ТаблицаЗначений.
// 
Функция ПолучитьРезультатЗапросаПоСправке(МассивСсылок)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Документ.ДатаЗаполнения КАК ДатаЗаполнения,
	               |	Документ.Банк КАК Банк,
	               |	Документ.Организация.НаименованиеСокращенное КАК Организация,
	               |	Документ.ПаспортСделки.Код КАК ПаспортСделки,
	               |	ВЫБОР
	               |		КОГДА Документ.Корректировка = ИСТИНА
	               |			ТОГДА ""*""
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Корректировка,
	               |	Документ.ПодтверждающиеДокументы.(
	               |		НомерСтроки КАК НомерСтроки,
	               |		ПодтверждающийДокумент КАК ПодтверждающийДокумент,
	               |		Номер КАК Номер,
	               |		Дата КАК Дата,
	               |		КодВидаПодтверждающегоДокумента КАК КодВидаПодтверждающегоДокумента,
	               |		ВалютаДокумента.Код КАК ВалютаДокументаКод,
	               |		СуммаДокумента КАК СуммаДокумента,
	               |		СуммаВВалютеДоговора КАК СуммаВВалютеДоговора,
	               |		ПризнакПоставки КАК ПризнакПоставки,
	               |		ОжидаемыйСрок КАК ОжидаемыйСрок,
	               |		СтранаКонтрагента.Код КАК СтранаКонтрагентаКод,
	               |		Примечание КАК Примечание,
	               |		ВЫБОР
	               |			КОГДА Документ.ПодтверждающиеДокументы.ВалютаДокумента = Документ.ПодтверждающиеДокументы.Ссылка.ПаспортСделки.ВалютаДоговора
	               |				ТОГДА """"
	               |			ИНАЧЕ Документ.ПодтверждающиеДокументы.Ссылка.ПаспортСделки.ВалютаДоговора.Код
	               |		КОНЕЦ КАК ВалютаДоговораКод,
	               |		ПризнакКорректировки КАК ПризнакКорректировки
	               |	) КАК ПодтверждающиеДокументы,
	               |	Документ.ПорядковыйНомерКорректировки КАК ПорядковыйНомерКорректировки
	               |ИЗ
	               |	Документ.бит_СправкаОПодтверждающихДокументах КАК Документ
	               |ГДЕ
	               |	Документ.Ссылка В(&МассивСсылок)";
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаРеквизиты(НомераТаблиц)

	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Реквизиты.Ссылка КАК Регистратор,
		|	Реквизиты.Дата,
		|	Реквизиты.ДатаЗаполнения,
		|	Реквизиты.Банк,
		|	Реквизиты.Организация,
		|	Реквизиты.ДокументОснование,
		|	Реквизиты.ПаспортСделки
		|ИЗ
		|	Документ.бит_СправкаОПодтверждающихДокументах КАК Реквизиты
		|ГДЕ
		|	Реквизиты.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + бит_ОбщегоНазначения.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПодтверждающиеДокументы(НомераТаблиц)

	НомераТаблиц.Вставить("ПодтверждающиеДокументы", НомераТаблиц.Количество());
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПодтверждающиеДокументы.Ссылка,
		|	ПодтверждающиеДокументы.Дата,
		|	ПодтверждающиеДокументы.ПодтверждающийДокумент,
		|	ПодтверждающиеДокументы.СуммаДокумента
		|ИЗ
		|	Документ.бит_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК ПодтверждающиеДокументы
		|ГДЕ
		|	ПодтверждающиеДокументы.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + бит_ОбщегоНазначения.ТекстРазделителяЗапросовПакета();

КонецФункции

#КонецОбласти

#КонецЕсли
