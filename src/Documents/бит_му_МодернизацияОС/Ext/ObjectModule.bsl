#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем мВалютаМеждУчета Экспорт; // Хранит валюту международного учета

Перем мКоличествоСубконтоМУ Экспорт; // Хранит количество субконто международного учета в документа.

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Переменная, хранящее значение структуры шапки документа.
	Перем СтруктураШапкиДокумента;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = бит_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Проверка ручной корректировки
	Если бит_ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект, Ложь) Тогда
		Возврат
	КонецЕсли;
	
	// Подготовим структуру шапки документа.
	ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента, Отказ);	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	// Получим структуру курсов валют.
	СтруктураКурсыВалют = ПолучитьСтруктуруКурсовВалют(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	// Подготовим таблицы для возможности проведения.
	//БИТ Тртилек 06.08.2012 в зависимости от вида операции подготовим таблицу для создания движений
	//СтруктураТаблиц = ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, СтруктураКурсыВалют);	
	Если НЕ ВидОперации = Перечисления.бит_му_ВидыОперацийМодернизацияОС.МодернизацияКонсолидированногоОС Тогда
	///БИТ Тртилек
		СтруктураТаблиц = ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, СтруктураКурсыВалют);
	//БИТ Тртилек 06.08.2012 в зависимости от вида операции подготовим таблицу для создания движений
	Иначе
		СтруктураТаблиц = ПодготовитьТаблицыДокументаКонсолидированный(СтруктураШапкиДокумента, СтруктураКурсыВалют);
	КонецЕсли;
	///БИТ Тртилек
	
	// Получим структуру курсов на даты принятия к учету.
	ИсторическиеКурсы = ПолучитьСтруктуруИсторическихКурсов(СтруктураТаблиц.ОС, СтруктураКурсыВалют);
	
	// Проверить заполнение таблиц.
	ПроверитьЗаполнениеТаблицДокумента(СтруктураТаблиц, СтруктураШапкиДокумента, Отказ, Заголовок);
	
	//БИТ Тртилек 06092013 проверить суммы
	Проверять = ЛОЖЬ;
	Если ВидОперации = Перечисления.бит_му_ВидыОперацийМодернизацияОС.МодернизацияКонсолидированногоОС Тогда
		Для Каждого Строка ИЗ ОсновныеСредстваКонсолидированные Цикл
			Если Строка.СоставОС.УслугиОтСоственногоЮЛ Тогда
				Проверять = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Проверять Тогда
		ПроверитьСоответствиеСумм(Отказ);
	КонецЕсли;
	///БИТ Тртилек
	
	Если Не Отказ Тогда
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, СтруктураТаблиц, СтруктураКурсыВалют, ИсторическиеКурсы, Отказ, Заголовок);
	КонецЕсли; 
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	бит_ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, РучнаяКорректировка);
	
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление, некомментированный исправленный код (
	//очистим имеющиеся записи
	НаборЗаписейНРПВНА = РегистрыСведений.бит_му_НРП_ВНА.СоздатьНаборЗаписей();
	НаборЗаписейНРПВНА.Отбор.мРегистратор.Установить(Ссылка);
	НаборЗаписейНРПВНА.Записать();
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление, некомментированный исправленный код )

КонецПроцедуры // ОбработкаУдаленияПроведения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
		

	
	// Выполним синхронизацию пометки на удаление объекта и дополнительных файлов.
	бит_ХранениеДополнительнойИнформации.СинхронизацияПометкиНаУдалениеУДополнительныхФайлов(ЭтотОбъект);
	
КонецПроцедуры // ПередЗаписью()
	
Процедура ПриЗаписи(Отказ)
		
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
		
	
		
КонецПроцедуры // ПриЗаписи()

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнитьШапкуДокумента();
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ПриКопировании(ОбъектКопирования)
	
	ЗаполнитьШапкуДокумента(ОбъектКопирования);
	
КонецПроцедуры // ПриКопировании()

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Процедура выполняет валютные пересчеты ВНА.
// 
// Параметры:
//  ТекущиеПараметры.
//  ПараметрыОС          - Булево (По умолчанию = Ложь).
//  ПараметрыАмортизации - Булево (По умолчанию = Ложь).
// 
Процедура ВыполнитьВалютныеПересчетыВНА(ТекущиеПараметры, ПараметрыОС = Ложь, ПараметрыАмортизации = Ложь) Экспорт
	
	СтруктураШапкиДокумента = бит_ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	ВидыКурсов = Новый Структура("МУ, Документ");
	
	СтруктураКурсыВалют = бит_му_ОбщегоНазначения.ПолучитьСтруктуруКурсовВалют(ЭтотОбъект,СтруктураШапкиДокумента.Дата,ВидыКурсов);
	
	МассивСуммДляПересчета = Новый Массив;
	
	Если ПараметрыОС Тогда
		ОС = ТекущиеПараметры.ВНА;
		МассивСуммДляПересчета.Добавить("ЛиквидационнаяСтоимость_ОС");
	Иначе
		ОС = ТекущиеПараметры.ОсновноеСредство;
		МассивСуммДляПересчета.Добавить("Амортизация");
		МассивСуммДляПересчета.Добавить("Стоимость");
		МассивСуммДляПересчета.Добавить("СуммаФактическогоОбесценения");
	КонецЕсли; 

	МассивОС = Новый Массив;
	МассивОС.Добавить(ОС);
	
	ТаблицаДанных = ПодготовитьТаблицуДатПринятияОС(МассивОС);
	ТаблицаПериодов = ТаблицаДанных.Скопировать(, "Период");
	Курсы = бит_КурсыВалют.ПолучитьКурсыВалютПоПериодам(ТаблицаПериодов, , СтруктураКурсыВалют);
	
	СоответствиеКурсовИОС = Новый Соответствие;
	
	Для каждого Строка Из ТаблицаДанных Цикл
		СоответствиеКурсовИОС.Вставить(Строка.ОсновноеСредство, Курсы[Строка.Период])
	КонецЦикла; 

	КурсыМУ 	  = СоответствиеКурсовИОС[ОС].МУ;
	КурсыДокумент = СоответствиеКурсовИОС[ОС].Документ;
	
	Для каждого ИмяСуммы Из МассивСуммДляПересчета Цикл
			
			
		ТекущиеПараметры[ИмяСуммы] = бит_КурсыВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(ТекущиеПараметры[ИмяСуммы]
								,КурсыМУ.Валюта
								,КурсыДокумент.Валюта
								,КурсыМУ.Курс
								,КурсыДокумент.Курс
								,КурсыМУ.Кратность
								,КурсыДокумент.Кратность);
	КонецЦикла; 
		
КонецПроцедуры

// Функция подготавливает таблицу дат принятия ОС.
// 
// Параметры:
//  МассивОС - Массив
// 
// Возвращаемое значение:
//  ТаблицаЗначения
// 
Функция ПодготовитьТаблицуДатПринятияОС(МассивОС) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СостояниеПринято", Перечисления.бит_му_СостоянияОС.ПринятоКУчету);
	Запрос.УстановитьПараметр("МассивОС", МассивОС);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	бит_му_СостоянияОС.ОсновноеСредство,
	|	бит_му_СостоянияОС.ДатаСостояния КАК Период
	|ИЗ
	|	РегистрСведений.бит_му_СостоянияОС КАК бит_му_СостоянияОС
	|ГДЕ
	|	бит_му_СостоянияОС.ОсновноеСредство В(&МассивОС)
	|	И бит_му_СостоянияОС.Состояние = &СостояниеПринято
	|	И бит_му_СостоянияОС.Организация = &Организация";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
		
КонецФункции

// Функция готовит таблицы документа для проведения.
// 
// Возвращаемое значение:
//  СтруктураШапкиДокумента - Структура.
//  СтруктураКурсыВалют     - Структура.
// 
Функция ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, СтруктураКурсыВалют)  Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация"			  , СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("МоментВремени"		  , МоментВремени());
	Запрос.УстановитьПараметр("Ссылка"				  , СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("СписокОС"			  , СтруктураШапкиДокумента.СписокОС);
	Запрос.УстановитьПараметр("СостояниеПринятоКУчету", Перечисления.бит_му_СостоянияОС.ПринятоКУчету);
	Запрос.УстановитьПараметр("СостояниеСнятоСУчета"  , Перечисления.бит_му_СостоянияОС.СнятоСУчета);
	Запрос.УстановитьПараметр("ПараметрСчетУчета"	  , ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СчетУчета_ОС);
	Запрос.УстановитьПараметр("ПараметрКласс"	  	  , ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС);
	Запрос.УстановитьПараметр("ПараметрФинАренда"	  , ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.ФинансоваяАренда_ОС);
	Запрос.УстановитьПараметр("ПустойПараметр"		  , ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.ПустаяСсылка());
	
	СправочникОС = "Справочник." + бит_ОбщегоНазначения.ПолучитьИмяСправочникаОсновныеСредства();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПараметрыОС_МУ.ОсновноеСредство,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС_МУ.Параметр = &ПараметрСчетУчета
	|				ТОГДА ПараметрыОС_МУ.ЗначениеПараметра
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК СчетУчета,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС_МУ.Параметр = &ПараметрКласс
	|				ТОГДА ПараметрыОС_МУ.ЗначениеПараметра.ВидКласса
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК ВидКласса,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС_МУ.Параметр = &ПараметрФинАренда
	|				ТОГДА ПараметрыОС_МУ.ЗначениеПараметра
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ОбъектВФинансовойАренде
	|ПОМЕСТИТЬ ТаблицаПараметров
	|ИЗ
	|	РегистрСведений.бит_му_ПараметрыОС.СрезПоследних(
	|			&МоментВремени,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)
	|				И (Параметр = &ПараметрСчетУчета
	|					ИЛИ Параметр = &ПараметрКласс
	|					ИЛИ Параметр = &ПараметрФинАренда)) КАК ПараметрыОС_МУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыОС_МУ.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеСредства.НомерСтроки,
	|	ОсновныеСредства.ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА ОсновныеСредства.СрокПолезногоИспользования_Старый <> ОсновныеСредства.СрокПолезногоИспользования
	|			ТОГДА ОсновныеСредства.СрокПолезногоИспользования
	|		ИНАЧЕ &ПустойПараметр
	|	КОНЕЦ КАК СрокПолезногоИспользования,
	|	ОсновныеСредства.СуммаМодернизации,
	|	ВЫБОР
	|		КОГДА ОсновныеСредства.МетодНачисленияАмортизации_Старый <> ОсновныеСредства.МетодНачисленияАмортизации
	|			ТОГДА ОсновныеСредства.МетодНачисленияАмортизации
	|		ИНАЧЕ &ПустойПараметр
	|	КОНЕЦ КАК МетодНачисленияАмортизации,
	|	ВЫБОР
	|		КОГДА ОсновныеСредства.КоэффициентУскорения_Старый <> ОсновныеСредства.КоэффициентУскорения
	|			ТОГДА ОсновныеСредства.КоэффициентУскорения
	|		ИНАЧЕ &ПустойПараметр
	|	КОНЕЦ КАК КоэффициентУскорения,
	|	ВЫБОР
	|		КОГДА ОсновныеСредства.ОбъемПродукцииРабот_Старый <> ОсновныеСредства.ОбъемПродукцииРабот
	|			ТОГДА ОсновныеСредства.ОбъемПродукцииРабот
	|		ИНАЧЕ &ПустойПараметр
	|	КОНЕЦ КАК ПредполагаемыйОбъемПродукции,
	|	ВЫБОР
	|		КОГДА ОсновныеСредства.ЛиквидационнаяСтоимость_Старый <> ОсновныеСредства.ЛиквидационнаяСтоимость
	|			ТОГДА ОсновныеСредства.ЛиквидационнаяСтоимость
	|		ИНАЧЕ &ПустойПараметр
	|	КОНЕЦ КАК ЛиквидационнаяСтоимость,
	|	ПринятыеОС_МУ.ДатаСостояния КАК ДатаПринятия,
	|	ВыбывшиеОС_МУ.ДатаСостояния КАК ДатаВыбытия,
	|	ТаблицаПараметров.СчетУчета КАК СчетДт,
	|	ТаблицаПараметров.ОсновноеСредство КАК СубконтоДт1,
	|	АналитикаУчетаОС_МУ.Субконто2 КАК СубконтоДт2,
	|	АналитикаУчетаОС_МУ.Субконто3 КАК СубконтоДт3,
	|	АналитикаУчетаОС_МУ.Субконто4 КАК СубконтоДт4,
	|	ОсновныеСредства.СчетНезавершенногоСтроительства КАК СчетКт,
	|	ОсновныеСредства.Субконто1 КАК СубконтоКт1,
	|	ОсновныеСредства.Субконто2 КАК СубконтоКт2,
	|	ОсновныеСредства.Субконто3 КАК СубконтоКт3,
	|	ОсновныеСредства.Субконто4 КАК СубконтоКт4,
	|	ТаблицаПараметров.ВидКласса,
	|	ТаблицаПараметров.ОбъектВФинансовойАренде
	|ИЗ
	|	Документ.бит_му_МодернизацияОС.ОсновныеСредства КАК ОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияОС КАК ПринятыеОС_МУ
	|		ПО ОсновныеСредства.ОсновноеСредство = ПринятыеОС_МУ.ОсновноеСредство
	|			И (ПринятыеОС_МУ.Организация = &Организация)
	|			И (ПринятыеОС_МУ.Состояние = &СостояниеПринятоКУчету)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияОС КАК ВыбывшиеОС_МУ
	|		ПО ОсновныеСредства.ОсновноеСредство = ВыбывшиеОС_МУ.ОсновноеСредство
	|			И (ВыбывшиеОС_МУ.Организация = &Организация)
	|			И (ВыбывшиеОС_МУ.Состояние = &СостояниеСнятоСУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПараметров КАК ТаблицаПараметров
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.бит_Дополнительный_2.Остатки(
	|					&МоментВремени,
	|					Счет В
	|						(ВЫБРАТЬ
	|							ТаблицаПараметров.СчетУчета
	|						ИЗ
	|							ТаблицаПараметров КАК ТаблицаПараметров),
	|					,
	|					Организация = &Организация
	// |						И Субконто1 В (&СписокОС)) КАК АналитикаУчетаОС_МУ
	|						И ВЫБОР КОГДА Субконто1 ССЫЛКА " + СправочникОС + " ТОГДА
	|                                 Субконто1 В (&СписокОС)
	|                           КОГДА Субконто2 ССЫЛКА " + СправочникОС + " ТОГДА
	|                                 Субконто2 В (&СписокОС)
	|                           КОГДА Субконто3 ССЫЛКА " + СправочникОС + " ТОГДА
	|                                 Субконто3 В (&СписокОС)
	|                           КОГДА Субконто4 ССЫЛКА " + СправочникОС + " ТОГДА
	|                                 Субконто4 В (&СписокОС)
	|                    	  ИНАЧЕ ЛОЖЬ
	|                     	  КОНЕЦ ) КАК АналитикаУчетаОС_МУ
	// |			ПО ТаблицаПараметров.ОсновноеСредство = АналитикаУчетаОС_МУ.Субконто1
	|			ПО (ВЫБОР 
	|					КОГДА АналитикаУчетаОС_МУ.Субконто1 ССЫЛКА " + СправочникОС + " ТОГДА
	|                     	ТаблицаПараметров.ОсновноеСредство = АналитикаУчетаОС_МУ.Субконто1
	|               	КОГДА АналитикаУчетаОС_МУ.Субконто2 ССЫЛКА " + СправочникОС + " ТОГДА
	|                     	ТаблицаПараметров.ОсновноеСредство = АналитикаУчетаОС_МУ.Субконто2
	|               	КОГДА АналитикаУчетаОС_МУ.Субконто3 ССЫЛКА " + СправочникОС + " ТОГДА
	|                     	ТаблицаПараметров.ОсновноеСредство = АналитикаУчетаОС_МУ.Субконто3
	|               	КОГДА АналитикаУчетаОС_МУ.Субконто4 ССЫЛКА " + СправочникОС + " ТОГДА
	|                     	ТаблицаПараметров.ОсновноеСредство = АналитикаУчетаОС_МУ.Субконто4
	|              		ИНАЧЕ ЛОЖЬ
	|              КОНЕЦ)

	|				И ТаблицаПараметров.СчетУчета = АналитикаУчетаОС_МУ.Счет
	|		ПО ОсновныеСредства.ОсновноеСредство = ТаблицаПараметров.ОсновноеСредство
	|ГДЕ
	|	ОсновныеСредства.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПараметров";
	
	ТаблицаПоОС = Запрос.Выполнить().Выгрузить();
	
	СтруктураТаблиц = Новый Структура;
	СтруктураТаблиц.Вставить("ОС", ТаблицаПоОС);
	
	Возврат СтруктураТаблиц;
	
КонецФункции // ПодготовитьТаблицыДокумента()

// Процедура формирует структуру шапки документа и дополнительных полей.
// 
// Параметры:
//  Заголовок 				- Строка.
//  СтруктураШапкиДокумента - Структура.
//  Отказ 					- Булево.
// 
Процедура ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента, Отказ) Экспорт

	СтруктураШапкиДокумента = бит_ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	// Получим список ОС документа.
	//БИТ Тртилек 06.08.1012 в зависимости от вида операции заполним массив ОС	
	//СписокОС = ОсновныеСредства.ВыгрузитьКолонку("ОсновноеСредство");
	//бит_РаботаСКоллекциями.УдалитьПовторяющиесяЭлементыМассива(СписокОС, Истина);
	Если НЕ ВидОперации = Перечисления.бит_му_ВидыОперацийМодернизацияОС.МодернизацияКонсолидированногоОС Тогда
	///БИТ Тртилек
		СписокОС = ОсновныеСредства.ВыгрузитьКолонку("ОсновноеСредство");
		бит_РаботаСКоллекциями.УдалитьПовторяющиесяЭлементыМассива(СписокОС, Истина);
	//БИТ Тртилек 06.08.2012 в зависимости от вида операции заполним массив ОС
	Иначе
		СписокОС = Новый Массив;
		СписокОС.Добавить(бит_ОсновноеСредство);
	КонецЕсли;
	///БИТ Тртилек
	
	СтруктураШапкиДокумента.Вставить("СписокОС", СписокОС);
	
	// Получим Вид класса ОС документа.
	Если ВидОперации = Перечисления.бит_му_ВидыОперацийМодернизацияОС.ОсновныеСредства Тогда
		ВидКласса = Перечисления.бит_му_ВидыКлассовОС.ОсновныеСредства;
	Иначе
		ВидКласса = Перечисления.бит_му_ВидыКлассовОС.ИнвестиционнаяСобственность;
	КонецЕсли;
	
	СтруктураШапкиДокумента.Вставить("ВидКласса_ОС", ВидКласса);
	
КонецПроцедуры // ПодготовитьСтруктуруШапкиДокумента()

// Процедура заполняет данные по основным средствам.
// 
// Параметры:
//  СписокОС 			   - СправочникСсылка.ОсновныеСредства, массив.
//  СтрокаТабличнойЧастиОС - СтрокаТабличнойЧасти.ОсновныеСредства.
//  НеИзменяемыеПараметры  - Булево.
// 
Процедура ЗаполнитьДанныеПоОсновнымСредствам(СписокОС
											, СтрокаТабличнойЧастиОС = Неопределено
											, НеИзменяемыеПараметры) Экспорт
	
	// Сформируем массив параметров ОС для получения.
	ПараметрыВНА = Новый Массив;
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.КоэффициентУскорения_ОС);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.ЛиквидационнаяСтоимость_ОС);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.МетодНачисленияАмортизации_ОС);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.ПредполагаемыйОбъемПродукции_ОС);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СрокПолезногоИспользования_ОС);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СчетНачисленияАмортизации_ОС);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СчетСниженияСтоимости_ОС);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СчетУчета_ОС);
	//БИТ Тртилек 20112013
	
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.НачислятьАмортизациюСТекущегоПериода_ОС);
	///БИТ Тртилек	
	// Сформируем структуру параметров для получения таблицы параметров ОС.
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация"     , Организация);
	СтруктураПараметров.Вставить("ОсновноеСредство", СписокОС);
	СтруктураПараметров.Вставить("МоментВремени"   , ?(ЭтоНовый(), КонецДня(Дата), МоментВремени()));
	СтруктураПараметров.Вставить("ПараметрыВНА"	   , ПараметрыВНА);
	
	// Получим таблицу параметров ОС.
	ТаблицаПараметровОС = бит_му_ВНА.ПолучитьТаблицуПараметровВНА(СтруктураПараметров, "ТаблицаЗначений");
	
	// Получим массив счетов по ОС.
	МассивСчетовАмортизации 	  = ТаблицаПараметровОС.ВыгрузитьКолонку("СчетНачисленияАмортизации_ОС");
	МассивСчетовСниженияСтоимости = ТаблицаПараметровОС.ВыгрузитьКолонку("СчетСниженияСтоимости_ОС");
	МассивСчетовУчета 			  = ТаблицаПараметровОС.ВыгрузитьКолонку("СчетУчета_ОС");
	
	бит_РаботаСКоллекциями.УдалитьПовторяющиесяЭлементыМассива(МассивСчетовАмортизации	    , Истина);
	бит_РаботаСКоллекциями.УдалитьПовторяющиесяЭлементыМассива(МассивСчетовСниженияСтоимости, Истина);
	бит_РаботаСКоллекциями.УдалитьПовторяющиесяЭлементыМассива(МассивСчетовУчета			, Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МоментВремени"				 , МоментВремени());
	Запрос.УстановитьПараметр("МассивСчетовАмортизации"		 , МассивСчетовАмортизации);
	Запрос.УстановитьПараметр("МассивСчетовСниженияСтоимости", МассивСчетовСниженияСтоимости);
	Запрос.УстановитьПараметр("МассивСчетовУчета"			 , МассивСчетовУчета);
	Запрос.УстановитьПараметр("СубконтоОС"					 , ПланыВидовХарактеристик.бит_ВидыСубконтоДополнительные_2.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидВНА"					 	 , Перечисления.бит_му_ВидыВНА.ОС);
	Запрос.УстановитьПараметр("Организация"					 , Организация);
	Запрос.УстановитьПараметр("СписокОС"					 , СписокОС);
	Запрос.УстановитьПараметр("ВведеноВЭксплуатацию"		 , Перечисления.бит_му_СостоянияОС.ПринятоКУчету);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВыработкаОС_МУ.ОбъектВНА КАК ОсновноеСредство,
	|	СУММА(ВыработкаОС_МУ.КоличествоОборот) КАК Количество
	|ПОМЕСТИТЬ ВыработкаОС_МУ
	|ИЗ
	|	РегистрНакопления.бит_му_ВыработкаВНА.Обороты(
	|			,
	|			&МоментВремени,
	|			,
	|			ВидВНА = &ВидВНА
	|				И Организация = &Организация
	|				И ОбъектВНА В (&СписокОС)) КАК ВыработкаОС_МУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыработкаОС_МУ.ОбъектВНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОС_МУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(СтоимостьОС_МУ.СуммаМУОстатокДт, 0) КАК Стоимость,
	|	ЕСТЬNULL(АмортизацияОС_МУ.СуммаМУОстатокКт, 0) КАК Амортизация,
	|	ЕСТЬNULL(ФактОбесценениеОС_МУ.СуммаМУОстатокКт, 0) КАК СуммаФактическогоОбесценения,
	|	СостоянияОС_МУ.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
	|	ЕСТЬNULL(ВыработкаОС_МУ.Количество, 0) КАК Количество
	|ИЗ
	|	РегистрСведений.бит_му_СостоянияОС КАК СостоянияОС_МУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.бит_Дополнительный_2.Остатки(
	|				&МоментВремени,
	|				Счет В (&МассивСчетовСниженияСтоимости),
	|				&СубконтоОС,
	|				Организация = &Организация
	|					И Субконто1 В (&СписокОС)) КАК ФактОбесценениеОС_МУ
	|		ПО СостоянияОС_МУ.ОсновноеСредство = ФактОбесценениеОС_МУ.Субконто1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.бит_Дополнительный_2.Остатки(
	|				&МоментВремени,
	|				Счет В (&МассивСчетовУчета),
	|				&СубконтоОС,
	|				Организация = &Организация
	|					И Субконто1 В (&СписокОС)) КАК СтоимостьОС_МУ
	|		ПО СостоянияОС_МУ.ОсновноеСредство = СтоимостьОС_МУ.Субконто1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.бит_Дополнительный_2.Остатки(
	|				&МоментВремени,
	|				Счет В (&МассивСчетовАмортизации),
	|				&СубконтоОС,
	|				Организация = &Организация
	|					И Субконто1 В (&СписокОС)) КАК АмортизацияОС_МУ
	|		ПО СостоянияОС_МУ.ОсновноеСредство = АмортизацияОС_МУ.Субконто1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыработкаОС_МУ КАК ВыработкаОС_МУ
	|		ПО СостоянияОС_МУ.ОсновноеСредство = ВыработкаОС_МУ.ОсновноеСредство
	|ГДЕ
	|	СостоянияОС_МУ.ОсновноеСредство В (&СписокОС)
	|	И СостоянияОС_МУ.Организация = &Организация
	|	И СостоянияОС_МУ.Состояние = &ВведеноВЭксплуатацию
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВыработкаОС_МУ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаТекущиеПараметрыАмортизации = РезультатЗапроса.Выгрузить();
	
	Если СтрокаТабличнойЧастиОС = Неопределено Тогда
		Для каждого СтрокаОС Из ОсновныеСредства Цикл
			ЗаполнитьПараметрыСтроки(СтрокаОС, ТаблицаТекущиеПараметрыАмортизации, ТаблицаПараметровОС, НеИзменяемыеПараметры);
		КонецЦикла;
	Иначе
		ЗаполнитьПараметрыСтроки(СтрокаТабличнойЧастиОС, ТаблицаТекущиеПараметрыАмортизации, ТаблицаПараметровОС, НеИзменяемыеПараметры);	
	КонецЕсли;
		
КонецПроцедуры // ЗаполнитьДанныеПоОсновнымСредствам()

// Функция формирует массив недоступных параметров ОС в зависимости от
// от метода начисления амортизации.
// 
// Параметры:
//  ТекущаяСтрока 			 - СтрокаТабличнойЧасти.ОсновныеСредства.
//  ЭтоУправлениеДоступность - Булево, по умолчанию Ложь.
// 
// Возвращаемое значение:
//  МассивНедоступныхПараметров - Массив;
// 
Функция СформироватьМассивНедоступныхПараметров(ТекущаяСтрока, ЭтоУправлениеДоступность = Ложь) Экспорт
	
	МассивНедоступныхПараметров = Новый Массив;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат МассивНедоступныхПараметров;
	КонецЕсли;
	
	МенеджерПеречисления 		     = Перечисления.бит_му_МетодыНачисленияАмортизации;
	МетодНачисленияАмортизации_Новый = ТекущаяСтрока.МетодНачисленияАмортизации;
	
	Если МетодНачисленияАмортизации_Новый = МенеджерПеречисления.Линейный Тогда
		
		МассивНедоступныхПараметров.Добавить("КоэффициентУскорения");
		МассивНедоступныхПараметров.Добавить("ОбъемПродукцииРабот");
		
		Если ЭтоУправлениеДоступность Тогда
			МассивНедоступныхПараметров.Добавить("ФактОбъемПродукцииРабот");
			МассивНедоступныхПараметров.Добавить("ОстОбъемПродукцииРабот");
		КонецЕсли;
		
	ИначеЕсли МетодНачисленияАмортизации_Новый = МенеджерПеречисления.УменьшаемогоОстатка Тогда
		
		МассивНедоступныхПараметров.Добавить("ОбъемПродукцииРабот");
		
		Если ЭтоУправлениеДоступность Тогда
			МассивНедоступныхПараметров.Добавить("ФактОбъемПродукцииРабот");
			МассивНедоступныхПараметров.Добавить("ОстОбъемПродукцииРабот");
		КонецЕсли;
		
	ИначеЕсли МетодНачисленияАмортизации_Новый = МенеджерПеречисления.Производственный Тогда
		
		МассивНедоступныхПараметров.Добавить("КоэффициентУскорения");
		
	КонецЕсли;
	
	Возврат МассивНедоступныхПараметров;
	
КонецФункции // СформироватьМассивНедоступныхПараметров()

// Процедура очищает недоступные параметры ОС в зависимости от метода начисления амортизации.
// 
// Параметры:
//  ТекущаяСтрока - СтрокаТабличнойЧасти.ОсновныеСредства.
// 
Процедура ОчиститьНедоступныеПараметрыОС(ТекущаяСтрока) Экспорт
	
	// Получим массив недоступных параметров.
	МассивНедоступныхПараметров = СформироватьМассивНедоступныхПараметров(ТекущаяСтрока);
	
	Для Каждого ТекИмяПараметра Из МассивНедоступныхПараметров Цикл
		ТекущаяСтрока[ТекИмяПараметра] = Неопределено;
	КонецЦикла;
	
КонецПроцедуры // ОчиститьНедоступныеПараметрыОС()

// Процедура вызывает процедуру по проверке ОС.
// 
// Параметры:
//  ОсновноеСредство - СправочникСсылка.ОсновныеСредства.
//  Отказ	 		 - Булево, по умолчанию Ложь.
// 
Процедура ПроверитьОСПриВыборе(ОсновноеСредство, Отказ) Экспорт
	
	Если ВидОперации = Перечисления.бит_му_ВидыОперацийМодернизацияОС.ОсновныеСредства Тогда
		ВидКласса = Перечисления.бит_му_ВидыКлассовОС.ОсновныеСредства;
	Иначе
		ВидКласса = Перечисления.бит_му_ВидыКлассовОС.ИнвестиционнаяСобственность;
	КонецЕсли;
	
	бит_му_ВНА.ПроверитьОСПриВыборе(ЭтотОбъект, ВидКласса, ОсновноеСредство, Отказ);
	
КонецПроцедуры // ПроверитьОСПриВыборе()

// Процедура синхронизирует реквизиты строки ОС с аналитикой счетов.
// 
// Параметры:
//  ТекущаяСтрока - СтрокаТабличнойЧасти.ОсновныеСредства.
//  ИмяСубконто   - Строка.
// 
Процедура СинхронизироватьРеквизитыСтрокиОС(ТекущаяСтрока, ИмяСубконто) Экспорт
	
	Если ТекущаяСтрока = Неопределено Тогда
		 Возврат;
	КонецЕсли; 

	Если ЗначениеЗаполнено(ТекущаяСтрока.ОсновноеСредство) Тогда
		// Адаптация для ERP. Начало. 18.03.2014{{
		ТипОС = Тип(бит_ОбщегоНазначения.ПолучитьИмяТипаОсновныеСредства());
		// Адаптация для ERP. Конец. 18.03.2014}}
		
		Для Ном = 1 По мКоличествоСубконтоМУ Цикл
			
			ТекИмяСубконто = ИмяСубконто + Ном;
			
			Если ТипЗнч(ТекущаяСтрока[ТекИмяСубконто]) = ТипОС Тогда
				 ТекущаяСтрока[ТекИмяСубконто] = ТекущаяСтрока.ОсновноеСредство;
			 КонецЕсли; 
		
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры // СинхронизироватьРеквизитыСтрокиОС()

// Процедура обрабатывает изменение валюты документа.
// 
// Параметры:
//  Нет.
// 
Процедура ИзменениеВалютыМодуль() Экспорт

	СтруктураКурса = бит_КурсыВалют.ПолучитьКурсВалюты(ВалютаДокумента, Дата);
	
	КурсДокумента      = СтруктураКурса.Курс;
	КратностьДокумента = СтруктураКурса.Кратность;

КонецПроцедуры // ИзменениеВалютыМодуль()

// Функция получает параметры, передаваемые в обработку подбора ОС.
//
Функция ЗаполнитьПараметрыПодбора() Экспорт
	
	Если ВидОперации = Перечисления.бит_му_ВидыОперацийМодернизацияОС.ОсновныеСредства Тогда
		ВидКласса = Перечисления.бит_му_ВидыКлассовОС.ОсновныеСредства;
	Иначе
		ВидКласса = Перечисления.бит_му_ВидыКлассовОС.ИнвестиционнаяСобственность;
	КонецЕсли;
		
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыПодбора.Вставить("Режим"			    , Перечисления.бит_му_РежимыПодбораВНА.МодернизацияОС);
	ПараметрыПодбора.Вставить("ДатаНачала"		, НачалоМесяца(Дата));
	ПараметрыПодбора.Вставить("ДатаОкончания"		, КонецМесяца(Дата));
	ПараметрыПодбора.Вставить("Организация"		, Организация);
	ПараметрыПодбора.Вставить("МОЛ"				, МОЛ);
	ПараметрыПодбора.Вставить("Местонахождение"	, Подразделение);
	ПараметрыПодбора.Вставить("ВидКласса"			, ВидКласса);
	ПараметрыПодбора.Вставить("ВалютаДокумента"	, ВалютаДокумента);

	Возврат ПараметрыПодбора;
	
КонецФункции // ЗаполнитьПараметрыПодбора()

Процедура ЗаполнитьОсновныеСредства(ВыбранноеЗначение, МожноПерезаполнятьДанныеПоОС) Экспорт

	ОписаниеТаблицы = ВыбранноеЗначение.Данные;
	ТаблицаДанных   = бит_ОбщегоНазначения.РаспаковатьТаблицуИзМассива(ОписаниеТаблицы.ПереченьОбъектов, ОписаниеТаблицы.ПереченьОбъектов_Колонки);
	фКоличествоСубконтоМУ = 4;
	
	Для каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ОсновноеСредство", СтрокаТаблицы.ВНА);
		
		МассивСтрок = ОсновныеСредства.НайтиСтроки(СтруктураОтбора);
		
		НайденнаяСтрока = ?(МассивСтрок.Количество() = 0, Неопределено, МассивСтрок[0]); 		
		Если НайденнаяСтрока = Неопределено Тогда
			
			НоваяСтрока = ОсновныеСредства.Добавить();
						
			НоваяСтрока.ОсновноеСредство  = СтрокаТаблицы.ВНА;
			НоваяСтрока.СуммаМодернизации = СтрокаТаблицы.СуммаМодернизации;
			
			Отказ = Ложь;
			Документы.бит_му_МодернизацияОС.ПолучитьПараметрыОССервер(НоваяСтрока, ЭтотОбъект, Отказ, , МожноПерезаполнятьДанныеПоОС);
			
			Если Отказ Тогда
				ОсновныеСредства.Удалить(НоваяСтрока);
			КонецЕсли;
			
			НоваяСтрока.ДатаМодернизации = СтрокаТаблицы.ДатаМодернизации;
			
			Контекст = Новый Структура("ОстСрокИспользования,"
									   "СрокПолезногоИспользования,"
									   "ФактСрокИспользования,"
									   "ОстОбъемПродукцииРабот,"
									   "ОбъемПродукцииРабот,"
									   "ФактОбъемПродукцииРабот,"
									   "ОстСтоимость,"
									   "Стоимость,"
									   "СуммаМодернизации,"
									   "СуммаФактическогоОбесценения,"
									   "Амортизация"); 
									   
			ЗаполнитьЗначенияСвойств(Контекст, НоваяСтрока);						   
									   
			// Расчеты?
			Документы.бит_му_МодернизацияОС.ВыполнитьВсеРасчетыДляСтрокиОС(Контекст);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Контекст);
			
			// Выполним подбор счетов.
			//izhtc-Kir 12.10.2015(
			//Документы.бит_му_МодернизацияОС.ВыполнитьПодборСчетов(НоваяСтрока, СтрокаТаблицы, ЭтотОбъект, фКоличествоСубконтоМУ);
			_Объект=ДанныеФормыВЗначение(ЭтотОбъект,Тип("ДокументОбъект.бит_му_МодернизацияОС"));
			Документы.бит_му_МодернизацияОС.ВыполнитьПодборСчетов(НоваяСтрока, СтрокаТаблицы, _Объект, фКоличествоСубконтоМУ);
			//izhtc-Kir 12.10.2015)	
			
		Иначе

			СтрокаОС = Строка(СтрокаТаблицы.ВНА) + ?(ЗначениеЗаполнено(СтрокаТаблицы.ИнвентарныйНомер), НСтр("ru=' инв. № '") + СтрокаТаблицы.ИнвентарныйНомер, "");
			ТекстСообщения = НСтр("ru='Основное средство ""%1%"" уже подобрано в строке №%2%!'");
			ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, СтрокаОС, НайденнаяСтрока.НомерСтроки);				 
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
			
		КонецЕсли; 
		
	КонецЦикла; // По строкам таблицы данных
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура заполняет шапку документа по умолчанию.
// 
// Параметры:
//  ОбъектКопирования
// 
Процедура ЗаполнитьШапкуДокумента(ОбъектКопирования = Неопределено)
	
	// Заполним шапку документа значениями по умолчанию.
	бит_ОбщегоНазначения.ЗаполнитьШапкуДокумента(ЭтотОбъект
								, бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь")
								, ОбъектКопирования);
								
	Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
		ВалютаДокумента = бит_му_ОбщегоНазначения.ПолучитьВалютуМеждународногоУчета(Организация);
		СтрКурса        = бит_КурсыВалют.ПолучитьКурсВалюты(ВалютаДокумента, ?(Дата = '0001-01-01', ТекущаяДатаСеанса(), Дата));
		Курс            = СтрКурса.Курс;
		Кратность       = СтрКурса.Кратность;
	КонецЕсли; 

КонецПроцедуры // ЗаполнитьШапкуДокумента()

// Процедура заполняет параметры текущей строки.
// 
// Параметры:
//  ТекСтрока                          - Строка табличной части "Основные средства".
//  ТаблицаТекущиеПараметрыАмортизации - ТаблицаЗначений.
//  ТаблицаПараметровОС 			   - ТаблицаЗначений.
//  НеИзменяемыеПараметры              - Булево.
// 
Процедура ЗаполнитьПараметрыСтроки(ТекСтрока, ТаблицаТекущиеПараметрыАмортизации, ТаблицаПараметровОС, НеИзменяемыеПараметры)

	ТекущиеПараметрыАмортизации = ТаблицаТекущиеПараметрыАмортизации.Найти(ТекСтрока.ОсновноеСредство, "ОсновноеСредство");
    ТекущиеПараметрыОС			= ТаблицаПараметровОС.Найти(ТекСтрока.ОсновноеСредство				 , "ВНА");
	
	Если НЕ ТекущиеПараметрыАмортизации = Неопределено Тогда
		ВыполнитьВалютныеПересчетыВНА(ТекущиеПараметрыАмортизации,,Истина);
	КонецЕсли; 
	
	Если НЕ ТекущиеПараметрыОС = Неопределено Тогда  // было ТекущиеПараметрыАмортизации
		ВыполнитьВалютныеПересчетыВНА(ТекущиеПараметрыОС,Истина);
	КонецЕсли;
	
	Если ТекущиеПараметрыАмортизации = Неопределено Тогда
		
		// Очистим реквизиты строки ОС.
		ОчиститьРеквизитыСтрокиОС(ТекСтрока);
		
		ТекСтрока.СуммаМодернизации = 0;
		
	Иначе

		Если ТекущиеПараметрыОС = Неопределено Тогда
			// Очистим реквизиты строки ОС.
			ОчиститьРеквизитыСтрокиОС(ТекСтрока);
		Иначе
			
			ТекСтрока.СрокПолезногоИспользования_Старый = ТекущиеПараметрыОС.СрокПолезногоИспользования_ОС;
			ТекСтрока.МетодНачисленияАмортизации_Старый = ТекущиеПараметрыОС.МетодНачисленияАмортизации_ОС;
			ТекСтрока.КоэффициентУскорения_Старый 		= ТекущиеПараметрыОС.КоэффициентУскорения_ОС;
			ТекСтрока.ОбъемПродукцииРабот_Старый 		= ТекущиеПараметрыОС.ПредполагаемыйОбъемПродукции_ОС;
			ТекСтрока.ЛиквидационнаяСтоимость_Старый 	= ТекущиеПараметрыОС.ЛиквидационнаяСтоимость_ОС;
			
			// Если это заполнение всех параметров, тогда.
			Если Не НеИзменяемыеПараметры Тогда
				
				ТекСтрока.СрокПолезногоИспользования = ТекущиеПараметрыОС.СрокПолезногоИспользования_ОС;
				ТекСтрока.МетодНачисленияАмортизации = ТекущиеПараметрыОС.МетодНачисленияАмортизации_ОС;
				ТекСтрока.КоэффициентУскорения       = ТекущиеПараметрыОС.КоэффициентУскорения_ОС;
				ТекСтрока.ОбъемПродукцииРабот        = ТекущиеПараметрыОС.ПредполагаемыйОбъемПродукции_ОС;
				ТекСтрока.ЛиквидационнаяСтоимость    = ТекущиеПараметрыОС.ЛиквидационнаяСтоимость_ОС;
				
			КонецЕсли;
			
			ДатаВводаВЭксплуатацию = ТекущиеПараметрыАмортизации.ДатаВводаВЭксплуатацию;
			ФактСрокИспользования  = ?(ДатаВводаВЭксплуатацию = NULL
									  , 0
									  //1С-ИжТиСи, Кондратьев, 03.2020, обновление, некомментированный исправленный код (
									  //, бит_му_ВНА.ОпределитьФактическийСрокИспользования(Организация, ТекСтрока.ОсновноеСредство, Дата));
									  , бит_му_ВНА.ОпределитьФактическийСрокИспользования(Организация, ТекСтрока.ОсновноеСредство, Дата)) - ?(ТекущиеПараметрыОС.НачислятьАмортизациюСТекущегоПериода_ОС, 0, 1);										  
									  //1С-ИжТиСи, Кондратьев, 03.2020, обновление, некомментированный исправленный код )
			
			ТекСтрока.ФактСрокИспользования   = ФактСрокИспользования;
			ТекСтрока.ФактОбъемПродукцииРабот = ТекущиеПараметрыАмортизации.Количество;
			
		КонецЕсли;
		
		ТекСтрока.Стоимость          		   = ТекущиеПараметрыАмортизации.Стоимость;
		ТекСтрока.Амортизация        		   = ТекущиеПараметрыАмортизации.Амортизация;
		ТекСтрока.СуммаФактическогоОбесценения = ТекущиеПараметрыАмортизации.СуммаФактическогоОбесценения;
		
		// Очистим параметры ОС недоступные для текущего метода ничасления амортизации.
		ОчиститьНедоступныеПараметрыОС(ТекСтрока);
		
		// Если это заполнение не изменяемых параметров, тогда.
		Если НеИзменяемыеПараметры Тогда
			ТекстСообщения = Нстр("ru = 'Заполнение параметров для основного средства ""%1%""  выполнено.'");
			ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, ТекСтрока.ОсновноеСредство);
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		КонецЕсли;
			
	КонецЕсли;

КонецПроцедуры // ЗаполнитьПараметрыСтроки()

// Процедура проверяет правильность заполнения строк таблиц документа.
// 
// Параметры: 
//  СтруктураТаблиц			- Структура, таблицы значений, содержащая данные для проведения и проверки.
//  СтруктураШапкиДокумента - выборка из результата запроса по шапке документа.
//  Отказ                   - флаг отказа в проведении.
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
// 
Процедура ПроверитьЗаполнениеТаблицДокумента(СтруктураТаблиц, СтруктураШапкиДокумента, Отказ, Заголовок)
	
	//БИТ Тртилек 13.08.2012 в зависимости от вида операции выполним проверку на заполненность ТЧ
	Если НЕ ВидОперации = Перечисления.бит_му_ВидыОперацийМодернизацияОС.МодернизацияКонсолидированногоОС Тогда
	///БИТ Тртилек
		
		//БИТ Тртилек 13.08.2012
		//Проверим заполнение всех аналитик для каждого счета незавершенного строительства
		Для Каждого СтрокаТаблицы ИЗ ОсновныеСредства Цикл
			Если ЗначениеЗаполнено(СтрокаТаблицы.СчетНезавершенногоСтроительства) Тогда
				КоличествоСубконто = СтрокаТаблицы.СчетНезавершенногоСтроительства.ВидыСубконто.Количество();
				Для Ном = 1 По КоличествоСубконто Цикл
					Если НЕ ЗначениеЗаполнено(СтрокаТаблицы["Субконто"+Ном]) Тогда
						Сообщить("В строке: " + СтрокаТаблицы.НомерСтроки + "не заполнено Субконто"+Ном + ". Документ проведен не будет", СтатусСообщения.Важное);
						Отказ = Истина;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//БИТ Тртилек 29.10.2012
	//Проверим заполнение субконто для каждого корсчета
	Для Каждого СтрокаТаблицы ИЗ ОсновныеСредстваКонсолидированные Цикл
		Если ЗначениеЗаполнено(СтрокаТаблицы.КорСчетМСФО) Тогда
			КоличествоСубконто = СтрокаТаблицы.КорСчетМСФО.ВидыСубконто.Количество();
			Если КоличествоСубконто > 0 Тогда
				Для Ном = 1 По ?(КоличествоСубконто>2, 2, КоличествоСубконто) Цикл
					Если НЕ ЗначениеЗаполнено(СтрокаТаблицы["КорСубконто"+Ном]) Тогда
						Сообщить("В строке: " + СтрокаТаблицы.НомерСтроки + " не заполнено Кор субконто"+Ном + ". Документ проведен не будет", СтатусСообщения.Важное);
						Отказ = Истина;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	///БИТ Тртилек
	
	// Проверим наличие дублей в табличной части "ОсновныеСредства".
	бит_ОбщегоНазначения.ПроверитьДублированиеЗначенийВТабличнойЧасти(ЭтотОбъект
																	 , "ОсновныеСредства"
																	 , Новый Структура("ОсновноеСредство")
																	 , Отказ
																	 , Заголовок);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаПоОС = СтруктураТаблиц.ОС;
	КолонкиОС	= ТаблицаПоОС.Колонки;
	ВидКласса   = СтруктураШапкиДокумента.ВидКласса_ОС;
	
	//БИТ Тртилек 13.08.2012 заполним вид класса в строке ТЧ если консолидированные
	Если ВидОперации = Перечисления.бит_му_ВидыОперацийМодернизацияОС.МодернизацияКонсолидированногоОС Тогда
		Если ОсновныеСредстваКонсолидированные.Количество() > 0 Тогда
			ВидКласса = ТаблицаПоОС[0].ВидКласса;
		КонецЕсли;
	КонецЕсли;
	///БИТ Тртилек	
	
	// Проверим таблицу ОС по строчно.
	Для Каждого ТекСтрока Из ТаблицаПоОС Цикл
		
		ТекущийВидКласса = ТекСтрока.ВидКласса;
			
		Если ВидКласса <> ТекущийВидКласса Тогда
			
			ТекстСообщения = Нстр("ru = 'В строке № %1% табличной части ""Основные средства"" вид класса %2% основного средства %3% не соответствует виду операции документа!'");
			ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения
											, ТекСтрока.НомерСтроки
											, ТекущийВидКласса
											, ТекСтрока.ОсновноеСредство);
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения, , , Отказ);
					
		Иначе	
			
			// Проверим заполненность значений строки.
			бит_му_ВНА.ПроверитьСтрокуТаблицыОС(ТекСтрока, КолонкиОС, СтруктураШапкиДокумента, Отказ, Заголовок);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ПроверитьЗаполнениеТаблицДокумента()

// Процедура выполняет движения по регистрам.
//             
// Параметры:
//  СтруктураШапкиДокумента - Структура.
//  СтруктураТаблиц 		- Структура.
//  СтруктураКурсыВалют 	- Структура.
//  ИсторическиеКурсы 		- Структура.
//  Отказ                   - Булево.
//  Заголовок				- Строка.
// 
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, СтруктураТаблиц, СтруктураКурсыВалют, ИсторическиеКурсы, Отказ, Заголовок)
	
	ДатаДока       = СтруктураШапкиДокумента.Дата;
	ТекОрганизация = СтруктураШапкиДокумента.Организация;
	ТаблицаДанных  = СтруктураТаблиц.ОС;
	
	// Движения по регистру сведений "бит_му_СобытияОС".
	НаборЗаписей   = Движения.бит_му_СобытияОС;
	ТаблицаЗаписей = НаборЗаписей.Выгрузить();
	ТаблицаЗаписей.Очистить();
	
	//БИТ Тртилек 07.08.2012 в зависимости от вида операции заполним таблицу записей для создания движений по регистру "События ОС"
	//Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
	//	Запись = ТаблицаЗаписей.Добавить();
	//	Запись.ОсновноеСредство = СтрокаТаблицы.ОсновноеСредство;
	//КонецЦикла;
	//
	//Событие = Перечисления.бит_му_СобытияОС.Модернизация;
	//
	//ТаблицаЗаписей.ЗаполнитьЗначения(ДатаДока	   , "Период");
	//ТаблицаЗаписей.ЗаполнитьЗначения(Истина		   , "Активность");
	//ТаблицаЗаписей.ЗаполнитьЗначения(ТекОрганизация, "Организация");
	//ТаблицаЗаписей.ЗаполнитьЗначения(Событие	   , "Событие");	
	Если НЕ ВидОперации = Перечисления.бит_му_ВидыОперацийМодернизацияОС.МодернизацияКонсолидированногоОС Тогда
	///БИТ Тртилек
		Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
			Запись = ТаблицаЗаписей.Добавить();
			Запись.ОсновноеСредство = СтрокаТаблицы.ОсновноеСредство;
		КонецЦикла;
		
		Событие = Перечисления.бит_му_СобытияОС.Модернизация;
		
		ТаблицаЗаписей.ЗаполнитьЗначения(ДатаДока	   , "Период");
		ТаблицаЗаписей.ЗаполнитьЗначения(Истина		   , "Активность");
		ТаблицаЗаписей.ЗаполнитьЗначения(ТекОрганизация, "Организация");
		ТаблицаЗаписей.ЗаполнитьЗначения(Событие	   , "Событие");
	//БИТ Тртилек 07.08.2012 в зависимости от вида операции заполним таблицу записей для создания движений по регистру "События ОС"
	Иначе
		Событие = Перечисления.бит_му_СобытияОС.Модернизация;
	    Запись = ТаблицаЗаписей.Добавить();
		Запись.ОсновноеСредство = бит_ОсновноеСредство;
		ТаблицаЗаписей.ЗаполнитьЗначения(ДатаДока	   , "Период");
		ТаблицаЗаписей.ЗаполнитьЗначения(Истина		   , "Активность");
		ТаблицаЗаписей.ЗаполнитьЗначения(ТекОрганизация, "Организация");
		ТаблицаЗаписей.ЗаполнитьЗначения(Событие	   , "Событие");
	КонецЕсли;
	///БИТ Тртилек	
		
	НаборЗаписей.Загрузить(ТаблицаЗаписей);
	
	//БИТ Тртилек 08.08.2012 в случае консолидированного ОС выполним движения по регистру "Комплектация ОС"		
	Если ВидОперации = Перечисления.бит_му_ВидыОперацийМодернизацияОС.МодернизацияКонсолидированногоОС Тогда
		
		бит_му_ВыполнитьДвиженияПоРегиструКомплектацияОС(СтруктураШапкиДокумента, ТаблицаДанных, СтруктураКурсыВалют);
		 
	КонецЕсли;
	///БИТ Тртилек	
	
	// Движения по регистру сведений "бит_му_ПараметрыОС".
	НаборЗаписей   = Движения.бит_му_ПараметрыОС;
	
	ВидыПараметров = бит_му_ВНА.ПолучитьВидыПараметров(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.ОсновныеСредства);
	//БИТ Тртилек К.И. 31.08.2012 В случае консолидированного на запись параметров передаем только одну строку, т.к. ОС везде одинаковое и параметры тожа
	//бит_му_ВНА.ЗаписатьПараметрыВНА(НаборЗаписей, СтруктураШапкиДокумента, ТаблицаДанных, ВидыПараметров, "ОС");	
	Если НЕ ВидОперации = Перечисления.бит_му_ВидыОперацийМодернизацияОС.МодернизацияКонсолидированногоОС Тогда
		бит_му_ВНА.ЗаписатьПараметрыВНА(НаборЗаписей, СтруктураШапкиДокумента, ТаблицаДанных, ВидыПараметров, "ОС");
	Иначе
		КопияТаблицыДанных = ТаблицаДанных.Скопировать();
		Пока КопияТаблицыДанных.Количество() > 1 Цикл
			КопияТаблицыДанных.Удалить(0);
		КонецЦикла;
		бит_му_ВНА.ЗаписатьПараметрыВНА(НаборЗаписей, СтруктураШапкиДокумента, КопияТаблицыДанных, ВидыПараметров, "ОС");
	КонецЕсли;
	///БИТ Тртилек	
	
	// Движение по регистру бухгалтерии "бит_Дополнительный_2 (Международный)".
	НаборЗаписей = Движения.бит_Дополнительный_2;
	
	Если СтруктураШапкиДокумента.ВидОперации = Перечисления.бит_му_ВидыОперацийМодернизацияОС.ОсновныеСредства Тогда
		СодержаниеДвижения = "Модернизация ОС";
	//БИТ Тртилек 07.08.2012 заполним содержание
	ИначеЕсли СтруктураШапкиДокумента.ВидОперации = Перечисления.бит_му_ВидыОперацийМодернизацияОС.МодернизацияКонсолидированногоОС И ОсновныеСредстваКонсолидированные.Количество() > 0 Тогда
		Если ТаблицаДанных[0].ВидКласса = Перечисления.бит_му_ВидыКлассовОС.ИнвестиционнаяСобственность Тогда
			СодержаниеДвижения = "Модернизация ИС";
		Иначе
			СодержаниеДвижения = "Модернизация ОС";
		КонецЕсли;
	///БИТ Тртилек		
	Иначе
		СодержаниеДвижения = "Модернизация ИС";
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		
		// ДТ СчетУчетаОС КТ СчетНезавершенногоСтроительства СуммаМодернизации.
		СоздатьЗаписьПоНачислениюМодернизации(СтруктураШапкиДокумента
											 , НаборЗаписей
											 , СтрокаТаблицы
											 , ИсторическиеКурсы.Получить(СтрокаТаблицы.ДатаПринятия)
											 , СодержаниеДвижения);
		
 	КонецЦикла;
										 
	// БИТ Тртилек 23082013 заполним РС НРП ВНА
	Если ВидОперации = Перечисления.бит_му_ВидыОперацийМодернизацияОС.МодернизацияКонсолидированногоОС Тогда
		//очистим имеющиеся записи
		
		НаборЗаписейНРПВНА = РегистрыСведений.бит_му_НРП_ВНА.СоздатьНаборЗаписей();
		НаборЗаписейНРПВНА.Отбор.мРегистратор.Установить(СтруктураШапкиДокумента.Ссылка);
		НаборЗаписейНРПВНА.Записать();
		
		Для Каждого СтрокаТаблицы ИЗ СтруктураТаблиц.ДокументыПоступления Цикл
			
			СформироватьЗаписьНРПВНА(СтруктураШапкиДокумента, СтрокаТаблицы, СтруктураКурсыВалют, Перечисления.бит_ВидДвиженияНакопления.Приход, СтруктураТаблиц.ОС[0]);
			СформироватьЗаписьНРПВНА(СтруктураШапкиДокумента, СтрокаТаблицы, СтруктураКурсыВалют, Перечисления.бит_ВидДвиженияНакопления.Расход, СтруктураТаблиц.ОС[0]);
			
		КонецЦикла;
	КонецЕсли;
	///БИТ Тртилек										 
	
КонецПроцедуры // ДвиженияПоРегистрам()

// Функция получает структуру курсов валют.
// 
// Параметры:
//  СтруктураШапкиДокумента - Структура.
//  Отказ					- Булево.
//  Заголовок				- Строка.
// 
// Возвращаемое значение:
//  СтруктураКурсыВалют - Структура.
// 
Функция ПолучитьСтруктуруКурсовВалют(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	// ВидыКурсов = Новый Структура("Упр, Регл, МУ");
	ВидыКурсов = Новый Структура("Упр, Регл, МУ, Документ");
	СтруктураКурсыВалют = бит_му_ОбщегоНазначения.ПолучитьСтруктуруКурсовВалют(ЭтотОбъект
																			  ,СтруктураШапкиДокумента.Дата
																			  ,ВидыКурсов);
	// СтруктураКурсыВалют.Вставить("Документ", СтруктураКурсыВалют.МУ);
	
	// Получим валюту международного учета.
	СтрКурсов = СтруктураКурсыВалют.МУ;
	мВалютаМеждУчета = СтрКурсов.Валюта;
	
	Если Не ЗначениеЗаполнено(мВалютаМеждУчета) Тогда
		
		ТекстСообщения = "Для организации """ + СтруктураШапкиДокумента.Организация + """ не указана валюта международного учета!";
		бит_ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок);
		
		Возврат Новый Структура;
	КонецЕсли;
	
	Возврат СтруктураКурсыВалют;
	
КонецФункции // ПолучитьСтруктуруКурсовВалют()

// Функция получает курсы валют на даты принятия к учету ОС.
// 
// Параметры:
// 	ТаблицаДанных - ТаблицаЗначений - таблица данных по ОС.
// 	СтруктураКурсыВалют - Структура - курсы валют на дату документа.
// 
// Возвращаемое значение:
// 	Курсы - Соответствие - значения курсов на дату принятия к учету будут иметь.
// 						   аналогичную структуру как и СтруктураКурсыВалют.
// 
Функция ПолучитьСтруктуруИсторическихКурсов(ТаблицаДанных, СтруктураКурсыВалют)
	
	ТаблицаПериодов = ТаблицаДанных.Скопировать( , "ДатаПринятия");
	ТаблицаПериодов.Колонки.ДатаПринятия.Имя = "Период";
	ТаблицаПериодов.Свернуть("Период");
	
	Курсы = бит_КурсыВалют.ПолучитьКурсыВалютПоПериодам(ТаблицаПериодов, , СтруктураКурсыВалют);
	
	Возврат Курсы;
	
КонецФункции // ПолучитьСтруктуруИсторическихКурсов()

// Процедура формирует проводку по модернизации.
// 
// Параметры:
//  СтруктураШапкиДокумента - Структура.
//  НаборЗаписей			- РегистрБухгалтерииНаборЗаписей.бит_Дополнительный_2.
//  СтрокаТаблицы           - СтрокаТаблицыЗначений.
//  СтруктураКурсыВалют     - Структура.
//  СодержаниеДвижения		- Строка.
// 
Процедура СоздатьЗаписьПоНачислениюМодернизации(СтруктураШапкиДокумента
											   , НаборЗаписей
											   , СтрокаТаблицы
											   , СтруктураКурсыВалют
											   , СодержаниеДвижения)
	
	Запись = НаборЗаписей.Добавить();
	
	// Заполнение атрибутов записи.
	СтруктураПараметров = Новый Структура("Организация,Период,Валюта,СчетДт,СчетКт,Сумма,Содержание"
										  , СтруктураШапкиДокумента.Организация
										  , СтруктураШапкиДокумента.Дата
										  // , мВалютаМеждУчета
										  , СтруктураКурсыВалют.Документ.Валюта
										  , СтрокаТаблицы.СчетДт
										  , СтрокаТаблицы.СчетКт
										  , СтрокаТаблицы.СуммаМодернизации
										  , СодержаниеДвижения);
										   
	бит_му_ОбщегоНазначения.ЗаполнитьЗаписьРегистраМУ(Запись, СтруктураПараметров);											   
	
	// Заполним аналитику счета Дт и Кт.
	бит_му_ОбщегоНазначения.ЗаполнитьАналитикуДт_Кт(Запись, СтрокаТаблицы, "СубконтоДт", "СубконтоКт", мКоличествоСубконтоМУ);
	
	// Выполним валютные пересчеты.
	бит_му_ОбщегоНазначения.ВыполнитьВалютныеПересчетыЗаписи(СтруктураПараметров, Запись, СтруктураКурсыВалют);
	
	//БИТ Тртилек 24.09.2012 заполним вид движения для вновь создаваемой записи
	Запись.ВидДвиженияМСФО = Перечисления.БИТ_ВидыДвиженияМСФО.КорректировкаМСФО;
	///БИТ Тртилек
	
КонецПроцедуры // СоздатьЗаписьПоНачислениюМодернизации()

// Процедура очищает реквизиты строки табличной части ОС.
// 
// Параметры:
//  СтрокаТабличнойЧастиОС - СтрокаТабличнойЧасти.ОсновныеСредства.
// 
Процедура ОчиститьРеквизитыСтрокиОС(СтрокаТабличнойЧастиОС)
	
	МассивИмен = Новый Массив; 
	МассивИмен.Добавить("СрокПолезногоИспользования_Старый"); 
	МассивИмен.Добавить("МетодНачисленияАмортизации_Старый");
	МассивИмен.Добавить("КоэффициентУскорения_Старый");
	МассивИмен.Добавить("ОбъемПродукцииРабот_Старый");
	МассивИмен.Добавить("ЛиквидационнаяСтоимость_Старый");
	МассивИмен.Добавить("СрокПолезногоИспользования");
	МассивИмен.Добавить("ФактСрокИспользования");
	МассивИмен.Добавить("Стоимость");
	МассивИмен.Добавить("Амортизация");
	МассивИмен.Добавить("СуммаФактическогоОбесценения");
	МассивИмен.Добавить("МетодНачисленияАмортизации");
	МассивИмен.Добавить("КоэффициентУскорения");
	МассивИмен.Добавить("ОбъемПродукцииРабот");
	МассивИмен.Добавить("ФактОбъемПродукцииРабот");
	МассивИмен.Добавить("ЛиквидационнаяСтоимость");
	
	Для Каждого ТекИмя Из МассивИмен Цикл
		СтрокаТабличнойЧастиОС[ТекИмя] = Неопределено;
	КонецЦикла;
	
КонецПроцедуры // ОчиститьРеквизитыСтрокиОС()


#КонецОбласти

//БИТ Тртилек 06.07.2012 получим движения для заполнения табличной части из подбора
Функция ПолучитьДвиженияПоХозрасчетномуРегистру(МассивДокументовБУ, ОбъектСтроительства = Неопределено, ТаблицаДокументОсновноеСредство) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаСопоставления.ДокументБУ,
	               |	ТаблицаСопоставления.ВНА
	               |ПОМЕСТИТЬ ВТТаблицаСопоставления
	               |ИЗ
	               |	&ТаблицаСопоставления КАК ТаблицаСопоставления
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйДвиженияССубконто.СчетДт,
	               |	ХозрасчетныйДвиженияССубконто.СчетКт,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |			ТОГДА ВЫБОР
	               |					КОГДА НЕ ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&Счет01, &Счет03)
	               |						ТОГДА -ХозрасчетныйДвиженияССубконто.Сумма
	               |					ИНАЧЕ ХозрасчетныйДвиженияССубконто.Сумма
	               |				КОНЕЦ
	               |		ИНАЧЕ ХозрасчетныйДвиженияССубконто.Сумма
	               |	КОНЕЦ КАК Сумма,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&Счет01, &Счет03)
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
	               |					ИНАЧЕ ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |				КОНЕЦ
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&Счет01, &Счет03)
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |					ИНАЧЕ ХозрасчетныйДвиженияССубконто.СубконтоКт1
	               |				КОНЕЦ
	               |	КОНЕЦ КАК Субконто1,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&Счет01, &Счет03)
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2
	               |					ИНАЧЕ ХозрасчетныйДвиженияССубконто.СубконтоДт2
	               |				КОНЕЦ
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&Счет01, &Счет03)
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
	               |					ИНАЧЕ ХозрасчетныйДвиженияССубконто.СубконтоКт2
	               |				КОНЕЦ
	               |	КОНЕЦ КАК Субконто2,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&Счет01, &Счет03)
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3
	               |					ИНАЧЕ ХозрасчетныйДвиженияССубконто.СубконтоДт3
	               |				КОНЕЦ
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&Счет01, &Счет03)
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
	               |					ИНАЧЕ ХозрасчетныйДвиженияССубконто.СубконтоКт3
	               |				КОНЕЦ
	               |	КОНЕЦ КАК Субконто3,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.ОбъектыСтроительства
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.ОбъектыСтроительства
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.ОбъектыСтроительства
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1 ССЫЛКА Справочник.ОбъектыСтроительства
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
	               |				КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2 ССЫЛКА Справочник.ОбъектыСтроительства
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2
	               |				КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3 ССЫЛКА Справочник.ОбъектыСтроительства
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Объект,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1 ССЫЛКА Справочник.СтатьиЗатрат
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
	               |				КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2 ССЫЛКА Справочник.СтатьиЗатрат
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2
	               |				КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3 ССЫЛКА Справочник.СтатьиЗатрат
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3
	               |			КОНЕЦ
	               |	КОНЕЦ КАК СтатьяЗатрат,
	               |	ХозрасчетныйДвиженияССубконто.Регистратор КАК ДокументРСБУ,
	               |	ХозрасчетныйДвиженияССубконто.НомерСтроки КАК Номер,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.ОсновныеСредства
	               |			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1 ССЫЛКА Справочник.ОсновныеСредства
	               |			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)
	               |	КОНЕЦ КАК ОсновноеСредствоПодбор
	               |ПОМЕСТИТЬ ВТИтоговая
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	               |			,
	               |			,
	               |			Регистратор В (&СписокДокументов)
	               |				И (СчетДт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |					ИЛИ СчетКт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)),
	               |			,
	               |			) КАК ХозрасчетныйДвиженияССубконто
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_му_КомплектацияОС КАК бит_му_КомплектацияОС
	               |		ПО ХозрасчетныйДвиженияССубконто.Регистратор = бит_му_КомплектацияОС.ДокументРСБУ
	               |			И (ВЫБОР
	               |				КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |				ИНАЧЕ ХозрасчетныйДвиженияССубконто.СубконтоКт1
	               |			КОНЕЦ = бит_му_КомплектацияОС.АналитикаРСБУ)
	               |ГДЕ
	               |	бит_му_КомплектацияОС.ДокументРСБУ ЕСТЬ NULL 
	               |	И ВЫБОР
	               |			КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |				ТОГДА ВЫБОР
	               |						КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.ОбъектыСтроительства
	               |							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |						КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.ОбъектыСтроительства
	               |							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
	               |						КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.ОбъектыСтроительства
	               |							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
	               |					КОНЕЦ
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1 ССЫЛКА Справочник.ОбъектыСтроительства
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2 ССЫЛКА Справочник.ОбъектыСтроительства
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3 ССЫЛКА Справочник.ОбъектыСтроительства
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3
	               |				КОНЕЦ
	               |		КОНЕЦ В ИЕРАРХИИ (&ОбъектСтроительства)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйДвиженияССубконто2.СчетДт,
	               |	ХозрасчетныйДвиженияССубконто2.СчетКт,
	               |	ХозрасчетныйДвиженияССубконто2.Сумма,
	               |	ХозрасчетныйДвиженияССубконто2.СубконтоДт1,
	               |	ХозрасчетныйДвиженияССубконто2.СубконтоДт2,
	               |	ХозрасчетныйДвиженияССубконто2.СубконтоДт3,
	               |	ХозрасчетныйДвиженияССубконто2.СубконтоДт2,
	               |	NULL,
	               |	ХозрасчетныйДвиженияССубконто2.Регистратор,
	               |	ХозрасчетныйДвиженияССубконто2.НомерСтроки,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйДвиженияССубконто2.СубконтоДт1 ССЫЛКА Справочник.ОсновныеСредства
	               |			ТОГДА ХозрасчетныйДвиженияССубконто2.СубконтоДт1
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)
	               |	КОНЕЦ
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	               |			,
	               |			,
	               |			Регистратор ССЫЛКА Документ.ВводНачальныхОстатков
	               |				И Регистратор.РазделУчета = &РазделУчета
	               |				И СчетДт В ИЕРАРХИИ (&Счет01, &Счет03)
	               |				И Регистратор В (&СписокДокументов),
	               |			,
	               |			) КАК ХозрасчетныйДвиженияССубконто2
	               |ГДЕ
	               |	ХозрасчетныйДвиженияССубконто2.СубконтоДт1.Объект В ИЕРАРХИИ(&ОбъектСтроительства)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйДвиженияССубконто.СчетДт,
	               |	ХозрасчетныйДвиженияССубконто.СчетКт,
	               |	-ХозрасчетныйДвиженияССубконто.Сумма,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
	               |		ИНАЧЕ ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2
	               |		ИНАЧЕ ХозрасчетныйДвиженияССубконто.СубконтоДт2
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3
	               |		ИНАЧЕ ХозрасчетныйДвиженияССубконто.СубконтоДт3
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1 ССЫЛКА Справочник.ОбъектыСтроительства
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2 ССЫЛКА Справочник.ОбъектыСтроительства
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3 ССЫЛКА Справочник.ОбъектыСтроительства
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.ОбъектыСтроительства
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |				КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.ОбъектыСтроительства
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
	               |				КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.ОбъектыСтроительства
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
	               |			КОНЕЦ
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1 ССЫЛКА Справочник.СтатьиЗатрат
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2 ССЫЛКА Справочник.СтатьиЗатрат
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3 ССЫЛКА Справочник.СтатьиЗатрат
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |				КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
	               |				КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
	               |			КОНЕЦ
	               |	КОНЕЦ,
	               |	ХозрасчетныйДвиженияССубконто.Регистратор,
	               |	ХозрасчетныйДвиженияССубконто.НомерСтроки + 1000000,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1 ССЫЛКА Справочник.ОсновныеСредства
	               |			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
	               |		КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.ОсновныеСредства
	               |			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)
	               |	КОНЕЦ
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	               |			,
	               |			,
	               |			Регистратор В (&СписокДокументов)
	               |				И (СчетДт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |					И СчетКт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)),
	               |			,
	               |			) КАК ХозрасчетныйДвиженияССубконто
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_му_КомплектацияОС КАК бит_му_КомплектацияОС
	               |		ПО (ВЫБОР
	               |				КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
	               |				ИНАЧЕ ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |			КОНЕЦ = бит_му_КомплектацияОС.АналитикаРСБУ)
	               |			И ХозрасчетныйДвиженияССубконто.Регистратор = бит_му_КомплектацияОС.ДокументРСБУ
	               |ГДЕ
	               |	бит_му_КомплектацияОС.ДокументРСБУ ЕСТЬ NULL 
	               |	И ВЫБОР
	               |			КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&Счет0801, &Счет0802, &Счет0803)
	               |				ТОГДА ВЫБОР
	               |						КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1 ССЫЛКА Справочник.ОбъектыСтроительства
	               |							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
	               |						КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2 ССЫЛКА Справочник.ОбъектыСтроительства
	               |							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2
	               |						КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3 ССЫЛКА Справочник.ОбъектыСтроительства
	               |							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3
	               |					КОНЕЦ
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.ОбъектыСтроительства
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.ОбъектыСтроительства
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
	               |					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.ОбъектыСтроительства
	               |						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
	               |				КОНЕЦ
	               |		КОНЕЦ В ИЕРАРХИИ (&ОбъектСтроительства)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТИтоговая.СчетДт,
	               |	ВТИтоговая.СчетКт,
	               |	ВТИтоговая.Субконто1,
	               |	ВТИтоговая.Субконто2,
	               |	ВТИтоговая.Субконто3,
	               |	ВТИтоговая.Объект,
	               |	ВТИтоговая.СтатьяЗатрат,
	               |	ВТИтоговая.ДокументРСБУ,
	               |	ВТИтоговая.Номер,
	               |	ВТИтоговая.ОсновноеСредствоПодбор,
	               |	ВТИтоговая.Сумма
	               |ИЗ
	               |	ВТТаблицаСопоставления КАК ВТТаблицаСопоставления
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоговая КАК ВТИтоговая
	               |		ПО ВТТаблицаСопоставления.ДокументБУ = ВТИтоговая.ДокументРСБУ
	               |			И ВТТаблицаСопоставления.ВНА = ВТИтоговая.ОсновноеСредствоПодбор
	               |ГДЕ
	               |	НЕ ВТИтоговая.ДокументРСБУ ЕСТЬ NULL ";
				   
	Запрос.УстановитьПараметр("СписокДокументов", МассивДокументовБУ);
	Запрос.УстановитьПараметр("Счет0801", ПланыСчетов.Хозрасчетный.ПриобретениеЗемельныхУчастков);
	Запрос.УстановитьПараметр("Счет0802", ПланыСчетов.Хозрасчетный.ПриобретениеОбъектовПриродопользования);
	Запрос.УстановитьПараметр("Счет0803", ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств);
	Запрос.УстановитьПараметр("Счет01", ПланыСчетов.Хозрасчетный.ОсновныеСредства);
	Запрос.УстановитьПараметр("Счет03", ПланыСчетов.Хозрасчетный.ДоходныеВложенияВ_МЦ);
	Запрос.УстановитьПараметр("РазделУчета", Перечисления.РазделыУчетаДляВводаОстатков.ОсновныеСредства);
	Запрос.УстановитьПараметр("ТаблицаСопоставления", ТаблицаДокументОсновноеСредство);
	Запрос.УстановитьПараметр("ОбъектСтроительства", ?(ЗначениеЗаполнено(ОбъектСтроительства), ОбъектСтроительства, бит_ОсновноеСредство.Объект));
	ТаблицаДвижений = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаДвижений;

КонецФункции

// БИТ Тртилек 06.08.2012
//Аналогичная функция, только для консолидированного 
Функция ПодготовитьТаблицыДокументаКонсолидированный(СтруктураШапкиДокумента, СтруктураКурсыВалют)  Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация"			  , СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("МоментВремени"		  , МоментВремени());
	Запрос.УстановитьПараметр("Ссылка"				  , СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("СписокОС"			  , СтруктураШапкиДокумента.СписокОС);
	Запрос.УстановитьПараметр("СостояниеПринятоКУчету", Перечисления.бит_му_СостоянияОС.ПринятоКУчету);
	Запрос.УстановитьПараметр("СостояниеСнятоСУчета"  , Перечисления.бит_му_СостоянияОС.СнятоСУчета);
	Запрос.УстановитьПараметр("ПараметрСчетУчета"	  , ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СчетУчета_ОС);
	Запрос.УстановитьПараметр("ПараметрКласс"	  	  , ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС);
	Запрос.УстановитьПараметр("ПараметрФинАренда"	  , ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.ФинансоваяАренда_ОС);
	Запрос.УстановитьПараметр("ПустойПараметр"		  , ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.ПустаяСсылка());
	Запрос.УстановитьПараметр("СчетНачисленияАмортизации"		  , ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СчетНачисленияАмортизации_ОС);
	Запрос.УстановитьПараметр("СпособОтраженияРасходовПоАмортизации"		  , ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СпособОтраженияРасходовПоАмортизации_ОС);
	Запрос.УстановитьПараметр("ВнутригрупповыеЗатраты"		  , ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.ВнутригрупповыеЗатраты_ОС);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПараметрыОС_МУ.ОсновноеСредство,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС_МУ.Параметр = &ПараметрСчетУчета
	|				ТОГДА ПараметрыОС_МУ.ЗначениеПараметра
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК СчетУчета,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС_МУ.Параметр = &СпособОтраженияРасходовПоАмортизации
	|				ТОГДА ПараметрыОС_МУ.ЗначениеПараметра
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК СпособОтраженияРасходовПоАмортизации,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС_МУ.Параметр = &СчетНачисленияАмортизации
	|				ТОГДА ПараметрыОС_МУ.ЗначениеПараметра
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК СчетНачисленияАмортизации,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС_МУ.Параметр = &ПараметрКласс
	|				ТОГДА ПараметрыОС_МУ.ЗначениеПараметра.ВидКласса
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК ВидКласса,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС_МУ.Параметр = &ПараметрФинАренда
	|				ТОГДА ПараметрыОС_МУ.ЗначениеПараметра
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ОбъектВФинансовойАренде,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыОС_МУ.Параметр = &ВнутригрупповыеЗатраты
	|				ТОГДА ПараметрыОС_МУ.ЗначениеПараметра
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ВнутригрупповыеЗатраты
	|ПОМЕСТИТЬ ТаблицаПараметров
	|ИЗ
	|	РегистрСведений.бит_му_ПараметрыОС.СрезПоследних(
	|			&МоментВремени,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)
	|				И (Параметр = &ПараметрСчетУчета
	|					ИЛИ Параметр = &ПараметрКласс
	|					ИЛИ Параметр = &ПараметрФинАренда
	|					ИЛИ Параметр = &СчетНачисленияАмортизации
	|					ИЛИ Параметр = &СпособОтраженияРасходовПоАмортизации)) КАК ПараметрыОС_МУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыОС_МУ.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеСредства.НомерСтроки,
	|	ОсновныеСредства.ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА ОсновныеСредства.Ссылка.бит_СрокПолезногоИспользованияСтар <> ОсновныеСредства.Ссылка.бит_НовыйСрокИспользования
	|			ТОГДА ОсновныеСредства.Ссылка.бит_НовыйСрокИспользования
	|		ИНАЧЕ &ПустойПараметр
	|	КОНЕЦ КАК СрокПолезногоИспользования,
	|	ОсновныеСредства.Сумма КАК СуммаМодернизации,
	|	ВЫБОР
	|		КОГДА ОсновныеСредства.Ссылка.бит_МетодНачисленияАмортизации <> ОсновныеСредства.Ссылка.бит_НовыйМетодНачисленияАмортизации
	|			ТОГДА ОсновныеСредства.Ссылка.бит_НовыйМетодНачисленияАмортизации
	|		ИНАЧЕ &ПустойПараметр
	|	КОНЕЦ КАК МетодНачисленияАмортизации,
	|	ВЫБОР
	|		КОГДА ОсновныеСредства.Ссылка.бит_КоэффициентУскорения <> ОсновныеСредства.Ссылка.бит_НовыйКоэффициентУскорения
	|			ТОГДА ОсновныеСредства.Ссылка.бит_НовыйКоэффициентУскорения
	|		ИНАЧЕ &ПустойПараметр
	|	КОНЕЦ КАК КоэффициентУскорения,
	|	ВЫБОР
	|		КОГДА ОсновныеСредства.Ссылка.бит_ЛиквидационнаяСтоимость <> ОсновныеСредства.Ссылка.бит_НоваяЛиквидационнаяСтоимость
	|			ТОГДА ОсновныеСредства.Ссылка.бит_НоваяЛиквидационнаяСтоимость
	|		ИНАЧЕ &ПустойПараметр
	|	КОНЕЦ КАК ЛиквидационнаяСтоимость,
	|	ПринятыеОС_МУ.ДатаСостояния КАК ДатаПринятия,
	|	ВыбывшиеОС_МУ.ДатаСостояния КАК ДатаВыбытия,
	|	ТаблицаПараметров.СчетУчета КАК СчетДт,
	|	ТаблицаПараметров.ОсновноеСредство КАК СубконтоДт1,
	|	АналитикаУчетаОС_МУ.Субконто2 КАК СубконтоДт2,
	|	АналитикаУчетаОС_МУ.Субконто3 КАК СубконтоДт3,
	|	АналитикаУчетаОС_МУ.Субконто4 КАК СубконтоДт4,
	|	ОсновныеСредства.КорСчетМСФО КАК СчетКт,
	|	ОсновныеСредства.КорСубконто1 КАК СубконтоКт1,
	|	ОсновныеСредства.КорСубконто2 КАК СубконтоКт2,
	|	ОсновныеСредства.КорСубконто3 КАК СубконтоКт3,
	|	ОсновныеСредства.КорСубконто4 КАК СубконтоКт4,
	|	ТаблицаПараметров.ВидКласса,
	|	ЕСТЬNULL(ТаблицаПараметров.ОбъектВФинансовойАренде, ЛОЖЬ) КАК ОбъектВФинансовойАренде,
	|	ОсновныеСредства.СоставОС,
	|	ОсновныеСредства.СчетУчетаРСБУ,
	|	ОсновныеСредства.ДокументРСБУ,
	|	ОсновныеСредства.ОбъектМСФО,
	|	ОсновныеСредства.Субконто1,
	|	ТаблицаПараметров.СпособОтраженияРасходовПоАмортизации,
	|	ТаблицаПараметров.СчетНачисленияАмортизации,
	|	ТаблицаПараметров.ВнутригрупповыеЗатраты
	|ИЗ
	|	Документ.бит_му_МодернизацияОС.ОсновныеСредстваКонсолидированные КАК ОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияОС КАК ПринятыеОС_МУ
	|		ПО ОсновныеСредства.ОсновноеСредство = ПринятыеОС_МУ.ОсновноеСредство
	|			И (ПринятыеОС_МУ.Организация = &Организация)
	|			И (ПринятыеОС_МУ.Состояние = &СостояниеПринятоКУчету)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_СостоянияОС КАК ВыбывшиеОС_МУ
	|		ПО ОсновныеСредства.ОсновноеСредство = ВыбывшиеОС_МУ.ОсновноеСредство
	|			И (ВыбывшиеОС_МУ.Организация = &Организация)
	|			И (ВыбывшиеОС_МУ.Состояние = &СостояниеСнятоСУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПараметров КАК ТаблицаПараметров
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.бит_Дополнительный_2.Остатки(
	|					&МоментВремени,
	|					Счет В
	|						(ВЫБРАТЬ
	|							ТаблицаПараметров.СчетУчета
	|						ИЗ
	|							ТаблицаПараметров КАК ТаблицаПараметров),
	|					,
	|					Организация = &Организация
	|						И Субконто1 В (&СписокОС)) КАК АналитикаУчетаОС_МУ
	|			ПО ТаблицаПараметров.ОсновноеСредство = АналитикаУчетаОС_МУ.Субконто1
	|				И ТаблицаПараметров.СчетУчета = АналитикаУчетаОС_МУ.Счет
	|		ПО ОсновныеСредства.ОсновноеСредство = ТаблицаПараметров.ОсновноеСредство
	|ГДЕ
	|	ОсновныеСредства.Ссылка = &Ссылка
	|
	|ДЛЯ ИЗМЕНЕНИЯ
	|	РегистрБухгалтерии.бит_Дополнительный_2.Остатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПараметров";
	
	ТаблицаПоОС = Запрос.Выполнить().Выгрузить();
	
	ТаблицаПоОС = ПараметрВнутригрупповыеЗатраты(ТаблицаПоОС);
	
	СтруктураТаблиц = Новый Структура;
	СтруктураТаблиц.Вставить("ОС", ТаблицаПоОС);
	
	Запрос = Новый Запрос;
		
	Запрос.Текст = "ВЫБРАТЬ
	               |	бит_му_МодернизацияОСбит_ДокументыПоступления.ДокументПоступления,
	               |	бит_му_МодернизацияОСбит_ДокументыПоступления.ДатаДокументаПоступления,
	               |	бит_му_МодернизацияОСбит_ДокументыПоступления.бит_Сумма,
	               |	бит_му_НРП_ВНАСрезПоследних.Период КАК рПериод,
	               |	бит_му_НРП_ВНАСрезПоследних.ИсточникЗаписи КАК рИсточникЗаписи,
	               |	бит_му_НРП_ВНАСрезПоследних.ПриходРасход КАК рПриходРасход,
	               |	бит_му_НРП_ВНАСрезПоследних.ДокументРеализации КАК рДокументРеализации,
	               |	бит_му_НРП_ВНАСрезПоследних.ДокументПоступления КАК рДокументПоступления,
	               |	бит_му_НРП_ВНАСрезПоследних.ОрганизацияПодрядчик КАК рОрганизацияПодрядчик,
	               |	бит_му_НРП_ВНАСрезПоследних.ОрганизацияЗаказчик КАК рОрганизацияЗаказчик,
	               |	бит_му_НРП_ВНАСрезПоследних.СуммаБезНДС КАК рСуммаБезНДС,
	               |	бит_му_НРП_ВНАСрезПоследних.СуммаАмортизации КАК рСуммаАмортизации,
	               |	бит_му_НРП_ВНАСрезПоследних.СчетВыручки КАК рСчетВыручки,
	               |	бит_му_НРП_ВНАСрезПоследних.Субконто1СчетаВыручки КАК рСубконто1СчетаВыручки,
	               |	бит_му_НРП_ВНАСрезПоследних.СчетУчетаАктива КАК рСчетУчетаАктива,
	               |	бит_му_НРП_ВНАСрезПоследних.Субконто1СчетаУчетаАктива КАК рСубконто1СчетаУчетаАктива,
	               |	бит_му_НРП_ВНАСрезПоследних.ДатаВвода КАК рДатаВвода,
	               |	бит_му_НРП_ВНАСрезПоследних.ОставшийсяСПИ КАК рОставшийсяСПИ,
	               |	бит_му_НРП_ВНАСрезПоследних.СчетРасходаПоАмортизации КАК рСчетРасходаПоАмортизации,
	               |	бит_му_НРП_ВНАСрезПоследних.Субконто1СчетаРасходаПоАмортизации КАК рСубконто1СчетаРасходаПоАмортизации,
	               |	бит_му_НРП_ВНАСрезПоследних.СчетНакопленнойАмортизации КАК рСчетНакопленнойАмортизации,
	               |	бит_му_НРП_ВНАСрезПоследних.Субконто1СчетаНакопленнойАмортизации КАК рСубконто1СчетаНакопленнойАмортизации,
	               |	бит_му_НРП_ВНАСрезПоследних.ЭлиминирующиеПроводки КАК рЭлиминирующиеПроводки,
	               |	бит_му_НРП_ВНАСрезПоследних.НомерЗаписи КАК рНомерЗаписи,
	               |	бит_му_НРП_ВНАСрезПоследних.Ответственный КАК рОтветственный,
	               |	бит_му_НРП_ВНАСрезПоследних.Субконто2СчетаВыручки КАК рСубконто2СчетаВыручки,
	               |	бит_му_НРП_ВНАСрезПоследних.Субконто3СчетаВыручки КАК рСубконто3СчетаВыручки,
	               |	бит_му_НРП_ВНАСрезПоследних.Субконто4СчетаВыручки КАК рСубконто4СчетаВыручки,
	               |	бит_му_НРП_ВНАСрезПоследних.Субконто2СчетаУчетаАктива КАК рСубконто2СчетаУчетаАктива,
	               |	бит_му_НРП_ВНАСрезПоследних.Субконто3СчетаУчетаАктива КАК рСубконто3СчетаУчетаАктива,
	               |	бит_му_НРП_ВНАСрезПоследних.Субконто4СчетаУчетаАктива КАК рСубконто4СчетаУчетаАктива
	               |ИЗ
	               |	Документ.бит_му_МодернизацияОС.бит_ДокументыПоступления КАК бит_му_МодернизацияОСбит_ДокументыПоступления
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_НРП_ВНА.СрезПоследних КАК бит_му_НРП_ВНАСрезПоследних
	               |		ПО бит_му_МодернизацияОСбит_ДокументыПоступления.ДокументПоступления = бит_му_НРП_ВНАСрезПоследних.ДокументПоступления
	               |ГДЕ
	               |	бит_му_МодернизацияОСбит_ДокументыПоступления.Ссылка = &Ссылка
	               |	И бит_му_НРП_ВНАСрезПоследних.мРегистратор ССЫЛКА Документ.бит_му_ПоступлениеТоваровУслугПоКЗ";
				   
    Запрос.УстановитьПараметр("Ссылка"                ,Ссылка);
	
	Результат = Запрос.Выполнить();
		
	СтруктураТаблиц.Вставить("ДокументыПоступления",Результат.Выгрузить());
	
	Возврат СтруктураТаблиц;
	
КонецФункции // ПодготовитьТаблицуБДДС()

// БИТ Тртилек 23082013 Процедура формирует проводку по НРП ВНА
//
// Параметры:
//  СтруктураШапкиДокумента  – Структура
//  СтрокаТаблицы            - СтрокаТабличнойЧасти
//  СтруктураКурсыВалют      - Структура
//
Процедура СформироватьЗаписьНРПВНА(СтруктураШапкиДокумента, СтрокаТаблицы, СтруктураКурсыВалют, ВидДвижения, СтрокаОС)

	Приход = ВидДвижения = Перечисления.бит_ВидДвиженияНакопления.Приход;
	
	СтруктураПараметров = Новый Структура("ИсточникЗаписи,ПриходРасход, Период, ОрганизацияЗаказчик,ОрганизацияПодрядчик,ДокументРеализации, ДокументПоступления, СуммаБезНДС, СчетВыручки, СчетУчетаАктива, Ответственный, ЭлиминирующиеПроводки"
											,Перечисления.бит_му_ИсточникЗаписи_НРП_ВНА.ПроведениеДокументаПоУчетуОСМСФО    						//источник записи
											,ВидДвижения                                                                   							//приход/расход
											,СтруктураШапкиДокумента.Дата 												    						//период
											,?(Приход, СтрокаТаблицы.рОрганизацияЗаказчик ,СтруктураШапкиДокумента.Организация)						//организация заказчик
											,СтрокаТаблицы.рОрганизацияПодрядчик													     			//организация подрядчик
											,СтрокаТаблицы.рДокументРеализации  					                        						//документ реализации 
											,?(Приход, СтруктураШапкиДокумента.Ссылка ,СтрокаТаблицы.рДокументПоступления)							//документ поступления
											,СтрокаТаблицы.рСуммаБезНДС                                                    						//сумма без НДС
											,СтрокаТаблицы.рСчетВыручки                                                     						//счет выручки
											,?(Приход, СтрокаОС.СчетДт, СтрокаТаблицы.рСчетУчетаАктива)             								//счет учета актива
											,ПараметрыСеанса.ТекущийПользователь                                            						//ответственный
											,СтрокаТаблицы.рЭлиминирующиеПроводки);													 				    						//элиминирующиепроводки								
	
	НоваяЗаписьНРПВНА = РегистрыСведений.бит_му_НРП_ВНА.СоздатьМенеджерЗаписи();
	
	ЗаполнитьЗначенияСвойств(НоваяЗаписьНРПВНА, СтруктураПараметров);
	
	НоваяЗаписьНРПВНА.мРегистратор = СтруктураШапкиДокумента.Ссылка;
	
	Если Приход Тогда
		//срок полезного использования
		НоваяЗаписьНРПВНА.ОставшийсяСПИ = СтрокаОС.СрокПолезногоИспользования;
		
		//дата ввода в экслуатацию
		НоваяЗаписьНРПВНА.ДатаВвода = СтрокаОС.ДатаПринятия;
		
		//счет учета амортизации
		НоваяЗаписьНРПВНА.СчетНакопленнойАмортизации = СтрокаОС.СчетНачисленияАмортизации;
		
		//счет расхода по амортизации
		НоваяЗаписьНРПВНА.СчетРасходаПоАмортизации = СтрокаОС.СпособОтраженияРасходовПоАмортизации.ОсновнойСчетЗатрат;
	КонецЕсли;
	
	//заполним субконто
	Для Ном = 1 По 4 Цикл
		//субконто счета выручки
		Если ЗначениеЗаполнено(СтрокаТаблицы["рСубконто" + Ном + "СчетаВыручки"]) Тогда
			НоваяЗаписьНРПВНА["Субконто" + Ном + "СчетаВыручки"] = СтрокаТаблицы["рСубконто" + Ном + "СчетаВыручки"];
		КонецЕсли;
		
		//субконто счета учета актива
		Если Приход Тогда
			Если ЗначениеЗаполнено(СтрокаОС["СубконтоДт" + Ном]) Тогда
				НоваяЗаписьНРПВНА["Субконто" + Ном + "СчетаУчетаАктива"] = СтрокаОС["СубконтоДт" + Ном];
			КонецЕсли;
			
			//субконто счета накопленной амортизации
			Если ЗначениеЗаполнено(СтрокаОС["СубконтоДт" + Ном]) Тогда
				НоваяЗаписьНРПВНА["Субконто" + Ном + "СчетаНакопленнойАмортизации"] = СтрокаОС["СубконтоДт" + Ном];
			КонецЕсли;			
		Иначе
			 НоваяЗаписьНРПВНА["Субконто" + Ном + "СчетаУчетаАктива"] = СтрокаТаблицы["рСубконто" + Ном + "СчетаУчетаАктива"];
		КонецЕсли;
		
	КонецЦикла;
	
	//субконто счета расхода амортизации
	Если Приход Тогда
		//НоваяЗаписьНРПВНА["Субконто1СчетаРасходаПоАмортизации"] = СтрокаОС.ОсновноеСредство.Объект;
		НоваяЗаписьНРПВНА.ОставшийсяСПИ = ЭтотОбъект.бит_ОставшийсяСрокИспользования;
	КонецЕсли;
	
	НоваяЗаписьНРПВНА.Записать();

КонецПроцедуры //СформироватьЗаписьПоПринятиюКУчету()

// БИТ Тртилек 24.09.2012 процедура создает движения по регистру "Комплектация ОС"
Процедура бит_му_ВыполнитьДвиженияПоРегиструКомплектацияОС(СтруктураШапкиДокумента, ТаблицаДанных, СтруктураКурсыВалют)
	
	// Движения по регистру накопления "бит_му_КомплектацияОС".
	ТаблицаДвижений = Движения.бит_му_КомплектацияОС.Выгрузить();
	ТаблицаДвижений.Очистить();
	
	Для каждого ТекСтр Из ТаблицаДанных Цикл
		
		НоваяЗапись = ТаблицаДвижений.Добавить();
		НоваяЗапись.Период			 = СтруктураШапкиДокумента.Дата;
		НоваяЗапись.ВидДвижения      = ВидДвиженияНакопления.Приход;
		НоваяЗапись.Организация      = Организация;
		НоваяЗапись.ОС               = ТекСтр.ОсновноеСредство;
		НоваяЗапись.Сумма            = ТекСтр.СуммаМодернизации;
		НоваяЗапись.СоставОС         = ТекСтр.СоставОС;
		НоваяЗапись.СчетРСБУ         = ТекСтр.СчетУчетаРСБУ;
		НоваяЗапись.ДокументРСБУ     = ТекСтр.ДокументРСБУ;
		НоваяЗапись.АналитикаРСБУ    = ТекСтр.Субконто1;
		
	КонецЦикла;
	
	Движения.бит_му_КомплектацияОС.мТаблицаДвижений = ТаблицаДвижений;
	Движения.бит_му_КомплектацияОС.ДобавитьДвижение();
	
КонецПроцедуры

// БИТ Тртилек 24.09.2012 процедура пересчитывает общую сумму модернизации складывая значения поля "Сумма" 
//табличной части "ОсновныеСредстваКонсолидированные"
Процедура бит_му_ПересчитатьОбщуюСуммуМодернизации() Экспорт
	
	МассивСумм = ОсновныеСредстваКонсолидированные.ВыгрузитьКолонку("Сумма");
	бит_СуммаМодернизации = 0;	
	Для Каждого Элемент Из МассивСумм Цикл
		бит_СуммаМодернизации = бит_СуммаМодернизации + Элемент;
	КонецЦикла;
	
КонецПроцедуры

//БИТ Тртилек 06092013 процедура проверяет равенство сумм в двух табличных частях
Процедура ПроверитьСоответствиеСумм(Отказ)
	
	ЗапросСуммыОС = Новый Запрос;
	ЗапросСуммыОС.Текст = "ВЫБРАТЬ
	                      |	СУММА(бит_му_МодернизацияОСОсновныеСредстваКонсолидированные.Сумма) КАК Сумма
	                      |ИЗ
	                      |	Документ.бит_му_МодернизацияОС.ОсновныеСредстваКонсолидированные КАК бит_му_МодернизацияОСОсновныеСредстваКонсолидированные
	                      |ГДЕ
	                      |	бит_му_МодернизацияОСОсновныеСредстваКонсолидированные.СоставОС.УслугиОтСоственногоЮЛ = ИСТИНА
	                      |	И бит_му_МодернизацияОСОсновныеСредстваКонсолидированные.Ссылка = &Ссылка";
						  
	ЗапросСуммыОС.УстановитьПараметр("Ссылка", Ссылка);
	ВыборкаСуммыОС = ЗапросСуммыОС.Выполнить().Выбрать();
	Если ВыборкаСуммыОС.Следующий() Тогда
		СуммаОС = ВыборкаСуммыОС.Сумма;
	Иначе
		СуммаОС = 0;
	КонецЕсли;
	
	СуммаПоступлений = бит_ДокументыПоступления.Итог("бит_Сумма");
	
	Если НЕ СуммаОС = СуммаПоступлений Тогда
		Отказ = Истина;
		Сообщить("Документ проведен не будет, т.к. сумма по документам поступления: " + СуммаПоступлений + " не равна сумме модернизации с признаком ""Услуги от собственного ЮЛ"": " + СуммаОС);
	КонецЕсли;                                                                                                                                                                     
	
КонецПроцедуры

//БИТ Тртилек 25112013 функция ищет значение параметра Внутригрупповые затраты и подставляет в ТаблицуОС
Функция ПараметрВнутригрупповыеЗатраты(ТаблицаОС)
	
	ПараметрВнутригрупповыеЗатраты = Ложь;
	
	Если ЭтотОбъект.бит_ДокументыПоступления.Количество() > 0 Тогда
		ПараметрВнутригрупповыеЗатраты = Истина;
	Иначе
		Для Каждого СтрокаТаблицы Из ТаблицаОС Цикл
			Если ТипЗнч(СтрокаТаблицы.ДокументРСБУ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
				ИЛИ ТипЗнч(СтрокаТаблицы.ДокументРСБУ) = Тип("ДокументСсылка.ПоступлениеДопРасходов") Тогда
				Если СтрокаТаблицы.ДокументРСБУ.бит_ДокументыСобственныхКонтрагентов.Количество() > 0 Тогда
					ПараметрВнутригрупповыеЗатраты = Истина;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли; 	
	
	Для Каждого СтрокаДляЗаписи ИЗ ТаблицаОС Цикл
		СтрокаДляЗаписи.ВнутригрупповыеЗатраты = ПараметрВнутригрупповыеЗатраты;
	КонецЦикла; 	
	
	Возврат ТаблицаОС;
	
КонецФункции
                                                
Функция ПолучитьДвиженияПоХозрасчетномуРегистру07_0804(МассивДокументовБУ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Комплектация.АналитикаРСБУ,
	               |	Комплектация.ДокументРСБУ КАК ДокументРСБУ1,
	               |	ВложенныйЗапрос.Сумма,
	               |	ВложенныйЗапрос.ДокументРСБУ,
	               |	ВложенныйЗапрос.ОбъектСтроительства КАК Объект,
	               |	ВложенныйЗапрос.СубконтоДт1 КАК Субконто1,
	               |	ВложенныйЗапрос.СчетКт,
	               |	ВложенныйЗапрос.СубконтоКт1 КАК КорСубконто1,
	               |	ВложенныйЗапрос.СубконтоДт2 КАК Субконто2,
	               |	ВложенныйЗапрос.СубконтоКт2 КАК КорСубконто2,
	               |	ВложенныйЗапрос.СчетРСБУ КАК СчетУчетаРСБУ,
	               |	ВложенныйЗапрос.СчетДт КАК СчетДт,
	               |	ВложенныйЗапрос.Номер
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВложенныйЗапрос.Сумма КАК Сумма,
	               |		ВложенныйЗапрос.ДокументРСБУ КАК ДокументРСБУ,
	               |		ВложенныйЗапрос.ОбъектСтроительства КАК ОбъектСтроительства,
	               |		ВложенныйЗапрос.СубконтоДт1 КАК СубконтоДт1,
	               |		ВложенныйЗапрос.СчетКт КАК СчетКт,
	               |		ВложенныйЗапрос.СубконтоКт1 КАК СубконтоКт1,
	               |		ВложенныйЗапрос.СубконтоДт2 КАК СубконтоДт2,
	               |		ВложенныйЗапрос.СубконтоКт2 КАК СубконтоКт2,
	               |		ВложенныйЗапрос.СчетРСБУ КАК СчетРСБУ,
	               |		ВложенныйЗапрос.СчетДт КАК СчетДт,
	               |		ВложенныйЗапрос.Номер КАК Номер
	               |	ИЗ
	               |		(ВЫБРАТЬ
	               |			ВЫБОР
	               |				КОГДА ХозрасчетныйДвиженияССубконто.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	               |						ИЛИ ХозрасчетныйДвиженияССубконто.Регистратор ССЫЛКА Документ.МодернизацияОС
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СчетКт
	               |				ИНАЧЕ ХозрасчетныйДвиженияССубконто.СчетДт
	               |			КОНЕЦ КАК СчетРСБУ,
	               |			ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК СубконтоДт1,
	               |			ХозрасчетныйДвиженияССубконто.СубконтоДт2 КАК СубконтоДт2,
	               |			ВЫБОР
	               |				КОГДА ХозрасчетныйДвиженияССубконто.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	               |						ИЛИ ХозрасчетныйДвиженияССубконто.Регистратор ССЫЛКА Документ.МодернизацияОС
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СчетДт
	               |				ИНАЧЕ ХозрасчетныйДвиженияССубконто.СчетКт
	               |			КОНЕЦ КАК СчетКт,
	               |			ХозрасчетныйДвиженияССубконто.Сумма КАК Сумма,
	               |			ХозрасчетныйДвиженияССубконто.Регистратор КАК ДокументРСБУ,
	               |			ВЫБОР
	               |				КОГДА ХозрасчетныйДвиженияССубконто.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	               |						ИЛИ ХозрасчетныйДвиженияССубконто.Регистратор ССЫЛКА Документ.МодернизацияОС
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2.Объект
	               |				ИНАЧЕ ВЫБОР
	               |						КОГДА ХозрасчетныйДвиженияССубконто.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств)
	               |							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |						ИНАЧЕ ХозрасчетныйДвиженияССубконто.СубконтоДт2.Объект
	               |					КОНЕЦ
	               |			КОНЕЦ КАК ОбъектСтроительства,
	               |			ВЫБОР
	               |				КОГДА ХозрасчетныйДвиженияССубконто.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	               |						ИЛИ ХозрасчетныйДвиженияССубконто.Регистратор ССЫЛКА Документ.МодернизацияОС
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
	               |				ИНАЧЕ ВЫБОР
	               |						КОГДА ХозрасчетныйДвиженияССубконто.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств)
	               |							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
	               |						ИНАЧЕ ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |					КОНЕЦ
	               |			КОНЕЦ КАК СубконтоКт1,
	               |			ВЫБОР
	               |				КОГДА ХозрасчетныйДвиженияССубконто.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	               |						ИЛИ ХозрасчетныйДвиженияССубконто.Регистратор ССЫЛКА Документ.МодернизацияОС
	               |					ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2.Объект
	               |				ИНАЧЕ ХозрасчетныйДвиженияССубконто.СубконтоДт1
	               |			КОНЕЦ КАК СубконтоКт2,
	               |			ХозрасчетныйДвиженияССубконто.СчетДт КАК СчетДт,
	               |			ХозрасчетныйДвиженияССубконто.НомерСтроки КАК Номер
	               |		ИЗ
	               |			РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	               |					,
	               |					,
	               |					Счет В (&СписокСчетов)
	               |						И Регистратор В (&СписокДокументов),
	               |					,
	               |					) КАК ХозрасчетныйДвиженияССубконто
	               |		ГДЕ
	               |			ХозрасчетныйДвиженияССубконто.Сумма <> 0) КАК ВложенныйЗапрос) КАК ВложенныйЗапрос
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			бит_му_КомплектацияОС.АналитикаРСБУ КАК АналитикаРСБУ,
	               |			бит_му_КомплектацияОС.ДокументРСБУ КАК ДокументРСБУ
	               |		ИЗ
	               |			РегистрНакопления.бит_му_КомплектацияОС КАК бит_му_КомплектацияОС
	               |		ГДЕ
	               |			бит_му_КомплектацияОС.ДокументРСБУ В(&СписокДокументов)
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			бит_му_КомплектацияОС.АналитикаРСБУ,
	               |			бит_му_КомплектацияОС.ДокументРСБУ) КАК Комплектация
	               |		ПО ВложенныйЗапрос.ДокументРСБУ = Комплектация.ДокументРСБУ
	               |			И ВложенныйЗапрос.ОбъектСтроительства = Комплектация.АналитикаРСБУ
	               |ГДЕ
	               |	Комплектация.АналитикаРСБУ ЕСТЬ NULL 
	               |	И Комплектация.ДокументРСБУ ЕСТЬ NULL ";
				   
	СписокСчетов = Новый СписокЗначений();
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке);
	//СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПриобретениеОбъектовОсновныхСредств);
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПриобретениеКомпонентовОсновныхСредств);  //ОК Довбешка Т. 17.04.2017 исправление ошибки после обновления релиза
	Запрос.УстановитьПараметр("СписокСчетов",СписокСчетов);	
	Запрос.УстановитьПараметр("СписокДокументов",МассивДокументовБУ);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#Область Инициализация

мКоличествоСубконтоМУ = 4;

#КонецОбласти    

#КонецЕсли
