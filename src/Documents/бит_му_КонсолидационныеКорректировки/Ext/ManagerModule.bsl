#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
    // Протокол заполнения.
    КомандаПечати = КомандыПечати.Добавить();
    КомандаПечати.Идентификатор	= "ПротоколЗаполнения";
    КомандаПечати.Представление	= НСтр("ru = 'Протокол заполнения'");
	КомандаПечати.Обработчик	= "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок		= 10;	
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПротоколЗаполнения") Тогда					
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПротоколЗаполнения", НСтр("ru = 'Протокол заполнения'"), 
			ПолучитьПротоколЗаполненияДокумента(МассивОбъектов),,"Документ.бит_му_КонсолидационныеКорректировки.МакетПротоколЗаполнения");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует табличный документ - протокол заполнения.
//
// Параметры:
//  СтруктураПротоколаЗаполнения - Структура.
//
// Возвращаемое значение:
//  Результат - ТабличныйДокумент.
//
Функция СформироватьПротоколЗаполненияДокумента(СтруктураПротоколаЗаполнения) Экспорт

	Макет = ПолучитьМакет("МакетПротоколЗаполнения");
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");	
	ДокументРезультат.Вывести(ОбластьЗаголовок);
	
	ОбластьШапки 			= Макет.ПолучитьОбласть("Шапка");
	ДокументРезультат.Вывести(ОбластьШапки);
	
	ОбластьСоставляющаяНРП 	= Макет.ПолучитьОбласть("СоставляющаяНРП");
	ОбластьОрганизация 		= Макет.ПолучитьОбласть("Организация");
	ОбластьСтрока 			= Макет.ПолучитьОбласть("Строка");
	
	ДокументРезультат.НачатьАвтогруппировкуСтрок();
	
	ЗначенияПеречисления = Метаданные.Перечисления.бит_му_СоставляющиеНРП.ЗначенияПеречисления;
	
	// Выводим группировку "СоставляющаяНРП"
	Для каждого ТекСоставляющая Из ЗначенияПеречисления Цикл
		
		СоставляющаяНРП = Перечисления.бит_му_СоставляющиеНРП[ТекСоставляющая.Имя];
		
		ТекСтрокаПротоколаПоСоставляющейНРП = СтруктураПротоколаЗаполнения.Найти(СоставляющаяНРП, "СоставляющаяНРП");
		
		// Вычислим сумму итого
		Если СоставляющаяНРП = Перечисления.бит_му_СоставляющиеНРП.Итого Тогда
			ОбластьСоставляющаяНРП.Параметры.СуммаОборот 		= СтруктураПротоколаЗаполнения.Итог("СуммаОборот");
			ОбластьСоставляющаяНРП.Параметры.СуммаРезультат 	= СтруктураПротоколаЗаполнения.Итог("СуммаРезультат");
		// Вычислим итог по группировке
		ИначеЕсли (ТекСтрокаПротоколаПоСоставляющейНРП <> Неопределено) И (ТекСтрокаПротоколаПоСоставляющейНРП.ПодчиненныеДанные <> Неопределено) Тогда
			ТекСтрокаПротоколаПоСоставляющейНРП.СуммаОборот 	= ТекСтрокаПротоколаПоСоставляющейНРП.ПодчиненныеДанные.Итог("СуммаОборот");
			ТекСтрокаПротоколаПоСоставляющейНРП.СуммаРезультат 	= ТекСтрокаПротоколаПоСоставляющейНРП.ПодчиненныеДанные.Итог("СуммаРезультат");
			ОбластьСоставляющаяНРП.Параметры.Заполнить(ТекСтрокаПротоколаПоСоставляющейНРП);
		Иначе
			ОбластьСоставляющаяНРП.Параметры.СуммаОборот  	 = 0;
			ОбластьСоставляющаяНРП.Параметры.СуммаРезультат  = 0;
		КонецЕсли;			
		
		ОбластьСоставляющаяНРП.Параметры.СоставляющаяНРП = СоставляющаяНРП;
		ДокументРезультат.Вывести(ОбластьСоставляющаяНРП, 1);
		
		Если (ТекСтрокаПротоколаПоСоставляющейНРП <> Неопределено) И (ТекСтрокаПротоколаПоСоставляющейНРП.ПодчиненныеДанные <> Неопределено) Тогда
			
			// Выводим группировку "Организация"
			Для каждого ТекОрганизация Из ТекСтрокаПротоколаПоСоставляющейНРП.ПодчиненныеДанные Цикл
				
				ОбластьОрганизация.Параметры.Заполнить(ТекОрганизация);
				ДокументРезультат.Вывести(ОбластьОрганизация, 2);
				
				ТекСтрокаПротоколаПоПериодам = ТекОрганизация.ПодчиненныеДанные;
				Если ТекСтрокаПротоколаПоПериодам <> Неопределено Тогда
					
					// Выводим группировку "ПоПериодам"
					Для каждого ТекСтр Из ТекСтрокаПротоколаПоПериодам Цикл
						
						ОбластьСтрока.Параметры.Заполнить(ТекСтр);
						ДокументРезультат.Вывести(ОбластьСтрока, 3);
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ДокументРезультат.ЗакончитьАвтогруппировкуСтрок();
	
	Возврат ДокументРезультат;
	
КонецФункции // СформироватьПротоколЗаполненияДокумента()

// Функция возвращает табличный документ протокола заполнения документа.
//
// Параметры:
//  МассивСсылок - Массив. Массив ссылок которые нужно распечатать.
//
// Возвращаемое значение:
//  Результат - ТабличныйДокумент.
//
Функция ПолучитьПротоколЗаполненияДокумента(МассивСсылок)

	Если МассивСсылок.Количество() = 0 Тогда
		Результат = Новый ТабличныйДокумент;
	Иначе
		Документ  = МассивСсылок[0];
		Результат = Документ.ПротоколЗаполнения.Получить();
		
		Если Результат = Неопределено Тогда
			Результат = Новый ТабличныйДокумент;
		КонецЕсли;			
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // СформироватьПротоколЗаполненияДокумента()

#КонецОбласти

#КонецЕсли
