#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки	 - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Функция подготавливает параметры проведения.
// 
// Параметры:
//  ДокументСсылка - ДокументСсылка.бит_НазначениеСоответствияАналитик - ссылка на документ.
//  Отказ          - Булево - признак обнаружения ошибки и отказа от дальнейших действий.
//
// Возвращаемое значение:
//  Структура - структура параметров проведения.
//
Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура(); 
	НомераТаблиц        = Новый Структура(); 
	
	Если НЕ бит_ОбщегоНазначения.ВалютаУпрУчетаУстановлена(Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;

	ТекстЗапроса = ТекстЗапросаТаблицаДокумента(НомераТаблиц)
				 + ТекстЗапросаРеквизиты(НомераТаблиц)
				 + ТекстЗапросаСоответствияАналитик(НомераТаблиц);
				 
	Запрос = Новый Запрос(); 
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла; 	

	Возврат ПараметрыПроведения;
	
КонецФункции 

// Процедура проверяет уникальность записей.
// 
// Параметры:
//  ТаблицаДокумента - ТаблицаЗначений - таблица документов.
//  ТаблицаРеквизиты - ТаблицаЗначений - таблица реквизитов.
//  Отказ            - Булево - признак обнаружения ошибки и отказа от дальнейших действий.
//
Процедура ПроверитьУникальностьЗаписей(ТаблицаДокумента, ТаблицаРеквизиты, Отказ) Экспорт
	
	Если ТаблицаРеквизиты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 	
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаДокумента", ТаблицаДокумента);
	Запрос.УстановитьПараметр("ВидСоответствия",  Реквизиты.ВидСоответствия);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таблица.ВидСоответствия,
	|	Таблица.ВидСоответствияСоотношение,
	|	Таблица.ЛеваяАналитика_1,
	|	Таблица.ЛеваяАналитика_2,
	|	Таблица.ЛеваяАналитика_3,
	|	Таблица.ПраваяАналитика_1,
	|	Таблица.ПраваяАналитика_2,
	|	Таблица.ПраваяАналитика_3
	|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
	|ИЗ
	|	&ТаблицаДокумента КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРегистра.ВидСоответствия,
	|	ТаблицаРегистра.ЛеваяАналитика_1,
	|	ТаблицаРегистра.ЛеваяАналитика_2,
	|	ТаблицаРегистра.ЛеваяАналитика_3,
	|	ТаблицаРегистра.ПраваяАналитика_1,
	|	ТаблицаРегистра.ПраваяАналитика_2,
	|	ТаблицаРегистра.ПраваяАналитика_3
	|ПОМЕСТИТЬ ВТ_ТаблицаРегистра
	|ИЗ
	|	РегистрСведений.бит_СоответствияАналитик КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.ВидСоответствия = &ВидСоответствия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК Поле1
	|ПОМЕСТИТЬ ВТ_РезультатПроверки
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаРегистра КАК ВТ_ТаблицаРегистра
	|		ПО ВТ_ТаблицаДокумента.ВидСоответствия = ВТ_ТаблицаРегистра.ВидСоответствия
	|			И ВТ_ТаблицаДокумента.ЛеваяАналитика_1 = ВТ_ТаблицаРегистра.ЛеваяАналитика_1
	|			И ВТ_ТаблицаДокумента.ЛеваяАналитика_2 = ВТ_ТаблицаРегистра.ЛеваяАналитика_2
	|			И ВТ_ТаблицаДокумента.ЛеваяАналитика_3 = ВТ_ТаблицаРегистра.ЛеваяАналитика_3
	|ГДЕ
	|	ВТ_ТаблицаДокумента.ВидСоответствияСоотношение = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСоотношенийАналитик.МногиеКОдному)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаРегистра КАК ВТ_ТаблицаРегистра
	|		ПО ВТ_ТаблицаДокумента.ВидСоответствия = ВТ_ТаблицаРегистра.ВидСоответствия
	|			И ВТ_ТаблицаДокумента.ПраваяАналитика_1 = ВТ_ТаблицаРегистра.ПраваяАналитика_1
	|			И ВТ_ТаблицаДокумента.ПраваяАналитика_2 = ВТ_ТаблицаРегистра.ПраваяАналитика_2
	|			И ВТ_ТаблицаДокумента.ПраваяАналитика_3 = ВТ_ТаблицаРегистра.ПраваяАналитика_3
	|ГДЕ
	|	ВТ_ТаблицаДокумента.ВидСоответствияСоотношение = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСоотношенийАналитик.ОдинКоМногим)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаРегистра КАК ВТ_ТаблицаРегистра
	|		ПО ВТ_ТаблицаДокумента.ВидСоответствия = ВТ_ТаблицаРегистра.ВидСоответствия
	|				  И (ВТ_ТаблицаДокумента.ЛеваяАналитика_1 = ВТ_ТаблицаРегистра.ЛеваяАналитика_1
	|					И ВТ_ТаблицаДокумента.ЛеваяАналитика_2 = ВТ_ТаблицаРегистра.ЛеваяАналитика_2
	|					И ВТ_ТаблицаДокумента.ЛеваяАналитика_3 = ВТ_ТаблицаРегистра.ЛеваяАналитика_3)
	|				ИЛИ (ВТ_ТаблицаДокумента.ПраваяАналитика_1 = ВТ_ТаблицаРегистра.ПраваяАналитика_1
	|					И ВТ_ТаблицаДокумента.ПраваяАналитика_2 = ВТ_ТаблицаРегистра.ПраваяАналитика_2
	|					И ВТ_ТаблицаДокумента.ПраваяАналитика_3 = ВТ_ТаблицаРегистра.ПраваяАналитика_3)
	|ГДЕ
	|	ВТ_ТаблицаДокумента.ВидСоответствияСоотношение = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСоотношенийАналитик.ОдинКОдному)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
	|ГДЕ
	|	ВТ_ТаблицаДокумента.ВидСоответствияСоотношение = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСоотношенийАналитик.МногиеКоМногим)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РезультатПроверки.Поле1
	|ИЗ
	|	ВТ_РезультатПроверки КАК ВТ_РезультатПроверки
	|ГДЕ
	|	ВТ_РезультатПроверки.Поле1 = 1";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		ТекстСообщения = НСтр("en = 'Record does not correspond to relation kind ""%1%"".'; ru = 'Запись не соответствует соотношению ""%1%"".'"); 
		ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, Реквизиты.ВидСоответствияСоотношение);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, , , Отказ);
		
	КонецЕсли; 				

КонецПроцедуры

// Процедура формирует движения по регистру сведений бит_СоответствияАналитик.
// 
// Параметры:
//  ТаблицаДокумента - ТаблицаЗначений - таблица документа.
//  Движения         - КоллекцияДвижений - движения документа.
//  Отказ            - Булево - признак ошибки и отказа.
//
Процедура СформироватьДвиженияСоответствиеАналитик(ТаблицаДокумента, Движения, Отказ) Экспорт
	
	Если ТаблицаДокумента.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из ТаблицаДокумента Цикл
	
		Движение = Движения.бит_СоответствияАналитик.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, СтрокаТаблицы);
		
	КонецЦикла;
	
	Движения.бит_СоответствияАналитик.Записывать = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаТаблицаДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВТ_ТаблицаДокумента", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.ВидСоответствия,
	|	Реквизиты.ЛеваяАналитика_1,
	|	Реквизиты.ЛеваяАналитика_2,
	|	Реквизиты.ЛеваяАналитика_3,
	|	Реквизиты.ПраваяАналитика_1,
	|	Реквизиты.ПраваяАналитика_2,
	|	Реквизиты.ПраваяАналитика_3,
	|	Реквизиты.ВидСоответствия.Соотношение КАК ВидСоответствияСоотношение
	|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
	|ИЗ
	|	Документ.бит_НазначениеСоответствияАналитик КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + бит_ОбщегоНазначения.ТекстРазделителяЗапросовПакета();
	
КонецФункции // ТекстЗапросаТаблицаДокумента()

Функция ТекстЗапросаРеквизиты(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Регистратор КАК Регистратор,
	|	Реквизиты.ВидСоответствия КАК ВидСоответствия,
	|	Реквизиты.ВидСоответствияСоотношение КАК ВидСоответствияСоотношение
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК Реквизиты";
	
	Возврат ТекстЗапроса + бит_ОбщегоНазначения.ТекстРазделителяЗапросовПакета();
	
КонецФункции // ТекстЗапросаРеквизиты()

Функция ТекстЗапросаСоответствияАналитик(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаСоответствияАналитик", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Период КАК Период,
	|	Таблица.Регистратор КАК Регистратор,
	|	Таблица.ВидСоответствия,
	|	Таблица.ВидСоответствияСоотношение,
	|	Таблица.ЛеваяАналитика_1,
	|	Таблица.ЛеваяАналитика_2,
	|	Таблица.ЛеваяАналитика_3,
	|	Таблица.ПраваяАналитика_1,
	|	Таблица.ПраваяАналитика_2,
	|	Таблица.ПраваяАналитика_3
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК Таблица";
	
	Возврат ТекстЗапроса + бит_ОбщегоНазначения.ТекстРазделителяЗапросовПакета();

КонецФункции // ТекстЗапросаСоответствияАналитик()

#КонецОбласти
 
#КонецЕсли
