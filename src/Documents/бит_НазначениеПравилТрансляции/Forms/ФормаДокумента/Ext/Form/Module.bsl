
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
    
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		УстановитьСостояниеДокумента();
	КонецЕсли; 
	
	ЗаполнитьКэшЗначений(фКэшЗначений);
	
	// Зададим имена реквизитов, подлежащих кешированию.
	фКэшРеквизитов = Новый Структура;
	фКэшРеквизитов.Вставить("Дата");
	
	// Запомним текущие значения реквизитов формы.
	ЗаполнитьКэшРеквизитовФормы();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	УстановитьЗаголовокФормыДокумента();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	УстановитьЗаголовокФормыДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
		
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "Проведениебит_НазначениеПравилТрансляции";
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если СтрСравнить(ИмяСобытия, "Выбор периода")=0 Тогда
		ДатаНачалаДоИзменения    = Объект.ДатаНачала;
		ДатаОкончанияДоИзменения = Объект.ДатаОкончания;
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	фКэшРеквизитов.Дата = Объект.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	ИзменениеДатыДействия();
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	ИзменениеДатыДействия();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПравилаТрансляции

&НаКлиенте
Процедура ПравилаТрансляцииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ПравилаТрансляцииРеквизитКартинкаВыбораПриода Тогда
		ТекущиеДанные = Элементы.ПравилаТрансляции.ТекущиеДанные;
		бит_РаботаСДиалогамиКлиент.ОткрытьДиалогСтандартногоПериодаПоДатам(ТекущиеДанные, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаТрансляцииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элементы.ПравилаТрансляции.ТекущиеДанные;
		ТекущиеДанные.ДатаНачала	= Объект.ДатаНачала;
		ТекущиеДанные.ДатаОкончания = Объект.ДатаОкончания;  
		ТекущиеДанные.Назначение    = ПредопределенноеЗначение("Перечисление.бит_НазначенияПравилТрансляции.Трансляция");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаТрансляцииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.бит_ПравилаТрансляции") Тогда
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ПравилоТрансляции", ВыбранноеЗначение);
		
		МассивСтрок = Объект.ПравилаТрансляции.НайтиСтроки(СтруктураОтбора);
		
		Если МассивСтрок.Количество() = 0 Тогда
			НайденнаяСтрока = Неопределено;
		Иначе
			НайденнаяСтрока = МассивСтрок[0];
		КонецЕсли;
		
		Если НайденнаяСтрока = Неопределено Тогда
			НоваяСтрока = Объект.ПравилаТрансляции.Добавить();
			НоваяСтрока.ПравилоТрансляции = ВыбранноеЗначение;
			НоваяСтрока.ДатаНачала        = Объект.ДатаНачала;
			НоваяСтрока.ДатаОкончания     = Объект.ДатаОкончания;
			НоваяСтрока.Назначение        = ПредопределенноеЗначение("Перечисление.бит_НазначенияПравилТрансляции.Трансляция");
		Иначе
			ТекстСообщения = НСтр("ru='Правило ""%1%"" уже подобрано в строку № %2% табличной части ""Правила трансляции"".'");
			ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения,ВыбранноеЗначение,НайденнаяСтрока.НомерСтроки);
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемыОбработчикиКоманд

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
Процедура ЗаполнитьПериоды(Команда)
	ЗаполнитьПериодыСервер();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПериода(Команда)
	
	бит_РаботаСДиалогамиКлиент.ОткрытьДиалогСтандартногоПериодаПоДатам(Объект, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	
	ОткрытьФорму("Справочник.бит_ПравилаТрансляции.ФормаВыбора",ПараметрыФормы,Элементы.ПравилаТрансляции);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = бит_ОбщегоНазначения.СостояниеДокумента(Объект);
	
КонецПроцедуры

// Формирует кэш значений реквизитов формы.
// 
&НаСервере
Процедура ЗаполнитьКэшРеквизитовФормы()
	
	Для Каждого КэшРеквизита Из фКэшРеквизитов Цикл
		
		фКэшРеквизитов[КэшРеквизита.Ключ] = Объект[КэшРеквизита.Ключ];
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует кэш значений необходимый для работы на клиенте.
// 
// Параметры:
// 	КэшированныеЗначения - Произвольный - преобразуется в структуру значений.
// 
&НаСервере
Процедура ЗаполнитьКэшЗначений(КэшированныеЗначения)
	
	ДатаНачалаДоИзменения    = Объект.ДатаНачала;
	ДатаОкончанияДоИзменения = Объект.ДатаОкончания;
	
	КэшированныеЗначения = Новый Структура;
	
	// Запишем параметр для формирования заголовка.
	КэшированныеЗначения.Вставить("ПредставлениеОбъекта", Объект.Ссылка.Метаданные().ПредставлениеОбъекта);
	
	КэшПеречисления = Новый Структура;
	
	КэшированныеЗначения.Вставить("Перечисления", КэшПеречисления);
	
КонецПроцедуры

// Процедура устнавливает заголовок формы документа.
// 
// Параметры:
//  Нет.
// 
&НаКлиенте 
Процедура УстановитьЗаголовокФормыДокумента()
	
	СтруктураЗаголовка = Новый Структура;
	СтруктураЗаголовка.Вставить("ПредставлениеОбъекта", фКэшЗначений.ПредставлениеОбъекта);
	СтруктураЗаголовка.Вставить("СтрокаВидаОперации"  , "");
	СтруктураЗаголовка.Вставить("ЭтоНовый"			  , Параметры.Ключ.Пустая());
	СтруктураЗаголовка.Вставить("ДокументПроведен"	  , Объект.Проведен);
	
	бит_РаботаСДиалогамиКлиент.УстановитьЗаголовокФормыДокумента(ЭтаФорма,СтруктураЗаголовка);
	
КонецПроцедуры // УстановитьЗаголовокФормыДокумента()

&НаСервере
Процедура ЗаполнитьПериодыСервер()

	Таблица = Объект.ПравилаТрансляции.Выгрузить();
	Таблица.ЗаполнитьЗначения(Объект.ДатаНачала,    "ДатаНачала");
	Таблица.ЗаполнитьЗначения(Объект.ДатаОкончания, "ДатаОкончания");
	Объект.ПравилаТрансляции.Загрузить(Таблица);

КонецПроцедуры

&НаКлиенте
Процедура ИзменениеДатыДействия()

	Если Объект.ДатаОкончания <> Дата(1,1,1) И Объект.ДатаНачала > Объект.ДатаОкончания Тогда
		Объект.ДатаНачала    = ДатаНачалаДоИзменения;
		Объект.ДатаОкончания = ДатаОкончанияДоИзменения;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Дата начала не может быть больше даты окончания.'"), Объект.Ссылка);
	Иначе
		ДатаНачалаДоИзменения    = Объект.ДатаНачала;
		ДатаОкончанияДоИзменения = Объект.ДатаОкончания;
	КонецЕсли; 
КонецПроцедуры // ИзменениеДатыДействия()

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры
	
#КонецОбласти
