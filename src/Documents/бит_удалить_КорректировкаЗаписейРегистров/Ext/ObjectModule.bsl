#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем мВалютаРеглУчета Экспорт; // Хранит валюту регламентированного учета.

Перем мВалютаУпрУчета Экспорт; // Хранит валюту управленческого учета.

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьШапкуДокумента(ОбъектКопирования=Неопределено)
	
	// Заполним шапку документа значениями по умолчанию.
	бит_ОбщегоНазначения.ЗаполнитьШапкуДокумента(ЭтотОбъект, бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь"), ОбъектКопирования);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
		
 
	
	ЭтоНовыйДокумент = Ссылка.Пустая();

	Если ЭтоНовыйДокумент Тогда
		РанееУстановленнаяПометкаУдаления = Ложь;

	Иначе

		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("СсылкаНаОперацию", Ссылка); 
		Запрос.Текст ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
		              |	0 
		              |ИЗ
		              |	Документ.бит_удалить_КорректировкаЗаписейРегистров КАК Операция
		              |ГДЕ
		              |	Операция.Ссылка = &СсылкаНаОперацию
		              |	И Операция.ПометкаУдаления = ЛОЖЬ";
		Результат = Запрос.Выполнить();

		РанееУстановленнаяПометкаУдаления = Результат.Пустой();

	КонецЕсли;

	Если ПометкаУдаления <> РанееУстановленнаяПометкаУдаления Тогда

		Для каждого ПроводкиДокумента из Движения Цикл

			Если (НЕ ПроводкиДокумента.Модифицированность()) И (НЕ ПроводкиДокумента.Выбран()) И
			     (НЕ ЭтоНовыйДокумент) Тогда

				ПроводкиДокумента.Прочитать();

			КонецЕсли;

			КоличествоПроводок = ПроводкиДокумента.Количество();

			Если КоличествоПроводок > 0 Тогда

				// Определяем текущую активность проводок по первой проводке.
				ТекущаяАктивностьПроводок = ПроводкиДокумента[0].Активность;
				НужнаяАктивностьПроводок  = НЕ ПометкаУдаления;

				Если ТекущаяАктивностьПроводок <> НужнаяАктивностьПроводок Тогда
					ПроводкиДокумента.УстановитьАктивность(НужнаяАктивностьПроводок);
				КонецЕсли;

			КонецЕсли;

		КонецЦикла;
    
	КонецЕсли;
	
	
КонецПроцедуры // ПередЗаписью()
	
Процедура ПриЗаписи(Отказ)
		
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
		
	
		
КонецПроцедуры // ПриЗаписи()

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнитьШапкуДокумента();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЗаполнитьШапкуДокумента(ОбъектКопирования);
	
КонецПроцедуры

#КонецОбласти

#Область ОператорыОсновнойПрограммы

мВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
мВалютаУпрУчета  = Константы.бит_ВалютаУправленческогоУчета.Получить();

#КонецОбласти

#КонецЕсли
