
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
    
	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Заполняем кэш значений.
	ЗаполнитьКэшЗначений(фКэшЗначений);
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.НадписьОрганизации.Заголовок = ПолучитьПринадлежностьОрганизациям();
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	УстановитьЗаголовокФормыДокумента();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВыбранКомплект" Тогда
		
		НовСтрока = Объект.КомплектыДвижений.Добавить();
		
		НовСтрока.ВидДокумента 	= Параметр.ВидДокумента;
		НовСтрока.Комплект 		= Параметр.Комплект;
		НовСтрока.ДатаНачала	= Объект.ДатаНачала;
		НовСтрока.ДатаОкончания	= Объект.ДатаОкончания;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	УстановитьЗаголовокФормыДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
		
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "Проведениебит_УстановкаАктивныхКомплектовДвижений";
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Элементы.НадписьОрганизации.Заголовок = ПолучитьПринадлежностьОрганизациям();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКомплектыДвижений

&НаКлиенте
Процедура КомплектыДвиженийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		ТекущаяСтрока = Элементы.КомплектыДвижений.ТекущиеДанные;
		
		ТекущаяСтрока.ДатаНачала 	= Объект.ДатаНачала;
		ТекущаяСтрока.ДатаОкончания = Объект.ДатаОкончания;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомплектыДвиженийВидДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УсловияОтбора = Новый Структура;
	УсловияОтбора.Вставить("ВидОбъекта", фКэшЗначений.Перечисления.бит_ВидыОбъектовСистемы.Документ);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", УсловияОтбора);
	ОткрытьФорму("Справочник.бит_ОбъектыСистемы.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КомплектыДвиженийКомплектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = Элементы.КомплектыДвижений.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УсловияОтбора = Новый Структура;
	УсловияОтбора.Вставить("ВидДокумента", ТекущаяСтрока.ВидДокумента);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", УсловияОтбора);
	ОткрытьФорму("Справочник.бит_КомплектыДвижений.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемыОбработчикиКоманд

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
Процедура Подбор(Команда)
	
	ФормаПодбора = ПолучитьФорму("ОбщаяФорма.бит_ФормаПодбораВидовДокументовУправляемая",, ЭтаФорма);
	ФормаПодбора.Открыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбщиеСлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьКэшЗначений(КэшированныеЗначения)
	
	фКэшЗначений = Новый Структура;
		
	// Перечисления.
	бит_ВидыОбъектовСистемы	= бит_ОбщегоНазначения.КэшироватьЗначенияПеречисления(Перечисления.бит_ВидыОбъектовСистемы);
	
	КэшПеречислений = Новый Структура;
	КэшПеречислений.Вставить("бит_ВидыОбъектовСистемы"	, бит_ВидыОбъектовСистемы);
	
	фКэшЗначений.Вставить("Перечисления"				, КэшПеречислений);
	// Запишем параметр для формирования заголовка.
	фКэшЗначений.Вставить("ПредставлениеОбъекта", Объект.Ссылка.Метаданные().ПредставлениеОбъекта);
		
КонецПроцедуры // ЗаполнитьКэшЗначений()

&НаКлиенте 
Процедура УстановитьЗаголовокФормыДокумента()
	
	СтруктураЗаголовка = Новый Структура;
	СтруктураЗаголовка.Вставить("ПредставлениеОбъекта", фКэшЗначений.ПредставлениеОбъекта);
	СтруктураЗаголовка.Вставить("СтрокаВидаОперации"  , Строка(""));
	СтруктураЗаголовка.Вставить("ЭтоНовый"			  , Параметры.Ключ.Пустая());
	СтруктураЗаголовка.Вставить("ДокументПроведен"	  , Объект.Проведен);
	
	бит_РаботаСДиалогамиКлиент.УстановитьЗаголовокФормыДокумента(ЭтаФорма
																,СтруктураЗаголовка);
	
КонецПроцедуры // УстановитьЗаголовокФормыДокумента()

#КонецОбласти

#Область ПроцедурыИФункцииДляУправленияВнешнимВидомФормы

// Функция проверяет принадлежность к организации.
// 
// Параметры:
//  Нет.
// 
// Возвращаемое значение:
//  СтрокаПринадлежность - Строка.
// 
&НаКлиенте
Функция ПолучитьПринадлежностьОрганизациям()
	
	Если не ЗначениеЗаполнено(Объект.Организация) Тогда
		Возврат "для всех организаций";
	КонецЕсли;
	
	Возврат Строка(Объект.Организация);
	
КонецФункции

#КонецОбласти

#КонецОбласти
