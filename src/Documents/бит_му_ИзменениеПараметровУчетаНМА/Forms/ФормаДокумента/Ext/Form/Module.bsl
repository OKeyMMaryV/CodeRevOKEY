
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьКэшЗначений(фКэшЗначений);
	
	// Зададим имена реквизитов, подлежащих кешированию.
	фКэшРеквизитов = Новый Структура;
	фКэшРеквизитов.Вставить("Дата");
	фКэшРеквизитов.Вставить("Организация");
	
	// Запомним текущие значения реквизитов формы.
	ЗаполнитьКэшРеквизитовФормы();
	
	// Заполним валюту МСФО.
	ЗаполнитьВалютуМСФО();
	
	Если Параметры.Ключ.Пустая() Тогда
		УстановитьСостояниеДокумента();
	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	УстановитьЗаголовокФормыДокумента();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	УстановитьЗаголовокФормыДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
		
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "Проведениебит_му_ИзменениеПараметровУчетаНМА";
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УстановитьСостояниеДокумента();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	фКэшРеквизитов.Дата = Объект.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Объект.Организация <> фКэшРеквизитов.Организация 
		И Объект.НематериальныеАктивы.Количество() > 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("ОбработатьИзменениеОрганизации", ЭтотОбъект);
		ТекстВопроса = НСтр("ru='Табличная часть будет очищена. Продолжить?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 5, КодВозвратаДиалога.Нет);
		
	Иначе
		
		фКэшРеквизитов.Организация = Объект.Организация;
	
		// Установим валюту межд. учета
		ЗаполнитьВалютуМСФО();

	КонецЕсли; 
	
КонецПроцедуры

// Процедура-обработчик оповещения вопроса из процедуры ОрганизацияПриИзменении.
// 
&НаКлиенте
Процедура ОбработатьИзменениеОрганизации(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Объект.Организация = фКэшРеквизитов.Организация;
		Возврат;
	КонецЕсли;
	
	Объект.НематериальныеАктивы.Очистить();
	
	фКэшРеквизитов.Организация = Объект.Организация;
	
	// Установим валюту межд. учета
	ЗаполнитьВалютуМСФО();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНематериальныеАктивы

&НаКлиенте
Процедура НематериальныеАктивыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ТекстСообщения = НСтр("ru='Не заполнена Организация. Добавление новых строк невозможно!'");
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,,Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НематериальныеАктивыНематериальныйАктивПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НематериальныеАктивы.ТекущиеДанные;
	
	ПриИзмененииНМА(ТекущиеДанные.ПолучитьИдентификатор());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемыОбработчикиКоманд

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если Объект.НематериальныеАктивы.Количество() > 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("КомандаЗаполнитьЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru='Параметры в табличной части будут перезаполнены. Продолжить?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 5, КодВозвратаДиалога.Нет);
		
	КонецЕсли; 
	
	// ЗаполнитьНМАСервер();
	
КонецПроцедуры

// Процедура-обработчик оповещения вопроса из процедуры Заполнить.
// 
&НаКлиенте
Процедура КомандаЗаполнитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;

	ЗаполнитьНМАСервер();

КонецПроцедуры // ИзменениеВалютыЗавершение()

&НаКлиенте
Процедура ЗаполнитьПоТекущейСтроке(Команда)
	
	ТекущиеДанные = Элементы.НематериальныеАктивы.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
	
		 ПриИзмененииНМА(ТекущиеДанные.ПолучитьИдентификатор());
	
	 КонецЕсли;
	 
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = бит_ОбщегоНазначения.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКэшРеквизитовФормы()
	
	Для Каждого КэшРеквизита Из фКэшРеквизитов Цикл
		
		фКэшРеквизитов[КэшРеквизита.Ключ] = Объект[КэшРеквизита.Ключ];
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКэшЗначений(КэшированныеЗначения)
	
	КэшированныеЗначения = Новый Структура;
	
	// Запишем параметр для формирования заголовка.
	КэшированныеЗначения.Вставить("ПредставлениеОбъекта", Объект.Ссылка.Метаданные().ПредставлениеОбъекта);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВалютуМСФО()
	
	// Получим валюту международного учета.
	ВалютаМСФО 	 = бит_му_ОбщегоНазначения.ПолучитьВалютуМеждународногоУчета(Объект.Организация);
	СтрокаВалютаМежУчета = Строка(ВалютаМСФО);
	
	Элементы.ДекорацияВалютаМСФО.Заголовок = ?(ПустаяСтрока(СтрокаВалютаМежУчета), "НЕ УСТАНОВЛЕНА", СтрокаВалютаМежУчета);
	
КонецПроцедуры // ЗаполнитьВалютуМСФО()

&НаСервере
Процедура ПриИзмененииНМА(ИДСтроки)
	
	ТекущаяСтрока = Объект.НематериальныеАктивы.НайтиПоИдентификатору(ИДСтроки);
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыНМА = ПолучитьПараметрыНМА(ТекущаяСтрока.НематериальныйАктив);
	ЗаполнитьСтрокуТЧПоДанным(ТекущаяСтрока,ПараметрыНМА);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыНМА(НМА)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация"        ,Объект.Организация);
	СтруктураПараметров.Вставить("НематериальныйАктив",НМА);
	СтруктураПараметров.Вставить("МоментВремени"      ,?(Параметры.Ключ.Пустая(),КонецДня(Объект.Дата),Объект.Ссылка.МоментВремени()));
	
	ПараметрыВНА = Новый Массив;
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СрокПолезногоИспользования_НМА);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.НачислятьАмортизацию_НМА);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.МетодНачисленияАмортизации_НМА);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.ПредполагаемыйОбъемПродукции_НМА);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.ПредполагаемыйОбъемПродукции_НМА);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СпособОтраженияРасходовПоАмортизации_НМА);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.ЕдиницаИзмеренияОбъемаПродукции_НМА);
	
	
	СтруктураПараметров.Вставить("ПараметрыВНА",ПараметрыВНА);
	
	РезЗначения = бит_му_ВНА.ПолучитьТаблицуПараметровВНА(СтруктураПараметров,"Соответствие");
	
	Возврат РезЗначения;
	
КонецФункции // ПолучитьПараметрыОС()

&НаСервере
Процедура ЗаполнитьСтрокуТЧПоДанным(ТекущаяСтрока,РезЗначения)
	
	Если РезЗначения <> Неопределено И ТекущаяСтрока <> Неопределено Тогда
		
		ПараметрыНМА = РезЗначения[ТекущаяСтрока.НематериальныйАктив];
		
		Если ПараметрыНМА <> Неопределено Тогда
			
			Для Каждого КиЗ Из ПараметрыНМА Цикл
				
				ТекущееЗначение = КиЗ.Значение;
				Параметр       = КиЗ.Ключ;
				ИмяПараметра       = ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.ПолучитьИмяПредопределенного(Параметр); 
				ИмяРеквизита       = СтрЗаменить(ИмяПараметра,"_НМА","");
				ИмяРеквизитаСтарый = ИмяРеквизита+"_Старый";
				
				ТекущаяСтрока[ИмяРеквизита]       = ТекущееЗначение;
				ТекущаяСтрока[ИмяРеквизитаСтарый] = ТекущееЗначение;
				
			КонецЦикла; // По параметрам НМА	
			
		КонецЕсли; // Есть параметры
		
	КонецЕсли; 

КонецПроцедуры // ЗаполнитьСтрокуТЧПоСтрокеДанных()

&НаСервере
Процедура ЗаполнитьНМАСервер()
	
	МассивНМА    = Объект.НематериальныеАктивы.Выгрузить(,"НематериальныйАктив").ВыгрузитьКолонку("НематериальныйАктив");
	ПараметрыНМА = ПолучитьПараметрыНМА(МассивНМА);	
	
	Для Каждого ТекущаяСтрока Из Объект.НематериальныеАктивы Цикл
		
		ЗаполнитьСтрокуТЧПоДанным(ТекущаяСтрока,ПараметрыНМА);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте 
Процедура УстановитьЗаголовокФормыДокумента()
	
	СтруктураЗаголовка = Новый Структура;
	СтруктураЗаголовка.Вставить("ПредставлениеОбъекта", фКэшЗначений.ПредставлениеОбъекта);
	СтруктураЗаголовка.Вставить("СтрокаВидаОперации"  , "");
	СтруктураЗаголовка.Вставить("ЭтоНовый"			  , Параметры.Ключ.Пустая());
	СтруктураЗаголовка.Вставить("ДокументПроведен"	  , Объект.Проведен);
	
	бит_РаботаСДиалогамиКлиент.УстановитьЗаголовокФормыДокумента(ЭтаФорма,СтруктураЗаголовка);
	
КонецПроцедуры // УстановитьЗаголовокФормыДокумента()


#КонецОбласти
