#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ПолучитьДвиженияПоДокументу(ДокументОснование) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	бит_Дополнительный_2ДвиженияССубконто.Период,
	|	бит_Дополнительный_2ДвиженияССубконто.Регистратор,
	|	бит_Дополнительный_2ДвиженияССубконто.НомерСтроки,
	|	бит_Дополнительный_2ДвиженияССубконто.Активность,
	|	бит_Дополнительный_2ДвиженияССубконто.СчетДт,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоДт1,
	|	бит_Дополнительный_2ДвиженияССубконто.ВидСубконтоДт1,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоДт2,
	|	бит_Дополнительный_2ДвиженияССубконто.ВидСубконтоДт2,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоДт3,
	|	бит_Дополнительный_2ДвиженияССубконто.ВидСубконтоДт3,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоДт4,
	|	бит_Дополнительный_2ДвиженияССубконто.ВидСубконтоДт4,
	|	бит_Дополнительный_2ДвиженияССубконто.СчетКт,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоКт1,
	|	бит_Дополнительный_2ДвиженияССубконто.ВидСубконтоКт1,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоКт2,
	|	бит_Дополнительный_2ДвиженияССубконто.ВидСубконтоКт2,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоКт3,
	|	бит_Дополнительный_2ДвиженияССубконто.ВидСубконтоКт3,
	|	бит_Дополнительный_2ДвиженияССубконто.СубконтоКт4,
	|	бит_Дополнительный_2ДвиженияССубконто.ВидСубконтоКт4,
	|	бит_Дополнительный_2ДвиженияССубконто.Организация,
	|	бит_Дополнительный_2ДвиженияССубконто.ВалютаДт,
	|	бит_Дополнительный_2ДвиженияССубконто.ВалютаКт,
	|	бит_Дополнительный_2ДвиженияССубконто.ВидДвиженияМСФО,
	|	-бит_Дополнительный_2ДвиженияССубконто.ВалютнаяСуммаДт КАК ВалютнаяСуммаДт,
	|	-бит_Дополнительный_2ДвиженияССубконто.ВалютнаяСуммаКт КАК ВалютнаяСуммаКт,
	|	бит_Дополнительный_2ДвиженияССубконто.КоличествоДт,
	|	бит_Дополнительный_2ДвиженияССубконто.КоличествоКт,
	|	-бит_Дополнительный_2ДвиженияССубконто.СуммаРегл КАК СуммаРегл,
	|	-бит_Дополнительный_2ДвиженияССубконто.СуммаУпр КАК СуммаУпр,
	|	-бит_Дополнительный_2ДвиженияССубконто.СуммаМУ КАК СуммаМУ,
	|	бит_Дополнительный_2ДвиженияССубконто.Содержание,
	|	бит_Дополнительный_2ДвиженияССубконто.НомерЖурнала,
	|	бит_Дополнительный_2ДвиженияССубконто.ВидПроводки,
	|	бит_Дополнительный_2ДвиженияССубконто.ДатаФормирования
	|ИЗ
	|	РегистрБухгалтерии.бит_Дополнительный_2.ДвиженияССубконто(, , Регистратор = &Регистратор, , ) КАК бит_Дополнительный_2ДвиженияССубконто";
	Запрос.УстановитьПараметр("Регистратор", ДокументОснование);
	ТаблицаЗапрос = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаЗапрос;
	
КонецФункции

Процедура ЗаполнениеПоОснованию(Объект, ДанныеЗаполнения, СтруктураПараметры = Неопределено) Экспорт 
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		
		Объект.ДокументОснование 	= ДанныеЗаполнения.Ссылка;
		
		Если ОбщегоНазначенияБП.ЕстьРеквизитДокумента("Организация", ДанныеЗаполнения.Ссылка.Метаданные()) Тогда
			Объект.Организация 			= ДанныеЗаполнения.Организация;
		КонецЕсли;
		
		Если ОбщегоНазначенияБП.ЕстьРеквизитДокумента("Контрагент", ДанныеЗаполнения.Ссылка.Метаданные()) Тогда
			Объект.Контрагент 			= ДанныеЗаполнения.Контрагент;
		КонецЕсли;
		
		Если ОбщегоНазначенияБП.ЕстьРеквизитДокумента("ДоговорКонтрагента", ДанныеЗаполнения.Ссылка.Метаданные()) Тогда
			Объект.ДоговорКонтрагента 	= ДанныеЗаполнения.ДоговорКонтрагента;
		КонецЕсли;
		
		Если ОбщегоНазначенияБП.ЕстьРеквизитДокумента("Комментарий", ДанныеЗаполнения.Ссылка.Метаданные()) Тогда
			Объект.Комментарий 	= ДанныеЗаполнения.Комментарий;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураПараметры) Тогда
		Объект.Организация 			= СтруктураПараметры.Организация;
		Объект.ID 					= СтруктураПараметры.ID;
	КонецЕсли;
	
КонецПроцедуры

Функция РассчитатьДатуПроводок(Объект) Экспорт
	
	Если ТипЗнч(Объект.ДокументОснование) = Тип ("ДокументСсылка.рс_АккруалПоID") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	МИНИМУМ(бит_Дополнительный_2.Период) КАК Период
		|ИЗ
		|	РегистрБухгалтерии.бит_Дополнительный_2 КАК бит_Дополнительный_2
		|ГДЕ
		|	бит_Дополнительный_2.Регистратор В
		|			(ВЫБРАТЬ
		|				рс_ДокументыПоID.Документ
		|			ИЗ
		|				РегистрСведений.рс_ДокументыПоID КАК рс_ДокументыПоID
		|			ГДЕ
		|				рс_ДокументыПоID.ID = &ID)
		|	И НЕ бит_Дополнительный_2.Период ЕСТЬ NULL 
		|	И (бит_Дополнительный_2.СчетДт В ИЕРАРХИИ(&Счет)
		|	ИЛИ бит_Дополнительный_2.СчетКт В ИЕРАРХИИ(&Счет))";
		Запрос.УстановитьПараметр("ID"  , Объект.ДокументОснование.ID);
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.бит_Дополнительный_2.Расходы);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			мДатаПроводок = Выборка.Период;
		КонецЕсли;	
		
		Если Не ЗначениеЗаполнено(мДатаПроводок) Тогда
			мДатаПроводок = Объект.Дата;
		КонецЕсли;	
	Иначе
		мДатаПроводок = Объект.Дата;
	КонецЕсли;       
	
	Если Не ЗначениеЗаполнено(мДатаПроводок) Тогда
		мДатаПроводок = Объект.Дата;
	КонецЕсли;	
		
	Возврат мДатаПроводок;
	
КонецФункции

#КонецЕсли