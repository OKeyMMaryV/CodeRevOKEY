#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит настройки БИТ
Перем мНастройкиПрограммы Экспорт;

// Хранит дополнительные измерения
Перем мИзмеренияДоп Экспорт;
// Хранит настройки дополнительных измерений
Перем мНастройкиИзмерений Экспорт;

// Хранит валюту регламентированного учета
Перем мВалютаРегламентированногоУчета Экспорт;

// ПЕРЕМЕННЫЕ МЕХАНИЗМА СТАТУСОВ И ВИЗ

// Хранит текущий статус
Перем мТекущийСтатус Экспорт;
// Хранит дату изменения статуса
Перем мДатаИзмененияСтатуса Экспорт;
// Хранит текущий алгоритм изменения статуса
Перем мАлгоритмИзмененияСтатуса Экспорт;
// Хранит список ИД виз, доступных пользователю с учетом прав доступа на визы и прохождением по маршруту
Перем мСписокВизПользователя Экспорт;
// Хранит список виз, доступных пользователю согласно правам
Перем мВизыПользователя Экспорт;
// Хранит режим обновления перечня виз
Перем мРежимОбновленияВиз Экспорт;
// Служит для передачи признака проведения между обработчиками
Перем мБылПроведен;
// Служит для передачи режима записи между обработчиками
Перем мРежимЗаписи;


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// бит_DFedotov Процедура получает статус объекта.
//
// Параметры:
//  Нет.
//
Процедура ПолучитьСтатусМодуль()  Экспорт
	
	// Получаем статус и дату изменения статуса для документа.
	РезСтруктура = бит_Визирование.ПолучитьСтатусОбъекта(Ссылка);
	
	мТекущийСтатус 		  = ?(ЗначениеЗаполнено(РезСтруктура.Статус)
	,РезСтруктура.Статус
	,Справочники.бит_СтатусыОбъектов.ПустаяСсылка());
	
	мДатаИзмененияСтатуса = РезСтруктура.Дата;
	
КонецПроцедуры // ПолучитьСтатусМодуль()

// бит_DFedotov Функция определяет текущий статус документа
//
// Параметры:
//  ТекущийОбъект    - ДокументСсылка.бит_КорректировкаКонтрольныхЗначений
//  НачальныйСтатус  – текущее значение статуса
//  ВсеВизыПолучены  – Булево
//
// Возвращаемое значение:
//   РезСтатус   – СправочникСсылка.бит_СтатусыОбъектов
//
Функция ОпределитьСтатусДокумента(ТекущийОбъект,НачальныйСтатус,РежимЗаписи,ВсеВизыПолучены) Экспорт
		
	РезСтатус = НачальныйСтатус;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-29 (#3393)
	Если ЗначениеЗаполнено(ок_ВидКорректировки) Тогда 
		
		Если РежимЗаписи = РежимЗаписиДокумента.Проведение 
			ИЛИ (РежимЗаписи = РежимЗаписиДокумента.Запись И ТекущийОбъект.Проведен) Тогда
			РезСтатус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.КорректировкаКонтрольныхЗначений_НаСогласовании");
		Иначе
			РезСтатус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.КорректировкаКонтрольныхЗначений_Черновик");
		КонецЕсли; 
		
		Если РезСтатус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.КорректировкаКонтрольныхЗначений_НаСогласовании") Тогда
			
			СтруктураОтбора = Новый Структура("Объект", ТекущийОбъект.Ссылка);
			ТаблицаРС = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбора).Выгрузить();
			
			мСтрокСПустымиРешениями = ТаблицаРС.НайтиСтроки(Новый Структура("Решение", ПредопределенноеЗначение("Справочник.бит_ВидыРешенийСогласования.ПустаяСсылка")));
			
			
			Если мСтрокСПустымиРешениями.Количество() = 0 
			   И ТаблицаРС.Количество()>0	
			Тогда
				РезСтатус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.КорректировкаКонтрольныхЗначений_Согласована");
			КонецЕсли; 
			
		КонецЕсли; 
		
		Если бит_Визирование.ПроверитьОтклоненияПоВизам(ТекущийОбъект.Ссылка, Ложь) Тогда 
			РезСтатус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.КорректировкаКонтрольныхЗначений_Отменена");
		КонецЕсли;
		
		Возврат РезСтатус;
		
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-29 (#3393)
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение 
		ИЛИ (РежимЗаписи = РежимЗаписиДокумента.Запись И ТекущийОбъект.Проведен) Тогда
		РезСтатус = Справочники.бит_СтатусыОбъектов.КорректировкаКонтрольныхЗначений_Рабочий;
	Иначе
		РезСтатус = Справочники.бит_СтатусыОбъектов.КорректировкаКонтрольныхЗначений_Черновик;
	КонецЕсли; 
	
	Если РезСтатус = Справочники.бит_СтатусыОбъектов.КорректировкаКонтрольныхЗначений_Рабочий Тогда
		
		Если ВсеВизыПолучены Тогда
			РезСтатус = Справочники.бит_СтатусыОбъектов.КорректировкаКонтрольныхЗначений_Утвержден;
		Иначе	
			РезСтатус = Справочники.бит_СтатусыОбъектов.КорректировкаКонтрольныхЗначений_Рабочий;
		КонецЕсли; 
		
	КонецЕсли; 
	
	Возврат РезСтатус;
	
КонецФункции // ОпределитьСтатус()

// бит_DFedotov Процедура устанавливает статус.
//
// Параметры:
//  вхРежимЗаписи			 – РежимЗаписиДокумента.
//  вхСтруктураЗатрат		 - Структура.
//  вхСинхронизироватьЗатраты - Булево. По умолчанию Истина.
//
Процедура УстановитьСтатус(вхРежимЗаписи = Неопределено) Экспорт
		
	СтрАлгоритмы              = бит_уп_Сервер.ПолучитьАлгоритмыОбъектаСистемы(ЭтотОбъект,Перечисления.бит_уп_ВидыАлгоритмов.ИзменениеСтатусовОбъектов);
	мАлгоритмИзмененияСтатуса = СтрАлгоритмы.ИзменениеСтатусовОбъектов;
	
	
	Если НЕ ЗначениеЗаполнено(мАлгоритмИзмененияСтатуса) Тогда
				
		Если вхРежимЗаписи = Неопределено Тогда
			РежимЗаписи = РежимЗаписиДокумента.Запись;
		Иначе	
			РежимЗаписи = вхРежимЗаписи;
		КонецЕсли; 
		
		// вычислим переменные, необходимые для установки статуса
		ВсеВизыПолучены = бит_Визирование.ВизыПолучены(Ссылка);
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-12 (#3393)
		//Статус = ОпределитьСтатусДокумента(ЭтотОбъект,мТекущийСтатус,РежимЗаписи,ВсеВизыПолучены);
		//Заменено на:
 		Если ДополнительныеСвойства.Свойство("СтатусКорректировки") Тогда 
			Статус = ДополнительныеСвойства.СтатусКорректировки;
		Иначе
			Статус = ОпределитьСтатусДокумента(ЭтотОбъект,мТекущийСтатус,РежимЗаписи,ВсеВизыПолучены);
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-12 (#3393)
		// определим статус заявки
			
		// если статус изменился - запишем его
		Если мТекущийСтатус <> Статус Тогда
			
			ДатаИзмененияСтатуса = ТекущаяДата();
			
			ДействиеВыполнено = бит_Визирование.УстановитьСтатусОбъекта(Ссылка
			,Перечисления.бит_ВидыСтатусовОбъектов.Статус
			,Статус
			,мТекущийСтатус
			,ПользователиКлиентСервер.ТекущийПользователь()
			,ДатаИзмененияСтатуса);
			
			Если ДействиеВыполнено Тогда
				
				мТекущийСтатус = Статус;
				мДатаИзмененияСтатуса = ДатаИзмененияСтатуса;
				
			КонецЕсли;
			
		КонецЕсли; 
		
	Иначе	
		
		// Выполнение установки статуса согласно алгоритма изменения статусов				
		КомментироватьВыполнение = бит_УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("КомментироватьХодВыполненияАлгоритмовПроцессов",
		ПользователиКлиентСервер.ТекущийПользователь());	
		
		РежимСообщений = ?(КомментироватьВыполнение,"Все","Ошибки");			
		
		СтруктураКонтекст = Новый Структура;
		СтруктураКонтекст.Вставить("ТекущийОбъект",ЭтотОбъект);
		
		бит_уп_Сервер.ВыполнитьАлгоритм(мАлгоритмИзмененияСтатуса,СтруктураКонтекст,РежимСообщений);
		
	КонецЕсли; 
	
	
КонецПроцедуры //УстановитьСтатус()

// бит_DFedotov Процедура заполняет шапку документа
// 
// Параметры:
//	ПараметрОбъектКопирования - ДокументСсылка
//
Процедура ЗаполнитьШапкуДокумента(ПараметрОбъектКопирования=Неопределено)
	
	НовыйВидОперации = ВидОперации;
	
	// Заполнить реквизиты значениями по умолчанию.
	бит_ОбщегоНазначения.ЗаполнитьШапкуДокумента(ЭтотОбъект
	,ПользователиКлиентСервер.ТекущийПользователь()
	,ПараметрОбъектКопирования);
	
	Если НЕ ЗначениеЗаполнено(НовыйВидОперации) Тогда
		// если этого не сделать, то при создании нового система не предложит выбрать вид операции
		ВидОперации = НовыйВидОперации;
	КонецЕсли;											
	
	Если НЕ ЗначениеЗаполнено(ВидКорректировки) Тогда
		ВидКорректировки = Перечисления.бит_ВидыКорректировокКонтрольныхЗначений.ЗаСчет;
	КонецЕсли;
	
КонецПроцедуры

// бит_DFedotov Процедура Устанавливает ид строки табличной части
//
// Параметры:
//  ТекущаяСтрока  – СтрокаТабличнойЧасти
//
Процедура УстановитьИДСтроки(ТекущаяСтрока) Экспорт
	
	ТекущаяСтрока.ИД = Строка(Новый УникальныйИдентификатор());
	
КонецПроцедуры //УстановитьИДСтроки()


//Начало_бит_Магомедов_16.07.2012 
Процедура бит_БК_ПроверитьОстаткиПоКонтрольнымЗначениям(Заголовок, Отказ)
	ТаблицаБДДСОбщая = ПодготовитьТаблицу();
	// контролируем только строки расхода
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ВидДвижения", Перечисления.бит_ВидДвиженияНакопления.Расход);
	
	ТаблицаБДДС = ТаблицаБДДСОбщая.Скопировать(СтруктураОтбора);
	ТЗ = ТаблицаБДДС.скопировать(); 
	СписокОбъектов  	 = ТЗ.ВыгрузитьКолонку("Аналитика_2");
	СписокЦФО 			 = ТЗ.ВыгрузитьКолонку("ЦФО");
	СписокСтатей		 = ТЗ.ВыгрузитьКолонку("СтатьяОборотов");
	СписокСценарийБюджет = ТЗ.ВыгрузитьКолонку("Сценарий");
	СписокСценариевКонтр = ПолучитьСоотвествиеСценариев(СписокСценарийБюджет);
	ТаблицаБДДС.Сортировать("Период Возр");
	МинПериод = НачалоГода(ТЗ[0].Период); 
	
	
	Таблица = бит_БК_Общий.ПолучитьОстатокБюджетаПоАналитикам(СписокОбъектов, СписокЦФО, СписокСтатей, Ссылка, МинПериод,СписокСценарийБюджет,СписокСценариевКонтр,ТаблицаБДДС);
	
	
	ТаблСценарий = Таблица.скопировать();
	ТаблСценарий.свернуть("сценарий");
	Для каждого СтрокаСценарий из ТаблСценарий цикл
		Если  СтрокаСценарий.сценарий = справочники.СценарииПланирования.ФАКТ
			или СтрокаСценарий.сценарий = справочники.СценарииПланирования.Факт_А
			или СтрокаСценарий.сценарий = справочники.СценарииПланирования.Факт_Инвест
			или СтрокаСценарий.сценарий = справочники.СценарииПланирования.Факт_У
			или СтрокаСценарий.сценарий = справочники.СценарииПланирования.Контракт_Инвест
			или СтрокаСценарий.сценарий = справочники.СценарииПланирования.Факт_УУ тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаСценарий.сценарий = справочники.СценарииПланирования.Бюджет_Инвест или
			СтрокаСценарий.сценарий = справочники.СценарииПланирования.Заявка_Инвест или
			СтрокаСценарий.сценарий = справочники.СценарииПланирования.Контракт_Инвест тогда
			КонтрольГод = истина;
		иначе
			КонтрольГод = ложь;
		КонецЕсли;
		
		СтруктураОтбора = Новый Структура;     
		СтруктураОтбора.Вставить("сценарий", СтрокаСценарий.сценарий);									
		ТаблСвернутаяБезСтатей = Таблица.скопировать(СтруктураОтбора);
		если КонтрольГод тогда
			ТаблСвернутаяБезСтатей.свернуть("Контролирующая,сценарий,Объект,Остаток,Период,ЦФО,проект");
		иначе
			ТаблСвернутаяБезСтатей.свернуть("Контролирующая,сценарий,Объект,Остаток,Период,ЦФО");
		конецЕсли;
		Для Каждого СтрокаТаб Из ТаблСвернутаяБезСтатей Цикл							
			СтруктураОтбора = Новый Структура;     
			СтруктураОтбора.Вставить("сценарий", СтрокаСценарий.сценарий);
			СтруктураОтбора.Вставить("Контролирующая", СтрокаТаб.Контролирующая);				
			СтруктураОтбора.Вставить("Объект", СтрокаТаб.Объект );				
			СтруктураОтбора.Вставить("Период", СтрокаТаб.Период );
			СтруктураОтбора.Вставить("ЦФО",     СтрокаТаб.ЦФО );
			если КонтрольГод тогда
				СтруктураОтбора.Вставить("проект",     СтрокаТаб.проект );
			КонецЕсли;
			ПолученныеСтроки = Таблица.НайтиСтроки(СтруктураОтбора);
			
			СуммаБезНДС = 0;				
			СтруктураОтбора.Удалить("Объект");
			СтруктураОтбора.Удалить("Контролирующая");
			Если КонтрольГод тогда
				СтруктураОтбора.Удалить("Период");
			КонецЕсли;
			
			МассивСтрокТабЧасти = новый массив;
			Для каждого ТекСтрока из ПолученныеСтроки цикл							
				СтруктураОтбора.Вставить("Аналитика_2", СтрокаТаб.Объект);									
				СтруктураОтбора.Вставить("СтатьяОборотов", ТекСтрока.СтатьяОборотов);				
				СтрокиБДДС = ТаблицаБДДС.НайтиСтроки(СтруктураОтбора);					
				Для каждого Стр из СтрокиБДДС Цикл
					Если не КонтрольГод или (КонтрольГод и НачалоГода(Стр.Период) = СтрокаТаб.Период) тогда 
						СуммаБезНДС = СуммаБезНДС + Стр.сумма;
						МассивСтрокТабЧасти.Добавить(стр);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			ОстатокПоБюджету = СтрокаТаб.Остаток - СуммаБезНДС;
			Если ОстатокПоБюджету < 0 тогда 
				ВалютаСценария  = СтрокаСценарий.сценарий.Валюта;
				ТекстСообщения =  "По сценарию """
				+СтрокаСценарий.сценарий
				+""","
				+Символы.ПС
				+"по ЦФО: "+СтрокаТаб.ЦФО
				+"по объекту: "+СтрокаТаб.Объект
				+?(КонтрольГод,"- Статья оборотов ""","- Контролирующая статья  """)
				+СтрокаТаб.Контролирующая
				+" превышен бюджет периода """
				+СтрокаТаб.период
				+"""."
				+"Остаток в рамках бюджета: "
				+ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаб.Остаток,ВалютаСценария,"0.00")
				
				+", сумма в документе: "
				+ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаБезНДС,ВалютаСценария,"0.00")
				+", не достаточно: "
				+ОбщегоНазначенияБПВызовСервера.ФорматСумм(ОстатокПоБюджету,ВалютаСценария,"0.00")
				+".";
				бит_ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения,Отказ,"",СтатусСообщения.Важное);
				Отказ = истина;
			конецЕсли;
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры

Функция ПолучитьСоотвествиеСценариев(СписокСценариев) 
	
	МассивСценариев = новый массив;
	для каждого текСтрока из СписокСценариев цикл
		Если ТекСтрока = справочники.СценарииПланирования.Бюджет_Инвест тогда
			СценарийСоотвествия = справочники.СценарииПланирования.Заявка_Инвест;
		ИначеЕсли ТекСтрока = справочники.СценарииПланирования.Бюджет_У тогда
			СценарийСоотвествия = справочники.СценарииПланирования.Заявка_У;
		ИначеЕсли ТекСтрока = справочники.СценарииПланирования.Заявка_Инвест тогда
			СценарийСоотвествия = справочники.СценарииПланирования.Контракт_Инвест;
		ИначеЕсли ТекСтрока = справочники.СценарииПланирования.Контракт_Инвест тогда
			СценарийСоотвествия = справочники.СценарииПланирования.Факт_Инвест;
		ИначеЕсли ТекСтрока = справочники.СценарииПланирования.Заявка_У тогда
			СценарийСоотвествия = справочники.СценарииПланирования.Факт_У;
		КонецЕсли;
		МассивСценариев.Добавить(СценарийСоотвествия);
	КонецЦикла;
	возврат МассивСценариев;
КонецФункции

Функция ПодготовитьТаблицу()
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-18 (#3027)
	//Запрос = Новый Запрос;
	//
	//Текст = "ВЫБРАТЬ
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Период,
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сценарий КАК Сценарий,
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.ЦФО КАК ЦФО,
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СтатьяОборотов КАК СтатьяОборотов,
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_2 КАК Аналитика_2,
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_1 КАК Аналитика_1,
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Проект,
	//|	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сумма, 0)) КАК Сумма,
	////СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сумма, 0)) КАК СуммаБезНДС,
	////СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сумма, 0)) КАК СуммаРегл,
	////СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сумма, 0)) КАК СуммаБезНДСРегл,
	////СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сумма, 0)) КАК СуммаУпр,
	////СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сумма, 0)) КАК СуммаБезНДСУпр,
	/////СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сумма, 0)) КАК СуммаСценарий,
	////	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сумма, 0)) КАК СуммаБезНДССценарий,
	//|	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Количество, 0)) КАК Количество,
	////1c-izhtc spawn 26.08.15 (
	////|	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сумма, 0)) КАК бит_БК_СуммаВРамкахБюджетаБезНДС,
	////|	СУММА(0) КАК бит_БК_СуммаЗаРамкамиБюджетаБезНДС,
	////|	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сумма, 0)) КАК бит_БК_СуммаВРамкахБюджетаСНДС,
	////|	СУММА(0) КАК бит_БК_СуммаЗаРамкамиБюджетаСНДС,
	//|	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сумма, 0)) КАК бит_БК_СуммаБезНДС,
	//|	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.НДС, 0)) КАК НДС,
	////	СУММА(ЕСТЬNULL(бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сумма, 0)) КАК бит_БК_СуммаСНДС,
	////1c-izhtc spawn 26.08.15 )
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.ВидДвижения
	//|ИЗ
	//|	Документ.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета.СуммыКорректировок КАК бит_БК_ЗакрытиеОстатковТабличнаяЧасть
	//|ГДЕ
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Ссылка = &Ссылка
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_1,
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Аналитика_2,
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Проект,
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Сценарий,
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.Период,
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.ЦФО,
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.СтатьяОборотов,
	//|	бит_БК_ЗакрытиеОстатковТабличнаяЧасть.ВидДвижения";
	//
	//Запрос.Текст = Текст;
	//Запрос.УстановитьПараметр("Ссылка"		   , Ссылка);			   
	//
	//Результат = Запрос.Выполнить();
	//
	//ТаблицаБДДС = Результат.Выгрузить();
	//
	//// получим таблицу периодов
	//КурсыПоПериодам = Неопределено;
	//
	////Добавляем контролируемый сценарий
	//ТаблицаБДДС.Колонки.Добавить("СценарийКонтролируемый", Новый ОписаниеТипов("СправочникСсылка.СценарииПланирования"));
	////Добавляем контролирующий сценарий
	//ТаблицаБДДС.Колонки.Добавить("СценарийКонтролирующий", Новый ОписаниеТипов("СправочникСсылка.СценарииПланирования"));
	//Для Каждого ТекСтрока Из ТаблицаБДДС Цикл
	//	СценарийКонтролируемый = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролируемый сценарий", ТекСтрока.Сценарий);
	//	ТекСтрока.СценарийКонтролируемый = СценарийКонтролируемый;
	//	
	//	СценарийКонтролирующий = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролирующий сценарий", ТекСтрока.Сценарий);
	//	ТекСтрока.СценарийКонтролирующий = СценарийКонтролирующий;
	//КонецЦикла;
	//
	//Возврат ТаблицаБДДС;
	//Заменено на:
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка"	,	Ссылка);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТЧДокумента.Период КАК Период,
	|	бит_БК_НастройкиБК.Значение КАК СценарийХранилище,
	|	ТЧДокумента.ЦФО КАК ЦФО,
	|	ТЧДокумента.СтатьяОборотов КАК СтатьяОборотов,
	|	ТЧДокумента.Проект КАК Проект,
	|	ТЧДокумента.Аналитика_1 КАК Аналитика_1,
	|	ТЧДокумента.Аналитика_2 КАК Аналитика_2,
	|	ТЧДокумента.Контрагент КАК Контрагент,
	|	ТЧДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ТЧДокумента.Сумма КАК Сумма,
	|	ТЧДокумента.Сценарий КАК СценарийКонтролирующий
	|ИЗ
	|	Документ.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета.СуммыКорректировок КАК ТЧДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_БК_НастройкиБК КАК бит_БК_НастройкиБК
	|		ПО (бит_БК_НастройкиБК.Группа = ""Контролируемый сценарий"")
	|			И (ТЧДокумента.Сценарий = (ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования)))
	|ГДЕ
	|	ТЧДокумента.Ссылка = &Ссылка
	|	И ТЧДокумента.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Расход)
	|	И ТЧДокумента.Сумма <> 0";
	
	пТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	пТаблицаРезультат.Колонки.Добавить("Сценарий"	,	Новый ОписаниеТипов("СправочникСсылка.СценарииПланирования"));
	
	Для Каждого стрРезультат Из пТаблицаРезультат Цикл 
		стрРезультат.Сценарий = стрРезультат.СценарийХранилище.Получить();
	КонецЦикла;
	
	пТаблицаРезультат.Свернуть("Период,Сценарий,СценарийКонтролирующий,ЦФО,СтатьяОборотов,Проект,Аналитика_1,Аналитика_2,Контрагент,ДоговорКонтрагента", "Сумма");
		
	Возврат пТаблицаРезультат;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-18 (#3027)
	
КонецФункции // ПодготовитьТаблицуБДДС()

//Конец_бит_Магомедов_16.07.2012 

// бит_DFedotov Функция формирует таблицу для движений
//
// Параметры:
//	нет
//
// Возвращаемое значение:
//	ТаблицаКонтрольныхЗначений - ТаблицаЗначений
//
Функция СформироватьТаблицуКонтрольныхЗначений()
	
	Запрос = Новый Запрос;
	
	// BIT AMerkulov 03-02-16 ++ / убрана сумма НДС из запроса
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Ссылка,
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.НомерСтроки,
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Период,
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сценарий,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.ПустаяСсылка) КАК СценарийКонтролируемый,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-03 (#3078)
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.ПустаяСсылка) КАК СценарийКонтролирующий,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-03 (#3078)
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения,
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ЦФО,
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.СтатьяОборотов,
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Контрагент,
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ДоговорКонтрагента,
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Проект,
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.НоменклатурнаяГруппа,
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Аналитика_5,
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.БанковскийСчет,
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Аналитика_1,
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Аналитика_2,
	//+Сундукова 18.05.2010 №2362
	//|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Аналитика_3,
	//-Сундукова 18.05.2010 №2362
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Аналитика_4,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-04 (#3078)	
	//|	ВЫБОР
	//|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	//|			ТОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма
	//|		ИНАЧЕ бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма * -1	
	//|	КОНЕЦ КАК СуммаСценарийКонтроль,
	////+Сундукова 10.05.16 №2362
	//|	ВЫБОР
	//|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	//|			ТОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.СуммаИсполнения
	//|		ИНАЧЕ бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.СуммаИсполнения * -1
	//|	КОНЕЦ КАК СуммаСценарийИсполнение,
	////-Сундукова 10.05.16 №2362	
	//Заменено на:
	|	ВЫБОР
	|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|			ТОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма
	|		ИНАЧЕ бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма * -1
	|	КОНЕЦ КАК СуммаСценарийКонтроль,
	|	ВЫБОР
	|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.СуммаСНДС КАК СуммаСценарийКонтрольСНДС,
	|	0 КАК СуммаСценарийИсполнение,
	|	0 КАК СуммаСценарийИсполнениеСНДС,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-04 (#3078)
	|	ВЫБОР
	|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|			ТОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Количество
	|		ИНАЧЕ бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Количество * -1
	|	КОНЕЦ КАК КоличествоСценарийКонтроль,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-05 (#3078)
	//|	ВЫБОР
	//|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	//|			ТОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма 
	//|		ИНАЧЕ бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма * -1
	//|	КОНЕЦ КАК СуммаБезНДСРегл,	
	//|	ВЫБОР
	//|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	//|			ТОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма
	//|		ИНАЧЕ бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма * -1
	//|	КОНЕЦ КАК СуммаБезНДСУпр,
	//|	ВЫБОР
	//|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	//|			ТОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма
	//|		ИНАЧЕ бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма * -1
	//|	КОНЕЦ КАК СуммаБезНДССценарий,
	//|	ВЫБОР
	//|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	//|			ТОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма 
	//|		ИНАЧЕ (бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма ) * -1
	//|	КОНЕЦ КАК СуммаРегл,
	//|	ВЫБОР
	//|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	//|			ТОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма 
	//|		ИНАЧЕ (бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма ) * -1
	//|	КОНЕЦ КАК СуммаУпр,
	//|	ВЫБОР
	//|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	//|			ТОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма 
	//|		ИНАЧЕ (бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма ) * -1
	//|	КОНЕЦ КАК СуммаСценарий,
	//Заменено на:
	|	ВЫБОР
	|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сумма КАК СуммаСценарий,
	|	ВЫБОР
	|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.СуммаСНДС  КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.СуммаСНДС КАК СуммаСНДСРегл,
	|	ВЫБОР
	|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.СуммаСНДС КАК СуммаСНДСУпр,
	|	ВЫБОР
	|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.СуммаСНДС КАК СуммаСНДССценарий,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-05 (#3078)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-25 (#3149)
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ок_Организация КАК бит_БК_Организация,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-25 (#3149)
	|	ВЫБОР
	|		КОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Приход)
	|			ТОГДА бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Количество
	|		ИНАЧЕ бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Количество * -1	
	|	КОНЕЦ КАК Количество,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-08-15 (#3376)
	| бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.СтатьяОборотов.ТипСтатьи	КАК ТипСтатьи, 
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-08-15 (#3376)
	|	ЕстьNULL(бит_БК_НастройкиБК.Значение,0) КАК ДопустимыйПроцентПревышения	
	|ИЗ
	|	Документ.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета.СуммыКорректировок КАК бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_БК_НастройкиБК КАК бит_БК_НастройкиБК
	|		ПО бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Сценарий = бит_БК_НастройкиБК.ИмяНастройки
	|			И (бит_БК_НастройкиБК.Группа = &Группа_ДопустимыйПроцентПревышения)	
	|ГДЕ
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-09 (#3393)
	|	//УсловиеПоВидуКорректировки
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-09 (#3393)
	|	бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.Ссылка = &ЭтотДокумент";	
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-09 (#3393)
	ДопСтрокаУсловия = "";
	Если ЗначениеЗаполнено(ок_ВидКорректировки) Тогда 
		
		Если ок_ВидКорректировки <> ПредопределенноеЗначение("Перечисление.ок_ВидКорректировкиКонтрольныхЗначенийИБюджета.УвеличениеБюджета")
		   И (мТекущийСтатус <> ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.КорректировкаКонтрольныхЗначений_Согласована") И
		   		НЕ ДополнительныеСвойства.Свойство("ПолностьюПровестиДокумент"))
		Тогда 
			ДопСтрокаУсловия = "бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаСуммыКорректировок.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.бит_ВидДвиженияНакопления.Расход) И ";
		КонецЕсли;
	КонецЕсли;	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//УсловиеПоВидуКорректировки",ДопСтрокаУсловия);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-09 (#3393)
	
	
	Запрос.УстановитьПараметр("ЭтотДокумент", Ссылка);
	Запрос.УстановитьПараметр("Группа_ДопустимыйПроцентПревышения","Допустимый % превышения");
	Результат = Запрос.Выполнить();
	
	ТаблицаКонтрольныхЗначений = Результат.Выгрузить();
	// BIT AMerkulov 03-02-16 -- / убрана сумма НДС из запроса
	
	
	//Начало_бит_Магомедов_09.08.2012 
	//заполним СценарийКонтролируемый
	Для Каждого ТекСтрока Из ТаблицаКонтрольныхЗначений Цикл
		//ОК Калинин М. 270912 извлечем из хранилища значений ДопустимыйПроцентПревышения
		Если типзнч(ТекСтрока.ДопустимыйПроцентПревышения)=тип("ХранилищеЗначения") Тогда
			ДопустимыйПроцентПревышенияЗначение_=ТекСтрока.ДопустимыйПроцентПревышения.Получить();
			ТекСтрока.ДопустимыйПроцентПревышения=ДопустимыйПроцентПревышенияЗначение_;
		КонецЕсли;
		//ОК Калинин М. 270912 
		ТекСтрока.СценарийКонтролируемый = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролируемый сценарий", ТекСтрока.Сценарий, Справочники.СценарииПланирования.ПустаяСсылка());
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-03 (#3078)		
		ТекСтрока.СценарийКонтролирующий = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролирующий сценарий", ТекСтрока.Сценарий, Справочники.СценарииПланирования.ПустаяСсылка());
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-03 (#3078)
	КонецЦикла;
	//Конец_бит_Магомедов_09.08.2012 
	
	Возврат ТаблицаКонтрольныхЗначений;
	
КонецФункции

// бит_DFedotov Процедура формирует движения по регистрам
//
// Параметры:
//	ТаблицаКонтрольныхЗначений - таблица значений
//	Отказ - булево
//	Заголовок - строка
//
Процедура ДвиженияПоРегистрам(ТаблицаКонтрольныхЗначений,Отказ,Заголовок)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-15 (#3156)
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-11 (#3078)
	//Перем пОрганизация;
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-11 (#3078)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-15 (#3156)
	
	// движения по регистру обороты по бюджетам
	ТаблицаДвижений = Движения.бит_ОборотыПоБюджетам.Выгрузить();
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-04 (#3078)
	ТаблицаДвижений.Колонки.Добавить("СценарийКонтролирующий");
	
	соотСценарийОчищаемыеПоля = Новый Соответствие;
	мдЗнчПеречисления = Метаданные.Перечисления.бит_БК_ИзмеренияКонтроляБюджета.ЗначенияПеречисления;						
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-15 (#3156)
	//Если ЗначениеЗаполнено(ДокументОснование) Тогда 
	//	мдДокОснования = ДокументОснование.Метаданные();
	//	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Организация", мдДокОснования) Тогда 
	//		пОрганизация = ДокументОснование.Организация;
	//	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитОбъекта("бит_БК_Организация", мдДокОснования) Тогда 
	//		пОрганизация = ДокументОснование.бит_БК_Организация;
	//	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитОбъекта("бит_Организация", мдДокОснования) Тогда 
	//		пОрганизация = ДокументОснование.бит_Организация;		
	//	КонецЕсли;
	//КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-15 (#3156)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-04 (#3078)
	ТаблицаДвижений.Очистить();
	
	Для каждого СтрокаТаблицы Из ТаблицаКонтрольныхЗначений Цикл
		НоваяСтрока = ТаблицаДвижений.Добавить();
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-03 (#3078)
		//ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
		//Заменено на:
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы,,"СценарийКонтролирующий");		
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-15 (#3156)
		//НоваяСтрока.бит_БК_Организация = пОрганизация;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-15 (#3156)
			
		мОчищаемыеПоля = соотСценарийОчищаемыеПоля.Получить(СтрокаТаблицы.Сценарий);
		Если мОчищаемыеПоля = Неопределено Тогда 
			
			мОчищаемыеПоля = Новый Массив;
			
			бит_СписокИзмеренийКонтроляБюджета = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Измерения контроля бюджета", СтрокаТаблицы.Сценарий, Новый СписокЗначений, "СписокЗначений"); 					
			
			Для Каждого ЗнчПеречисления ИЗ мдЗнчПеречисления Цикл 
				Если бит_СписокИзмеренийКонтроляБюджета.НайтиПоЗначению(Перечисления.бит_БК_ИзмеренияКонтроляБюджета[ЗнчПеречисления.Имя]) = Неопределено И
					НЕ ЗнчПеречисления.Имя = "Сценарий" И
					НЕ ЗнчПеречисления.Имя = "СтатьяОборотов"			
					Тогда  
					Если ТаблицаДвижений.Колонки.Найти(ЗнчПеречисления.Имя)<>Неопределено Тогда 
						мОчищаемыеПоля.Добавить(ЗнчПеречисления.Имя);				
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;  
			
			соотСценарийОчищаемыеПоля.Вставить(СтрокаТаблицы.Сценарий, мОчищаемыеПоля);		
			
		КонецЕсли;	
		
		Если мОчищаемыеПоля.Количество()>0 Тогда 
			Для Каждого пИмяПоля Из мОчищаемыеПоля Цикл 
				НоваяСтрока[пИмяПоля] = Неопределено;
			КонецЦикла;			
		КонецЕсли;
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-03 (#3078)
		
		////без НДС
		//НоваяСтрока.СуммаБезНДСРегл = СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаБезНДС;
		//НоваяСтрока.СуммаБезНДСУпр = СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаБезНДС;
		//НоваяСтрока.СуммаБезНДССценарий = СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаБезНДС;
		////с НДС
		//НоваяСтрока.СуммаРегл = СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаСНДС;
		//НоваяСтрока.СуммаУпр = СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаСНДС;
		//НоваяСтрока.СуммаСценарий = СтрокаТаблицы.бит_БК_СуммаВРамкахБюджетаСНДС;
		
	КонецЦикла; 
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-04 (#3078)
	ТаблицаДвижений.Колонки.Удалить("СценарийКонтролирующий");
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-04 (#3078)

	
	Движения.бит_ОборотыПоБюджетам.мТаблицаДвижений = ТаблицаДвижений;
	Движения.бит_ОборотыПоБюджетам.ДобавитьДвижение();
	
	// движения по регистру "бит_КонтрольныеЗначенияБюджетов"
	ТаблицаДвижений = Движения.бит_КонтрольныеЗначенияБюджетов.Выгрузить();
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-04 (#3078)
	ТаблицаДвижений.Колонки.Добавить("СценарийКонтролирующий");
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-04 (#3078)
	ТаблицаДвижений.Очистить();
	
	Для Каждого СтрокаТаблицы Из ТаблицаКонтрольныхЗначений Цикл
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-25 (#3149)
		Если ЗначениеЗаполнено(СтрокаТаблицы.СценарийКонтролируемый) Тогда 
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-25 (#3149)
			
			НоваяСтрока = ТаблицаДвижений.Добавить();
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-03 (#3078)
			//ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
			//Заменено на:
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы,,"СценарийКонтролирующий");
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-15 (#3156)
			//НоваяСтрока.бит_БК_Организация = пОрганизация;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-15 (#3156)
			
			мОчищаемыеПоля = соотСценарийОчищаемыеПоля.Получить(СтрокаТаблицы.Сценарий);
			Если мОчищаемыеПоля = Неопределено Тогда 
				
				мОчищаемыеПоля = Новый Массив;
				
				бит_СписокИзмеренийКонтроляБюджета = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Измерения контроля бюджета", СтрокаТаблицы.Сценарий, Новый СписокЗначений, "СписокЗначений"); 					
				
				Для Каждого ЗнчПеречисления ИЗ мдЗнчПеречисления Цикл 
					Если бит_СписокИзмеренийКонтроляБюджета.НайтиПоЗначению(Перечисления.бит_БК_ИзмеренияКонтроляБюджета[ЗнчПеречисления.Имя]) = Неопределено И
						НЕ ЗнчПеречисления.Имя = "Сценарий" И
						НЕ ЗнчПеречисления.Имя = "СтатьяОборотов"			
						Тогда  
						Если ТаблицаДвижений.Колонки.Найти(ЗнчПеречисления.Имя)<>Неопределено Тогда 
							мОчищаемыеПоля.Добавить(ЗнчПеречисления.Имя);				
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;  
				
				соотСценарийОчищаемыеПоля.Вставить(СтрокаТаблицы.Сценарий, мОчищаемыеПоля);		
				
			КонецЕсли;	
			
			Если мОчищаемыеПоля.Количество()>0 Тогда 
				Для Каждого пИмяПоля Из мОчищаемыеПоля Цикл 
					НоваяСтрока[пИмяПоля] = Неопределено;
				КонецЦикла;			
			КонецЕсли;
			
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-25 (#3149)
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-25 (#3149)
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.СценарийКонтролирующий) 
			 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-08-15 (#3376)
			 И НЕ ((СтрокаТаблицы.Сценарий = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("ок_ОперационныйСценарийПланирования") 
			 		ИЛИ СтрокаТаблицы.Сценарий = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("ок_ИнвестиционныйСценарийПланирования")) 
					И СтрокаТаблицы.ТипСтатьи = ПредопределенноеЗначение("Перечисление.бит_ТипыСтатейОборотов.БДДС"))
			 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-08-15 (#3376)
		Тогда 
			
			НоваяСтрока = ТаблицаДвижений.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы,,"СценарийКонтролирующий");
		
			НоваяСтрока.СценарийКонтролируемый  = НоваяСтрока.Сценарий;
			НоваяСтрока.Сценарий			    = СтрокаТаблицы.СценарийКонтролирующий;					
			
			НоваяСтрока.СуммаСценарийИсполнение = НоваяСтрока.СуммаСценарийКонтроль;
			НоваяСтрока.СуммаСценарийКонтроль	= 0;
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-15 (#3156)
			//НоваяСтрока.СуммаСценарийИсполнениеСНДС = НоваяСтрока.СуммаСценарийКонтрольСНДС;
			//Заменено на:
			Если НоваяСтрока.Сценарий <> ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_Инвест")
				И НоваяСтрока.Сценарий <> ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_У")
				И НоваяСтрока.Сценарий <> ПредопределенноеЗначение("Справочник.СценарииПланирования.Контракт_Инвест")
				И НоваяСтрока.СценарийКонтролируемый <> ПредопределенноеЗначение("Справочник.СценарииПланирования.Факт_Инвест")
				И НоваяСтрока.СценарийКонтролируемый <> ПредопределенноеЗначение("Справочник.СценарииПланирования.Факт_У")
			Тогда 
				НоваяСтрока.СуммаСценарийИсполнениеСНДС = НоваяСтрока.СуммаСценарийКонтрольСНДС;			
			КонецЕсли;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-15 (#3156)
			НоваяСтрока.СуммаСценарийКонтрольСНДС	= 0;
			
			НоваяСтрока.КоличествоСценарийИсполнение = НоваяСтрока.СуммаСценарийКонтроль;
			НоваяСтрока.КоличествоСценарийКонтроль	= 0;
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-15 (#3156)
			//НоваяСтрока.бит_БК_Организация = пОрганизация;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-15 (#3156)
			
			мОчищаемыеПоля = соотСценарийОчищаемыеПоля.Получить(НоваяСтрока.Сценарий);
			Если мОчищаемыеПоля = Неопределено Тогда 
				
				мОчищаемыеПоля = Новый Массив;
				
				бит_СписокИзмеренийКонтроляБюджета = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Измерения контроля бюджета", НоваяСтрока.Сценарий, Новый СписокЗначений, "СписокЗначений"); 					
				
				Для Каждого ЗнчПеречисления ИЗ мдЗнчПеречисления Цикл 
					Если бит_СписокИзмеренийКонтроляБюджета.НайтиПоЗначению(Перечисления.бит_БК_ИзмеренияКонтроляБюджета[ЗнчПеречисления.Имя]) = Неопределено И
						НЕ ЗнчПеречисления.Имя = "Сценарий" И
						НЕ ЗнчПеречисления.Имя = "СтатьяОборотов"			
						Тогда  
						Если ТаблицаДвижений.Колонки.Найти(ЗнчПеречисления.Имя)<>Неопределено Тогда 
							мОчищаемыеПоля.Добавить(ЗнчПеречисления.Имя);				
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;  
				
				соотСценарийОчищаемыеПоля.Вставить(НоваяСтрока.Сценарий, мОчищаемыеПоля);		
				
			КонецЕсли;	
			
			Если мОчищаемыеПоля.Количество()>0 Тогда 
				Для Каждого пИмяПоля Из мОчищаемыеПоля Цикл 
					НоваяСтрока[пИмяПоля] = Неопределено;
				КонецЦикла;			
			КонецЕсли;		
			
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-03 (#3078)

		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-06 (#3042)		
		//НоваяСтрока.СуммаСценарийКонтрольСПревышением = СтрокаТаблицы.СуммаСценарийКонтроль + (СтрокаТаблицы.СуммаСценарийКонтроль*СтрокаТаблицы.ДопустимыйПроцентПревышения/100);
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-06 (#3042)
	КонецЦикла; 
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-04 (#3078)
	ТаблицаДвижений.Колонки.Удалить("СценарийКонтролирующий");
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-04 (#3078)
	
	Движения.бит_КонтрольныеЗначенияБюджетов.мТаблицаДвижений = ТаблицаДвижений;
	Движения.бит_КонтрольныеЗначенияБюджетов.ДобавитьДвижение();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

// бит_DFedotov Процедура - обработчик события "ПередЗаписью"
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	мБылПроведен = Проведен;
	мРежимЗаписи = РежимЗаписи;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-16 (#3393)
	Если ЗначениеЗаполнено(ок_ВидКорректировки) Тогда 
		Если НЕ ЗначениеЗаполнено(СценарийКонтролируемый) Тогда 
			СценарийКонтролируемый = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролируемый сценарий", Сценарий, ПредопределенноеЗначение("Справочник.СценарииПланирования.ПустаяСсылка"));
		КонецЕсли;
	
		Для Каждого СтрТаблицы Из СуммыКорректировок Цикл 
			СтрТаблицы.Сценарий = Сценарий;		
		КонецЦикла;
	КонецЕсли;
	
	пТекПользователь = Пользователи.ТекущийПользователь();
	Если НЕ УправлениеДоступом.ЕстьРоль("бит_БК_ГлавныйБК",,пТекПользователь) //НЕ Фин. контролер
	   И НЕ Пользователи.ЭтоПолноправныйПользователь(пТекПользователь)  	  //НЕ Полные права
	   И ЗначениеЗаполнено(ок_ВидКорректировки)
	   И ЗначениеЗаполнено(ок_ФункциональныйДиректор)
	   И НЕ ДополнительныеСвойства.Свойство("ПолностьюПровестиДокумент")
	   И НЕ ДополнительныеСвойства.Свойство("ОперацияИзТолстойФормы")
	   И (РежимЗаписи = РежимЗаписиДокумента.Проведение
	 ИЛИ Проведен И РежимЗаписи = РежимЗаписиДокумента.Запись)
	Тогда 
		соотФД_ЦФО = Документы.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета.ПолучитьДоступныеИнициаторуЦФОДляКорректировки();
		Если соотФД_ЦФО.Получить(ок_ФункциональныйДиректор) = Неопределено Тогда 
			пТекстОшибки = НСтр("ru = ' Операция не выполнена, т.к. выбранный в документе функциональный директор %1 перестал быть доступен'");
			пТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(пТекстОшибки, ок_ФункциональныйДиректор);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(пТекстОшибки,,,,Отказ);
		КонецЕсли;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-16 (#3393)
	
	Если Не Отказ Тогда
		
		// Выполним синхронизацию пометки на удаление объекта и дополнительных файлов.
		бит_ХранениеДополнительнойИнформации.СинхронизацияПометкиНаУдалениеУДополнительныхФайлов(ЭтотОбъект);
		
	КонецЕсли; // не Отказ
	
	// Подготовим массив типов для проверки.
	МассивТипов = бит_рлс_Основной.ПодготовитьМассивТиповДляПроверки(ЭтотОбъект);
	
	// Проверка на наличие "битых" ссылок в следствие работы RLS.
	бит_рлс_Основной.ПроверитьБитыеСсылкиВОбъекте(ЭтотОбъект, МассивТипов, Отказ);
	
	// БИТ_YK_н
	////БИТ АКриштопов 12022016 -->> Заполнение сценария и сценария контролируемого приотсутсвии документа основания
	//Если Не ЗначениеЗаполнено(ДокументОснование) И Не ЗначениеЗаполнено(Сценарий) И Не ЗначениеЗаполнено(СценарийКонтролируемый) Тогда
	//	КолонкаСценария = СуммыКорректировок.ВыгрузитьКолонку("Сценарий");
	//	Если КолонкаСценария.Количество() <> 0 Тогда
	//		//Если КолонкаСценария[0].Ссылка = Справочники.СценарииПланирования.Бюджет_Инвест Тогда
	//		//	Сценарий = Справочники.СценарииПланирования.Бюджет_Инвест;
	//		//	СценарийКонтролируемый = Справочники.СценарииПланирования.Заявка_Инвест;	
	//		//Иначе
	//		//	Сообщение = Новый СообщениеПользователю;
	//		//	Сообщение.Текст = "Не заполнен документ основание, документ проведен не будет";
	//		//	Сообщение.Сообщить();
	//		//	Отказ = Истина;
	//		//	Возврат;
	//		//КонецЕсли;
	//	КонецЕсли;
	//Иначе
	//	//СценарийКонтролируемый = Справочники.СценарииПланирования.Заявка_Инвест;
	//КонецЕсли;
	//БИТ АКриштопов 12022016 <<--
	// БИТ_YK_к
	
	//+ Сенин С. CR#2670 23.09.2016
	Если мРежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		мСписокСценариев = Новый Массив;
			мСписокСценариев.Добавить(ПредопределенноеЗначение("Справочник.СценарииПланирования.Бюджет_А"));
			мСписокСценариев.Добавить(ПредопределенноеЗначение("Справочник.СценарииПланирования.Бюджет_У"));
			мСписокСценариев.Добавить(ПредопределенноеЗначение("Справочник.СценарииПланирования.Бюджет_Инвест"));
			
		Для каждого СтрокаСуммыКорректировок из СуммыКорректировок Цикл
			
			Если мСписокСценариев.Найти(СтрокаСуммыКорректировок.Сценарий)<>Неопределено 
				и ЗначениеЗаполнено(СтрокаСуммыКорректировок.Аналитика_1) Тогда
				
				Сообщить("В строке "+СтрокаСуммыКорректировок.НомерСтроки+" для сценария "+СтрокаСуммыКорректировок.Сценарий+" указан №заявки "+СтрокаСуммыКорректировок.Аналитика_1);	 
				Отказ=Истина;
				
			 КонецЕсли;	
		
		КонецЦикла;	
			
	КонецЕсли;	
	//- Сенин С. CR#2670 23.09.2016
	
	//ОКЕЙ Рычаков А.С.(СофтЛаб)2020-07-13 Начало (#3774)
	Если Не Отказ И РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		ок_СверхБюджета = Ложь;
	КонецЕсли;
	//ОКЕЙ Рычаков А.С.(СофтЛаб)2020-07-13 Конец (#3774
	
КонецПроцедуры

// бит_DFedotov Процедура - обработчик события "ПриЗаписи"
//
Процедура ПриЗаписи(Отказ)
	
	Если НЕ Отказ Тогда
		
		Если НЕ мРежимЗаписи = РежимЗаписиДокумента.Проведение  Тогда
			
			УстановитьСтатус(мРежимЗаписи);
			
		КонецЕсли; 
		мВизыПользователя  = бит_Визирование.ПолучитьВизыПользователя(ПользователиКлиентСервер.ТекущийПользователь(),ЭтотОбъект);
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-17 (#3393)
		Если мРежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда 
			
			УстановитьСтатус(мРежимЗаписи);
			
			Если ЗначениеЗаполнено(ок_ВидКорректировки) Тогда 
							
				СтруктураОтбор = Новый Структура("Объект", Ссылка);
				НаборВиз = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
				Если НаборВиз.Количество()>0 Тогда 
					
					НаборВиз.Очистить();
					Попытка
						
						НаборВиз.Записать();
						
					Исключение
						
						пОшибка = НСтр("ru = 'Не удалось очистить маршрут документа %1 по причине %2'");
						пОшибка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(пОшибка, Ссылка, ОписаниеОшибки());
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(пОшибка);
											
						Возврат;
					КонецПопытки;
				КонецЕсли;	
				
				НаборЗаписейОповещений = бит_ОбщегоНазначения.ПрочитатьНаборЗаписейРегистраСведений(СтруктураОтбор,"бит_фн_РегистрацияСобытийОповещений");
				Если НаборЗаписейОповещений.Количество()>0 Тогда 
					
					НаборЗаписейОповещений.Очистить();
					
					Попытка
						
						НаборЗаписейОповещений.Записать();
						
					Исключение
						
						пОшибка = НСтр("ru = 'Не удалось очистить маршрут документа %1 по причине %2'");
						пОшибка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(пОшибка, Ссылка, ОписаниеОшибки());
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(пОшибка);
												
						Возврат;
						
					КонецПопытки;
					
				КонецЕсли;
					                                                                
				пСообщение = НСтр("ru = 'Очищен маршрут документа %1'");
				пСообщение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(пСообщение, Ссылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(пСообщение);
				
			КонецЕсли;
			
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-17 (#3393)
		
	КонецЕсли;
	
КонецПроцедуры

// бит_DFedotov Процедура - обработчик события "ОбработкаПроведения"
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//{ bit SVKushnirenko Bit 27.01.2017 #2657
	ЭтотОбъект.Движения.бит_КонтрольныеЗначенияБюджетов.ДополнительныеСвойства.Вставить("бит_БК_УстановкаСтатусаПослеПроведения", Истина);
	//} bit SVKushnirenko Bit 27.01.2017 #2657
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = бит_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Проверка ручной корректировки
	Если бит_ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект,Ложь) Тогда
		Возврат
	КонецЕсли;
	
	// БИТ_YK_н 03/16
	// Вернем проверку в исходное состояние - нужно проверять по сценариям из ТЧ, а не из шапки.
	//1c-izhtc spawn (
	////Начало_бит_Магомедов_16.07.2012 
	////ПроверитьОстаткиПоКонтрольнымЗначениям(Заголовок, Отказ);
	//бит_БК_ПроверитьОстаткиПоКонтрольнымЗначениям(Заголовок, Отказ);
	////Конец_бит_Магомедов_16.07.2012 
	//ПроверитьОстаткиПоКонтрольнымЗначениям(Заголовок, Отказ);
	//1c-izhtc spawn )
	// БИТ_YK_к
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-18 (#3027)
	Если НЕ ДополнительныеСвойства.Свойство("НеПроверятьОстаткиПоКЗБ") 
	 ИЛИ ДополнительныеСвойства.НеПроверятьОстаткиПоКЗБ = Ложь
	Тогда 
		ПроверитьОстаткиПоКонтрольнымЗначениям(Отказ);
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-18 (#3027)
	
	Если Отказ Тогда  
		Возврат;
	КонецЕсли; 
	
	
	СтруктураШапкиДокумента = бит_ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-09 (#3393)
	Если ок_ВидКорректировки = ПредопределенноеЗначение("Перечисление.ок_ВидКорректировкиКонтрольныхЗначенийИБюджета.УвеличениеБюджета")
	   И (мТекущийСтатус <> ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.КорректировкаКонтрольныхЗначений_Согласована")
	   	  И НЕ ДополнительныеСвойства.Свойство("ПолностьюПровестиДокумент"))
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2020-01-10 (#3576)
		 //И (НЕ ДополнительныеСвойства.Свойство("ЗапуститьМаршрутСогласования")
		 //       ИЛИ НЕ ДополнительныеСвойства.ЗапуститьМаршрутСогласования)	 
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2020-01-10 (#3576) 		 
	Тогда
	    //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2020-01-10 (#3576)
		Если ДополнительныеСвойства.Свойство("ЗапуститьМаршрутСогласования")
		        И ДополнительныеСвойства.ЗапуститьМаршрутСогласования
		Тогда 	
			СтруктураПараметров = Новый Структура;
			бит_Визирование.ОбновитьПереченьВиз(Ссылка,Дата,СтруктураПараметров);
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2020-01-10 (#3576)
		УстановитьСтатус(РежимЗаписиДокумента.Проведение);
		Возврат;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-09 (#3393)
	
	ТаблицаКонтрольныхЗначений = СформироватьТаблицуКонтрольныхЗначений();
	
	// выполним движения
	Если НЕ Отказ Тогда
		ДвиженияПоРегистрам(ТаблицаКонтрольныхЗначений,Отказ,Заголовок);
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		// заполним перечень виз
		Если мРежимОбновленияВиз = Перечисления.бит_РежимыОбновленияПеречняВиз.ОбновлятьПриПерепроведении 
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-29 (#3393)
			//ИЛИ НЕ мБылПроведен 
			//Заменено на:
			ИЛИ ДополнительныеСвойства.Свойство("ЗапуститьМаршрутСогласования")
			    И ДополнительныеСвойства.ЗапуститьМаршрутСогласования
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-29 (#3393) 
			
		Тогда
			
			СтруктураПараметров = Новый Структура;
			//СтруктураПараметров.Вставить("СтруктурноеПодразделение",Организация);
			//СтруктураПараметров.Вставить("ЦФО",ЦФО);		
			бит_Визирование.ОбновитьПереченьВиз(Ссылка,Дата,СтруктураПараметров);
						
		КонецЕсли; 
		
		УстановитьСтатус(РежимЗаписиДокумента.Проведение);
		
	КонецЕсли;
	
КонецПроцедуры

// бит_DFedotov Процедура - обработчик события "ОбработкаУдаленияПроведения"
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	//{ bit SVKushnirenko Bit 27.01.2017 #2657
	ЭтотОбъект.Движения.бит_КонтрольныеЗначенияБюджетов.ДополнительныеСвойства.Вставить("бит_БК_УстановкаСтатусаПередУдалением", Истина);
	//} bit SVKushnirenko Bit 27.01.2017 #2657
	
	бит_ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, РучнаяКорректировка);
	
	// проверим допустимость отмены проведения 
	РезСтруктура   = бит_Визирование.ПолучитьСтатусОбъекта(Ссылка);
	мТекущийСтатус = ?(ЗначениеЗаполнено(РезСтруктура.Статус),РезСтруктура.Статус,Справочники.бит_СтатусыОбъектов.ПустаяСсылка());
	мДатаИзмененияСтатуса = РезСтруктура.Дата;
	
	Если НЕ Отказ Тогда
		
		// очистим визы
		бит_Визирование.ОчиститьВсеВизыБезусловно(ЭтотОбъект.Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры

// бит_DFedotov Процедура - обработчик события "ОбработкаПроверкиЗаполнения"
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	//Начало_бит_Магомедов_03.08.2012 
	//Если ВидОперации = Перечисления.бит_ВидыОперацийКорректировкаКонтрольныхЗначений.КонтрольБюджета Тогда
	//	ПроверяемыеРеквизиты.Добавить("СценарийКонтролируемый");
	//КонецЕсли;
	//Конец_бит_Магомедов_03.08.2012 
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-16 (#3393)
	Если ЗначениеЗаполнено(ок_ВидКорректировки)	Тогда 
		
		ИндексЭлСценарий = ПроверяемыеРеквизиты.Найти("СуммыКорректировок.Сценарий");
		Если ЗначениеЗаполнено(Сценарий) 		   
		   И ИндексЭлСценарий > 0
		Тогда 
			ПроверяемыеРеквизиты.Удалить(ИндексЭлСценарий);
		КонецЕсли;
		
		Если СуммыКорректировок.Количество() = 0 Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнена табличная часть документа'"),,,, Отказ);
		КонецЕсли;

		Если ок_ВидКорректировки <> ПредопределенноеЗначение("Перечисление.ок_ВидКорректировкиКонтрольныхЗначенийИБюджета.УвеличениеБюджета") Тогда
								
			Если Не Отказ Тогда 
				
				СуммыПриход = СуммыКорректировок.НайтиСтроки(Новый Структура("ВидДвижения", ПредопределенноеЗначение("Перечисление.бит_ВидДвиженияНакопления.Приход")));
							
				Если СуммыПриход.Количество() = 0 Тогда 
				 	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнена табличная часть ""Увеличение"" документа'"),,,, Отказ);
				КонецЕсли;
				
				СуммыРасход = СуммыКорректировок.НайтиСтроки(Новый Структура("ВидДвижения", ПредопределенноеЗначение("Перечисление.бит_ВидДвиженияНакопления.Расход")));
				
				Если СуммыРасход.Количество() = 0 Тогда 
				 	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнена табличная часть ""За счет"" документа'"),,,, Отказ);
				КонецЕсли;
				
			КонецЕсли;	
			
		КонецЕсли;
	КонецЕсли;
	
	Если Отказ Тогда 
		Возврат;	
	КонецЕсли;  	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-16 (#3393)
	
	Для Каждого ТекущаяСтрока Из СуммыКорректировок Цикл
				
		// определим название таблицы
		Если ТекущаяСтрока.ВидДвижения = Перечисления.бит_ВидДвиженияНакопления.Приход Тогда
			НазваниеТаблицы = "Увеличение";			
		Иначе
			Если ВидКорректировки = Перечисления.бит_ВидыКорректировокКонтрольныхЗначений.ЗаСчет Тогда
				НазваниеТаблицы = "За счет";
			Иначе
				НазваниеТаблицы = "Уменьшение";
			КонецЕсли;
		КонецЕсли;
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-11 (#3393)
		Если ЗначениеЗаполнено(ок_ВидКорректировки)	Тогда 
			Если Не ЗначениеЗаполнено(ТекущаяСтрока.ЦФО) Тогда 
				ТекстСообщения = НСтр("ru='В строке № "+ТекущаяСтрока.НомерСтроки+" таблицы """+НазваниеТаблицы+""" не указан ЦФО!'");
				бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,, Отказ);
			КонецЕсли;

			Если Не ЗначениеЗаполнено(ТекущаяСтрока.Аналитика_2) Тогда 
				ТекстСообщения = НСтр("ru='В строке № "+ТекущаяСтрока.НомерСтроки+" таблицы """+НазваниеТаблицы+""" не указан объект строительства!'");
				бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,, Отказ);
			КонецЕсли;
			
			Если Сценарий = ПредопределенноеЗначение("Справочник.СценарииПланирования.Бюджет_Инвест")
			   И Не ЗначениеЗаполнено(ТекущаяСтрока.Проект) 
			Тогда 
			    ТекстСообщения = НСтр("ru='В строке № "+ТекущаяСтрока.НомерСтроки+" таблицы """+НазваниеТаблицы+""" не указан проект!'");
				бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,, Отказ);
		    КонецЕсли;

		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-11 (#3393)
		
		// проверим заполненность суммы
		Если ТекущаяСтрока.СтатьяОборотов.Учет_Сумма
			И (ТекущаяСтрока.Сумма = 0 и ТекущаяСтрока.СуммаИсполнения = 0)Тогда
			
			ТекстСообщения = НСтр("ru='В строке № "+ТекущаяСтрока.НомерСтроки+" таблицы """+НазваниеТаблицы+""" не указана сумма корректировки!'");
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,, Отказ);
		КонецЕсли;
		
		// проверим заполненность количество
		Если ТекущаяСтрока.СтатьяОборотов.Учет_Количество
			И ТекущаяСтрока.Количество = 0 Тогда
			
			ТекстСообщения = НСтр("ru='В строке № "+ТекущаяСтрока.НомерСтроки+" таблицы """+НазваниеТаблицы+""" не указано количество!'");
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,, Отказ);
		КонецЕсли;
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-10 (#3393)
		Если ок_ВидКорректировки = ПредопределенноеЗначение("Перечисление.ок_ВидКорректировкиКонтрольныхЗначенийИБюджета.КоррМеждуПолугодиямиБезИзмененияАналитик") Тогда 
			
			НачалоПолугодия = ДобавитьМесяц(НачалоГода(ТекущаяДата()), 6);
			
			Если Год(ТекущаяСтрока.Период)<>Год(ТекущаяДата())
			 ИЛИ ТекущаяСтрока.Период >= НачалоПолугодия И ТекущаяСтрока.ВидДвижения = Перечисления.бит_ВидДвиженияНакопления.Приход
			 ИЛИ ТекущаяСтрока.Период < НачалоПолугодия И ТекущаяСтрока.ВидДвижения = Перечисления.бит_ВидДвиженияНакопления.Расход
			Тогда
			 	ТекстСообщения = НСтр("ru='В строке № "+ТекущаяСтрока.НомерСтроки+" таблицы """+НазваниеТаблицы+""" неверно указан период!'");
				бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,, Отказ);
			КонецЕсли;
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-10 (#3393)
		
		// для вида корректировки ЗаСчет сумма прихода должна совпадать с суммой расхода
		Если ВидКорректировки = Перечисления.бит_ВидыКорректировокКонтрольныхЗначений.ЗаСчет
			И ТекущаяСтрока.ВидДвижения = Перечисления.бит_ВидДвиженияНакопления.Приход Тогда
			//Начало_бит_Магомедов_03.08.2012 
			//СуммаПриход = ТекущаяСтрока.Сумма;
			//СуммаРасход = 0;
			//
			//КоличествоПриход = ТекущаяСтрока.Количество;
			//КоличествоРасход = 0;
			//
			//// найдем подчиненные строки
			//СтруктураОтбора = Новый Структура;
			//СтруктураОтбора.Вставить("ВидДвижения", Перечисления.бит_ВидДвиженияНакопления.Расход);
			//СтруктураОтбора.Вставить("ИДВладельца", ТекущаяСтрока.ИД);
			//
			//МассивСтрок = СуммыКорректировок.НайтиСтроки(СтруктураОтбора);
			//
			//Для Каждого ПодчиненнаяСтрока Из МассивСтрок Цикл
			//	СуммаРасход 	 = СуммаРасход + ПодчиненнаяСтрока.Сумма;
			//	КоличествоРасход = КоличествоРасход + ПодчиненнаяСтрока.Количество;
			//КонецЦикла;
			//
			//Если НЕ СуммаПриход = СуммаРасход Тогда
			//	ТекстСообщения = НСтр("ru='В строке № "+ТекущаяСтрока.НомерСтроки+" таблицы ""Увеличение"""
			//					+" сумма корректировки не совпадает с общей суммой корректировки по таблице ""За счет""!'");
			//	бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,, Отказ);
			//КонецЕсли;
			//Если НЕ КоличествоПриход = КоличествоРасход Тогда
			//	ТекстСообщения = НСтр("ru='В строке № "+ТекущаяСтрока.НомерСтроки+" таблицы ""Увеличение"""
			//					+" количество не совпадает с общим количеством по таблице ""За счет""!'");
			//	бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,, Отказ);
			//КонецЕсли;
			
			//Начало_бит_Магомедов_03.08.2012 
			//общая сумма прихода должна совпадать с общей суммой расхода
			СуммаПриход = 0;
			КоличествоПриход = 0;
			СуммаРасход = 0;
			КоличествоРасход = 0;
			// найдем строки приход
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("ВидДвижения", Перечисления.бит_ВидДвиженияНакопления.Приход);
			МассивСтрок = СуммыКорректировок.НайтиСтроки(СтруктураОтбора);
			Для Каждого ПодчиненнаяСтрока Из МассивСтрок Цикл
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-25 (#3149)
				//СуммаПриход 	 = СуммаПриход + ПодчиненнаяСтрока.Сумма-ПодчиненнаяСтрока.СуммаИсполнения;
				//Заменено на:
				СуммаПриход 	 = СуммаПриход + ПодчиненнаяСтрока.Сумма;
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-25 (#3149)
				КоличествоПриход = КоличествоПриход + ПодчиненнаяСтрока.Количество;
			КонецЦикла;
			
			// найдем строки Расход
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("ВидДвижения", Перечисления.бит_ВидДвиженияНакопления.Расход);
			МассивСтрок = СуммыКорректировок.НайтиСтроки(СтруктураОтбора);
			Для Каждого ПодчиненнаяСтрока Из МассивСтрок Цикл
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-25 (#3149)
				//СуммаРасход 	 = СуммаРасход + ПодчиненнаяСтрока.Сумма-ПодчиненнаяСтрока.СуммаИсполнения;
				//Заменено на:
				СуммаРасход 	 = СуммаРасход + ПодчиненнаяСтрока.Сумма;
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-25 (#3149)
				КоличествоРасход = КоличествоРасход + ПодчиненнаяСтрока.Количество;
			КонецЦикла;
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-09 (#3393)
			//Если НЕ СуммаПриход = СуммаРасход Тогда
			//Заменено на:
			Если Не ЗначениеЗаполнено(ок_ВидКорректировки)
			  		И НЕ СуммаПриход = СуммаРасход		 
			Тогда 
				    
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-09 (#3393)
			
				ТекстСообщения = НСтр("ru='Сумма прихода не равна сумме расхода. Документ не будет проведен'");
				бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,, Отказ);
									
			КонецЕсли;
			
			//ОК Калинин М. 170912  "Не должно быть такого контроля"
			//Если НЕ КоличествоПриход = КоличествоРасход Тогда
			//	ТекстСообщения = НСтр("ru='Количество прихода не равно количеству расхода. Документ не будет проведен'");
			//	бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,, Отказ);
			//КонецЕсли;
			//ОК Калинин М. 170912
			
			//Конец_бит_Магомедов_03.08.2012 
		КонецЕсли;
	КонецЦикла;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-10 (#3393)
	Если ок_ВидКорректировки <> ПредопределенноеЗначение("Перечисление.ок_ВидКорректировкиКонтрольныхЗначенийИБюджета.УвеличениеБюджета")
	Тогда 
		ТекстСообщения = ПроверкаПоВидуКорректировки();
		Если НЕ ПустаяСтрока(ТекстСообщения) Тогда 
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,, Отказ);
		КонецЕсли;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-10 (#3393)
	
	// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-19 (#4390)
	ШаблонСообщенияНеЗаполненПроект = НСтр("ru = 'В строке № %1 не заполнено поле «Проект»'");
	Для Каждого СтрокаКорректировок Из СуммыКорректировок Цикл
		Если Не ЗначениеЗаполнено(СтрокаКорректировок.Проект)
			И ОК_ОбщегоНазначения.ТребуетсяЗаполнениеПроектаПоСценарию(СтрокаКорректировок.Период, СтрокаКорректировок.Сценарий) Тогда 
			ТекстСообщения = СтрШаблон(ШаблонСообщенияНеЗаполненПроект, СтрокаКорректировок.НомерСтроки);;
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,Ссылка,"СуммыКорректировок["+(СтрокаКорректировок.НомерСтроки-1)+"].Проект",,Отказ); 
		КонецЕсли;	
	КонецЦикла;
	// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-19 (#4390)
	
КонецПроцедуры

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-09 (#3393)
Функция ПроверкаПоВидуКорректировки()
	
	ТекстСообщения = "";
	
	КопияПриход = СуммыКорректировок.Выгрузить(Новый Структура("ВидДвижения",ПредопределенноеЗначение("Перечисление.бит_ВидДвиженияНакопления.Приход")));
	КопияРасход = СуммыКорректировок.Выгрузить(Новый Структура("ВидДвижения",ПредопределенноеЗначение("Перечисление.бит_ВидДвиженияНакопления.Расход")));
	
	Если ок_ВидКорректировки = ПредопределенноеЗначение("Перечисление.ок_ВидКорректировкиКонтрольныхЗначенийИБюджета.КоррМеждуПолугодиямиБезИзмененияАналитик") Тогда 
		
		КопияПриход.Свернуть("ЦФО,СтатьяОборотов,Аналитика_2", "Сумма");
		КопияРасход.Свернуть("ЦФО,СтатьяОборотов,Аналитика_2", "Сумма");
		
		стрОтбор = Новый Структура("ЦФО,СтатьяОборотов,Аналитика_2");
		ШаблонСтроки = НСтр("ru = 'ЦФО: %1; Статья оборотов: %2; Объект: %3'");
		
		Для Каждого стрПриход Из КопияПриход Цикл 
			
			ЗаполнитьЗначенияСвойств(стрОтбор, стрПриход);
			мНайденныхРасходов = КопияРасход.НайтиСтроки(стрОтбор);
			
			Если мНайденныхРасходов.Количество() = 0 
			 ИЛИ мНайденныхРасходов[0].Сумма<>стрПриход.Сумма	
			Тогда 
				ТекстСообщения = ТекстСообщения + ?(ПустаяСтрока(ТекстСообщения),"",Символы.ПС)
												+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСтроки, стрПриход.ЦФО, стрПриход.СтатьяОборотов, СтрПриход.Аналитика_2);			
												
			КонецЕсли;
			
		КонецЦикла;	
		
		Если НЕ ПустаяСтрока(ТекстСообщения) Тогда 
			ТекстСообщения = НСтр("ru = 'Суммы по аналитикам не равны:'") + Символы.ПС + ТекстСообщения + Символы.ПС + НСтр("ru = 'Проведение не выполнено.'"); 
		КонецЕсли;			
				
	ИначеЕсли ок_ВидКорректировки = ПредопределенноеЗначение("Перечисление.ок_ВидКорректировкиКонтрольныхЗначенийИБюджета.КоррВПределахФункцийФД") Тогда 
			
		КопияПриход.Свернуть("Период", "Сумма");
		КопияРасход.Свернуть("Период", "Сумма");
		
		стрОтбор = Новый Структура("Период");
		ШаблонСтроки = НСтр("ru = 'Период: %1'");
		
		Для Каждого стрПриход Из КопияПриход Цикл 
			
			ЗаполнитьЗначенияСвойств(стрОтбор, стрПриход);
			мНайденныхРасходов = КопияРасход.НайтиСтроки(стрОтбор);
			
			Если мНайденныхРасходов.Количество() = 0 
			 ИЛИ мНайденныхРасходов[0].Сумма<>стрПриход.Сумма	
			Тогда 
				ТекстСообщения = ТекстСообщения + ?(ПустаяСтрока(ТекстСообщения),"",Символы.ПС)
												+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСтроки, стрПриход.Период);			
												
			КонецЕсли;
			
		КонецЦикла;	
		
		Если НЕ ПустаяСтрока(ТекстСообщения) Тогда 
			ТекстСообщения = НСтр("ru = 'Суммы по периодам не равны:'") + Символы.ПС + ТекстСообщения + Символы.ПС + НСтр("ru = 'Проведение не выполнено.'"); 
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстСообщения)
	   И КопияПриход.Итог("Сумма")<>КопияРасход.Итог("Сумма")
	Тогда 
	    ТекстСообщения = НСтр("ru = 'Суммы прихода и расхода не равны. 
							        |Проведение не выполнено.'");
	КонецЕсли;
	
	Возврат ТекстСообщения;
	
КонецФункции
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-09 (#3393)

// бит_DFedotov Процедура - обработчик события "ОбработкаЗаполнения"
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	//+ Сенин С. CR#2362 26.07.2016
	//формирование структуры для заполнения, если ввели на основании
	//
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.бит_ФормаВводаБюджета")  Тогда
		
		ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		ДанныеЗаполнения = Новый Структура;
			ДанныеЗаполнения.Вставить("ДокОснование", ЭтотОбъект.ДокументОснование);
		
		//ТЗСтрок = ВвестиНаОснованииНаСервере();
		ТЗСтрок = ЭтотОбъект.ДокументОснование.БДДС.Выгрузить();		
		
		Если ЭтотОбъект.ДокументОснование.Сценарий = Справочники.СценарииПланирования.Заявка_Инвест ИЛИ ЭтотОбъект.ДокументОснование.Сценарий = Справочники.СценарииПланирования.Заявка_У Тогда 
			ТЗСтрок.ЗаполнитьЗначения(Документы.бит_ФормаВводаБюджета.ПустаяСсылка(),"Аналитика_1");
		ИначеЕсли ЭтотОбъект.ДокументОснование.Сценарий = Справочники.СценарииПланирования.Контракт_Инвест Тогда  

			//{ bit_SVKushnirenko 24.03.2017 #2711
			//ИсходныйКод{
			//ТЗСтрок.ЗаполнитьЗначения(ЭтотОбъект.бит_БК_НомерЗаявки,"Аналитика_1");
			//}ИсходныйКод
			ТЗСтрок.ЗаполнитьЗначения(ДанныеЗаполнения.ДокОснование.бит_БК_НомерЗаявки, "Аналитика_1");
			//} bit_SVKushnirenko 24.03.2017 #2711
		КонецЕсли;	
		
		ДанныеЗаполнения.Вставить("МассивСтрокПревышения", ТЗСтрок);
		ДанныеЗаполнения.Вставить("ВыборСуммы", "Полностью");
		ДанныеЗаполнения.Вставить("Дата", ТекущаяДата());
		ДанныеЗаполнения.Вставить("ДокОснование", ЭтотОбъект.ДокументОснование);
		
	КонецЕсли; 
	//- Сенин С. CR#2362 26.07.2016
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("ДокОснование") Тогда
		// если документ создается на основании другого, то в данные заполнения надо передавать структуру
		// с обязательными ключами:
		//	- ДокОснование - ДокументСсылка
		//  - МассивСтрокПревышения - адрес временного хранилища
		Если ТипЗнч(ДанныеЗаполнения.ДокОснование) = Тип("ДокументСсылка.бит_ФормаВводаБюджета") Тогда
			Если ДанныеЗаполнения.Свойство("Дата") Тогда 
				Дата = ДанныеЗаполнения.Дата;
			Иначе 
				Дата = ТекущаяДата();
			КонецЕсли;
			
			ВидОперации 	 = Перечисления.бит_ВидыОперацийКорректировкаКонтрольныхЗначений.КонтрольБюджета;
			ВидКорректировки = Перечисления.бит_ВидыКорректировокКонтрольныхЗначений.ЗаСчет;
			
			//Сценарий 		  = ДанныеЗаполнения.ДокОснование.Сценарий;
			//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-06-08 (#2841)
			Если ДополнительныеСвойства.Свойство("ВводОснованияИзФормыДокумента") 
				И ДанныеЗаполнения.ДокОснование.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный Тогда
				Сценарий = Справочники.СценарииПланирования.Заявка_У;
			ИначеЕсли ДанныеЗаполнения.ДокОснование.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный Тогда	
				Сценарий = Справочники.СценарииПланирования.Бюджет_У;
			//Если ДанныеЗаполнения.ДокОснование.Сценарий = справочники.СценарииПланирования.Бюджет_А или
			ИначеЕсли ДанныеЗаполнения.ДокОснование.Сценарий = справочники.СценарииПланирования.Бюджет_А или
			//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-06-08 (#2841)
				ДанныеЗаполнения.ДокОснование.Сценарий = справочники.СценарииПланирования.Бюджет_Инвест или
				ДанныеЗаполнения.ДокОснование.Сценарий = справочники.СценарииПланирования.Бюджет_У тогда
				Сценарий 		  = ДанныеЗаполнения.ДокОснование.Сценарий;
			иначе  				
				Сценарий 		  = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролирующий сценарий", ДанныеЗаполнения.ДокОснование.Сценарий);
			конецЕсли;
			
			СценарийКонтролируемый 		  = ДанныеЗаполнения.ДокОснование.Сценарий;
			//ДокументОснование = ДанныеЗаполнения.ДокОснование;
			ДокументОснование = ДанныеЗаполнения.ДокОснование;
			Если ДанныеЗаполнения.Свойство("МассивСтрокПревышения") Тогда 
				МассивСтрокПревышения = ДанныеЗаполнения.МассивСтрокПревышения;
				Если ЭтоАдресВременногоХранилища(ДанныеЗаполнения.МассивСтрокПревышения) Тогда 
					МассивСтрокПревышения = ПолучитьИзВременногоХранилища(ДанныеЗаполнения.МассивСтрокПревышения);
				КонецЕсли;
			КонецЕсли;
			Если ДанныеЗаполнения.Свойство("МассивСтрокПревышения") 
				И ТипЗнч(МассивСтрокПревышения) = Тип("ТаблицаЗначений") Тогда
				
				СуммыКорректировок.Очистить();
				
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-03 (#3078)
				мдОбъекта = Метаданные();
				мдЗнчПеречисления = Метаданные.Перечисления.бит_БК_ИзмеренияКонтроляБюджета.ЗначенияПеречисления;					
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-03 (#3078)

				Для Каждого ТекущаяСтрока Из МассивСтрокПревышения Цикл
					//ОК Калинин М. 170912 "если пользователь выбирает вариант "Только сверхбюджета", в корр-ку должны переноситься только строки, где сумма сверхбюджета >0, а не все подряд"
					//1c-izhtc spawn 26.08.15 (
					//если ДанныеЗаполнения.ВыборСуммы = "Сверхбюджета" и ТекущаяСтрока.бит_БК_СуммаЗаРамкамиБюджетаБезНДС<=0 тогда
					если ДанныеЗаполнения.ВыборСуммы = "Сверхбюджета" и ТекущаяСтрока.бит_БК_СуммаБезНДС<=0 тогда
						//1c-izhtc spawn 26.08.15 )
						продолжить;
					конецесли;	
					//ОК Калинин М. 170912 
					//+Сундукова 30.03.2016
					если ДанныеЗаполнения.ВыборСуммы = "Сверхбюджета" и ТекущаяСтрока.БИТ_СуммаСверхБюджета<=0 тогда					
						продолжить;
					конецесли;	
					//-Сундукова 30.03.2016
					НоваяСтрока = СуммыКорректировок.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
					
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-03 (#3078)
					ОчиститьРеквизитыПоИзмерениямКонтроляБюджета(НоваяСтрока, мдОбъекта, мдЗнчПеречисления);										
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-03 (#3078)
					
					УстановитьИДСтроки(НоваяСтрока);
					
					НоваяСтрока.ВидДвижения = Перечисления.бит_ВидДвиженияНакопления.Приход;
					//+Сундукова 18.05.2010 №2362
					//НоваяСтрока.Сценарий = СценарийКонтролируемый;
					
					Если СценарийКонтролируемый = справочники.СценарииПланирования.Бюджет_А или
						СценарийКонтролируемый = справочники.СценарииПланирования.Бюджет_Инвест или
						СценарийКонтролируемый = справочники.СценарииПланирования.Бюджет_У тогда
						НоваяСтрока.Сценарий = СценарийКонтролируемый;
					иначе
						НоваяСтрока.Сценарий = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролирующий сценарий", ТекущаяСтрока.Сценарий);
					КонецЕсли;
					
					//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-06-08 (#2841)
					Если ДополнительныеСвойства.Свойство("ВводОснованияИзФормыДокумента") 
						И ДокументОснование.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный Тогда
						НоваяСтрока.Сценарий = Справочники.СценарииПланирования.Заявка_У;
					ИначеЕсли ЭтотОбъект.ДокументОснование.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный Тогда	
						НоваяСтрока.Сценарий = Справочники.СценарииПланирования.Бюджет_У;
					КонецЕсли;	
					//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-06-08 (#2841)
					
					Если ТекущаяСтрока.Сценарий = справочники.СценарииПланирования.Заявка_Инвест или
						ТекущаяСтрока.Сценарий = справочники.СценарииПланирования.Заявка_У
						//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-18 (#3078)
						//или ТекущаяСтрока.Сценарий = справочники.СценарииПланирования.Контракт_Инвест 
						//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-18 (#3078)
					тогда
						НоваяСтрока.Аналитика_1 =  ДанныеЗаполнения.ДокОснование;
					КонецЕсли;	
					//-Сундукова 18.05.2010 №2362
					
					//+ Сенин С. CR#2670 23.09.2016
					Если НоваяСтрока.Сценарий = справочники.СценарииПланирования.Бюджет_А или
						НоваяСтрока.Сценарий = справочники.СценарииПланирования.Бюджет_Инвест или
						НоваяСтрока.Сценарий = справочники.СценарииПланирования.Бюджет_У тогда
						НоваяСтрока.Аналитика_1 =  Неопределено;
					КонецЕсли;	
					//- Сенин С. CR#2670 23.09.2016
					
					
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-07 (#3078)
					НоваяСтрока.СуммаИсполнения = 0;
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-07 (#3078)
					
					//НоваяСтрока.Сумма 		= -ТекущаяСтрока.Разность;
					//НоваяСтрока.Количество 	= -ТекущаяСтрока.КоличествоРазность;
					//1c-izhtc spawn 26.08.15 (
					//НоваяСтрока.Сумма 			= ?(ДанныеЗаполнения.ВыборСуммы = "Полностью",ТекущаяСтрока.бит_БК_СуммаБезНДС,ТекущаяСтрока.бит_БК_СуммаЗаРамкамиБюджетаБезНДС);
					//+Сундукова 30.03.2016
					//НоваяСтрока.Сумма 			= ?(ДанныеЗаполнения.ВыборСуммы = "Полностью",ТекущаяСтрока.бит_БК_СуммаБезНДС,ТекущаяСтрока.бит_БК_СуммаБезНДС);
					НоваяСтрока.Сумма 			= ?(ДанныеЗаполнения.ВыборСуммы = "Полностью",ТекущаяСтрока.бит_БК_СуммаБезНДС,ТекущаяСтрока.БИТ_СуммаСверхБюджета);
					//-Сундукова 30.03.2016
					//1c-izhtc spawn 26.08.15 )
					бит_МеханизмДопИзмерений.ИнициализироватьЗначенияДопИзмерений(НоваяСтрока
					,мИзмеренияДоп
					,мНастройкиИзмерений);
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	//+ Сенин С. CR#2362 26.07.2016
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.бит_ок_ОперацияАксапты")  
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-26 (#ПроектИнтеграцияАксапта12)
	ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.бит_ок_ОперацияАксапты12")
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-26 (#ПроектИнтеграцияАксапта12)
	//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-06-07 (#2842)
	ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
	ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.бит_БюджетнаяОперация")
	//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-06-07 (#2842)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-11 (#3078)
	ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеДопРасходов")
	ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КорректировкаПоступления")
	ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеНМА")
	ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета")
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-11 (#3078)
	//ОКЕЙ Рычаков А.С.(СофтЛаб)2020-07-13 Начало (#3774)
	ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.бит_ЗаявкаНаРасходованиеСредств")
	//ОКЕЙ Рычаков А.С.(СофтЛаб)2020-07-13 Конец (#3774)
	Тогда
		
		ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("ДокОснование", ЭтотОбъект.ДокументОснование);
			
		//ТЗСтрок = ВвестиНаОснованииНаСервере();
		//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-06-07 (#2842)
		//Набор = РегистрыНакопления.бит_ОборотыПоБюджетам.СоздатьНаборЗаписей();
		//Набор.Отбор.Регистратор.Значение = ЭтотОбъект.ДокументОснование.Ссылка;
		//Набор.Прочитать();
		//Если Набор.Количество()=0 Тогда
		//	Возврат;		
		//КонецЕсли; 
		//
		//Сценарий = набор[0].Сценарий; 				                 
		//ТЗСтрок = Набор.Выгрузить();
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-21 (#3078)
		ВидОперации 				 = ПредопределенноеЗначение("Перечисление.бит_ВидыОперацийКорректировкаКонтрольныхЗначений.КонтрольБюджета");
		ВидКорректировки 			 = ПредопределенноеЗначение("Перечисление.бит_ВидыКорректировокКонтрольныхЗначений.ЗаСчет");		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-21 (#3078)
		
		ТЗСтрок = ПолучитьДанныеКонтрольныеЗначенияБюджетовПоДокументу(ЭтотОбъект.ДокументОснование);
		Если ТЗСтрок.Количество() = 0 Тогда
			Возврат;		
		КонецЕсли;
		Сценарий = ТЗСтрок[0].Сценарий; 				                 
				
		//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-06-07 (#2842)
		
		СценарийКонтролируемый 		 = Сценарий;
		
		//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-06-13 (#2841)
		//Аналитика заполняется из данных регистра накопления "КонтрольныеЗначенияБюджетов"
		
		//Если Сценарий = Справочники.СценарииПланирования.Заявка_Инвест ИЛИ Сценарий = Справочники.СценарииПланирования.Заявка_У Тогда 
		//	ТЗСтрок.ЗаполнитьЗначения(Документы.бит_ФормаВводаБюджета.ПустаяСсылка(),"Аналитика_1");
		//ИначеЕсли Сценарий = Справочники.СценарииПланирования.Контракт_Инвест Тогда  
		//	//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-06-07 (#2841)
		//	//Ошибка, у объекта отсутствует реквизит бит_БК_НомерЗаявки
		//	//ТЗСтрок.ЗаполнитьЗначения(ЭтотОбъект.бит_БК_НомерЗаявки,"Аналитика_1");
		//	ТЗСтрок.ЗаполнитьЗначения(Неопределено,"Аналитика_1");
		//	//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-06-07 (#2841)
		//КонецЕсли;	
		//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-06-13 (#2841)
						
		ДанныеЗаполнения.Вставить("МассивСтрокПревышения", ТЗСтрок);
		ДанныеЗаполнения.Вставить("ВыборСуммы", "Полностью");
		ДанныеЗаполнения.Вставить("Дата", ТекущаяДата());
		ДанныеЗаполнения.Вставить("ДокОснование", ЭтотОбъект.ДокументОснование);
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-21 (#3078)
		//Перенесено выше:
		//ВидОперации 	 = Перечисления.бит_ВидыОперацийКорректировкаКонтрольныхЗначений.КонтрольБюджета;
		//ВидКорректировки = Перечисления.бит_ВидыКорректировокКонтрольныхЗначений.ЗаСчет;
		//СценарийКонтролируемый 		  = Сценарий;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-21 (#3078)
		
			//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-06-14 (#2841)
			//Если Не (Сценарий = справочники.СценарииПланирования.Бюджет_А 		или
			//	Сценарий = справочники.СценарииПланирования.Бюджет_Инвест 	или
			//	Сценарий = справочники.СценарииПланирования.Бюджет_У 			) тогда
			//	Сценарий = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролирующий сценарий", Сценарий);
			//конецЕсли;
			//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-06-14 (#2841)
			
			СуммыКорректировок.Очистить();
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-03 (#3078)
			мдОбъекта = Метаданные();
			мдЗнчПеречисления = Метаданные.Перечисления.бит_БК_ИзмеренияКонтроляБюджета.ЗначенияПеречисления;					
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-03 (#3078)

				Для Каждого ТекущаяСтрока Из ТЗСтрок Цикл

					НоваяСтрока = СуммыКорректировок.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
					
					НоваяСтрока.ИД = Строка(Новый УникальныйИдентификатор());
					
					//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-06-07 (#2841)
					//НоваяСтрока.ВидДвижения = Перечисления.бит_ВидДвиженияНакопления.Приход;
					НоваяСтрока.ВидДвижения = Перечисления.бит_ВидДвиженияНакопления.Расход;
					//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-06-07 (#2841)
					
					//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-06-14 (#2841)
					//Если СценарийКонтролируемый = справочники.СценарииПланирования.Бюджет_А или
					//	СценарийКонтролируемый = справочники.СценарииПланирования.Бюджет_Инвест или
					//	СценарийКонтролируемый = справочники.СценарииПланирования.Бюджет_У тогда
					//	НоваяСтрока.Сценарий = СценарийКонтролируемый;
					//иначе
					//	НоваяСтрока.Сценарий = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролирующий сценарий", ТекущаяСтрока.Сценарий);
					//КонецЕсли;
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-24 (#3149)
					//НоваяСтрока.Сценарий = ТекущаяСтрока.Сценарий;					
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-24 (#3149)
					//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-06-14 (#2841)
					
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-03 (#3078)
					//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-26 (#ПроектИнтеграцияАксапта12)
					//Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.бит_ок_ОперацияАксапты") Тогда 
					Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.бит_ок_ОперацияАксапты") 
						ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.бит_ок_ОперацияАксапты12") Тогда 
					//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-26 (#ПроектИнтеграцияАксапта12)
						ОчиститьРеквизитыПоИзмерениямКонтроляБюджета(НоваяСтрока, мдОбъекта, мдЗнчПеречисления);										
					КонецЕсли;
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-03 (#3078)
					
					//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-06-13 (#2841)
					//Если ТекущаяСтрока.Сценарий = справочники.СценарииПланирования.Заявка_Инвест или
					//	ТекущаяСтрока.Сценарий = справочники.СценарииПланирования.Заявка_У или
					//	ТекущаяСтрока.Сценарий = справочники.СценарииПланирования.Контракт_Инвест тогда
					//	НоваяСтрока.Аналитика_1 =  ДанныеЗаполнения.ДокОснование;
					//КонецЕсли;	
					//
					////+ Сенин С. CR#2670 23.09.2016
					//Если НоваяСтрока.Сценарий = справочники.СценарииПланирования.Бюджет_А или
					//	НоваяСтрока.Сценарий = справочники.СценарииПланирования.Бюджет_Инвест или
					//	НоваяСтрока.Сценарий = справочники.СценарииПланирования.Бюджет_У тогда
					//	НоваяСтрока.Аналитика_1 =  Неопределено;
					//КонецЕсли;	
					////- Сенин С. CR#2670 23.09.2016
					//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-06-13 (#2841)
					
					//НоваяСтрока.Сумма 			= ?(ДанныеЗаполнения.ВыборСуммы = "Полностью",ТекущаяСтрока.бит_БК_СуммаБезНДС,ТекущаяСтрока.БИТ_СуммаСверхБюджета);
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-10 (#3078)
					////ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-06-07 (#2841)
					//НоваяСтрока.СуммаИсполнения		= ТекущаяСтрока.СуммаСценарийИсполнение;
					////ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-06-07 (#2841)
					//Заменено на:
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-15 (#3156)
					//НоваяСтрока.СуммаИсполнения		= ТекущаяСтрока.СуммаСценарийКонтроль;
					//Заменено на:
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-24 (#3149)
					//НоваяСтрока.Сумма				= ТекущаяСтрока.СуммаСценарийКонтроль;
					//НоваяСтрока.СуммаИсполнения		= ТекущаяСтрока.СуммаСценарийКонтроль;
					//НоваяСтрока.СуммаСНДС			= ТекущаяСтрока.СуммаСценарийКонтрольСНДС;										
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-24 (#3149)
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-15 (#3156)
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-10 (#3078)
					
					бит_МеханизмДопИзмерений.ИнициализироватьЗначенияДопИзмерений(НоваяСтрока
																					,мИзмеренияДоп
																					,мНастройкиИзмерений);
				КонецЦикла;
				
	//- Сенин С. CR#2362 26.07.2016
			
	иначе //запоняем пустой документ
		ВидОперации 	 = Перечисления.бит_ВидыОперацийКорректировкаКонтрольныхЗначений.КонтрольБюджета;
		ВидКорректировки = Перечисления.бит_ВидыКорректировокКонтрольныхЗначений.ЗаСчет;
		//Начало_бит_Магомедов_13.07.2012 
		СценарийБюджетА = Справочники.СценарииПланирования.Бюджет_А;
		СценарийБюджетУ = Справочники.СценарииПланирования.Бюджет_У;
		СценарийБюджетИнвест = Справочники.СценарииПланирования.Бюджет_Инвест;
		Дата = ТекущаяДата();	
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2021-04-20 (#4130)
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") 
		   И ДанныеЗаполнения.Свойство("ок_ВидКорректировки") Тогда 
			ок_ВидКорректировки = ДанныеЗаполнения.ок_ВидКорректировки;
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2021-04-20 (#4130)
	КонецЕсли;
	
	ЗаполнитьШапкуДокумента();
	
КонецПроцедуры

//ОК Калинин М. 010713
Процедура ЗаполнитьКолонку(параметры) Экспорт
	
	значениеИсточник=СуммыКорректировок[параметры.НомерСтрокиИсточника][параметры.КолонкаИмя];
	изменяемыеСтроки=СуммыКорректировок.НайтиСтроки(новый структура("ВидДвижения",параметры.ВидДвижения));
	Для каждого стр из  изменяемыеСтроки
		Цикл
		стр[параметры.КолонкаИмя]=значениеИсточник;	
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-04 (#3078)
		Если параметры.КолонкаИмя = "Сценарий" Тогда 
			стр.Аналитика_1 = Неопределено;	
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-04 (#3078)
	КонецЦикла;	
	
КонецПроцедуры	
//ОК Калинин М.

//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-06-07 (#2842)
Функция ПолучитьДанныеКонтрольныеЗначенияБюджетовПоДокументу(Документ)
	
	Запрос 			 = Новый Запрос;
	Запрос.Текст 	 = 
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-24 (#3149)
	#Область СтарыйЗапрос
	
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-04 (#3078)
	////"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	////|	*	
	////|ИЗ
	////|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов КАК бит_КонтрольныеЗначенияБюджетов
	////|ГДЕ
	////|	бит_КонтрольныеЗначенияБюджетов.Регистратор = &Регистратор	
	////|	И бит_КонтрольныеЗначенияБюджетов.Активность";
	////Заменено на:
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	бит_КонтрольныеЗначенияБюджетов.Период КАК Период,
	//|	бит_КонтрольныеЗначенияБюджетов.Сценарий КАК Сценарий,
	//|	бит_КонтрольныеЗначенияБюджетов.ЦФО КАК ЦФО,
	//|	бит_КонтрольныеЗначенияБюджетов.СтатьяОборотов КАК СтатьяОборотов,
	//|	бит_КонтрольныеЗначенияБюджетов.Контрагент КАК Контрагент,
	//|	бит_КонтрольныеЗначенияБюджетов.ДоговорКонтрагента КАК ДоговорКонтрагента,
	//|	бит_КонтрольныеЗначенияБюджетов.Проект КАК Проект,
	//|	бит_КонтрольныеЗначенияБюджетов.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	//|	бит_КонтрольныеЗначенияБюджетов.БанковскийСчет КАК БанковскийСчет,
	//|	бит_КонтрольныеЗначенияБюджетов.СценарийКонтролируемый КАК СценарийКонтролируемый,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_1 КАК Аналитика_1,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_2 КАК Аналитика_2,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_3 КАК Аналитика_3,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_4 КАК Аналитика_4,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_5 КАК Аналитика_5,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_6 КАК Аналитика_6,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_7 КАК Аналитика_7,
	//|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтроль) КАК СуммаСценарийКонтроль,
	//|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтрольСНДС) КАК СуммаСценарийКонтрольСНДС,
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-15 (#3156)
	////|	бит_КонтрольныеЗначенияБюджетов.бит_БК_Организация КАК ок_Организация,
	////|	бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтроль КАК СуммаСценарийИсполнение
	////Заменено на:
	//|	бит_КонтрольныеЗначенияБюджетов.бит_БК_Организация КАК ок_Организация,
	//|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтроль) КАК СуммаСценарийИсполнение
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-15 (#3156)
	//
	//|ИЗ
	//|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов КАК бит_КонтрольныеЗначенияБюджетов
	//|ГДЕ
	//|	бит_КонтрольныеЗначенияБюджетов.Регистратор = &Регистратор
	//|	И (бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтроль <> 0
	//|			ИЛИ бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтрольСНДС <> 0)
	//|	И бит_КонтрольныеЗначенияБюджетов.Активность
	//|	И ТИПЗНАЧЕНИЯ(бит_КонтрольныеЗначенияБюджетов.Регистратор) <> ТИП(Документ.СписаниеСРасчетногоСчета)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	бит_КонтрольныеЗначенияБюджетов.Период,
	//|	бит_КонтрольныеЗначенияБюджетов.СтатьяОборотов,
	//|	бит_КонтрольныеЗначенияБюджетов.Сценарий,
	//|	бит_КонтрольныеЗначенияБюджетов.ЦФО,
	//|	бит_КонтрольныеЗначенияБюджетов.Контрагент,
	//|	бит_КонтрольныеЗначенияБюджетов.ДоговорКонтрагента,
	//|	бит_КонтрольныеЗначенияБюджетов.Проект,
	//|	бит_КонтрольныеЗначенияБюджетов.НоменклатурнаяГруппа,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_7,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_1,
	//|	бит_КонтрольныеЗначенияБюджетов.СценарийКонтролируемый,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_4,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_5,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_6,
	//|	бит_КонтрольныеЗначенияБюджетов.БанковскийСчет,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_3,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_2,	
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-15 (#3156)
	////|	бит_КонтрольныеЗначенияБюджетов.бит_БК_Организация,
	////|	бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтроль
	////Заменено на:
	//|	бит_КонтрольныеЗначенияБюджетов.бит_БК_Организация
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-15 (#3156)	
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	бит_КонтрольныеЗначенияБюджетов.Период,
	//|	бит_КонтрольныеЗначенияБюджетов.Сценарий,
	//|	бит_КонтрольныеЗначенияБюджетов.ЦФО,
	//|	бит_КонтрольныеЗначенияБюджетов.СтатьяОборотов,
	//|	бит_КонтрольныеЗначенияБюджетов.Контрагент,
	//|	бит_КонтрольныеЗначенияБюджетов.ДоговорКонтрагента,
	//|	бит_КонтрольныеЗначенияБюджетов.Проект,
	//|	бит_КонтрольныеЗначенияБюджетов.НоменклатурнаяГруппа,
	//|	бит_КонтрольныеЗначенияБюджетов.БанковскийСчет,
	//|	бит_КонтрольныеЗначенияБюджетов.СценарийКонтролируемый,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_1,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_2,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_3,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_4,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_5,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_6,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_7,
	//|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнение),
	//|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнениеСНДС),
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-15 (#3156)
	////|	бит_КонтрольныеЗначенияБюджетов.бит_БК_Организация,
	////|	бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнение
	////Заменено на:
	//|	бит_КонтрольныеЗначенияБюджетов.бит_БК_Организация,
	//|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнение)
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-15 (#3156)	
	//|ИЗ
	//|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов КАК бит_КонтрольныеЗначенияБюджетов
	//|ГДЕ
	//|	бит_КонтрольныеЗначенияБюджетов.Регистратор = &Регистратор
	//|	И (бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнение <> 0
	//|			ИЛИ бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнениеСНДС <> 0)
	//|	И бит_КонтрольныеЗначенияБюджетов.Активность
	//|	И ТИПЗНАЧЕНИЯ(бит_КонтрольныеЗначенияБюджетов.Регистратор) = ТИП(Документ.СписаниеСРасчетногоСчета)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	бит_КонтрольныеЗначенияБюджетов.Период,
	//|	бит_КонтрольныеЗначенияБюджетов.СтатьяОборотов,
	//|	бит_КонтрольныеЗначенияБюджетов.Сценарий,
	//|	бит_КонтрольныеЗначенияБюджетов.ЦФО,
	//|	бит_КонтрольныеЗначенияБюджетов.Контрагент,
	//|	бит_КонтрольныеЗначенияБюджетов.ДоговорКонтрагента,
	//|	бит_КонтрольныеЗначенияБюджетов.Проект,
	//|	бит_КонтрольныеЗначенияБюджетов.НоменклатурнаяГруппа,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_7,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_1,
	//|	бит_КонтрольныеЗначенияБюджетов.СценарийКонтролируемый,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_4,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_5,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_6,
	//|	бит_КонтрольныеЗначенияБюджетов.БанковскийСчет,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_3,
	//|	бит_КонтрольныеЗначенияБюджетов.Аналитика_2,
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-15 (#3156)
	////|	бит_КонтрольныеЗначенияБюджетов.бит_БК_Организация,
	////|	бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнение";
	////Заменено на:
	//|	бит_КонтрольныеЗначенияБюджетов.бит_БК_Организация";
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-15 (#3156)
	//
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-04 (#3078)	
	#КонецОбласти
	//Заменено на:
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_КонтрольныеЗначенияБюджетов.Период КАК Период,
	|	бит_КонтрольныеЗначенияБюджетов.Сценарий КАК Сценарий,
	|	бит_КонтрольныеЗначенияБюджетов.ЦФО КАК ЦФО,
	|	бит_КонтрольныеЗначенияБюджетов.СтатьяОборотов КАК СтатьяОборотов,
	|	бит_КонтрольныеЗначенияБюджетов.Контрагент КАК Контрагент,
	|	бит_КонтрольныеЗначенияБюджетов.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	бит_КонтрольныеЗначенияБюджетов.Проект КАК Проект,
	|	бит_КонтрольныеЗначенияБюджетов.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	бит_КонтрольныеЗначенияБюджетов.БанковскийСчет КАК БанковскийСчет,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_1 КАК Аналитика_1,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_2 КАК Аналитика_2,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_3 КАК Аналитика_3,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_4 КАК Аналитика_4,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_5 КАК Аналитика_5,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_6 КАК Аналитика_6,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_7 КАК Аналитика_7,
	|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтроль) КАК Сумма,
	|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтрольСНДС) КАК СуммаСНДС,
	|	бит_КонтрольныеЗначенияБюджетов.бит_БК_Организация КАК ок_Организация,
	|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтроль) КАК СуммаИсполнения,
	|	ИСТИНА КАК ДвижениеКонтроль
	|ПОМЕСТИТЬ ВТ0_ДвиженияПоКЗБ
	|ИЗ
	|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов КАК бит_КонтрольныеЗначенияБюджетов
	|ГДЕ
	|	бит_КонтрольныеЗначенияБюджетов.Регистратор = &Регистратор
	|	И (бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтроль <> 0
	|			ИЛИ бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтрольСНДС <> 0)
	|	И бит_КонтрольныеЗначенияБюджетов.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_КонтрольныеЗначенияБюджетов.Период,
	|	бит_КонтрольныеЗначенияБюджетов.СтатьяОборотов,
	|	бит_КонтрольныеЗначенияБюджетов.Сценарий,
	|	бит_КонтрольныеЗначенияБюджетов.ЦФО,
	|	бит_КонтрольныеЗначенияБюджетов.Контрагент,
	|	бит_КонтрольныеЗначенияБюджетов.ДоговорКонтрагента,
	|	бит_КонтрольныеЗначенияБюджетов.Проект,
	|	бит_КонтрольныеЗначенияБюджетов.НоменклатурнаяГруппа,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_7,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_1,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_4,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_5,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_6,
	|	бит_КонтрольныеЗначенияБюджетов.БанковскийСчет,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_3,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_2,
	|	бит_КонтрольныеЗначенияБюджетов.бит_БК_Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	бит_КонтрольныеЗначенияБюджетов.Период,
	|	бит_КонтрольныеЗначенияБюджетов.СценарийКонтролируемый,
	|	бит_КонтрольныеЗначенияБюджетов.ЦФО,
	|	бит_КонтрольныеЗначенияБюджетов.СтатьяОборотов,
	|	бит_КонтрольныеЗначенияБюджетов.Контрагент,
	|	бит_КонтрольныеЗначенияБюджетов.ДоговорКонтрагента,
	|	бит_КонтрольныеЗначенияБюджетов.Проект,
	|	бит_КонтрольныеЗначенияБюджетов.НоменклатурнаяГруппа,
	|	бит_КонтрольныеЗначенияБюджетов.БанковскийСчет,	
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_1,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_2,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_3,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_4,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_5,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_6,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_7,
	|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнение),
	|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнениеСНДС),
	|	бит_КонтрольныеЗначенияБюджетов.бит_БК_Организация,
	|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнение),
	|	ЛОЖЬ
	|ИЗ
	|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов КАК бит_КонтрольныеЗначенияБюджетов
	|ГДЕ
	|	бит_КонтрольныеЗначенияБюджетов.Регистратор = &Регистратор
	|	И (бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнение <> 0
	|			ИЛИ бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнениеСНДС <> 0)
	|	И бит_КонтрольныеЗначенияБюджетов.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_КонтрольныеЗначенияБюджетов.Период,
	|	бит_КонтрольныеЗначенияБюджетов.СтатьяОборотов,
	|	бит_КонтрольныеЗначенияБюджетов.ЦФО,
	|	бит_КонтрольныеЗначенияБюджетов.Контрагент,
	|	бит_КонтрольныеЗначенияБюджетов.ДоговорКонтрагента,
	|	бит_КонтрольныеЗначенияБюджетов.Проект,
	|	бит_КонтрольныеЗначенияБюджетов.НоменклатурнаяГруппа,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_7,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_1,
	|	бит_КонтрольныеЗначенияБюджетов.СценарийКонтролируемый,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_4,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_5,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_6,
	|	бит_КонтрольныеЗначенияБюджетов.БанковскийСчет,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_3,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_2,
	|	бит_КонтрольныеЗначенияБюджетов.бит_БК_Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТ0_ДвиженияПоКЗБ.ДвижениеКонтроль КАК ДвижениеКонтроль
	|ПОМЕСТИТЬ ВТ1_ЕстьКонтроль
	|ИЗ
	|	ВТ0_ДвиженияПоКЗБ КАК ВТ0_ДвиженияПоКЗБ
	|ГДЕ
	|	ВТ0_ДвиженияПоКЗБ.ДвижениеКонтроль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ0_ДвиженияПоКЗБ.Период КАК Период,
	|	ВТ0_ДвиженияПоКЗБ.Сценарий КАК Сценарий,
	|	ВТ0_ДвиженияПоКЗБ.ЦФО КАК ЦФО,
	|	ВТ0_ДвиженияПоКЗБ.СтатьяОборотов КАК СтатьяОборотов,
	|	ВТ0_ДвиженияПоКЗБ.Контрагент КАК Контрагент,
	|	ВТ0_ДвиженияПоКЗБ.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ0_ДвиженияПоКЗБ.Проект КАК Проект,
	|	ВТ0_ДвиженияПоКЗБ.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ВТ0_ДвиженияПоКЗБ.БанковскийСчет КАК БанковскийСчет,
	|	ВТ0_ДвиженияПоКЗБ.Аналитика_1 КАК Аналитика_1,
	|	ВТ0_ДвиженияПоКЗБ.Аналитика_2 КАК Аналитика_2,
	|	ВТ0_ДвиженияПоКЗБ.Аналитика_3 КАК Аналитика_3,
	|	ВТ0_ДвиженияПоКЗБ.Аналитика_4 КАК Аналитика_4,
	|	ВТ0_ДвиженияПоКЗБ.Аналитика_5 КАК Аналитика_5,
	|	ВТ0_ДвиженияПоКЗБ.Аналитика_6 КАК Аналитика_6,
	|	ВТ0_ДвиженияПоКЗБ.Аналитика_7 КАК Аналитика_7,
	|	ВТ0_ДвиженияПоКЗБ.Сумма КАК Сумма,
	|	ВТ0_ДвиженияПоКЗБ.СуммаСНДС КАК СуммаСНДС,
	|	ВТ0_ДвиженияПоКЗБ.ок_Организация КАК ок_Организация,
	|	ВТ0_ДвиженияПоКЗБ.СуммаИсполнения КАК СуммаИсполнения,
	|	ВТ0_ДвиженияПоКЗБ.ДвижениеКонтроль КАК ДвижениеКонтроль
	|ИЗ
	|	ВТ0_ДвиженияПоКЗБ КАК ВТ0_ДвиженияПоКЗБ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ1_ЕстьКонтроль КАК ВТ1_ЕстьКонтроль
	|		ПО ВТ0_ДвиженияПоКЗБ.ДвижениеКонтроль <> ВТ1_ЕстьКонтроль.ДвижениеКонтроль
	|ГДЕ
	|	ВТ1_ЕстьКонтроль.ДвижениеКонтроль ЕСТЬ NULL";
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-24 (#3149)

	Запрос.УстановитьПараметр("Регистратор", Документ);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаВозврат 	 = РезультатЗапроса.Выгрузить();
	
	Возврат ТаблицаВозврат;
	
КонецФункции	
//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-06-07 (#2842)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-03 (#3078)
Процедура ОчиститьРеквизитыПоИзмерениямКонтроляБюджета(ТекСтрока, мдОбъекта, мдЗнчПеречисления)
	
	мОчищаемыеРеквизитыТЧ = Новый Массив;
	
	бит_СписокИзмеренийКонтроляБюджета = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Измерения контроля бюджета", ТекСтрока.Сценарий, Новый СписокЗначений, "СписокЗначений"); 					
		
	Для Каждого ЗнчПеречисления ИЗ мдЗнчПеречисления Цикл 
		Если бит_СписокИзмеренийКонтроляБюджета.НайтиПоЗначению(Перечисления.бит_БК_ИзмеренияКонтроляБюджета[ЗнчПеречисления.Имя]) = Неопределено И
			 НЕ ЗнчПеречисления.Имя = "Сценарий" И
			 НЕ ЗнчПеречисления.Имя = "СтатьяОборотов"			           
		Тогда  
			Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента(ЗнчПеречисления.Имя, мдОбъекта, "СуммыКорректировок") Тогда 
				мОчищаемыеРеквизитыТЧ.Добавить(ЗнчПеречисления.Имя);				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;  
	
	Если мОчищаемыеРеквизитыТЧ.Количество()>0 Тогда 
		Для Каждого пИмяРеквизитаТЧ Из мОчищаемыеРеквизитыТЧ Цикл 
			ТекСтрока[пИмяРеквизитаТЧ] = Неопределено;
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-03 (#3078)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-24 (#3393)
Процедура ПриКопировании(ОбъектКопирования)
	
	Если ОбъектКопирования <> Неопределено Тогда 
		ДокументОснование = Неопределено;
		
		соотФД_ЦФО = Документы.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета.ПолучитьДоступныеИнициаторуЦФОДляКорректировки();
		Если соотФД_ЦФО.Получить(ОбъектКопирования.ок_ФункциональныйДиректор)=Неопределено Тогда 
			ок_ФункциональныйДиректор = Неопределено;
			СуммыКорректировок.Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	//ОКЕЙ Рычаков А.С.(СофтЛаб)2020-07-13 Начало (#3774)
	ок_СверхБюджета = Ложь;
	//ОКЕЙ Рычаков А.С.(СофтЛаб)2020-07-13 Конец (#3774
	
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-24 (#3393)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-18 (#3027)
Процедура ПроверитьОстаткиПоКонтрольнымЗначениям(Отказ)
			
	ТаблицаПроверки = ПодготовитьТаблицу();
		
	пПериодВыборки = Дата;
	
	пЗапрос = Новый Запрос;
	пЗапрос.Текст = бит_БК_Общий.ТекстЗапросаКБ();
	
	пЗапрос.УстановитьПараметр("Ссылка"			 , Ссылка);	
	пЗапрос.УстановитьПараметр("ТабЧасть"		 , ТаблицаПроверки);
	пЗапрос.УстановитьПараметр("ШапкаАналитика_1", ПредопределенноеЗначение("Документ.бит_ФормаВводаБюджета.ПустаяСсылка")); 
		
	пТЗРез = пЗапрос.Выполнить().Выгрузить();
	
	пТекстОшибок = "";
	
	Если пТЗРез.Количество() > 0 Тогда 
			
		мдЗнчПеречисления  = Метаданные.Перечисления.бит_БК_ДопИзмеренияКонтроля.ЗначенияПеречисления;
		соотКонтрИзмерения = Новый Соответствие;
		
		пШаблонСообщения   = НСтр("ru = 'По сценарию %1,
								|По аналитике:
								|%2
								|Превышен бюджет периода %3
								|остаток бюджета: %4, сумма в документе: %5, недостаточно: %6'");			
		
		Для Каждого стрТзРез Из пТЗРез Цикл 
			
			Если стрТзРез.СверхБюджетаПризнак = 0 Тогда 
				Продолжить; //Нет превышения по строке
			КонецЕсли;
			
			пПредставлениеАналитикИЗначений = "";
			пВалютаСценария = стрТзРез.Сценарий.Валюта;
			
			бит_СписокИзмеренийКонтроляБюджета = соотКонтрИзмерения.Получить(стрТзРез.Сценарий);
			Если бит_СписокИзмеренийКонтроляБюджета = Неопределено Тогда 
				бит_СписокИзмеренийКонтроляБюджета = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контроль бюджета", стрТзРез.Сценарий, Новый СписокЗначений, "СписокЗначений"); 					
			КонецЕсли;
			
			Для Каждого ЗнчПеречисления ИЗ мдЗнчПеречисления Цикл 
				Если бит_СписокИзмеренийКонтроляБюджета.НайтиПоЗначению(Перечисления.бит_БК_ДопИзмеренияКонтроля[ЗнчПеречисления.Имя]) <> Неопределено Тогда  					
					Если пТЗРез.Колонки.Найти(ЗнчПеречисления.Имя)<>Неопределено Тогда 
						пПредставлениеАналитикИЗначений = пПредставлениеАналитикИЗначений + ?(ПустаяСтрока(пПредставлениеАналитикИЗначений),"",Символы.ПС) + 
																							НСтр("ru = '- %1 «%2»'");
						пПредставлениеАналитикИЗначений = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(пПредставлениеАналитикИЗначений,ЗнчПеречисления.Синоним,
																																				  стрТзРез[ЗнчПеречисления.Имя]);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;  
			
			пПроцентПревышения = 100;
			Если стрТзРез.ОстатокДоОперации > 0 Тогда 				
				пПроцентПревышения = Окр(стрТзРез.ОстатокПослеОперации/стрТзРез.ОстатокДоОперации,0);
				пПроцентПревышения = ?(пПроцентПревышения<0,-1,1)*пПроцентПревышения
			КонецЕсли;
			
			пТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(пШаблонСообщения, стрТзРез.СценарийКонтроллирующий,
																									 пПредставлениеАналитикИЗначений,
																									 Формат(стрТзРез.ИсхПериод,"ДФ=dd.MM.yyyy"),
																									 ОбщегоНазначенияБПВызовСервера.ФорматСумм(стрТзРез.ОстатокДоОперации,пВалютаСценария,"0.00"),
																									 ОбщегоНазначенияБПВызовСервера.ФорматСумм(стрТзРез.СуммаОперации,пВалютаСценария,"0.00"),
																									 ОбщегоНазначенияБПВызовСервера.ФорматСумм(?(стрТзРез.ОстатокПослеОперации<0,-1*стрТзРез.ОстатокПослеОперации,стрТзРез.ОстатокПослеОперации),пВалютаСценария,"0.00"));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(пТекстОшибки);
			
			пТекстОшибок = пТекстОшибок + ?(ПустаяСтрока(пТекстОшибок),"",Символы.ПС) + пТекстОшибки;
			
			//ОКЕЙ Рычаков А.С.(СофтЛаб)2020-07-13 Начало (#3774)
			//Отказ = Истина;
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-22 (#3925)
			//Если Не ок_СверхБюджета Или Не УправлениеДоступом.ЕстьРоль("ок_ПроведениеККЗиБ_СверхБюджета") Тогда 
			ок_ПроведениеККЗиБ_СверхБюджета = бит_ПраваДоступа.ПолучитьЗначениеДопПраваПользователя(
												   бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь"),
	 					                           ПредопределенноеЗначение("ПланВидовХарактеристик.бит_ДополнительныеПраваПользователей.ок_ПроведениеККЗиБ_СверхБюджета"));
			Если Не ок_СверхБюджета 
				ИЛИ Не ок_ПроведениеККЗиБ_СверхБюджета Тогда 
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-22 (#3925)
				Отказ = Истина;
			КонецЕсли;	
			//ОКЕЙ Рычаков А.С.(СофтЛаб)2020-07-13 Конец (#3774)
			
		КонецЦикла;	
	КонецЕсли; 
	
	ДополнительныеСвойства.Вставить("ТекстОшибок", пТекстОшибок);
	
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-18 (#3027)


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

ПолучитьСтатусМодуль();

мВизыПользователя          = бит_Визирование.ПолучитьВизыПользователя(ПользователиКлиентСервер.ТекущийПользователь(),ЭтотОбъект);	
мСписокВизПользователя     = Новый СписокЗначений;

РезСтруктура   = бит_Визирование.ПолучитьСтатусОбъекта(Ссылка);
мТекущийСтатус = ?(ЗначениеЗаполнено(РезСтруктура.Статус),РезСтруктура.Статус,Справочники.бит_СтатусыОбъектов.ПустаяСсылка());
мДатаИзмененияСтатуса = РезСтруктура.Дата;

мНастройкиПрограммы = Новый Соответствие;

мИзмеренияДоп       = бит_Бюджетирование.ПолучитьИзмеренияБюджетирования("Дополнительные","Синоним");
мНастройкиИзмерений = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("бит_НастройкиДополнительныхИзмерений");

мРежимОбновленияВиз = Константы.бит_РежимОбновленияПеречняВиз.Получить();

#КонецЕсли