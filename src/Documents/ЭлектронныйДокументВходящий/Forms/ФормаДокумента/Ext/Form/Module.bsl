//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-02-08 (#3997)
&НаКлиенте
Перем ок_ТекущийСтатусДокумента;
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-02-08 (#3997)

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	//ОК(СофтЛаб) Вдовиченко Г.В. 20181101 №3103
	ок_УправлениеФормами.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	//ОК(СофтЛаб) Вдовиченко Г.В. 20181101 №3103
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЭлектронноеВзаимодействиеСлужебныйКлиент.ЗаблокироватьОткрытиеФормыНаМобильномКлиенте(Отказ);
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-02-08 (#3997)
	ПолученныеРеквизиты = ОК_ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Объект.Ссылка, "ок_Статус");
	ок_ТекущийСтатусДокумента = ПолученныеРеквизиты.ок_Статус;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-02-08 (#3997) 
	
	//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-08-21 (#3816)
	ок_УправлениеФормамиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	//ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-08-21 (#3816) 
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ТолькоПросмотр = НЕ (ОбменСКонтрагентамиСлужебный.ЭтоПрямойОбмен(Объект.СпособОбменаЭД)
		И (Объект.СостояниеЭДО = Перечисления.СостоянияВерсийЭД.НаУтверждении
			ИЛИ Объект.СостояниеЭДО = Перечисления.СостоянияВерсийЭД.НаПодписи));
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	Элементы.ТипЭлементаВерсииЭД.Видимость = Объект.ВидЭД <> Перечисления.ВидыЭД.ПроизвольныйЭД;
	Элементы.ТипДокумента.Видимость = Объект.ВидЭД = Перечисления.ВидыЭД.ПроизвольныйЭД;
	
	ИспользуютсяДоговорыКонтрагентов = ОбменСКонтрагентамиПовтИсп.ИспользуютсяДоговорыКонтрагентов();
	Элементы.ДоговорКонтрагента.Видимость = ИспользуютсяДоговорыКонтрагентов;
	
	Элементы.ОбратныйАдрес.Видимость = ЗначениеЗаполнено(Объект.СпособОбменаЭД)
		И ОбменСКонтрагентамиСлужебный.ЭтоПрямойОбмен(Объект.СпособОбменаЭД);
	
КонецПроцедуры


#КонецОбласти

//ОК(СофтЛаб) Вдовиченко Г.В. 20181101 №3103

#Область ОК

&НаКлиенте
Процедура ок_НомерЗаявкиПриИзменении(Элемент) Экспорт
	Если Не ЗначениеЗаполнено(Объект.ок_Инициатор) И ЗначениеЗаполнено(Объект.ок_НомерЗаявки) Тогда
		Объект.ок_Инициатор = ИнициаторЗаявки(Объект.ок_НомерЗаявки);
	КонецЕсли;	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ИнициаторЗаявки(Заявка)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Заявка, "бит_БК_Инициатор");
КонецФункции

//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-05-13 (#3340)
&НаКлиенте
Процедура ок_ПослеЗаписи(ПараметрыЗаписи) Экспорт
	
	Оповестить("ок_ЗаписанВходящийЭД", Объект.Ссылка);
	
КонецПроцедуры
//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-05-13 (#3340)

//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-08-05 (#3364)

&НаКлиенте
Процедура ок_ЗагружаемыеДокументыФормироватьПриИзменении(Элемент) Экспорт
	
	ок_УправлениеФормамиКлиент.ОбработатьИзменениеФлажкаЗагружаемыеДокументы(ЭтотОбъект);
	
	ок_УправлениеФормамиКлиент.ЭлектронныйДокументВходящий_ФормаДокумента_УправлениеЭлементами(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ок_АвтоматическиСоздаватьДокументПоступленияПослеСогласованияПриИзменении(Элемент) Экспорт
	
	ок_УправлениеФормамиКлиент.ЭлектронныйДокументВходящий_ФормаДокумента_УправлениеЭлементами(ЭтотОбъект);	
	
КонецПроцедуры

&НаКлиенте
Процедура ок_СоздаватьУчетныйДокументКопированиемПриИзменении(Элемент) Экспорт
	
	ок_УправлениеФормамиКлиент.ЭлектронныйДокументВходящий_ФормаДокумента_УправлениеЭлементами(ЭтотОбъект);	
	
КонецПроцедуры

&НаСервере
Процедура ок_ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-02-08 (#3997) 
	Если ТекущийОбъект.ок_Статус <> Объект.Ссылка.ок_Статус Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("РучноеИзменениеСтатуса", Истина);
	КонецЕсли;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-02-08 (#3997)
	
	ок_УправлениеФормами.ПередЗаписьюНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-02-08 (#3997)
&НаКлиенте
Процедура ок_СтатусПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Ссылка) И бит_Визирование.ОпределитьКоличествоВиз(Новый Структура("Объект", Объект.Ссылка)) > 0 Тогда
		ТекстВопроса = "Обнаружен сформированный маршрут согласования. Для изменения статуса документа на " + Объект.ок_Статус + " требуется удалить маршрут согласования. Очистить маршрут?";
		ПоказатьВопрос(Новый ОписаниеОповещения("ОтменитьСогласованиеПродолжение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьСогласованиеПродолжение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
    	Объект.ок_Статус = ок_ТекущийСтатусДокумента;	
    КонецЕсли;
		
КонецПроцедуры
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-01-22 (#3997) 

&НаКлиенте
Процедура ок_ПриОткрытии(Отказ)
	
	ок_УправлениеФормамиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ок_ДокументОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура("РежимВыбора", Истина);
	ОтборФормы = Новый Структура("Организация", Объект.Организация);
	ОтборКонтрагент = Новый Структура("ВидЗагружаемогоДокумента, Формировать", ПредопределенноеЗначение("Перечисление.ок_ВидЗагружаемыхДокументовЭД.ПоступлениеДопрасходы"), Истина);
	Если ЭтотОбъект.ок_ЗагружаемыеДокументы.НайтиСтроки(ОтборКонтрагент).Количество() = 0 Тогда
		ОтборФормы.Вставить("Контрагент", Объект.Контрагент);
	КонецЕсли;	
	ПараметрыОткрытия.Вставить("Отбор", ОтборФормы);
	
	ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.Форма.ФормаВыбора", ПараметрыОткрытия, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ок_ДокументКопированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ИмяФормыВыбора = ок_УправлениеФормамиКлиент.ИмяФормыВыбораДокументаКопированияЗагружаемогоДокументаЭД(ЭтотОбъект);
	Если ИмяФормыВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("РежимВыбора", Истина);
	ПараметрыОткрытия.Вставить("Отбор", Новый Структура("Организация,Контрагент", Объект.Организация, Объект.Контрагент));
	
	ОткрытьФорму(ИмяФормыВыбора, ПараметрыОткрытия, Элемент);
		
КонецПроцедуры

&НаКлиенте
Процедура ок_ДокументОснованиеСчетФактураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	СписокДоступныхФорм = Новый СписокЗначений;
	СписокДоступныхФорм.Добавить("Документ.ПоступлениеТоваровУслуг.ФормаВыбора", "Поступление товаров услуг");
	СписокДоступныхФорм.Добавить("Документ.ПоступлениеДопРасходов.ФормаВыбора", "Поступление допрасходов");
	СписокДоступныхФорм.Добавить("Документ.ПоступлениеНМА.ФормаВыбора", "Поступление НМА");

	ПоказатьВыборИзМеню(Новый ОписаниеОповещения("ок_ДокументОснованиеСчетФактураНачалоВыбораИзСпискаЗавершение", ЭтотОбъект, Новый Структура("Элемент", Элемент)), СписокДоступныхФорм, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ок_ДокументОснованиеСчетФактураНачалоВыбораИзСпискаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ПараметрыОткрытия = Новый Структура("РежимВыбора", Истина);
	ПараметрыОткрытия.Вставить("Отбор", Новый Структура("Организация,Контрагент", Объект.Организация, Объект.Контрагент));
	
	ОткрытьФорму(Результат.Значение, ПараметрыОткрытия, ДополнительныеПараметры.Элемент);
	
КонецПроцедуры

//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-08-05 (#3364)

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-01-11 #3997 
&НаКлиенте
Процедура ок_ИнициаторыИнициаторОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) И Объект.ок_Инициаторы.НайтиСтроки(Новый Структура("Инициатор", ВыбранноеЗначение)).Количество() > 0 Тогда
		ПоказатьПредупреждение(,"Данный инициатор уже добавлен");
	    СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ок_ИнициаторыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Копирование;
КонецПроцедуры

&НаКлиенте
Процедура ок_ТребуетсяСогласованиеФДПриИзменении(Элемент) 
	
	Если Объект.ок_ТребуетсяСогласованиеФД Тогда
		Элементы.ок_ЦФО.Видимость = Истина;	
		Элементы.ок_ФункциональныйДиректор.Видимость = Истина;
	Иначе
		Элементы.ок_ЦФО.Видимость = Ложь;	
		Элементы.ок_ФункциональныйДиректор.Видимость = Ложь;
		
		Объект.ок_ЦФО = "";	
		Объект.ок_ФункциональныйДиректор = "";
	КонецЕсли;
	
КонецПроцедуры	


&НаСервереБезКонтекста
Функция ПолучитьФД(ЦФО)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	СБ_СоответствиеФД_ЦФО.Инициатор КАК Инициатор
	|ИЗ
	|	РегистрСведений.СБ_СоответствиеФД_ЦФО КАК СБ_СоответствиеФД_ЦФО
	|ГДЕ
	|	СБ_СоответствиеФД_ЦФО.ЦФО = &ЦФО";

	Запрос.УстановитьПараметр("ЦФО", ЦФО);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Инициатор;
	Иначе
		Возврат ПредопределенноеЗначение("Справочник.бит_БК_Инициаторы.ПустаяСсылка");
	КонецЕсли;	
	
КонецФункции

&НаКлиенте
Процедура ок_ЦФОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ок_ЦФОНачалоВыбораЗаершение",ЭтотОбъект);	
	ФормаВыбора = ОткрытьФорму("РегистрСведений.СБ_СоответствиеФД_ЦФО.ФормаСписка",Новый Структура("РежимВыбораТекущихДанных", Истина),ЭтаФорма,,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	ФормаВыбора.Элементы.РуководительФункции.Видимость = Ложь;
	ФормаВыбора.Элементы.ОтветственныйЗаКорректировкуБК.Видимость = Ложь;
	ФормаВыбора.Элементы.ОтветственныйЗаКампаниюПоНачислениюАккруалов.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ок_ЦФОНачалоВыбораЗаершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		Объект.ок_ЦФО = РезультатВыбора.ЦФО;
		Объект.ок_ФункциональныйДиректор  = РезультатВыбора.Инициатор;	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ок_ЦФОПриИзменении(Элемент) 
	
	Если ЗначениеЗаполнено(Объект.ок_ЦФО) Тогда
		Объект.ок_ФункциональныйДиректор = ПолучитьФД(Объект.ок_ЦФО);
	Иначе
		Объект.ок_ФункциональныйДиректор = ПредопределенноеЗначение("Справочник.бит_БК_Инициаторы.ПустаяСсылка");		
	КонецЕсли;
	
		
КонецПроцедуры	
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-01-11 (#3997) 


//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-09-16 (#3862)
&НаКлиенте
Процедура ок_СтатусНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	ДанныеВыбора 			= СписокДоступныхСтатусов();
	
КонецПроцедуры

&НаКлиенте
Процедура ок_СтатусАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	ДанныеВыбора 			= СписокДоступныхСтатусов(Текст);
	Элементы.ок_Статус.СписокВыбора.Очистить();
	Если ДанныеВыбора.Количество() = 0 Тогда
		Элементы.ок_Статус.СписокВыбора.ЗагрузитьЗначения(СписокДоступныхСтатусов().ВыгрузитьЗначения());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ок_СтатусОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если Не ПустаяСтрока(Текст) Тогда
		СтандартнаяОбработка 	= Ложь;
		ДанныеВыбора 			= СписокДоступныхСтатусов(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокДоступныхСтатусов(Текст = Неопределено)
	
	ДанныеВыбора = Новый СписокЗначений;
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-02-12 (#3997) 	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ок_СтатусыВходящегоЭлектронногоДокументооборота.Ссылка КАК Ссылка,
	//	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ок_СтатусыВходящегоЭлектронногоДокументооборота.Ссылка) КАК СсылкаПредставление
	//	|ИЗ
	//	|	Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота КАК ок_СтатусыВходящегоЭлектронногоДокументооборота
	//	|ГДЕ
	//	|	ок_СтатусыВходящегоЭлектронногоДокументооборота.Ссылка <> ЗНАЧЕНИЕ(Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.Завершен)		
	//	|	И ок_СтатусыВходящегоЭлектронногоДокументооборота.Ссылка <> ЗНАЧЕНИЕ(Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.Отправлен)";
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	Если Текст = Неопределено Или НРег(Текст) = НРег(Сред(ВыборкаДетальныеЗаписи.СсылкаПредставление, 1, СтрДлина(Текст))) Тогда
	//		ДанныеВыбора.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	//	КонецЕсли;
	//КонецЦикла;
	
	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.Новый"));
	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.Согласован"));
	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.НеСогласован"));
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-02-12 (#3997) 
	Возврат ДанныеВыбора;
	
КонецФункции

//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-09-16 (#3862)


// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-07-26 (#4234)
&НаКлиенте
Процедура ок_ЗаписатьИЗакрыть(Команда)
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	ПараметрыЗаписи.Вставить("Закрыть"	  , Истина);
	
	Если Записать(ПараметрыЗаписи) Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-07-27 (#4227)
	ВыполнитьПроверкуЗаполненияСуммы(Отказ, ПараметрыЗаписи);
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-07-27 (#4227)
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверкуЗаполненияСуммы(Отказ, ПараметрыЗаписи)
	
	Если Не Объект.ок_СуммаЗагруженаИзПакета 
		И Объект.СуммаДокумента = 0 
		И Не ПараметрыЗаписи.Свойство("ПропуститьПроверкуЗаполненияСуммыДокумента") Тогда
		
		ТекущийСтатусОбъекта = бит_Визирование.ПолучитьСтатусОбъекта(Объект.Ссылка);
		
		Если ТекущийСтатусОбъекта <> ПредопределенноеЗначение("Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.Подписать")
			И ТекущийСтатусОбъекта <> ПредопределенноеЗначение("Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.Отправлен") 
			И ТекущийСтатусОбъекта <> ПредопределенноеЗначение("Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.Завершен") Тогда
			
			Отказ = Истина;
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПроверкуЗаполненияСуммыЗавершение", ЭтотОбъект, ПараметрыЗаписи);
			ПоказатьВопрос(ОписаниеОповещения,
							"Сумма документа равна нулю, заполнить сумму?",
							РежимДиалогаВопрос.ДаНет);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверкуЗаполненияСуммыЗавершение(Результат, ПараметрыЗаписи) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЭтотОбъект.ТекущийЭлемент = Элементы.СуммаДокумента;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		
		Если ТипЗнч(ПараметрыЗаписи) <> Тип("Структура") Тогда
			ПараметрыЗаписи = Новый Структура; 
		КонецЕсли;
		
		ПараметрыЗаписи.Вставить("ПропуститьПроверкуЗаполненияСуммыДокумента", Истина);
		
		Записан = Записать(ПараметрыЗаписи);
		
		Если Записан 
			И ПараметрыЗаписи.Свойство("Закрыть") 
			И ПараметрыЗаписи.Закрыть Тогда
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-07-26 (#4234)

#КонецОбласти

//ОК(СофтЛаб) Вдовиченко Г.В. 20181101 №3103
