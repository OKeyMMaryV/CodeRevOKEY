#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	КоличествоЭлементовВТЧ	= 1000;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда 
		
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнена организация", , "Организация", , Отказ);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаИзмененияСПИ) Тогда 
		
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнена дата изменения СПИ", , "ДатаИзмененияСПИ", , Отказ);
		
	КонецЕсли;
	
	Если Отказ Тогда 
		
		Возврат;
		
	КонецЕсли;
	
	Если СписокКлассовОС.Количество() > 0 Тогда 
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросОчисткиСпискаКлассовОСЗавершение", ЭтотОбъект);
		
		ПоказатьВопрос(ОписаниеОповещения, "Список классов ОС будет очищен. Продолжить?", РежимДиалогаВопрос.ДаНет);
		
		Возврат;
		
	КонецЕсли;
	
	ЗаполнитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСПИ(Команда)
	
	ИзменитьСПИНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьЗначенияФлажков(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьЗначенияФлажков(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьФлажки(Команда)
	
	УстановитьЗначенияФлажков();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВопросОчисткиСпискаКлассовОСЗавершение(ВыборПользователя, ДополнительныеПараметры) Экспорт 
	
	Если ВыборПользователя = КодВозвратаДиалога.Да Тогда 
		
		ЗаполнитьНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	СписокКлассовОС.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ок_му_СПИОС.КлассОС КАК КлассОС,
		|	ИСТИНА КАК Использование
		|ИЗ
		|	РегистрСведений.ок_му_СПИОС КАК ок_му_СПИОС
		|ГДЕ
		|	ок_му_СПИОС.Период = &Период
		|	И ок_му_СПИОС.Организация = &Организация";
	
	Запрос.УстановитьПараметр("Организация",	Организация);
	Запрос.УстановитьПараметр("Период",			ДатаИзмененияСПИ);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда 
		
		ТекстСообщения = СтрШаблон("Не найдено классов ОС в регистре сведений ""%1"" по организации ""%2"" и периоду %3",
									"СПИ ОС МСФО",
									Организация,
									Формат(ДатаИзмененияСПИ, "ДФ=dd.MM.yyyy"));
									
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
		
	КонецЕсли;
	
	СписокКлассовОС.Загрузить(Результат.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьСПИНаСервере()
	
	Запрос = Новый Запрос(СформироватьТекстЗапросаИзмененияСПИ());
	
	КлассыОС = СписокКлассовОС.Выгрузить(Новый Структура("Использование", Истина)).ВыгрузитьКолонку("КлассОС");
	
	Запрос.УстановитьПараметр("Период",			ДатаИзмененияСПИ);
	Запрос.УстановитьПараметр("Организация",	Организация);
	Запрос.УстановитьПараметр("КлассыОС",		КлассыОС);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда 
		
		ТекстСообщения = СтрШаблон("Нет данных для изменения срока полезного использования по организации ""%1"", дате изменения СПИ %2 и выбранным классам ОС",
									Организация,
									Формат(ДатаИзмененияСПИ, "ДФ=dd.MM.yyyy"));
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
		
	КонецЕсли;
	
	
	МассивДокументов = Новый Массив;
	
	
	Выборка = Результат.Выбрать();
	
	
	НачатьТранзакцию();
	
	
	Попытка
		
		ДокументИзменения = Документы.бит_му_ИзменениеПараметровУчетаОС.СоздатьДокумент();
		
		ДокументИзменения.Дата					= ДатаИзмененияСПИ;
		ДокументИзменения.Организация			= Организация;
		ДокументИзменения.ВидОперации			= Перечисления.бит_му_ВидыОперацийИзменениеПараметровУчетаОС.ИзменениеПараметровУчетаОС;
		ДокументИзменения.СпособПолученияСтавки	= Перечисления.бит_му_СпособыПолученияНоминальнойСтавки.ИзвлечениеИзНСИ;
		ДокументИзменения.Комментарий			= "Документ создан в рамках группового изменения СПИ ОС в МСФО";
		
		
		СчетчикВыборки = 0;
		
		Пока Выборка.Следующий() Цикл
			
			СчетчикВыборки = СчетчикВыборки + 1;
			
			Если СчетчикВыборки = КоличествоЭлементовВТЧ Тогда 
				
				ДокументИзменения.Записать(РежимЗаписиДокумента.Запись);
				
				МассивДокументов.Добавить(ДокументИзменения.Ссылка);
				
				
				ДокументИзменения = Документы.бит_му_ИзменениеПараметровУчетаОС.СоздатьДокумент();
				
				ДокументИзменения.Дата					= ДатаИзмененияСПИ;
				ДокументИзменения.Организация			= Организация;
				ДокументИзменения.ВидОперации			= Перечисления.бит_му_ВидыОперацийИзменениеПараметровУчетаОС.ИзменениеПараметровУчетаОС;
				ДокументИзменения.СпособПолученияСтавки	= Перечисления.бит_му_СпособыПолученияНоминальнойСтавки.ИзвлечениеИзНСИ;
				ДокументИзменения.Комментарий			= "Документ создан в рамках группового изменения СПИ ОС в МСФО";
				
				
				СчетчикВыборки = 1;
				
			КонецЕсли;
			
			НоваяСтрока = ДокументИзменения.ОсновныеСредства.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
		КонецЦикла;
		
		Если СчетчикВыборки > 0 Тогда 
			
			ДокументИзменения.Записать(РежимЗаписиДокумента.Запись);
			
			МассивДокументов.Добавить(ДокументИзменения.Ссылка);
			
			
		КонецЕсли;
		
		Для Каждого Документ Из МассивДокументов Цикл
			
			ОбщегоНазначения.СообщитьПользователю("Создан документ "+Документ, Документ);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция СформироватьТекстЗапросаИзмененияСПИ()
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ок_му_СПИОС.Организация КАК Организация,
		|	ок_му_СПИОС.КлассОС КАК КлассОС,
		|	ок_му_СПИОС.СПИ_РСБУ КАК СПИ_РСБУ,
		|	ок_му_СПИОС.СПИ_МСФО КАК СПИ_МСФО
		|ПОМЕСТИТЬ втСрокПолезногоИспользования
		|ИЗ
		|	РегистрСведений.ок_му_СПИОС КАК ок_му_СПИОС
		|ГДЕ
		|	ок_му_СПИОС.Период = &Период
		|	И ок_му_СПИОС.Организация = &Организация
		|	И ок_му_СПИОС.КлассОС В(&КлассыОС)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство.БИТ_ГруппаОСУУ КАК КлассОС,
		|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Организация КАК Организация,
		|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СрокПолезногоИспользования КАК СПИ_РСБУ
		|ПОМЕСТИТЬ втОсновныеСредства
		|ИЗ
		|	РегистрБухгалтерии.бит_Дополнительный_2.Остатки(&Период, СЧЕТ В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.бит_Дополнительный_2.ОСиИнвСобственность)), ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_ВидыСубконтоДополнительные_2.ОсновныеСредства), Организация = &Организация) КАК бит_Дополнительный_2Остатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|				,
		|				ОсновноеСредство.БИТ_ГруппаОСУУ В
		|						(ВЫБРАТЬ
		|							втСрокПолезногоИспользования.КлассОС
		|						ИЗ
		|							втСрокПолезногоИспользования КАК втСрокПолезногоИспользования)
		|					И ОсновноеСредство.ОК_ПараллельныйМСФО
		|					И НЕ ОсновноеСредство.Код ПОДОБНО ""МУ%"") КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
		|		ПО бит_Дополнительный_2Остатки.Субконто1 = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
		|			И (ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Организация = &Организация)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(, Организация = &Организация) КАК ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних
		|		ПО бит_Дополнительный_2Остатки.Субконто1 = ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	втОсновныеСредства.ОсновноеСредство КАК ОсновноеСредство,
		|	втОсновныеСредства.ОсновноеСредство.Код КАК ИнвентарныйНомер,
		|	ЕСТЬNULL(Класс_ОС.ЗначениеПараметра, втОсновныеСредства.КлассОС) КАК Класс,
		|	ЕСТЬNULL(Класс_ОС.ЗначениеПараметра, втОсновныеСредства.КлассОС) КАК Класс_старый,
		|	втОсновныеСредства.Организация КАК Организация,
		|	втСрокПолезногоИспользования.СПИ_МСФО КАК СрокПолезногоИспользования,
		|	ЕСТЬNULL(СрокПолезногоИспользованияМСФОСтарый.ЗначениеПараметра, 0) КАК СрокПолезногоИспользования_Старый,
		|	ЕСТЬNULL(НастройкаНачисленияАмортизации.ЗначениеПараметра, ЛОЖЬ) КАК НачислятьАмортизацию_Старый,
		|	ЕСТЬNULL(НастройкаНачисленияАмортизации.ЗначениеПараметра, ЛОЖЬ) КАК НачислятьАмортизацию,
		|	ЕСТЬNULL(МетодНачисленияАмортизации.ЗначениеПараметра, ЗНАЧЕНИЕ(Перечисление.бит_му_МетодыНачисленияАмортизации.ПустаяСсылка)) КАК МетодНачисленияАмортизации_Старый,
		|	ЕСТЬNULL(МетодНачисленияАмортизации.ЗначениеПараметра, ЗНАЧЕНИЕ(Перечисление.бит_му_МетодыНачисленияАмортизации.ПустаяСсылка)) КАК МетодНачисленияАмортизации,
		|	ЕСТЬNULL(СпособОтраженияРасходов.ЗначениеПараметра, ЗНАЧЕНИЕ(Справочник.бит_му_СпособыОтраженияРасходовПоАмортизации.ПустаяСсылка)) КАК СпособОтраженияРасходовПоАмортизации_Старый,
		|	ЕСТЬNULL(СпособОтраженияРасходов.ЗначениеПараметра, ЗНАЧЕНИЕ(Справочник.бит_му_СпособыОтраженияРасходовПоАмортизации.ПустаяСсылка)) КАК СпособОтраженияРасходовПоАмортизации
		|ИЗ
		|	втОсновныеСредства КАК втОсновныеСредства
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСрокПолезногоИспользования КАК втСрокПолезногоИспользования
		|		ПО втОсновныеСредства.Организация = втСрокПолезногоИспользования.Организация
		|			И втОсновныеСредства.КлассОС = втСрокПолезногоИспользования.КлассОС
		|			И втОсновныеСредства.СПИ_РСБУ = втСрокПолезногоИспользования.СПИ_РСБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_ПараметрыОС.СрезПоследних(
		|				,
		|				Организация = &Организация
		|					И Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.СрокПолезногоИспользования_ОС)) КАК СрокПолезногоИспользованияМСФОСтарый
		|		ПО втОсновныеСредства.ОсновноеСредство = СрокПолезногоИспользованияМСФОСтарый.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_ПараметрыОС.СрезПоследних(
		|				,
		|				Организация = &Организация
		|					И Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.НачислятьАмортизацию_ОС)) КАК НастройкаНачисленияАмортизации
		|		ПО втОсновныеСредства.ОсновноеСредство = НастройкаНачисленияАмортизации.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_ПараметрыОС.СрезПоследних(
		|				,
		|				Организация = &Организация
		|					И Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.МетодНачисленияАмортизации_ОС)) КАК МетодНачисленияАмортизации
		|		ПО втОсновныеСредства.ОсновноеСредство = МетодНачисленияАмортизации.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_ПараметрыОС.СрезПоследних(
		|				,
		|				Организация = &Организация
		|					И Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.СпособОтраженияРасходовПоАмортизации_ОС)) КАК СпособОтраженияРасходов
		|		ПО втОсновныеСредства.ОсновноеСредство = СпособОтраженияРасходов.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_му_ПараметрыОС.СрезПоследних(
		|				,
		|				Организация = &Организация
		|					И Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_му_ВидыПараметровВНА.Класс_ОС)) КАК Класс_ОС
		|		ПО втОсновныеСредства.ОсновноеСредство = Класс_ОС.ОсновноеСредство
		|
		|УПОРЯДОЧИТЬ ПО
		|	Класс";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаКлиенте
Процедура УстановитьЗначенияФлажков(Значение = Неопределено)
	
	Для Каждого Строка Из СписокКлассовОС Цикл
		
		Если Значение = Неопределено Тогда 
			
			Строка.Использование = Не Строка.Использование;
			
		Иначе
			
			Строка.Использование = Значение;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

