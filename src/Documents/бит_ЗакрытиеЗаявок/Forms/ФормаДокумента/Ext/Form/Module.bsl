
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	// Заполняем кэш значений	
	ЗаполнитьКэшЗначений(мКэшЗначений);
	
	мКэшЗначений.Вставить("Организация" , Объект.Организация);
	УстановитьСостояниеДокумента();

КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Установить заголовок формы
	УстановитьЗаголовокФормыДокумента();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// Вывести в заголовке формы статус документа.
	УстановитьЗаголовокФормыДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "Проведениебит_ЗакрытиеЗаявок";
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-14 (#3681)
	ТекстСообщения = ПроверитьЗнРДСНаСтатус();
	
	Если ТекстСообщения <> "" Тогда
	
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос(ТекстСообщения, Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
		    Возврат;
		КонецЕсли;
		
	КонецЕсли;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-14 (#3681)

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УстановитьСостояниеДокумента();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Объект.ДокументыПланирования.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ОчиститьТабЧасть",ЭтотОбъект, ВыбранноеЗначение);
	ТекстВопроса = НСтр("ru = 'Очистить табличную часть ""Документы планирования""?'");		
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 15, КодВозвратаДиалога.Да);
	
КонецПроцедуры

// Процедура обработчик оповещения "ОчиститьТабЧасть".
// 
// Параметры:
// 	Ответ - КодВозвратаДиалога
// 	ДополнительныеДанные - Структура.
// 
&НаКлиенте 
Процедура ОчиститьТабЧасть(Ответ, ДополнительныеДанные) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Объект.ДокументыПланирования.Очистить();
		Объект.Организация = ДополнительныеДанные;
		
	КонецЕсли; 
                
КонецПроцедуры // ОчиститьТабЧасть

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДокументыПланирования

// Процедура - обработчик события "ПриНачалеРедактирования" табличного поля "ДокументыПланирования".
// 
&НаКлиенте
Процедура ДокументыПланированияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ Копирование Тогда
		Элемент.ТекущиеДанные.ПричинаЗакрытия = мКэшЗначений.ПричинаЗакрытияОтмена;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" поля ввода "ДокументыПланирования" 
// табличного поля "ДокументПланирования".
// 
&НаКлиенте
Процедура ДокументыПланированияДокументПланированияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Тип") Тогда
		Возврат;
	КонецЕсли;
	
	РезСтруктура = бит_Визирование.ПолучитьСтатусОбъекта(ВыбранноеЗначение);
	СтатусДокументаПланирования = ?(ЗначениеЗаполнено(РезСтруктура.Статус), РезСтруктура.Статус, мКэшЗначений.СтатусыОбъектовПустаяСсылка);
	
	Если мКэшЗначений.МассивЗапрешенныхСтатусов.Найти(СтатусДокументаПланирования) <> Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение("Подобранный документ """ + ВыбранноеЗначение + """ со статусом: """ 
				+ СтатусДокументаПланирования + """, не может использоваться в документе!", Объект, "Объект.ДокументыПланирования[" + (Элементы.ДокументыПланирования.ТекущиеДанные.НомерСтроки - 1) + "].ДокументПланирования");
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "ПричинаЗакрытия" 
// табличного поля "ДокументыПланирования".
// 
&НаКлиенте
Процедура ДокументыПланированияПричинаЗакрытияПриИзменении(Элемент)
	
	ТекущиеДанные   = Элементы.ДокументыПланирования.ТекущиеДанные;
	ПричинаРегламент = ПредопределенноеЗначение("Справочник.бит_ПричиныЗакрытияДокументовПланированияПлатежа.Регламент");
	
	Если ТекущиеДанные.ПричинаЗакрытия = ПричинаРегламент Тогда
		
		ТекущиеДанные.ПричинаЗакрытия = ПредопределенноеЗначение("Справочник.бит_ПричиныЗакрытияДокументовПланированияПлатежа.ПустаяСсылка");
		
		ТекстСообщения = СтрШаблон(Нстр("ru = 'Причина закрытия ""%1"" устанавливается только регламентной операцией!'"), Строка(ПричинаРегламент)); 
		Индекс         = Элементы.ДокументыПланирования.ТекущиеДанные.НомерСтроки - 1;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДокументыПланирования[" + Индекс + "].ПричинаЗакрытия", "Объект", Истина);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "ДокументыПланирования" 
// табличного поля "ДокументПланирования".
// 
&НаКлиенте
Процедура ДокументыПланированияДокументПланированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ДокументыПланирования.ТекущиеДанные;
	
	бит_РаботаСДиалогамиКлиент.НачалоВыбораСоставного(ЭтаФорма
	                                                   ,Элемент
	                                                   ,ТекущиеДанные
	                                                   ,"ДокументПланирования"
													   ,мКэшЗначений.СписокТиповДокументПланирования
													   ,СтандартнаяОбработка);
	
КонецПроцедуры

// Процедура - обработчик события "Очистка" поля ввода "ДокументПланирования".
// 
&НаКлиенте
Процедура ДокументыПланированияДокументПланированияОчистка(Элемент, СтандартнаяОбработка)
	
	Элемент.ВыбиратьТип = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемыОбработчикиКоманд

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыИФункцииОбщегоНазначения

// Процедура устанавливает заголовок формы документа.
// 
&НаКлиенте
Процедура УстановитьЗаголовокФормыДокумента()


КонецПроцедуры // УстановитьЗаголовокФормыДокумента()

#КонецОбласти

// Процедура заполняет кэш значений, необходимый при работе на клиенте.
// 
&НаСервере
Процедура ЗаполнитьКэшЗначений(КэшированныеЗначения)

	КэшированныеЗначения = Новый Структура;
 
	КэшированныеЗначения.Вставить("ПричинаЗакрытияОтмена",		 Справочники.бит_ПричиныЗакрытияДокументовПланированияПлатежа.Отмена);
	КэшированныеЗначения.Вставить("ПричинаЗакрытияПустаяСсылка", Справочники.бит_ПричиныЗакрытияДокументовПланированияПлатежа.ПустаяСсылка());
	
	СсылкаСтатусыОбъектов = Справочники.бит_СтатусыОбъектов;
	МассивЗапрешенныхСтатусов = Новый Массив;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-17 (#3681)
	//МассивЗапрешенныхСтатусов.Добавить(СсылкаСтатусыОбъектов.Заявка_Закрыта);
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-17 (#3681)
	МассивЗапрешенныхСтатусов.Добавить(СсылкаСтатусыОбъектов.ЗаявкаОбщая_Закрыта);
	МассивЗапрешенныхСтатусов.Добавить(СсылкаСтатусыОбъектов.ПлатежнаяПозиция_Закрыта);
	МассивЗапрешенныхСтатусов.Добавить(СсылкаСтатусыОбъектов.ЗаявкаНаЗатраты_Закрыта);
	МассивЗапрешенныхСтатусов.Добавить(СсылкаСтатусыОбъектов.РасходнаяПозиция_Закрыта);
	
	КэшированныеЗначения.Вставить("МассивЗапрешенныхСтатусов", МассивЗапрешенныхСтатусов);
	
	// Заполним список типов для быстрого выбора составного.
	МассивТипов  = Объект.Ссылка.Метаданные().ТабличныеЧасти.ДокументыПланирования.Реквизиты.ДокументПланирования.Тип.Типы();
	СписокВыбора = бит_ОбщегоНазначения.ПодготовитьСписокВыбораТипа(МассивТипов);
	
	КэшированныеЗначения.Вставить("СписокТиповДокументПланирования",СписокВыбора);
	
КонецПроцедуры
 
&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = бит_ОбщегоНазначения.СостояниеДокумента(Объект);
	
КонецПроцедуры

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-14 (#3681)
&НаСервере
Функция ПроверитьЗнРДСНаСтатус()
	
	ТекстСообщения = "";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументыПланирования" , Объект.ДокументыПланирования.Выгрузить());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ДокументыПланирования.ДокументПланирования КАК Документ.бит_ЗаявкаНаРасходованиеСредств) КАК ДокументПланирования
	|ПОМЕСТИТЬ ДокументыПланирования
	|ИЗ
	|	&ДокументыПланирования КАК ДокументыПланирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыПланирования.ДокументПланирования КАК ДокументПланирования,
	|	ДокументыПланирования.ДокументПланирования.Номер КАК ДокументПланирования_Номер,
	|	ДокументыПланирования.ДокументПланирования.Дата КАК ДокументПланирования_Дата,
	|	бит_СтатусыОбъектов.Статус КАК Статус
	|ИЗ
	|	ДокументыПланирования КАК ДокументыПланирования
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СтатусыОбъектов КАК бит_СтатусыОбъектов
	|		ПО (бит_СтатусыОбъектов.Объект = ДокументыПланирования.ДокументПланирования)
	|			И (бит_СтатусыОбъектов.ВидСтатуса = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСтатусовОбъектов.Статус))
	|ГДЕ
	|	(бит_СтатусыОбъектов.Статус = ЗНАЧЕНИЕ(Справочник.бит_СтатусыОбъектов.Заявка_Утверждена)
	|			ИЛИ бит_СтатусыОбъектов.Статус = ЗНАЧЕНИЕ(Справочник.бит_СтатусыОбъектов.Заявка_СозданоПП))";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		СтрокаТаблицы = Объект.ДокументыПланирования.НайтиСтроки(Новый Структура("ДокументПланирования", Выборка.ДокументПланирования));
		Если СтрокаТаблицы.Количество() > 0 Тогда
		
			ТекстСообщения = ТекстСообщения + ?(ТекстСообщения = "", "", Символы.ПС) + "Заявка на расходование ДС №" + Выборка.ДокументПланирования_Номер + " от " + Формат(Выборка.ДокументПланирования_Дата, "ДФ=dd.MM.yyyy") + " находится в статусе «" + Выборка.Статус + "».";
								
		КонецЕсли; 
	
	КонецЦикла;
	
	Если ТекстСообщения <> "" Тогда
	
		 ТекстСообщения = ТекстСообщения + Символы.ПС + "Вы уверены, что хотите закрыть заявку(и)?"
	
	КонецЕсли; 
	
	Возврат ТекстСообщения;
	
КонецФункции
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-14 (#3681)

#КонецОбласти