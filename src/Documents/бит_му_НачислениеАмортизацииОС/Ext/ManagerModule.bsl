#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки	 - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Вычислил сумма регл и упр при начислении амортизации за последний период.
// Исключаем проблему с копейками.
//
Функция ВычислитьСуммыАмортизации(Организация, ОсновноеСредство, Момент) Экспорт
	
	// Сформируем массив параметров для получения.
	ПараметрыВНА = Новый Массив;
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СчетНачисленияАмортизации_ОС);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СчетУчета_ОС);
	ПараметрыВНА.Добавить(ПланыВидовХарактеристик.бит_му_ВидыПараметровВНА.СчетСниженияСтоимости_ОС);
	
	МассивВНА = Новый Массив;
	МассивВНА.Добавить(ОсновноеСредство);
		
	// Сформируем структуру параметров для получения таблицы параметров.
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация"     , Организация);
	СтруктураПараметров.Вставить("ОсновноеСредство", МассивВНА);
	СтруктураПараметров.Вставить("МоментВремени"   , Момент);
	СтруктураПараметров.Вставить("ПараметрыВНА"	   , ПараметрыВНА);
	
	// Получим таблицу параметров
	ТаблицаПараметров = бит_му_ВНА.ПолучитьТаблицуПараметровВНА(СтруктураПараметров, "ТаблицаЗначений");
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("СуммаУпр", 0);
	СтруктураРезультат.Вставить("СуммаРегл", 0);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРасчета"    ,Момент);	
	Запрос.УстановитьПараметр("Организация"      ,Организация);
	Запрос.УстановитьПараметр("МассивВНА"        ,МассивВНА);
	Запрос.УстановитьПараметр("МассивСчетовУчета",      ТаблицаПараметров.ВыгрузитьКолонку("СчетУчета_ОС"));
	Запрос.УстановитьПараметр("МассивСчетовАмортизация",ТаблицаПараметров.ВыгрузитьКолонку("СчетНачисленияАмортизации_ОС"));
	Запрос.УстановитьПараметр("МассивСчетовСнижения",   ТаблицаПараметров.ВыгрузитьКолонку("СчетСниженияСтоимости_ОС"));
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеПоОСПервСтоимость.СуммаРеглОстаток КАК СуммаРеглПерв,
		|	ДанныеПоОСПервСтоимость.СуммаУпрОстаток КАК СуммаУпрПерв
		|ПОМЕСТИТЬ ПервоначальнаяСтоимость
		|ИЗ
		|	РегистрБухгалтерии.бит_Дополнительный_2.Остатки(
		|			&ПериодРасчета,
		|			Счет В (&МассивСчетовУчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_ВидыСубконтоДополнительные_2.ОсновныеСредства),
		|			Субконто1 В (&МассивВНА)
		|				И Организация = &Организация) КАК ДанныеПоОСПервСтоимость
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеПоОСАмортизация.СуммаРеглОстаток КАК СуммаРеглАмортизация,
		|	ДанныеПоОСАмортизация.СуммаУпрОстаток КАК СуммаУпрАмортизация
		|ПОМЕСТИТЬ НачисленнаяАмортизация
		|ИЗ
		|	РегистрБухгалтерии.бит_Дополнительный_2.Остатки(
		|			&ПериодРасчета,
		|			Счет В (&МассивСчетовАмортизация),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_ВидыСубконтоДополнительные_2.ОсновныеСредства),
		|			Субконто1 В (&МассивВНА)
		|				И Организация = &Организация) КАК ДанныеПоОСАмортизация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеПоОСОбесценение.СуммаРеглОстаток КАК СуммаРеглОбесценение,
		|	ДанныеПоОСОбесценение.СуммаУпрОстаток КАК СуммаУпрОбесценение
		|ПОМЕСТИТЬ Обесценение
		|ИЗ
		|	РегистрБухгалтерии.бит_Дополнительный_2.Остатки(
		|			&ПериодРасчета,
		|			Счет В (&МассивСчетовСнижения),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_ВидыСубконтоДополнительные_2.ОсновныеСредства),
		|			Субконто1 В (&МассивВНА)
		|				И Организация = &Организация) КАК ДанныеПоОСОбесценение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПервоначальнаяСтоимость.СуммаРеглПерв + НачисленнаяАмортизация.СуммаРеглАмортизация + Обесценение.СуммаРеглОбесценение КАК СуммаРегл,
		|	ПервоначальнаяСтоимость.СуммаУпрПерв + НачисленнаяАмортизация.СуммаУпрАмортизация + Обесценение.СуммаУпрОбесценение КАК СуммаУпр
		|ИЗ
		|	ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	НачисленнаяАмортизация КАК НачисленнаяАмортизация,
		|	Обесценение КАК Обесценение";
	
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктураРезультат, Выборка);
	КонецЦикла;

	Возврат СтруктураРезультат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
