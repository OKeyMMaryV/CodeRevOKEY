#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ПропускатьЗаполнениеGTIN = Ложь;
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("ДанныеПула") Тогда
			ЗаполнитьПоДаннымПулаКодовМаркировки(ДанныеЗаполнения);
		ИначеЕсли ДанныеЗаполнения.Свойство("ИмяФильтра")
			И ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.ПеремаркировкаТоваровИСМП") Тогда
			
			ОтборПоСпособуВводаВОборот = Неопределено;
			Если ДанныеЗаполнения.ИмяФильтра = "ЗаполнениеПоСпособуВводаВОборот" Тогда
				СпособВводаВОборот         = ДанныеЗаполнения.ЗначениеФильтра;
				ОтборПоСпособуВводаВОборот = СпособВводаВОборот;
			КонецЕсли;
			
			ЗаполнитьПоПеремаркировке(ДанныеЗаполнения.Основание, ОтборПоСпособуВводаВОборот);
			ПропускатьЗаполнениеGTIN = Истина;
			
		КонецЕсли;
	
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.МаркировкаТоваровИСМП") Тогда
		
		ЗаполнитьПоВводуВОборот(ДанныеЗаполнения);
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПеремаркировкаТоваровИСМП") Тогда
		
		ЗаполнитьПоПеремаркировке(ДанныеЗаполнения);
		ПропускатьЗаполнениеGTIN = Истина;
		
	КонецЕсли;
	
	ИнтеграцияИСМППереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ЗаполнитьИдентификаторыСтрокТабличнойЧастиТовары();
	
	ЗаполнитьОбъектПоСтатистике(ПропускатьЗаполнениеGTIN);
	
	ИнтеграцияИСМППереопределяемый.ЗаполнитьКодыТНВЭДПоНоменклатуреВТабличнойЧасти(Товары);
	
	ПроверкаЗаполненияТоварныхПозицийСВозможностьюУдаленияЛишнихСтрок(, Истина);
	
	ЗаполнитьСпособФормированияСерийныхНомеровПоУмолчанию();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	МассивНепроверяемыхРеквизитов.Добавить("Контрагент");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.ВидОбуви");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.СпособВводаВОборот");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.КодТНВЭД");
	
	ЭтоТабачнаяПродукция = (ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Табачная"));
	ЭтоОбувнаяПродукция  = (ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Обувная"));
	
	Если ЭтоТабачнаяПродукция Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("СпособВводаВОборот");
		МассивНепроверяемыхРеквизитов.Добавить("ИдентификаторПроизводственногоЗаказа");
		
	ИначеЕсли ЭтоОбувнаяПродукция Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ПроизводственныйОбъект");
		МассивНепроверяемыхРеквизитов.Добавить("ПроизводственныйОбъектИдентификатор");
		МассивНепроверяемыхРеквизитов.Добавить("ПроизводственныйОбъектИдентификатор");
		МассивНепроверяемыхРеквизитов.Добавить("ПроизводственныйОбъектАдресСтрокой"); 
		МассивНепроверяемыхРеквизитов.Добавить("ИдентификаторПроизводственногоЗаказа");
		МассивНепроверяемыхРеквизитов.Добавить("ИдентификаторПроизводственнойЛинии");
		МассивНепроверяемыхРеквизитов.Добавить("ОжидаемаяДатаНачалаПроизводства");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Шаблон");
		
		Если СпособВводаВОборот = ПредопределенноеЗначение(
			"Перечисление.СпособыВводаВОборотСУЗ.МаркировкаОстатков") Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Товары.GTIN");
			ПроверяемыеРеквизиты.Добавить("Товары.КодТНВЭД");
			
			Для Каждого СтрокаТовары Из Товары Цикл
				НачалоGTIN = Лев(СтрокаТовары.GTIN, 2);
				Если НачалоGTIN = "04" Тогда
					Продолжить;
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(СтрокаТовары.СпособВводаВОборот) Тогда
					ТекстСообщения = СтрШаблон(
						НСтр(
							"ru = 'В строке %1 табличной части Товары не заполнено поле Способ ввода в оборот'"),
							СтрокаТовары.НомерСтроки);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
						ЭтотОбъект,
						ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
							"Товары", СтрокаТовары.НомерСтроки, "СпособВводаВОборот"),,
						Отказ);
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(СтрокаТовары.ВидОбуви) Тогда
					ТекстСообщения = СтрШаблон(
						НСтр(
							"ru = 'В строке %1 табличной части Товары не заполнено поле Вид обуви'"),
							СтрокаТовары.НомерСтроки);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
						ЭтотОбъект,
						ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
							"Товары", СтрокаТовары.НомерСтроки, "ВидОбуви"),,
						Отказ);
				КонецЕсли;
			КонецЦикла;
		ИначеЕсли СпособВводаВОборот = ПредопределенноеЗначение(
			"Перечисление.СпособыВводаВОборотСУЗ.ТрансграничнаяТорговля") Тогда
			ПроверяемыеРеквизиты.Добавить("Контрагент");
		КонецЕсли;
		
	КонецЕсли;
	
	ИнтеграцияИСМППереопределяемый.ПриОпределенииОбработкиПроверкиЗаполнения(
		ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ПроверкаЗаполненияТоварныхПозицийСВозможностьюУдаленияЛишнихСтрок(Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	ПроверкаСпособаФормированияСерийныхНомеров(Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(ИдентификаторПроизводственногоЗаказа) Тогда
		ИдентификаторПроизводственногоЗаказа = Строка(Новый УникальныйИдентификатор());
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		Если Не ЗначениеЗаполнено(СтрокаТЧ.ИдентификаторСтроки) Тогда
			СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор());
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТЧ.Шаблон) Тогда
			Если ВидПродукции = Перечисления.ВидыПродукцииИС.Обувная Тогда
				СтрокаТЧ.Шаблон = Перечисления.ШаблоныКодовМаркировкиСУЗ.Обувь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияИСМП.ЗаписатьСтатусДокументаИСМППоУмолчанию(ЭтотОбъект);
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДокументОснование = Неопределено;
	СерийныеНомера.Очистить();
	ИдентификаторПроизводственногоЗаказа = "";
	ИдентификаторПроизводственнойЛинии   = "";
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьСпособФормированияСерийныхНомеровПоУмолчанию()

	Для Каждого СтрокаТовары Из Товары Цикл
		СтрокаТовары.СпособФормированияСерийногоНомера = Перечисления.СпособыФормированияСерийногоНомераСУЗ.Автоматически;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаСпособаФормированияСерийныхНомеров(Отказ)
	
	ТаблицаПроверки = Товары.Выгрузить(, "GTIN, СпособФормированияСерийногоНомера");
	ТаблицаПроверки.Свернуть("GTIN, СпособФормированияСерийногоНомера");
	ТаблицаПроверки.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТаблицаПроверки.ЗаполнитьЗначения(1, "Количество");
	ТаблицаПроверки.Свернуть("GTIN", "Количество");
	
	Для Каждого СтрокаПроверки Из ТаблицаПроверки Цикл
	
		Если СтрокаПроверки.Количество < 2 Тогда
			Продолжить;
		КонецЕсли;
		ПоискСтрок = Товары.НайтиСтроки(Новый Структура("GTIN", СтрокаПроверки.GTIN));
		
		Для Каждого СтрокаТовары Из ПоискСтрок Цикл
			ТекстСообщения = НСтр(
				"ru = 'В строке %1 для GTIN %2 отличается способ формирования серийных номеров от других строк'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, СтрокаТовары.НомерСтроки, СтрокаТовары.GTIN);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Товары", СтрокаТовары.НомерСтроки, "СпособФормированияСерийногоНомера"),,
				Отказ);
			Прервать;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьОбъектПоСтатистике(ПропускатьЗаполнениеGTIN = Ложь)
	
	ДанныеСтатистики = ЗаполнениеОбъектовПоСтатистикеИСМП.ДанныеЗаполненияЗаказаНаЭмиссиюКодовМаркировкиСУЗ(Организация);
	
	Для Каждого КлючИЗначение Из ДанныеСтатистики Цикл
		ЗаполнениеОбъектовПоСтатистикеИСМП.ЗаполнитьПустойРеквизит(ЭтотОбъект, ДанныеСтатистики, КлючИЗначение.Ключ);
	КонецЦикла;
	
	ЗаполнениеОбъектовПоСтатистикеИСМП.ЗаполнитьТабличнуюЧастьТоварыЗаказаНаЭмиссиюКодовМаркировкиСУЗ(ЭтотОбъект, ПропускатьЗаполнениеGTIN);
		
КонецПроцедуры

Процедура ЗаполнитьПоПеремаркировке(ДанныеЗаполнения, ОтборПоСпособуВводаВОборот = Неопределено)
	
	Если Не ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Основание",          ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Ссылка",             Ссылка);
		Запрос.УстановитьПараметр("СпособВводаВОборот", ОтборПоСпособуВводаВОборот);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПеремаркировкаТоваровИСМПТовары.Номенклатура                    КАК Номенклатура,
		|	ПеремаркировкаТоваровИСМПТовары.Характеристика                  КАК Характеристика,
		|	ПеремаркировкаТоваровИСМПТовары.КодМаркировки.ЗначениеШтрихкода КАК КодМаркировки
		|ИЗ
		|	Документ.ПеремаркировкаТоваровИСМП.Товары КАК ПеремаркировкаТоваровИСМПТовары
		|ГДЕ
		|	ПеремаркировкаТоваровИСМПТовары.Ссылка = &Основание
		|	И ПеремаркировкаТоваровИСМПТовары.НовыйКодМаркировки = ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)
		|	И ПеремаркировкаТоваровИСМПТовары.КодМаркировки <> ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)
		|	И ВЫБОР 
		|		КОГДА &СпособВводаВОборот = НЕОПРЕДЕЛЕНО
		|				ИЛИ &СпособВводаВОборот = ЗНАЧЕНИЕ(Перечисление.СпособыВводаВОборотСУЗ.ПустаяСсылка) ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ПеремаркировкаТоваровИСМПТовары.СпособВводаВОборот = &СпособВводаВОборот
		|		КОНЕЦ";
		
		ТаблицаТовары = Запрос.Выполнить().Выгрузить();
		ТаблицаТовары.Колонки.Добавить("GTIN", Метаданные.ОпределяемыеТипы.GTIN.Тип);
		
		Для Каждого СтрокаТовары Из ТаблицаТовары Цикл
			СтрокаТовары.GTIN = ШтрихкодированиеИСКлиентСервер.GTINПоКодуМаркировки(СтрокаТовары.КодМаркировки);
		КонецЦикла;
		
		Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаТовары);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.GTIN           КАК GTIN,
		|	1                            КАК Количество
		|ПОМЕСТИТЬ ТоварыПеремаркировки
		|ИЗ
		|	&ТаблицаТовары Как ТаблицаТовары
		|
		|;
		|/////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ПеремаркировкаТоваровИСМПТовары.Номенклатура      КАК Номенклатура,
		|	ПеремаркировкаТоваровИСМПТовары.Характеристика    КАК Характеристика,
		|	ПеремаркировкаТоваровИСМПТовары.GTIN              КАК GTIN,
		|	СУММА(ПеремаркировкаТоваровИСМПТовары.Количество) КАК Количество
		|ПОМЕСТИТЬ НеобходимоЗаказать
		|ИЗ
		|	ТоварыПеремаркировки КАК ПеремаркировкаТоваровИСМПТовары
		|СГРУППИРОВАТЬ ПО
		|	ПеремаркировкаТоваровИСМПТовары.Номенклатура,
		|	ПеремаркировкаТоваровИСМПТовары.Характеристика,
		|	ПеремаркировкаТоваровИСМПТовары.GTIN
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПулКодовМаркировкиСУЗ.Номенклатура,
		|	ПулКодовМаркировкиСУЗ.Характеристика,
		|	ПулКодовМаркировкиСУЗ.GTIN,
		|	СУММА(-1)
		|ИЗ
		|	РегистрСведений.ПулКодовМаркировкиСУЗ КАК ПулКодовМаркировкиСУЗ
		|ГДЕ
		|	ПулКодовМаркировкиСУЗ.ДокументОснование = &Основание
		|	И ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию.ДокументОснование <> &Основание
		|	И ВЫБОР 
		|		КОГДА &СпособВводаВОборот = НЕОПРЕДЕЛЕНО
		|				ИЛИ &СпособВводаВОборот = ЗНАЧЕНИЕ(Перечисление.СпособыВводаВОборотСУЗ.ПустаяСсылка) ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ПулКодовМаркировкиСУЗ.СпособВводаВОборот = &СпособВводаВОборот
		|		КОНЕЦ
		|СГРУППИРОВАТЬ ПО
		|	ПулКодовМаркировкиСУЗ.Номенклатура,
		|	ПулКодовМаркировкиСУЗ.Характеристика,
		|	ПулКодовМаркировкиСУЗ.GTIN
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказНаЭмиссию.Номенклатура,
		|	ЗаказНаЭмиссию.Характеристика,
		|	ЗаказНаЭмиссию.GTIN,
		|	-СУММА(ЗаказНаЭмиссию.Количество)
		|ИЗ
		|	Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.Товары КАК ЗаказНаЭмиссию
		|ГДЕ
		|	ЗаказНаЭмиссию.Ссылка.ДокументОснование = &Основание
		|	И ЗаказНаЭмиссию.Ссылка <> &Ссылка
		|	И НЕ ЗаказНаЭмиссию.Ссылка.ПометкаУдаления
		|	И ВЫБОР 
		|		КОГДА &СпособВводаВОборот = НЕОПРЕДЕЛЕНО
		|				ИЛИ &СпособВводаВОборот = ЗНАЧЕНИЕ(Перечисление.СпособыВводаВОборотСУЗ.ПустаяСсылка) ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЗаказНаЭмиссию.СпособВводаВОборот = &СпособВводаВОборот
		|		КОНЕЦ
		|СГРУППИРОВАТЬ ПО
		|	ЗаказНаЭмиссию.Номенклатура,
		|	ЗаказНаЭмиссию.Характеристика,
		|	ЗаказНаЭмиссию.GTIN
		|;
		|ВЫБРАТЬ
		|	НеобходимоЗаказать.Номенклатура      КАК Номенклатура,
		|	НеобходимоЗаказать.Характеристика    КАК Характеристика,
		|	НеобходимоЗаказать.GTIN              КАК GTIN,
		|	СУММА(НеобходимоЗаказать.Количество) КАК Количество,
		|	СУММА(НеобходимоЗаказать.Количество) КАК КоличествоУпаковок
		|ИЗ
		|	НеобходимоЗаказать КАК НеобходимоЗаказать
		|СГРУППИРОВАТЬ ПО
		|	НеобходимоЗаказать.Номенклатура,
		|	НеобходимоЗаказать.Характеристика,
		|	НеобходимоЗаказать.GTIN
		|ИМЕЮЩИЕ
		|	СУММА(НеобходимоЗаказать.Количество) > 0
		|";
		
		ЗаполнитьТабличнуюЧастьТовары(Запрос);
		
	КонецЕсли;
	
	Если Не ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		
		ДокументОснование = ДанныеЗаполнения;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, 
			ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, "Организация,ВидПродукции"));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоВводуВОборот(ДанныеЗаполнения)
	
	Если Не ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Основание", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МаркировкаТоваровИСМПТовары.Номенклатура КАК Номенклатура,
		|	МаркировкаТоваровИСМПТовары.Характеристика КАК Характеристика,
		|	СУММА(Количество) КАК Количество
		|ПОМЕСТИТЬ НеобходимоЗаказать
		|ИЗ
		|	Документ.МаркировкаТоваровИСМП.Товары КАК МаркировкаТоваровИСМПТовары
		|ГДЕ
		|	МаркировкаТоваровИСМПТовары.Ссылка = &Основание
		|СГРУППИРОВАТЬ ПО
		|	МаркировкаТоваровИСМПТовары.Номенклатура,
		|	МаркировкаТоваровИСМПТовары.Характеристика
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Штрихкоды.Номенклатура,
		|	Штрихкоды.Характеристика,
		|	СУММА(ВЫБОР КОГДА Штрихкоды.Количество = 0 ТОГДА -1 ИНАЧЕ -Штрихкоды.Количество КОНЕЦ)
		|ИЗ
		|	Документ.МаркировкаТоваровИСМП.ШтрихкодыУпаковок КАК МаркировкаТоваровИСМПШтрихкоды
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК Штрихкоды
		|		ПО Штрихкоды.Ссылка = МаркировкаТоваровИСМПШтрихкоды.ШтрихкодУпаковки
		|ГДЕ
		|	МаркировкаТоваровИСМПШтрихкоды.Ссылка = &Основание
		|СГРУППИРОВАТЬ ПО
		|	Штрихкоды.Номенклатура,
		|	Штрихкоды.Характеристика
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПулКодовМаркировкиСУЗ.Номенклатура,
		|	ПулКодовМаркировкиСУЗ.Характеристика,
		|	СУММА(-1)
		|ИЗ
		|	РегистрСведений.ПулКодовМаркировкиСУЗ КАК ПулКодовМаркировкиСУЗ
		|ГДЕ
		|	ПулКодовМаркировкиСУЗ.ДокументОснование = &Основание
		|	И ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию.ДокументОснование <> &Основание
		|СГРУППИРОВАТЬ ПО
		|	ПулКодовМаркировкиСУЗ.Номенклатура,
		|	ПулКодовМаркировкиСУЗ.Характеристика
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказНаЭмиссию.Номенклатура,
		|	ЗаказНаЭмиссию.Характеристика,
		|	-СУММА(ЗаказНаЭмиссию.Количество)
		|ИЗ
		|	Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.Товары КАК ЗаказНаЭмиссию
		|ГДЕ
		|	ЗаказНаЭмиссию.Ссылка.ДокументОснование = &Основание
		|	И ЗаказНаЭмиссию.Ссылка <> &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ЗаказНаЭмиссию.Номенклатура,
		|	ЗаказНаЭмиссию.Характеристика
		|;
		|ВЫБРАТЬ
		|	НеобходимоЗаказать.Номенклатура      КАК Номенклатура,
		|	НеобходимоЗаказать.Характеристика    КАК Характеристика,
		|	СУММА(НеобходимоЗаказать.Количество) КАК Количество,
		|	СУММА(НеобходимоЗаказать.Количество) КАК КоличествоУпаковок
		|ИЗ
		|	НеобходимоЗаказать КАК НеобходимоЗаказать
		|СГРУППИРОВАТЬ ПО
		|	НеобходимоЗаказать.Номенклатура,
		|	НеобходимоЗаказать.Характеристика
		|ИМЕЮЩИЕ
		|	СУММА(НеобходимоЗаказать.Количество) > 0
		|";
		
		ЗаполнитьТабличнуюЧастьТовары(Запрос);
		
	КонецЕсли;
	
	Если Не ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		
		ДокументОснование = ДанныеЗаполнения;
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ДокументОснование,
			"Организация,
			|ВидПродукции,
			|ИдентификаторПроизводственногоЗаказа,
			|ИдентификаторПроизводственнойЛинии,
			|Операция");
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Реквизиты);
		
		Если Реквизиты.Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотМаркировкаОстатков Тогда
			СпособВводаВОборот = Перечисления.СпособыВводаВОборотСУЗ.МаркировкаОстатков;
		ИначеЕсли Реквизиты.Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоВнеЕАЭС
			Или Реквизиты.Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотТрансграничнаяТорговля Тогда
			СпособВводаВОборот = Перечисления.СпособыВводаВОборотСУЗ.Импорт;
		Иначе
			СпособВводаВОборот = Перечисления.СпособыВводаВОборотСУЗ.Производство;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоДаннымПулаКодовМаркировки(ДанныеЗаполнения)
	
	ДокументОснование = ДанныеЗаполнения.ДокументОснование;
	ВидПродукции      = ДанныеЗаполнения.ВидПродукции;
	
	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), СтрокаТЧ);
	КонецЦикла;
	
	ДополнительныеСвойства.Вставить("НеЗаполнятьТабличнуюЧасть");
	ИнтеграцияИСМППереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДокументОснование, "", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьТовары(Запрос)
	
	Выборка = Запрос.Выполнить().Выбрать();
	Товары.Очистить();
	Пока Выборка.следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьИдентификаторыСтрокТабличнойЧастиТовары()
	
	Для Каждого СтрокаТовары Из Товары Цикл
		
		Если ПустаяСтрока(СтрокаТовары.ИдентификаторСтроки) Тогда
			СтрокаТовары.ИдентификаторСтроки = Новый УникальныйИдентификатор();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

Процедура ПроверкаЗаполненияТоварныхПозицийСВозможностьюУдаленияЛишнихСтрок(Отказ = Ложь, РазрешитьУдалениеСтрок = Ложь)
	
	ЛимитПоКоличествуТоварнойПозиции = 100000;
	
	Для Каждого СтрокаТовары Из Товары Цикл
		Если СтрокаТовары.Количество > ЛимитПоКоличествуТоварнойПозиции Тогда
			ТекстСообщения = НСтр("ru = 'В строке %1 для товара ""%2"" превышен лимит по количеству на %3.'");
			ТекстСообщения = СтрШаблон(ТекстСообщения,
				СтрокаТовары.НомерСтроки,
				СтрокаТовары.Номенклатура,
				СтрокаТовары.Количество - ЛимитПоКоличествуТоварнойПозиции);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаТовары.НомерСтроки, "КоличествоУпаковок"),,
				Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли