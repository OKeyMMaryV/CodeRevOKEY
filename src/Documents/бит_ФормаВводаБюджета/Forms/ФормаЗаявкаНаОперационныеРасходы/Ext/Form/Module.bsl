// Хранит текущие значения реквизитов формы.
&НаКлиенте 
Перем мКэшРеквизитовФормы;


////////////////////////////////////////////////////////////////////////////////
// СЕРВЕРНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// бит_DKravchenko Процедура заполняет кэш значений, необходимый при работе на клиенте.
//
// Параметры:
//  КэшированныеЗначения - Структура.
//
&НаСервере
Процедура ЗаполнитьКэшЗначений(КэшированныеЗначения)
	
	КэшированныеЗначения = Новый Структура;
	
	// Перечисления.
	КэшПеречисления = Новый Структура;
	КэшПеречисления.Вставить("СтавкиНДС"						   , бит_ОбщегоНазначения.КэшироватьЗначенияПеречисления(Перечисления.СтавкиНДС));
	КэшПеречисления.Вставить("бит_РасходДоход"					   , бит_ОбщегоНазначения.КэшироватьЗначенияПеречисления(Перечисления.бит_РасходДоход));
	КэшПеречисления.Вставить("бит_ТипыСтатейОборотов"			   , бит_ОбщегоНазначения.КэшироватьЗначенияПеречисления(Перечисления.бит_ТипыСтатейОборотов));
	КэшПеречисления.Вставить("бит_ВидыДенежныхСредств"			   , бит_ОбщегоНазначения.КэшироватьЗначенияПеречисления(Перечисления.бит_ВидыДенежныхСредств));
	КэшПеречисления.Вставить("бит_ТипыЗаявокНаРасходованиеСредств" , бит_ОбщегоНазначения.КэшироватьЗначенияПеречисления(Перечисления.бит_ТипыЗаявокНаРасходованиеСредств));
	КэшПеречисления.Вставить("бит_БК_ВидыОперацийФормаВводаБюджета", бит_ОбщегоНазначения.КэшироватьЗначенияПеречисления(Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета));
	КэшПеречисления.Вставить("ВидыДоговоровКонтрагентов"		   , бит_ОбщегоНазначения.КэшироватьЗначенияПеречисления(Перечисления.ВидыДоговоровКонтрагентов));
	
	КэшированныеЗначения.Вставить("Перечисления", КэшПеречисления);
	
	// Доступные роли.
	КэшРольДоступна = Новый Структура;
	РольДоступнаИсполнительКазначейства = бит_ОбщегоНазначения.РольДоступнаРлс();
	КэшРольДоступна.Вставить("ИсполнительКазначейства", РольДоступнаИсполнительКазначейства);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
	Пользователь = Пользователи.ТекущийПользователь();
		
	КэшРольДоступна.Вставить("ДоступнаРольGuest"			, УправлениеДоступом.ЕстьРоль("Guest",,Пользователь));
	КэшРольДоступна.Вставить("ДоступнаРольОЦР"				, УправлениеДоступом.ЕстьРоль("ОК_ОЦР",,Пользователь));
	КэшРольДоступна.Вставить("ДоступнаРольГлавныйБК"		, УправлениеДоступом.ЕстьРоль("бит_БК_ГлавныйБК",,Пользователь));
	КэшРольДоступна.Вставить("ЭтоПолноправныйПользователь"	, Пользователи.ЭтоПолноправныйПользователь(Пользователь));
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
	
	КэшированныеЗначения.Вставить("РольДоступна", КэшРольДоступна);
	
	// Статусы заявки.
	КэшированныеЗначения.Вставить("Заявка_Черновик"	 , Справочники.бит_СтатусыОбъектов.Заявка_Черновик);
	КэшированныеЗначения.Вставить("Заявка_Утверждена", Справочники.бит_СтатусыОбъектов.Заявка_Утверждена);
	КэшированныеЗначения.Вставить("Заявка_Оплачена"	 , Справочники.бит_СтатусыОбъектов.Заявка_Оплачена);
	КэшированныеЗначения.Вставить("Заявка_Закрыта"	 , Справочники.бит_СтатусыОбъектов.Заявка_Закрыта);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
	//Legacy code	
	//ДокументЗаявка = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.бит_ФормаВводаБюджета"));
	//
	//КэшированныеЗначения.Вставить("ИзмеренияДоп"      		  , ДокументЗаявка.мИзмеренияДоп);
	//КэшированныеЗначения.Вставить("НастройкиИзмерений"		  , ДокументЗаявка.мНастройкиИзмерений);
	////КэшированныеЗначения.Вставить("СписокСтатейПринадлежность", ПолучитьСписокСтатейПоПринадлежности());
	//КэшированныеЗначения.Вставить("ТекущийСтатус"             , ДокументЗаявка.мТекущийСтатус);
	//КэшированныеЗначения.Вставить("ДатаИзмененияСтатуса"      , ДокументЗаявка.мДатаИзмененияСтатуса);
	//КэшированныеЗначения.Вставить("ВалютаРеглУчета"			  , Константы.ВалютаРегламентированногоУчета.Получить());
	////Начало_бит_БК_Магомедов_13.03.2012 
	////Установим текущего инициатора
	//Если ДокументЗаявка.ЭтоНовый() Тогда 
	//	ДокументЗаявка.бит_БК_Инициатор = ПараметрыСеанса.бит_БК_ТекущийИнициатор;
	//КонецЕсли;
	////Установим руководителя
	////Если ДокументЗаявка.ЭтоНовый() И ЗначениеЗаполнено(ДокументЗаявка.бит_БК_Инициатор.Руководитель) Тогда//БИТ АКриштопов 2482
	////	РуководительИнициатора = Справочники.бит_БК_Инициаторы.НайтиПоНаименованию(ДокументЗаявка.бит_БК_Инициатор.Руководитель);
	////КонецЕсли;
	//
	//ЗначениеВДанныеФормы(ДокументЗаявка,Объект);
	////Конец_бит_БК_Магомедов_13.03.2012 
	
	//// Сформируем список доступных валют.
	//СписокВалют = бит_Казначейство.СформироватьСписокДоступныхВалют(Объект.Ссылка);
	//
	//КэшированныеЗначения.Вставить("СписокВалют", СписокВалют);
	
	//Заменено на:
	РезСтруктураСтатус = бит_Визирование.ПолучитьСтатусОбъекта(Объект.Ссылка, ПредопределенноеЗначение("Перечисление.бит_ВидыСтатусовОбъектов.Статус"));
	КэшированныеЗначения.Вставить("ТекущийСтатус"             , ?(ЗначениеЗаполнено(РезСтруктураСтатус.Статус), 
																					РезСтруктураСтатус.Статус, 
																					ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_Черновик")));
	КэшированныеЗначения.Вставить("ДатаИзмененияСтатуса"      , РезСтруктураСтатус.Дата);
	КэшированныеЗначения.Вставить("ВалютаРеглУчета"			  , Константы.ВалютаРегламентированногоУчета.Получить());
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Объект.бит_БК_Инициатор = ПараметрыСеанса.бит_БК_ТекущийИнициатор;
	КонецЕсли;	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
	
	флЭтоКомплекснаяАвтоматизация = бит_ОбщегоНазначения.ЭтоКомплекснаяАвтоматизация();
	флЭтоУПП					  = Ложь;
	
	КэшированныеЗначения.Вставить("флЭтоКомплекснаяАвтоматизация", флЭтоКомплекснаяАвтоматизация);
	КэшированныеЗначения.Вставить("флЭтоУПП"					 , флЭтоУПП);
	
	// Запишем параметр для формирования заголовка.
	КэшированныеЗначения.Вставить("ПредставлениеОбъекта", Объект.Ссылка.Метаданные().ПредставлениеОбъекта);
	
	//СписокВыбораТипЗаявки.Добавить(Перечисления.бит_ТипыЗаявокНаРасходованиеСредств.Плановая);
	//СписокВыбораТипЗаявки.Добавить(Перечисления.бит_ТипыЗаявокНаРасходованиеСредств.Внеплановая);
	
	//Справочники
	//Сценарии
	Структура = Новый Структура(
	"Бюджет_А,
	|Бюджет_У,
	|Бюджет_Инвест,
	|Заявка_У,
	|Заявка_Инвест,
	|Факт_А,
	|Факт_У,
	|Факт_УУ,
	|Факт_Инвест,
	|Контракт_Инвест",
	Справочники.СценарииПланирования.Бюджет_А,
	Справочники.СценарииПланирования.Бюджет_У,
	Справочники.СценарииПланирования.Бюджет_Инвест,
	Справочники.СценарииПланирования.Заявка_У,
	Справочники.СценарииПланирования.Заявка_Инвест,
	Справочники.СценарииПланирования.Факт_А,
	Справочники.СценарииПланирования.Факт_У,
	Справочники.СценарииПланирования.Факт_УУ,
	Справочники.СценарииПланирования.Факт_Инвест,
	Справочники.СценарииПланирования.Контракт_Инвест);	
	
	КэшированныеЗначения.Вставить("СценарииПланирования", Структура);
	
	Структура = Новый Структура(
	"БюджетА,
	|БюджетУ,
	|БюджетИнвест,
	|ЗаявкаОперационная,
	|ЗаявкаИнвестиционная,
	|Контракт",
	Справочники.бит_НастройкиФормВводаБюджета.БюджетА,
	Справочники.бит_НастройкиФормВводаБюджета.БюджетУ,
	Справочники.бит_НастройкиФормВводаБюджета.БюджетИнвест,
	Справочники.бит_НастройкиФормВводаБюджета.ЗаявкаОперационная,
	Справочники.бит_НастройкиФормВводаБюджета.ЗаявкаИнвестиционная,
	Справочники.бит_НастройкиФормВводаБюджета.Контракт);
	КэшированныеЗначения.Вставить("бит_НастройкиФормВводаБюджета", Структура);
	
	//список Фин контролеров
	Структура = бит_БК_Общий.ПолучитьСпискиБюджетныхКонтролеров();
	КэшированныеЗначения.Вставить("ФинКонтролеры",Структура);
	
	// + БИТ AMerkulov 2014-11-12  
	КэшированныеЗначения.Вставить("ТекущийИнициатор", ПараметрыСеанса.бит_БК_ТекущийИнициатор);
	// - БИТ AMerkulov 2014-11-12  
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-29 (#2942)
	КэшированныеЗначения.Вставить("ПользовательТекущегоИнициатора", КэшированныеЗначения.ТекущийИнициатор.Пользователь);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-29 (#2942)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-02 (#3393)
	//Используется для иной проверки при согласовании (кнопка Согласовать) и другого текста сообщения
	//Содержит признак наличия в списке доступных виз для согласования инициатором виз ОЦР, РД.
	мКэшЗначений.Вставить("ДоступныВизы_Корректировки", Ложь); 
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-02 (#3393)
	
КонецПроцедуры // ЗаполнитьКэшЗначений()

// бит_DKravchenko Процедура изменяет данные формы.
//
// Параметры:
//  СтруктураПараметров - Структура.
//  Отказ				- Булево.
//
&НаСервере 
Процедура ИзменитьДанныеФормы(СтруктураПараметров, Отказ)
	
	бит_ОбщегоНазначения.ИзменитьДанныеФормыСервер(Объект, СтруктураПараметров, Отказ);
	
	Если Не ЗначениеЗаполнено(Объект.ВидОперации) Тогда
		Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета[1];
	КонецЕсли;
	
КонецПроцедуры // ИзменитьДанныеФормы()

////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// бит_DKravchenko Процедура - обработчик события "ПриСозданииНаСервере" формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//{ bit_SVKushnirenko 28.12.2016 #2671.1
	рекСинхронизацияРеквизитовПроверкаПройдена = Ложь;	
	//} bit_SVKushnirenko 28.12.2016 #2671.1
	
	//ОК Довбешка Т. 29.11.2017
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	//ОК Довбешка Т.
	
	//+Сенин С.В. 11.08.16 №2656
	// Стандартные действия при создании на сервере.
	бит_РаботаСДиалогамиСервер.ФормаОбъектаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	//-Сенин С.В. 11.08.16 №2656
	
	//{ bit SVKushnirenko Bit 29.05.2017 #2811
	рекВыполнитьПостроениеОперацииПоСтатьямПриОткрытии = Ложь;
	пОбъектКопирования = Неопределено;
	Если ЭтаФорма.Параметры.Свойство("ЗначениеКопирования", пОбъектКопирования) И ЗначениеЗаполнено(пОбъектКопирования) Тогда  
		
		рекВыполнитьПостроениеОперацииПоСтатьямПриОткрытии = Истина;
	КонецЕсли;
	//} bit SVKushnirenko Bit 29.05.2017 #2811
	
	ЭтоНовый = ?(Параметры.Ключ.Пустая(), Истина, Ложь);
	
	// BIT Amerkulov 03092014 ++
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда		
		Для Каждого Стр Из Объект.БДДС Цикл
			Стр.бит_БК_НаименованиеОборудования = Неопределено;
		КонецЦикла;
	КонецЕсли;
	// BIT Amerkulov 03092014 --	
	
	// Для нового документа вызываем форму выбора вида операции.
	Если ЭтоНовый Тогда
		//Начало_бит_БК_Магомедов_15.12.2011 
		ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
		СтрКурса = бит_Бюджетирование.ПолучитьКурсПоСценарию(Объект.Сценарий,ВалютаДокумента,Объект.Дата);
		КурсДокумента      = СтрКурса.Курс;
		КратностьДокумента = СтрКурса.Кратность;
		ЕдиницаИзмеренияСумм = Перечисления.бит_ЕдиницыИзмеренияСумм.Единицы;
		
		Параметры.СтруктураПараметров.Вставить("ВалютаДокумента", ВалютаДокумента);
		Параметры.СтруктураПараметров.Вставить("КурсДокумента",КурсДокумента);
		Параметры.СтруктураПараметров.Вставить("КратностьДокумента",КратностьДокумента);
		Параметры.СтруктураПараметров.Вставить("ЕдиницаИзмеренияСумм", ЕдиницаИзмеренияСумм);
		//Конец_бит_БК_Магомедов_15.12.2011 
		
		//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Начало 20181106 (#3086)
		//теперь в табличной части разные валюты, код будет некорректен и курс на текущую дату устанавливется в процедуре ПриКопировании
		////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-21 (#2957)
		//пСтруктураКурса = ПолучитьКурсы(Объект.бит_БК_ВалютаДокумента, ТекущаяДата());
		//Параметры.СтруктураПараметров.Вставить("бит_БК_КурсДокумента"		,пСтруктураКурса.Курс);
		//Параметры.СтруктураПараметров.Вставить("бит_БК_КратностьДокумента"	,пСтруктураКурса.Кратность);
		//
		//Для Каждого пСтрокаБДДС Из Объект.БДДС Цикл 
		//	пСтрокаБДДС.бит_БК_Курс		 = пСтруктураКурса.Курс;
		//	пСтрокаБДДС.бит_БК_Кратность = пСтруктураКурса.Кратность;
		//	
		//	ПересчитатьСуммы("Курс", пСтрокаБДДС.ПолучитьИдентификатор());
		//	
		//КонецЦикла;
		//
		////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-21 (#2957)
		//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Конец 20181106 (#3086)
		
		ИзменитьДанныеФормы(Параметры.СтруктураПараметров, Отказ);
		
		УстановитьПредопределеннуюНастройкуФормы();	
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		//{ bit SVKushnirenko Bit 23.01.2017 #2671
		Объект.ФинансовыйКонтролер = Неопределено;
		//} bit SVKushnirenko Bit 23.01.2017 #2671
	КонецЕсли;
	
	// Заполняем кэш значений.
	ЗаполнитьКэшЗначений(мКэшЗначений);
	
	ПрочитатьУстановленныеВизы();
	УстановитьWEBНомер();
	УстановитьОтборФайлы(); 
	
	//{ bit_SVKushnirenko 01.06.2017 #2811
	//ИсходныйКод{
	////Начало_=Дата(Год(ТекущаяДата()),1,1,0,0,0);
	//Начало_=НачалоГода(ТекущаяДата());
	//Для сч=0 по 12*10 Цикл
	//	мес_=НачалоМесяца(ДобавитьМесяц(Начало_,сч));
	//	Элементы.БДДСПериод.СписокВыбора.Добавить(мес_,Формат(мес_,"ДФ='MMMM yyyy'"));
	//КОнецЦикла;	
	//}ИсходныйКод
	//Удалены неиспользуемые колонки из-за ненормального поведения таблицы формы	
	//} bit_SVKushnirenko 01.06.2017 #2811
	
	// BIT ++ AMerkulov 15.03.2014  / Заполнение ссылки на заказ:
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда	
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	бит_ЗаказРасходы.Ссылка
		|ИЗ
		|	Документ.бит_ЗаказРасходы КАК бит_ЗаказРасходы
		|ГДЕ
		|	бит_ЗаказРасходы.ДокументОснование = &Ссылка
		|	И бит_ЗаказРасходы.Суффикс = 1
		|	И бит_ЗаказРасходы.ПометкаУдаления = ЛОЖЬ");
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Заказ = Выборка.Ссылка;
		КонецЕсли;
	КонецЕсли;	
	// --
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
	//// BIT AMerkulov 20-04-2015 ++
	//УстановитьВидимостьКнопокСогласований();	
	//// BIT AMerkulov 20-04-2015 --
	//
	//// BIT AMerkulov 15092014 ++
	//УстановитьДоступностьКнопкиЗаписиТелефона();	
	//// BIT AMerkulov 15092014 --
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
	
	// + БИТ AMerkulov 2014-11-13
	Если ЗначениеЗаполнено(ДопСогласовательНаименование) Тогда
		Элементы.ГруппаДоп.Видимость = Истина;
		Элементы.ГруппаДоп.Заголовок = ДопСогласовательНаименование;
	КонецЕсли;
	// - БИТ AMerkulov 2014-11-13  
	
	// BIT AMerkulov 14-04-2015 ++
	Если Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Заявки с видом Контракт запрещено редактировать в данном режиме!";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	// BIT AMerkulov 14-04-2015 --
	
	//БИТ НАГолубева 25.02.2016 ++
	Если Объект.Проведен Тогда 
		Элементы.БДДС.ТолькоПросмотр = Истина;
	Иначе
		Элементы.БДДС.ТолькоПросмотр = Ложь;
	КонецЕсли;
	//БИТ НАГолубева 25.02.2016 --
	
	//{ bit_SVKushnirenko 20.12.2016 #2669
	//ИсходныйКод{
	// //+Сундукова 24.03.2016 №2095
	////+Сундукова 28.03.2016
	//бит_ФормаВводаБюджетаВызовСервера.ОбновитьДанныеПоОстаткуБюджета(объект);
	////-Сундукова 28.03.2016
	////-Сундукова 24.03.2016 №2095
	//}ИсходныйКод
	
	бит_БК_Общий.ЗаполнитьОстаткиБюджетаИПризнакиБюджетногоКонтроля(Объект);
	//} bit_SVKushnirenko 20.12.2016 #2669
	
	//+СБ Пискунова 03.02.2017 #2691 Укажем видимости кнопки Запуск процесса в зависимости от того проведн документ и реквизит СБ_ПроцессЗапущен = истина
	УстановитьПривилегированныйРежим(Истина);
	ОпределитьДоступностьКнопокМаршрутаСогласования();
	ПрограммноДобавитьЭлементыФормыСогласующих();
	УстановитьПривилегированныйРежим(Ложь);
	//-СБ Пискунова 03.02.2017 #2691 
	
	//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Начало 20181106 (#3086)
	//при внедрении 
	//скрыты элементы: Объектбит_БК_ЦФО, Объектбит_БК_ВалютаДокумента, бит_БК_КурсДокумента
	//добавлены элементы на форму: БДДСЦФО, БДДСбит_БК_ВалютаДоговора, БДДСбит_БК_Курс
	//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Конец 20181106 (#3086)
	
	// ++ БоровинскаяОА (СофтЛаб) 06.02.19 (#3131)
	бит_БК_Общий.ЗаполнитьСписокСтавокНДСДляДокументовБК(Элементы.БДДСбит_СтавкаНДС);	
	// -- БоровинскаяОА (СофтЛаб) 06.02.19 (#3131)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-11 (#3433)
	Элементы.БДДСок_ОтчетПоЗаявкеИОплате.Видимость = Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт");
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-11 (#3433)
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-05-15 (#3714)
	Элементы.БДДСАналитика_2.ФормаВыбора = "Справочник.ОбъектыСтроительства.Форма.ок_ФормаВыбора_Тонкая";
	
	УстановитьПараметрыВыбораДляСтатьиОборотов();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	бит_БК_КонтролирующиеСтатьиОборотовСрезПоследних.КонтролируемаяСтатья КАК КонтролируемаяСтатья
		|ИЗ
		|	РегистрСведений.бит_БК_КонтролирующиеСтатьиОборотов.СрезПоследних КАК бит_БК_КонтролирующиеСтатьиОборотовСрезПоследних
		|ГДЕ
		|	бит_БК_КонтролирующиеСтатьиОборотовСрезПоследних.АктивностьСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	МассивСтатей = Новый Массив;
	МассивСтатей.Добавить(ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ПустаяСсылка"));
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивСтатей.Добавить(ВыборкаДетальныеЗаписи.КонтролируемаяСтатья);
	КонецЦикла;
	
	ФиксированныйМассивСтатей = Новый ФиксированныйМассив(МассивСтатей);
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.Ссылка", ФиксированныйМассивСтатей);
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(ПараметрВыбора);  		
	ФиксированныйМассивПараметров = Новый ФиксированныйМассив(МассивПараметров);
	
	Элементы.БДДССтатьяОборотов.ПараметрыВыбора = ФиксированныйМассивПараметров;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-05-15 (#3714)
	
	//1С-ИжТиСи, Кондратьев, 03.2020, Обновление (
	Попытка
		ЭтотОбъект.ЗаблокироватьДанныеФормыДляРедактирования();
	Исключение
		Сообщить("Документ редактируется другим пользователем. Все внесенные изменения не будут сохранены");
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецПопытки;
	//1С-ИжТиСи, Кондратьев, 03.2020, Обновление )

	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-07-06 (#4242)
	// Вызов механизма доступности элементов управления.
	УстановитьНастройкиДоступностиЭлементов();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-07-06 (#4242
	
КонецПроцедуры //ПриСозданииНаСервере

//+CБ Пискунова 14.03.2017 #2691 
&НаСервере
Процедура ОпределитьДоступностьКнопокМаршрутаСогласования()

	ВидОперацииПодходит = ?(Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный или  Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный или  Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный, Истина, ложь);
	КнокаЗапускаПроцессаПоДатеПодходит = бит_БК_Общий.РеквизитыДляМуршрутовВидимы(Объект.Ссылка); 
	Если не Объект.СБ_ПроцессЗапущен и  объект.проведен и  КнокаЗапускаПроцессаПоДатеПодходит и ВидОперацииПодходит Тогда
		Элементы.СБ_ЗапускПроцесса.Видимость = Истина; 		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-01-29 (#2941)   
		//Элементы.СБ_ЗапускПроцесса.Доступность = Истина;    
		//Заменено на:
		Элементы.СБ_ЗапускПроцесса.Доступность = мКэшЗначений.ТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-01-29 (#2941)
	КонецЕсли;
	
	Если Не КнокаЗапускаПроцессаПоДатеПодходит  и ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Элементы.СБ_ЗапускПроцесса.Видимость = Ложь; 	
		Элементы.СБ_ЗапускПроцесса.Доступность = Ложь; 
	КонецЕсли; 
	
	Если Не ВидОперацииПодходит Тогда
		Элементы.СБ_ЗапускПроцесса.Видимость = Ложь;
	КонецЕсли;

	
	УстановитьВидимостьКнопокСогласований(); 

КонецПроцедуры
//+CБ Пискунова 14.03.2017 #2691

//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-08-29 (#2691)
//Перенос из базы "EIS_ForTest"
&НаСервере
Процедура ПрограммноДобавитьЭлементыФормыСогласующих() 
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-09 (#2873)
	//Новый алгоритм
	Если ЗначениеЗаполнено(бит_уп_Сервер.ПолучитьАлгоритмВизирования(Объект.Ссылка)) И
		 НЕ бит_БК_Общий.РеквизитыДляМуршрутовВидимы(Объект.Ссылка) Тогда 
		Элементы.ГруппаВизыСтарыйАлгоритм.Видимость = Истина;
		Возврат;	
	КонецЕсли; 	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-09 (#2873)
	
	УдаляемыеРеквизиты = Новый Массив;
	Реквизиты = ПолучитьРеквизиты();
	Колво=Реквизиты.Количество();
	Для п = 0 по Колво-1 Цикл
		ТекЭлемент = Реквизиты.Получить(п);
		Если Сред(ТекЭлемент.Имя,1,3)="Рек" Тогда
			УдаляемыеРеквизиты.Добавить(ТекЭлемент.Имя);
		КонецЕсли;   		
	КонецЦикла; 
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
	//Перенесено вниз
	//ИзменитьРеквизиты(,УдаляемыеРеквизиты);
	//Заменено на:
	ДобавляемыеРеквизиты = Новый Массив;
	пСтруктураРеквизитЗначение = Новый Структура;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	МАКСИМУМ(ЕСТЬNULL(бит_УстановленныеВизы.Виза, """")) КАК Виза,
	|	ЕСТЬNULL(бит_УстановленныеВизы.ФизическоеЛицо, """") КАК ФизическоеЛицо,
	|	МАКСИМУМ(ЕСТЬNULL(бит_УстановленныеВизы.Решение, """")) КАК Решение,
	|	МАКСИМУМ(ЕСТЬNULL(бит_УстановленныеВизы.ФизическоеЛицо.ЦФО, """")) КАК ЦФО,
	|	МАКСИМУМ(ЕСТЬNULL(бит_УстановленныеВизы.ФизическоеЛицо.Email, """")) КАК Email,
	|	МАКСИМУМ(ЕСТЬNULL(бит_УстановленныеВизы.ФизическоеЛицо.Должность, """")) КАК Должность,
	|	МАКСИМУМ(ЕСТЬNULL(бит_УстановленныеВизы.ФизическоеЛицо.Телефон, """")) КАК Телефон,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-07-24 (#3231)
	|	МАКСИМУМ(ЕСТЬNULL(Выразить(бит_УстановленныеВизы.ок_РасшифровкаУсловияОпределенияВизы КАК Строка(999)), """")) КАК ок_РасшифровкаУсловияОпределенияВизы,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-07-24 (#3231)	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-01-12 (#2942)
	//|	МАКСИМУМ(бит_УстановленныеВизы.КодСортировки) КАК КодСортировки,
	//Заменено на:
	|	МИНИМУМ(бит_УстановленныеВизы.КодСортировки) КАК КодСортировки,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-01-12 (#2942)
	|	бит_УстановленныеВизы.Виза.СБ_ГруппаВиз
	|ИЗ
	|	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы
	|ГДЕ
	|	бит_УстановленныеВизы.Объект = &Объект
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-28 (#2873)
	|	И бит_УстановленныеВизы.ФизическоеЛицо <> Значение(Справочник.Бит_БК_Инициаторы.СБ_НеЗадан)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-28 (#2873)
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_УстановленныеВизы.Виза.СБ_ГруппаВиз,
	|	ЕСТЬNULL(бит_УстановленныеВизы.ФизическоеЛицо, """")
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодСортировки";
	
	Запрос.УстановитьПараметр("Объект", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Сч = 0;
	СчГрупп = 0;
	НомерГруппы = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сч = Сч + 1;
		
		Если Цел(СчГрупп/4)= СчГрупп/4  или СчГрупп/4 = 0 Тогда
			НомерГруппы = НомерГруппы + 1;
			Если Элементы.Найти("СБ_Группа"+Строка(НомерГруппы)) = Неопределено Тогда	
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-29 (#2942)
				//НовыйЭлемент = ЭтаФорма.Элементы.Добавить("СБ_Группа"+Строка(НомерГруппы), Тип("ГруппаФормы"), Элементы.Группа12);
				//НовыйЭлемент.Вид			= ВидГруппыФормы.ОбычнаяГруппа;
				//НовыйЭлемент.Заголовок = "" ;
				//НовыйЭлемент.группировка=ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
				//Заменено на:
				СтрЗапРекв = Новый Структура;
				СтрЗапРекв.Вставить("ТипЭлемента"			,	Тип("ГруппаФормы"));
				СтрЗапРекв.Вставить("ИмяЭлементаРодителя"	,	"Группа12");
				СтрЗапРекв.Вставить("Вид"					,	ВидГруппыФормы.ОбычнаяГруппа);
				СтрЗапРекв.Вставить("Заголовок"				,	"");				
				СтрЗапРекв.Вставить("Группировка"			,	ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);				
				пСтруктураРеквизитЗначение.Вставить("СБ_Группа"+Строка(НомерГруппы),СтрЗапРекв);
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-29 (#2942)				
			КонецЕсли;	
		КонецЕсли;
		
		СчГрупп=СчГрупп+1;
		
		//Добавим группу:
		
		ЭлементГруппыСогласующих = Элементы.Найти("СБ_ГруппаСогласующих"+Строка(Сч));
		Если ЭлементГруппыСогласующих = Неопределено Тогда 
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-29 (#2942)
			//НовыйЭлемент = ЭтаФорма.Элементы.Добавить("СБ_ГруппаСогласующих"+Строка(Сч), Тип("ГруппаФормы"), Элементы["СБ_Группа"+Строка(НомерГруппы)]);
			//НовыйЭлемент.Вид			= ВидГруппыФормы.ОбычнаяГруппа;
			//НовыйЭлемент.Заголовок = "" +ВыборкаДетальныеЗаписи.Виза;
			//НовыйЭлемент.Отображение = ОтображениеОбычнойГруппы.СильноеВыделение;
			//Заменено на:
			СтрЗапРекв = Новый Структура;
			СтрЗапРекв.Вставить("ТипЭлемента"			,	Тип("ГруппаФормы"));
			СтрЗапРекв.Вставить("ИмяЭлементаРодителя"	,	"СБ_Группа"+Строка(НомерГруппы));
			СтрЗапРекв.Вставить("Вид"					,	ВидГруппыФормы.ОбычнаяГруппа);
			СтрЗапРекв.Вставить("Заголовок"				,	""+ВыборкаДетальныеЗаписи.Виза);				
			СтрЗапРекв.Вставить("Отображение"			,	ОтображениеОбычнойГруппы.СильноеВыделение);			
			пСтруктураРеквизитЗначение.Вставить("СБ_ГруппаСогласующих"+Строка(Сч),СтрЗапРекв);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-29 (#2942)
		Иначе
			ЭлементГруппыСогласующих.Заголовок = "" +ВыборкаДетальныеЗаписи.Виза; 
		КонецЕсли;
		
			
		//РеквзитФИО сч_1:
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-29 (#2942)
		//ЕстьЛиЭлемент =  Элементы.Найти("СБ_ГруппаСогласующих"+Строка(Сч));
		//Отрисовка перенесена ниже
		ЕстьЛиЭлемент = Истина;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-29 (#2942)
		Если  ЕстьЛиЭлемент <> Неопределено Тогда
			МассивТипов = новый Массив;
			МассивТипов.Добавить("СправочникСсылка.бит_БК_Инициаторы");
			МассивТипов.Добавить("СправочникСсылка.Пользователи");
			МассивТипов.Добавить("Строка");
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
			//ДобавляемыеРеквизиты = Новый Массив;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
			
			МассивТипов.Добавить(ТипЗнч(ВыборкаДетальныеЗаписи.ФизическоеЛицо));
			
			
			Реквизит = Новый РеквизитФормы("Реквизит"+Строка(Сч)+"1", Новый ОписаниеТипов(МассивТипов),,"", Истина);	
			
			ДобавляемыеРеквизиты.Добавить(Реквизит);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
			//ИзменитьРеквизиты(ДобавляемыеРеквизиты);
			//
			//Если Элементы.Найти("Реквизит" + Строка(Сч)+"1") = Неопределено Тогда
			//	НовыйЭлемент = ЭтаФорма.Элементы.Добавить("Реквизит" + Строка(Сч)+"1", Тип("ПолеФормы"), ЕстьЛиЭлемент);
			//	НовыйЭлемент.ПутьКДанным 	= "Реквизит"+Строка(Сч)+"1";                                               
			//	НовыйЭлемент.Вид			= ВидПоляФормы.ПолеВвода;
			//	НовыйЭлемент.Заголовок = "ФИО";
			//	НовыйЭлемент.ТолькоПросмотр = Истина;
			//	ЭтаФорма["Реквизит" + Строка(Сч)+"1"] = ВыборкаДетальныеЗаписи.ФизическоеЛицо;
			//Заменено на:				
			Если Элементы.Найти("Реквизит" + Строка(Сч)+"1") = Неопределено Тогда
				СтрЗапРекв = Новый Структура;
				СтрЗапРекв.Вставить("ПутьКДанным"			,	Реквизит.Имя);
				СтрЗапРекв.Вставить("ТипЭлемента"			,	Тип("ПолеФормы"));
				СтрЗапРекв.Вставить("ИмяЭлементаРодителя"	,	"СБ_ГруппаСогласующих"+Строка(Сч)); 
				СтрЗапРекв.Вставить("Вид"					,	ВидПоляФормы.ПолеВвода);
				СтрЗапРекв.Вставить("Заголовок"				,	"ФИО");
				СтрЗапРекв.Вставить("ТолькоПросмотр"		,	Истина);				
				СтрЗапРекв.Вставить("РекЗначение"			,	ВыборкаДетальныеЗаписи.ФизическоеЛицо);
				
				пСтруктураРеквизитЗначение.Вставить(Реквизит.Имя,СтрЗапРекв);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
				
			Иначе
				ЭтаФорма["Реквизит" + Строка(Сч)+"1"] = ВыборкаДетальныеЗаписи.ФизическоеЛицо;
			КонецЕсли;
			
			//Реквизит Функция сч_2:
			МассивТипов = новый Массив;
			МассивТипов.Добавить("СправочникСсылка.Подразделения");
			МассивТипов.Добавить("Строка");
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
			//ДобавляемыеРеквизиты = Новый Массив;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
			МассивТипов.Добавить(ТипЗнч(ВыборкаДетальныеЗаписи.ЦФО));
			
			
			Реквизит = Новый РеквизитФормы("Реквизит"+Строка(Сч)+"2", Новый ОписаниеТипов(МассивТипов),,"", Истина);	
			
			ДобавляемыеРеквизиты.Добавить(Реквизит);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
			//ИзменитьРеквизиты(ДобавляемыеРеквизиты);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
			Если Элементы.Найти("Реквизит" + Строка(Сч)+"2") = Неопределено Тогда
				
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
				//НовыйЭлемент = ЭтаФорма.Элементы.Добавить("Реквизит" + Строка(Сч)+"2", Тип("ПолеФормы"), ЕстьЛиЭлемент);
				//НовыйЭлемент.ПутьКДанным 	= "Реквизит"+Строка(Сч)+"2";
				//НовыйЭлемент.Вид			= ВидПоляФормы.ПолеВвода;
				//НовыйЭлемент.Заголовок = "ЦФО";
				//НовыйЭлемент.ТолькоПросмотр = Истина; 
				//ЭтаФорма["Реквизит" + Строка(Сч)+"2"] = ВыборкаДетальныеЗаписи.ЦФО;
				//Заменено на:				
				СтрЗапРекв = Новый Структура;
				СтрЗапРекв.Вставить("ПутьКДанным"			,	Реквизит.Имя);
				СтрЗапРекв.Вставить("ТипЭлемента"			,	Тип("ПолеФормы"));
				СтрЗапРекв.Вставить("ИмяЭлементаРодителя"	,	"СБ_ГруппаСогласующих"+Строка(Сч)); 
				СтрЗапРекв.Вставить("Вид"					,	ВидПоляФормы.ПолеВвода);
				СтрЗапРекв.Вставить("Заголовок"				,	"ЦФО");
				СтрЗапРекв.Вставить("ТолькоПросмотр"		,	Истина);
				СтрЗапРекв.Вставить("РекЗначение"			,	ВыборкаДетальныеЗаписи.ЦФО);
				
				пСтруктураРеквизитЗначение.Вставить(Реквизит.Имя,СтрЗапРекв);
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
			Иначе
				ЭтаФорма["Реквизит" + Строка(Сч)+"2"] = ВыборкаДетальныеЗаписи.ЦФО;
			КонецЕсли;
			
			//Реквизит Должность сч_3:
			МассивТипов = новый Массив; 		
			МассивТипов.Добавить("Строка");
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
			//ДобавляемыеРеквизиты = Новый Массив;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
			МассивТипов.Добавить(ТипЗнч(ВыборкаДетальныеЗаписи.Должность));
			
			
			Реквизит = Новый РеквизитФормы("Реквизит"+Строка(Сч)+"3", Новый ОписаниеТипов(МассивТипов),,"", Истина);	
			
			ДобавляемыеРеквизиты.Добавить(Реквизит);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
			//ИзменитьРеквизиты(ДобавляемыеРеквизиты);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
			Если Элементы.Найти("Реквизит" + Строка(Сч)+"3") = Неопределено Тогда
				
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
				//НовыйЭлемент = ЭтаФорма.Элементы.Добавить("Реквизит" + Строка(Сч)+"3", Тип("ПолеФормы"), ЕстьЛиЭлемент);
				//НовыйЭлемент.ПутьКДанным 	= "Реквизит"+Строка(Сч)+"3";
				//НовыйЭлемент.Вид			= ВидПоляФормы.ПолеВвода;
				//НовыйЭлемент.Заголовок = "Должность";
				//НовыйЭлемент.ТолькоПросмотр = Истина;
				//ЭтаФорма["Реквизит" + Строка(Сч)+"3"] = ВыборкаДетальныеЗаписи.Должность;
				//Заменено на:				
				СтрЗапРекв = Новый Структура;
				СтрЗапРекв.Вставить("ПутьКДанным"			,	Реквизит.Имя);
				СтрЗапРекв.Вставить("ТипЭлемента"			,	Тип("ПолеФормы"));
				СтрЗапРекв.Вставить("ИмяЭлементаРодителя"	,	"СБ_ГруппаСогласующих"+Строка(Сч)); 
				СтрЗапРекв.Вставить("Вид"					,	ВидПоляФормы.ПолеВвода);
				СтрЗапРекв.Вставить("Заголовок"				,	"Должность");
				СтрЗапРекв.Вставить("ТолькоПросмотр"		,	Истина);
				СтрЗапРекв.Вставить("РекЗначение"			,	ВыборкаДетальныеЗаписи.Должность);
				
				пСтруктураРеквизитЗначение.Вставить(Реквизит.Имя,СтрЗапРекв);
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
			Иначе
				ЭтаФорма["Реквизит" + Строка(Сч)+"3"] = ВыборкаДетальныеЗаписи.Должность;
			КонецЕсли;
			//Реквизит емейл сч_4:
			МассивТипов = новый Массив;	
			МассивТипов.Добавить("Строка");
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
			//ДобавляемыеРеквизиты = Новый Массив;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
			
			МассивТипов.Добавить(ТипЗнч(ВыборкаДетальныеЗаписи.Email));
			
			
			Реквизит = Новый РеквизитФормы("Реквизит"+Строка(Сч)+"4", Новый ОписаниеТипов(МассивТипов),,"", Истина);	
			
			ДобавляемыеРеквизиты.Добавить(Реквизит);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
			//ИзменитьРеквизиты(ДобавляемыеРеквизиты);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
			Если Элементы.Найти("Реквизит" + Строка(Сч)+"4") = Неопределено Тогда
				
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
				//НовыйЭлемент = ЭтаФорма.Элементы.Добавить("Реквизит" + Строка(Сч)+"4", Тип("ПолеФормы"), ЕстьЛиЭлемент);
				//НовыйЭлемент.ПутьКДанным 	= "Реквизит"+Строка(Сч)+"4";
				//НовыйЭлемент.Вид			= ВидПоляФормы.ПолеВвода;
				//НовыйЭлемент.Заголовок = "Email";
				//НовыйЭлемент.ТолькоПросмотр = Истина;
				//ЭтаФорма["Реквизит" + Строка(Сч)+"4"] = ВыборкаДетальныеЗаписи.Email;
				//Заменено на:				
				СтрЗапРекв = Новый Структура;
				СтрЗапРекв.Вставить("ПутьКДанным"			,	Реквизит.Имя);
				СтрЗапРекв.Вставить("ТипЭлемента"			,	Тип("ПолеФормы"));
				СтрЗапРекв.Вставить("ИмяЭлементаРодителя"	,	"СБ_ГруппаСогласующих"+Строка(Сч)); 
				СтрЗапРекв.Вставить("Вид"					,	ВидПоляФормы.ПолеВвода);
				СтрЗапРекв.Вставить("Заголовок"				,	"Email");
				СтрЗапРекв.Вставить("ТолькоПросмотр"		,	Истина);
				СтрЗапРекв.Вставить("РекЗначение"			,	ВыборкаДетальныеЗаписи.Email);
				
				пСтруктураРеквизитЗначение.Вставить(Реквизит.Имя,СтрЗапРекв);
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
			Иначе
				ЭтаФорма["Реквизит" + Строка(Сч)+"4"] = ВыборкаДетальныеЗаписи.Email;
			КонецЕсли;
			//Реквизит телефон сч_5:
			МассивТипов = новый Массив;	
			МассивТипов.Добавить("Строка");
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
			//ДобавляемыеРеквизиты = Новый Массив;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
			
			МассивТипов.Добавить(ТипЗнч(ВыборкаДетальныеЗаписи.Телефон));
			
			
			Реквизит = Новый РеквизитФормы("Реквизит"+Строка(Сч)+"5", Новый ОписаниеТипов(МассивТипов),,"", Истина);	
			
			ДобавляемыеРеквизиты.Добавить(Реквизит);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
			//ИзменитьРеквизиты(ДобавляемыеРеквизиты);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
			Если Элементы.Найти("Реквизит" + Строка(Сч)+"5") = Неопределено Тогда
				
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
				//НовыйЭлемент = ЭтаФорма.Элементы.Добавить("Реквизит" + Строка(Сч)+"5", Тип("ПолеФормы"), ЕстьЛиЭлемент);
				//НовыйЭлемент.ПутьКДанным 	= "Реквизит"+Строка(Сч)+"5";
				//НовыйЭлемент.Вид			= ВидПоляФормы.ПолеВвода;
				//НовыйЭлемент.Заголовок = "Телефон";
				//НовыйЭлемент.ТолькоПросмотр = Истина;
				//ЭтаФорма["Реквизит" + Строка(Сч)+"5"] = ВыборкаДетальныеЗаписи.Телефон;
				//Заменено на:				
				СтрЗапРекв = Новый Структура;
				СтрЗапРекв.Вставить("ПутьКДанным"			,	Реквизит.Имя);
				СтрЗапРекв.Вставить("ТипЭлемента"			,	Тип("ПолеФормы"));
				СтрЗапРекв.Вставить("ИмяЭлементаРодителя"	,	"СБ_ГруппаСогласующих"+Строка(Сч)); 
				СтрЗапРекв.Вставить("Вид"					,	ВидПоляФормы.ПолеВвода);
				СтрЗапРекв.Вставить("Заголовок"				,	"Телефон");
				СтрЗапРекв.Вставить("ТолькоПросмотр"		,	Истина);
				СтрЗапРекв.Вставить("РекЗначение"			,	ВыборкаДетальныеЗаписи.Телефон);
				
				пСтруктураРеквизитЗначение.Вставить(Реквизит.Имя,СтрЗапРекв);
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
			Иначе
				ЭтаФорма["Реквизит" + Строка(Сч)+"5"] = ВыборкаДетальныеЗаписи.Телефон;
			КонецЕсли;
			//Реквизит Решение сч_6:
			МассивТипов = новый Массив;	
			МассивТипов.Добавить("Строка");
			МассивТипов.Добавить("СправочникСсылка.бит_ВидыРешенийСогласования");
			
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
			//ДобавляемыеРеквизиты = Новый Массив;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
			
			МассивТипов.Добавить(ТипЗнч(ВыборкаДетальныеЗаписи.Решение));
			
			
			Реквизит = Новый РеквизитФормы("Реквизит"+Строка(Сч)+"6", Новый ОписаниеТипов(МассивТипов),,"", Истина);	
			
			ДобавляемыеРеквизиты.Добавить(Реквизит);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
			//ИзменитьРеквизиты(ДобавляемыеРеквизиты);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
			
			Если Элементы.Найти("Реквизит" + Строка(Сч)+"6") = Неопределено Тогда
				
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
				//НовыйЭлемент = ЭтаФорма.Элементы.Добавить("Реквизит" + Строка(Сч)+"6", Тип("ПолеФормы"), ЕстьЛиЭлемент);
				//НовыйЭлемент.ПутьКДанным 	= "Реквизит"+Строка(Сч)+"6";
				//НовыйЭлемент.Вид			= ВидПоляФормы.ПолеВвода;
				//НовыйЭлемент.Заголовок = "Решение";
				//НовыйЭлемент.ТолькоПросмотр = Истина;
				//ЭтаФорма["Реквизит" + Строка(Сч)+"6"] = ВыборкаДетальныеЗаписи.Решение;
				//Заменено на:				
				СтрЗапРекв = Новый Структура;
				СтрЗапРекв.Вставить("ПутьКДанным"			,	Реквизит.Имя);
				СтрЗапРекв.Вставить("ТипЭлемента"			,	Тип("ПолеФормы"));
				СтрЗапРекв.Вставить("ИмяЭлементаРодителя"	,	"СБ_ГруппаСогласующих"+Строка(Сч)); 
				СтрЗапРекв.Вставить("Вид"					,	ВидПоляФормы.ПолеВвода);
				СтрЗапРекв.Вставить("Заголовок"				,	"Решение");
				СтрЗапРекв.Вставить("ТолькоПросмотр"		,	Истина);
				СтрЗапРекв.Вставить("РекЗначение"			,	ВыборкаДетальныеЗаписи.Решение);
				
				пСтруктураРеквизитЗначение.Вставить(Реквизит.Имя,СтрЗапРекв);
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942) 
			Иначе
				ЭтаФорма["Реквизит" + Строка(Сч)+"6"] = ВыборкаДетальныеЗаписи.Решение;
			КонецЕсли;
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-07-24 (#3231)
			//Реквизит ок_СообщениеПользователюПоМаршрутуСогласования сч_6:
			МассивТипов = новый Массив;	
			МассивТипов.Добавить("Строка");
			
			МассивТипов.Добавить(ТипЗнч(ВыборкаДетальныеЗаписи.ок_РасшифровкаУсловияОпределенияВизы));
			 			
			Реквизит = Новый РеквизитФормы("Реквизит"+Строка(Сч)+"7", Новый ОписаниеТипов(МассивТипов),,"", Истина);	
			
			ДобавляемыеРеквизиты.Добавить(Реквизит);
			
			Если Элементы.Найти("Реквизит" + Строка(Сч)+"7") = Неопределено Тогда
				
				СтрЗапРекв = Новый Структура;
				СтрЗапРекв.Вставить("ПутьКДанным"			,	Реквизит.Имя);
				СтрЗапРекв.Вставить("ТипЭлемента"			,	Тип("ПолеФормы"));
				СтрЗапРекв.Вставить("ИмяЭлементаРодителя"	,	"СБ_ГруппаСогласующих"+Строка(Сч)); 
				СтрЗапРекв.Вставить("Вид"					,	ВидПоляФормы.ПолеВвода);
				СтрЗапРекв.Вставить("Заголовок"				,	"Расшифровка условия определения");
				СтрЗапРекв.Вставить("ТолькоПросмотр"		,	Истина);
				СтрЗапРекв.Вставить("РекЗначение"			,	ВыборкаДетальныеЗаписи.ок_РасшифровкаУсловияОпределенияВизы);
				СтрЗапРекв.Вставить("МногострочныйРежим"    ,   Истина);
											
				пСтруктураРеквизитЗначение.Вставить(Реквизит.Имя,СтрЗапРекв);
				
			Иначе
				ЭтаФорма["Реквизит" + Строка(Сч)+"7"] = ВыборкаДетальныеЗаписи.ок_РасшифровкаУсловияОпределенияВизы;
			КонецЕсли;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-07-24 (#3231)
			
		КонецЕсли;
	КонецЦикла;

	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
	Если ДобавляемыеРеквизиты.Количество()>0 ИЛИ
		 УдаляемыеРеквизиты.Количество()>0
	Тогда  
	  	ИзменитьРеквизиты(ДобавляемыеРеквизиты, УдаляемыеРеквизиты);
				
		Для Каждого пСоздаваемыйЭлемент Из пСтруктураРеквизитЗначение Цикл 
			Если пСоздаваемыйЭлемент.Значение.ТипЭлемента =  Тип("ПолеФормы") Тогда 
				НовыйЭлемент = ЭтаФорма.Элементы.Добавить(пСоздаваемыйЭлемент.Ключ, пСоздаваемыйЭлемент.Значение.ТипЭлемента, Элементы[пСоздаваемыйЭлемент.Значение.ИмяЭлементаРодителя]);
				НовыйЭлемент.ПутьКДанным 	= пСоздаваемыйЭлемент.Значение.ПутьКДанным;
				НовыйЭлемент.Вид			= пСоздаваемыйЭлемент.Значение.Вид;
				НовыйЭлемент.Заголовок 		= пСоздаваемыйЭлемент.Значение.Заголовок;
				НовыйЭлемент.ТолькоПросмотр = пСоздаваемыйЭлемент.Значение.ТолькоПросмотр;
				
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-07-24 (#3231)
				Если пСоздаваемыйЭлемент.Значение.Свойство("МногострочныйРежим") Тогда 
					НовыйЭлемент.МногострочныйРежим = пСоздаваемыйЭлемент.Значение.МногострочныйРежим;
				КонецЕсли;
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-07-24 (#3231)
				
				ЭтаФорма[НовыйЭлемент.ПутьКДанным] = пСоздаваемыйЭлемент.Значение.РекЗначение;
			ИначеЕсли пСоздаваемыйЭлемент.Значение.ТипЭлемента =  Тип("ГруппаФормы") Тогда 
				НовыйЭлемент = ЭтаФорма.Элементы.Добавить(пСоздаваемыйЭлемент.Ключ, пСоздаваемыйЭлемент.Значение.ТипЭлемента, Элементы[пСоздаваемыйЭлемент.Значение.ИмяЭлементаРодителя]);
				НовыйЭлемент.Вид			= пСоздаваемыйЭлемент.Значение.Вид;
				НовыйЭлемент.Заголовок 		= пСоздаваемыйЭлемент.Значение.Заголовок;
				Если пСоздаваемыйЭлемент.Значение.Свойство("Отображение") Тогда 
					НовыйЭлемент.Отображение = пСоздаваемыйЭлемент.Значение.Отображение;
				КонецЕсли;
				Если пСоздаваемыйЭлемент.Значение.Свойство("Группировка") Тогда 
					НовыйЭлемент.Группировка = пСоздаваемыйЭлемент.Значение.Группировка;
				КонецЕсли;                                                              
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
	
КонецПроцедуры
//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-08-29 (#2691)

&НаСервере
Процедура УстановитьПредопределеннуюНастройкуФормы()
	
	// + БИТ AMerkulov 2013-12-18 /  Универсальная заявка
	Если Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный тогда
		Объект.НастройкаФормы = Справочники.бит_НастройкиФормВводаБюджета.ЗаявкаОперационная;
		Объект.Сценарий = Справочники.СценарииПланирования.Заявка_У;
	ИначеЕсли Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный тогда
		Объект.НастройкаФормы = Справочники.бит_НастройкиФормВводаБюджета.ЗаявкаИнвестиционная;
		Объект.Сценарий = Справочники.СценарииПланирования.Заявка_Инвест;
	КонецЕсли;
	// - БИТ AMerkulov 
	
КонецПроцедуры

// BIT AMerkulov 20-04-2015 ++
&НаСервере
Процедура УстановитьВидимостьКнопокСогласований()
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-27 (#2873)
	Элементы.Отклонить.Доступность		 	= Ложь;
	Элементы.КнопкаСогласовать.Доступность 	= Ложь;	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-27 (#2873)
	
	//Если мКэшЗначений Тогда
		
	//Если Объект.Проведен и Объект.СБ_ПроцессЗапущен Тогда
		
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	бит_УстановленныеВизы.Объект КАК Объект,
	//                      |	МАКСИМУМ(бит_УстановленныеВизы.ДатаУстановки) КАК ДатаУстановки,
	//                      |	МИНИМУМ(ВЫБОР
	//                      |			КОГДА бит_УстановленныеВизы.Решение = ЗНАЧЕНИЕ(Справочник.бит_ВидыРешенийСогласования.Согласовано)
	//                      |				ТОГДА ИСТИНА
	//                      |			ИНАЧЕ ЛОЖЬ
	//                      |		КОНЕЦ) КАК Решение,
	//                      |	бит_УстановленныеВизы.Виза
	//                      |ИЗ
	//                      |	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы
	//                      |ГДЕ
	//                      |	(бит_УстановленныеВизы.ФизическоеЛицо = &Инициатор
	//                      |			ИЛИ бит_УстановленныеВизы.Пользователь = &Инициатор) И бит_УстановленныеВизы.Объект = &Объект
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	бит_УстановленныеВизы.Объект,
	//                      |	бит_УстановленныеВизы.Виза");
	//					  
	//Запрос.УстановитьПараметр("Инициатор", мКэшЗначений.ТекущийИнициатор);
	//Запрос.УстановитьПараметр("Объект", Объект.Ссылка);
	//ВыборкаСогласования = Запрос.Выполнить().Выбрать();
	//
	////Если мКэшЗначений.ТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована ИЛИ мКэшЗначений.ТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Закрыта Тогда
	////	Элементы.КнопкаСогласовать.Доступность = Ложь;   
	////КонецЕсли;
	//
	//Если ВыборкаСогласования.Следующий() Тогда
	//	//Элементы.КнопкаСогласовать.Видимость = Истина;
	//	
	//	Если ВыборкаСогласования.Решение = Истина Тогда
	//		Элементы.Отклонить.Доступность 	= Ложь;	
	//		//+СБ Пискунова #2691 06.02.2017
	//		Элементы.КнопкаСогласовать.Доступность 	= Ложь;
	//		Элементы.КнопкаСогласовать.Видимость 	= Ложь;
	//		//-СБ Пискунова #2691 06.02.2017
	//	Иначе
	//		Элементы.Отклонить.Доступность 	= Истина;
	//		Элементы.Отклонить.Видимость 	= Истина;
	//	 //+СБ Пискунова #2691 06.02.2017
	//		Элементы.КнопкаСогласовать.Доступность 	= Истина;
	//		Элементы.КнопкаСогласовать.Видимость 	= Истина;
	//	//-СБ Пискунова #2691 06.02.2017
	//	КонецЕсли;
	//	
	//Иначе
	//	Элементы.КнопкаСогласовать.Видимость 	= Ложь;
	//	Элементы.Отклонить.Видимость 			= Ложь;		
	//КонецЕсли;	
	//
	//
	//Если Элементы.КнопкаСогласовать.Видимость И ВыборкаСогласования.Виза = Справочники.бит_Визы.бит_БК_Эксперт Тогда
	//	мКэшЗначений.Вставить("СогласованиеЭкспертом", Истина);	
	//Иначе
	//	мКэшЗначений.Вставить("СогласованиеЭкспертом", Ложь);			
	//КонецЕсли;
	//
	//
	//Элементы.БДДСКорректировкаБюджета.Доступность = Ложь;
//Иначе
//			Элементы.КнопкаСогласовать.Видимость 	= Ложь;
//		Элементы.Отклонить.Видимость 			= Ложь;	
//	КонецЕсли;
	//Если Объект.ОК_ОЦР <> ПараметрыСеанса.бит_БК_ТекущийИнициатор Тогда
	//	Элементы.БДДСКорректировкаБюджета.Доступность = Ложь;
	//Иначе 
	//	Элементы.БДДСКорректировкаБюджета.Доступность = Истина;		
	//КонецЕсли;
	//Отбор = Новый Структура;
	//Отбор.Вставить("Объект", Объект.Ссылка);
	//
	//НаборВизы = бит_Визирование.ПрочитатьНаборВиз(Отбор);
	//Алгоритм = бит_Визирование.ПолучитьАлгоритмПоНаборуВиз(НаборВизы);
	//флВыполнятьПоэтапно = бит_уп_Сервер.ВыполнятьАлгоритмПоэтапно(Алгоритм);
	//
	//ТаблицаВизы = НаборВизы.Выгрузить();
	//
	//ТаблицаТочек = бит_уп_Сервер.ПолучитьТаблицуТочек(Алгоритм,ТаблицаВизы);
	//
	////УдалитьНижестоящиеВизы(ТаблицаТочек,НаборВизы);
	//
	//// бит_AMuntyan изменение кода. Начало. 17.12.2014{{
	//бит_уп_Сервер.ОпределитьДоступностьТочек(ТаблицаТочек,флВыполнятьПоэтапно);
	
	 //  "ВЫБРАТЬ
	 //|	бит_НазначенныеЗаместители.Состояние КАК Состояние,
	 //|	ВЫБОР
	 //|		КОГДА бит_НазначенныеЗаместители.Виза ССЫЛКА Справочник.бит_Визы
	 //|			ТОГДА бит_НазначенныеЗаместители.Виза
	 //|		ИНАЧЕ бит_ГруппыВизВизыГруппы.Виза
	 //|	КОНЕЦ КАК Виза,
	 //|	бит_НазначенныеЗаместители.Заместитель КАК Заместитель,
	 //|	бит_НазначенныеЗаместители.ДатаНачала КАК ДатаНачала,
	 //|	бит_НазначенныеЗаместители.ДатаОкончания КАК ДатаОкончания,
	 //|	бит_НазначенныеЗаместители.Пользователь КАК Пользователь
	 //|ПОМЕСТИТЬ ВТ_ЗаместителиИВизы
	 //|ИЗ
	 //|	РегистрСведений.бит_НазначенныеЗаместители КАК бит_НазначенныеЗаместители
	 //|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_ГруппыВиз.ВизыГруппы КАК бит_ГруппыВизВизыГруппы
	 //|		ПО бит_НазначенныеЗаместители.Виза = бит_ГруппыВизВизыГруппы.Ссылка
	 //|ГДЕ
	 //|	бит_НазначенныеЗаместители.Состояние = &СостояниеНазначен
	 //|	И бит_НазначенныеЗаместители.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
	 //|	И бит_НазначенныеЗаместители.ДатаНачала <= &ДатаДок"
	 Если мКэшЗначений.ТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована  Тогда		 
		 Элементы.Отклонить.Доступность 	= Ложь;
		 Элементы.Отклонить.Видимость 	= Истина;
		 Элементы.КнопкаСогласовать.Доступность 	= Ложь;
		 Элементы.КнопкаСогласовать.Видимость 	= Истина;
		 
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-25 (#2873)
		 Если  ЗначениеЗаполнено(бит_уп_Сервер.ПолучитьАлгоритмВизирования(Объект.Ссылка)) И
			 НЕ бит_БК_Общий.РеквизитыДляМуршрутовВидимы(Объект.Ссылка) 
		 Тогда             			 
			 Элементы.Кнопка1.Видимость = Истина;
			 Элементы.ОтправитьФинКонтролеру.Видимость = Истина;
			 Элементы.Группа2.Видимость = Истина;
		 КонецЕсли;
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-25 (#2873)
		 
	 ИначеЕсли Объект.СБ_ПроцессЗапущен 
		 	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-09 (#2873)
	 		И бит_БК_Общий.РеквизитыДляМуршрутовВидимы(Объект.Ссылка)
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-09 (#2873)
	 Тогда
	 
	 	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-22 (#2877)    				
		НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(Новый Структура("Объект",Объект.Ссылка));
		ТаблицаЗаписей = НаборЗаписей.Выгрузить();  		
		ДоступныеТочкиАлгоритма = бит_Визирование.ПолучитьДоступныеТочкиАлгоритма(ТаблицаЗаписей);
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-22 (#2877)
	 
		 Запрос = Новый Запрос;
		 Запрос.Текст = 
		 
		 "ВЫБРАТЬ
		 |	бит_НазначенныеЗаместители.Состояние КАК Состояние,
		 |	ВЫБОР
		 |		КОГДА бит_НазначенныеЗаместители.Виза ССЫЛКА Справочник.бит_Визы
		 |			ТОГДА бит_НазначенныеЗаместители.Виза
		 |		ИНАЧЕ бит_ГруппыВизВизыГруппы.Виза
		 |	КОНЕЦ КАК Виза,
		 |	бит_НазначенныеЗаместители.Заместитель КАК Заместитель,
		 |	бит_НазначенныеЗаместители.ДатаНачала КАК ДатаНачала,
		 |	бит_НазначенныеЗаместители.ДатаОкончания КАК ДатаОкончания,
		 |	бит_НазначенныеЗаместители.Пользователь КАК Пользователь,
		 |	бит_БК_Инициаторы.Ссылка КАК Инициатор
		 |ПОМЕСТИТЬ ВТ_ЗаместителиИВизы
		 |ИЗ
		 |	РегистрСведений.бит_НазначенныеЗаместители КАК бит_НазначенныеЗаместители
		 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_ГруппыВиз.ВизыГруппы КАК бит_ГруппыВизВизыГруппы
		 |		ПО бит_НазначенныеЗаместители.Виза = бит_ГруппыВизВизыГруппы.Ссылка
		 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_БК_Инициаторы КАК бит_БК_Инициаторы
		 |		ПО бит_НазначенныеЗаместители.Заместитель = бит_БК_Инициаторы.Пользователь
		 |ГДЕ
		 |	бит_НазначенныеЗаместители.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_СостоянияЗаместителей.Назначен)
		 |	И бит_НазначенныеЗаместители.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
		 |	И бит_НазначенныеЗаместители.ДатаНачала <= &ДатаДок
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	бит_УстановленныеВизы.Виза,
		 |	бит_УстановленныеВизы.ФизическоеЛицо,
		 |	бит_УстановленныеВизы.Объект,
		 |	бит_УстановленныеВизы.Решение,
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-02 (#3393)
		 |	бит_УстановленныеВизы.ОК_ВидРасхода,
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-02 (#3393)
		 |	бит_УстановленныеВизы.КодСортировки
		 |ПОМЕСТИТЬ ВТ_ВизыПользователя
		 |ИЗ
		 |	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы
		 |ГДЕ
		 |	(бит_УстановленныеВизы.ФизическоеЛицо = &ФизическоеЛицо
		 |			ИЛИ бит_УстановленныеВизы.Пользователь = &ФизическоеЛицо)
		 |	И бит_УстановленныеВизы.Объект = &Объект
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-22 (#2877)
		 |	И бит_УстановленныеВизы.ТочкаАлгоритма В(&ДоступныеТочкиАлгоритма)
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-22 (#2877)
		 |
		 |ОБЪЕДИНИТЬ ВСЕ
		 |
		 |ВЫБРАТЬ
		 |	ВТ_ЗаместителиИВизы.Виза,
		 |	ВТ_ЗаместителиИВизы.Инициатор,
		 |	бит_УстановленныеВизы.Объект,
		 |	бит_УстановленныеВизы.Решение,
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-02 (#3393)
		 |	бит_УстановленныеВизы.ОК_ВидРасхода,
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-02 (#3393)
		 |	бит_УстановленныеВизы.КодСортировки
		 |ИЗ
		 |	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы
		 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗаместителиИВизы КАК ВТ_ЗаместителиИВизы
		 |		ПО бит_УстановленныеВизы.Виза = ВТ_ЗаместителиИВизы.Виза
		 |			И бит_УстановленныеВизы.ФизическоеЛицо.Пользователь = ВТ_ЗаместителиИВизы.Пользователь
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-19 (#2873)
		 |			И бит_УстановленныеВизы.Объект = &Объект
		 |			И бит_УстановленныеВизы.Объект = &Объект
		 |			И (бит_УстановленныеВизы.Пользователь = ВТ_ЗаместителиИВизы.Инициатор.Пользователь ИЛИ
		 |		       бит_УстановленныеВизы.Пользователь = Значение(Справочник.Пользователи.ПустаяСсылка))
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-19 (#2873)
		 |ГДЕ
		 |	(ВТ_ЗаместителиИВизы.Инициатор = &ФизическоеЛицо
		 |			ИЛИ ВТ_ЗаместителиИВизы.Заместитель = &ФизическоеЛицо)
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-19 (#2873)
		 //|	И бит_УстановленныеВизы.Объект = &Объект
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-19 (#2873)		 
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-22 (#2877)
		 |	И бит_УстановленныеВизы.ТочкаАлгоритма В(&ДоступныеТочкиАлгоритма)
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-22 (#2877)
		 
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-02-14 (#2980)
		 |
		 |ОБЪЕДИНИТЬ ВСЕ
		 |
		 |ВЫБРАТЬ
		 |	ВТ_ЗаместителиИВизы.Виза,
		 |	ВТ_ЗаместителиИВизы.Инициатор,
		 |	бит_УстановленныеВизы.Объект,
		 |	бит_УстановленныеВизы.Решение,
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-02 (#3393)
		 |	бит_УстановленныеВизы.ОК_ВидРасхода,
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-02 (#3393)
		 |	бит_УстановленныеВизы.КодСортировки
		 |ИЗ
		 |	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы
		 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗаместителиИВизы КАК ВТ_ЗаместителиИВизы
		 |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗаместителиИВизы КАК ВТ_ЗаместителиЗаместителей
		 |			ПО ВТ_ЗаместителиИВизы.Заместитель = ВТ_ЗаместителиЗаместителей.Пользователь
		 |				И ВТ_ЗаместителиИВизы.Виза = ВТ_ЗаместителиЗаместителей.Виза
		 |		ПО бит_УстановленныеВизы.Виза = ВТ_ЗаместителиИВизы.Виза
		 |			И бит_УстановленныеВизы.ФизическоеЛицо.Пользователь = ВТ_ЗаместителиИВизы.Пользователь
		 |			И (бит_УстановленныеВизы.Объект = &Объект)
		 |			И (бит_УстановленныеВизы.Пользователь = ВТ_ЗаместителиИВизы.Инициатор.Пользователь
		 |				ИЛИ бит_УстановленныеВизы.Пользователь = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
		 |ГДЕ
		 |	(ВТ_ЗаместителиЗаместителей.Инициатор = &ФизическоеЛицо
		 |			ИЛИ ВТ_ЗаместителиЗаместителей.Заместитель = &ФизическоеЛицо)
		 |	И бит_УстановленныеВизы.ТочкаАлгоритма В(&ДоступныеТочкиАлгоритма)
		 |

		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-02-14 (#2980)
		 
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942) 
		 |ИНДЕКСИРОВАТЬ ПО
		 |		Объект,
		 |		Виза,
		 |		Решение
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-02 (#3393)
		 //|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
		 //Заменено на:
		 |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-02 (#3393)
		 |	ВТ_ВизыПользователя.Решение,
		 |	ВТ_ВизыПользователя.ФизическоеЛицо,
		 |	бит_фн_РегистрацияСобытийОповещений.Виза КАК Виза,
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-02 (#3393)
		 |	ВЫБОР КОГДА ВТ_ВизыПользователя.ОК_ВидРасхода = Значение(Справочник.бит_ВидыСтатейОборотов.Выручка)   
		 |			  И бит_фн_РегистрацияСобытийОповещений.Виза В(&СпВиз_ОЦР_РД) 
		 |	ТОГДА
		 |		ИСТИНА
		 |  ИНАЧЕ
		 |		ЛОЖЬ
		 |	КОНЕЦ КАК ЕстьДоступныеВизы_ОЦР_РД,
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-02 (#3393)
		 |	ВТ_ВизыПользователя.КодСортировки КАК КодСортировки
		 |ИЗ
		 |	ВТ_ВизыПользователя КАК ВТ_ВизыПользователя
		 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_фн_РегистрацияСобытийОповещений КАК бит_фн_РегистрацияСобытийОповещений
		 |		ПО ВТ_ВизыПользователя.Виза = бит_фн_РегистрацияСобытийОповещений.Виза
		 |			И ВТ_ВизыПользователя.ФизическоеЛицо.Пользователь = бит_фн_РегистрацияСобытийОповещений.Пользователь
		 |			И ВТ_ВизыПользователя.Объект = бит_фн_РегистрацияСобытийОповещений.Объект
		 |ГДЕ
		 |	НЕ бит_фн_РегистрацияСобытийОповещений.Виза ЕСТЬ NULL
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-19 (#2873)
		 |	И  ВТ_ВизыПользователя.Решение = Значение(Справочник.бит_ВидыРешенийСогласования.ПустаяСсылка)
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-19 (#2873)
		 |
		 |УПОРЯДОЧИТЬ ПО
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-02 (#3393)
		 //|	КодСортировки";
		 //Заменено на:
		 |	КодСортировки
		 |
		 |ИТОГИ
		 |МАКСИМУМ(ЕстьДоступныеВизы_ОЦР_РД)
		 |ПО
		 |ОБЩИЕ";
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-02 (#3393)
		 
		 Запрос.УстановитьПараметр("Объект", Объект.Ссылка);
		 Запрос.УстановитьПараметр("ФизическоеЛицо", мКэшЗначений.ТекущийИнициатор);
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-18 (#2875)
		 //Запрос.УстановитьПараметр("ДатаДок", Объект.Ссылка.Дата);
		 //Заменено на:
		 Запрос.УстановитьПараметр("ДатаДок", ТекущаяДата());
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-18 (#2875)
		 
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-22 (#2877)
		 Запрос.УстановитьПараметр("ДоступныеТочкиАлгоритма"	,	ДоступныеТочкиАлгоритма);
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-22 (#2877)
		 
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-02 (#3393)
		 //РезультатЗапроса = Запрос.Выполнить();
		 //
		 //Если РезультатЗапроса.Пустой() Тогда
		 //Заменено на:
	 		 
		 Запрос.УстановитьПараметр("СпВиз_ОЦР_РД", бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Визирование", "СпВизСообщениеКорректировки" ,Новый СписокЗначений)); 
		 РезультатЗапроса = Запрос.Выполнить();
		 ВыборкаОбИтоги = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		 Если ВыборкаОбИтоги.Следующий() Тогда 
		 
		 	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-12-02 (#3559)
			//Если ВыборкаОбИтоги.ЕстьДоступныеВизы_ОЦР_РД Тогда 
			//	мКэшЗначений.Вставить("ДоступныВизы_Корректировки", Истина); 				
			//КонецЕсли;
			//Заменено на:
			мКэшЗначений.Вставить("ДоступныВизы_Корректировки", ВыборкаОбИтоги.ЕстьДоступныеВизы_ОЦР_РД); 				
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-12-02 (#3559) 
			
		 КонецЕсли;		 
		 
		 Если ВыборкаОбИтоги.Количество()=0 Тогда

		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-02 (#3393)
			 Элементы.Отклонить.Доступность 	= Ложь;
			 Элементы.Отклонить.Видимость 	= Истина;
			 Элементы.КнопкаСогласовать.Доступность 	= Ложь;
			 Элементы.КнопкаСогласовать.Видимость 	= Истина; 
		 Иначе
			 
			 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-02 (#3393)
			 //ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			 //Заменено на:
			 ВыборкаДетальныеЗаписи = ВыборкаОбИтоги.Выбрать();
			 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-02 (#3393)
			 
			 Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Виза) и не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Решение) Тогда
					Элементы.Отклонить.Доступность 	= Истина;
					Элементы.Отклонить.Видимость 	= Истина;
					Элементы.КнопкаСогласовать.Доступность 	= Истина;
					Элементы.КнопкаСогласовать.Видимость 	= Истина; 
				Иначе 
					//			Элементы.Отклонить.Доступность 	= Истина;
					//Элементы.Отклонить.Видимость 	= Истина;
					//Элементы.КнопкаСогласовать.Доступность 	= Истина;
					//Элементы.КнопкаСогласовать.Видимость 	= Истина; 
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
		//+СБ Пискунова #2691 01.03.2017
		НаличиеОтклонений = бит_Визирование.ПроверитьОтклоненияПоВизам(Объект.Ссылка);
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-16 (#3393)
		//Если  не НаличиеОтклонений Тогда
		//Заменено на:
		Если НаличиеОтклонений Тогда
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-16 (#3393)
			Элементы.Отклонить.Доступность 	= Ложь;
			Элементы.Отклонить.Видимость 	= Истина;
			Элементы.КнопкаСогласовать.Доступность 	= Ложь;
			Элементы.КнопкаСогласовать.Видимость 	= Истина;  		
		КонецЕсли;  	
		//-СБ Пискунова #2691 01.03.2017
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-09 (#2873)
	Если мКэшЗначений.ТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована ИЛИ мКэшЗначений.ТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Закрыта Тогда
			Элементы.КнопкаСогласовать.Доступность = Ложь;   
			Элементы.Отклонить.Доступность = Ложь;			
	КонецЕсли;

	
	ИначеЕсли ЗначениеЗаполнено(бит_уп_Сервер.ПолучитьАлгоритмВизирования(Объект.Ссылка)) И
			  НЕ бит_БК_Общий.РеквизитыДляМуршрутовВидимы(Объект.Ссылка) Тогда 
		//Старые заявки
		Элементы.Группа2.Видимость = Истина;
		Элементы.КнопкаСогласовать.Доступность = Истина;
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	бит_УстановленныеВизы.Объект КАК Объект,
		|	МАКСИМУМ(бит_УстановленныеВизы.ДатаУстановки) КАК ДатаУстановки,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА бит_УстановленныеВизы.Решение = ЗНАЧЕНИЕ(Справочник.бит_ВидыРешенийСогласования.Согласовано)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК Решение,
		|	бит_УстановленныеВизы.Виза
		|ИЗ
		|	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы
		|ГДЕ
		|	(бит_УстановленныеВизы.ФизическоеЛицо = &Инициатор
		|			ИЛИ бит_УстановленныеВизы.Пользователь = &Инициатор) И бит_УстановленныеВизы.Объект = &Объект
		|
		|СГРУППИРОВАТЬ ПО
		|	бит_УстановленныеВизы.Объект,
		|	бит_УстановленныеВизы.Виза");
		
		Запрос.УстановитьПараметр("Инициатор", мКэшЗначений.ТекущийИнициатор);
		Запрос.УстановитьПараметр("Объект", Объект.Ссылка);
		ВыборкаСогласования = Запрос.Выполнить().Выбрать();
						
		Элементы.Кнопка1.Видимость = Истина;
		Элементы.ОтправитьФинКонтролеру.Видимость = Истина;
		
		Если ВыборкаСогласования.Следующий() Тогда
			Элементы.КнопкаСогласовать.Видимость = Истина;
			
			Если ВыборкаСогласования.Решение = Истина Тогда
				Элементы.Отклонить.Доступность 	= Ложь;		
				Элементы.КнопкаСогласовать.Доступность = Ложь;   
			Иначе
				Элементы.Отклонить.Доступность 	= Истина;
				Элементы.Отклонить.Видимость 	= Истина;
			КонецЕсли;
			
		Иначе
			Элементы.КнопкаСогласовать.Видимость 	= Ложь;
			Элементы.Отклонить.Видимость 			= Ложь;		
		КонецЕсли;	
		
		
		Если Элементы.КнопкаСогласовать.Видимость И ВыборкаСогласования.Виза = Справочники.бит_Визы.бит_БК_Эксперт Тогда
			мКэшЗначений.Вставить("СогласованиеЭкспертом", Истина);	
		Иначе
			мКэшЗначений.Вставить("СогласованиеЭкспертом", Ложь);			
		КонецЕсли;

		Если мКэшЗначений.ТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована ИЛИ мКэшЗначений.ТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Закрыта Тогда
			Элементы.КнопкаСогласовать.Доступность = Ложь;   
			Элементы.Отклонить.Доступность = Ложь;			
		КонецЕсли;
		
		Если Объект.ПометкаУдаления = Истина Тогда  			
			Элементы.Кнопка1.Доступность = Ложь; //Отправить ОЦР
			Элементы.КнопкаСогласовать.Доступность = Ложь; //Согласовать
			Элементы.ОтправитьФинКонтролеру.Доступность = Ложь; //Отправить фин. контроллеру
			Элементы.ОтправитьАдресату.Доступность = Ложь; //Отправить адресату
			Элементы.Отклонить.Доступность = Ложь; //Отклонить
		Иначе
			
			//"Отклонить", "КнопкаСогласовать" - включение доступности делается выше
			Элементы.Кнопка1.Доступность = Истина; //Отправить ОЦР
			Элементы.ОтправитьФинКонтролеру.Доступность = Истина; //Отправить фин. контроллеру
			Элементы.ОтправитьАдресату.Доступность = Истина; //Отправить адресату
		КонецЕсли; 		
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-09 (#2873)
	КонецЕсли;  
//КонецЕсли;

КонецПроцедуры
// BIT AMerkulov 20-04-2015 --

&НаСервере
Процедура ПрочитатьУстановленныеВизы()
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-09 (#2873)
	//Старый алгоритм
	Если бит_БК_Общий.РеквизитыДляМуршрутовВидимы(Объект.Ссылка) ИЛИ
		 НЕ ЗначениеЗаполнено(бит_уп_Сервер.ПолучитьАлгоритмВизирования(Объект.Ссылка))
	Тогда 
		Возврат;
	КонецЕсли;
	Элементы.ГруппаВизыСтарыйАлгоритм.Видимость = Истина;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-09 (#2873)
	
	// BIT AMerkulov 15-04-2015 ++
	
	ДопСогласовательНаименование = "";
	
	ТаблицаДопВиз = Новый ТаблицаЗначений;
	ТаблицаДопВиз.Колонки.Добавить("Виза");
	ТаблицаДопВиз.Колонки.Добавить("Решение");
	ТаблицаДопВиз.Колонки.Добавить("Наименование");
	
	СтруктураОтбор = Новый Структура("Объект",Объект.Ссылка);
	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	//экспертов может быть  2
	счЭксперт = 1;
	Для Каждого ТекСтрока Из НаборЗаписей Цикл
		Если ТекСтрока.Виза = Справочники.бит_Визы.бит_БК_ФинКонтролер Тогда 
			Объект.ФинансовыйКонтролер = ТекСтрока.ФизическоеЛицо;
			ФинансовыйКонтролерИсходный = ТекСтрока.ФизическоеЛицо;
			ФинансовыйКонтролерРешение = ТекСтрока.Решение;
			ФинансовыйКонтролерРешениеИсходное = ТекСтрока.Решение;
		ИначеЕсли  ТекСтрока.Виза = Справочники.бит_Визы.бит_БК_Бюджетодержатель Тогда
			ОтветственныйЗаБюджет = ТекСтрока.ФизическоеЛицо;
			//ОтветственныйЗаБюджетРешение = ТекСтрока.Решение;
			РешениеОЦР = ТекСтрока.Решение;
		ИначеЕсли  ТекСтрока.Виза = Справочники.бит_Визы.бит_БК_Эксперт И счЭксперт < 2 Тогда
			ЭтаФорма["Эксперт"+счЭксперт] = ТекСтрока.ФизическоеЛицо;
			ЭтаФорма["Эксперт"+счЭксперт+"Решение"] = ТекСтрока.Решение;
			Если счЭксперт = 1 Тогда
				ЭтаФорма["Эксперт"+счЭксперт+"Исходный"] = ТекСтрока.ФизическоеЛицо;
			КонецЕсли;	
			счЭксперт = счЭксперт + 1;
			//ИначеЕсли   ТекСтрока.Виза = Справочники.бит_Визы.бит_БК_РуководительИнициатора Тогда//БИТ АКриштопов 2482
			//	РуководительИнициатора = ТекСтрока.ФизическоеЛицо;
			//	РуководительИнициатораРешение = ТекСтрока.Решение;
		ИначеЕсли   ТекСтрока.Виза = Справочники.бит_Визы.НайтиПоНаименованию("Функциональный директор") Тогда
			ФункциональныйДиректор = ТекСтрока.ФизическоеЛицо;
			ФункциональныйДиректорРешение = ТекСтрока.Решение;
		ИначеЕсли   ТекСтрока.Виза = Справочники.бит_Визы.НайтиПоНаименованию("Генеральный директор") Тогда
			ДопСогласователь = ТекСтрока.ФизическоеЛицо;
			ДопСогласовательРешение = ТекСтрока.Решение;	
			ДопСогласовательНаименование = ТекСтрока.Виза.Наименование;	
			//БИТ АКриштопов ++ №2482
		ИначеЕсли  ТекСтрока.Виза = Справочники.бит_Визы.бит_БК_Эксперт И счЭксперт > 1 Тогда
			СтрокаДопВиз = ТаблицаДопВиз.Добавить();
			СтрокаДопВиз.Виза = ТекСтрока.ФизическоеЛицо;
			СтрокаДопВиз.Решение = ТекСтрока.Решение;
			СтрокаДопВиз.Наименование = ТекСтрока.Виза.Наименование;
		Иначе
			СтрокаДопВиз = ТаблицаДопВиз.Добавить();
			СтрокаДопВиз.Виза = ТекСтрока.ФизическоеЛицо;
			СтрокаДопВиз.Решение = ТекСтрока.Решение;
			СтрокаДопВиз.Наименование = ТекСтрока.Виза.Наименование;
		КонецЕсли;	
	КонецЦикла;	
	
	//+СБ Пискунова #2691 09.02.2017 Визы добавляются динамически теперь	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-09 (#2873)
	//Раскомментировал код
	Если ТаблицаДопВиз.Количество() Тогда
		
		Элементы.ГруппаД1.Видимость = Истина;
		инд = 0;
		
		Для Каждого Стр Из ТаблицаДопВиз Цикл
			инд = инд +1;
			
			Если инд < 5 Тогда
				Элементы["ГруппаДоп"+инд].Видимость = Истина;
				Элементы["ГруппаДоп"+инд].Заголовок = Стр.Наименование; 
				ЭтаФорма["ДопВиза"+инд] = Стр.Виза;	
				ЭтаФорма["ДопВизаРешение"+инд] = Стр.Решение;	
				ЭтаФорма["ДопВизаНаименование"+инд] = Стр.Наименование;	
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	//Элементы.ФинансовыйКонтролер.ТолькоПросмотр = Объект.Проведен;
	Элементы.Эксперт1.ТолькоПросмотр = Объект.Проведен;

	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-09 (#2873)
	// BIT AMerkulov 15-04-2015 ++
	
	// BIT AMerkulov 15-04-2015 ++
	
КонецПроцедуры
&НаСервере
Процедура УстановитьWEBНомер()
	
	// + БИТ AMerkulov 2014-01-31 /  Установка номера
	
	
	//ОК Калинин М. 200912 если номер начинается с любого регистра
	//Если Сред(Объект.Номер,1,1) = "W" ИЛИ НЕ ЗначениеЗаполнено(Объект.Номер) Тогда
	//Если ВРЕГ(Сред(Объект.Номер,1,1)) = "W" ИЛИ НЕ ЗначениеЗаполнено(Объект.Номер) Тогда
	////ОК Калинин М.	
	//	WEBНомер = "НЕ ПРИСВОЕН";
	//иначе
	WEBНомер = Объект.Номер
	//КонецЕсли;
	
	// - БИТ
	
КонецПроцедуры
&НаСервере
Процедура УстановитьОтборФайлы()
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-27 (#2916)
	Перем ЭлементОтбора;
	ОтборПоОбъекту = Новый ПолеКомпоновкиДанных("Объект");
	
	Для Каждого ЭлементОтбора ИЗ Список_ХранилищеДополнительнойИнформации.Отбор.Элементы Цикл 
		Если ЭлементОтбора.ЛевоеЗначение = ОтборПоОбъекту Тогда 
			ЭлементОтбора.Использование = Истина;
			ЭлементОтбора.ПравоеЗначение = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.бит_ФормаВводаБюджета")).Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	Если ЭлементОтбора <> Неопределено Тогда 
		Возврат;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-27 (#2916)
	
	//установка отбора на список файлов по тек. документу
	ЭлементОтбора = Список_ХранилищеДополнительнойИнформации.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ПравоеЗначение = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.бит_ФормаВводаБюджета")).Ссылка;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный; 	
КонецПроцедуры

//bit_SVKushnirenko 17.01.2017 #2671.дпн
// Выполняет ОТМЕНУ доступности реквизитов, в зависимости от состояния изменения данных финансовым контроллером в "толстом клиенте"
//по умолчанию реквизиты должны быть включены в форме
&НаКлиенте
Процедура УстановитьДоступностьПоДействиямФинконтроллераВТолстомКлиенте()
	
	Если Объект.БДДС.Количество() = 0 Тогда //Финконтроль не вносил критичные правки в документ, отмена доступности не выполняется
		
		Возврат;
	КонецЕсли;
	
	//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Начало 20181106 (#3086)
	//может быть в разных строках и разное
	//пРеквизитыИзмененныеФинконтроллером = Объект.БДДС[0].бит_БК_БлокировкиПолейФинансовогоКонтроллера;
	пРеквизитыИзмененныеФинконтроллером = "";
	Для каждого Строка из Объект.БДДС Цикл
		Если ПустаяСтрока(Строка.бит_БК_БлокировкиПолейФинансовогоКонтроллера) Тогда
			Продолжить;
		КонецЕсли;	
		пРеквизитыИзмененныеФинконтроллером = пРеквизитыИзмененныеФинконтроллером + Строка.бит_БК_БлокировкиПолейФинансовогоКонтроллера;
	КонецЦикла;	
	//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Конец 20181106 (#3086)
	
	пРеквизитыИзмененныеФинконтроллером = Объект.БДДС[0].бит_БК_БлокировкиПолейФинансовогоКонтроллера;
	Если СокрЛП(пРеквизитыИзмененныеФинконтроллером) = "" Тогда  //Финконтроль не изменял критичные реквизиты
		
		Возврат;
	КонецЕсли;
	
	//Отключение измененных ФК реквизитов
	пПодготовкаСообщения = "";
	Если Найти(пРеквизитыИзмененныеФинконтроллером, "бит_БК_ВалютаДоговора;") <>  0 Тогда 
		
		Элементы.Объектбит_БК_ВалютаДокумента.Доступность = Ложь;
		пПодготовкаСообщения = """Валюта""";
	КонецЕсли;
	
	Если Найти(пРеквизитыИзмененныеФинконтроллером, "бит_БК_Организация;") <>  0 Тогда 
		
		Элементы.Объектбит_БК_Организация.Доступность = Ложь;
		пПодготовкаСообщения = пПодготовкаСообщения + ?(пПодготовкаСообщения = "", "", ", ") + """Компания-плательщик""";
	КонецЕсли;
	
	Если Найти(пРеквизитыИзмененныеФинконтроллером, "бит_БК_ФормаОплаты;") <>  0 Тогда 
		
		Элементы.ОбъектОК_БК_ФормаОплаты.Доступность = Ложь;
		пПодготовкаСообщения = пПодготовкаСообщения + ?(пПодготовкаСообщения = "", "", ", ") + """Форма оплаты""";
	КонецЕсли;
	
	Если Найти(пРеквизитыИзмененныеФинконтроллером, "бит_БК_СуммаПредоплаты;") <>  0 Тогда 
		
		Элементы.ОбъектОК_РазмерПредоплаты.Доступность = Ложь;
		пПодготовкаСообщения = пПодготовкаСообщения + ?(пПодготовкаСообщения = "", "", ", ") + """Размер предоплаты""";
	КонецЕсли;
	
	Если Найти(пРеквизитыИзмененныеФинконтроллером, "ЦФО;") <>  0 Тогда 
		
		Элементы.Объектбит_БК_ЦФО.Доступность = Ложь;
		пПодготовкаСообщения = пПодготовкаСообщения + ?(пПодготовкаСообщения = "", "", ", ") + """Функция""";
	КонецЕсли;
	
	Если СокрЛП(пПодготовкаСообщения) <>  "" Тогда 
		
		Сообщить("Реквизиты: " + пПодготовкаСообщения + " - нельзя редактировать, для их изменения обратитесь к фин.контроллеру");
	КонецЕсли;
КонецПроцедуры // УстановитьДоступностьПоДействиямФинконтроллераВТолстомКлиенте()

//{bit_SVKushnirenko 04.04.2017 #2811
// Выполняет изменение поведения поля "Проект" на форме в зависимости от требований к заполнению
&НаКлиенте
Функция УправлениеПолемПроектНаФорме(парСтатьяОборотов = Неопределено)

	рекПроектЗапретЗаполнения = НЕ ЗначениеДоступностиПроект(Объект.ВидОперации, парСтатьяОборотов);
КонецФункции // УправлениеПолемПроектНаФорме() }bit_SVKushnirenko 04.04.2017 #2811
 
// бит_DKravchenko Процедура - обработчик события "ПриОткрытии" формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//{ bit SVKushnirenko Bit 16.01.2017 #2671.дпн
	рекСоответствиеЗаполненияШапкиВТЧ.Очистить();
	//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Начало 20181106 (#3086)
	//валюта указывается в табличной части
	//рекСоответствиеЗаполненияШапкиВТЧ.Добавить("бит_БК_ВалютаДокумента", "бит_БК_ВалютаДоговора");
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-21 (#2957)
	//рекСоответствиеЗаполненияШапкиВТЧ.Добавить("бит_БК_КурсДокумента"		, "бит_БК_Курс");
	//рекСоответствиеЗаполненияШапкиВТЧ.Добавить("бит_БК_КратностьДокумента"	, "бит_БК_Кратность");
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-21 (#2957)
	//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Конец 20181106 (#3086)
	рекСоответствиеЗаполненияШапкиВТЧ.Добавить("бит_БК_Организация", "бит_БК_Организация");
	рекСоответствиеЗаполненияШапкиВТЧ.Добавить("ОК_БК_ФормаОплаты", "бит_БК_ФормаОплаты");
	рекСоответствиеЗаполненияШапкиВТЧ.Добавить("ОК_РазмерПредоплаты", "бит_БК_СуммаПредоплаты");
	//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Начало 20181106 (#3086)
	//ЦФО указывается в табличной части
	//рекСоответствиеЗаполненияШапкиВТЧ.Добавить("бит_БК_ЦФО", "ЦФО");
	//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Конец 20181106 (#3086)
	рекСоответствиеЗаполненияШапкиВТЧ.Добавить("бит_БК_ПредпологаемыйКонтрагент", "бит_БК_ПредпологаемыйКонтрагент");
	рекСоответствиеЗаполненияШапкиВТЧ.Добавить("ОК_НеобходимостьДоговора", "бит_БК_НуженДоговор");
	//} bit SVKushnirenko Bit 16.01.2017 #2671.дпн
	
	//Начало_БИТ_БК_Магомедов.А.А_25.10.2011 
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	УстановитьЗаголовокФормыДокумента();
	
	// Зададим имена реквизитов, подлежащих кешированию.
	мКэшРеквизитовФормы = Новый Структура;
	мКэшРеквизитовФормы.Вставить("ДатаРасхода");
	мКэшРеквизитовФормы.Вставить("ДатаПлатежаКрайняя");
	мКэшРеквизитовФормы.Вставить("ТипЗаявки");
	мКэшРеквизитовФормы.Вставить("ВалютаДокумента");
	мКэшРеквизитовФормы.Вставить("КурсДокумента");
	мКэшРеквизитовФормы.Вставить("КратностьДокумента");
	
	// Установим текущий статус.
	УстановитьСтатусВФорме(мКэшЗначений.ТекущийСтатус, мКэшЗначений.ДатаИзмененияСтатуса);
	
	//Настроить элементы
	бит_НастроитьЭлементыФормы();
	
	//ограничение типа для колонки Аналитика_2
	Элементы.БДДСАналитика_2.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ОбъектыСтроительства"); 
	УстановитьПредставлениеПериода();
	бит_УстановитьСписокФинКонтролеров();
	
	Объектбит_БК_ИнициаторПриИзменении(0);
	ОЦРНаименованиеПриИзменении(0);
	
	//{ bit_SVKushnirenko 27.12.2016 #2669 - оптимизация двойных пересчетов остатка
	//ИсходныйКод{
	//БДДСПриИзменении(0);
	//}ИсходныйКод
	
	БДДСПриИзменении();
	//} bit_SVKushnirenko 27.12.2016 #2669 - оптимизация двойных пересчетов остатка
	
	// ++ BIT AMerkulov 04.03.2014
	
	Если мКэшЗначений.ТекущийСтатус = СтатусСогласован() Тогда
		Элементы.СформироватьЗаказ.Доступность = Истина;
	КонецЕсли;
	
	Модифицированность = Ложь;
	
	// -- BIT AMerkulov
	
	// БИТ_YK_н Доработка #2128 01/16
	// Отдельные кнопки заменены на функционал доп. внешних печатных форм (глобальная команда доп. внешних форм).
	// + БИТ AMerkulov 2014-06-25 / Установка видимости печатных форм
	//Если Этаформа.КоманднаяПанель.ПодчиненныеЭлементы.Формабит_Печать.ПодчиненныеЭлементы.Количество() > 3 Тогда 			
	//	Этаформа.КоманднаяПанель.ПодчиненныеЭлементы.Формабит_Печать.ПодчиненныеЭлементы.ФормаДокументбит_ФормаВводаБюджетаПечатьЗаявкаОперационный.Видимость = Ложь;	
	//	Этаформа.КоманднаяПанель.ПодчиненныеЭлементы.Формабит_Печать.ПодчиненныеЭлементы.ФормаДокументбит_ФормаВводаБюджетаПечатьЗаявка.Видимость = Истина;	
	//	Этаформа.КоманднаяПанель.ПодчиненныеЭлементы.Формабит_Печать.ПодчиненныеЭлементы.ФормаДокументбит_ФормаВводаБюджетаПечатьЗаявкаСтроительство.Видимость = Ложь;	
	//	Этаформа.КоманднаяПанель.ПодчиненныеЭлементы.Формабит_Печать.ПодчиненныеЭлементы.ФормаДокументбит_ФормаВводаБюджетаПечатьЗаявкаИнвестиционный.Видимость = Ложь;			
	//КонецЕсли;
	// - БИТ AMerkulov 
	// БИТ_YK_к
	
	//{ bit_SVKushnirenko 29.03.2017 #2811
	//ИсходныйКод{
	//Если Объект.ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный Тогда 
	//	Элементы.БДДСПроект.Видимость = Ложь;
	//Иначе
	//	Элементы.БДДСПроект.Видимость = Истина;
	//КонецЕсли;
	//}ИсходныйКод
	Если рекВыполнитьПостроениеОперацииПоСтатьямПриОткрытии Тогда  //этот документ введен копированием, необходим "контрольный" пересчет вида операции, которая может прийти некорректно из входящего документа
		
		//"починка" сценариев в строках (не всегда они приходят верными и расчет вида операции, так же, выполняется с ошибкой
		Для каждого пСтрока Из Объект.БДДС Цикл
		
			ОпределитьСценарийПоСтатьеОборотов(пСтрока, Объект.ВидОперации, мКэшЗначений);
		КонецЦикла; 
		ПостроениеВидаОперацииНаОснованииДанныхСтатейТчБДДС();
	КонецЕсли;
	УправлениеПолемПроектНаФорме();
	//} bit_SVKushnirenko 29.03.2017 #2811
	
	// БИТ НАГолубева 25.02.2016 ++
	// Для пользователей с ролью бит_БК_ГлавныйБК статус доступен для редактирования
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
	//Если ПолучитьДоступностьРоли("бит_БК_ГлавныйБК") Тогда
	//Заменено на:
	Если мКэшЗначений.РольДоступна.ДоступнаРольГлавныйБК Тогда 
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
		Элементы.Статус.Видимость = Истина;
		Статус = мКэшЗначений.ТекущийСтатус;
		Элементы.Декорация5.Видимость = Истина;
		Элементы.Декорация5.Заголовок = мКэшЗначений.ДатаИзмененияСтатуса;
		Элементы.ИнформацияСтатус.Видимость = Ложь;
	Иначе
		Элементы.Статус.Видимость = Ложь;
		Элементы.Декорация5.Видимость = Ложь;
		Элементы.ИнформацияСтатус.Видимость = Истина;
	КонецЕсли;
	// БИТ НАГолубева 25.02.2016 --
	
	// БИТ НАГолубева 29.02.2016 ++
	// В проведенном документе обновлять данные по бюджетному остатку нельзя
	УстановитьДоступностьЭлементов();
	// БИТ НАГолубева 29.02.2016 --
	
	// БИТ НАГолубева 02.03.2016 ++
	ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ФормаСоздатьНаОсновании.Видимость = Ложь;
	ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ФормаПечать.Видимость = Ложь;
	// БИТ НАГолубева 02.03.2016 --
	
	
	//1С-ИжТиСи, Кондратьев, 03.2020, Обновление (
	////БИТ АКриштопов ++ №2482
	//Попытка
	//	ЭтотОбъект.ЗаблокироватьДанныеФормыДляРедактирования();
	//Исключение
	//	Сообщить("Документ редактируется другим пользователем. Все внесенные изменения не будут сохранены");
	//	ЭтаФорма.ТолькоПросмотр = Истина;
	//КонецПопытки;
	////БИТ АКриштопов -- №2482	
	//1С-ИжТиСи, Кондратьев, 03.2020, Обновление )

	//БИТ АКриштопов ++ 2482
	Если Объект.БДДС.Количество() > 0 Тогда
		ТекДанные = Объект.БДДС[0].бит_БК_НуженДоговор;
		Если Объект.ОК_НеобходимостьДоговора <> ТекДанные Тогда 
			Объект.ОК_НеобходимостьДоговора = ТекДанные;
		КонецЕсли;
	КонецЕсли;
	//БИТ АКриштопов --
	
	//{ bit_SVKushnirenko 30.03.2017 #2811
	//ИсходныйКод{
	////{ bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
	////+Сенин С.В. 10.10.16 №2596
	//Элементы.БДДССценарий.Видимость = Ложь;
	////-Сенин С.В. 10.10.16 №2596
	////} bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
	//}ИсходныйКод
	//Ликвидаця неиспользуемого реквизита
	//} bit_SVKushnirenko 30.03.2017 #2811
	
	//{ bit SVKushnirenko Bit 17.01.2017 #2671.дпн
	УстановитьДоступностьПоДействиямФинконтроллераВТолстомКлиенте();
	//} bit SVKushnirenko Bit 17.01.2017 #2671.дпн
	
	//{ bit SVKushnirenko Bit 14.03.2017 #2745
	Элементы.БДДСПечатьОтчетПоОплате.Доступность = ДоступностьКмдПечатьОтчетПоОплате(Объект.ВидОперации);
	//} bit SVKushnirenko Bit 14.03.2017 #2745
	
	//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-07-31 (#2874)
	//Отключение команды "Показать в списке" для роли Guest и ОК_ОЦР
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)	
	//ДанныеПользователя = ЗаполнитьДанныеПользователя();
	//Заменено на:
	ДанныеПользователя = мКэшЗначений.РольДоступна;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
	
	ВидимостьЭлементаСписка = (ДанныеПользователя.ЭтоПолноправныйПользователь) И 
	НЕ (ДанныеПользователя.ДоступнаРольGuest ИЛИ ДанныеПользователя.ДоступнаРольОЦР);
	
	Если НЕ Элементы.Найти("ФормаПоказатьВСписке")= Неопределено Тогда
		Элементы.ФормаПоказатьВСписке.Видимость = ВидимостьЭлементаСписка;
	КонецЕсли;	
	Если НЕ Элементы.Найти("ФормаПоказатьВСпискебит_ФормаВводаБюджета") = Неопределено Тогда
		Элементы.ФормаПоказатьВСпискебит_ФормаВводаБюджета.Видимость  = ВидимостьЭлементаСписка;
	КонецЕсли;	
	//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-07-31 (#2874)
	
	//ОК Довбешка Т. 01.12.2017
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-04-06 (#2986)
	ТекущийЭлемент = Элементы.БДДС;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-04-06 (#2986)	
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-02-08 (#2979)
	ПодключитьОбработчикОжидания("ОбновитьПеременныйИтога",1,Ложь);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-02-08 (#2979)
	
	// ОКЕЙ Гиль А.В.(Софтлаб) Начало 25.01.2020 (#3591) 
	ОбновитьЭлементыРасшифровкиЗатратОС();
	// ОКЕЙ Гиль А.В.(Софтлаб) Конец 25.01.2020 (#3591)
	
КонецПроцедуры

//{bit_SVKushnirenko 14.03.2017 #2745
//Управление доступностью команды печати "Отчет по оплате"
//Параметры:
//парЭлементКомандыНаФорме - элемент формы, для которого проводится изменения доступности
&НаСервереБезКонтекста
Функция ДоступностьКмдПечатьОтчетПоОплате(парВидОперации) Экспорт

	Если парВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный Тогда  
		
		Возврат Ложь;
	Иначе
		
		Возврат Истина;
	КонецЕсли;
КонецФункции // ДоступностьКмдПечатьОтчетПоОплате() }bit_SVKushnirenko 14.03.2017 #2745

// ++ BIT AMerkulov 04.03.2014
&НаСервереБезКонтекста
Функция СтатусСогласован()
	
	Возврат Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована;
	
КонецФункции
// -- BIT AMerkulov

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	//ОК Довбешка Т. 01.12.2017
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура бит_УстановитьСписокФинКонтролеров()
	Если Объект.ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный тогда
		СписокФинКонтролеров = мКэшЗначений.ФинКонтролеры.Операционный;
	ИначеЕсли Объект.ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный тогда
		СписокФинКонтролеров = мКэшЗначений.ФинКонтролеры.Инвестиционный;
		//BIT AMerkulov 01-07-2015 ++
	ИначеЕсли Объект.ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный тогда
		СписокФинКонтролеров = мКэшЗначений.ФинКонтролеры.Универсальный;
		//BIT AMerkulov 01-07-2015 --			
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗаявкуОперационный(Команда)
	ЗагрузитьЗаявку("ЗаявкаОперационный");
КонецПроцедуры 

&НаКлиенте
Процедура ЗагрузитьЗаявку_Инвестиционный(Команда)
	ЗагрузитьЗаявку("ЗаявкаИнвестиционый");	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗаявку_Строительство(Команда)
	ЗагрузитьЗаявку("ЗаявкаСтроительство");	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗаявку(ВидЗаявки)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-12 (#2996)
	Если Объект.Проведен Тогда 
		ПоказатьПредупреждение(,НСтр("ru = 'В проведенном документе загрузка данных невозможна.'"),30);
		Возврат;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-12 (#2996)
	
	Если Не Объект.БДДС.Количество() = 0 Тогда		
		ТекстВопроса = "ru = 'Данные будут перезаполнены. Продолжить?'";
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузитьЗаявкуЗавершение", ЭтотОбъект, Новый Структура("ВидЗаявки", ВидЗаявки)), НСтр(ТекстВопроса), РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет);
		Возврат; 		
	КонецЕсли;	
	
	ЗагрузитьЗаявкуНаСервере(ВидЗаявки);
	
	//{ bit_SVKushnirenko 28.12.2016 #2671.2
	СинхронизироватьРеквизиты();	
	//} bit_SVKushnirenko 28.12.2016 #2671.2
КонецПроцедуры

&НаСервере
процедура ОбновитьДанныеПоОстаткуБюджета()
	
	//{ bit_SVKushnirenko 20.12.2016 #2669
	//ИсходныйКод{
	//бит_ФормаВводаБюджетаВызовСервера.ОбновитьДанныеПоОстаткуБюджета(объект);	
	//}ИсходныйКод
	
	бит_БК_Общий.ЗаполнитьОстаткиБюджетаИПризнакиБюджетногоКонтроля(Объект);
	//} bit_SVKushnirenko 20.12.2016 #2669
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗаявкуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ВидЗаявки = ДополнительныеПараметры.ВидЗаявки;
	
	Ответ = РезультатВопроса;
	
	Если Не Ответ = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли; 		
	
	Объект.БДДС.Очистить();
	Объект.ЗависимыеОбороты.Очистить();
	Модифицированность = Истина;
	
	ЗагрузитьЗаявкуНаСервере(ВидЗаявки);
	
КонецПроцедуры
// ок Видяйкин В.И. 20170214 -

&НаКлиенте
Процедура ЗагрузитьЗаявкуНаСервере(ВидЗаявки)
	
	Если ВидЗаявки = "ЗаявкаОперационный" Тогда		
		ИмяКоманды = "бит_ЗагрузитьЗаявку_операционный";
		// ок Видяйкин В.И. 20170214 +
		УстановитьСценарийНаСервере("ЗУ       ");
		// ок Видяйкин В.И. 20170214 -
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-12 (#2996)
	ИначеЕсли ВидЗаявки = "ЗаявкаПоШаблонуExcel" Тогда
		ИмяКоманды = "бит_ЗагрузитьЗаявку_ПоШаблонуExcel";
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-12 (#2996)
	
	ИначеЕсли ВидЗаявки = "ЗаявкаИнвестиционый" Тогда
		ИмяКоманды = "бит_ЗагрузитьЗаявку_Инвестиционный";
	ИначеЕсли ВидЗаявки = "ЗаявкаСтроительство" Тогда
		ИмяКоманды = "бит_ЗагрузитьЗаявку_Строительство";
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьДанныеИзExcelЗавершение", ЭтотОбъект, ИмяКоманды);
	ПараметрыФормы = Новый Структура("Сценарий, Дата", Объект.Сценарий, Объект.Дата);
	Если ИмяКоманды = "бит_ЗагрузитьЗаявку_операционный" Тогда 
		ОткрытьФорму("Обработка.бит_БК_ЗагрузкаИзExcelЗаявкаОперационный.Форма", ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-12 (#2996)
	ИначеЕсли ИмяКоманды = "бит_ЗагрузитьЗаявку_ПоШаблонуExcel" Тогда	    		
		ОткрытьФорму("Обработка.ок_ЗагрузкаИзExcelЗаявки.Форма.ФормаЗагрузки", ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-12 (#2996)
	ИначеЕсли ИмяКоманды = "бит_ЗагрузитьЗаявку_Инвестиционный" Тогда 
		ОткрытьФорму("Обработка.бит_БК_ЗагрузкаИзExcelЗаявкаИнвестиционный.Форма", ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли ИмяКоманды = "бит_ЗагрузитьЗаявку_Строительство" Тогда 
		ОткрытьФорму("Обработка.бит_БК_ЗагрузкаИзExcelЗаявкаНаСтроительство.Форма", ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеИзExcelЗавершение(Результат, ИмяКоманды) Экспорт 
	Если Результат = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Объект, Результат.ПараметрыШапки);
	ЗаполнитьДанныеБюджета(Результат.АдресТаблицаДанных, ИмяКоманды);
	
	Модифицированность=Истина;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-04-05 (#2996)	
	Если ИмяКоманды = "бит_ЗагрузитьЗаявку_ПоШаблонуExcel" Тогда 
				
		Объект.ОК_НеобходимостьДоговора = Объект.БДДС.Итог("бит_БК_СуммаБезНДС") > 100000;
		ЗаполнениеЗначенийТЧизДанныхИнициатора("бит_БК_НуженДоговор;"); //Синхронизируем возможное новое значение шапки и табличной части
			
		ОбновитьОЦР();    
		
		ОбновитьДанныеПоОстаткуБюджета();
		
		Объект.СБ_СуммаПредоплатыИтого  = Объект.БДДС.Итог("СБ_СуммаПредоплаты");
		
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-04-05 (#2996)
	
	//{ bit_SVKushnirenko 25.04.2017 #2811
	ИзменениеОперацииДокументаПоИзменениюДанныхТЧБДДС();
	//} bit SVKushnirenko Bit 25.04.2017 #2811
	
	//{ bit SVKushnirenko Bit 25.04.2017 #2759
	ДоступностьЦелиПриобретенияОборудования();
	//} bit SVKushnirenko Bit 25.04.2017 #2759
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеБюджета(АдресСтрокиДляЗаполнения, ИмяКоманды)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-12 (#2996)
	////+СБ. Пискунова 18.05.2017 #2691
	//ЭтаФорма.Прочитать();
	////-СБ. Пискунова 18.05.2017 #2691
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-12 (#2996)
	СтрокиДляЗаполнения = ПолучитьИзВременногоХранилища(АдресСтрокиДляЗаполнения);
	ДокументОбъект = ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.бит_ФормаВводаБюджета"));	
	ДокументОбъект.ЗаполнитьДанныеБюджета(СтрокиДляЗаполнения, ИмяКоманды);
	ЗначениеВДанныеФормы(ДокументОбъект,Объект); 
КонецПроцедуры

//ОК Калинин 231112
&НаКлиенте
Процедура бит_ПроверитьПоБюджету(Команда)
	
	//Если не записан надо записать
	Если Объект.Ссылка.Пустая() Или Модифицированность Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("бит_ПроверитьПоБюджетуЗавершение", ЭтотОбъект), "Перед проверкой необходимо записать документ. Продолжить?", РежимДиалогаВопрос.ДаНет, 10,,,КодВозвратаДиалога.Нет);
		Возврат;			
	КонецЕсли;
	// БИТ НАГолубева 29.02.2016 ++
	//бит_ПроверитьПоБюджетуНаСервере();
	//+Сундукова 28.03.2016
	//Т.К. это клиент - ссылаемся на процедуру на сервере
	ОбновитьДанныеПоОстаткуБюджета();
	//-Сундукова 28.03.2016
	
	// БИТ НАГолубева 29.02.2016 --
	
КонецПроцедуры

&НаКлиенте
Процедура бит_ПроверитьПоБюджетуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	КодВозврата = РезультатВопроса;
	Если КодВозврата = КодВозвратаДиалога.Нет ИЛИ КодВозврата = КодВозвратаДиалога.Таймаут Тогда 
		Возврат;
	КонецЕсли;
	// БИТ НАГолубева 29.02.2016 ++
	
	//{ bit_SVKushnirenko 20.06.2017 #2759
	//ИсходныйКод{
	//ЗаписатьДокумент(РежимЗаписиДокумента.Запись);			
	//}ИсходныйКод
	
	ЗаписатьДокументНаКлиенте(РежимЗаписиДокумента.Запись);
	//} bit_SVKushnirenko 20.06.2017 #2759			
	
	//+Сундукова 28.03.2016
	//Т.К. это клиент - ссылаемся на процедуру на сервере
	ОбновитьДанныеПоОстаткуБюджета();
	//-Сундукова 28.03.2016
	
	// БИТ НАГолубева 29.02.2016 --
	
КонецПроцедуры

&НаСервере
Процедура бит_ПроверитьПоБюджетуНаСервере()  // БИТ НАГолубева 29.02.2016 Процедура больше не используется
	ДокументОбъект = ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.бит_ФормаВводаБюджета"));	
	Если Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный Тогда
		ДокументОбъект.бит_ПроверитьПоБюджетуУниверсальная();
	Иначе	
		ДокументОбъект.бит_ПроверитьПоБюджету();
	КонецЕсли;
	ЗначениеВДанныеФормы(ДокументОбъект,Объект);     	
	Модифицированность=истина;
КонецПроцедуры        

&НаКлиенте
Процедура ОК_ОчиститьСверхБюджет(Команда)// БИТ НАГолубева 29.02.2016 Процедура больше не используется
	ОК_ОчиститьСверхБюджетНаСервере();
КонецПроцедуры

&НаСервере  
Процедура ОК_ОчиститьСверхБюджетНаСервере()// БИТ НАГолубева 29.02.2016 Процедура больше не используется
	ДокументОбъект = ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.бит_ФормаВводаБюджета"));	
	ДокументОбъект.ОК_ОчиститьСверхБюджет();
	ЗначениеВДанныеФормы(ДокументОбъект,Объект); 
	Модифицированность=истина;
КонецПроцедуры	
//ОК Калинин

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// бит_DKravchenko Процедура устнавливает заголовок формы документа.
//
// Параметры:
//  Нет.
//
&НаКлиенте 
Процедура УстановитьЗаголовокФормыДокумента()
	
	СтруктураЗаголовка = Новый Структура;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
	//СтруктураЗаголовка.Вставить("ПредставлениеОбъекта", ПолучитьПредставлениеОбъекта());
	//Заменено на:
	СтруктураЗаголовка.Вставить("ПредставлениеОбъекта", мКэшЗначений.ПредставлениеОбъекта);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
	СтруктураЗаголовка.Вставить("СтрокаВидаОперации"  , Строка(Объект.ВидОперации));
	СтруктураЗаголовка.Вставить("ЭтоНовый"			  , Параметры.Ключ.Пустая());
	СтруктураЗаголовка.Вставить("ДокументПроведен"	  , Объект.Проведен);
	
	бит_РаботаСДиалогамиКлиент.УстановитьЗаголовокФормыДокумента(ЭтаФорма
	,СтруктураЗаголовка);
	
КонецПроцедуры // УстановитьЗаголовокФормыДокумента()

&НаКлиенте
Процедура бит_НастроитьЭлементыФормы()
	УстановитьДопКнопкиОбработкиТЧ();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДопКнопкиОбработкиТЧ()
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-12 (#2996)
	////Добавляем необходимые кнопки по виду операции
	//Если  Объект.ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный Тогда 
	//	Элементы.БДДСЗагрузитьЗаявкуОперационный.Видимость = Истина;
	//	Элементы.ЗагрузитьИзExcel.Видимость = Ложь; 
	//ИначеЕсли Объект.ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный Тогда
	//	Элементы.БДДСЗагрузитьЗаявкуОперационный.Видимость = Ложь; 
	//	Элементы.ЗагрузитьИзExcel.Видимость = Истина;
	//КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-12 (#2996)
	
	// 1c-izhtc ChuckNorris 19.03.2016 (
	//Элементы.БДДСЗагрузитьЗаявкуОперационный.Видимость=Ложь;
	// 1c-izhtc ChuckNorris 19.03.2016 )
	// BIT AMerkulov 13112014 ++
	//Элементы.БДДСПроверитьПоБюджету.Видимость=ложь;
	// BIT AMerkulov 13112014 --
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьФинКонтролеру(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.ФинансовыйКонтролер) Тогда 
		ПоказатьПредупреждение(Неопределено, "Не указан финансовый контролер");
		Возврат;
	КонецЕсли;
	
	//Если не записан надо записать
	Если Объект.Ссылка.Пустая() Или Модифицированность Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ОтправитьФинКонтролеруЗавершение", ЭтотОбъект), "Чтобы отправить письмо, сохраните заявку. Хотите сохранить сейчас?", РежимДиалогаВопрос.ДаНет, 10,,,КодВозвратаДиалога.Нет);
		Возврат;
		//БИТ АКриштопов 110416 ++ Копирование кода проверки проведения/попытки проведения
	ИначеЕсли Не Модифицированность и Не Объект.Проведен Тогда
		ОбновитьДанныеПоОстаткуБюджета();	
		ДействиеВыполнено = бит_Визирование.УстановитьСтатусОбъекта(Объект.Ссылка
		,ПредопределенноеЗначение("Перечисление.бит_ВидыСтатусовОбъектов.Статус")
		,ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании")
		,		
		,бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь")
		,ТекущаяДата());
		
		Статус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании");
		мКэшЗначений.ТекущийСтатус = Статус;
		мКэшЗначений.ДатаИзмененияСтатуса = ТекущаяДата();
		
		ОбновитьСтатус();
		
		//{ bit_SVKushnirenko 20.06.2017 #2759
		//ИсходныйКод{
		//ЗаписатьДокумент(РежимЗаписиДокумента.Проведение);			
		//}ИсходныйКод
		
		ЗаписатьДокументНаКлиенте(РежимЗаписиДокумента.Проведение); //должен уметь решать исключения при пуске с клиента!!
		//} bit_SVKushnirenko 20.06.2017 #2759
		
		//БИТ НАГолубева 02.03.2016 ++
		ЗаполнитьКэшЗначений(мКэшЗначений);
		УстановитьЗаголовокФормыДокумента();
		ЭтаФорма.ОбновитьОтображениеДанных();
		//БИТ НАГолубева 02.03.2016 --
		//БИТ АКриштопов 11042016 --
	КонецЕсли;
	
	ОтправитьФинКонтролеруФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьФинКонтролеруЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	КодВозврата = РезультатВопроса;
	Если КодВозврата = КодВозвратаДиалога.Нет ИЛИ КодВозврата = КодВозвратаДиалога.Таймаут Тогда 
		Возврат;
	КонецЕсли;
	//БИТ АКриштопов 08042016 ++ копирование механизма и процедуры отправки ОЦР
	//БИТ НАГолубева 25.02.2016 ++
	//Если документ уже был проведен, то перепроводить нельзя, только записываем
	Если Объект.Проведен Тогда
		
		//{ bit_SVKushnirenko 20.06.2017 #2759
		//ИсходныйКод{
		//ЗаписатьДокумент(РежимЗаписиДокумента.Запись);			
		//}ИсходныйКод
		
		ЗаписатьДокументНаКлиенте(РежимЗаписиДокумента.Запись);
		//} bit_SVKushnirenko 20.06.2017 #2759
		
	Иначе
		//+Сундукова 28.03.2016
		//Т.К. это клиент - ссылаемся на процедуру на сервере
		ОбновитьДанныеПоОстаткуБюджета();
		//-Сундукова 28.03.2016
		
		
		ДействиеВыполнено = бит_Визирование.УстановитьСтатусОбъекта(Объект.Ссылка
		,ПредопределенноеЗначение("Перечисление.бит_ВидыСтатусовОбъектов.Статус")
		,ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании")
		,		
		,бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь")
		,ТекущаяДата());
		
		Статус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании");
		мКэшЗначений.ТекущийСтатус = Статус;
		мКэшЗначений.ДатаИзмененияСтатуса = ТекущаяДата();
		
		ОбновитьСтатус();
		
		//{ bit_SVKushnirenko 20.06.2017 #2759
		//ИсходныйКод{
		//ЗаписатьДокумент(РежимЗаписиДокумента.Проведение);			
		//}ИсходныйКод
		
		ЗаписатьДокументНаКлиенте(РежимЗаписиДокумента.Проведение); //должен уметь решать исключения при пуске с клиента!!
		//} bit_SVKushnirenko 20.06.2017 #2759
		
		//БИТ НАГолубева 02.03.2016 ++
		ЗаполнитьКэшЗначений(мКэшЗначений);
		УстановитьЗаголовокФормыДокумента();
		ЭтаФорма.ОбновитьОтображениеДанных();
		//БИТ НАГолубева 02.03.2016 --
	КонецЕсли;
	//БИТ АКриштопов 08042016 --		
	
	ОтправитьФинКонтролеруФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьФинКонтролеруФрагмент()
	
	//{ bit SVKushnirenko Bit 06.06.2017 #2759
	//письма не отправляются если документ не проведен
	Если НЕ Объект.Проведен Тогда  
		
		Возврат;
	КонецЕсли;
	//} bit SVKushnirenko Bit 06.06.2017 #2759
	
	НастройкиДоставки = Новый Структура;
	бит_БК_Общий.ЗаполнитьНастройкиДоставки(НастройкиДоставки);
	
	Если НЕ бит_БК_Общий.ПодключениеКСерверуSMTP(НастройкиДоставки) Тогда 
		ПараметрыАутентификацииПользователя = бит_БК_ОбщийКлиент.ПолучитьПараметрыАутентификацииПользователя();
		Если ПараметрыАутентификацииПользователя = неопределено Тогда 
			Возврат;
		КонецЕсли;
		НастройкиДоставки.ПользовательSMTP = ПараметрыАутентификацииПользователя.ПользовательSMTP;
		НастройкиДоставки.ПарольSMTP = ПараметрыАутентификацииПользователя.ПарольSMTP;
	КонецЕсли;	
	
	// БИТ НАГолубева 03.03.2016 ++
	НастройкиДоставки = ПрикрепитьПечатнуюФорму(НастройкиДоставки);
	// БИТ НАГолубева 03.03.2016 --
	
	// BIT AMerkulov 2015-04-24 ++  /
	ДополнитьНастройкиВложениями(НастройкиДоставки);
	// BIT AMerkulov 2015-04-24 --  /	
	
	бит_ФормаВводаБюджетаВызовСервера.ОтправитьСообщениеКлиент(Объект.Ссылка, НастройкиДоставки, Объект.ФинансовыйКонтролер);
	
КонецПроцедуры


//ОК Калинин М. 150313  
&НаКлиенте
Процедура ОтправитьАдресату(Команда)
	
	//ВариантыОтправки=новый СписокЗначений;
	//ВариантыОтправки.Добавить("Отправить только фин. контролеру",,,БиблиотекаКартинок.ВКонверт);
	//ВариантыОтправки.Добавить("Отправить фин. контролеру и другим товарищам",,,БиблиотекаКартинок.ВКонверт);
	//ВыбранноеЗначение = ВыбратьИзСписка(ВариантыОтправки,Команда, ВариантыОтправки.Получить(0));
	//фПолучатели.Очистить();
	//Если не ВыбранноеЗначение= неопределено тогда						
	//	Если ВариантыОтправки.Индекс(ВыбранноеЗначение)=1 тогда	
	//список_=ПолучитьСписокВозможныхПолучателейИнициаторов();	
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-01-29 (#2975)
	//Если не записан надо записать
	Если НЕ Объект.Проведен Или Модифицированность Тогда		
		ПоказатьПредупреждение(,НСтр("ru = 'Перед отправкой письма необходимо провести документ'"),30);
		Возврат;
	КонецЕсли;
	
	АдресЭПОтправителя = ПолучитьАдресЭПИнициатораТекПользователя();
	Если ПустаяСтрока(АдресЭПОтправителя) Тогда		
		ПоказатьПредупреждение(,НСтр("ru = 'Письмо не может быть отправлено, т.к. не удалось определить адрес электронной почты текущего пользователя!'"),30);
		Возврат;
	КонецЕсли;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-01-29 (#2975)
	
	список_=ПолучитьПредпочитаемыхПолучателейИнициаторовЗаявки_НаСервере();
	ОтметитьПолучателей(список_);			
	
КонецПроцедуры

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-02-06 (#2975)
&НаСервереБезКонтекста
Функция ПолучитьАдресЭПИнициатораТекПользователя()
	
	Возврат Обработки.бит_фн_ОбработкаЗаписейРегистраОповещений.ПолучитьАдресЭлПочтыИнициатора();
	
КонецФункции

&НаСервереБезКонтекста
Процедура СохранитьВременныеФайлыВложений(пИдентификатор,СписокФайловДляОтправляемогоПисьма);
	
	пНаборВрФП = РегистрыСведений.ок_ВременныеФайлыПисем.СоздатьНаборЗаписей();
	пНаборВрФП.Отбор.Идентификатор.Установить(пИдентификатор);	
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-02 (#3036)
	соотИменаФайлов = Новый Соответствие;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-02 (#3036)
	
	Для Каждого Строка Из СписокФайловДляОтправляемогоПисьма Цикл
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-02 (#3036)
		пДвоичныеДанные = Строка.Файл.Хранилище.Получить();
		Если ТипЗнч(пДвоичныеДанные) <> Тип("ДвоичныеДанные") Тогда
			Продолжить;
		КонецЕсли;
		
		пТекИндексИмениФайла = соотИменаФайлов.Получить(Строка.ИмяФайла);
		Если пТекИндексИмениФайла = Неопределено Тогда 			
			пТекИндексИмениФайла = 0;
		Иначе
			пТекИндексИмениФайла = пТекИндексИмениФайла + 1;
		КонецЕсли;		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-02 (#3036)
		
		пЗапись = пНаборВрФП.Добавить();
		пЗапись.Идентификатор  = пИдентификатор;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-02 (#3036)		
		//пЗапись.ПолноеИмяФайла = Строка.ИмяФайла;
		//Заменено на:         
		пИндексНачалаРасширения = СтрНайти(Строка.ИмяФайла,".",НаправлениеПоиска.СКонца);
		
		Если пИндексНачалаРасширения>0 Тогда 
			пИмяФайлаБезРасширения  = Лев(Строка.ИмяФайла,пИндексНачалаРасширения-1);
			пРасширение 			= Сред(Строка.ИмяФайла,пИндексНачалаРасширения);
		Иначе
			пИмяФайлаБезРасширения = Строка.ИмяФайла;
			пРасширение = "";
		КонецЕсли;
		пЗапись.ПолноеИмяФайла = пИмяФайлаБезРасширения + ?(пТекИндексИмениФайла = 0,"",пТекИндексИмениФайла) + пРасширение;
		
		соотИменаФайлов.Вставить(Строка.ИмяФайла, пТекИндексИмениФайла);		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-02 (#3036)
		пЗапись.Файл		   = Строка.Файл.Хранилище;
		
	КонецЦикла;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-02 (#3036)
	Если пНаборВрФП.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-02 (#3036)
	
	пНаборВрФП.Записать();
	
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-02-06 (#2975)

&НаКлиенте
Функция	ОтметитьПолучателей(список_)
	Оповещение = Новый ОписаниеОповещения("ОтметитьПолучателейЗавершение", ЭтотОбъект);
	ПараметрыФормы = Новый Структура("Избранные",список_);
	ОткрытьФорму("Документ.бит_ФормаВводаБюджета.Форма.ФормаВыбораПолучателяУправляемая",ПараметрыФормы, ЭтаФорма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецФункции

&НаКлиенте
Процедура ОтметитьПолучателейЗавершение(Знач Результат, ДополнительныеПараметры) Экспорт 
	фПолучатели=Результат;
	//Если адресаты.Количество()> 0 тогда
	//Если список_.ОтметитьЭлементы("Выберите получателей") тогда
	//Для каждого Элемент из Отмеченнные Цикл
	//Если Элемент.Пометка Тогда
	//фПолучатели.Добавить(Элемент.Значение);
	//КонецЕсли;
	//КонецЦикла;	
	Если фПолучатели.Количество()>0 тогда
		СохранитьПредпочитаемыхПолучателейИнициаторовЗаявки_НаСервере();	
	КонецЕсли;								
	//	КонецЕсли;		
	//КонецЕсли;
	//иначе 
	//	Возврат;
	//КонецЕсли;
	
	Если фПолучатели.Количество()=0 тогда
		//	КодВозврата = Вопрос("Не выбраны получатели. Отправить только фин. контролеру?", РежимДиалогаВопрос.ДаНет, 10,,,КодВозвратаДиалога.Нет);
		//	Если КодВозврата = КодВозвратаДиалога.Нет ИЛИ КодВозврата = КодВозвратаДиалога.Таймаут Тогда 
		Возврат;
		//	КонецЕсли;		
	КонецЕсли;	
	//
	//фПолучатели.Добавить(ФинансовыйКонтролер);	
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-01-29 (#2975)		
	////Если не записан надо записать
	//Если Объект.Ссылка.Пустая() Или Модифицированность Тогда
	//	ПоказатьВопрос(Новый ОписаниеОповещения("ОтметитьПолучателейВопросЗавершение", ЭтотОбъект), "Чтобы отправить письмо, сохраните заявку. Хотите сохранить сейчас?", РежимДиалогаВопрос.ДаНет, 10,,,КодВозвратаДиалога.Нет);
	//	Возврат;
	//	//БИТ АКриштопов 110416 ++ Копирование кода проверки проведения/попытки проведения
	//ИначеЕсли Не Модифицированность и Не Объект.Проведен Тогда
	//
	//	ОбновитьДанныеПоОстаткуБюджета();	
	//	ДействиеВыполнено = бит_Визирование.УстановитьСтатусОбъекта(Объект.Ссылка
	//	,ПредопределенноеЗначение("Перечисление.бит_ВидыСтатусовОбъектов.Статус")
	//	,ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании")
	//	,		
	//	,бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь")
	//	,ТекущаяДата());
	//	
	//	Статус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании");
	//	мКэшЗначений.ТекущийСтатус = Статус;
	//	мКэшЗначений.ДатаИзмененияСтатуса = ТекущаяДата();
	//	
	//	ОбновитьСтатус();
	//	
	//	//{ bit_SVKushnirenko 20.06.2017 #2759
	//	//ИсходныйКод{
	//	//ЗаписатьДокумент(РежимЗаписиДокумента.Проведение);			
	//	//}ИсходныйКод
	//	
	//	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-01-29 (#2975)		
	//	//ЗаписатьДокументНаКлиенте(РежимЗаписиДокумента.Проведение); //должен уметь решать исключения при пуске с клиента!!
	//	//Заменено на:
	//	ЗаписатьНаСервере(РежимЗаписиДокумента.Запись);
	//	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-01-29 (#2975)
	//	//} bit_SVKushnirenko 20.06.2017 #2759
	//	
	//	//БИТ НАГолубева 02.03.2016 ++
	//	ЗаполнитьКэшЗначений(мКэшЗначений);
	//	УстановитьЗаголовокФормыДокумента();
	//	ЭтаФорма.ОбновитьОтображениеДанных();
	//	//БИТ НАГолубева 02.03.2016 --
	//	//БИТ АКриштопов 11042016 --
	//КонецЕсли;
	//Перенесено выше.Заменено на:
	Если ОК_ДобавленыКомментарии Тогда 
		ЗаписатьНаСервере(РежимЗаписиДокумента.Запись,Истина);
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-01-29 (#2975)
	
	ОтметитьПолучателейЗавершениеФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьПолучателейВопросЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	КодВозврата = РезультатВопроса;
	Если КодВозврата = КодВозвратаДиалога.Нет ИЛИ КодВозврата = КодВозвратаДиалога.Таймаут Тогда 
		Возврат;
	КонецЕсли;
	//БИТ АКриштопов 08042016 ++ копирование механизма и процедуры отправки ОЦР
	//БИТ НАГолубева 25.02.2016 ++
	//Если документ уже был проведен, то перепроводить нельзя, только записываем
	Если Объект.Проведен Тогда
		
		//{ bit_SVKushnirenko 20.06.2017 #2759
		//ИсходныйКод{
		//ЗаписатьДокумент(РежимЗаписиДокумента.Запись);			
		//}ИсходныйКод
		
		ЗаписатьДокументНаКлиенте(РежимЗаписиДокумента.Запись);
		//} bit_SVKushnirenko 20.06.2017 #2759
		
	Иначе
		//+Сундукова 28.03.2016
		//Т.К. это клиент - ссылаемся на процедуру на сервере
		ОбновитьДанныеПоОстаткуБюджета();
		//-Сундукова 28.03.2016
		
		
		ДействиеВыполнено = бит_Визирование.УстановитьСтатусОбъекта(Объект.Ссылка
		,ПредопределенноеЗначение("Перечисление.бит_ВидыСтатусовОбъектов.Статус")
		,ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании")
		,		
		,бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь")
		,ТекущаяДата());
		
		Статус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании");
		мКэшЗначений.ТекущийСтатус = Статус;
		мКэшЗначений.ДатаИзмененияСтатуса = ТекущаяДата();
		
		ОбновитьСтатус();
		
		//{ bit_SVKushnirenko 20.06.2017 #2759
		//ИсходныйКод{
		//ЗаписатьДокумент(РежимЗаписиДокумента.Проведение);			
		//}ИсходныйКод
		
		ЗаписатьДокументНаКлиенте(РежимЗаписиДокумента.Проведение); //должен уметь решать исключения при пуске с клиента!!
		//} bit_SVKushnirenko 20.06.2017 #2759

		//БИТ НАГолубева 02.03.2016 ++
		ЗаполнитьКэшЗначений(мКэшЗначений);
		УстановитьЗаголовокФормыДокумента();
		ЭтаФорма.ОбновитьОтображениеДанных();
		//БИТ НАГолубева 02.03.2016 --
	КонецЕсли;
	//БИТ АКриштопов 08042016 --			
	
	ОтметитьПолучателейЗавершениеФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьПолучателейЗавершениеФрагмент()
	
	//{ bit SVKushnirenko Bit 06.06.2017 #2759
	//письма не отправляются если документ не проведен
	Если НЕ Объект.Проведен Тогда  
		
		Возврат;
	КонецЕсли;
	//} bit SVKushnirenko Bit 06.06.2017 #2759
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-01-31 (#2975)
	//НастройкиДоставки = Новый Структура;
	//бит_БК_Общий.ЗаполнитьНастройкиДоставки(НастройкиДоставки);
	//
	//Если НЕ бит_БК_Общий.ПодключениеКСерверуSMTP(НастройкиДоставки) Тогда 
	//	ПараметрыАутентификацииПользователя = бит_БК_ОбщийКлиент.ПолучитьПараметрыАутентификацииПользователя();
	//	Если ПараметрыАутентификацииПользователя = неопределено Тогда 
	//		Возврат;
	//	КонецЕсли;
	//	НастройкиДоставки.ПользовательSMTP = ПараметрыАутентификацииПользователя.ПользовательSMTP;
	//	НастройкиДоставки.ПарольSMTP = ПараметрыАутентификацииПользователя.ПарольSMTP;
	//КонецЕсли;	
	//
	//ОтправитьАдресатуНаСервере(НастройкиДоставки);
	//
	//Заменено на:
	пИдентификатор = Строка(Новый УникальныйИдентификатор);
	пРезультатОтправки = бит_ФормаВводаБюджетаВызовСервера.ОтправитьПисьмоАдресату(Объект.Ссылка, ПользователиКлиентСервер.ТекущийПользователь(),фПолучатели, пИдентификатор);
	//ПротоколОтправки
	Если пРезультатОтправки.ОтправкаОсуществлена Тогда 
		
		Если СписокФайловДляОтправляемогоПисьма.Количество()>0 Тогда
			пМассивФайлов = Новый Массив;
			Для Каждого пСтрокаФайла Из СписокФайловДляОтправляемогоПисьма Цикл 
				пСтруктураФайла = Новый Структура;
				пСтруктураФайла.Вставить("ИмяФайла", пСтрокаФайла.ИмяФайла);
				пСтруктураФайла.Вставить("Файл"	   , пСтрокаФайла.Адрес);
				пМассивФайлов.Добавить(пСтруктураФайла);
			КонецЦикла;
			//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2017-02-22 (#3103)
			//СохранитьВременныеФайлыВложений(пИдентификатор,пМассивФайлов);
			бит_ФормаВводаБюджетаВызовСервера.СохранитьВременныеФайлыВложений(пИдентификатор, пМассивФайлов);
			//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2017-02-22 (#3103)
		КонецЕсли;
		
		ПротоколОтправки    = "Сообщение отправлено по адресу "
			                       +пРезультатОтправки.Адреса
								   +"  "
								   +ТекущаяДата()
								   +".";		
	Иначе
						
		ПротоколОтправки    = "Сообщение  не удалось отправить "
			                       +?(пРезультатОтправки.Свойство("Адреса"),"по адресу " + пРезультатОтправки.Адреса, "")
								   +"  "
								   +ТекущаяДата()
								   +".";

		
	КонецЕсли;
							   
	Если пРезультатОтправки.Ошибки.Количество()<>0 Тогда 
		ПротоколОтправки = ПротоколОтправки + " В процессе произошли следующие ошибки:";
		Для Каждого пОшибка Из пРезультатОтправки.Ошибки Цикл 
			ПротоколОтправки = ПротоколОтправки + "
												  |" + пОшибка;
		КонецЦикла;
	КонецЕсли;
		
	Сообщить(ПротоколОтправки);			
		
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-01-31 (#2975)
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьАдресатуНаСервере(НастройкиДоставки)
	
	// БИТ НАГолубева 03.03.2016 ++
	//Печатные формы заявки устарели, используется только макет печати OPEX
	//// + БИТ AMerkulov 2015-12-20	
	//Если Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный Тогда		
	//	ВнешнийИсточник = бит_БК_Общий.ПолучитьВнешнийИсточникПоНаименованию(объект.Ссылка, "Печать(заявка инвестиционный)");
	//	ВнешняяОбработкаОбъект = бит_БК_Общий.ПолучитьОбъектВнешнейОбработки(ВнешнийИсточник, ложь);
	//	//ВнешняяОбработкаОбъект.СсылкаНаОбъект = объект.Ссылка;
	//	//табДок = ВнешняяОбработкаОбъект.Печать(); 
	//	
	//	МассивОбъектов = Новый Массив;
	//	МассивОбъектов.Добавить(Объект.Ссылка);
	//	ТабДок = ВнешняяОбработкаОбъект.СформироватьПечатнуюФорму(МассивОбъектов);
	//	
	//	
	//	НастройкиДоставки.Вставить("Вложение",Новый Структура("ТабДок,ИмяФайла",табДок,"Заявка на инвестиционные расходы"));
	//Иначе		
	//	ВнешнийИсточник = бит_БК_Общий.ПолучитьВнешнийИсточникПоНаименованию(объект.Ссылка, "Печать(заявка операционный)");
	//	ВнешняяОбработкаОбъект = бит_БК_Общий.ПолучитьОбъектВнешнейОбработки(ВнешнийИсточник, ложь);
	//	//ВнешняяОбработкаОбъект.СсылкаНаОбъект = объект.Ссылка;
	//	//табДок = ВнешняяОбработкаОбъект.Печать(); 
	//	
	//	МассивОбъектов = Новый Массив;
	//	МассивОбъектов.Добавить(Объект.Ссылка);
	//	ТабДок = ВнешняяОбработкаОбъект.СформироватьПечатнуюФорму(МассивОбъектов);
	//		
	
	//	НастройкиДоставки.Вставить("Вложение",Новый Структура("ТабДок,ИмяФайла",табДок,"Заявка на операционные расходы"));
	//КонецЕсли;
	//// - БИТ AMerkulov  2015-12-20	
	
	НастройкиДоставки = ПрикрепитьПечатнуюФорму(НастройкиДоставки);
	// БИТ НАГолубева 03.03.2016 --
	
	// BIT AMerkulov 2015-04-24 ++  /
	ДополнитьНастройкиВложениями(НастройкиДоставки);
	// BIT AMerkulov 2015-04-24 --  /
	
	бит_ФормаВводаБюджетаВызовСервера.ОтправитьСообщениеКлиент(Объект.Ссылка, НастройкиДоставки, фПолучатели);	
КонецПроцедуры

&НаСервере
Процедура СохранитьПредпочитаемыхПолучателейИнициаторовЗаявки_НаСервере()	
	ХранилищеНастроекДанныхФорм.Сохранить("ПредпочитаемыеПолучателиИнициаторыЗаявки",,новый ХранилищеЗначения(фПолучатели));
КонецПроцедуры

&НаСервере
Функция ПолучитьПредпочитаемыхПолучателейИнициаторовЗаявки_НаСервере()	
	значение=ХранилищеНастроекДанныхФорм.Загрузить("ПредпочитаемыеПолучателиИнициаторыЗаявки");
	
	Если  типзнч(значение)=тип("ХранилищеЗначения") тогда
		возврат значение.Получить();
	Иначе 
		возврат Неопределено;
	КонецЕсли;	
	
КонецФункции


//&НаСервере
//Функция ПолучитьСписокВозможныхПолучателейИнициаторов()
//	рез=Новый СписокЗначений();
//	
//	сохрПолучатели=ПолучитьПредпочитаемыхПолучателейИнициаторовЗаявки_НаСервере();
//	
//	
//	избранные=новый СписокЗначений;
//	Если сохрПолучатели<> Неопределено тогда
//		Если типЗнч(сохрПолучатели)=тип("СписокЗначений") тогда
//			избранные.ЗагрузитьЗначения(сохрПолучатели.ВыгрузитьЗначения());
//		КонецЕсли;	
//	КонецЕсли;	
//	
//	
//	Запрос=новый Запрос("ВЫБРАТЬ
//						|	бит_БК_Инициаторы.Ссылка КАК Инициатор,
//						|	1 КАК Группа,
//						|	бит_БК_Инициаторы.Наименование КАК Наименование
//						|ИЗ
//						|	Справочник.бит_БК_Инициаторы КАК бит_БК_Инициаторы
//						|ГДЕ
//						|	бит_БК_Инициаторы.Ссылка В(&Избранные)
//						|
//						|ОБЪЕДИНИТЬ ВСЕ
//						|
//						|ВЫБРАТЬ
//						|	бит_БК_Инициаторы.Ссылка,
//						|	2,
//						|	бит_БК_Инициаторы.Наименование
//						|ИЗ
//						|	Справочник.бит_БК_Инициаторы КАК бит_БК_Инициаторы
//						|ГДЕ
//						|	бит_БК_Инициаторы.Email <> """"
//						|	И НЕ бит_БК_Инициаторы.Ссылка В (&Избранные)
//						|
//						|УПОРЯДОЧИТЬ ПО
//						|	Группа,
//						|	Наименование");
//	Запрос.УстановитьПараметр("Избранные",избранные);					
//	зРезультат=Запрос.Выполнить();
//	Если не зРезультат.Пустой() тогда
//		рез.ЗагрузитьЗначения(зРезультат.Выгрузить().ВыгрузитьКолонку("Инициатор"));
//	КонецЕсли;

//	возврат рез;
//КонецФУнкции

//ОК Калинин М. 
//получает текущую строку ТЧ
&НаКлиенте
Функция ТекущаяСтрока()
	Возврат Элементы.БДДС.ТекущиеДанные;
КонецФункции

//			Действия с суммами 
&НаКлиенте
Процедура БДДССтавкаНДСПриИзменении(Элемент)	
	//1c-izhtc spawn (
	// Ставка НДС больше не используется в ТЧ БДДС
	// Снова используется // БИТ_YK 01/16
	ПересчитатьСуммы("СтавкаНДС", ТекущаяСтрока().ПолучитьИдентификатор());
	//1c-izhtc spawn )
КонецПроцедуры
&НаКлиенте
Процедура БДДССуммаПриИзменении(Элемент)
	ПересчитатьСуммы("СуммаСНДС", ТекущаяСтрока().ПолучитьИдентификатор());
КонецПроцедуры 
&НаКлиенте
Процедура БДДСбит_БК_СуммаВРамкахБюджетаСНДСПриИзменении(Элемент)
	//ПересчитатьСуммы("СуммаВРамкахБюджетаСНДС", ТекущаяСтрока().ПолучитьИдентификатор());
КонецПроцедуры
&НаКлиенте
Процедура БДДСбит_БК_СуммаБезНДСПриИзменении(Элемент)
	ПересчитатьСуммы("СуммаБезНДС", ТекущаяСтрока().ПолучитьИдентификатор());
	//+СБ Пискунова #2691
	Объект.СБ_СуммаПредоплатыИтого  = Объект.БДДС.Итог("СБ_СуммаПредоплаты");  
	//-СБ Пискунова #2691

КонецПроцедуры
&НаКлиенте
Процедура БДДСбит_БК_ВалютаДоговораПриИзменении(Элемент)
	ПересчитатьСуммы("Валюта", ТекущаяСтрока().ПолучитьИдентификатор());
КонецПроцедуры
&НаКлиенте
Процедура БДДСбит_БК_СуммаВВалютеБезНДСПриИзменении(Элемент)
	ПересчитатьСуммы("СуммаВВалютеБезНДС", ТекущаяСтрока().ПолучитьИдентификатор());
	//+СБ Пискунова #2691
	Объект.СБ_СуммаПредоплатыИтого  = Объект.БДДС.Итог("СБ_СуммаПредоплаты");  
	//-СБ Пискунова #2691
КонецПроцедуры
&НаКлиенте
Процедура БДДСбит_БК_СуммаВВалютеСНДСПриИзменении(Элемент)
	ПересчитатьСуммы("СуммаВВалютеСНДС", ТекущаяСтрока().ПолучитьИдентификатор());
КонецПроцедуры
&НаКлиенте
Процедура БДДСбит_БК_СуммаВРамкахБюджетаБезНДСПриИзменении(Элемент)
	//ПересчитатьСуммы("СуммаВРамкахБюджетаБезНДС", ТекущаяСтрока().ПолучитьИдентификатор());
КонецПроцедуры
&НаКлиенте
Процедура БДДСКоличествоПриИзменении(Элемент)
	ПересчитатьСуммы("Количество", ТекущаяСтрока().ПолучитьИдентификатор());
КонецПроцедуры
&НаКлиенте
Процедура БДДСбит_БК_ЦенаСНДСПриИзменении(Элемент)
	ПересчитатьСуммы("ЦенаСНДС", ТекущаяСтрока().ПолучитьИдентификатор());
КонецПроцедуры
&НаКлиенте
Процедура БДДСбит_БК_ЦенаБезНДСПриИзменении(Элемент)
	ПересчитатьСуммы("ЦенаБезНДС", ТекущаяСтрока().ПолучитьИдентификатор());
КонецПроцедуры
&НаКлиенте
Процедура БДДСбит_БК_ЦенаВВалютеБезНДСПриИзменении(Элемент)
	ПересчитатьСуммы("ЦенаВВалютеБезНДС", ТекущаяСтрока().ПолучитьИдентификатор());
	//+СБ Пискунова #2691
	Объект.СБ_СуммаПредоплатыИтого  = Объект.БДДС.Итог("СБ_СуммаПредоплаты");  
	//-СБ Пискунова #2691
КонецПроцедуры
&НаКлиенте
Процедура БДДСбит_БК_ЦенаВВалютеСНДСПриИзменении(Элемент)
	ПересчитатьСуммы("ЦенаВВалютеСНДС", ТекущаяСтрока().ПолучитьИдентификатор());
	//+СБ Пискунова #2691
	Объект.СБ_СуммаПредоплатыИтого  = Объект.БДДС.Итог("СБ_СуммаПредоплаты");  
	//-СБ Пискунова #2691
КонецПроцедуры

&НаСервере
Функция ПересчитатьСуммыБДДС(ТочкаВхода)
	ДокОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.бит_ФормаВводаБюджета"));	
	ДокОбъект.ПересчитатьСуммыБДДС(ТочкаВхода, Ложь);
	ЗначениеВДанныеФормы(ДокОбъект, Объект);
КонецФункции

&НаСервере
Функция ПересчитатьСуммы(ТочкаВхода, ИдентификаторСтроки, ТекРассчитыватьСуммуЗаРамками = Ложь)
	ТекущаяСтрока = Объект.БДДС.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Начало 20181106 (#3086)
	//нужно сделать как в обычной форме, чтобы курс был на дату документа
	Если ТочкаВхода = "Валюта" Тогда
		ДокОбъект = РеквизитФормыВЗначение("Объект");
		ДокОбъект.ПересчитатьСуммы("ВалютаКурсНаТекущуюДату", ТекущаяСтрока, ТекРассчитыватьСуммуЗаРамками);
		Возврат Неопределено;
	КонецЕсли;	
	//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Конец 20181106 (#3086)
	
	ДокОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.бит_ФормаВводаБюджета"));	
	ДокОбъект.ПересчитатьСуммы(ТочкаВхода, ТекущаяСтрока, ТекРассчитыватьСуммуЗаРамками);
	
	//{ bit_SVKushnirenko 20.12.2016 #2669
	//ИсходныйКод{
	// // BIT AMErkulov 29-12-2015 ++
	////+Сундукова 28.03.2016
	//бит_ФормаВводаБюджетаВызовСервера.ОбновитьДанныеПоОстаткуБюджета(объект);
	////-Сундукова 28.03.2016
	//// BIT AMErkulov 29-12-2015 --
	//}ИсходныйКод
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-21 (#2936)
	
	//бит_БК_Общий.ЗаполнитьОстаткиБюджетаИПризнакиБюджетногоКонтроля(Объект);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-21 (#2936)
	//} bit_SVKushnirenko 20.12.2016 #2669
КонецФункции

&НаКлиенте
Процедура Список_ХранилищеДополнительнойИнформацииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-27 (#2916)
	//ПараметрыФормы = Новый Структура;
	//
	//Форма = ПолучитьФорму("Справочник.бит_ХранилищеДополнительнойИнформации.Форма.ФормаЭлементаУправляемая",ПараметрыФормы, Элементы.Файлы);
	//Форма.Объект.Объект = Объект.Ссылка;
	//Форма.НеРедактироватьОбъект = Истина;
	//Форма.Открыть();
	//Заменено на:
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		
		ТекстВопроса = НСтр("ru='Документ не записан. Записать?'");
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗаписатьДокументИОткрытьФормуПрикрепленныхФайловПослеВопроса", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);

		Возврат;
	КонецЕсли;
	
	ОткрытьФормуУправленияПрикрепленнымиФайлами();			
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-27 (#2916)
	
КонецПроцедуры

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-27 (#2916)
&НаКлиенте
Процедура ЗаписатьДокументИОткрытьФормуПрикрепленныхФайловПослеВопроса(Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;	
	КонецЕсли;
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	Если Не Записать(ПараметрыЗаписи) Тогда 
		Возврат;
	КонецЕсли;
	     	
	ОткрытьФормуУправленияПрикрепленнымиФайлами();	

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуУправленияПрикрепленнымиФайлами()
		
	ПараметрыФормы = Новый Структура;
	
	Форма = ПолучитьФорму("Справочник.бит_ХранилищеДополнительнойИнформации.Форма.ФормаЭлементаУправляемая",ПараметрыФормы, Элементы.Файлы);
	Форма.Объект.Объект = Объект.Ссылка;
	Форма.НеРедактироватьОбъект = Истина;
	Форма.Открыть();	
			
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-27 (#2916)

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-27 (#3935)
// Процедура - обработчик команды "ОткрытьФайл" формы.
// 
&НаКлиенте
Процедура ОткрытьФайл(Команда)
	
	ДанныеТекущейСтроки = Элементы.Список_ХранилищеДополнительнойИнформации.ТекущиеДанные;
	
	Если ДанныеТекущейСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрокаСсылка = Элементы.Список_ХранилищеДополнительнойИнформации.ТекущаяСтрока;
	
	бит_ХранениеДополнительнойИнформацииКлиент.ОткрытьФайл(ТекущаяСтрокаСсылка, ДанныеТекущейСтроки.ИмяФайла);
	
КонецПроцедуры

// Процедура - обработчик команды "СохранитьФайл" формы.
// 
&НаКлиенте
Процедура СохранитьФайл(Команда)
	
	ДанныеТекущейСтроки = Элементы.Список_ХранилищеДополнительнойИнформации.ТекущиеДанные;
	
	Если ДанныеТекущейСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрокаСсылка = Элементы.Список_ХранилищеДополнительнойИнформации.ТекущаяСтрока;
	
	бит_ХранениеДополнительнойИнформацииКлиент.СохранитьФайл(ТекущаяСтрокаСсылка, ДанныеТекущейСтроки.ИмяФайла);
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-27 (#3935)

&НаСервере
Функция ПолучитьЭлементСправочника()
	ОбъектЗначение = Справочники.бит_ХранилищеДополнительнойИнформации.СоздатьЭлемент();
	ОбъектЗначение.Объект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.бит_ФормаВводаБюджета")).Ссылка;
	ОбъектДанныеФормы = Новый(Тип("ДанныеФормыСтруктура"));
	ЗначениеВДанныеФормы(ОбъектЗначение,ОбъектДанныеФормы);
	Возврат ОбъектДанныеФормы;
КонецФункции

&НаКлиенте
Процедура БДДСПериодПриИзменении(Элемент)
	ТекущиеДанные = Элементы.БДДС.ТекущиеДанные;
	ТекущиеДанные.Период = НачалоМесяца(ТекущиеДанные.Период);
КонецПроцедуры

//// ОБРАБОТЧИКИ ПРЕДСТАВЛЕНИЯ ПЕРИОДА
&НаКлиенте
Процедура ПредставлениеПериодаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.БДДС.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Период) Тогда 
		ТекущиеДанные.Период = НачалоМесяца(ТекущаяДата());
	КонецЕсли;
	НачалоВыбораИзСпискаПредставленияПериодаРегистрации(ТекущиеДанные.ПредставлениеПериода, ТекущиеДанные.Период); 
КонецПроцедуры
&НаКлиенте
Процедура НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, ПериодРегистрации, НачальноеЗначение = Неопределено) Экспорт
	
	Если НачальноеЗначение = Неопределено Тогда
		НачальноеЗначение = ПериодРегистрации;
	КонецЕсли; 
	
	СписокВыбора = Новый СписокЗначений;
	НачалоТекущегоГода = НачалоГода(НачальноеЗначение);
	НачалоПрошлогоГода = НачалоГода(НачалоТекущегоГода - 1);
	СписокВыбора.Добавить(НачалоПрошлогоГода, (Формат(НачалоПрошлогоГода, "ДФ='yyyy'") + "..."));
	НачалоМесяцаЗаполнения = НачалоТекущегоГода;
	ЭлементПоУмолчанию = Неопределено;
	Для а = 1 По 12 Цикл
		ДобавленныйЭлемент = СписокВыбора.Добавить(НачалоМесяцаЗаполнения, ПолучитьПредставлениеПериодаРегистрации(НачалоМесяцаЗаполнения));
		Если НачальноеЗначение = НачалоМесяцаЗаполнения Тогда
			ЭлементПоУмолчанию = ДобавленныйЭлемент;
		КонецЕсли; 
		НачалоМесяцаЗаполнения = ДобавитьМесяц(НачалоМесяцаЗаполнения, 1);
	КонецЦикла;
	НачалоСледующегоГода = КонецГода(НачалоТекущегоГода) + 1;
	СписокВыбора.Добавить(НачалоСледующегоГода, (Формат(НачалоСледующегоГода, "ДФ='yyyy'") + "..."));
	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("НачалоВыбораИзСпискаПредставленияПериодаРегистрацииЗавершение", ЭтотОбъект, Новый Структура("НачальноеЗначение, ПериодРегистрации, Элемент", НачальноеЗначение, ПериодРегистрации, Элемент)), СписокВыбора, Элемент, ЭлементПоУмолчанию);
	
КонецПроцедуры
&НаКлиенте
Процедура НачалоВыбораИзСпискаПредставленияПериодаРегистрацииЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	НачальноеЗначение = ДополнительныеПараметры.НачальноеЗначение;
	ПериодРегистрации = ДополнительныеПараметры.ПериодРегистрации;
	Элемент = ДополнительныеПараметры.Элемент;
	
	ТекущиеДанные = Элементы.БДДС.ТекущиеДанные;
	ТекущиеДанные.ПредставлениеПериода = Элемент;
	ТекущиеДанные.Период = ПериодРегистрации;
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	ИначеЕсли Год(ВыбранныйЭлемент.Значение) <> Год(НачальноеЗначение) Тогда
		НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, ПериодРегистрации, ВыбранныйЭлемент.Значение);
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Период = ВыбранныйЭлемент.Значение;
	ТекущиеДанные.ПредставлениеПериода  = ПолучитьПредставлениеПериодаРегистрации(ТекущиеДанные.Период);
	
КонецПроцедуры
&НаКлиенте
Процедура ПредставлениеПериодаРегистрацииОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры
&НаКлиенте
Процедура ПредставлениеПериодаРегистрацииПриИзменении(Элемент)
	ТекущиеДанные = Элементы.БДДС.ТекущиеДанные;
	ТекущиеДанные.Период = НачалоМесяца(ТекущиеДанные.Период);
КонецПроцедуры
&НаКлиенте
Процедура ПредставлениеПериодаРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.БДДС.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Период) Тогда 
		ТекущиеДанные.Период = НачалоМесяца(ТекущаяДата());
		ТекущиеДанные.ПредставлениеПериода = ПолучитьПредставлениеПериодаРегистрации(ТекущиеДанные.Период);
	КонецЕсли;
	
	Если Направление = 1 Тогда
		ТекущиеДанные.Период = КонецМесяца(ТекущиеДанные.Период) + 1;
	ИначеЕсли Направление = -1 Тогда
		ТекущиеДанные.Период = НачалоМесяца(ТекущиеДанные.Период - 1);
	КонецЕсли;
	
	ПредставлениеПериодаРегистрации = ПолучитьПредставлениеПериодаРегистрации(ТекущиеДанные.Период);
	ТекущиеДанные.ПредставлениеПериода = ПредставлениеПериодаРегистрации;
КонецПроцедуры
&НаКлиенте
Функция ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации) Экспорт
	Возврат Формат(ПериодРегистрации, "ДФ='MMMM yyyy'");
КонецФункции

//bit_SVKushnirenko 27.01.2017 #2657
//Прокладка для вызова серверного метода из клиента на форме
// Параметры:
//парСсылка - ссылка на текущий документ
&НаСервереБезКонтекста
Функция ПолучитьМассивЗаявокКоторыеМогутИзменитьСтатусПриДвижениях(парСсылка)
	
	Возврат бит_БК_Общий.ПолучитьМассивЗаявокКоторыеМогутИзменитьСтатусПриДвижениях(парСсылка);
КонецФункции // ПолучитьМассивЗаявокКоторыеМогутИзменитьСтатусПриДвижениях()

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// BIT AMerkulov 17-11-2015 ++
	//ОбновитьВизыДляОбъектаНаСервере();
	// BIT AMerkulov 17-11-2015 --
	
	//{ bit_SVKushnirenko 29.03.2017 #2811
	//ИсходныйКод{
	//УстановитьПредставлениеПериода();
	//// + БИТ AMerkulov 2014-01-22 /  Универсальная заявка
	//УстановитьЗаголовокФормыДокумента();
	//// - БИТ AMerkulov 2014-01-22 /  Универсальная заявка
	//}ИсходныйКод
	//исправление ошибок с изменением и отображением данных при неудачной попытке записи
	//} bit_SVKushnirenko 29.03.2017 #2811
	
	// BIT AMerkulov 20-04-2015 ++
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
	//УстановитьВидимостьКнопокСогласований();
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
	ПрочитатьУстановленныеВизы();
	бит_УстановитьСписокФинКонтролеров();
	// BIT AMerkulov 20-04-2015 --	
	
	// БИТ НАГолубева 03.03.2016 ++
	УстановитьДоступностьЭлементов();
	// БИТ НАГолубева 03.03.2016 --
	
	//{ bit SVKushnirenko Bit 27.01.2017 #2657
	пМассивОбновления = ПолучитьМассивЗаявокКоторыеМогутИзменитьСтатусПриДвижениях(Объект.Ссылка);
	Если пМассивОбновления.Количество()  >  0 Тогда
		
		Оповестить("бит_БК_ИзмСтатусаПослеИзмБалансаЗаявок", Новый Структура("Ссылки", пМассивОбновления));
	КонецЕсли;
	//} bit SVKushnirenko Bit 27.01.2017 #2657
	
	//{ bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
	//+Сенин С.В. 26.10.16 №2669
	ЗаполнитьКэшЗначений(мКэшЗначений);
	// Установим текущий статус.
	УстановитьСтатусВФорме(мКэшЗначений.ТекущийСтатус, мКэшЗначений.ДатаИзмененияСтатуса);
	//-Сенин С.В. 26.10.16 №2669
	//} bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-01-16 (#2942)
	Если мКэшЗначений.РольДоступна.ДоступнаРольГлавныйБК Тогда 
		Статус = мКэшЗначений.ТекущийСтатус;
		Элементы.Декорация5.Заголовок = мКэшЗначений.ДатаИзмененияСтатуса;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-01-16 (#2942)
	
	//{ bit SVKushnirenko Bit 03.04.2017 #2811
	УстановитьЗаголовокФормыДокумента();
	//} bit SVKushnirenko Bit 03.04.2017 #2811
	
	//{ bit SVKushnirenko Bit 13.06.2017 #2759
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-13 (#2873)
	//Вызов из процедуры СогласоватьЗавершение с параметром Неопределено приводил к ошибке
	//Если рекПроверкаЗаполнения_бит_БК_ЦельПриобретенияОборудования И 
	//Заменено на:	
	Если ПараметрыЗаписи<>Неопределено И
		 рекПроверкаЗаполнения_бит_БК_ЦельПриобретенияОборудования И 
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-13 (#2873)		
		ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") И
		СокрЛП(Объект.бит_БК_ЦельПриобретенияОборудования) = "Взамен" Тогда //Вывод предупреждения
		
		рекТекстСообщенияПоОборудованию = 
		"Внимание! Старое оборудование, которое планируется заменить на новое,
		|должно быть списано с учета. Оформите акты списания оборудования!";
		
		ПодключитьОбработчикОжидания("ОбработчикВыводаСообщенияПоОборудованию", 1.5, Истина);
	КонецЕсли;
	//При обновлении в предрабе, проверить редакцию изменения ПриЗаписи() - она изменилась!
	//} bit SVKushnirenko Bit 13.06.2017 #2759
	
	//+ СБ Пискунова #2691 03.02.2017 Установим доступность кнопки запуска процесса:
	ОпределитьДоступностьКнопокМаршрутаСогласования();
	ПрограммноДобавитьЭлементыФормыСогласующих();
	//- СБ Пискунова #2691 03.02.2017 Установим доступность кнопки запуска процесса
	
	// ОКЕЙ Гиль А.В.(Софтлаб) Начало 25.01.2020 (#3591) 
	ОбновитьЭлементыРасшифровкиЗатратОС();	
	// ОКЕЙ Гиль А.В.(Софтлаб) Конец 25.01.2020 (#3591)

КонецПроцедуры

&НаКлиенте
Процедура УстановитьПредставлениеПериода()
	Для Каждого ТекСтрока Из Объект.БДДС Цикл
		ТекСтрока.ПредставлениеПериода = ПолучитьПредставлениеПериодаРегистрации(ТекСтрока.Период);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПредпологаемыйКонтрагент()
	//{ bit_SVKushnirenko 16.01.2017 #2671.дпн
	//ИсходныйКод{
	//Для Каждого ТекСтрока Из Объект.БДДС Цикл
	//	ТекСтрока.бит_БК_ПредпологаемыйКонтрагент = Объект.бит_БК_ПредпологаемыйКонтрагент;
	//КонецЦикла;	
	//}ИсходныйКод
	ЗаполнениеЗначенийТЧизДанныхИнициатора("бит_БК_ПредпологаемыйКонтрагент;");
	//} bit_SVKushnirenko 16.01.2017 #2671.дпн
КонецПроцедуры

&НаКлиенте
Процедура ПредпологаемыйКонтрагентПриИзменении(Элемент)
	УстановитьПредпологаемыйКонтрагент();
КонецПроцедуры

&НаКлиенте
Процедура БДДССтатьяОборотовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//БИТ АКриштопов ++ 2482
	//СтандартнаяОбработка = ложь;
	//ПараметрыФормы = Новый Структура;
	//Форма = ОткрытьФорму("Справочник.бит_СтатьиОборотов.Форма.ФормаВыбораУправляемая", ПараметрыФормы, Элемент, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//Форма.Элементы.Список.Отображение = ОтображениеТаблицы.Список;	
КонецПроцедуры

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-05-14 (#3714)
&НаКлиенте
Процедура БДДССтатьяОборотовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если НЕ ПроверитьАктивностьКонтролируемойСтатьи(ВыбранноеЗначение) Тогда
		ВыбранноеЗначение = Неопределено;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Выбранная статья оборотов не является активной. Выберите другую статью оборотов.");
	КонецЕсли;
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-05-14 (#3714)

&НаКлиенте
Процедура БДДСбит_БК_УсловияОплатыПриИзменении(Элемент)
	ТекущиеДанные = Элементы.БДДС.ТекущиеДанные;
	Если НЕ Строка(ТекущиеДанные.бит_БК_УсловияОплаты) = "Предоплата" И НЕ ТекущиеДанные.бит_БК_СуммаПредоплаты = 0 Тогда 
		ТекущиеДанные.бит_БК_СуммаПредоплаты = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура БДДСбит_БК_СуммаПредоплатыПриИзменении(Элемент)
	ТекущиеДанные = Элементы.БДДС.ТекущиеДанные;
	Если НЕ Строка(ТекущиеДанные.бит_БК_УсловияОплаты) = "Предоплата" И НЕ ТекущиеДанные.бит_БК_СуммаПредоплаты = 0 Тогда 
		ТекущиеДанные.бит_БК_СуммаПредоплаты = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФинансовыйКонтролерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НачальноеЗначение = СписокФинКонтролеров.НайтиПоЗначению(Объект.ФинансовыйКонтролер);
	Если НачальноеЗначение = Неопределено Тогда 
		НачальноеЗначение = 0;
	КонецЕсли;	
	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ФинансовыйКонтролерНачалоВыбораЗавершение", ЭтотОбъект), СписокФинКонтролеров, Элемент, НачальноеЗначение);
КонецПроцедуры

&НаКлиенте
Процедура ФинансовыйКонтролерНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВыбранноеЗначение = ВыбранныйЭлемент;
	Если Не ВыбранноеЗначение = Неопределено Тогда
		Если Не СписокФинКонтролеров.НайтиПоЗначению(ВыбранноеЗначение.Значение) = Неопределено Тогда
			Объект.ФинансовыйКонтролер = ВыбранноеЗначение.Значение;
		Иначе
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Выбранный инициатор не является фин.контролером";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//Статусирование
&НаКлиенте
Процедура УстановитьСтатусВФорме(Статус,ДатаИзмененияСтатуса) Экспорт
	
	СтруктураПараметров  = Новый Структура("Статус,ДатаИзмененияСтатуса",Статус,ДатаИзмененияСтатуса);
	ИнформацияСтатус     = бит_ОбщегоНазначенияКлиентСервер.СформироватьИнформациюСтатус(СтруктураПараметров);
	
	//УправлениеЭлементамиФормы();
	
КонецПроцедуры // УстановитьСтатусВФорме()

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
		
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-09 (#2873)
	Если Не ЗначениеЗаполнено(бит_уп_Сервер.ПолучитьАлгоритмВизирования(Объект.Ссылка)) ИЛИ 
		 бит_БК_Общий.РеквизитыДляМуршрутовВидимы(Объект.Ссылка) 
	Тогда 
		Возврат;
	КонецЕсли;
	
	//Вернул установку полей для старого алгоритма
	
	//Признак того что запись производится из тонкого или web клиента
	ТекущийОбъект.бит_БК_WEBКлиент = Истина;               	
	//Обновляем перечень виз в регистре если их нет
	СтруктураОтбор = Новый Структура("Объект",ТекущийОбъект.Ссылка);
	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	Если НаборЗаписей.Количество() = 0 Тогда 
		бит_Визирование.ОбновитьПереченьВиз(ТекущийОбъект.Ссылка,ТекущийОбъект.Дата,СтруктураОтбор);
	КонецЕсли;
	
	//устанавливаем визу фин контролера
	
	// BIT Amerkulov 12112014 ++
	Если Объект.ФинансовыйКонтролер <> ФинансовыйКонтролерИсходный 
		ИЛИ ФинансовыйКонтролерРешение <> ФинансовыйКонтролерРешениеИсходное Тогда
		Виза = Справочники.бит_Визы.бит_БК_ФинКонтролер;
		СтруктураОтбор = Новый Структура("Объект,Виза",ТекущийОбъект.Ссылка,Виза);
		НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
		Если Не НаборЗаписей.Количество() = 0 Тогда
			НаборЗаписей[0].ФизическоеЛицо = Объект.ФинансовыйКонтролер;
			НаборЗаписей[0].Решение 		= ФинансовыйКонтролерРешение;
			НаборЗаписей[0].ДатаУстановки	= ТекущаяДата();
		Иначе
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Виза",Виза);
			СтруктураПараметров.Вставить("ДатаЗаполнения", ТекущаяДата());
			СтруктураПараметров.Вставить("ВремяНаУстановку",Виза.ВремяНаУстановку);
			СтруктураПараметров.Вставить("ОбъектСвязи", Объект.ФинансовыйКонтролер);
			СтруктураПараметров.Вставить("СтруктурноеПодразделение",Неопределено);
			СтруктураПараметров.Вставить("Решение",ФинансовыйКонтролерРешение);
		
			бит_Визирование.ДобавитьВизу(НаборЗаписей,ТекущийОбъект.Ссылка,СтруктураПараметров)
		КонецЕсли;
		Если НаборЗаписей.Модифицированность() Тогда 
			НаборЗаписей.Записать();
		КонецЕсли;
	КонецЕсли;
	
	Если Эксперт1 <> Эксперт1Исходный Тогда
		Виза = Справочники.бит_Визы.бит_БК_Эксперт;
		СтруктураОтбор = Новый Структура("Объект,Виза",ТекущийОбъект.Ссылка,Виза);
		НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
		Если Не НаборЗаписей.Количество() = 0 Тогда
			
			НаборЗаписей[0].ФизическоеЛицо	= Эксперт1;
			НаборЗаписей[0].ДатаУстановки	= ТекущаяДата();
			
		Иначе
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Виза",Виза);
			СтруктураПараметров.Вставить("ДатаЗаполнения", ТекущаяДата());
			СтруктураПараметров.Вставить("ВремяНаУстановку",Виза.ВремяНаУстановку);
			СтруктураПараметров.Вставить("ОбъектСвязи", Эксперт1);
			СтруктураПараметров.Вставить("СтруктурноеПодразделение",Неопределено);
			
			бит_Визирование.ДобавитьВизу(НаборЗаписей,ТекущийОбъект.Ссылка,СтруктураПараметров)
		КонецЕсли;
		Если НаборЗаписей.Модифицированность() Тогда 
			НаборЗаписей.Записать();
		КонецЕсли;
	КонецЕсли;	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-09 (#2873)	
	
	// BIT AMerkulov 12112014 --
	
	//Устанавливаем руководителя //БИТ АКриштопов 2482
	//Если ЗначениеЗаполнено(РуководительИнициатора) Тогда 
	//	Виза = Справочники.бит_Визы.бит_БК_РуководительИнициатора;
	//	СтруктураОтбор = Новый Структура("Объект,Виза",ТекущийОбъект.Ссылка,Виза);
	//	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	//	Если Не НаборЗаписей.Количество() = 0 Тогда
	//		Если НЕ ЗначениеЗаполнено(НаборЗаписей[0].ФизическоеЛицо) Тогда 
	//			НаборЗаписей[0].ФизическоеЛицо = РуководительИнициатора;
	//		КонецЕсли;
	//	Иначе
	//		СтруктураПараметров = Новый Структура;
	//		СтруктураПараметров.Вставить("Виза",Виза);
	//		СтруктураПараметров.Вставить("ДатаЗаполнения", ТекущаяДата());
	//		СтруктураПараметров.Вставить("ВремяНаУстановку",Виза.ВремяНаУстановку);
	//		СтруктураПараметров.Вставить("ОбъектСвязи", РуководительИнициатора);
	//		СтруктураПараметров.Вставить("СтруктурноеПодразделение",Неопределено);
	//		
	//		бит_Визирование.ДобавитьВизу(НаборЗаписей,ТекущийОбъект.Ссылка,СтруктураПараметров)
	//	КонецЕсли;
	//КонецЕсли;
	
	Если НаборЗаписей.Модифицированность() Тогда 
		НаборЗаписей.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//Признак того что запись производится из тонкого или web клиента
	ТекущийОбъект.бит_БК_WEBКлиент = Истина;
	
	//{ bit_SVKushnirenko 29.03.2017 #2811
	//ИсходныйКод{
	//// + БИТ AMerkulov 2014-01-24 /  Универсальная заявка
	//бит_ИзмененВидОперации = Ложь;
	////+Сундукова 18.04.2016 №2395
	//Если не ЗначениеЗаполнено(ТекущийОбъект.бит_БК_ЦФО) и ЗначениеЗаполнено(ТекущийОбъект.цфо) тогда
	//	ТекущийОбъект.бит_БК_ЦФО = ТекущийОбъект.цфо;
	//КонецЕсли;
	////-Сундукова 18.04.2016 №2395
	//Если ТекущийОбъект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный
	//	ИЛИ ТекущийОбъект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный 
	//	ИЛИ ТекущийОбъект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный Тогда
	//	
	//	КоличествоУ = 0;
	//	КоличествоИнвест = 0;
	//	
	//	Для Каждого Строка Из Объект.БДДС Цикл
	//		
	//		Если Строка.Сценарий = Справочники.СценарииПланирования.Заявка_У Тогда
	//			КоличествоУ = КоличествоУ + 1;
	//		ИначеЕсли Строка.Сценарий = Справочники.СценарииПланирования.Заявка_Инвест Тогда
	//			КоличествоИнвест = КоличествоИнвест + 1;			
	//		КонецЕсли;
	//		
	//		Строка.ЦФО = ТекущийОбъект.бит_БК_ЦФО;
	//		
	//	КонецЦикла;
	//	
	//	Если ТекущийОбъект.БДДС.Количество() > 0 И КоличествоИнвест = ТекущийОбъект.БДДС.Количество() И ТекущийОбъект.ВидОперации <> Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный Тогда
	//		ТекущийОбъект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный;
	//		Сообщение = Новый СообщениеПользователю;
	//		Сообщение.Текст = "Вид операции изменен на ""Заявка(инвестиционный)""";
	//		Сообщение.Сообщить();
	//		бит_ИзмененВидОперации = Истина;
	//		
	//		ТекущийОбъект.Сценарий = Справочники.СценарииПланирования.Заявка_Инвест;
	//		ТекущийОбъект.НастройкаФормы = Справочники.бит_НастройкиФормВводаБюджета.ЗаявкаИнвестиционная;
	//		
	//		
	//	КонецЕсли;
	//	
	//	Если ТекущийОбъект.БДДС.Количество() > 0 И КоличествоУ = ТекущийОбъект.БДДС.Количество() И ТекущийОбъект.ВидОперации <> Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный Тогда
	//		ТекущийОбъект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный;
	//		Сообщение = Новый СообщениеПользователю;
	//		Сообщение.Текст = "Вид операции изменен на ""Заявка(операционный)""";
	//		Сообщение.Сообщить();
	//		бит_ИзмененВидОперации = Истина;
	//		
	//		ТекущийОбъект.Сценарий = Справочники.СценарииПланирования.Заявка_У;
	//		ТекущийОбъект.НастройкаФормы = Справочники.бит_НастройкиФормВводаБюджета.ЗаявкаОперационная;
	//		
	//		
	//	КонецЕсли;	
	//	
	//	
	//	Если ТекущийОбъект.ВидОперации <> Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный  
	//		И ТекущийОбъект.БДДС.Количество() > 0 И  КоличествоИнвест <> ТекущийОбъект.БДДС.Количество() И  КоличествоУ <> ТекущийОбъект.БДДС.Количество() Тогда
	//		
	//		ТекущийОбъект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный;
	//		Сообщение = Новый СообщениеПользователю;
	//		Сообщение.Текст = "Вид операции изменен на ""Заявка(универсальный)""";
	//		Сообщение.Сообщить();
	//		бит_ИзмененВидОперации = Истина;
	//		
	//		ТекущийОбъект.Сценарий = Неопределено;
	//		ТекущийОбъект.НастройкаФормы = Справочники.бит_НастройкиФормВводаБюджета.ЗаявкаУниверсальная;
	//		
	//		
	//	КонецЕсли;
	//	
	//КонецЕсли;
	//// - БИТ AMerkulov 	
	//
	//// BIT AMerkulov 01092014 ++
	//
	//Для Каждого Строка Из ТекущийОбъект.БДДС Цикл				
	//	Строка.бит_БК_НаименованиеОборудования = Строка.ОК_НоменклатураПроизв;//Строка.бит_БК_Расход.Наименование + " " + //БИТ АКриштопов 04072016 ++ №2482 				
	//КонецЦикла;
	//
	//// BIT AMerkulov 01092014 --
	//
	//
	//// BIT AMerkulov 10092015 ++
	//Если НЕ ЗначениеЗаполнено(ТекущийОбъект.НастройкаФормы) Тогда
	//	
	//	Если ТекущийОбъект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный Тогда 
	//		ТекущийОбъект.Сценарий = Неопределено;
	//		ТекущийОбъект.НастройкаФормы = Справочники.бит_НастройкиФормВводаБюджета.ЗаявкаУниверсальная;
	//	ИначеЕсли ТекущийОбъект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный Тогда
	//		ТекущийОбъект.Сценарий = Справочники.бит_СценарииБюджетирования.Заявка_У;
	//		ТекущийОбъект.НастройкаФормы = Справочники.бит_НастройкиФормВводаБюджета.ЗаявкаОперационная;			
	//	ИначеЕсли ТекущийОбъект.ВидОперации <> Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный  Тогда
	//		ТекущийОбъект.Сценарий = Справочники.бит_СценарииБюджетирования.Заявка_Инвест;
	//		ТекущийОбъект.НастройкаФормы = Справочники.бит_НастройкиФормВводаБюджета.ЗаявкаИнвестиционная;
	//	КонецЕсли;		
	//	
	//КонецЕсли;
	//// BIT AMerkulov 10092015 --	
	//
	//}ИсходныйКод
	//помечен на удаление код, активно изменяющий данные, которые в случае отказа, не отражаются на форме
	//} bit_SVKushnirenko 29.03.2017 #2811
	
	//БИТ НАГолубева 25.02.2016 ++
	ТекущийОбъект.ДополнительныеСвойства.Вставить("бит_БК_СтатусВручную", бит_БК_СтатусВручную);
	ТекущийОбъект.ДополнительныеСвойства.Вставить("мСтатусУстановленныйВручную", мСтатусУстановленныйВручную);
	бит_БК_СтатусВручную = Ложь;
	//БИТ НАГолубева 25.02.2016 ++
КонецПроцедуры

//bit_SVKushnirenko 28.12.2016 #2671.1
//Выявляет необходимость синхронизации данных в документе
//Возврат:
//Булево: Истина = нужна синхронизация; Ложь = синхронизация не нужна
// Параметры:
//парПредставлениеНесоответствий - СписокЗначений в котором возвращается описание несоответствий требуемой синхронизации
&НаСервере
Функция ЕстьНеобходимостьСинхронизации(парПредставлениеНесоответствий = Неопределено)
	
	Возврат Документы.бит_ФормаВводаБюджета.ЕстьНеобходимостьСинхронизации(
	Документы.бит_ФормаВводаБюджета.ПолучитьНастройкиСинхронизации(), 
	Объект, 
	парПредставлениеНесоответствий, 
	Ложь);
КонецФункции // ЕстьНеобходимостьСинхронизации()

//bit_SVKushnirenko 28.12.2016 #2671.1
//Выполняет синхронизацию реквизитов документа по настройке в макете "бит_КартаСинхронизацииБДДСвШапку"
Функция СинхронизироватьРеквизиты()
	
	Документы.бит_ФормаВводаБюджета.СинхронизацияПриемникИсточник(, Объект);
КонецФункции // СинхронизироватьРеквизиты()

//bit_SVKushnirenko 28.12.2016 #2671.1
//Обработчик оповещения немодального диалога подтверждения синхронизации
// Параметры:
//парРезультат - результат нажатия кнопки в далоге
//парПараметры - структура параметра оповещения
&НаКлиенте
Функция ПодтверждениеСинхронизации(парРезультат, парПараметры) Экспорт
	
	Если парРезультат = КодВозвратаДиалога.Да Тогда
		
		СинхронизироватьРеквизиты();
		рекСинхронизацияРеквизитовПроверкаПройдена = Истина;
		Записать(); //Инициируем повторную запись
	КонецЕсли;	
КонецФункции // ПодтверждениеСинхронизации()

//{bit_SVKushnirenko 14.04.2017 #2811
&НаКлиенте
Функция ПостроениеВидаОперацииНаОснованииДанныхСтатейТчБДДС()
	//Исправление ошибок  прошлых лет (даты и авторы сохранены внутри этого блока для сведения, логика переработана для контекста клиента и исключены повторы вызова методов "через точку", для оптимизации)
	пКоличествоСтрокБДДС = Объект.БДДС.Количество();
	
	// + БИТ AMerkulov 2014-01-24 /  Универсальная заявка
	бит_ИзмененВидОперации = Ложь;
	//+Сундукова 18.04.2016 №2395
	Если не ЗначениеЗаполнено(Объект.бит_БК_ЦФО) и ЗначениеЗаполнено(Объект.ЦФО) Тогда 
																				 	
		Объект.бит_БК_ЦФО = Объект.цфо;
	КонецЕсли;
	//-Сундукова 18.04.2016 №2395
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный") ИЛИ
		Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный") ИЛИ
		Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный") Тогда
		
		КоличествоУ = 0;
		КоличествоИнвест = 0;
		
		Для Каждого Строка Из Объект.БДДС Цикл
			
			Если Строка.Сценарий = ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_У") Тогда 
																			 	
				КоличествоУ = КоличествоУ + 1;
			ИначеЕсли Строка.Сценарий = ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_Инвест") Тогда 
																					   	
				КоличествоИнвест = КоличествоИнвест + 1;			
			КонецЕсли;
			
			//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Начало 20181106 (#3086)
			//ЦФО теперь указывется в табличной части
			////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-13 (#2862)
			////Учитываем заблокированные ФК поля
			////Строка.ЦФО = Объект.бит_БК_ЦФО;
			////Заменено на:
			//Если Найти(Строка.бит_БК_БлокировкиПолейФинансовогоКонтроллера,"ЦФО;") = 0 И
			//	 Строка.ЦФО <> Объект.бит_БК_ЦФО
			//Тогда	
			//	Строка.ЦФО = Объект.бит_БК_ЦФО;
			//КонецЕсли;
			////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-13 (#2862)
			//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Конец 20181106 (#3086)
		КонецЦикла;
		
		Если пКоличествоСтрокБДДС > 0 И КоличествоИнвест = пКоличествоСтрокБДДС И 
			Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный") Тогда
			
			Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный");
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Вид операции изменен на ""Заявка(инвестиционный)""";
			Сообщение.Сообщить();
			бит_ИзмененВидОперации = Истина;
			
			Объект.Сценарий = ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_Инвест");
			Объект.НастройкаФормы = ПредопределенноеЗначение("Справочник.бит_НастройкиФормВводаБюджета.ЗаявкаИнвестиционная");
		КонецЕсли;
		
		Если пКоличествоСтрокБДДС > 0 И КоличествоУ = пКоличествоСтрокБДДС И 
			Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный") Тогда
			
			Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный");
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Вид операции изменен на ""Заявка(операционный)""";
			Сообщение.Сообщить();
			бит_ИзмененВидОперации = Истина;
			
			Объект.Сценарий = ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_У");
			Объект.НастройкаФормы = ПредопределенноеЗначение("Справочник.бит_НастройкиФормВводаБюджета.ЗаявкаОперационная");
		КонецЕсли;	
		
		Если Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный")  
			И пКоличествоСтрокБДДС > 0 И  КоличествоИнвест <> пКоличествоСтрокБДДС И  
			КоличествоУ <> Объект.БДДС.Количество() Тогда
			
			Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный");
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Вид операции изменен на ""Заявка(универсальный)""";
			Сообщение.Сообщить();
			бит_ИзмененВидОперации = Истина;
			
			Объект.Сценарий = Неопределено;
			Объект.НастройкаФормы = ПредопределенноеЗначение("Справочник.бит_НастройкиФормВводаБюджета.ЗаявкаУниверсальная");
		КонецЕсли;
	КонецЕсли;
	// - БИТ AMerkulov 	
	
	//{ bit SVKushnirenko Bit 14.03.2017 #2745
	Если бит_ИзмененВидОперации Тогда  
		
		Элементы.БДДСПечатьОтчетПоОплате.Доступность = ДоступностьКмдПечатьОтчетПоОплате(Объект.ВидОперации);
	КонецЕсли;
	//} bit SVKushnirenko Bit 14.03.2017 #2745
		
	// BIT AMerkulov 01092014 ++
	Для Каждого Строка Из Объект.БДДС Цикл
		
		Строка.бит_БК_НаименованиеОборудования = Строка.ОК_НоменклатураПроизв;//Строка.бит_БК_Расход.Наименование + " " + //БИТ АКриштопов 04072016 ++ №2482 				
	КонецЦикла;
	// BIT AMerkulov 01092014 --
	
	// BIT AMerkulov 10092015 ++
	Если НЕ ЗначениеЗаполнено(Объект.НастройкаФормы) Тогда
		
		Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный") Тогда 
			
			Объект.Сценарий = Неопределено;
			Объект.НастройкаФормы = ПредопределенноеЗначение("Справочник.бит_НастройкиФормВводаБюджета.ЗаявкаУниверсальная");
		ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный") Тогда 
																														
			Объект.Сценарий = ПредопределенноеЗначение("Справочник.бит_СценарииБюджетирования.Заявка_У");
			Объект.НастройкаФормы = ПредопределенноеЗначение("Справочник.бит_НастройкиФормВводаБюджета.ЗаявкаОперационная");
		ИначеЕсли Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный")  Тогда 
																															
			Объект.Сценарий = ПредопределенноеЗначение("Справочник.бит_СценарииБюджетирования.Заявка_Инвест");
			Объект.НастройкаФормы = ПредопределенноеЗначение("Справочник.бит_НастройкиФормВводаБюджета.ЗаявкаИнвестиционная");
		КонецЕсли;		
	КонецЕсли;
	// BIT AMerkulov 10092015 --	
	
	УстановитьЗаголовокФормыДокумента();
	
	//{ bit SVKushnirenko Bit 01.06.2017 #2759
	ДоступностьЦелиПриобретенияОборудования();
	//} bit SVKushnirenko Bit 01.06.2017 #2759
КонецФункции // ПостроениеВидаОперацииНаОснованииДанныхСтатейТчБДДС() }bit_SVKushnirenko 14.04.2017 #2811

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//{ bit SVKushnirenko Bit 13.06.2017 #2811
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда  
		
		Для каждого пСтрока Из Объект.БДДС Цикл
			
			//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Начало 20181106 (#3086)
			ПараметрыПроверки = Новый Структура("ЦФО, бит_БК_ВалютаДоговора", "Функция", "Валюта");
			Для Каждого ПараметрПроверки Из ПараметрыПроверки Цикл
				Если ЗначениеЗаполнено(пСтрока[ПараметрПроверки.Ключ]) Тогда
					Продолжить;
				КонецЕсли;	
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
													ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", , ПараметрПроверки.Значение, пСтрока.НомерСтроки, "Данные бюджета"), 
													, 
													"БДДС[" + Формат(пСтрока.НомерСтроки - 1, "ЧН=0; ЧГ=") + "]." + ПараметрПроверки.Ключ, 
													"Объект", 
													Отказ);
			КонецЦикла;
			//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Конец 20181106 (#3086)
			
			Если НЕ ЗначениеДоступностиПроект(Объект.ВидОперации, пСтрока.СтатьяОборотов) Тогда  
				
				пСтрока.Проект = Неопределено;
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	//} bit SVKushnirenko Bit 13.06.2017 #2811
	
	//+CБ Пискунова #2691
	Если 	ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения и Объект.СБ_ПроцессЗапущен Тогда
		Результат = Вопрос("После отмены проведения будет очищен алгоритм. Продолжить?",РежимДиалогаВопрос.ДаНет);
		Если  Результат = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	//-CБ Пискунова #2691
	
	//БИТ НАГолубева 25.06.2016 ++
	//// Из тонкого проводить нельзя
	//Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение ИЛИ ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда 
	//	Предупреждение("Вы не можете изменить заявку со статусом <На согласовании>(<Согласовано>)."+ Символы.ПС+"Обратитесь к <Финансовому контролеру>", 5, "Документ не записан");
	//Отказ = Истина;
	//КонецЕсли;
	//БИТ НАГолубева 25.06.2016 --
	
	//{ bit_SVKushnirenko 16.01.2017 #2671.дпн
	//ИсходныйКод{
	//// ++ BIT Amerkulov 25042014 / Заполнение реквизитов ТЧ из шапки 
	//Для Каждого Строка Из Объект.БДДС Цикл
	//	
	//	Строка.бит_БК_Организация 				= Объект.бит_БК_Организация;
	//	Строка.бит_БК_ПредпологаемыйКонтрагент 	= Объект.бит_БК_ПредпологаемыйКонтрагент;
	//	Строка.бит_БК_ВалютаДоговора		 	= Объект.бит_БК_ВалютаДокумента;
	//	Строка.бит_БК_ФормаОплаты		 		= Объект.ОК_БК_ФормаОплаты;    
	//	Строка.бит_БК_СуммаПредоплаты		 	= Объект.ОК_РазмерПредоплаты;		
	//КонецЦикла;	
	//// --	
	//}ИсходныйКод
	ЗаполнениеЗначенийТЧизДанныхИнициатора(, Истина);
	//} bit_SVKushnirenko 16.01.2017 #2671.дпн
	
	//{ bit_SVKushnirenko 28.12.2016 #2671.1
	пПредставлениеНесоответствий = "";
	Если Объект.Дата < Дата("20170101000000") И 
		ЕстьНеобходимостьСинхронизации(пПредставлениеНесоответствий)  Тогда //проверка синхронизации данных документа
		
		Если ЗначениеЗаполнено(Объект.Ссылка) И
			НЕ рекСинхронизацияРеквизитовПроверкаПройдена Тогда //документ сохранен и не пройдена необходимая синхронизация
			
			пОповещение = Новый ОписаниеОповещения("ПодтверждениеСинхронизации", ЭтотОбъект);
			
			ПоказатьВопрос(пОповещение,
			пПредставлениеНесоответствий + Символы.ПС + "Выполнить синхронизацию данных?",
			РежимДиалогаВопрос.ДаНет,
			40, // таймаут в секундах
			КодВозвратаДиалога.Нет, //кнопка по умолчанию
			"Внимание!");
			
			Отказ = Истина;
		Иначе//безусловная синхронизация
			
			СинхронизироватьРеквизиты();
		КонецЕсли;
	Иначе//безусловная синхронизация
		
		СинхронизироватьРеквизиты();
	КонецЕсли;
	рекСинхронизацияРеквизитовПроверкаПройдена = Ложь;
	//} bit_SVKushnirenko 28.12.2016 #2671.1

	//{ bit SVKushnirenko Bit 13.06.2017 #2759
	Если рекПроверкаЗаполнения_бит_БК_ЦельПриобретенияОборудования И 
		ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение И
		СокрЛП(Объект.бит_БК_ЦельПриобретенияОборудования) = "" Тогда  //Вывод предупреждения
		
		пСписокСтатей = СписокСтатейОборотовСОборудованиеДа(Объект.БДДС);
		
		рекТекстСообщенияПоОборудованию = 
		"Не заполнен реквизит “Цель приобретения оборудования”. 
		|Если хотя бы одна единица из оборудования по Статьям: " + Символы.ПС + 
		пСписокСтатей + Символы.ПС +
		"приобретается взамен старого оборудования, то следует выбрать значение ""Взамен старого""";
		
		ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Запись; //Принудительно выставляем запись, даже если было проведение
		ПодключитьОбработчикОжидания("ОбработчикВыводаСообщенияПоОборудованию", 1.5, Истина);
		
		Отказ = Истина;
	КонецЕсли;
	//Изменено после переноса в Предраб!
	//} bit SVKushnirenko Bit 13.06.2017 #2759
	
	//{ bit SVKushnirenko Bit 29.03.2017 #2811
	ПостроениеВидаОперацииНаОснованииДанныхСтатейТчБДДС();
	УстановитьПредставлениеПериода();
	//} bit SVKushnirenko Bit 29.03.2017 #2811
	
	//{ bit SVKushnirenko Bit 06.06.2017 #2811
	//Очистка значений поля "Проект", которые не должны заполняться по условиям заполнения документа
	Для Каждого пТекущаяСтрока Из Объект.БДДС Цикл
		
		Если НЕ ЗначениеДоступностиПроект(Объект.ВидОперации, пТекущаяСтрока.СтатьяОборотов) Тогда  
			
			пТекущаяСтрока.Проект = Неопределено; //очищаем поле, которое не должно быть доступно
		КонецЕсли;
	КонецЦикла;
	//} bit SVKushnirenko Bit 06.06.2017 #2811
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-06-29 (#2850)
	////{ bit SVKushnirenko Bit 29.05.2017 #2759
	//ДоступностьЦелиПриобретенияОборудования(Ложь); //принудительно выключаем отображение цели приобретения (попытка обхода ошибки платформы)
	////} bit SVKushnirenko Bit 29.05.2017 #2759
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-06-29 (#2850)
	
	//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Начало 20181106 (#3086)
	Если Объект.БДДС.Количество() > 0 Тогда
		Объект.бит_БК_ЦФО = Объект.БДДС[0].ЦФО;
		Объект.бит_БК_ВалютаДокумента = Объект.БДДС[0].бит_БК_ВалютаДоговора;
		Объект.бит_БК_КурсДокумента = Объект.БДДС[0].бит_БК_Курс;
		Объект.бит_БК_КратностьДокумента = Объект.БДДС[0].бит_БК_Кратность;
	КонецЕсли;	
	//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Конец 20181106 (#3086)
	
КонецПроцедуры
 
//{bit_SVKushnirenko 25.04.2017 #2759
//Обработчик вывода сообщения, которое может долго не визуализироваться на форме из-за транзакции записи/проведения
&НаКлиенте
Функция ОбработчикВыводаСообщенияПоОборудованию() Экспорт

	пОповещение = Новый ОписаниеОповещения("ОбработчикПредупреждения", ЭтотОбъект);
	
	ПоказатьВопрос(пОповещение,
	СокрЛП(рекТекстСообщенияПоОборудованию),
	РежимДиалогаВопрос.ОК,
	40, // таймаут в секундах
	КодВозвратаДиалога.ОК, //кнопка по умолчанию
	"Внимание!");
КонецФункции // ОбработчикВыводаСообщенияПоОборудованию() }bit_SVKushnirenko 25.04.2017 #2759

//{bit_SVKushnirenko 21.03.2017 #2759
//Возвращает представление списка статей оборотов у которых в дополнительных свойствах "Обороудование = Да"
// Параметры:
//парТаблицаБДДС - таблица с колонкой "СтатьяОборотов" из данных БДДС документа
&НаСервереБезКонтекста
Функция СписокСтатейОборотовСОборудованиеДа(знач парТаблицаБДДС)

	Возврат Документы.бит_ФормаВводаБюджета.СтрСписокСтатейОборотовСПризнакОборудование(парТаблицаБДДС.Выгрузить().ВыгрузитьКОлонку("СтатьяОборотов"));
КонецФункции // СписокСтатейОборотовСОборудованиеДа() }bit_SVKushnirenko 21.03.2017 #2759 

//{bit_SVKushnirenko 21.03.2017 #2759
&НаКлиенте
Функция ОбработчикПредупреждения(парРезультат, парПараметры) Экспорт
	
	ДоступностьЦелиПриобретенияОборудования(); //вызов восстановления доступности (обход ошибки платформы)
	ЭтаФорма.ОбновитьОтображениеДанных();
КонецФункции // ОбработчикПредупреждения() }bit_SVKushnirenko 21.03.2017 #2759 

//ОК Калинин 260213
&НаКлиенте
Процедура бит_ПоискОстаткаПоБюджету(Команда)  
	бит_ФормаВводаБюджетаКлиент.бит_ПоискОстаткаПоБюджету(Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоЗаявке(Команда)
	#Если не ВебКлиент  тогда
		//ИмяФайла = ПолучитьИмяВременногоФайла("erf");	
		
		// BIT AMerkulov 12022015 ++		
		//Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный") Тогда
		//	Отчет_=бит_ФормаВводаБюджетаВызовСервера.ПолучитьВнешнийОтчет("Отчет по заявке (для тонкого клиента) инвест");  	
		//Иначе
		Отчет_=бит_ФормаВводаБюджетаВызовСервера.ПолучитьВнешнийОтчет("Отчет по заявке (для тонкого клиента)");  	
		//КонецЕсли;
		// BIT AMerkulov 12022015 --	
		Если ЗначениеЗаполнено(Отчет_) тогда         
			//Отчет_.Записать(ИмяФайла);	
			//АдресХранилища = "";
			////ИмяФайла="\\tsclient\G\mk\ОК_ОтчетПоЗаявке_Упр форма.erf";		
			//Если ПоместитьФайл(АдресХранилища, ИмяФайла, , Ложь) тогда
			//	ИмяОбработки = ПодключитьВнешнийОтчет(АдресХранилища); 			
			ИмяОбработки = ДополнительныеОтчетыИОбработкиВызовСервера.ПодключитьВнешнююОбработку(Отчет_);
			Если ЗначениеЗаполнено(ИмяОбработки) Тогда 
				Форма=ПолучитьФорму("ВнешнийОтчет."+ ИмяОбработки +".Форма.ФормаОтчетаУправляемая");						
				Форма.УстановитьПараметры(ОБъект.ссылка.УникальныйИдентификатор());
				Форма.ОбновитьОтчет();	
				Форма.Открыть();			
			КонецЕсли;
			//КонецЕсли;
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры
//} bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
//ОК Калинин 

&НаСервере 
Процедура ВыполнитьПроцедуруМодуля(имяПроцедуры,параметры=неопределено)	
	ДокументОбъект = ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект."+строка(объект.Ссылка.Метаданные().Имя)));
	выполнить("ДокументОбъект."+имяПроцедуры);
	ЗначениеВДанныеФормы(ДокументОбъект,Объект);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-03 (#3393)
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("ЗакрытьЗаявку")
	   И ДокументОбъект.ДополнительныеСвойства.ЗакрытьЗаявку
	Тогда 
		мКэшЗначений.Вставить("ЗакрытьЗаявку", Истина);
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-03 (#3393)
	
	//Модифицированность=истина;  
	
	//{ bit_SVKushnirenko 20.12.2016 #2669
	////ИсходныйКод{
	////БИТ НАГолубева 25.02.2016 ++
	////В проведенном документе остатки по бюджету не пересчитываем.
	//Если НЕ Объект.Проведен Тогда
	//	
	//	// // BIT AMErkulov 29-12-2015 ++
	//	//+Сундукова 28.03.2016
	//	бит_ФормаВводаБюджетаВызовСервера.ОбновитьДанныеПоОстаткуБюджета(объект);
	//	//-Сундукова 28.03.2016
	//	// BIT AMErkulov 29-12-2015 --
	//КонецЕсли;
	////БИТ НАГолубева 25.02.2016 ++
	//}ИсходныйКод
	//
	//вызов катастрофически снижает скорость работы системы и приводит к 
	//расчету остатков даже тогда, когда в этом нет логической необходимости
	//} bit_SVKushnirenko 20.12.2016 #2669
КонецПроцедуры

&НаСервере
Функция ПолучитьИтог(Колонка)
	ДокументОбъект = ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект."+строка(объект.Ссылка.Метаданные().Имя)));
	возврат ДокументОбъект.БДДС.Итог("Сумма");		
КонецФункции

&НаКлиенте
//{ bit_SVKushnirenko 27.12.2016 #2669
//ИсходныйКод{
//Процедура БДДСПриИзменении(Элемент)
//}ИсходныйКод
Процедура БДДСПриИзменении(Элемент = Неопределено)
	//} bit_SVKushnirenko 27.12.2016 #2669
	
	
	//СуммаЗаявки= ПолучитьИтог("Сумма");  
	
	//ОбновитьОЦР();
	
	//{ bit_SVKushnirenko 16.01.2017 #2671.дпн
	//ИсходныйКод{
	//ВыполнитьПроцедуруМодуля("ОпределитьНеобходимостьДоговора()");
	//}ИсходныйКод
	пРешениеОНеобходимостиДоговора = Объект.БДДС.Итог("бит_БК_СуммаБезНДС") > 100000;
	Если пРешениеОНеобходимостиДоговора Тогда //принудительно заполняем решение и данные ТЧ 
		
		Объект.ОК_НеобходимостьДоговора = пРешениеОНеобходимостиДоговора; //перенесен код из модуля для предотвращения ресурсоемкого вызова
		ЗаполнениеЗначенийТЧизДанныхИнициатора("бит_БК_НуженДоговор;"); //Синхронизируем возможное новое значение шапки и табличной части
	КонецЕсли;
	УстановитьДоступностьНеобходимостиДоговора();
	//} bit_SVKushnirenko 16.01.2017 #2671.дпн
	
	//{ bit_SVKushnirenko 27.12.2016 #2669 
	Если Элемент <>  Неопределено Тогда
		
		ОбновитьДанныеПоОстаткуБюджета(); //Оптимизация двойных пересчетов остатка при открытии формы
	КонецЕсли;
	//} bit_SVKushnirenko 27.12.2016 #2669
	
	//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Начало 20181106 (#3086)
	//теперь валюта указывается в строке
	//// + БИТ AMerkulov 2014-10-17 
	//Если ТипЗнч(Элемент) = Тип("ТаблицаФормы") Тогда
	//	//БИТ АКриштопов ++ 2482
	//	Попытка
	//		Элемент.ТекущиеДанные.бит_БК_ВалютаДоговора = Объект.бит_БК_ВалютаДокумента;
	//		Элемент.ТекущиеДанные.бит_БК_Курс     = Объект.бит_БК_КурсДокумента;
	//		Элемент.ТекущиеДанные.бит_БК_Кратность = Объект.бит_БК_КратностьДокумента;		
	//	Исключение
	//	КонецПопытки;
	//	//БИТ АКриштопов -- 2482
	//КонецЕсли;
	//// - БИТ AMerkulov 2014-10-17 	
	//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Конец 20181106 (#3086) 	
	
	//+СБ Пискунова 13.01.2017 ТЗ #2691 
	Для Каждого ДанныеБДДС Из Объект.БДДС Цикл
		
		ДанныеБДДС.бит_БК_СуммаПредоплаты = Объект.ОК_РазмерПредоплаты;
		ДанныеБДДС.СБ_СуммаПредоплаты = ДанныеБДДС.бит_БК_СуммаБезНДС * Объект.ОК_РазмерПредоплаты/100;						
		
	КонецЦикла;
	Объект.СБ_СуммаПредоплатыИтого  = Объект.БДДС.Итог("СБ_СуммаПредоплаты");
	//-СБ Пискунова 13.01.2017 ТЗ #2691

КонецПроцедуры

&НаСервере 
Процедура ЗначенияВРеквизитыФормы(РеквизитыЗначение)	
	
	Для каждого рекзнч из РеквизитыЗначение
		Цикл
		ЗначениеВРеквизитФормы(рекзнч.Значение,рекзнч.Ключ);			
	КонецЦикла;
	
КонецПроцедуры

//{bit_SVKushnirenko 20.06.2017 #2759
//Возвращает структуру значений, полученых в структуре, путем построчного вычисления по формуле из путей к полям данных
// Параметры:
//Источник - объект-источник, через который в раннем коде построены шаблоны получения данных
//парПутиКПолям - структура, где значение - путь к получению данных через источник
&НаСервереБезКонтекста
Функция ПолучитьЗначенияПоИсточникуНаСервере(Источник, парПутиКПолям)

	пРезультат = Новый Структура();
	Для каждого пЭлементПутей из парПутиКПолям Цикл	
		
		пРезультат.Вставить(пЭлементПутей.Ключ, Вычислить(пЭлементПутей.Значение));
	КонецЦикла;
	
	Возврат пРезультат;
КонецФункции // ПолучитьЗначенияПоИсточникуНаСервере() }bit_SVKushnirenko 20.06.2017 #2759  

//{ bit_SVKushnirenko 20.06.2017 #2759
//ИсходныйКод{
//&НаСервере 
//}ИсходныйКод

&НаКлиенте
//} bit_SVKushnirenko 20.06.2017 #2759
Процедура ЗначенияИзИсточникаВРеквизитыФормы(Источник,ПутиКПолям)	
	
	//{ bit_SVKushnirenko 20.06.2017 #2759
	//ИсходныйКод{
	////РеквизитыЗначение=новый Структура();
	//для каждого стр из ПутиКПолям
	//	Цикл	
	//	//РеквизитыЗначение.Вставить(стр.ключ,вычислить(стр.Значение));	
	//	Этаформа[стр.ключ]=вычислить(стр.Значение);
	//КонецЦикла;
	////ЗначенияВРеквизитыФормы(РеквизитыЗначение);	
	//}ИсходныйКод
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ПолучитьЗначенияПоИсточникуНаСервере(Источник, ПутиКПолям));
	//} bit_SVKushnirenko 20.06.2017 #2759	
КонецПроцедуры	

&НаКлиенте
Процедура Объектбит_БК_ИнициаторПриИзменении(Элемент)
	ПутиКПолям=Новый Соответствие;
	ПутиКПолям.Вставить("Объект_бит_БК_Инициатор_ЦФО","Источник.ЦФО");
	ПутиКПолям.Вставить("Объект_бит_БК_Инициатор_ОбъектСтроительства","Источник.ОбъектСтроительства");
	ПутиКПолям.Вставить("Объект_бит_БК_Инициатор_Должность","Источник.Должность");
	ПутиКПолям.Вставить("Объект_бит_БК_Инициатор_Email","Источник.Email");
	ПутиКПолям.Вставить("Объект_бит_БК_Инициатор_Телефон","Источник.Телефон");
	ЗначенияИзИсточникаВРеквизитыФормы(Объект.бит_БК_Инициатор,ПутиКПолям);
	 	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
	//// BIT AMerkulov 15092014 ++	
	//УстановитьДоступностьКнопкиЗаписиТелефона();	
	//// BIT AMerkulov 15092014 --
	//Заменено на:
	Элементы.Кнопка2.Доступность = УстановитьДоступностьКнопкиЗаписиТелефона(Объект.бит_БК_Инициатор);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)
	
	
КонецПроцедуры

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
//// BIT AMerkulov 15092014 ++	
//&НаСервере
//Процедура УстановитьДоступностьКнопкиЗаписиТелефона()
//	Если Объект.бит_БК_Инициатор = ПараметрыСеанса.бит_БК_ТекущийИнициатор Тогда
//		Элементы.Кнопка2.Доступность = Истина;
//	Иначе
//		Элементы.Кнопка2.Доступность = Ложь;		
//	КонецЕсли;	
//КонецПроцедуры
//// BIT AMerkulov 15092014 --
//Заменено на:
&НаСервереБезКонтекста
Функция УстановитьДоступностьКнопкиЗаписиТелефона(Инициатор)
	Возврат Инициатор = ПараметрыСеанса.бит_БК_ТекущийИнициатор;
КонецФункции
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)

&НаКлиенте
Процедура ОЦРНаименованиеПриИзменении(Элемент)
	ПутиКПолям=Новый Соответствие;
	ПутиКПолям.Вставить("Объект_ОЦР_ЦФО","Источник.ЦФО");
	ПутиКПолям.Вставить("Объект_ОЦР_ОбъектСтроительства","Источник.ОбъектСтроительства");
	ПутиКПолям.Вставить("Объект_ОЦР_Должность","Источник.Должность");
	ПутиКПолям.Вставить("Объект_ОЦР_Email","Источник.Email");
	ПутиКПолям.Вставить("Объект_ОЦР_Телефон","Источник.Телефон");
	ЗначенияИзИсточникаВРеквизитыФормы(Объект.ОК_ОЦР,ПутиКПолям);
КонецПроцедуры

//{bit_SVKushnirenko 21.03.2017 #2596
//Получает значение бюджетодержателя по данным регистра ОЦР
// Параметры:
//парТЧОтбора - таблица с отбором по измерениям: СтатьяОборотов, Аналитика_2, ЦФО
&НаСервереБезКонтекста
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-17 (#2866)
//Функция ПолучитьБюджетодержателейПоДаннымАналитик(парТЧОтбора)
//Заменено на:
Функция ПолучитьБюджетодержателейПоДаннымАналитик(парТЧОтбора,ФВБСсылка)
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-17 (#2866)
	
	пЗапрос = Новый Запрос;

	//пЗапрос.Текст = 
	//"ВЫБРАТЬ
	//|	ВЫРАЗИТЬ(бит_УстановленныеВизы.ФизическоеЛицо КАК Справочник.бит_БК_Инициаторы).Пользователь КАК Пользователь
	//|ИЗ
	//|	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы
	//|ГДЕ
	//|	бит_УстановленныеВизы.Объект = &пзСсылка
	//|	И бит_УстановленныеВизы.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.бит_БК_Бюджетодержатель)";
	//
	//пЗапрос.УстановитьПараметр("пзСсылка", парСсылка);
	пСтатусПривилегРежима = ПривилегированныйРежим();
	УстановитьПривилегированныйРежим(Истина); 
	
	пЗапрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	пзТЧОтбора.СтатьяОборотов,
	|	пзТЧОтбора.Аналитика_2,
	|	пзТЧОтбора.ЦФО
	|ПОМЕСТИТЬ втТЧОтбор
	|ИЗ
	|	&пзТЧОтбора КАК пзТЧОтбора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-17 (#2866)
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//Заменено на:
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	
	|	ЕСТЬNULL(ВЫРАЗИТЬ(бит_УстановленныеВизы.ФизическоеЛицо КАК Справочник.бит_БК_Инициаторы).Пользователь, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК Пользователь
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-02-19 (#2992)
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-14 (#2946)	
	//|	,ЛОЖЬ КАК Заместитель
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-14 (#2946)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-02-19 (#2992)
	|ПОМЕСТИТЬ ИтоговаяТаблица
	|ИЗ
	|	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы
	|ГДЕ
	|	бит_УстановленныеВизы.Объект = &Объект
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-11 (#2884)
	//|	И бит_УстановленныеВизы.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.бит_БК_Бюджетодержатель)
	//Заменено на
	|	И (бит_УстановленныеВизы.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.бит_БК_Бюджетодержатель)
	|	ИЛИ бит_УстановленныеВизы.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.СБ_ОЦР))
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-11 (#2884)
	|   И ЕСТЬNULL(ВЫРАЗИТЬ(бит_УстановленныеВизы.ФизическоеЛицо КАК Справочник.бит_БК_Инициаторы).Пользователь, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))<> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-14 (#2946)	
	//|ОБЪЕДИНИТЬ ВСЕ
	//Заменено на:
	|ОБЪЕДИНИТЬ
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-14 (#2946)
	|ВЫБРАТЬ
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-17 (#2866)
	|	ОК_БК_ОтветственныеЗаЦентрРезультата.Инициатор.Пользователь КАК Пользователь
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-02-19 (#2992)
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-14 (#2946)	
	//|	,ЛОЖЬ
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-14 (#2946)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-02-19 (#2992)
	|ИЗ
	|	втТЧОтбор КАК втТЧОтбор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОК_БК_ОтветственныеЗаЦентрРезультата КАК ОК_БК_ОтветственныеЗаЦентрРезультата
	|		ПО втТЧОтбор.ЦФО = ОК_БК_ОтветственныеЗаЦентрРезультата.ЦФО
	|			И втТЧОтбор.Аналитика_2 = ОК_БК_ОтветственныеЗаЦентрРезультата.ОбъектСтроительства
	|			И втТЧОтбор.СтатьяОборотов = ОК_БК_ОтветственныеЗаЦентрРезультата.СтатьяОборотов
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-02-19 (#2992)
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-14 (#2946)	
	//|
	//|ОБЪЕДИНИТЬ
	//|
	//|ВЫБРАТЬ
	//|	бит_ПраваУстановкиВиз.Пользователь,
	//|	ИСТИНА
	//|ИЗ
	//|ГДЕ
	//|	(бит_ПраваУстановкиВиз.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.СБ_ОЦР)
	//|			ИЛИ бит_ПраваУстановкиВиз.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.бит_БК_Бюджетодержатель))
	//|	И бит_ПраваУстановкиВиз.Замещаемый <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	///ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-14 (#2946)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-02-19 (#2992)
	|;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-17 (#2866)
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговаяТаблица.Пользователь
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-02-19 (#2992)
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-14 (#2946)	
	//|	,МАКСИМУМ(ИтоговаяТаблица.Заместитель) КАК Заместитель
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-14 (#2946)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-02-19 (#2992)
	|ИЗ
	|	ИтоговаяТаблица КАК ИтоговаяТаблица
	|
	|СГРУППИРОВАТЬ ПО
	|ИтоговаяТаблица.Пользователь
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-02-19 (#2992)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	бит_НазначенныеЗаместители.Заместитель
	|ИЗ
	|	ИтоговаяТаблица КАК ИтоговаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_НазначенныеЗаместители КАК бит_НазначенныеЗаместители
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_ГруппыВиз.ВизыГруппы КАК бит_ГруппыВизВизыГруппы
	|			ПО бит_НазначенныеЗаместители.Виза = бит_ГруппыВизВизыГруппы.Ссылка
	|				И (бит_ГруппыВизВизыГруппы.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.бит_БК_Бюджетодержатель)
	|					ИЛИ бит_ГруппыВизВизыГруппы.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.СБ_ОЦР))
	|		ПО ИтоговаяТаблица.Пользователь = бит_НазначенныеЗаместители.Пользователь
	|			И (бит_НазначенныеЗаместители.ДатаНачала <= &ТекДата)
	|			И (бит_НазначенныеЗаместители.ДатаОкончания >= &ТекДата)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА бит_ГруппыВизВизыГруппы.Виза ЕСТЬ NULL
	|				ТОГДА бит_НазначенныеЗаместители.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.бит_БК_Бюджетодержатель)
	|						ИЛИ бит_НазначенныеЗаместители.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.СБ_ОЦР)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаместителиЗаместителей.Заместитель
	|ИЗ
	|	ИтоговаяТаблица КАК ИтоговаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_НазначенныеЗаместители КАК бит_НазначенныеЗаместители
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_ГруппыВиз.ВизыГруппы КАК бит_ГруппыВизВизыГруппы
	|			ПО бит_НазначенныеЗаместители.Виза = бит_ГруппыВизВизыГруппы.Ссылка
	|				И (бит_ГруппыВизВизыГруппы.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.бит_БК_Бюджетодержатель)
	|					ИЛИ бит_ГруппыВизВизыГруппы.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.СБ_ОЦР))
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_НазначенныеЗаместители КАК ЗаместителиЗаместителей
	|			ПО бит_НазначенныеЗаместители.Виза = ЗаместителиЗаместителей.Виза
	|				И бит_НазначенныеЗаместители.Заместитель = ЗаместителиЗаместителей.Пользователь
	|				И (ЗаместителиЗаместителей.ДатаОкончания >= &ТекДата)
	|				И (ЗаместителиЗаместителей.ДатаНачала <= &ТекДата)
	|		ПО ИтоговаяТаблица.Пользователь = бит_НазначенныеЗаместители.Пользователь
	|			И (бит_НазначенныеЗаместители.ДатаНачала <= &ТекДата)
	|			И (бит_НазначенныеЗаместители.ДатаОкончания >= &ТекДата)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА бит_ГруппыВизВизыГруппы.Виза ЕСТЬ NULL
	|				ТОГДА бит_НазначенныеЗаместители.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.бит_БК_Бюджетодержатель)
	|						ИЛИ бит_НазначенныеЗаместители.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.СБ_ОЦР)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ	
	|
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-02-19 (#2992)
	|;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-17 (#2866)
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втТЧОтбор";
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-17 (#2866)
	пЗапрос.УстановитьПараметр("Объект"	,	ФВБСсылка);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-17 (#2866)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-02-19 (#2992)
	пЗапрос.УстановитьПараметр("ТекДата"	,	НачалоДня(ТекущаяДата()));
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-02-19 (#2992)
	
	пЗапрос.УстановитьПараметр("пзТЧОтбора", парТЧОтбора);
	пТЗРез = пЗапрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(пСтатусПривилегРежима);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-14 (#2946)	
	//Если пТЗРез.Количество() = 0 Тогда  
	//	
	//	Возврат Новый Массив;
	//Иначе
	//	
	//	Возврат пТЗРез.ВыгрузитьКолонку("Пользователь");
	//КонецЕсли;
	Возврат пТЗРез;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-14 (#2946)
КонецФункции // ПолучитьБюджетодержателейПоДаннымАналитик() }bit_SVKushnirenko 21.03.2017 #2596 

//bit_SVKushnirenko 27.12.2016 #2671.1
// Выполняет получение значения ОК_ОЦР без преобразования контекста в объект
&НаСервереБезКонтекста
Функция ЗаполнитьОЦР(парЦФО, парСтатьяОборотов, парАналитика_2, парСсылка)
	
	пФизЛицо = Документы.бит_ФормаВводаБюджета.ЗаполнитьОЦР(парЦФО, парСтатьяОборотов, парАналитика_2);
	Если ЗначениеЗаполнено(пФизЛицо) Тогда 
		
		Документы.бит_ФормаВводаБюджета.УстановитьЛицоБюджетодержателя(парСсылка, пФизЛицо);			
	КонецЕсли;
	
	Возврат пФизЛицо;
КонецФункции // ЗаполнитьОЦР()

&НаКлиенте
Процедура ОбновитьОЦР()
	
	//{ bit_SVKushnirenko 27.12.2016 #2671.1
	//ИсходныйКод{
	//ВыполнитьПроцедуруМодуля("ЗаполнитьОЦР()");
	//}ИсходныйКод
	пБДДС = Объект.БДДС;
	Если пБДДС.Количество() <>  0 Тогда
		
		пТекущееЗначение = Объект.ОК_ОЦР;
		Объект.ОК_ОЦР = ЗаполнитьОЦР(Объект.бит_БК_ЦФО, пБДДС[0].СтатьяОборотов, пБДДС[0].Аналитика_2, Объект.Ссылка);
		Если ЗначениеЗаполнено(Объект.ОК_ОЦР) И пТекущееЗначение <>  Объект.ОК_ОЦР Тогда 
			
			Оповестить("бит_БК_ИзмененОЦРНаФорме", Новый Структура("Ссылка, ОЦР", Объект.Ссылка, Объект.ОК_ОЦР)) ;			
		КонецЕсли;
	КонецЕсли;
	//} bit_SVKushnirenko 27.12.2016 #2671.1
	
	ОЦРНаименованиеПриИзменении(0);
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьТабЧасть()
	
	// ++ BIT AMerkulov 
	
	//СоответствиеРеквизитов=новый Соответствие;
	//СоответствиеРеквизитов.Вставить("бит_БК_ЦФО","ЦФО"); 
	//СоответствиеРеквизитов.Вставить("бит_БК_Организация","бит_БК_Организация"); 
	////СоответствиеРеквизитов.Вставить("бит_БК_Статья","СтатьяОборотов"); 
	////СоответствиеРеквизитов.Вставить("бит_БК_Проект","Проект"); 
	
	//ВыполнитьПроцедуруМодуля("СинхронизироватьТабЧастьСШапкой(параметры)",СоответствиеРеквизитов);
	
	// -- 
	
КонецПроцедуры

&НаКлиенте
Процедура Объектбит_БК_ЦФОПриИзменении(Элемент)
	
	ОбновитьОЦР();    	
	
	//{ bit_SVKushnirenko 16.01.2017 #2671.дпн
	//ИсходныйКод{
	// ++ BIT AMerkulov 
	//СоответствиеРеквизитов=новый Соответствие;
	//СоответствиеРеквизитов.Вставить("бит_БК_ЦФО","ЦФО"); 
	//ВыполнитьПроцедуруМодуля("СинхронизироватьТабЧастьСШапкой(параметры)",СоответствиеРеквизитов);
	//// -- 
	//}ИсходныйКод
	ЗаполнениеЗначенийТЧизДанныхИнициатора("ЦФО;");
	//} bit_SVKushnirenko 16.01.2017 #2671.дпн
	
	//{ bit_SVKushnirenko 27.12.2016 #2669
	ОбновитьДанныеПоОстаткуБюджета();
	//} bit_SVKushnirenko 27.12.2016 #2669
КонецПроцедуры

&НаКлиенте
Процедура Объектбит_БК_ОрганизацияПриИзменении(Элемент)
	
	//{ bit_SVKushnirenko 16.01.2017 #2671.дпн
	//ИсходныйКод{
	//СинхронизироватьТабЧасть();
	//}ИсходныйКод
	ЗаполнениеЗначенийТЧизДанныхИнициатора("бит_БК_Организация;");
	//} bit_SVKushnirenko 16.01.2017 #2671.дпн
КонецПроцедуры

&НаКлиенте
Процедура Объект_бит_БК_ИнициаторНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Процедура ОтправитьОЦРНаСервере(НастройкиДоставки)
	Объект.ОК_ДатаПодачиНаСогласование = ТекущаяДата();
	
	// БИТ НАГолубева 03.03.2016 ++
	НастройкиДоставки = ПрикрепитьПечатнуюФорму(НастройкиДоставки);
	// БИТ НАГолубева 03.03.2016 --
	
	// BIT AMerkulov 2015-04-24 ++  /
	ДополнитьНастройкиВложениями(НастройкиДоставки);
	// BIT AMerkulov 2015-04-24 --  /
	
	бит_ФормаВводаБюджетаВызовСервера.ОтправитьСообщениеКлиент(Объект.Ссылка, НастройкиДоставки, Объект.ОК_ОЦР);	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьОЦР(Команда)
	//Вставить содержимое обработчика.
	//ПараметрыФормы = Новый Структура("", );
	//ОткрытьФорму("Документ.бит_ФормаВводаБюджета.ФормаСписка", ПараметрыФормы, ПараметрыВыполненияКоманды.Источник, ПараметрыВыполненияКоманды.Уникальность, ПараметрыВыполненияКоманды.Окно);
	
	
	Если НЕ ЗначениеЗаполнено(Объект.ОК_ОЦР) Тогда 
		ПоказатьПредупреждение(Неопределено, "Не указан ответственный");
		Возврат;
	КонецЕсли;
	
	//Если не записан надо записать
	Если Объект.Ссылка.Пустая() Или Модифицированность Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ОтправитьОЦРВопросЗавершение", ЭтотОбъект), "Чтобы отправить письмо, сохраните заявку. Хотите сохранить сейчас?", РежимДиалогаВопрос.ДаНет, 10,,,КодВозвратаДиалога.Нет);
		Возврат;
		//БИТ АКриштопов 110416 ++ Копирование кода проверки проведения/попытки проведения
	ИначеЕсли Не Модифицированность и Не Объект.Проведен Тогда
		ОбновитьДанныеПоОстаткуБюджета();	
		ДействиеВыполнено = бит_Визирование.УстановитьСтатусОбъекта(Объект.Ссылка
		,ПредопределенноеЗначение("Перечисление.бит_ВидыСтатусовОбъектов.Статус")
		,ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании")
		,		
		,бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь")
		,ТекущаяДата());
		
		Статус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании");
		мКэшЗначений.ТекущийСтатус = Статус;
		мКэшЗначений.ДатаИзмененияСтатуса = ТекущаяДата();
		
		ОбновитьСтатус();
		
		//{ bit_SVKushnirenko 20.06.2017 #2759
		//ИсходныйКод{
		//ЗаписатьДокумент(РежимЗаписиДокумента.Проведение);			
		//}ИсходныйКод
		
		ЗаписатьДокументНаКлиенте(РежимЗаписиДокумента.Проведение); //должен уметь решать исключения при пуске с клиента!!
		//} bit_SVKushnirenko 20.06.2017 #2759
		
		//БИТ НАГолубева 02.03.2016 ++
		ЗаполнитьКэшЗначений(мКэшЗначений);
		УстановитьЗаголовокФормыДокумента();
		ЭтаФорма.ОбновитьОтображениеДанных();
		//БИТ НАГолубева 02.03.2016 --
		//БИТ АКриштопов 11042016 --
		
	КонецЕсли;
	
	// BIT AMerkulov 21102014 ++  / Проверка на заполненность проекта в инвест. заявке
	ОтправитьОЦРЗавершение();
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьОЦРВопросЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	КодВозврата = РезультатВопроса;
	Если КодВозврата = КодВозвратаДиалога.Нет ИЛИ КодВозврата = КодВозвратаДиалога.Таймаут Тогда 
		Возврат;
	КонецЕсли;
	
	//БИТ НАГолубева 25.02.2016 ++
	//Если документ уже был проведен, то перепроводить нельзя, только записываем
	Если Объект.Проведен Тогда
		
		//{ bit_SVKushnirenko 20.06.2017 #2759
		//ИсходныйКод{
		//ЗаписатьДокумент(РежимЗаписиДокумента.Запись);			
		//}ИсходныйКод
		
		ЗаписатьДокументНаКлиенте(РежимЗаписиДокумента.Запись);
		//} bit_SVKushnirenko 20.06.2017 #2759

	Иначе
		//+Сундукова 28.03.2016
		//Т.К. это клиент - ссылаемся на процедуру на сервере
		ОбновитьДанныеПоОстаткуБюджета();
		//-Сундукова 28.03.2016
		
		
		ДействиеВыполнено = бит_Визирование.УстановитьСтатусОбъекта(Объект.Ссылка
		,ПредопределенноеЗначение("Перечисление.бит_ВидыСтатусовОбъектов.Статус")
		,ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании")
		,		
		,бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь")
		,ТекущаяДата());
		
		Статус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании");
		мКэшЗначений.ТекущийСтатус = Статус;
		мКэшЗначений.ДатаИзмененияСтатуса = ТекущаяДата();
		
		ОбновитьСтатус();
		
		//{ bit_SVKushnirenko 20.06.2017 #2759
		//ИсходныйКод{
		//ЗаписатьДокумент(РежимЗаписиДокумента.Проведение);			
		//}ИсходныйКод
		
		ЗаписатьДокументНаКлиенте(РежимЗаписиДокумента.Проведение); //должен уметь решать исключения при пуске с клиента!!
		//} bit_SVKushnirenko 20.06.2017 #2759
		
		//БИТ НАГолубева 02.03.2016 ++
		ЗаполнитьКэшЗначений(мКэшЗначений);
		УстановитьЗаголовокФормыДокумента();
		ЭтаФорма.ОбновитьОтображениеДанных();
		//БИТ НАГолубева 02.03.2016 --
	КонецЕсли;
	//БИТ НАГолубева 25.02.2016 --
	
	ОтправитьОЦРЗавершение();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьОЦРЗавершение()
	
	//{ bit SVKushnirenko Bit 06.06.2017 #2759
	//письма не отправляются если документ не проведен
	Если НЕ Объект.Проведен Тогда  
		
		Возврат;
	КонецЕсли;
	//} bit SVKushnirenko Bit 06.06.2017 #2759
	
	ПроектЗаполнен = Истина;
	
	Если 
		(Объект.ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный 
		ИЛИ Объект.ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный
		ИЛИ Объект.ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный
		) Тогда
		
		Для Каждого Стр Из Объект.БДДС Цикл
			
			Если Стр.Сценарий = ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_Инвест") И Не ЗначениеЗаполнено(Стр.Проект) Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "В строке " + Стр.НомерСтроки + " не заполнено поле ""Проект""";
				Сообщение.Сообщить();
				ПроектЗаполнен = Ложь;
				
			КонецЕсли;
			
			
		КонецЦикла;
		
		
	КонецЕсли;
	
	
	
	Если НЕ ПроектЗаполнен Тогда 
		ПоказатьПредупреждение(Неопределено, "Не удалось отправить ОЦР!");
		Возврат;	
	КонецЕсли;
	// BIT AMerkulov 21102014 --
	
	НастройкиДоставки = Новый Структура;
	бит_БК_Общий.ЗаполнитьНастройкиДоставки(НастройкиДоставки);
	
	Если НЕ бит_БК_Общий.ПодключениеКСерверуSMTP(НастройкиДоставки) Тогда 
		ПараметрыАутентификацииПользователя = бит_БК_ОбщийКлиент.ПолучитьПараметрыАутентификацииПользователя();
		Если ПараметрыАутентификацииПользователя = неопределено Тогда 
			Возврат;
		КонецЕсли;
		НастройкиДоставки.ПользовательSMTP = ПараметрыАутентификацииПользователя.ПользовательSMTP;
		НастройкиДоставки.ПарольSMTP = ПараметрыАутентификацииПользователя.ПарольSMTP;
	КонецЕсли;	
	
	ОтправитьОЦРНаСервере(НастройкиДоставки);
	
	
КонецПроцедуры

&НаСервере 
Процедура ЗаписатьТелефонНаСервере(Телефон)
	ИнициаторСсылка = ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект."+строка(объект.Ссылка.Метаданные().Имя))).бит_БК_Инициатор;   	
	ИнициаторОбъект = ИнициаторСсылка.ПолучитьОбъект();
	ИнициаторОбъект.УстановитьТелефон(Телефон);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьТелефон(Команда)
	ЗаписатьТелефонНаСервере(Элементы.Объект_бит_БК_ИнициаторТелефон.ТекстРедактирования);
КонецПроцедуры

//{bit_SVKushnirenko 13.06.2017 #2735
//Возвразщает курсы из глобального модуля
//Параметры:
//парВалюта - ссылка на валюту, для которой запрашивается курс 
//парПериод - период, на который запрашивается курс
&НаСервереБезКонтекста
Функция ПолучитьКурсы(парВалюта, парПериод)

	Возврат РаботаСКурсамиВалют.ПолучитьКурсВалюты(парВалюта, парПериод);
КонецФункции // ПолучитьКурсы() }bit_SVKushnirenko 13.06.2017 #2735 

&НаКлиенте
Процедура Объектбит_БК_ВалютаДокументаПриИзменении(Элемент)
	
	//{ bit_SVKushnirenko 13.06.2017 #2745
	//ИсходныйКод{
	//// + БИТ AMerkulov 2014-10-17 
	//СтрКурса = бит_Бюджетирование.ПолучитьКурсПоСценарию(Объект.Сценарий,Объект.бит_БК_ВалютаДокумента,Объект.Дата);
	//Объект.бит_БК_КурсДокумента     = СтрКурса.Курс;
	//Объект.бит_БК_КратностьДокумента = СтрКурса.Кратность;
	//// - БИТ AMerkulov 2014-10-17 	
	//}ИсходныйКод
	
	//неактуальный код, курсы устанавливаются ниже из данных текущих курсов валют
	пСтруктураКурса = ПолучитьКурсы(Объект.бит_БК_ВалютаДокумента, ТекущаяДата()); //получать на текущую дату - требование М.Бузник
	Объект.бит_БК_КурсДокумента =  пСтруктураКурса.Курс; //устанавливаем значение курса в шапке, в противном случае, обновление валюты старого кода работае с ошибкой
	Объект.бит_БК_КратностьДокумента = пСтруктураКурса.Кратность;
	//} bit_SVKushnirenko 13.06.2017 #2745
	
	//{ bit_SVKushnirenko 16.01.2017 #2671.дпн
	//ИсходныйКод{
	//СоответствиеРеквизитов=новый Соответствие;
	//СоответствиеРеквизитов.Вставить("бит_БК_ВалютаДокумента","бит_БК_ВалютаДоговора");   	
	//ВыполнитьПроцедуруМодуля("СинхронизироватьТабЧастьСШапкой(параметры)",СоответствиеРеквизитов);  
	//}ИсходныйКод
	ЗаполнениеЗначенийТЧизДанныхИнициатора("бит_БК_ВалютаДоговора;");
	//} bit_SVKushnirenko 16.01.2017 #2671.дпн
	
	ПересчитатьСуммыБДДС("Валюта");
	
	//{ bit_SVKushnirenko 16.01.2017 #2671.дпн
	//ИсходныйКод{
	//// + БИТ AMerkulov 2014-06-25 	
	//ВыполнитьПроцедуруМодуля("ОпределитьНеобходимостьДоговора()");
	//// - БИТ AMerkulov 2014-06-25 	
	//}ИсходныйКод
	Объект.ОК_НеобходимостьДоговора = Объект.БДДС.Итог("бит_БК_СуммаБезНДС") > 100000; //перенесен код из модуля для предотвращения ресурсоемкого вызова
	ЗаполнениеЗначенийТЧизДанныхИнициатора("бит_БК_НуженДоговор;"); //Синхронизируем возможное новое значение шапки и табличной части
	//} bit_SVKushnirenko 16.01.2017 #2671.дпн
	
	//{ bit_SVKushnirenko 27.12.2016 #2669
	ОбновитьДанныеПоОстаткуБюджета();
	//} bit_SVKushnirenko 27.12.2016 #2669
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокКонтрагентовНаСервере(Наименование,лимит)
	рез=Новый СписокЗначений;
	Запрос=новый Запрос;
	Запрос.Текст="ВЫБРАТЬ первые $$лимит$$
	|	Контрагенты.Ссылка.Наименование КАК Наименование				 
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Наименование ПОДОБНО ""%"" + &Наименование + ""%""
	// BIT AMERKULOV 25082014 ++
	| И Контрагенты.ОК_КонтрагентБК
	// BIT AMERKULOV 25082014 --				 
	| ";
	Запрос.УстановитьПараметр("Наименование",Наименование);	
	Запрос.Текст=СтрЗаменить(Запрос.Текст,"$$лимит$$",лимит);
	результатЗапроса=Запрос.Выполнить();
	Если НЕ результатЗапроса.Пустой() тогда
		рез.ЗагрузитьЗначения(результатЗапроса.Выгрузить().ВыгрузитьКолонку("Наименование"));				 	
	КонецЕсли;
	
	Возврат рез;
КонецФункции

&НаКлиенте
Процедура ПредпологаемыйКонтрагентОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Текст) тогда
		лимит=50;
		Список=СписокКонтрагентовНаСервере(Текст,лимит+1);
		Если Список.Количество()>лимит тогда
			ПоказатьПредупреждение(Неопределено, "Найденно более "+Строка(Лимит)+" элементов!"+Символы.ПС+"Задайте более длинную строку или воспользуйтесь кнопкой выбора."); 
			Возврат;    		
		ИначеЕсли Список.Количество()>0 тогда		
			ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ПредпологаемыйКонтрагентОкончаниеВводаТекстаЗавершение", ЭтотОбъект), Список,Элемент);		
		КонецЕсли;	
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПредпологаемыйКонтрагентОкончаниеВводаТекстаЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВыбранноеЗначение = ВыбранныйЭлемент;
	Если не ВыбранноеЗначение=Неопределено тогда
		Объект.бит_БК_ПредпологаемыйКонтрагент=ВыбранноеЗначение.Значение;   			
	КонецЕсли;
	
КонецПроцедуры

//{bit_SVKushnirenko 29.03.2017 #2811
//Возвращает значение статуса для доступности поля "Проект" в ТЧ БДДС
// Параметры:
//парВидОперации - вид операции документа
//парСтатьяОборотов - значение статьи оборотов для определения доступности в конкретной строке
&НаСервереБезКонтекста
Функция ЗначениеДоступностиПроект(знач парВидОперации, знач парСтатьяОборотов = Неопределено)
	
	
	Если НЕ ЗначениеЗаполнено(парСтатьяОборотов) Тогда  
		
		Возврат парВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный ИЛИ
		парВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный;
	Иначе
		
		Возврат (парВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный ИЛИ
		парВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный) И 
		парСтатьяОборотов.ВидСтатьи = Справочники.бит_ВидыСтатейОборотов.ИнвестиционнаяДеятельность;
	КонецЕсли;
	
	//Способ вывления доступности от прежних разработчиков	
	//пКоличествоСтрокДоСвертки = парТЧБДДС.Количество();
	//Если пКоличествоСтрокДоСвертки = парТЧБДДС.НайтиСтроки(Новый Структура("Сценарий", Справочники.СценарииПланирования.Заявка_У)).Количество() Тогда  
	//	
	//	Возврат Ложь;
	//Иначе
	//	
	//	Возврат Истина;
	//КонецЕсли;
КонецФункции // ЗначениеДоступностиПроект() }bit_SVKushnirenko 29.03.2017 #2811 

// + БИТ AMerkulov 2014-01-22 /  Универсальная заявка
&НаКлиенте
//{ bit_SVKushnirenko 20.06.2017 #2759
//ИсходныйКод{
//Процедура БДДССтатьяОборотовПриИзменении(Элемент)
//}ИсходныйКод

Процедура БДДССтатьяОборотовПриИзменении(Элемент = Неопределено)
//} bit_SVKushnirenko 20.06.2017 #2759
	
	//{ bit_SVKushnirenko 06.04.2017 #2811
	//ИсходныйКод{
	//ОпределитьСценарийПоСтатьеОборотов(Элементы.БДДС.ТекущиеДанные, Объект.ВидОперации, мКэшЗначений);
	//Элементы.БДДС.ТекущиеДанные.бит_БК_Расход = Неопределено;
	//ПересчитатьСуммы("СтавкаНДС", ТекущаяСтрока().ПолучитьИдентификатор()); //1c-izhtc spawn
	//}ИсходныйКод
	
	//Оптимизация
	пТекущаяСтрока = Элементы.БДДС.ТекущиеДанные;
	ОпределитьСценарийПоСтатьеОборотов(пТекущаяСтрока, Объект.ВидОперации, мКэшЗначений);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-04 (#2850)
	//пТекущаяСтрока.бит_БК_Расход = Неопределено;
	//Заменено на:
	Если пТекущаяСтрока.СтатьяОборотов <> ПолучитьСтатью(пТекущаяСтрока.бит_БК_Расход) Тогда
		пТекущаяСтрока.бит_БК_Расход = Неопределено;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-04 (#2850)
	ПересчитатьСуммы("СтавкаНДС", пТекущаяСтрока.ПолучитьИдентификатор()); //1c-izhtc spawn
	//} bit_SVKushnirenko 06.04.2017 #2811
	
	ОбновитьОЦР();    
	
	//{ bit_SVKushnirenko 14.04.2017 #2811
	//ИсходныйКод{
	////{ bit SVKushnirenko Bit 21.03.2017 #2759
	//ДоступностьЦелиПриобретенияОборудования();
	////} bit SVKushnirenko Bit 21.03.2017 #2759
	//}ИсходныйКод
	//Доступность цели приобретения пересчитывается в вызове ниже, нет смысла в повторе
	ПостроениеВидаОперацииНаОснованииДанныхСтатейТчБДДС();
	//} bit_SVKushnirenko 14.04.2017 #2811
	
	//{ bit SVKushnirenko Bit 29.03.2017 #2811
	//Определение доступности поля Проект
	УправлениеПолемПроектНаФорме(пТекущаяСтрока.СтатьяОборотов);
	//} bit SVKushnirenko Bit 29.03.2017 #2811
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипСтатьи(СтатьяОборотов)
	
	Возврат СтатьяОборотов.ТипСтатьи;
	
КонецФункции
// - БИТ AMerkulov 

// + БИТ AMerkulov 2014-08-13  
&НаСервереБезКонтекста
Функция ПолучитьВидСтатьи(СтатьяОборотов)
	
	Возврат СтатьяОборотов.ВидСтатьи;
	
КонецФункции
// - БИТ AMerkulov 2014-08-13  

// + БИТ AMerkulov 2013-12-23 /  Универсальная заявка (доработки)
&НаКлиенте
Процедура БДДСбит_БК_РасходПриИзменении(Элемент)
	
	Элементы.БДДС.ТекущиеДанные.СтатьяОборотов = ПолучитьСтатью(Элементы.БДДС.ТекущиеДанные.бит_БК_Расход);
	
	//{ bit_SVKushnirenko 20.06.2017 #2759
	//ИсходныйКод{
	//ОпределитьСценарийПоСтатьеОборотов(Элементы.БДДС.ТекущиеДанные);
	//ПересчитатьСуммы("СтавкаНДС", ТекущаяСтрока().ПолучитьИдентификатор()); //1c-izhtc spawn
	//ОбновитьОЦР();
	//}ИсходныйКод
	
	//Выполнение контрольных процессов, которые действуют при изменении статьи оборотов, отключены вызовы дублируюемые в "БДДССтатьяОборотовПриИзменении"
	БДДССтатьяОборотовПриИзменении(); 
	//} bit_SVKushnirenko 20.06.2017 #2759
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтатью(СтатьяОборотов)
	
	Возврат СтатьяОборотов.СтатьяЗатрат;
	
КонецФункции
// - БИТ Amerkulov

&НаКлиенте
Процедура ОтчетПоБюджету(Команда)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-08-21 (#3431)
	//ПериодМинимум = '00010101';
	//ПериодМаксимум = '00010101';
	//
	//СписокСтатейОРЕХ 		= Новый СписокЗначений;
	//СписокСтатейСАРЕХ 		= Новый СписокЗначений;
	//СписокЦФООРЕХ 			= Новый СписокЗначений;
	//СписокЦФОСАРЕХ 			= Новый СписокЗначений;
	//СписокОбъектовОРЕХ 		= Новый СписокЗначений;
	//СписокОбъектовСАРЕХ 	= Новый СписокЗначений;
	//
	//Если Объект.БДДС.Количество() Тогда
	//	
	//	ПериодМинимум = Объект.БДДС[0].Период;
	//	ПериодМаксимум = Объект.БДДС[0].Период;
	//	
	//	Для Каждого Стр Из Объект.БДДС Цикл
	//		
	//		Если Стр.Период < ПериодМинимум Тогда
	//			ПериодМинимум = Стр.Период;
	//		КонецЕсли;
	//		
	//		Если Стр.Период > ПериодМаксимум Тогда
	//			ПериодМаксимум = Стр.Период;
	//		КонецЕсли;		
	//		
	//		// + БИТ AMerkulov 2015-03-10			
	//		ВидСтатьи = ПолучитьВидСтатьи(Стр.СтатьяОборотов);
	//		
	//		Если ВидСтатьи = ПредопределенноеЗначение("Справочник.бит_ВидыСтатейОборотов.ИнвестиционнаяДеятельность") Тогда
	//			
	//			СписокСтатейСАРЕХ.Добавить(ПолучитьКонтролирующуюСтатью(Стр.Период, Стр.СтатьяОборотов));
	//			
	//			СписокЦФОСАРЕХ.Добавить(Стр.ЦФО);
	//			СписокОбъектовСАРЕХ.Добавить(Стр.Аналитика_2);
	//			
	//			
	//		Иначе 
	//			
	//			СписокСтатейОРЕХ.Добавить(ПолучитьКонтролирующуюСтатью(Стр.Период, Стр.СтатьяОборотов));
	//			
	//			СписокЦФООРЕХ.Добавить(Стр.ЦФО);
	//			СписокОбъектовОРЕХ.Добавить(Стр.Аналитика_2);
	//			
	//			
	//		КонецЕсли;
	//		
	//		// - БИТ AMerkulov 2015-03-10
	//		
	//		
	//	КонецЦикла;
	//	
	//	
	//	
	//	
	//КонецЕсли;
	//
	//
	//Если СписокСтатейСАРЕХ.Количество() Тогда
	//	Форма = ПолучитьФорму("Отчет.бит_КонтрольныеЗначенияБюджетов.Форма.бит_ФормаОтчетаТонкийКлиентCAPEX",,"CAPEX");
	//	Форма.Отчет.Период.ДатаНачала = НачалоГода(ПериодМинимум);
	//	Форма.Отчет.Период.ДатаОкончания = КонецГода(ПериодМаксимум);
	//	Форма.Отчет.бит_ВидЗаявки = "CAPEX";
	//	
	//	Форма.Открыть();
	//	
	//	ОтборМенеджер=Форма.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ОтборМенеджер.Использование=Истина;
	//	ОтборМенеджер.ВидСравнения=ВидСравненияКомпоновкиДанных.ВСписке;
	//	ОтборМенеджер.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("ЦФО");
	//	ОтборМенеджер.ПравоеЗначение=СписокЦФОСАРЕХ;
	//	
	//	ОтборМенеджер=Форма.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ОтборМенеджер.Использование=Истина;
	//	ОтборМенеджер.ВидСравнения=ВидСравненияКомпоновкиДанных.ВСписке;
	//	ОтборМенеджер.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("СтатьяОборотов");
	//	ОтборМенеджер.ПравоеЗначение=СписокСтатейСАРЕХ;
	//	
	//	ОтборМенеджер=Форма.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ОтборМенеджер.Использование=Истина;
	//	ОтборМенеджер.ВидСравнения=ВидСравненияКомпоновкиДанных.ВСписке;
	//	ОтборМенеджер.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Аналитика_2");
	//	ОтборМенеджер.ПравоеЗначение=СписокОбъектовСАРЕХ;
	//	
	//	ОтборМенеджер=Форма.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ОтборМенеджер.Использование=Истина;
	//	ОтборМенеджер.ВидСравнения=ВидСравненияКомпоновкиДанных.ВСписке;
	//	ОтборМенеджер.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Сценарий");
	//	ОтборМенеджер.ПравоеЗначение=ПолучитьСценарийБюджет();
	//	
	//	Форма.УстановитьПараметры(СписокОбъектовСАРЕХ);		
	//	
	//	//бит_ОтчетыКлиент.СформироватьОтчет(Форма.ЭтаФорма, Форма.Элементы.ГруппаКоманднаяПанельОтчетаЛевая, Форма.РежимФормирования);
	//	
	//	Форма.Результат.ПоказатьУровеньГруппировокСтрок(3);		
	//	
	//	//Форма.Элементы.ГруппаПанельВыбораСохраненныхНастроек.Видимость = Ложь;
	//	//Форма.Элементы.ГруппаКоманднаяПанельОтчета.Видимость = Ложь;
	//	//Форма.Элементы.ГруппаПанельНастроек.Видимость = Ложь;
	//	
	//КонецЕсли;
	//
	//Если СписокСтатейОРЕХ.Количество() Тогда
	//	Форма2 = ПолучитьФорму("Отчет.бит_КонтрольныеЗначенияБюджетов.Форма.бит_ФормаОтчетаТонкийКлиентOPEX",,"OPEX");
	//	Форма2.Отчет.Период.ДатаНачала = ПериодМинимум;
	//	Форма2.Отчет.Период.ДатаОкончания =  КонецМесяца(ПериодМаксимум);
	//	Форма2.Отчет.бит_ВидЗаявки = "OPEX";
	//	
	//	Форма2.Открыть();
	//	
	//	ОтборМенеджер=Форма2.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ОтборМенеджер.Использование=Истина;
	//	ОтборМенеджер.ВидСравнения=ВидСравненияКомпоновкиДанных.ВСписке;
	//	ОтборМенеджер.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("ЦФО");
	//	ОтборМенеджер.ПравоеЗначение=СписокЦФООРЕХ;
	//	
	//	ОтборМенеджер=Форма2.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ОтборМенеджер.Использование=Истина;
	//	ОтборМенеджер.ВидСравнения=ВидСравненияКомпоновкиДанных.ВСписке;
	//	ОтборМенеджер.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("СтатьяОборотов");
	//	ОтборМенеджер.ПравоеЗначение=СписокСтатейОРЕХ;
	//	
	//	ОтборМенеджер=Форма2.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ОтборМенеджер.Использование=Истина;
	//	ОтборМенеджер.ВидСравнения=ВидСравненияКомпоновкиДанных.ВСписке;
	//	ОтборМенеджер.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Аналитика_2");
	//	ОтборМенеджер.ПравоеЗначение=СписокОбъектовОРЕХ;
	//	
	//	
	//	// + БИТ AMerkulov 2015-03-31		
	//	ОтборМенеджер=Форма2.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ОтборМенеджер.Использование=Истина;
	//	ОтборМенеджер.ВидСравнения=ВидСравненияКомпоновкиДанных.ВСписке;
	//	ОтборМенеджер.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Сценарий");
	//	ОтборМенеджер.ПравоеЗначение=ПредопределенноеЗначение("Справочник.СценарииПланирования.Бюджет_У");
	//	// - БИТ AMerkulov 2015-03-31		
	//	
	//	
	//	Форма2.УстановитьПараметры(СписокОбъектовОРЕХ);
	//	
	//	//бит_ОтчетыКлиент.СформироватьОтчет(Форма2.ЭтаФорма, Форма2.Элементы.ГруппаКоманднаяПанельОтчетаЛевая, Форма2.РежимФормирования);
	//	
	//	Форма2.Результат.ПоказатьУровеньГруппировокСтрок(3);
	//	
	//	//Форма2.Элементы.ГруппаПанельВыбораСохраненныхНастроек.Видимость = Ложь;
	//	//Форма2.Элементы.ГруппаКоманднаяПанельОтчета.Видимость = Ложь;
	//	//Форма2.Элементы.ГруппаПанельНастроек.Видимость = Ложь;
	//	
	//КонецЕсли;
	//Заменено на:
	Если Не Объект.Проведен Тогда 
		
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ИмяПроцедуры", "ВывестиОтчетПоБюджету();");
		ОписаниеОповещениеОПроведении = Новый ОписаниеОповещения("ОтветНаВопросПровестиДокумент", ЭтотОбъект, ДопПараметры);                             		
		ПоказатьВопрос(ОписаниеОповещениеОПроведении, НСтр("ru = 'Для выполнения команды документ должен быть проведен. Провести?'"), РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет);
		Возврат;
		
	КонецЕсли;
	
	ВывестиОтчетПоБюджету();
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-08-21 (#3431)	
	
КонецПроцедуры

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-08-21 (#3431)

&НаКлиенте
Процедура ВывестиОтчетПоБюджету()
	
	ПараметрыОткрытия = Новый Структура("ФВБ", Объект.Ссылка);
	ОткрытьФорму("Отчет.ок_ОтчетПоБюджетуДляИнициатора.Форма.ФормаОтчета", ПараметрыОткрытия,,,,,,РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветНаВопросПровестиДокумент(Результат, ДопПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;
	
	ПривелегированноПерепровести();
	
	Если Объект.Проведен Тогда 
		Выполнить(ДопПараметры.ИмяПроцедуры);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМакетОтчетаПоБюджету(ФВБ)
	
	Возврат Документы.бит_ФормаВводаБюджета.ПолучитьМакетОтчетаПоБюджету(ФВБ);
	
КонецФункции
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-08-21 (#3431)

&НаСервереБезКонтекста  
Функция ПолучитьКонтролирующуюСтатью(Период, СтатьяОборотов)
	
	Отбор = Новый Структура;
	Отбор.Вставить("КонтролируемаяСтатья",СтатьяОборотов);
	РезультатОтбора = РегистрыСведений.бит_БК_КонтролирующиеСтатьиОборотов.ПолучитьПоследнее(Период, Отбор);
	
	Если ЗначениеЗаполнено(РезультатОтбора.КонтролирующаяСтатья) Тогда
		Возврат РезультатОтбора.КонтролирующаяСтатья;
	Иначе
		Возврат СтатьяОборотов;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСценарийБюджет()
	
	Возврат Справочники.СценарииПланирования.Бюджет_Инвест;
	
	
КонецФункции

&НаСервере  
Функция ПолучитьОтчетПоБюджету()
	Возврат Отчеты.бит_ОтчетПоБюджету.Создать();
КонецФункции	

&НаКлиенте
Процедура СформироватьЗаказ(Команда)
	
	ПараметрыВыбораДокумента = Новый Структура;
	ПараметрыВыбораДокумента.Вставить("Ссылка", Объект.Ссылка);
	ОткрытьФорму("Документ.бит_ЗаказРасходы.ФормаОбъекта", ПараметрыВыбораДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктураПодчиненности(Команда)
	
	ФормаСтруктурыПодчиненности = ПолучитьФорму("ОбщаяФорма.бит_ФормаСтруктурыПодчиненностиТонкийКлиент");
	Если ФормаСтруктурыПодчиненности.Открыта() Тогда
		ФормаСтруктурыПодчиненности.Закрыть();
	КонецЕсли;
	ФормаСтруктурыПодчиненности.ДокументСсылка = Объект.Ссылка;
	ФормаСтруктурыПодчиненности.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура БДДСАналитика_2ПриИзменении(Элемент)
	ОбновитьОЦР();    
КонецПроцедуры
// - БИТ Amerkulov

// + БИТ AMerkulov 2015-04-15 
&НаКлиенте
Процедура Согласовать(Команда)
	
	//Если не записан надо записать
	Если Объект.Ссылка.Пустая() Или Модифицированность Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("СогласоватьВопросЗаписать", ЭтотОбъект), "Перед проверкой необходимо записать документ. Продолжить?", РежимДиалогаВопрос.ДаНет, 10,,,КодВозвратаДиалога.Нет);
		Возврат;			
	КонецЕсли;
	
	СогласоватьФрагмент();
	//-СБ Пискунова 17.03.2017 #2691
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-25 (#2873)
	ПрочитатьУстановленныеВизы();
	ПеречитатьДоступностьКнопокМаршрута();
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-25 (#2873)
	
	//УстановитьВидимостьКнопокСогласований();
	//Элементы.Отклонить.Доступность 	= Ложь;
	//Элементы.Отклонить.Видимость 	= Ложь;
	//Элементы.КнопкаСогласовать.Доступность 	= Ложь;
	//Элементы.КнопкаСогласовать.Видимость 	= Ложь;

КонецПроцедуры

&НаКлиенте
Процедура СогласоватьВопросЗаписать(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	КодВозврата = РезультатВопроса;
	Если КодВозврата = КодВозвратаДиалога.Нет ИЛИ КодВозврата = КодВозвратаДиалога.Таймаут Тогда 
		Возврат;
	КонецЕсли;
	
	// БИТ НАГолубева 25.02.2016 ++
	// Если документ уже был проведен, то перепроводить нельзя, только записываем
	Если Объект.Проведен Тогда
		
		//{ bit_SVKushnirenko 20.06.2017 #2759
		//ИсходныйКод{
		//ЗаписатьДокумент(РежимЗаписиДокумента.Запись);			
		//}ИсходныйКод
		
		ЗаписатьДокументНаКлиенте(РежимЗаписиДокумента.Запись);
		//} bit_SVKushnirenko 20.06.2017 #2759

	Иначе
		//+Сундукова 28.03.2016
		//Т.К. это клиент - ссылаемся на процедуру на сервере
		ОбновитьДанныеПоОстаткуБюджета();
		//-Сундукова 28.03.2016
		
		//{ bit_SVKushnirenko 20.06.2017 #2759
		//ИсходныйКод{
		//ЗаписатьДокумент(РежимЗаписиДокумента.Проведение);			
		//}ИсходныйКод
		
		ЗаписатьДокументНаКлиенте(РежимЗаписиДокумента.Проведение); //должен уметь решать исключения при пуске с клиента!!
		//} bit_SVKushnirenko 20.06.2017 #2759
		
	КонецЕсли;
	// БИТ НАГолубева 25.02.2016 --
	
	СогласоватьФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура СогласоватьФрагмент()
	
	//{ bit SVKushnirenko Bit 06.06.2017 #2759
	//письма не отправляются если документ не проведен
	Если НЕ Объект.Проведен Тогда  
		
		Возврат;
	КонецЕсли;
	//} bit SVKushnirenko Bit 06.06.2017 #2759
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-05 (#3068)	
	//Если Объект.БДДС.Итог("БИТ_СуммаСверхБюджета") > 0 Тогда
	//Заменено на:
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-02 (#3393)
	//Если Объект.бит_СуммаПревышающаяБюджет > 0 Тогда
	//Заменено на:
	пТекстСообщенияПревышения = "";	
	Если (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный") 
		 	ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный"))
		 И мКэшЗначений.ДоступныВизы_Корректировки 
		 И УсловиеПолугодовогоПревышенияОЦРИРД(Объект.Ссылка, пТекстСообщенияПревышения)
	Тогда 
	
	    пТекстСообщенияПревышения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Есть превышение операционного бюджета по функции %1. Для продолжения согласования заявки нажмите «Да». Чтобы прекратить согласование для дальнейшей корректировки, нажмите «Нет»'"),
																							пТекстСообщенияПревышения);
																							
		пОповещениеОтветПоКорректировке = Новый ОписаниеОповещения("СогласоватьОтветНаВопросОКорректировке", ЭтотОбъект);
		ПоказатьВопрос(пОповещениеОтветПоКорректировке, пТекстСообщенияПревышения, РежимДиалогаВопрос.ДаНет);
		Возврат;
	ИначеЕсли Объект.бит_СуммаПревышающаяБюджет > 0 Тогда
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-02 (#3393)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-05 (#3068)
		ПоказатьВопрос(Новый ОписаниеОповещения("СогласоватьВопросПревышение", ЭтотОбъект), "Обнаружено превышение бюджета. Продолжить согласование?", РежимДиалогаВопрос.ДаНет, 10,,,КодВозвратаДиалога.Нет);
		Возврат;			
	КонецЕсли;
	// БИТ НАГолубева 04.03.2016 --
	
	Если НЕ мКэшЗначений.Свойство("СогласованиеЭкспертом") Тогда
		ОпределитьТипСогласования();
	КонецЕсли;
	
	//Если мКэшЗначений.СогласованиеЭкспертом = Ложь Тогда
	Если мКэшЗначений.ТекущийИнициатор = Объект.ОК_ОЦР И НЕ Объект.Проведен Тогда	////БИТ НАГолубева 25.02.2016 Если документ уже был проведен, то остатки по бюджету не пересчитываем.
		//{ bit_SVKushnirenko 10.01.2017 #2761
		//ИсходныйКод{
		////ОК_ОчиститьСверхБюджетНаСервере(); //БИТ НАГолубева 25.02.2016 В модуле объекта ничего не выполняется, лишний вызов.
		//ВыполнитьПроцедуруМодуля("ОтменитьПроведениеНаСервере()");
		//}ИсходныйКод
		//данный вызов отключен, т.к. вызывает исключение в контексте сеанса ОЦР (запрещана отмена проведения ролью)  и ничего полезного не выполняет, т.к. в условии документ НЕ ПРОВЕДЕН, а вызов пытается его записать с ОТМЕНОЙ проведения!
		//} bit_SVKushnirenko 10.01.2017 #2761
		
		//+Сундукова 30.03.16 - заменяю на рабочую процедуру
		//бит_ПроверитьПоБюджетуНаСервере();
		ОбновитьДанныеПоОстаткуБюджета();
		//-Сундукова 30.03.16
	КонецЕсли;
	
	//Если  мКэшЗначений.СогласованиеЭкспертом = Ложь И Объект.БДДС.Итог("бит_БК_СуммаЗаРамкамиБюджетаСНДС") > 0 Тогда
	//	ТекстВопроса = "ru = 'По данной заявке обнаружено превышение бюджета " + Объект.БДДС.Итог("бит_БК_СуммаЗаРамкамиБюджетаСНДС") +". Хотите продолжить согласование?  '";
	//	ПоказатьВопрос(Новый ОписаниеОповещения("СогласоватьВопросПревышение", ЭтотОбъект), НСтр(ТекстВопроса), РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет);
	//    Возврат; 		
	//КонецЕсли;
	
	СогласоватьЗавершение();
	
КонецПроцедуры

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-02 (#3393)
&НаКлиенте
Процедура СогласоватьОтветНаВопросОКорректировке(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда 
		//Продолжить согласование
		Если НЕ мКэшЗначений.Свойство("СогласованиеЭкспертом") Тогда
			ОпределитьТипСогласования();
		КонецЕсли;
		
		Если мКэшЗначений.ТекущийИнициатор = Объект.ОК_ОЦР И НЕ Объект.Проведен Тогда
			
			ОбновитьДанныеПоОстаткуБюджета();
			
		КонецЕсли;
		
		СогласоватьЗавершение();
		
		Возврат;
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда 
		//Отклонить
		ОтклонитьЗавершение(Неопределено, Неопределено);
		
		Возврат;
		
	КонецЕсли;
		
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-02 (#3393)

// БИТ НАГолубева 04.03.2016 ++
&НаКлиенте
Процедура СогласоватьВопросПревышение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет ИЛИ РезультатВопроса = КодВозвратаДиалога.Таймаут Тогда 
		Возврат;
	Иначе
		Если НЕ мКэшЗначений.Свойство("СогласованиеЭкспертом") Тогда
			ОпределитьТипСогласования();
		КонецЕсли;
		
		Если мКэшЗначений.ТекущийИнициатор = Объект.ОК_ОЦР И НЕ Объект.Проведен Тогда	
			ВыполнитьПроцедуруМодуля("ОтменитьПроведениеНаСервере()");
			//+Сундукова 30.03.16 - заменяю на рабочую процедуру
			//бит_ПроверитьПоБюджетуНаСервере();
			ОбновитьДанныеПоОстаткуБюджета();
			//-Сундукова 30.03.16
		КонецЕсли;
		
		СогласоватьЗавершение();
	КонецЕсли; 		
	
КонецПроцедуры
// БИТ НАГолубева 04.03.2016 ++

&НаКлиенте
Процедура СогласоватьЗавершение()
	
	СогласоватьНаСервере();	
	
	ВыполнитьПроцедуруМодуля("ПровестиНаСервере()");
	//{ bit_SVKushnirenko 27.12.2016 #2669
	ОбновитьДанныеПоОстаткуБюджета();
	//} bit_SVKushnirenko 27.12.2016 #2669
	
	Если Объект.Проведен Тогда
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-13 (#2939)
		ОбновитьСтатус();
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-13 (#2939)
		
		ЗаполнитьКэшЗначений(мКэшЗначений);	
		УстановитьСтатусВФорме(мКэшЗначений.ТекущийСтатус, мКэшЗначений.ДатаИзмененияСтатуса);
		
		//+СБ Пискунова #2691 08.02.2017 
		//Если мКэшЗначений.ТекущийСтатус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_Согласована") ИЛИ мКэшЗначений.ТекущийСтатус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_Закрыта") Тогда
		//	Элементы.КнопкаСогласовать.Доступность = Ложь;
		//КонецЕсли;
		
		Элементы.Отклонить.Доступность 	= Ложь;
		Элементы.Отклонить.Видимость 	= Истина;
		Элементы.КнопкаСогласовать.Доступность 	= Ложь;
		Элементы.КнопкаСогласовать.Видимость 	= Истина;
		//-СБ Пискунова #2691 08.02.2017
		Если НЕ ЗначениеЗаполнено(Объект.бит_БК_Инициатор) Тогда 
			ПоказатьПредупреждение(Неопределено, "Не указан ответственный");
			Возврат;
		КонецЕсли;
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-08 (#2931)
		//НастройкиДоставки = Новый Структура;
		//бит_БК_Общий.ЗаполнитьНастройкиДоставки(НастройкиДоставки);                           
		//
		//Если НЕ бит_БК_Общий.ПодключениеКСерверуSMTP(НастройкиДоставки) Тогда 
		//	ПараметрыАутентификацииПользователя = бит_БК_ОбщийКлиент.ПолучитьПараметрыАутентификацииПользователя();
		//	Если ПараметрыАутентификацииПользователя = неопределено Тогда 
		//		Возврат;
		//	КонецЕсли;
		//	НастройкиДоставки.ПользовательSMTP = ПараметрыАутентификацииПользователя.ПользовательSMTP;
		//	НастройкиДоставки.ПарольSMTP = ПараметрыАутентификацииПользователя.ПарольSMTP;
		//КонецЕсли;	
		//
		//ОтправитьИнициаторуНаСервере(НастройкиДоставки);	
		//Заменено на:
		ОтправитьИнициаторуНаСервере();	
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-08 (#2931)
		Модифицированность = Ложь;
		
	КонецЕсли;
	
	УстановитьЗаголовокФормыДокумента();
	
	// BIT AMerkulov 26-11-15 ++
	ПослеЗаписи(Неопределено);	
	// BIT AMerkulov 26-11-15 --		
	
КонецПроцедуры

&НаСервере
Процедура СогласоватьНаСервере()
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-14 (#2873)
	//Раскомментировал код для старой заявки
	Если ЗначениеЗаполнено(бит_уп_Сервер.ПолучитьАлгоритмВизирования(Объект.Ссылка)) И
			  НЕ бит_БК_Общий.РеквизитыДляМуршрутовВидимы(Объект.Ссылка)
	Тогда
	////+СБ Пискунова #2691 14.03.2017 Проверку убираем по задаче маршруты согласования 
	#Область БекапСогласованиеДокумента
	// БИТ НАГолубева 29.02.2016 ++
	// Если остаток по бюджету >= 0, то статус должен быть "Согласовано", в остальных случаях - "На согласовании".
	ДатаИзмененияСтатуса = ТекущаяДата();
	
	//{ bit_SVKushnirenko 10.01.2017 #2761
	//ИсходныйКод{
	// СтатусСогласовано = Истина;
	//Для каждого СтрокаТЧ из Объект.БДДС Цикл
	//	Если СтрокаТЧ.ОстатокПоБюджету < 0 Тогда
	//		 СтатусСогласовано = Ложь;
	//		 Сообщить("По строке " + СтрокаТЧ.НомерСтроки + " обнаружено превышение бюджета на " + СтрокаТЧ.ОстатокПоБюджету + ". Установлен статус <На согласовании>.");
	//	 КонецЕсли;
	// КонецЦикла;
	//}ИсходныйКод
	
	Если бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь") = Объект.ОК_ОЦР.Пользователь И
		(Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный ИЛИ
		Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный)
		Тогда //Проверка превышения сумм не выполняется
		
		СтатусСогласовано = Ложь;	
	Иначе	
		
		СтатусСогласовано = Истина;
		Для каждого СтрокаТЧ из Объект.БДДС Цикл
			
			Если СтрокаТЧ.ОстатокПоБюджету < 0 Тогда
				
				СтатусСогласовано = Ложь;
				Сообщить("По строке " + СтрокаТЧ.НомерСтроки + " обнаружено превышение бюджета на " + СтрокаТЧ.ОстатокПоБюджету + ". Установлен статус <На согласовании>.");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//} bit SVKushnirenko Bit 10.01.2017 #2761
	
	//БИТ АКриштопов 21.04.2016 ++ дополнения к установке статуса. Задача 2240
	//Согласование других согласователей (всех кроме ОЦР), не зависимо от наличия средств в бюджете, не переводит заявку в статус «Согласовано», 
	//а оставляет в статусе «На согласование». 
	//Если вдруг произошло согласование не проведенной заявки, то заявка проводиться и переходит в статус «На согласование».
	Если РольДоступна("ОК_ОЦР") и бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь") = Объект.ОК_ОЦР.Пользователь Тогда
		Объект.БИТ_СогласованоОЦР = Истина;
	Иначе 
		Объект.БИТ_СогласованоОЦР = Ложь;
	КонецЕсли;	 
	//БИТ АКриштопов 21.04.2016 --
	
	Если СтатусСогласовано и Объект.БИТ_СогласованоОЦР Тогда
		Статус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_Согласована");
	Иначе
		Статус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании");
	КонецЕсли;
	
	ДействиеВыполнено = бит_Визирование.УстановитьСтатусОбъекта(Объект.Ссылка
	,ПредопределенноеЗначение("Перечисление.бит_ВидыСтатусовОбъектов.Статус")
	,Статус
	,		
	,бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь")
	,ДатаИзмененияСтатуса);
	
	мКэшЗначений.ТекущийСтатус = Статус;
	мКэшЗначений.ДатаИзмененияСтатуса = ДатаИзмененияСтатуса;
	
	ОбновитьСтатус();
	// БИТ НАГолубева 29.02.2016 --
	
	#КонецОбласти 	
	////-СБ Пискунова #2691 14.03.2017 Проверку убираем по задаче маршруты согласования 
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-14 (#2873)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-18 (#2873)
	//Закомментировал, т.к. стираются данные ТЧ бит_Комментарии
	////+СБ. Пискунова 18.05.2017 #2691
	//ЭтаФорма.Прочитать();
	////-СБ. Пискунова 18.05.2017 #2691
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-18 (#2873)

	ДокументОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.бит_ФормаВводаБюджета"));	
	ДокументОбъект.Согласовать();
	ЗначениеВДанныеФормы(ДокументОбъект,Объект);     	
	Модифицированность=истина;
	
КонецПроцедуры

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-02 (#3393)
&НаСервереБезКонтекста
//Параметры:
//	Ссылка - ссылка на документ ФВБ
//	ТекстСообщения - текст, в который передается ЦФО, по которому зарегистрировано полугодовое превышение
//Возвращаемое значение:
//	Булево - выполняется условие 5/30 и полугодовое превышение по ЦФО
//
Функция УсловиеПолугодовогоПревышенияОЦРИРД(Ссылка, ТекстСообщения = "")
	
	ТекАлгоритм = бит_уп_Сервер.ПолучитьАлгоритмВизирования(Ссылка);
	Если Не ЗначениеЗаполнено(ТекАлгоритм) Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	ИсточникПриоритеты = ТекАлгоритм.ПараметрыАлгоритма.Найти("ПриоритетПоФорматуОбъектов");
	Если Не ЗначениеЗаполнено(ИсточникПриоритеты) Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	ИсточникПолугодовоеПревышение = ТекАлгоритм.ПараметрыАлгоритма.Найти("ПолугодовоеПревышениеИПроцент");
	Если Не ЗначениеЗаполнено(ИсточникПолугодовоеПревышение) Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	СуммаЗаявки = Ссылка.БДДС.Итог("бит_БК_СуммаБезНДС");
	
	пСтандартныйПериод = Новый СтандартныйПериод;
	пСтандартныйПериод.ДатаНачала	 = Ссылка.Дата;
	пСтандартныйПериод.ДатаОкончания = пСтандартныйПериод.ДатаНачала;
	
	пТаблицаПараметры = Новый ТаблицаЗначений;
	пТаблицаПараметры.Колонки.Добавить("ИмяПараметра");
	пТаблицаПараметры.Колонки.Добавить("ЗначениеПараметра");
	
	бит_МеханизмПолученияДанных.ОбновитьТаблицуПараметров(ИсточникПолугодовоеПревышение.ЗначениеПоУмолчанию, пТаблицаПараметры, Ложь);
	
	СтрокиПараметров = пТаблицаПараметры.НайтиСтроки(Новый Структура("ИмяПараметра","Ссылка"));
	Если СтрокиПараметров.Количество()>0 Тогда 
		СтрокиПараметров[0].ЗначениеПараметра = Ссылка;
	КонецЕсли;
	
	ТаблицаПолугодовоеПревышение = Обработки.бит_ПолучениеДанныхРегистровБухгалтерии.ПолучитьДанные(ИсточникПолугодовоеПревышение.ЗначениеПоУмолчанию
																					   , пСтандартныйПериод
																					   , Новый ТаблицаЗначений
																					   , пТаблицаПараметры
																					   , ПредопределенноеЗначение("Справочник.бит_мпд_НастройкиПуловПодключений.ПустаяСсылка")); 
																					   
    Если ТаблицаПолугодовоеПревышение.Количество() = 0 Тогда 
		
		Возврат Ложь;
		
	КонецЕсли;
	
	пТаблицаПараметры.Очистить();
	бит_МеханизмПолученияДанных.ОбновитьТаблицуПараметров(ИсточникПриоритеты.ЗначениеПоУмолчанию, пТаблицаПараметры, Ложь);
		
	СтрокиПараметров = пТаблицаПараметры.НайтиСтроки(Новый Структура("ИмяПараметра","Ссылка"));
	Если СтрокиПараметров.Количество()>0 Тогда 
		СтрокиПараметров[0].ЗначениеПараметра = Ссылка;
	КонецЕсли;
	
	ТЗПриоритеты = Обработки.бит_ПолучениеДанныхРегистровБухгалтерии.ПолучитьДанные(ИсточникПриоритеты.ЗначениеПоУмолчанию
																					   , пСтандартныйПериод
																					   , Новый ТаблицаЗначений
																					   , пТаблицаПараметры
																					   , ПредопределенноеЗначение("Справочник.бит_мпд_НастройкиПуловПодключений.ПустаяСсылка")); 																					   
																					   
																					   
	Для Каждого стрТабПревыш Из ТаблицаПолугодовоеПревышение Цикл 
		
		ТекПриоритет = ТЗПриоритеты.Найти(стрТабПревыш.ЦФО);
		Если ТекПриоритет <> Неопределено Тогда 
					
			Если НЕ(ТекПриоритет.Приоритет = 2 И СуммаЗаявки>=30000 
			 ИЛИ ТекПриоритет.Приоритет = 1 И СуммаЗаявки>=5000)
			Тогда 
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
		ТекстСообщения = ТекстСообщения + "," + стрТабПревыш.ЦФО;
		
	КонецЦикла;
	
	ТекстСообщения = Сред(ТекстСообщения, 2);
	
	Возврат Истина;
	
КонецФункции
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-02 (#3393)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-02 (#2931)
//Процедура ОтправитьИнициаторуНаСервере(НастройкиДоставки)
	
	
//Функционал будет отрабатывать в рамках рег. задания отправки оповещений
//// БИТ НАГолубева 03.03.2016 ++
//НастройкиДоставки = ПрикрепитьПечатнуюФорму(НастройкиДоставки);
//// БИТ НАГолубева 03.03.2016 --
//
//// BIT AMerkulov 2015-04-24 ++  /
//ДополнитьНастройкиВложениями(НастройкиДоставки);
//// BIT AMerkulov 2015-04-24 --  /
//
//бит_ФормаВводаБюджетаВызовСервера.ОтправитьСообщениеКлиентСогласование(Объект.Ссылка, НастройкиДоставки, Объект.бит_БК_Инициатор);	
//Заменено на:
Процедура ОтправитьИнициаторуНаСервере()	
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-12 (#2939)
	Если Объект.СБ_НеОтправлятьУведомленияНаПочту Тогда 
		Возврат;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-12 (#2939)
		
	бит_ФормаВводаБюджетаВызовСервера.ОтправитьСообщениеИнициаторуОСменеСтатуса(Объект.Ссылка); 			   		 
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-02 (#2931)
КонецПроцедуры

&НаСервере
Процедура ОпределитьТипСогласования()
	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	бит_УстановленныеВизы.Объект КАК Объект,
	|	МАКСИМУМ(бит_УстановленныеВизы.ДатаУстановки) КАК ДатаУстановки,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА бит_УстановленныеВизы.Решение = ЗНАЧЕНИЕ(Справочник.бит_ВидыРешенийСогласования.Согласовано)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Решение,
	|	бит_УстановленныеВизы.Виза
	|ИЗ
	|	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы
	|ГДЕ
	|	(бит_УстановленныеВизы.ФизическоеЛицо = &Инициатор
	|			ИЛИ бит_УстановленныеВизы.Пользователь = &Инициатор) И бит_УстановленныеВизы.Объект = &Объект
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_УстановленныеВизы.Объект,
	|	бит_УстановленныеВизы.Виза");
	
	Запрос.УстановитьПараметр("Инициатор", мКэшЗначений.ТекущийИнициатор);
	Запрос.УстановитьПараметр("Объект", Объект.Ссылка);
	ВыборкаСогласования = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаСогласования.Следующий() И ВыборкаСогласования.Виза = Справочники.бит_Визы.бит_БК_Эксперт Тогда
		мКэшЗначений.Вставить("СогласованиеЭкспертом", Истина);	
	Иначе
		мКэшЗначений.Вставить("СогласованиеЭкспертом", Ложь);			
	КонецЕсли;
	
	
КонецПроцедуры
// - БИТ AMerkulov 2015-02-02  

// + БИТ AMerkulov 2014-11-12  
&НаКлиенте
Процедура ДобавитьКомментарий(Команда, Оповещение = Неопределено)
	
	Комментарий = "";
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ДобавитьКомментарийЗавершение", ЭтотОбъект, Новый Структура("Комментарий, Оповещение", Комментарий ,Оповещение)), Комментарий, "Введите свой комментарий");
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКомментарийЗавершение(Строка1, ДополнительныеПараметры) Экспорт
	
	Комментарий = ?(Строка1 = Неопределено, ДополнительныеПараметры.Комментарий, Строка1);
	
	Если ЗначениеЗаполнено(Комментарий) Тогда
		Строка = Объект.бит_Комментарии.Добавить();
		Строка.Пользователь = мКэшЗначений.ТекущийИнициатор;
		Строка.Комментарий = Комментарий;
	КонецЕсли;
	
	Если ДополнительныеПараметры.Оповещение <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.Оповещение);
	КонецЕсли;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-01-29 (#2975)
	Если НЕ ЗначениеЗаполнено(Комментарий) Тогда
		Возврат;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-01-29 (#2975)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-26 (#2873)	
	ОК_ДобавленыКомментарии = Объект.Проведен;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-26 (#2873)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-01-29 (#2975)
	Если Не Объект.Проведен Тогда 
		Модифицированность = Истина;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-01-29 (#2975)
	
КонецПроцедуры

&НаКлиенте
Процедура бит_КомментарииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура бит_КомментарииПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры
// - БИТ AMerkulov 2014-11-12  

// - БИТ AMerkulov 2014-12-15  
&НаКлиенте
Процедура ЗаполнитьКолонку(Команда)
	
	Если Элементы.БДДС.ТекущиеДанные <> Неопределено Тогда	
		ИмяКолонки = Элементы.БДДС.ТекущийЭлемент.Имя;	
		
		ТочкаВхода = Неопределено;
		ИмяРеквизита = Неопределено;	
		ИмяПоля = Неопределено;
		ИмяРеквизита = Неопределено;
		ИмяСвязанногоРеквизита = Неопределено;
		
		Если ИмяКолонки 	= "БДДСбит_СтавкаНДС" Тогда
			ТочкаВхода 		= "СтавкаНДС";	
			ИмяРеквизита 	= "бит_СтавкаНДС";
		ИначеЕсли ИмяКолонки  = "БДДСКоличество" Тогда
			ТочкаВхода 		= "Количество";	
			ИмяРеквизита 	= "Количество";			
		ИначеЕсли ИмяКолонки  = "БДДСбит_БК_ЦенаВВалютеСНДС" Тогда
			ТочкаВхода 		= "ЦенаВВалютеСНДС";	
			ИмяРеквизита 	= "бит_БК_ЦенаВВалютеСНДС";			
		ИначеЕсли ИмяКолонки  = "БДДСбит_БК_ЦенаВВалютеБезНДС" Тогда
			ТочкаВхода 		= "ЦенаВВалютеБезНДС";	
			ИмяРеквизита 	= "бит_БК_ЦенаВВалютеБезНДС";
		ИначеЕсли ИмяКолонки  = "БДДСбит_БК_СуммаВВалютеБезНДС" Тогда
			ТочкаВхода 		= "СуммаВВалютеБезНДС";	
			ИмяРеквизита 	= "бит_БК_СуммаВВалютеБезНДС";			
			
		ИначеЕсли ИмяКолонки  = "БДДСАналитика_2" Тогда
			ИмяПоля 		= "БДДСАналитика_2";	
			ИмяРеквизита 	= "Аналитика_2";		
		ИначеЕсли ИмяКолонки  = "БДДСбит_БК_Расход" Тогда
			ИмяПоля 		= "БДДСбит_БК_Расход";	
			ИмяРеквизита 	= "бит_БК_Расход";			
		ИначеЕсли ИмяКолонки  = "БДДСОК_НоменклатураПроизв" Тогда
			ИмяПоля 		= "БДДСОК_НоменклатураПроизв";	
			ИмяРеквизита 	= "ОК_НоменклатураПроизв";			
		ИначеЕсли ИмяКолонки  = "БДДССценарий" Тогда
			ИмяПоля 		= "БДДССценарий";	
			ИмяРеквизита 	= "Сценарий";			
		ИначеЕсли ИмяКолонки  = "БДДССтатьяОборотов" Тогда
			ИмяПоля 		= "БДДССтатьяОборотов";	
			ИмяРеквизита 	= "СтатьяОборотов";		
			
			// + БИТ AMerkulov 2015-06-15
			Значение = Элементы.БДДС.ТекущиеДанные["Сценарий"]; 			
			СкопироватьЗначение("Сценарий", Значение);			
			// + БИТ AMerkulov 2015-06-15
			
			
		ИначеЕсли ИмяКолонки  = "ПредставлениеПериода" Тогда
			ИмяПоля 		= "ПредставлениеПериода";	
			ИмяРеквизита 	= "ПредставлениеПериода";
			ИмяСвязанногоРеквизита ="Период";
		ИначеЕсли ИмяКолонки  = "БДДСбит_БК_ЕдиницаИзмерения" Тогда
			ИмяПоля 		= "БДДСбит_БК_ЕдиницаИзмерения";	
			ИмяРеквизита 	= "бит_БК_ЕдиницаИзмерения";

		//{ bit_SVKushnirenko 26.04.2017 #2811
		//ИсходныйКод{
		//ИначеЕсли ИмяКолонки  = "БДДСПроект" Тогда
		//	ИмяПоля 		= "БДДСПроект";	
		//	ИмяРеквизита 	= "Проект";			
		//}ИсходныйКод
		ИначеЕсли ИмяКолонки  = "БДДСПроектПоле" Тогда
			ИмяПоля 		= "БДДСПроектПоле";	
			ИмяРеквизита 	= "Проект";			
		//} bit_SVKushnirenko 26.04.2017 #2811
		
		//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Начало 20181106 (#3086)
		ИначеЕсли ИмяКолонки  = "БДДСЦФО" Тогда
			ИмяПоля 		= "БДДСЦФО";	
			ИмяРеквизита 	= "ЦФО";			
		ИначеЕсли ИмяКолонки  = "БДДСбит_БК_ВалютаДоговора" Тогда
			ТочкаВхода 		= "ВалютаКурсНаТекущуюДату";	
			ИмяРеквизита 	= "бит_БК_ВалютаДоговора";			
		//ОКЕЙ Вдовиченко Г.В. (СофтЛаб) Конец 20181106 (#3086)
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТочкаВхода) Тогда
			Значение = Элементы.БДДС.ТекущиеДанные[ИмяРеквизита]; 
			ЗаполнитьКолонкуТабличнойЧасти(ИмяКолонки, ТочкаВхода, ИмяРеквизита, Значение);
		ИначеЕсли ЗначениеЗаполнено(ИмяПоля) Тогда
			Значение = Элементы.БДДС.ТекущиеДанные[ИмяРеквизита]; 			
			СкопироватьЗначение(ИмяРеквизита, Значение);
			Если ЗначениеЗаполнено(ИмяСвязанногоРеквизита) Тогда
				Значение = Элементы.БДДС.ТекущиеДанные[ИмяСвязанногоРеквизита]; 						
				СкопироватьЗначение(ИмяСвязанногоРеквизита, Значение);				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	//{ bit_SVKushnirenko 25.04.2017 #2811
	ИзменениеОперацииДокументаПоИзменениюДанныхТЧБДДС();
	//} bit SVKushnirenko Bit 25.04.2017 #2811
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьЗначение(ИмяРеквизита, Значение)
	
	//{ bit SVKushnirenko Bit 06.06.2017 #2811
	//Отдельная реализация копирования для поля "Проект"
	Если ИмяРеквизита = "Проект" Тогда  
		
		Для Каждого пТекущаяСтрока Из Объект.БДДС Цикл
			
			Если ЗначениеДоступностиПроект(Объект.ВидОперации, пТекущаяСтрока.СтатьяОборотов) Тогда  
				
				пТекущаяСтрока[ИмяРеквизита] = Значение;
			Иначе
				
				пТекущаяСтрока[ИмяРеквизита] = Неопределено; //очищаем поле, которое не должно быть доступно
			КонецЕсли;
		КонецЦикла;
		
		Возврат;		
	КонецЕсли;
	//} bit SVKushnirenko Bit 06.06.2017 #2811
	
	Для Каждого Стр Из Объект.БДДС Цикл
		Стр[ИмяРеквизита] = Значение; 
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКолонкуТабличнойЧасти(ИмяКолонки, ТочкаВхода, ИмяРеквизита, Значение)
	
	ДокументОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.бит_ФормаВводаБюджета"));
	Для Каждого Стр Из ДокументОбъект.БДДС Цикл
		ТекущаяСтрока = ДокументОбъект.БДДС[Стр.НомерСтроки-1];
		ТекущаяСтрока[ИмяРеквизита] = Значение; 
		ДокументОбъект.ПересчитатьСуммы(ТочкаВхода, ТекущаяСтрока, Ложь);
	КонецЦикла;
	ЗначениеВДанныеФормы(ДокументОбъект,Объект);
	
КонецПроцедуры

// - БИТ AMerkulov 2014-12-15  

// + БИТ AMerkulov 2014-02-19 /  Установка бюджетодержателя
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	бит_ФормаВводаБюджетаВызовСервера.УстановитьБюджетодержателя(ТекущийОбъект.Ссылка);
	
	// BIT AMErkulov 29-12-2015 ++
	////+Сундукова 28.03.2016
	//ОбновитьДанныеПоОстаткуБюджета();
	//Сундукова - переношу в событие перед записью, чтобы сохранились данные
	//-Сундукова 28.03.2016
	// БИТ НАГолубева 29.02.2016
	// BIT AMErkulov 29-12-2015 --
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-09 (#2873)
	//Элементы.ФинансовыйКонтролер.ТолькоПросмотр = Объект.Проведен;
	Элементы.Эксперт1.ТолькоПросмотр = Объект.Проведен;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-09 (#2873)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-27 (#2916)
	УстановитьОтборФайлы();
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-27 (#2916)
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-07-06 (#4242)
	// Вызов механизма доступности элементов управления.
	УстановитьНастройкиДоступностиЭлементов();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-07-06 (#4242)
	
КонецПроцедуры

// + БИТ AMerkulov 2014-02-19 /  Установка бюджетодержателя

// + БИТ AMerkulov 2015-04-16 
&НаКлиенте
Процедура Отклонить(Команда)
	ТекстВопроса = "ru = 'Вы хотите отклонить/вернуть на доработку заявку?'";
	ПоказатьВопрос(Новый ОписаниеОповещения("ОтклонитьФрагмент", ЭтотОбъект), НСтр(ТекстВопроса), РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет);
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьФрагмент(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	
	Если Не Ответ = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли; 
	
	Оповещение = Новый ОписаниеОповещения("ОтклонитьЗавершение", ЭтотОбъект);
	ДобавитьКомментарий(Неопределено, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	ОтклонитьНаСервере();	
	
	ЗаполнитьКэшЗначений(мКэшЗначений);	
	УстановитьСтатусВФорме(мКэшЗначений.ТекущийСтатус, мКэшЗначений.ДатаИзмененияСтатуса);
	
	//+СБ Пискунова 08.08.2017  #2691
	
	//Если мКэшЗначений.ТекущийСтатус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_Согласована") ИЛИ мКэшЗначений.ТекущийСтатус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_Закрыта") Тогда
	//	Элементы.КнопкаСогласовать.Доступность = Ложь;
	//КонецЕсли;
	//УстановитьВидимостьКнопокСогласований();
	Элементы.Отклонить.Доступность 	= Ложь;
	Элементы.Отклонить.Видимость 	= Истина;
	Элементы.КнопкаСогласовать.Доступность 	= Ложь;
	Элементы.КнопкаСогласовать.Видимость 	= Истина;
	//-СБ Пискунова 08.08.2017  #2691

	Если НЕ ЗначениеЗаполнено(Объект.бит_БК_Инициатор) Тогда 
		ПоказатьПредупреждение(Неопределено, "Не указан ответственный");
		Возврат;
	КонецЕсли;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-27 (#2873)
	//Для сохранения комментариев
	ЗаписатьНаСервере(РежимЗаписиДокумента.Запись,Истина);
	ОК_ДобавленыКомментарии = Ложь;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-27 (#2873)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-08 (#2931)
	//НастройкиДоставки = Новый Структура;
	//бит_БК_Общий.ЗаполнитьНастройкиДоставки(НастройкиДоставки);
	//
	//Если НЕ бит_БК_Общий.ПодключениеКСерверуSMTP(НастройкиДоставки) Тогда 
	//	ПараметрыАутентификацииПользователя = бит_БК_ОбщийКлиент.ПолучитьПараметрыАутентификацииПользователя();
	//	Если ПараметрыАутентификацииПользователя = неопределено Тогда 
	//		Возврат;
	//	КонецЕсли;
	//	НастройкиДоставки.ПользовательSMTP = ПараметрыАутентификацииПользователя.ПользовательSMTP;
	//	НастройкиДоставки.ПарольSMTP = ПараметрыАутентификацииПользователя.ПарольSMTP;
	//КонецЕсли;	
	//
	//ОтправитьИнициаторуНаСервере(НастройкиДоставки);	
	//Заменено на:
	ОтправитьИнициаторуНаСервере();	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-08 (#2931)
	
	ДатаИзмененияСтатуса = ТекущаяДата();
	
	//ДействиеВыполнено = бит_Визирование.УстановитьСтатусОбъекта(Объект.Ссылка
	//,ПредопределенноеЗначение("Перечисление.бит_ВидыСтатусовОбъектов.Статус")
	//,ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_Черновик")
	//,		
	//,бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь")
	//,ДатаИзмененияСтатуса);
	//БИТ АКриштопов 05042016 ++
	//ДействиеВыполнено = бит_Визирование.УстановитьСтатусОбъекта(Объект.Ссылка
	//,ПредопределенноеЗначение("Перечисление.бит_ВидыСтатусовОбъектов.Статус")
	//,ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании")
	//,		
	//,бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь")
	//,ДатаИзмененияСтатуса);
	//БИТ АКриштопов 05042016 -- Нет необходимости.
	
	//Статус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_Черновик");
	//мКэшЗначений.ТекущийСтатус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_Черновик");
	
	Модифицированность = Ложь;
	
	УстановитьЗаголовокФормыДокумента();
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-25 (#2873)
	ПрочитатьУстановленныеВизы();
	ПеречитатьДоступностьКнопокМаршрута();
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-25 (#2873)

КонецПроцедуры

&НаСервере
Процедура ОтклонитьНаСервере()
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-18 (#2873)
	//Закомментировал, т.к. стираются данные ТЧ бит_Комментарии
	////+СБ. Пискунова 18.05.2017 #2691
	//ЭтаФорма.Прочитать();
	////-СБ. Пискунова 18.05.2017 #2691
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-18 (#2873)
	
	ДокументОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.бит_ФормаВводаБюджета"));	
	ДокументОбъект.Отклонить();
	ЗначениеВДанныеФормы(ДокументОбъект,Объект);     	
	Модифицированность=истина;
			
КонецПроцедуры

// - БИТ AMerkulov 2015-04-16 

// + БИТ AMerkulov 2015-04-22 
&НаКлиенте
Процедура СписокФайловДляОтправляемогоПисьмаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	
	ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("СписокФайловДляОтправляемогоПисьмаПередНачаломДобавленияЗавершение", ЭтотОбъект, Новый Структура("ДиалогОткрытияФайла", ДиалогОткрытияФайла)));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФайловДляОтправляемогоПисьмаПередНачаломДобавленияЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ДиалогОткрытияФайла = ДополнительныеПараметры.ДиалогОткрытияФайла;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		ПутьКФайлу = ДиалогОткрытияФайла.ПолноеИмяФайла;
		ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКФайлу);
		Имя = СтрЗаменить(ДиалогОткрытияФайла.ПолноеИмяФайла, ДиалогОткрытияФайла.Каталог, "");
		СписокФайловДляОтправляемогоПисьмаПередНачаломДобавленияНаСервере(ДвоичныеДанные,Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере 
Процедура СписокФайловДляОтправляемогоПисьмаПередНачаломДобавленияНаСервере(Данные,Имя)
	ХранилищеЭлемент = Справочники.бит_ХранилищеДополнительнойИнформации.СоздатьЭлемент();
	ХранилищеЭлемент.Хранилище = Новый ХранилищеЗначения(Данные);
	ХранилищеЭлемент.ИмяФайла = Имя;
	ХранилищеЭлемент.Записать();
	
	Строка = СписокФайловДляОтправляемогоПисьма.Добавить();
	Строка.ИмяФайла 	= Имя;
	Строка.Адрес		= ХранилищеЭлемент.Ссылка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения,СтандартнаяОбработка)   //Довбешка Т.И. 18.11.2016 запрещены серверные вызовы на платформе 8.3.8
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	ПередЗакрытиемНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПередЗакрытиемНаСервере()
	
	Для Каждого Строка Из СписокФайловДляОтправляемогоПисьма Цикл
		УстановитьПривилегированныйРежим(Истина);
		ОбъектХранилище = Строка.Адрес.ПолучитьОбъект();
		ОбъектХранилище.Удалить();
		УстановитьПривилегированныйРежим(Ложь);		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьНастройкиВложениями(НастройкиДоставки)
	
	МассивИменВложений 		= Новый Массив;	
	МассивСсылокВложений	= Новый Массив;	
	Для Каждого Строка Из СписокФайловДляОтправляемогоПисьма Цикл
		МассивИменВложений.Добавить(Строка.ИмяФайла);
		МассивСсылокВложений.Добавить(Строка.Адрес);
	КонецЦикла;
	
	НастройкиДоставки.Вставить("МассивИменВложений",МассивИменВложений);
	НастройкиДоставки.Вставить("МассивСсылокВложений",МассивСсылокВложений);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФайловДляОтправляемогоПисьмаПередУдалением(Элемент, Отказ)
	СписокФайловДляОтправляемогоПисьмаПередУдалениемНаСервере(Элемент.ТекущиеДанные.Адрес);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокФайловДляОтправляемогоПисьмаПередУдалениемНаСервере(Файл)
	Если ЗначениеЗаполнено(Файл) Тогда
		ОбъектХранилище = Файл.ПолучитьОбъект();
		ОбъектХранилище.Удалить();		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура КорректировкаБюджетаНаСервере()
	
КонецПроцедуры

//{bit_SVKushnirenko 26.05.2017 #2596
Функция ПослеЗакрытияПредупреждение(парПараметрыЗакрытия) Экспорт
	
	//Заглушка вызова предупреждения
КонецФункции // ПослеЗакрытияПредупреждение() }bit_SVKushnirenko 26.05.2017 #2596

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-11 (#2885)
&НаКлиенте
Процедура ОбработчикОтветаНаВопросПроцессЗапущен(РезультатВопроса,ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли; 
	
	КорректировкаБюджета();
	
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-11 (#2885)

&НаКлиенте
//{ bit_SVKushnirenko 28.05.2017 #2596
//ИсходныйКод{
//Процедура КорректировкаБюджета(Команда)
//}ИсходныйКод
Процедура КорректировкаБюджета(Команда = Неопределено)
//} bit_SVKushnirenko 28.05.2017 #2596

    //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-11 (#2885)
	Если Команда <> Неопределено И 
		Объект.СБ_ПроцессЗапущен
	Тогда 
	
	    ТекстВопроса = НСтр("ru='«Корректировка бюджета» приведет к остановке процесса согласования заявки, если ранее были получены решения по визам, то они будут очищены. Для повторного запуска процесса согласования, но только после того, как будет выполнена корректировка, необходимо нажать кнопку «Запуск процесса». Продолжить?'");			
		ОповещениеПроцессЗапущен = Новый ОписаниеОповещения("ОбработчикОтветаНаВопросПроцессЗапущен", ЭтотОбъект);  
		ПоказатьВопрос(ОповещениеПроцессЗапущен, ТекстВопроса, РежимДиалогаВопрос.ДаНет);			
	    Возврат;
	
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-11 (#2885)

	//{ bit SVKushnirenko Bit 26.05.2017 #2596
	Если НЕ ОценкаДоступностиКорректировкиБюджета() Тогда  
		
		пОповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждение",
		ЭтотОбъект);	
		
		ПоказатьПредупреждение(
		пОповещение,                        
		"У Вас недостаточно прав на корректировку бюджета по данной заявке или 
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-12 (#2853)
		//|заявка не проведена, или ее статус не ""На согласовании""!", 
		//Заменено на:
		|ее статус не ""На согласовании"", или по заявке отсутствуют суммы сверх бюджета!", 
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-12 (#2853)		
		30, // (необ.) таймаут в секундах
		"Предупреждение" // (необ.) заголовок
		);
		                  
		Возврат;		
		
	КонецЕсли;
	
	//} bit SVKushnirenko Bit 26.05.2017 #2596	
	
	//{ bit_SVKushnirenko 09.03.2017 #2596
	//ИсходныйКод{
	//// БИТ НАГолубева 03.03.2016 ++
	////СверхБюджета больше не используется
	//
	////РезультатОтвета = ОткрытьФормуМодально("Документ.бит_ФормаВводаБюджета.Форма.ФормаВыбораСуммыКПереносу");
	////
	////Если ЗначениеЗаполнено(РезультатОтвета) Тогда
	////	
	////	Если РезультатОтвета = "ТолькоСверхбюджета" Тогда
	////		СуммаККорректировке = Объект.БДДС.Итог("бит_БК_СуммаЗаРамкамиБюджетаБезНДС");	
	////	Иначе
	//СуммаККорректировке = Объект.БДДС.Итог("бит_БК_СуммаБезНДС");			
	////КонецЕсли;
	//
	//
	//ПараметрыФормы = Новый Структура;
	//СписокЦФО 		= Новый СписокЗначений;
	//СписокОбъектов 	= Новый СписокЗначений;
	//СписокСтатей	= Новый СписокЗначений;
	//
	//Для Каждого Стр Из Объект.БДДС Цикл
	//	СписокЦФО.Добавить(Стр.ЦФО);	
	//	СписокОбъектов.Добавить(Стр.Аналитика_2);	
	//	СписокСтатей.Добавить(Стр.СтатьяОборотов);	
	//КонецЦикла;
	//
	//// БИТ НАГолубева 03.03.2016 ++
	//СписокОбъектов.Добавить(ПолучитьОбъектСтроительства());
	//// БИТ НАГолубева 03.03.2016 --
	//
	//ПараметрыФормы.Вставить("СписокЦФО", 		СписокЦФО);
	//ПараметрыФормы.Вставить("СписокОбъектов", 		СписокОбъектов);
	//ПараметрыФормы.Вставить("СписокСтатей", 		СписокСтатей);
	//ПараметрыФормы.Вставить("РезультатОтвета", 	"Полностью");
	//ПараметрыФормы.Вставить("ФормаВвода", 		Объект.Ссылка);
	//
	//РезультатКорректировки = ОткрытьФормуМодально("Документ.бит_ФормаВводаБюджета.Форма.ФормаПодбораЗаписей", ПараметрыФормы);
	//
	//Если РезультатКорректировки = Истина Тогда
	//	УдалитьВизуИОтменитьПроведение();	
	//	
	//	УстановитьЗаголовокФормыДокумента();
	//	УстановитьВидимостьКнопокСогласований();
	//	ПрочитатьУстановленныеВизы();
	//	бит_УстановитьСписокФинКонтролеров();
	//	
	//	ЗаполнитьКэшЗначений(мКэшЗначений);	
	//	УстановитьСтатусВФорме(мКэшЗначений.ТекущийСтатус, мКэшЗначений.ДатаИзмененияСтатуса);	
	//	
	//КонецЕсли;
	////КонецЕсли;
	//}ИсходныйКод
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-03 (#2853)		
	Если НеобходимоОбновитьОстаткиПоБюджету() Тогда
		ТекстВопроса = НСтр("ru='Поле ""Остаток по бюджету"" содержит неактуальные данные. Выполнить пересчет остатков?'");			
		пОповещение = Новый ОписаниеОповещения("ОбработчикОтветаНаВопросКЗ", ЭтотОбъект);  
		ПоказатьВопрос(пОповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);			
		Возврат;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-03 (#2853)		
	
	//Передача параметров в форму подбора
    пОповещение = Новый ОписаниеОповещения("ОбработчикЗавершенияПодбораКорректировки", ЭтотОбъект);  
    пПараметрыФормы = Новый Структура("ФВБСсылка, ХранТЧБДДС, ФВБНомерЗаявкиШапка", 
	Объект.Ссылка, 
	ВыгрузитьБДДС(Объект.БДДС),
	Объект.бит_БК_НомерЗаявки); 
	
	//Показ подбора, возможное формирования корректировки
	ОткрытьФорму("Документ.бит_ФормаВводаБюджета.Форма.фрмПодборКорректировкиБюджета", пПараметрыФормы, ЭтаФорма, Объект.Ссылка,,, пОповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//} bit_SVKushnirenko 09.03.2017 #2596 		
КонецПроцедуры

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-03 (#2853)		
Функция НеобходимоОбновитьОстаткиПоБюджету()
	
	ТаблицаПоДаннымКЗ = ПолучитьТаблицуКЗ();
	Если ТаблицаПоДаннымКЗ.Количество()>0 Тогда 
		Возврат ТаблицаПоДаннымКЗ.Найти(1,"СверхБюджетаПризнак") = Неопределено;
	КонецЕсли;
			
КонецФункции
			
Функция ПолучитьТаблицуКЗ()
	
	пТЧДокумента = Объект.БДДС.Выгрузить().Скопировать();
	
	//Для формирования данных БК
	пТЧДляЗапросаБК = пТЧДокумента.Скопировать();
	пКолонки = пТЧДляЗапросаБК.Колонки;
	пКолонки.Сумма.Имя = "бкСуммаСНДС";
	пКолонки.бит_БК_СуммаБезНДС.Имя = "Сумма";
	
	Возврат бит_БК_Общий.БКПоДаннымБДДС(пТЧДляЗапросаБК, Объект.бит_БК_НомерЗаявки,  Объект.Ссылка);
	
КонецФункции

&НаКлиенте
Процедура ОбработчикОтветаНаВопросКЗ(РезультатВопроса,ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли; 
	
	ПривелегированноПерепровести("ОбновлениеОстатков");		
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-26 (#2873)
	Прочитать();
	ПеречитатьДоступностьКнопокМаршрута();
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-26 (#2873)
	
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-03 (#2853)

//{bit_SVKushnirenko 10.03.2017 #2596
//Выгружает данные ТЧ БДДС в хранилище и возвращает УИД хранилища значения с содержанием ТЧ документа
// Параметры:
//парТЧБДДС - ТЧ БДДС для выгрузки в хранилище (меньше клиент-сервер трафик)
//парУИДТЧ - УИД временного хранилища данных ТЧ, если неопределено, будет создан новое значение адреса в хранилище
&НаСервереБезКонтекста
Функция ВыгрузитьБДДС(Знач парТЧБДДС, парУИДТЧ = Неопределено)

	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-18 (#3078)	
	//пТЧБДДС = парТЧБДДС.Выгрузить(, "Сценарий, Период, ЦФО, СтатьяОборотов, Проект, Аналитика_1, Аналитика_2, бит_БК_СуммаБезНДС");
	//Заменено на:
	пТЧБДДС = парТЧБДДС.Выгрузить(, "Сценарий, Период, ЦФО, СтатьяОборотов, Проект, Аналитика_1, Аналитика_2, Контрагент, ДоговорКонтрагента, бит_БК_СуммаБезНДС");
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-18 (#3078)
	пТЧБДДС.Колонки.бит_БК_СуммаБезНДС.Имя = "Сумма";
	Возврат ПоместитьВоВременноеХранилище(пТЧБДДС, ?(парУИДТЧ = Неопределено, Новый УникальныйИдентификатор(), парУИДТЧ));
КонецФункции // ВыгрузитьБДДС() }bit_SVKushnirenko 10.03.2017 #2596 

//{bit_SVKushnirenko 09.03.2017 #2596
//Обработка завершения работы с формой подбора данных в корректировку
&НаКлиенте
Функция ОбработчикЗавершенияПодбораКорректировки(парСтандантраяОбработка, парДополнительныеПараметры) Экспорт

	//Обновление данных ТЧ в связи с возможно созданной корректировкой
	//	УдалитьВизуИОтменитьПроведение();	
	//	
	//	УстановитьЗаголовокФормыДокумента();
	//	УстановитьВидимостьКнопокСогласований();
	//	ПрочитатьУстановленныеВизы();
	//	бит_УстановитьСписокФинКонтролеров();
	//	
	//	ЗаполнитьКэшЗначений(мКэшЗначений);	
	//	УстановитьСтатусВФорме(мКэшЗначений.ТекущийСтатус, мКэшЗначений.ДатаИзмененияСтатуса);	
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-26 (#2873)
	Прочитать();
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-26 (#2873)
	
КонецФункции // СтартОбновленияДанных() }bit_SVKushnirenko 09.03.2017 #2596

&НаКлиенте
Процедура КорректировкаБюджетаВопрос(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	КодВозврата = РезультатВопроса;
	Если КодВозврата = КодВозвратаДиалога.Нет ИЛИ КодВозврата = КодВозвратаДиалога.Таймаут Тогда 
		Возврат;
	КонецЕсли;
	Записать();			
	
	КорректировкаБюджетаВыборСуммыКПереносу();
	
КонецПроцедуры

&НаКлиенте
Процедура КорректировкаБюджетаВыборСуммыКПереносу()
	
	ОткрытьФорму("Документ.бит_ФормаВводаБюджета.Форма.ФормаВыбораСуммыКПереносу",,,,,, Новый ОписаниеОповещения("КорректировкаБюджетаФрагмент", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура КорректировкаБюджетаФрагмент(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатОтвета = Результат;
	
	Если ЗначениеЗаполнено(РезультатОтвета) Тогда
		
		//Если РезультатОтвета = "ТолькоСверхбюджета" Тогда
		//	СуммаККорректировке = Объект.БДДС.Итог("бит_БК_СуммаЗаРамкамиБюджетаБезНДС");	
		//Иначе
		
		//{ bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
		//+Сенин С.В. 10.11.16 №2596
		//  СуммаККорректировке = Объект.БДДС.Итог("бит_БК_СуммаБезНДС");			
		СуммаККорректировке = Объект.БДДС[0].ОстатокПоБюджету;	//Сверхбюджета
		//-Сенин С.В. 10.11.16 №2596
		//} bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
		
		//КонецЕсли;
		
		
		ПараметрыФормы = Новый Структура;
		СписокЦФО 		= Новый СписокЗначений;
		СписокОбъектов 	= Новый СписокЗначений;
		СписокСтатей	= Новый СписокЗначений;
		
		Для Каждого Стр Из Объект.БДДС Цикл
			СписокЦФО.Добавить(Стр.ЦФО);	
			СписокОбъектов.Добавить(Стр.Аналитика_2);	
			СписокСтатей.Добавить(Стр.СтатьяОборотов);	
		КонецЦикла;
		
		ПараметрыФормы.Вставить("СписокЦФО", 		СписокЦФО);
		ПараметрыФормы.Вставить("СписокОбъектов", 		СписокОбъектов);
		ПараметрыФормы.Вставить("СписокСтатей", 		СписокСтатей);
		ПараметрыФормы.Вставить("РезультатОтвета", 	РезультатОтвета);
		ПараметрыФормы.Вставить("ФормаВвода", 		Объект.Ссылка);
		
		ОткрытьФорму("Документ.бит_ФормаВводаБюджета.Форма.ФормаПодбораЗаписей", ПараметрыФормы,,,,, Новый ОписаниеОповещения("КорректировкаБюджетаПодборЗаписей", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		Возврат;
		
	КонецЕсли;
	
	КорректировкаБюджетаФрагментЗавершение();
	
КонецПроцедуры

&НаКлиенте
Процедура КорректировкаБюджетаПодборЗаписей(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатКорректировки = Результат;
	
	КорректировкаБюджетаФрагментЗавершение();
	
КонецПроцедуры

&НаКлиенте
Процедура КорректировкаБюджетаФрагментЗавершение()
	
	КорректировкаБюджетаНаСервере();
	
КонецПроцедуры

// - БИТ AMerkulov 2015-04-22 

&НаКлиенте
Процедура ПредпологаемыйКонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура("РежимВыбора, Отбор", Истина, Новый Структура("ОК_КонтрагентБК",Истина));		
	ОткрытьФорму("Справочник.Контрагенты.Форма.битФормаВыбораУправляемая", ПараметрыФормы,,,,, Новый ОписаниеОповещения("ПредпологаемыйКонтрагентНачалоВыбораЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредпологаемыйКонтрагентНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	выбранноеЗначение=Результат; 
	
	Если не выбранноеЗначение=неопределено тогда
		Объект.бит_БК_ПредпологаемыйКонтрагент=выбранноеЗначение;
		ПредпологаемыйКонтрагентПриИзменении(0);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОпределитьСценарийПоСтатьеОборотов(ТекущиеДанные, ВидОперации = Неопределено, мКэшЗначений = Неопределено)
	Если (ВидОперации = Неопределено
		ИЛИ ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный
		ИЛИ ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный
		ИЛИ ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный)
		
		И ТекущиеДанные <> Неопределено  
		И ТипЗнч(ТекущиеДанные.СтатьяОборотов) = Тип("СправочникСсылка.бит_СтатьиОборотов")  Тогда
		
		// + БИТ AMerkulov 2014-08-13 
		ВидСтатьи = ПолучитьВидСтатьи(ТекущиеДанные.СтатьяОборотов);
		
		Если ВидСтатьи =  ПредопределенноеЗначение("Справочник.бит_ВидыСтатейОборотов.ИнвестиционнаяДеятельность") Тогда
			ТекущиеДанные.Сценарий = ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_Инвест");
		ИначеЕсли ВидСтатьи =  ПредопределенноеЗначение("Справочник.бит_ВидыСтатейОборотов.Выручка") Тогда
			ТекущиеДанные.Сценарий = ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_У");
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-06-29 (#2850)		
			ТекущиеДанные.Проект = Неопределено;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-06-29 (#2850)
		КонецЕсли;
		// - БИТ AMerkulov 2014-08-13  
	КонецЕсли;
КонецФункции

//{bit_SVKushnirenko 04.04.2017 #2816
// Возвращает массив уникальных контролируемых сценариев для текущей формы ввода
// Параметры:
//парТЧБДДС - табличная часть документа (ДанныеФормыКоллекция)
&НаСервереБезКонтекста
Функция ПолучитьМассивУникальныхКонтролируемыхСценариев(знач парТЧБДДС)

	пМассивСценариев = парТЧБДДС.Выгрузить(, "Сценарий");
	Если пМассивСценариев.Количество() = 0 Тогда  
		
		Возврат Неопределено;
	Иначе
		
		пЗапрос = Новый Запрос;
		пЗапрос.Текст = 
		" ВЫБРАТЬ
		|	ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования) КАК СценарийКонтролируемый,
		|	МАКСИМУМ(ВЫРАЗИТЬ(бит_СоответствияАналитик.ЛеваяАналитика_1 КАК Справочник.СценарииПланирования)) КАК СценарийКонтролирующий
		|ИЗ
		|	РегистрСведений.бит_БК_НастройкиБК КАК бит_БК_НастройкиБК
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СоответствияАналитик КАК бит_СоответствияАналитик
		|		ПО ((ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования)) = (ВЫРАЗИТЬ(бит_СоответствияАналитик.ПраваяАналитика_1 КАК Справочник.СценарииПланирования)))
		|ГДЕ
		|	бит_БК_НастройкиБК.Группа = ""Контроль бюджета""
		|	И бит_СоответствияАналитик.ВидСоответствия.Код = ""бит_БК_СценарийВСценарийКонтролируемый""
		|	И ВЫРАЗИТЬ(бит_СоответствияАналитик.ЛеваяАналитика_1 КАК Справочник.СценарииПланирования) В (&пзКонтролирующиеСценарии)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования)";
		
		пЗапрос.УстановитьПараметр("пзКонтролирующиеСценарии", пМассивСценариев);
		
		пТЗРез = пЗапрос.Выполнить().Выгрузить();
		
		Если пТЗРез.Количество() = 0 Тогда  
			
			Возврат Неопределено;
		КонецЕсли;
		
		пСписокЗначений = Новый СписокЗначений;
		пСписокЗначений.ЗагрузитьЗначения(пТЗРез.ВыгрузитьКолонку("СценарийКонтролируемый"));
		Возврат пСписокЗначений;
	КонецЕсли;
КонецФункции // ПолучитьМассивУникальныхКонтролируемыхСценариев() }bit_SVKushnirenko 04.04.2017 #2816 

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-07-10 (#3348)

//bit_SVKushnirenko 24.01.2017 #2657
// Проверяет необходимость закрытия остатков по зависимому сценарию для текущего документа по оперативным данным регистра
//Параметры:
//парЗаявка - ссылка на заявку в шапке 
//парДата - дата документа 
//парСсылаНаДокуменЗакрытия - возвращает ссылку на документ закрытия, если таковой будет создан

//&НаСервереБезКонтекста
//Процедура НеобходимостьИЗакрытиеОстаткаСервер(знач парЗаявка, парСсылаНаДокуменЗакрытия)
//	//Перем пТЗРасшифровки;
//	
//	пТекущийСтатусПривеленированногоРежима  = ПривилегированныйРежим();
//	УстановитьПривилегированныйРежим(Истина);
//	
//	пЗапрос = Новый Запрос;
//	пЗапрос.Текст = 
//	
//	//{ bit_SVKushnirenko 05.04.2017 #2816
//	//ИсходныйКод{
//	//"ВЫБРАТЬ
//	//|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов КАК СтатьяОборотов,
//	//|	НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ) КАК Период,
//	//|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий КАК Сценарий,
//	//|	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО КАК ЦФО,
//	//|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект КАК Проект,
//	//|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый КАК СценарийКонтролируемый,
//	//|	бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот - бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот КАК Разница,
//	//|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета) КАК Аналитика_1,
//	//|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 КАК Справочник.ОбъектыСтроительства) КАК Аналитика_2
//	//|ПОМЕСТИТЬ Подготовка
//	//|ИЗ
//	//|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(, , Месяц, Аналитика_1 = &пзЗаявка) КАК бит_КонтрольныеЗначенияБюджетовОбороты
//	//|
//	//|ИНДЕКСИРОВАТЬ ПО
//	//|	СтатьяОборотов,
//	//|	Сценарий,
//	//|	ЦФО,
//	//|	Проект,
//	//|	Аналитика_1,
//	//|	Аналитика_2
//	//|;
//	//|
//	//|////////////////////////////////////////////////////////////////////////////////
//	//|ВЫБРАТЬ
//	//|	Подготовка.СтатьяОборотов,
//	//|	Подготовка.Период,
//	//|	Подготовка.Сценарий КАК Сценарий,
//	//|	Подготовка.ЦФО,
//	//|	Подготовка.Проект,
//	//|	Подготовка.СценарийКонтролируемый,
//	//|	Подготовка.Аналитика_1,
//	//|	Подготовка.Аналитика_2,
//	//|	СУММА(Подготовка.Разница) КАК СуммаОстаток,
//	//|	СУММА(Подготовка.Разница) КАК СуммаКонтроль
//	//|ПОМЕСТИТЬ втПредфинал
//	//|ИЗ
//	//|	Подготовка КАК Подготовка
//	//|
//	//|СГРУППИРОВАТЬ ПО
//	//|	Подготовка.Аналитика_1,
//	//|	Подготовка.СтатьяОборотов,
//	//|	Подготовка.Проект,
//	//|	Подготовка.СценарийКонтролируемый,
//	//|	Подготовка.Сценарий,
//	//|	Подготовка.ЦФО,
//	//|	Подготовка.Аналитика_2,
//	//|	Подготовка.Период
//	//|
//	//|ИНДЕКСИРОВАТЬ ПО
//	//|	Сценарий
//	//|;
//	//|
//	//|////////////////////////////////////////////////////////////////////////////////
//	//|ВЫБРАТЬ
//	//|	втПредфинал.СтатьяОборотов,
//	//|	втПредфинал.Период,
//	//|	втПредфинал.Сценарий,
//	//|	втПредфинал.ЦФО,
//	//|	втПредфинал.Проект,
//	//|	втПредфинал.СценарийКонтролируемый,
//	//|	втПредфинал.Аналитика_1,
//	//|	втПредфинал.Аналитика_2,
//	//|	втПредфинал.СуммаОстаток,
//	//|	втПредфинал.СуммаКонтроль
//	//|ИЗ
//	//|	втПредфинал КАК втПредфинал
//	//|ГДЕ
//	//|	втПредфинал.СуммаОстаток > 0
//	//|;
//	//|
//	//|////////////////////////////////////////////////////////////////////////////////
//	//|УНИЧТОЖИТЬ Подготовка
//	//|;
//	//|
//	//|////////////////////////////////////////////////////////////////////////////////
//	//|УНИЧТОЖИТЬ втПредфинал ";
//	
//	"ВЫБРАТЬ
//	|	ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования) КАК Сценарий,
//	|	МАКСИМУМ(ВЫРАЗИТЬ(бит_СоответствияАналитик.ЛеваяАналитика_1 КАК Справочник.СценарииПланирования)) КАК СценарийКонтролирующий
//	|ПОМЕСТИТЬ СценарииБКОК
//	|ИЗ
//	|	РегистрСведений.бит_БК_НастройкиБК КАК бит_БК_НастройкиБК
//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СоответствияАналитик КАК бит_СоответствияАналитик
//	|		ПО ((ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования)) = (ВЫРАЗИТЬ(бит_СоответствияАналитик.ПраваяАналитика_1 КАК Справочник.СценарииПланирования)))
//	|ГДЕ
//	|	бит_БК_НастройкиБК.Группа = ""Контроль бюджета""
//	|	И бит_СоответствияАналитик.ВидСоответствия.Код = ""бит_БК_СценарийВСценарийКонтролируемый""
//	|	И ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования) В (&пзКонтролируемыеСценарии)
//	|
//	|СГРУППИРОВАТЬ ПО
//	|	ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования)
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ
//	|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов КАК СтатьяОборотов,
//	|	НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ) КАК Период,
//	|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий КАК Сценарий,
//	|	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО КАК ЦФО,
//	|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект КАК Проект,
//	|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый КАК СценарийКонтролируемый,
//	|	бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот - бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот КАК Разница,
//	|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета) КАК Аналитика_1,
//	|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 КАК Справочник.ОбъектыСтроительства) КАК Аналитика_2
//	|ПОМЕСТИТЬ Подготовка
//	|ИЗ
//	|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
//	|			,
//	|			,
//	|			Месяц,
//	|			Аналитика_1 = &пзЗаявка
//	|				И (Сценарий, СценарийКонтролируемый) В
//	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
//	|						СценарииБКОК.СценарийКонтролирующий,
//	|						СценарииБКОК.Сценарий
//	|					ИЗ
//	|						СценарииБКОК)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СценарииБКОК КАК СценарииБКОК
//	|		ПО бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий = СценарииБКОК.СценарийКонтролирующий
//	|			И бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый = СценарииБКОК.Сценарий
//	|
//	|ИНДЕКСИРОВАТЬ ПО
//	|	СтатьяОборотов,
//	|	Сценарий,
//	|	ЦФО,
//	|	Проект,
//	|	Аналитика_1,
//	|	Аналитика_2,
//	|	СценарийКонтролируемый,
//	|	Период
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ
//	|	Подготовка.СтатьяОборотов,
//	|	Подготовка.Период,
//	|	Подготовка.Сценарий КАК Сценарий,
//	|	Подготовка.ЦФО,
//	|	Подготовка.Проект,
//	|	Подготовка.СценарийКонтролируемый,
//	|	Подготовка.Аналитика_1,
//	|	Подготовка.Аналитика_2,
//	|	СУММА(Подготовка.Разница) КАК СуммаОстаток,
//	|	СУММА(Подготовка.Разница) КАК СуммаКонтроль
//	|ПОМЕСТИТЬ втПредфинал
//	|ИЗ
//	|	Подготовка КАК Подготовка
//	|
//	|СГРУППИРОВАТЬ ПО
//	|	Подготовка.Аналитика_1,
//	|	Подготовка.СтатьяОборотов,
//	|	Подготовка.Проект,
//	|	Подготовка.СценарийКонтролируемый,
//	|	Подготовка.Сценарий,
//	|	Подготовка.ЦФО,
//	|	Подготовка.Аналитика_2,
//	|	Подготовка.Период
//	|
//	|ИНДЕКСИРОВАТЬ ПО
//	|	Сценарий
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ
//	|	втПредфинал.СтатьяОборотов,
//	|	втПредфинал.Период,
//	|	втПредфинал.Сценарий,
//	|	втПредфинал.ЦФО,
//	|	втПредфинал.Проект,
//	|	втПредфинал.СценарийКонтролируемый,
//	|	втПредфинал.Аналитика_1,
//	|	втПредфинал.Аналитика_2,
//	|	втПредфинал.СуммаОстаток,
//	|	втПредфинал.СуммаКонтроль
//	|ИЗ
//	|	втПредфинал КАК втПредфинал
//	|ГДЕ
//	|	втПредфинал.СуммаОстаток > 0
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|УНИЧТОЖИТЬ Подготовка
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|УНИЧТОЖИТЬ втПредфинал
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|УНИЧТОЖИТЬ СценарииБКОК";
//	//} bit_SVKushnirenko 05.04.2017 #2816
//	
//	пЗапрос.Текст = бит_БК_Общий.КорректировкаТекстаЗапросаЗакрытия(пЗапрос.Текст);
//	пЗапрос.УстановитьПараметр("пзЗаявка", парЗаявка);
//	пЗапрос.УстановитьПараметр("пзКонтролируемыеСценарии", ПолучитьМассивУникальныхКонтролируемыхСценариев(парЗаявка.БДДС));  //*Дремов*перенес не перенесенную строку из тестовой 20.07.2017
//	
//	пТЗОстатковКЗакрытию = пЗапрос.Выполнить().Выгрузить();
//	
//	////
//	парСсылаНаДокуменЗакрытия = Неопределено;;
//	
//	//пТЧЗапросаБК = парКоллекцияБДДС.Выгрузить();
//	//пКолонки = пТЧЗапросаБК.Колонки;
//	//пКолонки.Сумма.Имя = "бкСуммаСНДС";
//	//пКолонки.бит_БК_СуммаБезНДС.Имя = "Сумма";
//	
//	//пЗависимыеСценарии = бит_БК_Общий.ПолучитьСоответствиеКонтроллируемыхСценариев(пТЧЗапросаБК.ВыгрузитьКолонку("Сценарий"));
//	//Для каждого пСтрокаБДДС Из пТЧЗапросаБК Цикл
//	//
//	//	пСтрокаБДДС.Сценарий = пЗависимыеСценарии[пСтрокаБДДС.Сценарий]; //поскольку типовая проверка остатков делается со стороны подчиненных сценариев
//	//	пСтрокаБДДС.Сумма = 0; //сумма текущей операции = 0, нас интересует полный остаток по всем операциям
//	//КонецЦикла; 
//	
//	//Получение сценариев с "аномально широкими" периодами ключевых аналитик более месяца (год и "без периода")
//	пНастройкиВыбораКЗБПоСценариям = бит_БК_общий.СценариПланированияНастройкиВыбораСумм();
//	пМассивАномальныхСценариев = Новый Массив();
//	пМассивСценариевПериодГод = Новый Массив();
//	
//	Для каждого пЭлементНастройкиПоСценарию Из пНастройкиВыбораКЗБПоСценариям Цикл
//		
//		пСписокКлючевыхАналитикСценария = пЭлементНастройкиПоСценарию.Значение;
//		Если пСписокКлючевыхАналитикСценария.НайтиПоЗначению(Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодВсе) <> Неопределено или
//			пСписокКлючевыхАналитикСценария.НайтиПоЗначению(Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодГод) <> Неопределено Тогда  
//			
//			пМассивАномальныхСценариев.Добавить(Справочники.СценарииПланирования[пЭлементНастройкиПоСценарию.Ключ]);
//		КонецЕсли;
//		
//		Если пСписокКлючевыхАналитикСценария.НайтиПоЗначению(Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодГод) <> Неопределено Тогда  
//			
//			пМассивСценариевПериодГод.Добавить(Справочники.СценарииПланирования[пЭлементНастройкиПоСценарию.Ключ]);
//		КонецЕсли;
//	КонецЦикла; 
//	
//	//Если бит_БК_Общий.АктуальноеСостояниеБК(пТЧЗапросаБК, парЗаявка,, пТЗРасшифровки) Тогда //есть незакрытые остатки, материал закрытия готов
//	Если  пТЗОстатковКЗакрытию.Количество() > 0 Тогда  //есть незакрытые остатки, материал закрытия готов
//		
//		пДокументЗакрытия = Документы.бит_БК_ЗакрытиеОстатков.СоздатьДокумент();
//		пДокументЗакрытия.Дата = ТекущаяДата();
//		пДокументЗакрытия.Комментарий = "Сформирован обработкой закрытия остатков " + ТекущаяДата();
//		пДокументЗакрытия.Ответственный = Пользователи.ТекущийПользователь();
//		пТабличнаяЧасть = пДокументЗакрытия.ТабличнаяЧасть;
//		
//		//пТЗРасшифровки.Свернуть("Период, Сценарий, СценарийКонтроллирующий, ИсхЦФО, ИсхСтатьяОборотов, ИсхПроект, ИсхАналитика_1, ИсхАналитика_2, ОстатокПослеОперации, ЕстьОстатокБюджетаПослеОперацииБольшеНуля", ""); //т.к. в результирующей ТЗ появляются дополнительные строки, как комбинации "Период/ИсхПериод/Период"
//		
//		//Для Каждого пТекСтрока Из пТЗРасшифровки Цикл
//		Для Каждого пТекСтрока Из пТЗОстатковКЗакрытию Цикл
//			
//			//Если НЕ пТекСтрока.ЕстьОстатокБюджетаПослеОперацииБольшеНуля Тогда
//			//	
//			//	Продолжить;				
//			//КонецЕсли;		 
//			
//			Если пМассивАномальныхСценариев.Найти(пТекСтрока.Сценарий) <> Неопределено Тогда // требуется распределение по периодам т.к. период планирования (месяц) явно не соответствует периоду ключевой аналитики сценария
//				
//				//Формирование структуры параметра для запроса распределения
//				пСтруктураОтбора = Новый Структура("СтатьяОборотов, СценарийКонтролируемый, ЦФО, Проект, Аналитика_1, Аналитика_2"); 
//				ЗаполнитьЗначенияСвойств(пСтруктураОтбора, пТекСтрока);
//				
//				пПериодНачало = Неопределено;
//				пПериодКонец = Неопределено;
//				
//				Если пМассивСценариевПериодГод.Найти(пТекСтрока.СценарийКонтролируемый) <> Неопределено  Тогда 
//					
//					пПериодНачало = НачалоГода(пТекСтрока.Период);
//					пПериодКонец = КонецГода(пТекСтрока.Период);
//				КонецЕсли;
//				
//				пТЗРаспределения = бит_БК_Общий.ПолучитьРаспределениеПоПериодамПланированияСверхМесячныхКлАН(пСтруктураОтбора, пТекСтрока.СуммаОстаток, пПериодНачало, пПериодКонец);
//				
//				Если пТЗРаспределения <> Неопределено и пТЗРаспределения.Количество() <>  0 Тогда  //выполняем заполнение по данным распределения 
//					
//					Для каждого пСтрокаРаспределения Из пТЗРаспределения Цикл
//						
//						пНоваяСтрока = пТабличнаяЧасть.Добавить();
//						ЗаполнитьЗначенияСвойств(пНоваяСтрока, пСтрокаРаспределения);
//						
//						пНоваяСтрока.ПричинаЗакрытия = Справочники.бит_ПричиныЗакрытияДокументовПланированияПлатежа.РешениеОЦР;
//						пНоваяСтрока.СуммаБезНДС = пСтрокаРаспределения.СуммаОстаток;
//						пНоваяСтрока.СтавкаНДС= Перечисления.СтавкиНДС.НДС18;
//						//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-11-08 (#3121)
//						Если пДокументЗакрытия.Дата >= Дата('20190101') Тогда 
//							пНоваяСтрока.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС20");
//						КонецЕсли;
//						//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-11-08 (#3121)
//						пНоваяСтрока.НДС = бит_БухгалтерияКлиентСервер.РассчитатьСуммуНДС(пНоваяСтрока.СуммаБезНДС, Истина, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(пНоваяСтрока.СтавкаНДС));
//						пНоваяСтрока.СуммаСНДС = пНоваяСтрока.СуммаБезНДС + пНоваяСтрока.НДС;			
//					КонецЦикла; 
//					
//					Продолжить; //завершена итерация "распределения", выполнение старого сценария заполнения прерывается для текущей строки данных закрытия
//				КонецЕсли;
//				
//				//если распределение не удалось, продолжаем выполнение заполнения закрытия "как есть", что есть ошибка по периодам, но правильно по балансу БК
//				пТекСтрока.Период = НачалоГода(ТекущаяДата()); //период закрытия ставим в начало текущего года - тоже неверно, но лучше, чем ничего, вообще это недопустимы
//			КонецЕсли;
//			
//			пНоваяСтрока = пТабличнаяЧасть.Добавить();
//			ЗаполнитьЗначенияСвойств(пНоваяСтрока, пТекСтрока);
//			
//			пНоваяСтрока.ПричинаЗакрытия = Справочники.бит_ПричиныЗакрытияДокументовПланированияПлатежа.РешениеОЦР;
//			пНоваяСтрока.СуммаБезНДС = пТекСтрока.СуммаОстаток;
//			пНоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
//			
//			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-11-08 (#3121)
//			Если пДокументЗакрытия.Дата >= Дата('20190101') Тогда 
//				пНоваяСтрока.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС20");
//			КонецЕсли;
//			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-11-08 (#3121)
//			
//			пНоваяСтрока.НДС = бит_БухгалтерияКлиентСервер.РассчитатьСуммуНДС(пНоваяСтрока.СуммаБезНДС, Истина, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(пНоваяСтрока.СтавкаНДС));
//			пНоваяСтрока.СуммаСНДС = пНоваяСтрока.СуммаБезНДС + пНоваяСтрока.НДС;			
//		КонецЦикла;
//		
//		Если пТабличнаяЧасть.Количество() = 0 Тогда
//			
//			Сообщить("Документ не создан: нет остатков для закрытия.", СтатусСообщения.Важное);
//			УстановитьПривилегированныйРежим(пТекущийСтатусПривеленированногоРежима);
//			Возврат;
//		КонецЕсли;		 
//		
//		Попытка
//			
//			пДокументЗакрытия.Записать(РежимЗаписиДокумента.Проведение);
//			Успешно = Истина;
//		Исключение
//			
//			Сообщить("Документ не удалось провести по причине:", СтатусСообщения.Важное);
//			Сообщить(ОписаниеОшибки());
//			Успешно = Ложь;
//		КонецПопытки;
//		
//		Если НЕ Успешно Тогда 
//			Попытка
//				
//				пДокументЗакрытия.Записать(РежимЗаписиДокумента.Запись);
//				Успешно = Истина;
//			Исключение
//				
//				Сообщить("Документ не удалось записать по причине:",СтатусСообщения.Важное);
//				Сообщить(ОписаниеОшибки());
//				Успешно = Ложь;
//			КонецПопытки;
//		КонецЕсли;
//		
//		Если Успешно Тогда 
//			
//			Сообщить("Создан документ: " + пДокументЗакрытия.Ссылка);
//			парСсылаНаДокуменЗакрытия = пДокументЗакрытия.Ссылка;
//		КонецЕсли; 
//	Иначе
//		
//		Сообщить("Данные для закрытия отсутствуют!");
//	КонецЕсли;
//	
//	УстановитьПривилегированныйРежим(пТекущийСтатусПривеленированногоРежима);
//КонецПроцедуры // НеобходимостьИЗакрытиеОстаткаСервер()
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-07-10 (#3348)

&НаКлиенте
Процедура ЗакрытьЗаявку(Команда)
	
	//{ bit_SVKushnirenko 24.01.2017 #2657
	//ИсходныйКод{
	//Ответ = Вопрос("Закрытие остатка приведет к закрытию заявки. Использовать в дальнейшем заявку будет невозможно. Продолжить закрытие?", РежимДиалогаВопрос.ДаНет);
	//Если Ответ <> КодВозвратаДиалога.Да Тогда
	//	Возврат;
	//КонецЕсли;	
	//
	//Если Объект.Ссылка.Пустая() Или Модифицированность Тогда
	//	Сообщить("Запишите заявку перед закрытием!");
	//	Возврат;
	//КонецЕсли;
	//
	//Если мКэшЗначений.ТекущийСтатус <> ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании") И  мКэшЗначений.ТекущийСтатус <> ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_Согласована") Тогда
	//	
	//	Сообщить("Можно закрывать заявку только в статусе ""На согласовании""/""Согласована""!");
	//	Возврат;
	//	
	//КонецЕсли;
	//
	////+Сундукова 14.04.16
	//
	////{ bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
	////ИсходныйКод{
	////+Сенин С.В. 12.10.16 №2657
	////Остаток = бит_БК_Общий.ПолучитьОстатокПоДокументу(Объект.Ссылка);
	////Если Остаток <= 0 тогда
	////	Ответ = Вопрос("Остаток по заявке ="+Строка(остаток)+" Установить статус 'Закрыта'?", РежимДиалогаВопрос.ДаНет);
	////	Если Ответ = КодВозвратаДиалога.Да Тогда//БИТ АКриштопов 16062016 №2518
	////		бит_БК_Общий.УстановитьСтатусЗаявкиЗакрытаПоОстатку(Остаток, Объект.Ссылка, Неопределено); 
	////	КонецЕсли;
	////	
	////КонецЕсли;
	////-Сенин С.В. 12.10.16 №2657
	////}ИсходныйКод
	////} bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
	//
	////-СУндукова 14.04.16
	//ЗакрытьЗаявкуНаСервере();
	//
	////	 + БИТ AMerkulov 2015-07-23 
	//ЗаполнитьКэшЗначений(мКэшЗначений);	
	//УстановитьСтатусВФорме(мКэшЗначений.ТекущийСтатус, мКэшЗначений.ДатаИзмененияСтатуса);
	////	 - БИТ AMerkulov 2015-07-23 
	//
	//ЭтаФорма.ОбновитьОтображениеДанных();
	//ПослеЗаписи(Неопределено);
	//}ИсходныйКод
	
	Если Объект.Ссылка.Пустая() Или Модифицированность Тогда
		Сообщить("Запишите заявку перед закрытием!");
		Возврат;
	КонецЕсли;
	
	Если мКэшЗначений.ТекущийСтатус <> ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании") И  мКэшЗначений.ТекущийСтатус <> ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_Согласована") Тогда
		
		Сообщить("Можно закрывать заявку только в статусе ""На согласовании""/""Согласована""!");
		Возврат;
	КонецЕсли;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-29 (#2885)
	//Ответ = Вопрос("Закрытие остатка приведет к закрытию заявки. Использовать в дальнейшем заявку будет невозможно. Продолжить закрытие?", РежимДиалогаВопрос.ДаНет);
	//Заменено на:
	ТекстВопроса = "Закрытие остатка приведет к закрытию заявки"
				   +?(мКэшЗначений.ТекущийСтатус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании")," и к остановке процесса согласования","")
				   +". Использовать в дальнейшем заявку будет невозможно. Продолжить закрытие?";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-29 (#2885)
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	пСсылкаНаДокЗакрытия = Неопределено;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-07-10 (#3348)
	//НеобходимостьИЗакрытиеОстаткаСервер(Объект.Ссылка, пСсылкаНаДокЗакрытия);
	//Заменено на:	
	ОК_ОбщегоНазначения.НеобходимостьИЗакрытиеОстаткаСервер(Объект.Ссылка, пСсылкаНаДокЗакрытия);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-07-10 (#3348)
	
	//Попытка обновить статусы на формах текущего сеанса
	пМассивОбновления = ПолучитьМассивЗаявокКоторыеМогутИзменитьСтатусПриДвижениях(пСсылкаНаДокЗакрытия);
	Если пМассивОбновления.Количество()  >  0 Тогда
		
		Оповестить("бит_БК_ИзмСтатусаПослеИзмБалансаЗаявок", Новый Структура("Ссылки", пМассивОбновления));
	КонецЕсли;
	//} bit_SVKushnirenko 24.01.2017 #2657
КонецПроцедуры

&НаСервере
Процедура ЗакрытьЗаявкуНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	ДокументОбъект = Документы.бит_БК_ЗакрытиеОстатков.СоздатьДокумент();
	ДокументОбъект.мВводИзТонкогоКлиента = Истина;
	ДокументОбъект.Дата = ТекущаяДата();
	
	//{ bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
	//ИсходныйКод{
	//+Сенин С.В. 17.10.16 №2657
	//Если Объект.Сценарий = Справочники.СценарииПланирования.Заявка_Инвест Тогда
	//	ДокументОбъект.ДополнительныеСвойства.Вставить("БИТ_ФормаДокумента","ФормаЗаявкаНаОперационныеРасходы");	
	//КонецЕсли; 
	//-Сенин С.В. 17.10.16 №2657
	//}ИсходныйКод
	//} bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
	
	ДокументОбъект.Заполнить(Объект.Ссылка);
	
	//{ bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
	//+Сенин С.В. 19.10.16 №2657
	Если ДокументОбъект.ТабличнаяЧасть.Количество()<>0 Тогда
		//-Сенин С.В. 19.10.16 №2657
		//} bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
		
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Проведен документ: " + ДокументОбъект;
			Сообщение.Сообщить();
		Исключение		
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Записан документ: " + ДокументОбъект;
			Сообщение.Сообщить();		
		КонецПопытки;
		
		//{ bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
		//+Сенин С.В. 19.10.16 №2657
	КонецЕсли;
	//-Сенин С.В. 19.10.16 №2657
	//} bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
	
	УстановитьПривилегированныйРежим(Ложь);
	
	
КонецПроцедуры


&НаСервере
Процедура УдалитьВизуИОтменитьПроведение()
	
	ДокументОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.бит_ФормаВводаБюджета"));	
	ДокументОбъект.УдалитьВизу();
	ЗначениеВДанныеФормы(ДокументОбъект,Объект); 
	
КонецПроцедуры




//БИТ Соломина (
&НаКлиенте
Процедура КомандаОтчетПоОплате(Команда)
	
	УсловияОтбора  = Новый Структура("ТекДок", Объект.Ссылка);
	ПараметрыФормы = Новый Структура("Отбор, СформироватьПриОткрытии", УсловияОтбора, Истина);
	ОткрытьФорму("Отчет.бит_ОтчетПоОплате.Форма.ФормаОтчета", ПараметрыФормы); 
	
КонецПроцедуры
//БИТ Соломина )

// БИТ НАГолубева 25.02.2016 ++
&НаКлиенте
Процедура ИнформацияСтатусПриИзменении(Элемент)
	
	Если (Объект.ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный ИЛИ
		Объект.ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный  
		ИЛИ	Объект.ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный) И
		НЕ (Статус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании") ИЛИ 
		Статус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_Согласована"))	Тогда 
		ПоказатьПредупреждение(Новый ОписаниеОповещения("СтатусПриИзмененииЗавершение", ЭтотОбъект), "Вручную можно установить статус <на согласовании> или <согласована>", 5);
	ИначеЕсли Объект.ВидОперации = мКэшЗначений.Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт И
		НЕ (Статус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаВизировании") ИЛИ 
		Статус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_Заключен"))	Тогда 
		ПоказатьПредупреждение(Новый ОписаниеОповещения("СтатусПриИзмененииЗавершение", ЭтотОбъект), "Вручную можно установить статус <на визировании> или <заключен>", 5);
	Иначе 
		мСтатусУстановленныйВручную = Статус;
		бит_БК_СтатусВручную = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзмененииЗавершение(ДополнительныеПараметры) Экспорт
	
	бит_БК_СтатусВручную = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДоступностьРоли(Роль)
	Возврат РольДоступна(Роль);
КонецФункции

&НаСервере
Процедура ОбновитьСтатус()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	бит_СтатусыОбъектов.Статус,
	|	бит_СтатусыОбъектов.ДатаИзмененияСтатуса
	|ИЗ
	|	РегистрСведений.бит_СтатусыОбъектов КАК бит_СтатусыОбъектов
	|ГДЕ
	|	бит_СтатусыОбъектов.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Статус = Выборка.Статус;
		Элементы.Декорация5.Заголовок = Выборка.ДатаИзмененияСтатуса;
		СтруктураПараметров  = Новый Структура("Статус,ДатаИзмененияСтатуса", Выборка.Статус, Выборка.ДатаИзмененияСтатуса);
		ИнформацияСтатус     = бит_ОбщегоНазначенияКлиентСервер.СформироватьИнформациюСтатус(СтруктураПараметров);
	КонецЕсли;
	
КонецПроцедуры
// БИТ НАГолубева 25.02.2016 --

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-26 (#2873)
&НаСервере
Процедура ЗаписатьНаСервере(РежимЗаписи,ОбменДанными = Ложь);
	ДокОб = РеквизитФормыВЗначение("Объект");
	Если ОбменДанными Тогда 
		ДокОб.ОбменДанными.Загрузка = Истина;
	КонецЕсли;
	Попытка
		ДокОб.Записать(РежимЗаписи);
	Исключение                                      		
		ДокОб.Записать(РежимЗаписиДокумента.Запись);		
	КонецПопытки;
	ЗначениеВРеквизитФормы(ДокОб,"Объект");
КонецПроцедуры
	
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-26 (#2873)

//{bit_SVKushnirenko 20.06.2017 #2759
//Обходной путь замешающий попытку вызова записи "НаСервере", через свертку объекта в значение, который конфликтует с действующими сценариями
//"клиентского" поведения и требует больших трудозатрат на рефакторинг, который заказчик не оплачивает и не понимает его необходимости.
// Параметры:
//парРежимЗаписи - режим записи документа (проведение/запись)
&НаКлиенте
//СОФТЛАБ Землянников К.А. 2017-08-29 (#2691) Начало
//Перенос из базы "EIS_ForTest"
//Функция ЗаписатьДокументНаКлиенте(парРежимЗаписи)
Функция ЗаписатьДокументНаКлиенте(парРежимЗаписи, ЗапускПроцесса = Ложь)
//СОФТЛАБ Землянников К.А. 2017-08-29 (#2691) Конец	

    Если Записать(Новый Структура("БИТ_ИнтерактивноеПроведение, РежимЗаписи", Истина, парРежимЗаписи)) Тогда  //запись в текущих параметрах успешна
			
		//СОФТЛАБ Землянников К.А. 2017-08-29 (#2691) Начало
		//Перенос из базы "EIS_ForTest"
		//ПрограммнаяМодификацияВиз();	
		ПрограммнаяМодификацияВиз(парРежимЗаписи, ЗапускПроцесса);	
		//СОФТЛАБ Землянников К.А. 2017-08-29 (#2691) Конец	
	ИначеЕсли парРежимЗаписи = РежимЗаписиДокумента.Проведение Тогда //попытка записи без проведения
		
		Если Записать(Новый Структура("РежимЗаписи, ОбменДаннымиВклКлиент", РежимЗаписиДокумента.Запись, Истина)) Тогда  //ОбменДаннымиВклКлиент = отключить проверки модуля, там специальный обработчик поставлен
			
			//СОФТЛАБ Землянников К.А. 2017-08-29 (#2691) Начало
			//Перенос из базы "EIS_ForTest"
			//ПрограммнаяМодификацияВиз();	
			ПрограммнаяМодификацияВиз(парРежимЗаписи, ЗапускПроцесса);	
			//СОФТЛАБ Землянников К.А. 2017-08-29 (#2691) Конец
		КонецЕсли;
	КонецЕсли;
	
	ОЦРНаименованиеПриИзменении(0); //восстановление отображения реквизитов, представленных на форме косвенно, которые после записи, сбрасываются
КонецФункции // ЗаписатьДокументНаКлиенте() }bit_SVKushnirenko 20.06.2017 #2759

// БИТ НАГолубева 29.02.2016 ++
&НаСервере
//{ bit_SVKushnirenko 20.06.2017 #2759
//ИсходныйКод{
//Процедура ЗаписатьДокумент(РежимЗаписи)
//}ИсходныйКод

//СОФТЛАБ Землянников К.А. 2017-08-29 (#2691) Начало
//Перенос из базы "EIS_ForTest"
//Процедура ПрограммнаяМодификацияВиз()
Процедура ПрограммнаяМодификацияВиз(РежимЗаписи, ЗапускПроцесса)
//СОФТЛАБ Землянников К.А. 2017-08-29 (#2691) Конец
			
//} bit_SVKushnirenko 20.06.2017 #2759
//СОФТЛАБ Землянников К.А. 2017-08-29 (#2691) Начало
//Перенос из базы "EIS_ForTest"
#Область Бекап

	////{ bit_SVKushnirenko 20.06.2017 #2759
	////ИсходныйКод{
	////ДокОб = РеквизитФормыВЗначение("Объект");
	////
	//////{ bit SVKushnirenko Bit 05.06.2017 #2745
	////ДокОб.ДополнительныеСвойства.Вставить("БИТ_ИнтерактивноеПроведение", Истина);	
	//////} bit SVKushnirenko Bit 05.06.2017 #2745
	////
	//////БИТ АКриштопов 16.03.2016 ++
	////
	//////{ bit SVKushnirenko Bit 06.06.2017 #2759
	////пИсключениеОперации = Ложь;
	//////} bit SVKushnirenko Bit 06.06.2017 #2759
	////
	////Попытка
	////	ДокОб.Записать(РежимЗаписи);
	////Исключение
	////	
	////	//{ bit SVKushnirenko Bit 06.06.2017 #2759
	////	пИсключениеОперации = Истина;
	////	ДокОб.ОбменДанными.Загрузка = Истина; //Отключение повторных проверок, котрые уже прошли на первой попытке и не нужны на второй
	////	//} bit SVKushnirenko Bit 06.06.2017 #2759
	////	
	////	ДокОб.Записать(РежимЗаписиДокумента.Запись);
	////КонецПопытки;
	//////БИТ АКриштопов 16.03.2016 --
	////ЗначениеВДанныеФормы(ДокОб, Объект);
	////
	//////{ bit SVKushnirenko Bit 06.06.2017 #2759
	////Если пИсключениеОперации и парПрерыватьПоИсключениюОперации Тогда  
	////	
	////	Возврат;
	////КонецЕсли;
	//////} bit SVKushnirenko Bit 06.06.2017 #2759
	////}ИсходныйКод
	//
	////Удаление неактуального кода, инициируется теперь все на клиенте
	////Подготовка переменных, которые многократно используются ниже, но извлекаются авторами "через точку"
	//пОбъектСсылка = Объект.Ссылка;
	//
	////} bit_SVKushnirenko 20.06.2017 #2759
	//
	//// БИТ НАГолубева 02.03.2016 ++
	//
	////{ bit_SVKushnirenko 20.06.2017 #2759
	////ИсходныйКод{
	////ЭтаФорма.Параметры.Ключ = Объект.Ссылка;
	////}ИсходныйКод
	//
	//ЭтаФорма.Параметры.Ключ = пОбъектСсылка; //не совсем понятно, для чего это сделано, оригинальная логика сохранена
	////} bit_SVKushnirenko 20.06.2017 #2759
	//
	//Модифицированность = Ложь;
	//Если Объект.Проведен Тогда 
	//	Элементы.БДДС.ТолькоПросмотр = Истина;
	//	Элементы.БДДСПроверитьПоБюджету.Доступность = Ложь;
	//Иначе
	//	Элементы.БДДС.ТолькоПросмотр = Ложь;
	//	Элементы.БДДСПроверитьПоБюджету.Доступность = Истина;
	//КонецЕсли;
	//// БИТ НАГолубева 02.03.2016 --
	//// БИТ АКриштопов 08.06.2016 ++
	////Обновляем перечень виз в регистре если их нет
	//
	////{ bit_SVKushnirenko 20.06.2017 #2759
	////ИсходныйКод{
	////СтруктураОтбор = Новый Структура("Объект",ДокОб.Ссылка);
	////}ИсходныйКод

	//СтруктураОтбор = Новый Структура("Объект", пОбъектСсылка);
	////} bit_SVKushnirenko 20.06.2017 #2759
	//
	//НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	//Если НаборЗаписей.Количество() = 0 Тогда 
	//	
	//	
	//	//{ bit_SVKushnirenko 20.06.2017 #2759
	//	//ИсходныйКод{
	//	//бит_Визирование.ОбновитьПереченьВиз(ДокОб.Ссылка,ДокОб.Дата,СтруктураОтбор);
	//	//}ИсходныйКод
	//	
	//	бит_Визирование.ОбновитьПереченьВиз(пОбъектСсылка, ЭтотОбъект.Дата, СтруктураОтбор);
	//	//} bit_SVKushnirenko 20.06.2017 #2759
	//	
	//КонецЕсли;
	////устанавливаем визу фин контролера
	//
	//// BIT Amerkulov 12112014 ++
	//Если Объект.ФинансовыйКонтролер <> ФинансовыйКонтролерИсходный 
	//	ИЛИ ФинансовыйКонтролерРешение <> ФинансовыйКонтролерРешениеИсходное Тогда
	//	Виза = Справочники.бит_Визы.бит_БК_ФинКонтролер;
	//	
	//	//{ bit_SVKushnirenko 20.06.2017 #2759
	//	//ИсходныйКод{
	//	//СтруктураОтбор = Новый Структура("Объект,Виза",ДокОб.Ссылка,Виза);
	//	//}ИсходныйКод
	//	
	//	СтруктураОтбор = Новый Структура("Объект, Виза", пОбъектСсылка, Виза);
	//	//} bit_SVKushnirenko 20.06.2017 #2759
	//	
	//	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	//	Если Не НаборЗаписей.Количество() = 0 Тогда
	//		НаборЗаписей[0].ФизическоеЛицо = Объект.ФинансовыйКонтролер;
	//		НаборЗаписей[0].Решение 		= ФинансовыйКонтролерРешение;
	//		НаборЗаписей[0].ДатаУстановки	= ТекущаяДата();
	//	Иначе
	//		СтруктураПараметров = Новый Структура;
	//		СтруктураПараметров.Вставить("Виза",Виза);
	//		СтруктураПараметров.Вставить("ДатаЗаполнения", ТекущаяДата());
	//		СтруктураПараметров.Вставить("ВремяНаУстановку",Виза.ВремяНаУстановку);
	//		СтруктураПараметров.Вставить("ОбъектСвязи", Объект.ФинансовыйКонтролер);
	//		СтруктураПараметров.Вставить("СтруктурноеПодразделение",Неопределено);
	//		СтруктураПараметров.Вставить("Решение",ФинансовыйКонтролерРешение);
	//		
	//		//{ bit_SVKushnirenko 20.06.2017 #2759
	//		//ИсходныйКод{
	//		//бит_Визирование.ДобавитьВизу(НаборЗаписей,ДокОб.Ссылка,СтруктураПараметров)
	//		//}ИсходныйКод
	//		
	//		бит_Визирование.ДобавитьВизу(НаборЗаписей, пОбъектСсылка, СтруктураПараметров)
	//		//} bit_SVKushnirenko 20.06.2017 #2759

	//	КонецЕсли;
	//	Если НаборЗаписей.Модифицированность() Тогда 
	//		НаборЗаписей.Записать();
	//	КонецЕсли;
	//КонецЕсли;
	//
	//Если Эксперт1 <> Эксперт1Исходный Тогда
	//	Виза = Справочники.бит_Визы.бит_БК_Эксперт;
	//	
	//	//{ bit_SVKushnirenko 20.06.2017 #2759
	//	//ИсходныйКод{
	//	//СтруктураОтбор = Новый Структура("Объект,Виза",ДокОб.Ссылка,Виза);
	//	//}ИсходныйКод
	//	
	//	СтруктураОтбор = Новый Структура("Объект, Виза", пОбъектСсылка, Виза);
	//	//} bit_SVKushnirenko 20.06.2017 #2759
	//	
	//	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	//	Если Не НаборЗаписей.Количество() = 0 Тогда
	//		
	//		НаборЗаписей[0].ФизическоеЛицо	= Эксперт1;
	//		НаборЗаписей[0].ДатаУстановки	= ТекущаяДата();
	//		
	//	Иначе
	//		СтруктураПараметров = Новый Структура;
	//		СтруктураПараметров.Вставить("Виза",Виза);
	//		СтруктураПараметров.Вставить("ДатаЗаполнения", ТекущаяДата());
	//		СтруктураПараметров.Вставить("ВремяНаУстановку",Виза.ВремяНаУстановку);
	//		СтруктураПараметров.Вставить("ОбъектСвязи", Эксперт1);
	//		СтруктураПараметров.Вставить("СтруктурноеПодразделение",Неопределено);
	//		
	//		//{ bit_SVKushnirenko 20.06.2017 #2759
	//		//ИсходныйКод{
	//		//бит_Визирование.ДобавитьВизу(НаборЗаписей,ДокОб.Ссылка,СтруктураПараметров)
	//		//}ИсходныйКод
	//		
	//		бит_Визирование.ДобавитьВизу(НаборЗаписей, пОбъектСсылка, СтруктураПараметров)
	//		//} bit_SVKushnirenko 20.06.2017 #2759
	//		
	//	КонецЕсли;
	//	Если НаборЗаписей.Модифицированность() Тогда 
	//		НаборЗаписей.Записать();
	//	КонецЕсли;
	//КонецЕсли;	
	//
	////Устанавливаем руководителя  //БИТ АКриштопов 2482
	////Если ЗначениеЗаполнено(РуководительИнициатора) Тогда 
	////	Виза = Справочники.бит_Визы.бит_БК_РуководительИнициатора;
	////	СтруктураОтбор = Новый Структура("Объект,Виза",ДокОб.Ссылка,Виза);
	////	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	////	Если Не НаборЗаписей.Количество() = 0 Тогда
	////		Если НЕ ЗначениеЗаполнено(НаборЗаписей[0].ФизическоеЛицо) Тогда 
	////			НаборЗаписей[0].ФизическоеЛицо = РуководительИнициатора;
	////		КонецЕсли;
	////	Иначе
	////		СтруктураПараметров = Новый Структура;
	////		СтруктураПараметров.Вставить("Виза",Виза);
	////		СтруктураПараметров.Вставить("ДатаЗаполнения", ТекущаяДата());
	////		СтруктураПараметров.Вставить("ВремяНаУстановку",Виза.ВремяНаУстановку);
	////		СтруктураПараметров.Вставить("ОбъектСвязи", РуководительИнициатора);
	////		СтруктураПараметров.Вставить("СтруктурноеПодразделение",Неопределено);
	////		
	////		бит_Визирование.ДобавитьВизу(НаборЗаписей,ДокОб.Ссылка,СтруктураПараметров)
	////	КонецЕсли;
	////КонецЕсли;
	//
	//Если НаборЗаписей.Модифицированность() Тогда 
	//	НаборЗаписей.Записать();
	//КонецЕсли;
	// БИТ АКриштопов 08.06.2016 --	
	#КонецОбласти
//СОФТЛАБ Землянников К.А. 2017-08-29 (#2691) Конец
	
	ДокОб = РеквизитФормыВЗначение("Объект");
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-01 (#2873)
	//Попытка
	//	ДокОб.Записать(РежимЗаписи);
	//Исключение
	//	ДокОб.Записать(РежимЗаписиДокумента.Запись);
	//КонецПопытки;
	
	////БИТ АКриштопов 16.03.2016 --
	//ЗначениеВДанныеФормы(ДокОб, Объект);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-01 (#2873)
	// БИТ НАГолубева 02.03.2016 ++
	ЭтаФорма.Параметры.Ключ = Объект.Ссылка;
	Модифицированность = Ложь;
	Если Объект.Проведен Тогда 
		Элементы.БДДС.ТолькоПросмотр = Истина;
		Элементы.БДДСПроверитьПоБюджету.Доступность = Ложь;
	Иначе
		Элементы.БДДС.ТолькоПросмотр = Ложь;
		Элементы.БДДСПроверитьПоБюджету.Доступность = Истина;
	КонецЕсли;

	//БИТ АКриштопов 16.03.2016 ++
	//+СБ Пискунова #2691 30.03.2017 :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	Отказать = Ложь;
	ТекстСообщения = "";
	ЭтаФорма.СБ_ТекстСообщения = "";

	Если ЗапускПроцесса Тогда 
		Если Объект.СБ_ЗапускПроцессаСПроверкой и НЕ Объект.СБ_ПроцессЗапущен Тогда
			СтруктураОтбор = Новый Структура("Объект",ДокОб.Ссылка);			
			НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
			Если НаборЗаписей.Количество() > 0 Тогда 
				Для каждого лЗапись из НаборЗаписей Цикл
					Если НЕ ЗначениеЗаполнено(лЗапись.ФизическоеЛицо) Тогда 						
						ТекстСообщения =  ТекстСообщения + "Визе: " + лЗапись.Виза +Символы.ПС; 						
						Отказать = Истина;
					КонецЕсли;
				КонецЦикла; 				
			КонецЕсли;   
		КонецЕсли;
		Если Отказать = Истина Тогда
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-02-01 (#2978)
			ТекстСообщения = ТекстСообщения + "
											  //|Обратитесь к финансовому контролёру.";
											  |Обратитесь к менеджеру по контроллингу.";  //ОКЕЙ Довбешка Т. 12.04.2021  AT-2083818
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-02-01 (#2978)
			//Сообщить("Маршрут не может быть запущен, т.к. не определено ФИО по: " + Символы.ПС + ТекстСообщения);
			ЭтаФорма.СБ_ТекстСообщения = "Маршрут не может быть запущен, т.к. не определено ФИО по: " + Символы.ПС + ТекстСообщения;
			бит_Визирование.ОчиститьВсеВизыБезусловно(Объект.Ссылка);
			Объект.СБ_ПроцессЗапущен = Ложь;
		Иначе
			Объект.СБ_ПроцессЗапущен = Истина;
			ЭтаФорма.СБ_ТекстСообщения ="";
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-19 (#2986)
			
			Если Объект.СБ_ЗапускПроцессаСПроверкой Тогда 
				Объект.СБ_ЗапускПроцессаСПроверкой = Ложь;		
			КонецЕсли;
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-19 (#2986)
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-29 (#2942)
			//Попытка
			//	ДокОб.Записать(РежимЗаписиДокумента.Проведение);
			//Исключение
			//	ДокОб.Записать(РежимЗаписиДокумента.Запись);
			//КонецПопытки;	
			//Заменено на:
			Попытка
				ДокОб.Записать(РежимЗаписиДокумента.Запись);
			Исключение
				
			КонецПопытки;	
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-29 (#2942)
		КонецЕсли;
		Модифицированность = Ложь;   		
	КонецЕсли;
	

	//Убираем назначение любых виз
	//
	//// БИТ НАГолубева 02.03.2016 --
	//// БИТ АКриштопов 08.06.2016 ++
	////Обновляем перечень виз в регистре если их нет
	//СтруктураОтбор = Новый Структура("Объект",ДокОб.Ссылка);
	//НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	//Если НаборЗаписей.Количество() = 0 Тогда 
	//	бит_Визирование.ОбновитьПереченьВиз(ДокОб.Ссылка,ДокОб.Дата,СтруктураОтбор);
	//КонецЕсли;
	////устанавливаем визу фин контролера
	//
	//// BIT Amerkulov 12112014 ++
	//Если Объект.ФинансовыйКонтролер <> ФинансовыйКонтролерИсходный 
	//	ИЛИ ФинансовыйКонтролерРешение <> ФинансовыйКонтролерРешениеИсходное Тогда
	//	Виза = Справочники.бит_Визы.бит_БК_ФинКонтролер;
	//	СтруктураОтбор = Новый Структура("Объект,Виза",ДокОб.Ссылка,Виза);
	//	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	//	Если Не НаборЗаписей.Количество() = 0 Тогда
	//		НаборЗаписей[0].ФизическоеЛицо = Объект.ФинансовыйКонтролер;
	//		НаборЗаписей[0].Решение 		= ФинансовыйКонтролерРешение;
	//		НаборЗаписей[0].ДатаУстановки	= ТекущаяДата();
	//	Иначе
	//		СтруктураПараметров = Новый Структура;
	//		СтруктураПараметров.Вставить("Виза",Виза);
	//		СтруктураПараметров.Вставить("ДатаЗаполнения", ТекущаяДата());
	//		СтруктураПараметров.Вставить("ВремяНаУстановку",Виза.ВремяНаУстановку);
	//		СтруктураПараметров.Вставить("ОбъектСвязи", Объект.ФинансовыйКонтролер);
	//		СтруктураПараметров.Вставить("СтруктурноеПодразделение",Неопределено);
	//		СтруктураПараметров.Вставить("Решение",ФинансовыйКонтролерРешение);
	//	
	//		бит_Визирование.ДобавитьВизу(НаборЗаписей,ДокОб.Ссылка,СтруктураПараметров)
	//	КонецЕсли;
	//	//Если НаборЗаписей.Модифицированность() Тогда 
	//	//	НаборЗаписей.Записать();
	//	//КонецЕсли;
	//КонецЕсли;
	//
	//Если Эксперт1 <> Эксперт1Исходный Тогда
	//	Виза = Справочники.бит_Визы.бит_БК_Эксперт;
	//	СтруктураОтбор = Новый Структура("Объект,Виза",ДокОб.Ссылка,Виза);
	//	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	//	Если Не НаборЗаписей.Количество() = 0 Тогда
	//		
	//		НаборЗаписей[0].ФизическоеЛицо	= Эксперт1;
	//		НаборЗаписей[0].ДатаУстановки	= ТекущаяДата();
	//		
	//	Иначе
	//		СтруктураПараметров = Новый Структура;
	//		СтруктураПараметров.Вставить("Виза",Виза);
	//		СтруктураПараметров.Вставить("ДатаЗаполнения", ТекущаяДата());
	//		СтруктураПараметров.Вставить("ВремяНаУстановку",Виза.ВремяНаУстановку);
	//		СтруктураПараметров.Вставить("ОбъектСвязи", Эксперт1);
	//		СтруктураПараметров.Вставить("СтруктурноеПодразделение",Неопределено);
	//		
	//		бит_Визирование.ДобавитьВизу(НаборЗаписей,ДокОб.Ссылка,СтруктураПараметров)
	//	КонецЕсли;
	//	//Если НаборЗаписей.Модифицированность() Тогда 
	//	//	НаборЗаписей.Записать();
	//	//КонецЕсли;
	//КонецЕсли;	
	//
	////Устанавливаем руководителя  //БИТ АКриштопов 2482
	////Если ЗначениеЗаполнено(РуководительИнициатора) Тогда 
	////	Виза = Справочники.бит_Визы.бит_БК_РуководительИнициатора;
	////	СтруктураОтбор = Новый Структура("Объект,Виза",ДокОб.Ссылка,Виза);
	////	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	////	Если Не НаборЗаписей.Количество() = 0 Тогда
	////		Если НЕ ЗначениеЗаполнено(НаборЗаписей[0].ФизическоеЛицо) Тогда 
	////			НаборЗаписей[0].ФизическоеЛицо = РуководительИнициатора;
	////		КонецЕсли;
	////	Иначе
	////		СтруктураПараметров = Новый Структура;
	////		СтруктураПараметров.Вставить("Виза",Виза);
	////		СтруктураПараметров.Вставить("ДатаЗаполнения", ТекущаяДата());
	////		СтруктураПараметров.Вставить("ВремяНаУстановку",Виза.ВремяНаУстановку);
	////		СтруктураПараметров.Вставить("ОбъектСвязи", РуководительИнициатора);
	////		СтруктураПараметров.Вставить("СтруктурноеПодразделение",Неопределено);
	////		
	////		бит_Визирование.ДобавитьВизу(НаборЗаписей,ДокОб.Ссылка,СтруктураПараметров)
	////	КонецЕсли;
	////КонецЕсли;
	//
	////Если НаборЗаписей.Модифицированность() Тогда 
	////	НаборЗаписей.Записать();
	////КонецЕсли;
	//// БИТ АКриштопов 08.06.2016 --	 
	
	//-СБ Пискунова #2691 30.03.2017  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

	
КонецПроцедуры
// БИТ НАГолубева 29.02.2016 --

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
//// БИТ НАГолубева 02.03.2016 ++
//&НаСервере
//Функция ПолучитьПредставлениеОбъекта()
//	Возврат Объект.Ссылка.Метаданные().ПредставлениеОбъекта;
//КонецФункции
//// БИТ НАГолубева 02.03.2016 --
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)

//{bit_SVKushnirenko 21.03.2017 #2596
//Возвращает параметры статуса документа, для расчета доступности команды запуска корректировки
&НаСервере
Функция ПолучитьПараметрыСатуса()

	бит_БК_Общий.ЗаполнитьОстаткиБюджетаИПризнакиБюджетногоКонтроля(Объект); //пересчет данных бюджетных остатков, на случай, если остатки поменялись вне событий текущей формы 
	
	пСтруктураПараметровСтатуса = Новый Структура("ДоступенСценарий, ОдинСценарий, Роль, ПользовательБюджетоДержатель, ПользовательИнициатор, ТекущийСтатус, ЕстьОстатокМеньшеНуля" );
	пТекущийПользователь = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
	
	//ДоступенСценарий
	пМассивЗаявкаУ = Объект.БДДС.НайтиСтроки(Новый Структура("Сценарий", Справочники.СценарииПланирования.Заявка_У));
	пМассивЗаявкаИнвест = Объект.БДДС.НайтиСтроки(Новый Структура("Сценарий", Справочники.СценарииПланирования.Заявка_Инвест));
	пСтруктураПараметровСтатуса.ДоступенСценарий = ?(пМассивЗаявкаУ.Количество() = 0, "", "Заявка_У") + "; " + ?(пМассивЗаявкаИнвест.Количество() = 0, "", "Заявка_Инвест");
	
	//Один сценарий
	пТЧЗначений = Объект.БДДС.Выгрузить();
	пТЧЗначений.Свернуть("Сценарий");
	пСтруктураПараметровСтатуса.ОдинСценарий = пТЧЗначений.Количество() = 1;
	
	//Роль 
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-14 (#2863)	
	//пСтруктураПараметровСтатуса.Роль = ?(РольДоступна("Guest"), "Guest", "") + "; " + ?(РольДоступна("ОК_ОЦР"), "ОК_ОЦР", "");
	//Заменено на:
	пСтруктураПараметровСтатуса.Роль = ?(УправлениеДоступом.ЕстьРоль("Guest",,Пользователи.ТекущийПользователь()), "Guest", "") + "; " + ?(УправлениеДоступом.ЕстьРоль("ОК_ОЦР",,Пользователи.ТекущийПользователь()), "ОК_ОЦР", "");
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-14 (#2863)	
	
	//ПользовательБюджетоДержатель
	пТЧОтбора = Объект.БДДС.Выгрузить(, "СтатьяОборотов, Аналитика_2, ЦФО");
	
	Если пТЧОтбора.Количество() = 0 Тогда  
		
		пСтруктураПараметровСтатуса.ПользовательБюджетоДержатель = Ложь;
	Иначе
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-17 (#2866)
		//пБюджетодержатели = ПолучитьБюджетодержателейПоДаннымАналитик(пТЧОтбора);
		//Заменено на:
		пБюджетодержатели = ПолучитьБюджетодержателейПоДаннымАналитик(пТЧОтбора,Объект.Ссылка);
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-17 (#2866)
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-14 (#2946)
		//Если пБюджетодержатели.Найти(пТекущийПользователь) = Неопределено Тогда  
		//Заменено на:
		пСтрокаБюджетодержатель = пБюджетодержатели.Найти(пТекущийПользователь);
		Если пСтрокаБюджетодержатель = Неопределено Тогда 
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-14 (#2946)  
			
			пСтруктураПараметровСтатуса.ПользовательБюджетоДержатель = Ложь;
		Иначе
			
			пСтруктураПараметровСтатуса.ПользовательБюджетоДержатель = Истина;
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-14 (#2946)
			Если Найти(пСтруктураПараметровСтатуса.Роль, "ОК_ОЦР") = 0 Тогда 
				пСтруктураПараметровСтатуса.Роль = "ОК_ОЦР; " + пСтруктураПараметровСтатуса.Роль
			КонецЕсли;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-14 (#2946)
			
		КонецЕсли;
	КонецЕсли;
	
	//ПользовательИнициатор 
	пИницатор = Объект.бит_БК_Инициатор;
	Если ЗначениеЗаполнено(пИницатор) и пИницатор.Пользователь = пТекущийПользователь Тогда  
		
		пСтруктураПараметровСтатуса.ПользовательИнициатор = Истина;
	Иначе
		
		пСтруктураПараметровСтатуса.ПользовательИнициатор = Ложь;
	КонецЕсли;
	
	//ТекущийСтатус 
	пСтруктураПараметровСтатуса.ТекущийСтатус = бит_БК_ПолучитьТекущийСтатусЗаявки(Объект.Ссылка).Статус;
	
	//ЕстьОстатокМеньшеНуля
	пЕстьОстатокМеньшеНуля = Ложь;
	Для каждого пСтрокаБДДС Из Объект.БДДС  Цикл
	
		Если пСтрокаБДДС.ОстатокПоБюджету < 0 Тогда  
			
			пЕстьОстатокМеньшеНуля = Истина; 
			Прервать;
		КонецЕсли;
	КонецЦикла; 
	пСтруктураПараметровСтатуса.ЕстьОстатокМеньшеНуля = пЕстьОстатокМеньшеНуля;
	
	Возврат пСтруктураПараметровСтатуса;
КонецФункции // ПолучитьПараметрыСатуса() }bit_SVKushnirenko 21.03.2017 #2596 

//{bit_SVKushnirenko 26.05.2017 #2596
//Управляет доступностью команды "Корректировка бюджета на форме"
&НаКлиенте
Функция ОценкаДоступностиКорректировкиБюджета()

	Если НЕ Объект.Проведен Тогда  
		
		Возврат Ложь; //непроведенные документы корректировать нельзя
	КонецЕсли;
	 
	
	//Заявка У; Заявка Инвест; Заявка У и Заявка Инвест
	 //ОЦР	Guest
	//Текущий пользователь равен визе Бюджетодержатель (из вкладки "Согласование")
	//Текущий пользователь равен ревизиту Инициатор (из шапки ФВБ)
	//На согласовании	"Черновик, На рассмотрении, На согласовании"	На согласовании	На согласовании
	//Структура("ДоступенСценарий, Роль, ПользовательБюджетоДержатель, ПользовательИнициатор, ТекущийСтатус, ЕстьОстатокМеньшеНуля" );
	
	//Получение на клиенте массива статей и объектов
	пПараметрыСтатуса = ПолучитьПараметрыСатуса();
	пДоступностьКорректировки = Ложь;
	
	Если
		//1 колонка матрицы
		(СтрНайти(пПараметрыСтатуса.ДоступенСценарий, "Заявка_У") <> 0 И 
		пПараметрыСтатуса.ОдинСценарий И
		СтрНайти(пПараметрыСтатуса.Роль, "ОК_ОЦР") <> 0 И
		пПараметрыСтатуса.ПользовательБюджетоДержатель И 
		//НЕ пПараметрыСтатуса.ПользовательИнициатор И
		пПараметрыСтатуса.ТекущийСтатус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании") И
		пПараметрыСтатуса.ЕстьОстатокМеньшеНуля) ИЛИ
		
		//2 колонка матрицы
		(СтрНайти(пПараметрыСтатуса.ДоступенСценарий, "Заявка_Инвест") <> 0 И 
		пПараметрыСтатуса.ОдинСценарий И
		СтрНайти(пПараметрыСтатуса.Роль, "Guest") <> 0 И
		//НЕ пПараметрыСтатуса.ПользовательБюджетоДержатель И 
		пПараметрыСтатуса.ПользовательИнициатор И
		(пПараметрыСтатуса.ТекущийСтатус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании")) И
		пПараметрыСтатуса.ЕстьОстатокМеньшеНуля) ИЛИ
		
		//3 колонка (<=> 1 колонка)  матрицы
		(СтрНайти(пПараметрыСтатуса.ДоступенСценарий, "Заявка_Инвест") <> 0 И 
		пПараметрыСтатуса.ОдинСценарий И
		СтрНайти(пПараметрыСтатуса.Роль, "ОК_ОЦР") <> 0 И
		пПараметрыСтатуса.ПользовательБюджетоДержатель И 
		//НЕ пПараметрыСтатуса.ПользовательИнициатор И
		пПараметрыСтатуса.ТекущийСтатус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании") И
		пПараметрыСтатуса.ЕстьОстатокМеньшеНуля) ИЛИ
		
		//4 колонка матрицы
		((СтрНайти(пПараметрыСтатуса.ДоступенСценарий, "Заявка_Инвест") и СтрНайти(пПараметрыСтатуса.ДоступенСценарий, "Заявка_У")) <> 0 И 
		НЕ пПараметрыСтатуса.ОдинСценарий И
		СтрНайти(пПараметрыСтатуса.Роль, "ОК_ОЦР") <> 0 И
		пПараметрыСтатуса.ПользовательБюджетоДержатель И 
		//НЕ пПараметрыСтатуса.ПользовательИнициатор И
		пПараметрыСтатуса.ТекущийСтатус = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании") И
		пПараметрыСтатуса.ЕстьОстатокМеньшеНуля)
		Тогда  
		
		пДоступностьКорректировки = Истина;
	КонецЕсли;
	
	Возврат пДоступностьКорректировки;
КонецФункции // ОценкаДоступностиКорректировкиБюджета() }bit_SVKushnirenko 26.05.2017 #2596

// БИТ НАГолубева 03.03.2016 ++
&НаКлиенте
Процедура УстановитьДоступностьЭлементов()
	
	Элементы.Группа1.ТолькоПросмотр = Объект.Проведен;
	Элементы.Группа4.ТолькоПросмотр = Объект.Проведен;
	Элементы.Группа7.ТолькоПросмотр = Объект.Проведен;
	Элементы.бит_Комментарии.ТолькоПросмотр = Ложь;
	Элементы.ДобавитьКомментарий.Доступность = Истина; 
	Элементы.БДДС.ТолькоПросмотр = Объект.Проведен;
	Элементы.БДДСПроверитьПоБюджету.Доступность = НЕ Объект.Проведен;
	Элементы.БДДСЗаполнитьКолонку.Доступность = НЕ Объект.Проведен;
	//БИТ АКриштопов 15.03.2016 ++
	//Элементы.БДДСКорректировкаБюджета.Доступность = ?(НЕ Объект.Проведен, ПолучитьДоступностьРоли("ОК_ОЦР"), Ложь);
	//{ bit_SVKushnirenko 14.03.2017 #2596
	//ИсходныйКод{
	//Если Не Объект.Проведен И ПолучитьДоступностьРоли("ОК_ОЦР") И ЗначениеЗаполнено(Объект.ОК_ОЦР) Тогда
	//	Попытка
	//		Если АвторизованныйПользователь() Тогда
	//			Элементы.БДДСКорректировкаБюджета.Доступность = Истина;
	//		Иначе 
	//			Элементы.БДДСКорректировкаБюджета.Доступность = Ложь;
	//		КонецЕсли;
	//	Исключение
	//		Элементы.БДДСКорректировкаБюджета.Доступность = Ложь;
	//	КонецПопытки;
	//Иначе
	//	Элементы.БДДСКорректировкаБюджета.Доступность = Ложь;
	//КонецЕсли;
	//}ИсходныйКод
	//замена кода доступности на запрет исполнения функционала
	//} bit_SVKushnirenko 14.03.2017 #2596

	//БИТ АКриштопов 15.03.2016 --
	
	//{ bit SVKushnirenko Bit 21.03.2017 #2759
	ДоступностьЦелиПриобретенияОборудования();
	//} bit SVKushnirenko Bit 21.03.2017 #2759
КонецПроцедуры

//bit_SVKushnirenko 16.01.2017 #2671.дпн
// Устанавливает доступность реквизита "Необходимость договора" и по данным итога по ТЧ
&НаКлиенте
Функция УстановитьДоступностьНеобходимостиДоговора()
	
	Если Объект.БДДС.Итог("бит_БК_СуммаБезНДС") > 100000 И 
		Элементы.ОК_НеобходимостьДоговора.Доступность Тогда 
		
		Элементы.ОК_НеобходимостьДоговора.Доступность = Ложь;
	Иначе
		
		Элементы.ОК_НеобходимостьДоговора.Доступность = Истина; //она должна как-то включаться, но если существуют дополнительные условия доступности этого реквизита, нужно текущее условие корректировать
	КонецЕсли;
КонецФункции // УстановитьДоступностьНеобходимостиДоговора()

&НаСервере
Функция ПрикрепитьПечатнуюФорму(НастройкиДоставки)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-05-07 (#2971)
	//МассивОбъектов = Новый Массив;
	//МассивОбъектов.Добавить(Объект.Ссылка);
	//
	////+СБ Пискунова 29.03.2017 #2691
	//
	////+Сенин С.В. 08.08.16 №2560
	////ТабДок = бит_ФормаВводаБюджетаВызовСервера.ПечатьOPEX_ПоулчитьТабличныйДокумент(Объект.Ссылка);
	////ТабДок = бит_ФормаВводаБюджетаВызовСервера.ПечатьФВБ_ПолучитьТабличныйДокумент(Объект.Ссылка);
	////-Сенин С.В. 08.08.16 №2560
	//МассивЦФО = Новый Массив;
	//МассивЦФО.Добавить(Справочники.Подразделения.НайтиПоКоду("000000114")); //Отдел по управлению недвижимостью
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-29 (#2899)	
	////МассивЦФО.Добавить(Справочники.Подразделения.НайтиПоКоду("000000038"));  //эксплуатация
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-29 (#2899)
	//
	////МассивОбъектов = Новый Массив;
	////МассивОбъектов.Добавить(СообщениеСтруктура.СБ_ФормаВводаБюджета);
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	//|	бит_ФормаВводаБюджетаБДДС.ЦФО
	//|ИЗ
	//|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	//|ГДЕ
	//|	бит_ФормаВводаБюджетаБДДС.Ссылка В(&Ссылка)
	//|	И бит_ФормаВводаБюджетаБДДС.ЦФО В(&ЦФО)
	//|	И бит_ФормаВводаБюджетаБДДС.Ссылка.ВидОперации = &ВидОперации";
	//
	//Запрос.УстановитьПараметр("ВидОперации", ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный"));
	//Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	//Запрос.УстановитьПараметр("ЦФО", МассивЦФО);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//Если РезультатЗапроса.Пустой() Тогда
	//	ТабДок = бит_ФормаВводаБюджетаВызовСервера.ПечатьФВБ_ПолучитьТабличныйДокумент(Объект.Ссылка);   					
	//Иначе
	//	ТабДок = бит_ФормаВводаБюджетаВызовСервера.ПечатьФВБ_ПолучитьТабличныйДокументПечатьСтроительство(Объект.Ссылка);
	//КонецЕсли; 
	//	
	////типФайла=ТипФайлаТабличногоДокумента.HTML;
	////ИмяФайла=СообщениеСтруктура.СБ_ФормаВводаБюджета.Номер;				
	////имяФайлаСвложением = КаталогВременныхФайлов()+ПараметрыСеанса.бит_ИдентификаторСеанса+ИмяФайла+"."+(строка(типФайла));			
	////ТабДок.Записать(имяФайлаСвложением,типФайла);
	////Сообщение.Вложения.Добавить(имяФайлаСвложением);
	//
	//НастройкиДоставки.Вставить("Вложение",Новый Структура("ТабДок,ИмяФайла",табДок,"Заявка"));
	////-СБ Пискунова 29.03.2017 #2691
	//Заменено на:
	НастройкиДоставки.Вставить("Вложение",Новый Структура("ТабДок,ИмяФайла",бит_ФормаВводаБюджетаВызовСервера.ПолучитьТабДокументВложения(Объект.Ссылка),"Заявка"));
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-05-07 (#2971)
	Возврат НастройкиДоставки;
	
КонецФункции

Функция ПолучитьОбъектСтроительства()
	
	Возврат Справочники.ОбъектыСтроительства.НайтиПоНаименованию("999 РАСПРЕДЕЛЯЕМЫЙ");
	
КонецФункции

Функция АвторизованныйПользователь() Экспорт
	//#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	//	УстановитьПривилегированныйРежим(Истина);
	//	Возврат ?(ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПользователь), ПараметрыСеанса.ТекущийПользователь, ПараметрыСеанса.ТекущийВнешнийПользователь);
	//#Иначе
	//	Возврат СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске().АвторизованныйПользователь;
	//#КонецЕсли
	Если Объект.ОК_ОЦР.Пользователь = ПараметрыСеанса.ТекущийПользователь Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

//БИТ АКриштопов 11042016 ++
&НаКлиенте
Процедура ФинансовыйКонтролерОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не СписокФинКонтролеров.НайтиПоЗначению(ВыбранноеЗначение) = Неопределено Тогда
		Объект.ФинансовыйКонтролер = ВыбранноеЗначение;
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Выбранный инициатор не является фин.контролером";
		Сообщение.Сообщить();
		Объект.ФинансовыйКонтролер = "";
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
КонецПроцедуры

//bit_SVKushnirenko 16.01.2017 #2671.дпн
//Возвращает сининоим в метаданных для  реквизита ТЧ БДДС
&НаСервереБезКонтекста
Функция СинонимРеквизитаТЧБДДС(парСсылка, парИмяРеквизита)
	
	Возврат парСсылка.Метаданные().ТабличныеЧасти.БДДС.Реквизиты[парИмяРеквизита].Синоним;
КонецФункции // МетаданныеРеквизитыБДДС()

//bit_SVKushnirenko 16.01.2017 #2671.дпн
// Выполняет заполнение полей ТЧ из данных формы по логике заказчика (все что указал инициатор, должно заполнять все строки ТЧ, если они не ограничены заполнением финконтроллера)
// Параметры:
//парТолькоУказанныеАтрибуты - список атрибутов ТЧ, которые следует заполнять в цикле (если атрибутов несколько, они перечисляются в формате "Атрибут1; Атрибут2; ..", 
//символ ";" всегда примыкает к имени атрибута, даже если он один в параметре
//если значение параметра не указано, будут заполняться все атрибуты
//парВыводитьПредупреждающиеСообщенияОКоллизиях - Истина = выводить предупреждающие сообщения о запретах финконтроля на изменения, Ложь = не выводить сообщения
&НаКлиенте
Функция ЗаполнениеЗначенийТЧизДанныхИнициатора(парТолькоУказанныеАтрибуты = "", парВыводитьПредупреждающиеСообщенияОКоллизиях = Ложь)
	
	пСообщениеОКоллизияхЗаполнения = "";
	Для Каждого пСтрокаБДДС Из Объект.БДДС Цикл
		
		пБлокировкаПолейФинКонтроллера = пСтрокаБДДС.бит_БК_БлокировкиПолейФинансовогоКонтроллера;
		
		пСтатистикаБлокировкиКолонок = "";
		Для каждого пСоответствие Из рекСоответствиеЗаполненияШапкиВТЧ Цикл //выполняем заполнение реквизитов по соответствию
			
			пИмяАтрибутаТЧ = пСоответствие.Представление;
			пИмяАтрибутаШапки = пСоответствие.Значение;
			
			Если парТолькоУказанныеАтрибуты <>  "" И
				Найти(парТолькоУказанныеАтрибуты, пИмяАтрибутаТЧ + ";") =  0  Тогда
				
				Продолжить; //такие атрибуты не изменяем
			КонецЕсли;
			
			пЗначениеАтрибутаШапки = Объект[пИмяАтрибутаШапки];
			Если Найти(пБлокировкаПолейФинКонтроллера, пИмяАтрибутаТЧ + ";") =  0 Тогда //Не запрещено заполнение установкой финконтроллера
				
				Если пЗначениеАтрибутаШапки <> пСтрокаБДДС[пИмяАтрибутаТЧ] Тогда //выполняем присвоение измененного значения					 
					
					пСтрокаБДДС[пИмяАтрибутаТЧ] = пЗначениеАтрибутаШапки;
					
					 //{ bit SVKushnirenko Bit 13.06.2017 #2735
					 Если пИмяАтрибутаШапки = "бит_БК_ВалютаДокумента" Тогда //принудительно копируем курс и кратность 
					 	
						 пСтрокаБДДС.бит_БК_Курс = Объект.бит_БК_КурсДокумента;
						 пСтрокаБДДС.бит_БК_Кратность = Объект.бит_БК_КратностьДокумента;
					 КонецЕсли;
					 //} bit SVKushnirenko Bit 13.06.2017 #2735
					 
					 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-05 (#2873)
					 Если пИмяАтрибутаШапки = "ОК_РазмерПредоплаты" Тогда
					 	пСтрокаБДДС.СБ_СуммаПредоплаты = пСтрокаБДДС.бит_БК_СуммаБезНДС * пЗначениеАтрибутаШапки/100;
					 КонецЕсли;
					 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-05 (#2873)
					 
				КонецЕсли;
			Иначе
				
				пСтатистикаБлокировкиКолонок = пСтатистикаБлокировкиКолонок + ?(пСтатистикаБлокировкиКолонок = "", "", ", ") + """" + СинонимРеквизитаТЧБДДС(Объект.Ссылка, пИмяАтрибутаТЧ) + """";
			КонецЕсли;
		КонецЦикла; //по соответствиям 
		
		Если пСтатистикаБлокировкиКолонок <>  ""  Тогда 
			
			пСообщениеОКоллизияхЗаполнения = пСообщениеОКоллизияхЗаполнения + Символы.ПС + "строка: [" + Формат(пСтрокаБДДС.НомерСтроки, "ЧДЦ=; ЧГ=0") + "], заблокировано: " + пСтатистикаБлокировкиКолонок;
		КонецЕсли;
	КонецЦикла; //по строкам БДДС
	
	Если парВыводитьПредупреждающиеСообщенияОКоллизиях И пСообщениеОКоллизияхЗаполнения <>  ""  Тогда
		
		Сообщить("Существуют данные заблокированные финансовым контроллером:" + пСообщениеОКоллизияхЗаполнения);
	КонецЕсли;
КонецФункции // ЗаполнениеЗначенийТЧизДанныхИнициатора()

&НаКлиенте
Процедура ОбъектОК_БК_ФормаОплатыПриИзменении(Элемент)
	//{ bit_SVKushnirenko 16.01.2017 #2671.дпн
	//ИсходныйКод{
	//Для Каждого ДанныеБДДС Из Объект.БДДС Цикл
	//	Если Не ЗначениеЗаполнено(ДанныеБДДС.бит_БК_ФормаОплаты) 
	//		ИЛИ ДанныеБДДС.бит_БК_ФормаОплаты <> Объект.ОК_БК_ФормаОплаты Тогда //БИТ АКриштопов ++2482
	//		ДанныеБДДС.бит_БК_ФормаОплаты = Объект.ОК_БК_ФормаОплаты;
	//	КонецЕсли;
	//КонецЦикла;
	//}ИсходныйКод
	ЗаполнениеЗначенийТЧизДанныхИнициатора("бит_БК_ФормаОплаты;");
	//} bit_SVKushnirenko 16.01.2017 #2671.дпн
КонецПроцедуры

&НаКлиенте
Процедура ОбъектОК_РазмерПредоплатыПриИзменении(Элемент)
	
	//{ bit_SVKushnirenko 16.01.2017 #2671.дпн
	//ИсходныйКод{
	//Для Каждого ДанныеБДДС Из Объект.БДДС Цикл
	//	Если Не ЗначениеЗаполнено(ДанныеБДДС.бит_БК_СуммаПредоплаты) 
	//		ИЛИ ДанныеБДДС.бит_БК_СуммаПредоплаты <> Объект.ОК_РазмерПредоплаты Тогда //БИТ АКриштопов ++2482
	//		ДанныеБДДС.бит_БК_СуммаПредоплаты = Объект.ОК_РазмерПредоплаты;
	//	КонецЕсли;
	//КонецЦикла;
	//}ИсходныйКод
	ЗаполнениеЗначенийТЧизДанныхИнициатора("бит_БК_СуммаПредоплаты;");
	Объект.СБ_СуммаПредоплатыИтого  = Объект.БДДС.Итог("СБ_СуммаПредоплаты");
	//СОФТЛАБ Землянников К.А. 2017-08-29 (#2691) Конец
	//} bit_SVKushnirenko 16.01.2017 #2671.дпн	

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)     //Довбешка Т.И. 18.11.2016 запрещены серверные вызовы на платформе 8.3.8
	Попытка
		Если ЗавершениеРаботы Тогда
			Возврат;
		КонецЕсли;
		ЭтотОбъект.РазблокироватьДанныеФормыДляРедактирования();
	Исключение
	КонецПопытки;
	
		
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-26 (#2873)
	Если ОК_ДобавленыКомментарии Тогда 
		ЗаписатьНаСервере(РежимЗаписиДокумента.Запись,Истина);
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-26 (#2873)
	
КонецПроцедуры

&НаКлиенте
Процедура ОК_НеобходимостьДоговораПриИзменении(Элемент)
	
	//{ bit_SVKushnirenko 16.01.2017 #2671.дпн
	//ИсходныйКод{
	////БИТ АКриштопов ++ 2482
	//Для Каждого ТекСтрока Из Объект.БДДС Цикл
	//	ТекСтрока.бит_БК_НуженДоговор = Объект.ОК_НеобходимостьДоговора;
	//КонецЦикла;
	////БИТ АКриштопов --
	//}ИсходныйКод
	ЗаполнениеЗначенийТЧизДанныхИнициатора("бит_БК_НуженДоговор;");
	//} bit_SVKushnirenko 16.01.2017 #2671.дпн
КонецПроцедуры
//БИТ АКриштопов 11042016 --
// БИТ НАГолубева 03.03.2016 --

//+Сенин С.В. 11.08.16 №2656
// СтандартныеПодсистемы.Печать

//ОК Довбешка Т. 01.12.2017
//&НаКлиенте
//Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
//	
//	бит_РаботаСДиалогамиКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
//	
//КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
//ОК Довбешка Т.

// Конец СтандартныеПодсистемы.Печать
//-Сенин С.В. 11.08.16 №2656

//{ bit SVKushnirenko 02.12.2016 #Перенос кода SSenin
//+Сенин С.В. 21.10.16 №2671
//
&НаКлиенте
Процедура БДДСПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		//1c-izhtc spawn )
		Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт") Тогда 
			Элементы.БДДС.ТекущиеДанные.бит_БК_ВалютаДоговора = Объект.бит_БК_ВалютаДокумента;
		КонецЕсли;
		
		//+Сенин С.В. 21.10.16 №2671
		ТекущиеДанные = Элементы.БДДС.ТекущиеДанные;
		Если ЗначениеЗаполнено(Объект.бит_БК_ПредпологаемыйКонтрагент) Тогда
			ТекущиеДанные.бит_БК_ПредпологаемыйКонтрагент = Объект.бит_БК_ПредпологаемыйКонтрагент;
		КонецЕсли; 
		Если ЗначениеЗаполнено(Объект.ОК_БК_ФормаОплаты) Тогда
			ТекущиеДанные.бит_БК_ФормаОплаты = Объект.ОК_БК_ФормаОплаты;
		КонецЕсли; 
		Если ЗначениеЗаполнено(Объект.ОК_РазмерПредоплаты) Тогда
			ТекущиеДанные.бит_БК_СуммаПредоплаты = Объект.ОК_РазмерПредоплаты;
		КонецЕсли; 
		
		ТекущиеДанные.бит_БК_НуженДоговор = Объект.ОК_НеобходимостьДоговора;
		ТекущиеДанные.бит_БК_Организация  = Объект.бит_БК_Организация;
		
		Если ТекущиеДанные.бит_БК_ВалютаДоговора = мКэшЗначений.ВалютаРеглУчета и (ТекущиеДанные.бит_БК_Кратность = 0 или ТекущиеДанные.бит_БК_Курс = 0) Тогда
			ТекущиеДанные.бит_БК_Кратность	= 1;
			ТекущиеДанные.бит_БК_Курс		= 1;
		конецЕсли;
		
		Если Объект.бит_БК_ВалютаДокумента = мКэшЗначений.ВалютаРеглУчета и (Объект.бит_БК_КратностьДокумента = 0 или Объект.бит_БК_КурсДокумента = 0) Тогда
			Объект.бит_БК_КратностьДокумента = 1;
			Объект.бит_БК_КурсДокумента		 = 1;
		конецЕсли;
		//-Сенин С.В. 21.10.16 №2671
		
	КонецЕсли;
	
КонецПроцедуры
//} bit SVKushnirenko 02.12.2016 #Перенос кода SSenin

//bit_SVKushnirenko 27.01.2017 #2657
// Возвращает текущее состояние статусов документа по ссылке
// Параметры:
//парСсылка  - ссылка на документ
&НаСервереБезКонтекста
Функция бит_БК_ПолучитьТекущийСтатусЗаявки(парСсылка)
	
	Возврат бит_БК_общий.ПолучитьТекущийСтатусФВБ(парСсылка);
КонецФункции // бит_БК_ПолучитьТекущийСтатусЗаявки()
//} bit SVKushnirenko 02.12.2016 #Перенос кода SSenin

//{bit_SVKushnirenko 31.05.2017 #2596
//Проводит документ независимо от привилегий пользователя
&НаСервере
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-04 (#2853)
//Функция ПривелегированноПерепровести()
//Заменено на:
Функция ПривелегированноПерепровести(ИнициирующееСобытие = "")
	Перем МД;
	КомментарийЖР = "";
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-04 (#2853)

	пТипРежима = ПривилегированныйРежим();
	УстановитьПривилегированныйРежим(Истина);
	Попытка
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-04 (#2853)		
		НачатьТранзакцию();	
		Если Не ПустаяСтрока(ИнициирующееСобытие) Тогда 
			МД = Метаданные.Документы.бит_ФормаВводаБюджета;
			Если ИнициирующееСобытие = "КорректировкаКЗБ" Тогда 
				КомментарийЖР = "при формировании корректировки контрольных значений и бюджета (БИТ)";
			ИначеЕсли ИнициирующееСобытие = "ОбновлениеОстатков" Тогда 
				КомментарийЖР = "при обновлении остатков бюджета в табличной части документа";
			КонецЕсли;
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-04 (#2853)		
		
		Записать(Новый Структура("РежимЗаписи", ПредопределенноеЗначение("РежимЗаписиДокумента.ОтменаПроведения")));
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-04 (#2853)		
		Если Не ПустаяСтрока(КомментарийЖР) Тогда 
			ЗаписьЖурналаРегистрации("Данные.Изменение",УровеньЖурналаРегистрации.Информация,МД,Объект.Ссылка,"Отмена проведения "+КомментарийЖР);
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-04 (#2853)		
		
		Записать(Новый Структура("РежимЗаписи", ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение")));
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-04 (#2853)		
		Если Не ПустаяСтрока(КомментарийЖР) Тогда 
			ЗаписьЖурналаРегистрации("Данные.Проведение",УровеньЖурналаРегистрации.Информация,МД,Объект.Ссылка,"Проведение "+КомментарийЖР);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-04 (#2853)		
		
	Исключение
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-04 (#2853)		
		ОтменитьТранзакцию();
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-04 (#2853)		
		
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	УстановитьПривилегированныйРежим(пТипРежима);
КонецФункции // ПривелегированноПерепровести() }bit_SVKushnirenko 31.05.2017 #2596
 
//bit_SVKushnirenko 31.01.2017 #2671
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	//{ bit SVKushnirenko Bit 31.01.2017 #2671
	//предотвращение повторного открытия формы со старым набором данных
	Если ИмяСобытия = "бит_БК_ИзмененОЦРНаФорме" Тогда 
		
		//{ bit_SVKushnirenko 29.03.2017 #2811
		//ИсходныйКод{
		//Попытка
		//	
		//	пВладелецЕслиЕсть = ЭтаФорма.ВладелецФормы.Объект.Ссылка;
		//Исключение
		//	
		//	Возврат;
		//КонецПопытки; 
		//Если Параметр.Ссылка =  пВладелецЕслиЕсть Тогда //перечитываем данные формы
		//	
		//	ЭтаФорма.Прочитать();
		//КонецЕсли;
		//}ИсходныйКод
		
		Если ЭтаФорма.ВладелецФормы = Неопределено Тогда  //решение без попытки, которая может косвенно влиять на поведение видимость (код для исследования гипотезы)
			
			Возврат;
		ИначеЕсли Параметр.Ссылка =  ЭтаФорма.ВладелецФормы.Объект.Ссылка Тогда 
			
			ЭтаФорма.Прочитать();
		КонецЕсли;
		//} bit_SVKushnirenko 29.03.2017 #2811
		
		//{ bit SVKushnirenko Bit 31.01.2017 #2657
	ИначеЕсли ИмяСобытия = "бит_БК_ИзмСтатусаПослеИзмБалансаЗаявок" Тогда 
		
		пОбъектСсылка = Объект.Ссылка;
		Если Параметр.Ссылки.Найти(пОбъектСсылка) <>  Неопределено Тогда //в параметре массив измененных заявок
			
			пТекущийСтатусСтруктура = бит_БК_ПолучитьТекущийСтатусЗаявки(пОбъектСсылка);
			
			Если пТекущийСтатусСтруктура.Статус <>  Статус Тогда 
				
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-21 (#2873)
				Прочитать();				
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-21 (#2873)
				
				//Обновляю то что нашел в коде для этого случая - жудкий бардак.. (((
				ЗаполнитьКэшЗначений(мКэшЗначений);
				// Установим текущий статус.
				УстановитьСтатусВФорме(мКэшЗначений.ТекущийСтатус, мКэшЗначений.ДатаИзмененияСтатуса);
				
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-01-29 (#2941)
				//УстановитьВидимостьКнопокСогласований();
				//Заменено на:
				ОпределитьДоступностьКнопокМаршрутаСогласования();
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-01-29 (#2941)
				УстановитьДоступностьЭлементов();
			КонецЕсли;
		КонецЕсли;
		//} bit SVKushnirenko Bit 31.01.2017 #2657
	КонецЕсли;
	//} bit SVKushnirenko Bit 31.01.2017 #2671
	
	//{ bit SVKushnirenko Bit 21.03.2017 #2596
	Если ИмяСобытия = "бит_БК_УспешноЗавершеноСозданиеПроведениеКорректировки" Тогда  
		
		Если Параметр.ФВБСсылка = Объект.Ссылка Тогда
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-16 (#2916)
			Прочитать();
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-16 (#2916)
			
			Если Объект.Проведен Тогда  //отменить проведение и провести (автопересчет табличной части)
				
				//данные остатков бюджета и статусы пересчитаются автоматически
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-07-04 (#2853)		
				//ПривелегированноПерепровести();
				//Заменено на:
				ПривелегированноПерепровести("КорректировкаКЗБ");
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-07-04 (#2853)		
				
			Иначе //прямой пересчет ТЧ и данных БК
				
				ОбновитьДанныеПоОстаткуБюджета();
			КонецЕсли;	
			
			пПараметрыФормы = Новый Структура("ФВБСсылка, ХранТЧБДДС, ФВБНомерЗаявкиШапка", 
			Объект.Ссылка, 
			ВыгрузитьБДДС(Объект.БДДС),
			Объект.бит_БК_НомерЗаявки); 
			
			Оповестить("бит_БК_ПерепроведенЗависимыйДокумент", пПараметрыФормы);
		КонецЕсли;
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-26 (#2873)
		Прочитать();
		ПеречитатьДоступностьКнопокМаршрута();
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-26 (#2873)
		
	КонецЕсли;
	//} bit SVKushnirenko Bit 21.03.2017 #2596
	
	//{ bit SVKushnirenko Bit 28.05.2017 #2596
	Если ИмяСобытия = "бит_БК_ПовторитьКорректировкуБюджета" Тогда  
		
		КорректировкаБюджета(); //Вызрв команды корректировки бюджета (с сопутствующим пересчетом итогов)
	КонецЕсли;
	//} bit SVKushnirenko Bit 28.05.2017 #2596
	
	//+СБ Пискунова 19.03.2017 #2691
	Если ИмяСобытия = "СБ_УстановленыРешения" Тогда  		
		ПрограммноДобавитьЭлементыФормыСогласующих();		
	КонецЕсли;
	//-СБ Пискунова 19.03.2017 #2691
	
	// ОКЕЙ Гиль А.В.(Софтлаб) Начало 28.01.2020 (#3591) 
	Если ИмяСобытия = "ЗаписьДетализацииЗатратОС" Тогда	
		
		Если Параметр.Свойство("ДокументРасшифровки") Тогда
			ДокументРасшифровкиЗатратНаОС = Параметр.ДокументРасшифровки;	
		КонецЕсли;
		
		ОбновитьЭлементыРасшифровкиЗатратОС();
		
	КонецЕсли;	
	// ОКЕЙ Гиль А.В.(Софтлаб) Конец 28.01.2020 (#3591)
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-07-06 (#4242)
	// Вызов механизма доступности элементов управления.
	УстановитьНастройкиДоступностиЭлементов();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-07-06 (#4242)
	
КонецПроцедуры

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-26 (#2873)
Процедура ПеречитатьДоступностьКнопокМаршрута()	
	УстановитьПривилегированныйРежим(Истина);
	ОпределитьДоступностьКнопокМаршрутаСогласования();
	ПрограммноДобавитьЭлементыФормыСогласующих();
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-26 (#2873)

// ок Видяйкин В.И. 20170214 +
&НаСервере
Процедура УстановитьСценарийНаСервере(вхКодСценария)
	Объект.Сценарий = Справочники.СценарииПланирования.НайтиПоКоду(вхКодСценария);
КонецПроцедуры

//{ bit SVKushnirenko Bit 14.03.2017 #2745
&НаКлиенте
Процедура кмдПечатьОтчетПоОплате(Команда)
	
	пУсловияОтбора  = Новый Структура("ТекДок", Объект.Ссылка);
	пПараметрыФормы = Новый Структура("Отбор, СформироватьПриОткрытии, БлокироватьКмдСформировать", пУсловияОтбора, Истина, Истина);
	ОткрытьФорму("Отчет.бит_ОтчетПоОплате.Форма.ФормаОтчета", пПараметрыФормы); 
КонецПроцедуры //} bit SVKushnirenko Bit 14.03.2017 #2745

// Конец СтандартныеПодсистемы.Печать
//-Сенин С.В. 11.08.16 №2656

//{bit_SVKushnirenko 21.03.2017 #2759
//Прокладка для реализации в менеджере
// Параметры:
//парТЧБДДС - таблица значений с колонкой "СтатьяОборотов" из БДДС
&НаСервереБезКонтекста
Функция ПолучитьПризнакОборудованиеВСтатьяхОборотов(знач парТЧБДДС)

	Возврат Документы.бит_ФормаВводаБюджета.ЕстьПризнакОборудованиеВСтатьяхОборотов(парТЧБДДС.Выгрузить().ВыгрузитьКолонку("СтатьяОборотов"))
КонецФункции // ПолучитьПризнакОборудованиеВСтатьяхОборотов() }bit_SVKushnirenko 21.03.2017 #2759 

//{bit_SVKushnirenko 21.03.2017 #2759
//Выполняет проверку и регулирует доступность поля фбит_БК_ЦельПриобретенияОборудования
//Параметры:
//парПринудительныйСтатусОтображения - (булево) указывает тако статус, который хотим установить для отображения цели приобретения оборудования
&НаКлиенте
Функция ДоступностьЦелиПриобретенияОборудования(парПринудительныйСтатусОтображения = Неопределено)

	//Проверка признака "Оборудование" в дополнительны свойствах статей оборотов
	Если Объект.Дата < Дата(2017, 08, 09) или
		Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.ФинансовыйПлан") или
		Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт") Тогда  
		
		пПризнакОборудование = Ложь;
	Иначе
		
		пПризнакОборудование = ПолучитьПризнакОборудованиеВСтатьяхОборотов(Объект.БДДС);
	КонецЕсли;
	 
	Если парПринудительныйСтатусОтображения <>  Неопределено Тогда  
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-06-29 (#2850)
		//Элементы.фбит_БК_ЦельПриобретенияОборудования.Видимость = парПринудительныйСтатусОтображения;
		//Заменено на:
		Элементы.СтраницыЦельПриобретенияОборудования.ТекущаяСтраница = Элементы[?(парПринудительныйСтатусОтображения,"СтраницаОтображенияЦели","ПустаяСтраница")];
		Элементы.фбит_БК_ЦельПриобретенияОборудования.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы[?(парПринудительныйСтатусОтображения,"Верх","Нет")];
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-06-29 (#2850)
	Иначе
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-06-29 (#2850)
		//Элементы.фбит_БК_ЦельПриобретенияОборудования.Видимость = пПризнакОборудование;
		//Заменено на:
		Элементы.СтраницыЦельПриобретенияОборудования.ТекущаяСтраница = Элементы[?(пПризнакОборудование,"СтраницаОтображенияЦели","ПустаяСтраница")];
		Элементы.фбит_БК_ЦельПриобретенияОборудования.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы[?(пПризнакОборудование,"Верх","Нет")];
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-06-29 (#2850)	

	КонецЕсли;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-21 (#3086)
	Элементы.СтраницыЦельПриобретенияОборудования.Высота = ?(пПризнакОборудование, 0,1);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-21 (#3086)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-06-29 (#2850)
	Если (парПринудительныйСтатусОтображения = Ложь ИЛИ 
		   (парПринудительныйСтатусОтображения = Неопределено И НЕ пПризнакОборудование)) И
		 ЗначениеЗаполнено(Объект.бит_БК_ЦельПриобретенияОборудования)
	Тогда
		 Объект.бит_БК_ЦельПриобретенияОборудования = Неопределено;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-06-29 (#2850)
	
	рекПроверкаЗаполнения_бит_БК_ЦельПриобретенияОборудования = пПризнакОборудование;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-06-29 (#2850)
	//ЭтаФорма.ОбновитьОтображениеДанных(Элементы.фбит_БК_ЦельПриобретенияОборудования);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-06-29 (#2850)
КонецФункции // ДоступностьЦелиПриобретенияОборудования() }bit_SVKushnirenko 21.03.2017 #2759

//{bit_SVKushnirenko 04.04.2017 #2811
//Возвращает Истина, если вид статьи = инвестиционная
// Параметры:
//парСтатьяОборотов - ссылка на справочник "Статьи оборотов"
&НаСервереБезКонтекста
Функция ВидСтатьиИнвестиционная(знач парСтатьяОборотов)

	Если ЗначениеЗаполнено(парСтатьяОборотов) и 
		парСтатьяОборотов.ВидСтатьи = Справочники.бит_ВидыСтатейОборотов.ИнвестиционнаяДеятельность Тогда  
		
		Возврат Истина;
	Иначе
		
		Возврат Ложь;
	КонецЕсли;
КонецФункции // ВидСтатьи() }bit_SVKushnirenko 04.04.2017 #2811 

//{ bit SVKushnirenko Bit 04.04.2017 #2811
&НаКлиенте
Процедура БДДСПроектПолеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	ОбработкаВозможногоЗапретаЗаполненияПроекта(СтандартнаяОбработка);
КонецПроцедуры //} bit SVKushnirenko Bit 04.04.2017 #2811

//{bit_SVKushnirenko 06.04.2017 #2811
// Выполняет интерактивные процедуры запрета изменения проекта
//Параметры
//парСтандартнаяОбработка - Стандартная обработка в обработчике
&НаКлиенте
Функция ОбработкаВозможногоЗапретаЗаполненияПроекта(парСтандартнаяОбработка)

	пТекущиеДанные = Элементы.БДДС.ТекущиеДанные;
	Если рекПроектЗапретЗаполнения Тогда  
		
		парСтандартнаяОбработка = Ложь;
		пОповещение = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждения", ЭтотОбъект);	
		
		ПоказатьПредупреждение(пОповещение,
		"Проект заполняется в инвестиционных и универсальных заявках только для инвестиционных расходов!", // предупреждение
		0, // (необ.) таймаут в секундах
		"Предупреждение!" // (необ.) заголовок
		);	
		пТекущиеДанные.Проект = Неопределено;
	КонецЕсли;
КонецФункции // ОбработкаВозможногоЗапретаЗаполненияПроекта() }bit_SVKushnirenko 06.04.2017 #2811

//{bit_SVKushnirenko 04.04.2017 #2811
// Заглушка немодального предупреждения
Функция ПослеЗакрытияПредупреждения(парПараметры) Экспорт
КонецФункции // ПослеЗакрытияПредупреждения() }bit_SVKushnirenko 04.04.2017 #2811

//{bit_SVKushnirenko 04.04.2017 #2811
&НаКлиенте
Процедура БДДСПроектПолеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработкаВозможногоЗапретаЗаполненияПроекта(СтандартнаяОбработка);
КонецПроцедуры // БДДСПроектПолеНачалоВыбора() }bit_SVKushnirenko 04.04.2017 #2811

//{bit_SVKushnirenko 04.04.2017 #2811
&НаКлиенте
Процедура БДДСПроектПолеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	ОбработкаВозможногоЗапретаЗаполненияПроекта(СтандартнаяОбработка);
КонецПроцедуры // БДДСПроектПолеНачалоВыбора() }bit_SVKushnirenko 04.04.2017 #2811

//{ bit SVKushnirenko Bit 14.04.2017 #2811
&НаКлиенте
Процедура БДДСПриАктивизацииЯчейки(Элемент)
	
	пТекущиеДанные = Элементы.БДДС.ТекущиеДанные;
	Если пТекущиеДанные <>  Неопределено Тогда  
		
		УправлениеПолемПроектНаФорме(пТекущиеДанные.СтатьяОборотов);
	КонецЕсли;
КонецПроцедуры //} bit SVKushnirenko Bit 14.04.2017 #2811

&НаКлиенте
Процедура СБ_ЗапускПроцесса(Команда)
	
	
	//+СБ Пискунова #2691
	//ОбновитьОЦР();
	//УстановитьПривилегированныйРежим(Истина);
	Объект.СБ_ЗапускПроцессаСПроверкой = Истина;
	ЗапуститьПроцесс();
	//-СБ Пискунова #2691
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-03 (#3393)
	Если мКэшЗначений.Свойство("ЗакрытьЗаявку")
	   И мКэшЗначений.ЗакрытьЗаявку
	Тогда 
		ПоказатьПредупреждение(,НСтр("ru = 'Превышение по функциям директора N-1 > 5%, согласование невозможно, требуется корректировка бюджета'"));
		Прочитать();
		Возврат;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-03 (#3393)
	
	//+СБ Пискунова #2691
	Элементы.СБ_ЗапускПроцесса.Доступность = Ложь;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-01 (#2873)
	////ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-08-29 (#2691)
	////Перенос из базы "EIS_ForTest"
	////ЗаписатьДокумент(РежимЗаписиДокумента.Запись,Истина);
	//ЗаписатьДокументНаКлиенте(РежимЗаписиДокумента.Запись,Истина);
	////ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-08-29 (#2691)
	//Заменено на: Запись уже произошла в рамках ЗапуститьПроцесс()
	ПрограммнаяМодификацияВиз(РежимЗаписиДокумента.Запись, Истина);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-01 (#2873)
	
	Если ЗначениеЗаполнено(ЭтаФорма.СБ_ТекстСообщения)  Тогда
		Предупреждение(ЭтаФорма.СБ_ТекстСообщения);
	КонецЕсли;
	ОпределитьДоступностьКнопокМаршрутаСогласования();
	ПрограммноДобавитьЭлементыФормыСогласующих();
	
	//УстановитьВидимостьКнопокСогласований();
	//УстановитьПривилегированныйРежим(Ложь);
	//-СБ Пискунова #2691
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-19 (#2986)
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-08 (#2931)
	//Если Объект.СБ_ЗапускПроцессаСПроверкой Тогда 
	//	Объект.СБ_ЗапускПроцессаСПроверкой = Ложь;		
	//КонецЕсли;
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-08 (#2931)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-19 (#2986)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-26 (#2873)
	Прочитать();
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-26 (#2873)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-01-10 (#2942)
	Если Объект.СБ_ПроцессЗапущен Тогда 
		Сообщить("Запущен процесс согласования заявки на расходы по маршруту");
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-01-10 (#2942)
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать
//-Сенин С.В. 11.08.16 №2656
&НаСервере
Процедура СБ_ЗапускПроцессаНаСервере()
	////Признак того что запись производится из тонкого или web клиента
	//ТекущийОбъект.бит_БК_WEBКлиент = Истина;               	
	////Обновляем перечень виз в регистре если их нет
	//СтруктураОтбор = Новый Структура("Объект",ТекущийОбъект.Ссылка);
	//НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	//Если НаборЗаписей.Количество() = 0 Тогда 
	//	бит_Визирование.ОбновитьПереченьВиз(ТекущийОбъект.Ссылка,ТекущийОбъект.Дата,СтруктураОтбор);
	//КонецЕсли;

КонецПроцедуры

//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-08-29 (#2691)
//Перенос из базы "EIS_ForTest"
&НаКлиенте
Процедура ЗапуститьПроцесс()

	ВыполнитьПроцедуруМодуля("ЗапуститьПроцесс()");
	//ОЦРНаименованиеПриИзменении(0);
	

КонецПроцедуры
//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-08-29 (#2691)

//{ bit SVKushnirenko Bit 25.04.2017 #2811
&НаКлиенте
Процедура БДДСПослеУдаления(Элемент)

	//+СБ Пискунова 16.03.2017 #2691
	//ИзменитьСБ_СуммуПредоплаты();
	//-СБ Пискунова 16.03.2017 #2691
	
	//{ bit_SVKushnirenko 25.04.2017 #2811
	ИзменениеОперацииДокументаПоИзменениюДанныхТЧБДДС();
	//} bit SVKushnirenko Bit 25.04.2017 #2811
КонецПроцедуры //} bit SVKushnirenko Bit 25.04.2017 #2811

//{bit_SVKushnirenko 25.04.2017 #2811
&НаКлиенте
Функция ИзменениеОперацииДокументаПоИзменениюДанныхТЧБДДС()

	ПостроениеВидаОперацииНаОснованииДанныхСтатейТчБДДС();
	УправлениеПолемПроектНаФорме();
КонецФункции // ИзменениеОперацииДокументаПоИзменениюДанныхТЧБДДС() }bit_SVKushnirenko 25.04.2017 #2811

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-12-28 (#2942)
////ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2017-07-31 (#2874)
//Функция ЗаполнитьДанныеПользователя() 

//	КэшированныеЗначения = Новый Структура;
//	
//	Пользователь = Пользователи.ТекущийПользователь();
//	
//	КэшированныеЗначения.Вставить("ДоступнаРольGuest", УправлениеДоступом.ЕстьРоль("Guest",,Пользователь));
//	КэшированныеЗначения.Вставить("ДоступнаРольОЦР", УправлениеДоступом.ЕстьРоль("ОК_ОЦР",,Пользователь));
//	КэшированныеЗначения.Вставить("ЭтоПолноправныйПользователь", Пользователи.ЭтоПолноправныйПользователь(Пользователь));
//	
//	Возврат КэшированныеЗначения;
//	
//КонецФункции	
////ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2017-07-31 (#2874)
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-12-28 (#2942)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-02-07(#2979)
&НаКлиенте
Процедура ОбновитьПеременныйИтога() Экспорт
	
	Если ТекущийЭлемент <> Элементы.БДДС	Тогда 
		Возврат;
	КонецЕсли;
	
	пИменаИтоговыхРеквизитов = "ок_Итог_бит_БК_СуммаБезНДС,
							   |ок_Итог_бит_БК_СуммаВВалютеБезНДС,
							   |ок_Итог_бит_БК_СуммаВВалютеСНДС,
							   |ок_Итог_Количество,
							   |ок_Итог_Сумма";
	пМассивОбрабатываемыхРеквизитов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрЗаменить(пИменаИтоговыхРеквизитов,Символы.ПС,""),",",Истина);
	
	//Обнуляем итоговые реквизиты
	Для каждого пСтрокаМассиваОбрРек Из пМассивОбрабатываемыхРеквизитов Цикл
		
		Выполнить(пСтрокаМассиваОбрРек + "=0");
		
	КонецЦикла; 
	
	Для Каждого пСтрБДДС ИЗ Объект.БДДС Цикл 
		Если Элементы.БДДС.ПроверитьСтроку(пСтрБДДС.ПолучитьИдентификатор()) Тогда 
			//Заполняем итоговые реквизиты
			Для каждого пСтрокаМассиваОбрРек Из пМассивОбрабатываемыхРеквизитов Цикл
				
				Выполнить(пСтрокаМассиваОбрРек + "= "+пСтрокаМассиваОбрРек+" + пСтрБДДС." + СтрЗаменить(пСтрокаМассиваОбрРек,"ок_Итог_",""));
				
			КонецЦикла; 
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-02-07(#2979)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-12 (#2996)
&НаКлиенте
Процедура ок_ЗагрузитьИзExcel(Команда)
	
	МассивСтрокБезБлокировок = Объект.БДДС.НайтиСтроки(Новый Структура("бит_БК_БлокировкиПолейФинансовогоКонтроллера",""));
	Если МассивСтрокБезБлокировок.Количество() <> Объект.БДДС.Количество() Тогда 
		ПоказатьПредупреждение(,НСтр("ru = 'В документе имеются поля, заблокированные финансовым контролёром, загрузка данных из Excel-файла, для таких случаев не предусмотрена. Для разблокировки полей, обратитесь к финансовому контролёру.'"),30);
	    Возврат;		
	КонецЕсли;
			
	ЗагрузитьЗаявку("ЗаявкаПоШаблонуExcel");
		
КонецПроцедуры      
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-12 (#2996)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-01 (#3433)
&НаКлиенте
Процедура ок_ОтчетПоЗаявкеИОплате(Команда)
	
	Если Не Объект.Проведен Тогда 
		
		ДопПараметры = Новый Структура;  
		ДопПараметры.Вставить("ИмяПроцедуры", "ВывестиОтчетПоЗаявкеИОплате()");
		ОписаниеОповещениеОПроведении = Новый ОписаниеОповещения("ОтветНаВопросПровестиДокумент", ЭтотОбъект, ДопПараметры);                             		
		ПоказатьВопрос(ОписаниеОповещениеОПроведении, НСтр("ru = 'Для выполнения команды документ должен быть проведен. Провести?'"), РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет);
		Возврат;
		
	КонецЕсли;
	
	ВывестиОтчетПоЗаявкеИОплате();

КонецПроцедуры


&НаКлиенте
Процедура ВывестиОтчетПоЗаявкеИОплате()
	
	Предупреждение(НСтр("ru = 'Оплаты до 01.03.2019 г. в отчете не отображаются'"));
	
	ПараметрыОткрытия = Новый Структура("ФВБ", Объект.Ссылка);
	ОткрытьФорму("Отчет.ок_ОтчетПоЗаявкеИОплате.Форма.ФормаОтчета", ПараметрыОткрытия,,,,,,РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-01 (#3433)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-02 (#3434)
&НаКлиенте
Процедура ок_ОтчетПоЗапланированнымПлатежам(Команда)
	
	Если Не Объект.Проведен Тогда 
		
		ДопПараметры = Новый Структура;  
		ДопПараметры.Вставить("ИмяПроцедуры", "ВывестиОтчетПоЗапланированнымПлатежам()");
		ОписаниеОповещениеОПроведении = Новый ОписаниеОповещения("ОтветНаВопросПровестиДокумент", ЭтотОбъект, ДопПараметры);                             		
		ПоказатьВопрос(ОписаниеОповещениеОПроведении, НСтр("ru = 'Для выполнения команды документ должен быть проведен. Провести?'"), РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет);
		Возврат;
		
	КонецЕсли;
	
	ВывестиОтчетПоЗапланированнымПлатежам();
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиОтчетПоЗапланированнымПлатежам()
	
	Предупреждение(НСтр("ru = 'Оплаты до 01.03.2019 г. в отчете не отображаются'"));
	
	ПараметрыОткрытия = Новый Структура("ФВБ", Объект.Ссылка);
	ОткрытьФорму("Отчет.ок_ОтчетПоЗапланированнымПлатежам.Форма.ФормаОтчета", ПараметрыОткрытия,,,,,,РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры


//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-02 (#3434)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-02 (#3435)
&НаКлиенте
Процедура ок_СредстваДляКорректировкиБюджета(Команда)
	
	Если Не Объект.Проведен Тогда 
		
		ДопПараметры = Новый Структура;  
		ДопПараметры.Вставить("ИмяПроцедуры", "ВывестиОтчетСредстваДляКорректировкиБюджета()");
		ОписаниеОповещениеОПроведении = Новый ОписаниеОповещения("ОтветНаВопросПровестиДокумент", ЭтотОбъект, ДопПараметры);                             		
		ПоказатьВопрос(ОписаниеОповещениеОПроведении, НСтр("ru = 'Для выполнения команды документ должен быть проведен. Провести?'"), РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет);
		Возврат;
		
	КонецЕсли;
	
	ВывестиОтчетСредстваДляКорректировкиБюджета();
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиОтчетСредстваДляКорректировкиБюджета()
	
	пЕстьОстатокМеньшеНуля = Ложь;
	Для каждого пСтрокаБДДС Из Объект.БДДС  Цикл
	
		Если пСтрокаБДДС.ОстатокПоБюджету < 0 Тогда  
			
			пЕстьОстатокМеньшеНуля = Истина; 
			Прервать;
		КонецЕсли;
	КонецЦикла; 

	Если Не пЕстьОстатокМеньшеНуля Тогда
	
		Предупреждение(НСтр("ru = 'По заявке отсутствуют суммы сверх бюджета!'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("ФВБ", Объект.Ссылка);
	ПараметрыОткрытия.Вставить("рекФВБХранБДДС", ВыгрузитьБДДС(Объект.БДДС));
	ОткрытьФорму("Отчет.ок_СредстваДляКорректировкиБюджета.Форма.ФормаОтчета", ПараметрыОткрытия,,,,,,РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-02 (#3435)

// ОКЕЙ Гиль А.В.(Софтлаб) Начало 25.01.2020 (#3591) 
&НаКлиенте
Процедура РасшифровкаЗатратНаРемонтОСНажатие(Элемент)
	
	ИспользоватьУчетЗатратНаРемонтОС = ОК_ОбщегоНазначения.ПолучитьЗначениеУниверсальнойНастройки("Детализация затрат на ремонт ОС", "Использовать учет затрат на ремонт ОС");
	
	Если ИспользоватьУчетЗатратНаРемонтОС = Истина И Объект.Ссылка.Пустая() Или Модифицированность Тогда
		
		ТекстВопроса = "Данные еще не записаны.
		               |Выполнение действия ""Ввести детализацию затрат на ремонт ОС"" возможно только после записи данных.
		               |Данные будут записаны."; 
		ПоказатьВопрос(Новый ОписаниеОповещения("ВвестиРасшифровкуЗатратНаРемонтОСЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ОКОтмена, 10,,,КодВозвратаДиалога.Отмена);
		
		Возврат;
		
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(ДокументРасшифровкиЗатратНаОС) Тогда
		
		ОткрытьЗначение(ДокументРасшифровкиЗатратНаОС);	
		
	Иначе
		
		Если ИспользоватьУчетЗатратНаРемонтОС <> Истина Тогда 
			Сообщить("Учет затрат на ОС отключен в системе, Детализацию затрат ввести невозможно");
			Возврат;
		КонецЕсли;
	
		ФормаРасшифровки = ПолучитьФорму("Документ.ок_ДетализацияЗатратНаРемонтОС.ФормаОбъекта");
		ДанныеФормы = ФормаРасшифровки.Объект;
		ДокументСформирован = Ложь;
		ок_ДетализацияЗатратНаРемонтОС.СформироватьНаОснованииЗаявкиРасшифровкуЗатратНаРемонтОС(Объект.Ссылка, ДанныеФормы, ДокументСформирован);
		
		Если ДокументСформирован Тогда
			КопироватьДанныеФормы(ДанныеФормы, ФормаРасшифровки.Объект);
			ФормаРасшифровки.Открыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиРасшифровкуЗатратНаРемонтОСЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда   
		Записать();
	КонецЕсли;
				
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЭлементыРасшифровкиЗатратОС()
	
	Элементы.НадписьРасшифровкаЗатратНаРемонтОС.Видимость = ок_ДетализацияЗатратНаРемонтОС.ВидимостьГиперСсылкиНаДокументДетализацииОС(Объект.ВидОперации);
	
	Если Элементы.НадписьРасшифровкаЗатратНаРемонтОС.Видимость Тогда
		
		Если Не Объект.Ссылка.Пустая() Тогда 
		
			ДокументРасшифровкиЗатратНаОС = ок_ДетализацияЗатратНаРемонтОС.ПолучитьДокументДетализацииЗатратНаРемонтОС(Объект.Ссылка);
			
			Если ЗначениеЗаполнено(ДокументРасшифровкиЗатратНаОС) Тогда
				Элементы.НадписьРасшифровкаЗатратНаРемонтОС.Заголовок = Строка(ДокументРасшифровкиЗатратНаОС);			
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры
// ОКЕЙ Гиль А.В.(Софтлаб) Конец 25.01.2020 (#3591)

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-05-14 (#3714)
&НаСервере
Функция ПроверитьАктивностьКонтролируемойСтатьи(КонтролируемаяСтатья)
	
	Возврат РегистрыСведений.бит_БК_КонтролирующиеСтатьиОборотов.ПроверитьАктивностьКонтролируемойСтатьи(КонтролируемаяСтатья);
	
КонецФункции

&НаСервере
Процедура УстановитьПараметрыВыбораДляСтатьиОборотов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	бит_БК_КонтролирующиеСтатьиОборотовСрезПоследних.КонтролируемаяСтатья КАК КонтролируемаяСтатья
		|ИЗ
		|	РегистрСведений.бит_БК_КонтролирующиеСтатьиОборотов.СрезПоследних КАК бит_БК_КонтролирующиеСтатьиОборотовСрезПоследних
		|ГДЕ
		|	бит_БК_КонтролирующиеСтатьиОборотовСрезПоследних.АктивностьСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	МассивСтатей = Новый Массив;
	МассивСтатей.Добавить(ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ПустаяСсылка"));
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивСтатей.Добавить(ВыборкаДетальныеЗаписи.КонтролируемаяСтатья);
	КонецЦикла;
	
	ФиксированныйМассивСтатей = Новый ФиксированныйМассив(МассивСтатей);
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.Ссылка", ФиксированныйМассивСтатей);
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(ПараметрВыбора);  		
	ФиксированныйМассивПараметров = Новый ФиксированныйМассив(МассивПараметров);
	
	Элементы.БДДССтатьяОборотов.ПараметрыВыбора = ФиксированныйМассивПараметров;
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-05-14 (#3714)

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-07-06 (#4242)
&НаКлиенте
Процедура ок_СоздатьЗаявкиНаРасходованиеДС()
	
	Отказ = Ложь;
	
	ВалютаФВБ = ПроверитьВалютуТабличнойЧастиБДДС(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	МассивЗнРДС = ПолучитьМассивЗнРДСпоФВБ(Объект.Ссылка);
	
	Если МассивЗнРДС.Количество() > 0 Тогда 
		
		СоздатьЗаявкиНаРасходованиеДСВопрос(МассивЗнРДС);
		Возврат;
		
	КонецЕсли;
	
	ок_СоздатьЗаявкиНаРасходованиеДСНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаявкиНаРасходованиеДСВопрос(МассивЗнРДС)
		
	ШаблонВопроса = НСтр("ru='По данной заявке на расход уже созданы заявки на оплату: 
							|%1;
							|
							|Вы уверены, что нужно создать заявку на оплату?'");

	ШаблонЗнРДС = "№ %1 от %2";
	ТекстЗнРДС = "";
	Для каждого ТекущаяЗнРДС Из МассивЗнРДС Цикл
		
		ЗначенияРеквизитовЗнРДС = ОК_ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ТекущаяЗнРДС, "Дата, Номер");
		ТекстЗнРДС = ТекстЗнРДС + "
					|" + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗнРДС, 
						ЗначенияРеквизитовЗнРДС.Номер, 
						Формат(ЗначенияРеквизитовЗнРДС.Дата, "ДФ=dd.MM.yyyy")
						);
	
	КонецЦикла; 
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонВопроса, ТекстЗнРДС);
						
	ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьЗаявкиНаРасходованиеДСПослеВопроса", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаявкиНаРасходованиеДСПослеВопроса(Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;	
	КонецЕсли;
	
	ок_СоздатьЗаявкиНаРасходованиеДСНаСервере();
	     	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьВалютуТабличнойЧастиБДДС(Отказ)
	
	ВалютаФВБ = ПредопределенноеЗначение("Справочник.Валюты.ПустаяСсылка");
	Для каждого ТекущаяСтрока Из Объект.БДДС Цикл
	
		Если ЗначениеЗаполнено(ТекущаяСтрока.бит_БК_ВалютаДоговора)
			И ВалютаФВБ <> ТекущаяСтрока.бит_БК_ВалютаДоговора Тогда
			
			Если НЕ ЗначениеЗаполнено(ВалютаФВБ) Тогда
			
				ВалютаФВБ = ТекущаяСтрока.бит_БК_ВалютаДоговора;				
				
			Иначе
				
				ОбщегоНазначенияКлиент.СообщитьПользователю("В заявке указаны разные валюты. Для создания заявки на оплату обратитесь к казначею",,,, Отказ);
				Возврат ПредопределенноеЗначение("Справочник.Валюты.ПустаяСсылка");
				
			КонецЕсли;
		
		КонецЕсли; 
	
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(ВалютаФВБ) Тогда
	
		ОбщегоНазначенияКлиент.СообщитьПользователю("В заявке не указан валюта. Для создания заявки на оплату обратитесь к казначею",,,, Отказ);
	    Возврат ВалютаФВБ;
		
	КонецЕсли; 
	
	Возврат ВалютаФВБ;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьМассивЗнРДСпоФВБ(ФВБ, ПараметрыОтбора = Неопределено)

	Если ПараметрыОтбора = Неопределено Тогда
	
		СписокСтатусов = Новый Массив;
		СписокСтатусов.Добавить(ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.Заявка_Рабочая"));
		СписокСтатусов.Добавить(ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.Заявка_Утверждена"));
		СписокСтатусов.Добавить(ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.Заявка_СозданоПП"));
		СписокСтатусов.Добавить(ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.Заявка_Оплачена"));
		СписокСтатусов.Добавить(ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.Заявка_Отклонена"));
		
		ПараметрыОтбора = Новый Структура();
		ПараметрыОтбора.Вставить("Статус", СписокСтатусов);
		ПараметрыОтбора.Вставить("ВидДвижения", ВидДвиженияНакопления.Приход);
	
	КонецЕсли; 
	
	МассивЗнРДС = ОК_ОбщегоНазначения.ПолучитьМассивЗнРДСпоФВБ(ФВБ, ПараметрыОтбора);

	Возврат МассивЗнРДС;
	
КонецФункции

&НаСервере
Процедура ок_СоздатьЗаявкиНаРасходованиеДСНаСервере()

	СинхронизироватьРеквизиты();
	
	стрРезультат = ОК_ОбщегоНазначения.СоздатьЗаявкиРасходованияДСНаСервере(Объект.Ссылка, Истина, "ИсполнителемИзТонкойФормы");
	Для Каждого пСозданныйДокумент ИЗ стрРезультат.СозданныеДокументы Цикл 
		пТекст = НСтр("ru = 'На основании создан документ %1'");
		пТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(пТекст,пСозданныйДокумент);
		
		ОбщегоНазначения.СообщитьПользователю(пТекст,пСозданныйДокумент);
	КонецЦикла;
	
	Если Не ПустаяСтрока(стрРезультат.Ошибки) Тогда 
		ОбщегоНазначения.СообщитьПользователю(стрРезультат.Ошибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНастройкиДоступностиЭлементов()

	бит_ОбщегоНазначения.УстановитьНастройкиДоступностиЭлементовДляФормы(ЭтотОбъект, Объект, мКэшЗначений.ТекущийСтатус);
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-07-06 (#4242)
