
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ДокументОснование) Тогда
		ТекстСообщения = НСтр("ru='Непосредственное открытие этой формы не предусмотрено. 
		|Для открытия формы можно воспользоваться командой ""Оплата"" в формах документов.'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметры.Свойство("ДокументОснование", ДокументОснование);
	
	НепосредственноеУдаление = ?(ПравоДоступа("Администрирование", Метаданные), Истина, Ложь);
	
	Элементы.ДокументОснование.Видимость = ЗначениеЗаполнено(ДокументОснование);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокОплат, "ДокументОснование", ДокументОснование, ВидСравненияКомпоновкиДанных.Равно,,Истина); 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокОплат

&НаКлиенте
Процедура СписокОплатПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	СоздатьПлатежнуюПозициюПоЗаявке();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОплатПриАктивизацииСтроки(Элемент)
	УстановитьОтборПоПозиции();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыЖурналДокументов
&НаКлиенте
Процедура ЖурналДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначение(, ВыбраннаяСтрока);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Создать(Команда)
	
	СоздатьПлатежнуюПозициюПоЗаявке();
	
КонецПроцедуры

&НаКлиенте
Процедура Скопировать(Команда)
	
	ПлатежнаяПозиция = Элементы.СписокОплат.ТекущаяСтрока;
	
	Если ПлатежнаяПозиция = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьПлатежнуюПозициюПоЗаявке(ПлатежнаяПозиция);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкуУдаления(Команда)
	
	ПлатежнаяПозиция = Элементы.СписокОплат.ТекущаяСтрока;
	
	Если ПлатежнаяПозиция = Неопределено Тогда
		// Документ отсутствует.
		Возврат;
	КонецЕсли;
	
	// Анализируем возможность непосредственного удаления.
	// Для корректного непосредственного удаления необходимо произвести поиск ссылок
	// это возможно при наличии административных прав.
	Если Не ДокументПомеченНаУдаление(ПлатежнаяПозиция) Тогда
		
		Если НепосредственноеУдаление Тогда
			ТекстВопроса = "ru = 'Удалить платежную позицию?'";				
		Иначе	
			ТекстВопроса = "ru = 'Пометить объект на удаление?'";			   
		КонецЕсли;
		
	Иначе	
		ТекстВопроса = "ru = 'Снять пометку на удаление?'"; 
	КонецЕсли; 
	
	Оповещение = Новый ОписаниеОповещения("УдалениеПлатежнойПозиции", ЭтотОбъект); 
	ПоказатьВопрос(Оповещение
					,НСтр(ТекстВопроса)
				 	,РежимДиалогаВопрос.ДаНет
				  	,5
				  	,КодВозвратаДиалога.Нет); 
	
КонецПроцедуры

&НаКлиенте 
Процедура УдалениеПлатежнойПозиции(Ответ, ДополнительныеДанные) Экспорт
	
	ПлатежнаяПозиция = Элементы.СписокОплат.ТекущаяСтрока;
	
	Если НЕ Ответ = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли; 
	
	ОбработатьДействиеУстановитьПометкуУдаления(ПлатежнаяПозиция);
	ОповеститьОбИзменении(ТипЗнч(ПлатежнаяПозиция));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьОтборПоПозиции()

	ТекущаяСтрока = Элементы.СписокОплат.ТекущаяСтрока;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЖурналДокументов, 
		"ПлатежнаяПозиция", ТекущаяСтрока, 
         ВидСравненияКомпоновкиДанных.Равно,, Истина); 

КонецПроцедуры
 
&НаСервереБезКонтекста 
Функция ДокументПомеченНаУдаление(ПлатежнаяПозиция)
	
	ПомеченНаУдаление = ПлатежнаяПозиция.ПометкаУдаления;
	
	Возврат ПомеченНаУдаление;
	
КонецФункции // ДокументПомеченНаУдаление()

&НаСервере 
Процедура ОбработатьДействиеУстановитьПометкуУдаления(ПлатежнаяПозиция)

	// Блокируем объект.
	ПозицияОбъект 	  = ПлатежнаяПозиция.ПолучитьОбъект();
	ДействиеВыполнено = бит_ОбщегоНазначения.ЗаблокироватьОбъект(ПозицияОбъект,Строка(ПлатежнаяПозиция),, "Все");
	
	Если Не ДействиеВыполнено Тогда
		Возврат;
	КонецЕсли; 		
	
	Если НепосредственноеУдаление Тогда
		
		// Пытаемся непосредственно удалить.
		Если Не ПозицияОбъект.ПометкаУдаления Тогда
			
			ПлатежнаяПозицияСсылка 		= ПозицияОбъект.Ссылка;
			МетаРегистраСтатусыОбъектов = Метаданные.РегистрыСведений.бит_СтатусыОбъектов;
			
			// Выполним поиск ссылок.
			МассивСсылок = Новый Массив;
			МассивСсылок.Добавить(ПлатежнаяПозицияСсылка);
			
			НайденныеСсылки  = НайтиПоСсылкам(МассивСсылок);
			КоличествоСсылок = НайденныеСсылки.Количество();
			
			Для Каждого СтрокаТаблицы Из НайденныеСсылки Цикл
				
				Если СтрокаТаблицы.Метаданные = МетаРегистраСтатусыОбъектов
					Или СтрокаТаблицы.Данные = ПлатежнаяПозицияСсылка Тогда
					
					КоличествоСсылок = КоличествоСсылок - 1;
					
				КонецЕсли; 
				
			КонецЦикла; 
			
			// Если ссылок нет - удаляем, иначе ставим пометку.
			Если КоличествоСсылок <= 0 Тогда
				ПозицияОбъект.Удалить(); 
			Иначе
				// На случай если заново захотят открыть ПП создав при этом новую,
				// т.к. нет проверки при проведении очищаем сумму.
				ПозицияОбъект.Сумма = 0;
				ПозицияОбъект.СуммаУпр = 0;
				ПозицияОбъект.СуммаРегл = 0;
				ПозицияОбъект.СуммаДокумента = 0;
				Для каждого СтрРаспр Из ПозицияОбъект.Распределение Цикл
				
					СтрРаспр.Сумма = 0;
					СтрРаспр.НДС = 0;
					
					
				КонецЦикла; 
				бит_ОбщегоНазначения.ЗаписатьПровестиДокумент(ПозицияОбъект,РежимЗаписиДокумента.Запись,,"Ошибки");
				ПозицияОбъект.УстановитьПометкуУдаления(Истина);
			КонецЕсли; 
			
		Иначе
			ПозицияОбъект.УстановитьПометкуУдаления(Ложь);
		КонецЕсли; 
		
	Иначе
		
		ПометкаНаУдаление = ?(Не ПозицияОбъект.ПометкаУдаления, Истина, Ложь);
			
		// прав нет - просто пометка
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ОбъектПолучен");
		СтруктураПараметров.Вставить("ОшибкуПодробно");
		
		бит_ОбщегоНазначения.ИзменитьПометкуНаУдалениеУОбъекта(ПозицияОбъект
															  ,ПометкаНаУдаление
															  ,
															  ,"Ошибки"
															  ,СтруктураПараметров);
		
	КонецЕсли; // Если НепосредственноеУдаление Тогда
	
КонецПроцедуры

#Область ПроцедурыИФункцииОбщегоНазначения

&НаКлиенте 
Процедура СоздатьПлатежнуюПозициюПоЗаявке(Шаблон = Неопределено)
	
	ВладелецФормы	= ЭтотОбъект.ВладелецФормы;
	ЗаявкаПроведена = ЗаявкаПроведена(ДокументОснование);
	
	Если ВладелецФормы.Модифицированность ИЛИ НЕ ЗаявкаПроведена Тогда
		ТекстВопроса = НСтр("ru = 'Перед вводом платежных позиций заявку необходимо провести.'");
		ПоказатьПредупреждение(, ТекстВопроса);
	Иначе
		Если Шаблон = Неопределено Тогда
			ПараметрыФормы = Новый Структура("Основание", ДокументОснование); 
			ОткрытьФорму("Документ.бит_ПлатежнаяПозиция.ФормаОбъекта", ПараметрыФормы);
		Иначе	
			ПараметрыФормы = Новый Структура("ЗначениеКопирования", Шаблон); 
			ОткрытьФорму("Документ.бит_ПлатежнаяПозиция.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаявкаПроведена(ДокументОснование)

	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Проведен");

КонецФункции
 
#КонецОбласти

#КонецОбласти  
