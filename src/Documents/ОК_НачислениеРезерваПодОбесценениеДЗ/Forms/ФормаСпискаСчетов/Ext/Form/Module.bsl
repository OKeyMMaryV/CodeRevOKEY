
&НаКлиенте
Процедура КнопкаОКНажатие(Элемент)
	
	СписокИспользуемых = СохранитьСписок();
	ЭтаФорма.Закрыть(СписокИспользуемых);
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаОтменаНажатие(Элемент)
	
	СохранитьСписок();
	Закрыть(КодВозвратаДиалога.Отмена);
	
КонецПроцедуры

&НаСервере
Функция СписокПриИзмененииФлажка_Сервер()
	
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	ТекущиеДанные = ТаблицаСчетовРасчета.НайтиПоИдентификатору(ТекущаяСТрока);
	
	Счет = ТекущиеДанные.Ссылка;
	Для Каждого СтрокаТаблицы Из ТаблицаСчетовРасчета Цикл
		Если СтрокаТаблицы.Ссылка.ПринадлежитЭлементу(Счет) Тогда
			СтрокаТаблицы.Использование = ТекущаяСтрока.Использование;
		КонецЕсли;
	КонецЦикла;
КонецФункции


&НаКлиенте
Процедура СписокПриИзмененииФлажка(Элемент)
	
	СписокПриИзмененииФлажка_Сервер();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
КонецПроцедуры


&НаСервере
Функция КоманднаяПанельСпискаДействие_Сервер()
	
	Для Каждого СтрокаТаблицы Из ТаблицаСчетовРасчета Цикл
		СтрокаТаблицы.Использование = Истина;
	КонецЦикла;
	
КонецФункции


&НаКлиенте
Процедура КоманднаяПанельСпискаДействие(Команда)
	
	КоманднаяПанельСпискаДействие_Сервер();
	
КонецПроцедуры

&НаСервере
Функция КоманднаяПанельСпискаДействие1_Сервер()
	
	Для Каждого СтрокаТаблицы Из ТаблицаСчетовРасчета Цикл
		СтрокаТаблицы.Использование = Ложь;
	КонецЦикла;
	
КонецФункции


&НаКлиенте
Процедура КоманднаяПанельСпискаДействие1(Команда)
	
	КоманднаяПанельСпискаДействие1_Сервер();
	
КонецПроцедуры

&НаСервере
Функция СохранитьСписок()

	Список.Очистить();
	Для Каждого СтрокаТаблицы Из ТаблицаСчетовРасчета Цикл
		Если Не СтрокаТаблицы.Использование Тогда
			Список.Добавить(СтрокаТаблицы.Ссылка);
		Иначе
			СписокИспользуемых.Добавить(СтрокаТаблицы.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокИспользуемых;
КонецФункции

&НаСервере
Функция Счета()
	
	ОграниченныйСписок	= Новый СписокЗначений;
	ОграниченныйСписок.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданным);
	ОграниченныйСписок.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);
	ОграниченныйСписок.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоПретензиям);
	ОграниченныйСписок.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями);
	ОграниченныйСписок.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПоставщикамиИПодрядчиками);
	ОграниченныйСписок.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПокупателямиИЗаказчиками);
	ОграниченныйСписок.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами);  
	
	Возврат ОграниченныйСписок;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (НЕ Хозрасчетный.Ссылка В (&СписокСчетов))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Использование,
	|	Хозрасчетный.Ссылка,
	|	Хозрасчетный.Наименование
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный КАК Хозрасчетный1
	|		ПО Хозрасчетный.Ссылка = Хозрасчетный1.Ссылка
	|ГДЕ
	|	Хозрасчетный.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И Хозрасчетный.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И Хозрасчетный.Ссылка В(&Список)
	|	И (НЕ Хозрасчетный.Забалансовый)
	|	И (НЕ Хозрасчетный1.Забалансовый)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Хозрасчетный.Порядок";
	ОграниченныйСписок = Счета();
	Запрос.УстановитьПараметр("СписокСчетов", СписокИспользуемых);
	Запрос.УстановитьПараметр("Список", ОграниченныйСписок);  
	
	ТаблицаСчетовРасчета.Загрузить(Запрос.Выполнить().Выгрузить());
	СписокИспользуемых.Очистить();
	
	Элементы.НадписьПояснение.Заголовок = "В таблице приведены счета учета расчетов, по которым формируется отчет.";

КонецПроцедуры

//ОК+ Аверьянова 25.06.14 #830#
//&НаКлиенте
//Функция ПередЗакрытием(Отказ, СтандартнаяОбработка)
//	СохранитьСписок();
//КонецФункции
//ОК-