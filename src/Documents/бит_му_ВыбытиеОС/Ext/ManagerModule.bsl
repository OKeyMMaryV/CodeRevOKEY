#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки	 - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьОСПриВыборе(ОсновноеСредство, Реквизиты, Отказ)  Экспорт
	
	Если Реквизиты.ВидОперации = Перечисления.бит_му_ВидыОперацийВыбытиеОС.ОсновныеСредства Тогда
		ВидКласса = Перечисления.бит_му_ВидыКлассовОС.ОсновныеСредства;
	Иначе
		ВидКласса = Перечисления.бит_му_ВидыКлассовОС.ИнвестиционнаяСобственность;
	КонецЕсли;
	
	бит_му_ВНА.ПроверитьОСПриВыборе(Реквизиты, ВидКласса, ОсновноеСредство, Отказ);
	
КонецПроцедуры // ПроверитьОСПриВыборе()

Процедура ВыполнитьПодборСчетов(НоваяСтрока, СтрокаТаблицы, Документ) Экспорт 
	
	// Если это перевод, тогда
	Если Документ.ВидДвижения = Перечисления.бит_му_ВидыДвиженияВыбытия.ПереводВПредназначенныеДляПродажи Тогда
		Возврат
	КонецЕсли;
	
	фКоличествоСубконтоМУ = Метаданные.ПланыСчетов.бит_Дополнительный_2.МаксКоличествоСубконто;
	
	// Подбор счетов подбирается только из документа "Передача ОС".
	Если ТипЗнч(СтрокаТаблицы.ДокументБУ) = Тип("ДокументСсылка.ПередачаОС") Тогда
		
		ВыполнитьПодборСчетовПередачаОС(НоваяСтрока, СтрокаТаблицы, Документ, фКоличествоСубконтоМУ);
		
	ИначеЕсли ТипЗнч(СтрокаТаблицы.ДокументБУ) = Тип("ДокументСсылка.СписаниеОС") Тогда
		
		ВыполнитьПодборСчетовСписаниеОС(НоваяСтрока, СтрокаТаблицы, Документ, фКоличествоСубконтоМУ);
		
	КонецЕсли;
		
КонецПроцедуры // ВыполнитьПодборСчетов()

Процедура ВыполнитьПодборСчетовПередачаОС(НоваяСтрока, СтрокаТаблицы, Объект, фКоличествоСубконтоМУ)

	ЭтоПродажа = (Объект.ВидДвижения = Перечисления.бит_му_ВидыДвиженияВыбытия.Продажа);
	
	СтруктураПараметров    = бит_му_ОбщегоНазначения.ПодготовитьСтруктуруПараметровДляПодбораСчетовМУ(Объект.Организация, Объект.Дата);
	ПередачаОС_БУ 		   = СтрокаТаблицы.ДокументБУ;
	СтрокаОС_ДокПередачаОС = ПередачаОС_БУ.ОС.Найти(СтрокаТаблицы.ВНА, "ОсновноеСредство");
	
	// Получим метаданные документа ОС БУ.
	МетаДокПередачаОС = ПередачаОС_БУ.Метаданные();
	
	///////////////////////////////////////////////////////////////////////////////
	// Заполним счета и аналитику шапки документа.
	
	Если ЭтоПродажа Тогда
	
		// Если счет взаиморасчетов не указан, тогда.
		Если Не ЗначениеЗаполнено(Объект.СчетВзаиморасчетов) Тогда
			
			НаборИсточник = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
			НаборПриемник = РегистрыБухгалтерии.бит_Дополнительный_2.СоздатьНаборЗаписей();
			
			Если бит_РаботаСМетаданными.ЕстьРеквизит("СчетУчетаРасчетовСКонтрагентом", МетаДокПередачаОС) Тогда
				
				// Заполним набор записей источник по строке таблицы значений.
				ЗаписьИсточник = НаборИсточник.Добавить();
				ЗаписьИсточник.СчетДт = ПередачаОС_БУ.СчетУчетаРасчетовСКонтрагентом;
				
				// Заполним аналитику счета Дт.
				Если бит_РаботаСМетаданными.ЕстьРеквизит("Контрагент", МетаДокПередачаОС) Тогда
					бит_му_ОбщегоНазначения.УстановитьСубконто(ЗаписьИсточник.СчетДт, ЗаписьИсточник.СубконтоДт, "Контрагенты", ПередачаОС_БУ.Контрагент);
				КонецЕсли;
				Если бит_РаботаСМетаданными.ЕстьРеквизит("ДоговорКонтрагента", МетаДокПередачаОС) Тогда
					бит_му_ОбщегоНазначения.УстановитьСубконто(ЗаписьИсточник.СчетДт, ЗаписьИсточник.СубконтоДт, "Договоры"	  , ПередачаОС_БУ.ДоговорКонтрагента);
				КонецЕсли;
				
				ПротоколТрансляции = "";
				
				// Выполним подбор счетов по правилам трансляции.
				бит_МеханизмТрансляции.ВыполнитьТрансляциюДвижений(Объект
																  ,НаборИсточник
																  ,НаборПриемник
																  ,СтруктураПараметров
																  ,ПротоколТрансляции);
			КонецЕсли;
			
			Если НаборПриемник.Количество() > 0 Тогда
				
				// Запишем результат подбора счетов в шапку документа.
				ЗаписьПриемник = НаборПриемник[0];
				
				Если ЗначениеЗаполнено(ЗаписьПриемник.СчетДт) Тогда
					
					Объект.СчетВзаиморасчетов = ЗаписьПриемник.СчетДт;
					
					// Заполним аналитику счета взаиморасчетов.
					Для Ном = 1 По фКоличествоСубконтоМУ Цикл
						Объект["СубконтоВзаиморасчетов" + Ном] = бит_МеханизмТрансляции.ЗначениеСубконто(ЗаписьПриемник, "Дт", Ном);
					КонецЦикла; 
					
					НастройкиСубконто = бит_БухгалтерияСервер.ПолучитьНастройкиСубконто(Объект.СчетВзаиморасчетов,фКоличествоСубконтоМУ);									  
					бит_БухгалтерияКлиентСервер.ПривестиЗначенияСубконто(Объект, НастройкиСубконто, "СубконтоВзаиморасчетов");
					
				КонецЕсли; 
				
			КонецЕсли;
			
		КонецЕсли; // Если Не ЗначениеЗаполнено(СчетВзаиморасчетов) Тогда.
		
		// Если счет НДС не указан, тогда
		Если Не ЗначениеЗаполнено(Объект.СчетНДС) Тогда
			
			НаборИсточник = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
			НаборПриемник = РегистрыБухгалтерии.бит_Дополнительный_2.СоздатьНаборЗаписей();
			
			Если бит_РаботаСМетаданными.ЕстьРеквизитТабЧасти("СчетУчетаНДСПоРеализации", МетаДокПередачаОС, "ОС") Тогда
				
				// Заполним набор записей источник по строке таблицы значений.
				ЗаписьИсточник = НаборИсточник.Добавить();
				ЗаписьИсточник.СчетДт = СтрокаОС_ДокПередачаОС.СчетУчетаНДСПоРеализации;
				ЗаписьИсточник.СчетКт = ПланыСчетов.Хозрасчетный.НДС;
				
				// Заполним аналитику счета Дт.
				Если бит_РаботаСМетаданными.ЕстьРеквизитТабЧасти("СубконтоБУ", МетаДокПередачаОС, "ОС") Тогда
					бит_му_ОбщегоНазначения.УстановитьСубконто(ЗаписьИсточник.СчетДт, ЗаписьИсточник.СубконтоДт, "ПрочиеДоходыИРасходы", СтрокаОС_ДокПередачаОС.СубконтоБУ);
					
				ИначеЕсли бит_РаботаСМетаданными.ЕстьРеквизитТабЧасти("Субконто", МетаДокПередачаОС, "ОС") Тогда
					бит_му_ОбщегоНазначения.УстановитьСубконто(ЗаписьИсточник.СчетДт, ЗаписьИсточник.СубконтоДт, "ПрочиеДоходыИРасходы", СтрокаОС_ДокПередачаОС.Субконто);
					
				КонецЕсли;
				
				ПротоколТрансляции = "";
				
				// Выполним подбор счетов по правилам трансляции.
				бит_МеханизмТрансляции.ВыполнитьТрансляциюДвижений(Объект
																  ,НаборИсточник
																  ,НаборПриемник
																  ,СтруктураПараметров
																  ,ПротоколТрансляции);
				
			КонецЕсли;
			
			Если НаборПриемник.Количество() > 0 Тогда
				
				// Запишем результат подбора счетов в шапку документа.
				ЗаписьПриемник = НаборПриемник[0];
				
				Если ЗначениеЗаполнено(ЗаписьПриемник.СчетКт) Тогда
					
					Объект.СчетНДС = ЗаписьПриемник.СчетКт;
					
					// Заполним аналитику счета НДС.
					Для Ном = 1 По фКоличествоСубконтоМУ Цикл
						Объект["СубконтоНДС" + Ном] = бит_МеханизмТрансляции.ЗначениеСубконто(ЗаписьПриемник, "Кт", Ном);
					КонецЦикла; 
					
					НастройкиСубконто = бит_БухгалтерияСервер.ПолучитьНастройкиСубконто(Объект.СчетНДС,фКоличествоСубконтоМУ);									  
					бит_БухгалтерияКлиентСервер.ПривестиЗначенияСубконто(Объект,НастройкиСубконто,"СубконтоНДС");
					
				КонецЕсли; 
				
			КонецЕсли;
			
		КонецЕсли; // Если Не ЗначениеЗаполнено(СчетНДС) Тогда
	
	КонецЕсли; // Если ЭтоПродажа Тогда
	
	///////////////////////////////////////////////////////////////////////////////
	// Заполним счета и аналитику новой строки.
	
	НаборИсточник = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
	НаборПриемник = РегистрыБухгалтерии.бит_Дополнительный_2.СоздатьНаборЗаписей();
	
	// Заполним набор записей источник по строке таблицы значений.
	ЗаписьИсточник = НаборИсточник.Добавить();
	
	// Заполним счет Дт.
	Если бит_РаботаСМетаданными.ЕстьРеквизитТабЧасти("СчетДоходовБУ", МетаДокПередачаОС, "ОС") Тогда
		ЗаписьИсточник.СчетДт = СтрокаОС_ДокПередачаОС.СчетДоходовБУ;
		
	ИначеЕсли бит_РаботаСМетаданными.ЕстьРеквизитТабЧасти("СчетДоходов", МетаДокПередачаОС, "ОС") Тогда
		ЗаписьИсточник.СчетДт = СтрокаОС_ДокПередачаОС.СчетДоходов;
		
	КонецЕсли;
	
	// Заполним счет Кт.
	Если бит_РаботаСМетаданными.ЕстьРеквизитТабЧасти("СчетРасходовБУ", МетаДокПередачаОС, "ОС") Тогда
		ЗаписьИсточник.СчетКт = СтрокаОС_ДокПередачаОС.СчетРасходовБУ;
		
	ИначеЕсли бит_РаботаСМетаданными.ЕстьРеквизитТабЧасти("СчетРасходов", МетаДокПередачаОС, "ОС") Тогда
		ЗаписьИсточник.СчетКт = СтрокаОС_ДокПередачаОС.СчетРасходов;
		
	КонецЕсли;
	
	// Заполним аналитику Дт и Кт.
	Если бит_РаботаСМетаданными.ЕстьРеквизитТабЧасти("СубконтоБУ", МетаДокПередачаОС, "ОС") Тогда
		
		бит_му_ОбщегоНазначения.УстановитьСубконто(ЗаписьИсточник.СчетДт, ЗаписьИсточник.СубконтоДт, "ПрочиеДоходыИРасходы", СтрокаОС_ДокПередачаОС.СубконтоБУ);
		бит_му_ОбщегоНазначения.УстановитьСубконто(ЗаписьИсточник.СчетКт, ЗаписьИсточник.СубконтоКт, "ПрочиеДоходыИРасходы", СтрокаОС_ДокПередачаОС.СубконтоБУ);
		
	ИначеЕсли бит_РаботаСМетаданными.ЕстьРеквизитТабЧасти("Субконто", МетаДокПередачаОС, "ОС") Тогда
		
		бит_му_ОбщегоНазначения.УстановитьСубконто(ЗаписьИсточник.СчетДт, ЗаписьИсточник.СубконтоДт, "ПрочиеДоходыИРасходы", СтрокаОС_ДокПередачаОС.Субконто);
		бит_му_ОбщегоНазначения.УстановитьСубконто(ЗаписьИсточник.СчетКт, ЗаписьИсточник.СубконтоКт, "ПрочиеДоходыИРасходы", СтрокаОС_ДокПередачаОС.Субконто);
		
	КонецЕсли;
	
	ПротоколТрансляции = "";
	
	// Выполним подбор счетов по правилам трансляции.
	бит_МеханизмТрансляции.ВыполнитьТрансляциюДвижений(Объект
													  ,НаборИсточник
													  ,НаборПриемник
													  ,СтруктураПараметров
													  ,ПротоколТрансляции);
	Если НаборПриемник.Количество() > 0 Тогда
		
		// Запишем результат подбора счетов в шапку документа.
		ЗаписьПриемник = НаборПриемник[0];
		
		Если ЭтоПродажа И ЗначениеЗаполнено(ЗаписьПриемник.СчетДт) Тогда
			
			НоваяСтрока.СчетДт = ЗаписьПриемник.СчетДт;
			
			// Заполним аналитику счета доходов.
			Для Ном = 1 По фКоличествоСубконтоМУ Цикл
				НоваяСтрока["СубконтоДт" + Ном] = бит_МеханизмТрансляции.ЗначениеСубконто(ЗаписьПриемник, "Дт", Ном);
			КонецЦикла; 
			
			НастройкиСубконто = бит_БухгалтерияСервер.ПолучитьНастройкиСубконто(НоваяСтрока.СчетДт, фКоличествоСубконтоМУ);									  
			бит_БухгалтерияКлиентСервер.ПривестиЗначенияСубконто(НоваяСтрока, НастройкиСубконто, "СубконтоДт");
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ЗаписьПриемник.СчетКт) Тогда
			
			НоваяСтрока.СчетКт = ЗаписьПриемник.СчетКт;
			
			// Заполним аналитику счета расходов.
			Для Ном = 1 По фКоличествоСубконтоМУ Цикл
				НоваяСтрока["СубконтоКт" + Ном] = бит_МеханизмТрансляции.ЗначениеСубконто(ЗаписьПриемник, "Кт", Ном);
			КонецЦикла; 
			
			НастройкиСубконто = бит_БухгалтерияСервер.ПолучитьНастройкиСубконто(НоваяСтрока.СчетКт, фКоличествоСубконтоМУ);									  
			бит_БухгалтерияКлиентСервер.ПривестиЗначенияСубконто(НоваяСтрока, НастройкиСубконто, "СубконтоКт");
			
		КонецЕсли;
		
	КонецЕсли;
	
	
	/////////////////////////////////////////////////////////////////////////////////////
	// Заполним счет учета НДС
	
	НаборИсточник = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
	НаборПриемник = РегистрыБухгалтерии.бит_Дополнительный_2.СоздатьНаборЗаписей();
	
	// Заполним набор записей источник по строке таблицы значений.
	ЗаписьИсточник = НаборИсточник.Добавить();
	
	// Заполним счет Дт.
	Если бит_РаботаСМетаданными.ЕстьРеквизитТабЧасти("СчетУчетаНДСПоРеализации", МетаДокПередачаОС, "ОС") Тогда
		ЗаписьИсточник.СчетДт = СтрокаОС_ДокПередачаОС.СчетУчетаНДСПоРеализации;
		
	КонецЕсли;
	
	// Заполним аналитику Дт и Кт.
	Если бит_РаботаСМетаданными.ЕстьРеквизитТабЧасти("СубконтоБУ", МетаДокПередачаОС, "ОС") Тогда
		
		бит_му_ОбщегоНазначения.УстановитьСубконто(ЗаписьИсточник.СчетДт, ЗаписьИсточник.СубконтоДт, "ПрочиеДоходыИРасходы", СтрокаОС_ДокПередачаОС.СубконтоБУ);
		
	ИначеЕсли бит_РаботаСМетаданными.ЕстьРеквизитТабЧасти("Субконто", МетаДокПередачаОС, "ОС") Тогда
		
		бит_му_ОбщегоНазначения.УстановитьСубконто(ЗаписьИсточник.СчетДт, ЗаписьИсточник.СубконтоДт, "ПрочиеДоходыИРасходы", СтрокаОС_ДокПередачаОС.Субконто);
		
	КонецЕсли;
	
	ПротоколТрансляции = "";
	
	// Выполним подбор счетов по правилам трансляции.
	бит_МеханизмТрансляции.ВыполнитьТрансляциюДвижений(Объект
													  ,НаборИсточник
													  ,НаборПриемник
													  ,СтруктураПараметров
													  ,ПротоколТрансляции);
	Если НаборПриемник.Количество() > 0 Тогда
		
		// Запишем результат подбора счетов в шапку документа.
		ЗаписьПриемник = НаборПриемник[0];
		
		Если ЭтоПродажа И ЗначениеЗаполнено(ЗаписьПриемник.СчетДт) Тогда
			
			НоваяСтрока.СчетНДС = ЗаписьПриемник.СчетДт;
			
			// Заполним аналитику счета доходов.
			Для Ном = 1 По фКоличествоСубконтоМУ Цикл
				НоваяСтрока["СубконтоНДС" + Ном] = бит_МеханизмТрансляции.ЗначениеСубконто(ЗаписьПриемник, "Дт", Ном);
			КонецЦикла; 
			
			НастройкиСубконто = бит_БухгалтерияСервер.ПолучитьНастройкиСубконто(НоваяСтрока.СчетНДС,фКоличествоСубконтоМУ);									  
			бит_БухгалтерияКлиентСервер.ПривестиЗначенияСубконто(НоваяСтрока,НастройкиСубконто,"СубконтоНДС");
			
		КонецЕсли; 
		
	КонецЕсли;

КонецПроцедуры // ВыполнитьПодборСчетовПередачаОС()

// Процедура выполняет подбор счетов по правилам трансляции при подборе строки из документа СписаниеОС.
// 
Процедура ВыполнитьПодборСчетовСписаниеОС(НоваяСтрока, СтрокаТаблицы, Объект, фКоличествоСубконтоМУ)

	Если ЗначениеЗаполнено(НоваяСтрока.СчетКт) Тогда
	
		Возврат;
	
	КонецЕсли; 
	
	ДокБУ 		   = СтрокаТаблицы.ДокументБУ;
	МетаДокБУ      = ДокБУ.Метаданные();
	
	Если НЕ бит_РаботаСМетаданными.ЕстьРеквизит("СчетСписания", МетаДокБУ) 
		 ИЛИ НЕ бит_РаботаСМетаданными.ЕстьРеквизит("Субконто", МетаДокБУ)  Тогда
	
		Возврат;
	
	КонецЕсли; 
	
	СтруктураПараметров    = бит_му_ОбщегоНазначения.ПодготовитьСтруктуруПараметровДляПодбораСчетовМУ(Объект.Организация, Объект.Дата);
	
	НаборИсточник = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
	НаборПриемник = РегистрыБухгалтерии.бит_Дополнительный_2.СоздатьНаборЗаписей();
	
	// Заполним набор записей источник по строке таблицы значений.
	ЗаписьИсточник = НаборИсточник.Добавить();
	ЗаписьИсточник.СчетДт = ДокБУ.СчетСписания;
	
	// Заполним аналитику счета Дт.
	бит_му_ОбщегоНазначения.УстановитьСубконто(ЗаписьИсточник.СчетДт, ЗаписьИсточник.СубконтоДт, 1, ДокБУ.Субконто);
	
	ПротоколТрансляции = "";
	
	// Выполним подбор счетов по правилам трансляции.
	бит_МеханизмТрансляции.ВыполнитьТрансляциюДвижений(Объект
													  ,НаборИсточник
													  ,НаборПриемник
													  ,СтруктураПараметров
													  ,ПротоколТрансляции);
	

													  
	  Если НаборПриемник.Количество() > 0 Тогда
		  
		  ЗаписьПриемник = НаборПриемник[0];
		  
		  Если ЗначениеЗаполнено(ЗаписьПриемник.СчетДт) Тогда
			  
			  // Заполним данные, полученные трансляцией в счет КТ строки таб. части.
			  НоваяСтрока.СчетКт = ЗаписьПриемник.СчетДт;
			  
			  Для Ном = 1 По фКоличествоСубконтоМУ Цикл
				  НоваяСтрока["СубконтоКт" + Ном] = бит_МеханизмТрансляции.ЗначениеСубконто(ЗаписьПриемник, "Дт", Ном);
			  КонецЦикла; 
			  
			НастройкиСубконто = бит_БухгалтерияСервер.ПолучитьНастройкиСубконто(НоваяСтрока.СчетКт, фКоличествоСубконтоМУ);									  
			бит_БухгалтерияКлиентСервер.ПривестиЗначенияСубконто(НоваяСтрока, НастройкиСубконто, "СубконтоКт");
  
		  КонецЕсли; 
		  
	  КонецЕсли;
													  
КонецПроцедуры // ВыполнитьПодборСчетовСписаниеОС()

#КонецОбласти 
 
#КонецЕсли
