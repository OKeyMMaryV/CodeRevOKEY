#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем мИзмерения Экспорт; // Хранит измерения бюджетирования.

Перем мИзмеренияДоп Экспорт; // Хранит дополнительные измерения бюджетирования.

Перем мНастройкиИзмерений Экспорт; // Хранит настройки дополнительных измерений.

Перем мРежимОбновленияВиз Экспорт; // Хранит режим обновления перечня виз.

Перем мРежимЗаписи; // Служит для передачи режима записи между обработчиками.

Перем мБылПроведен Экспорт; // Служит для передачи признака проведения между обработчиками.

Перем мТекущийСтатус Экспорт; // Хранит текущий статус.

Перем мДатаИзмененияСтатуса Экспорт; // Хранит дату изменения статуса.

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = бит_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Проверка ручной корректировки
	Если бит_ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка, Отказ, Заголовок, ЭтотОбъект, Ложь) Тогда
		Возврат
	КонецЕсли;
	
	//БИТ АКриштопов 02032016 -->>
	//Провести проверку на задвоение ID и проверку на задвоение при совпадении полей: 
	//Входящий документ "Вид"+"Номер"+"Дата"+из Табличной части "Контрагент"+"Сумма". 
	//При совпадении документ не проводить, выдавать ошибку.
	ОтказID = ПоискДублейОперации("Поиск по ID");
	ОтказПоляПоиска = ПоискДублейОперации("Поля поиска");
	Если ОтказID Или ОтказПоляПоиска Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Найдены похожие документы бюджетной операции. Необходимо проверить ID, вид/номер/дату входящего документа, контрагента и сумму.";
		Сообщение.Сообщить();
	КонецЕсли;
	//БИТ АКриштопов 02032016 <<--
	
	//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-01 Начало (#3490)
	Если ок_КорректировкаОплаты И ЗначениеЗаполнено(ок_ДокументОснование) Тогда
		
		МассивДокументов = Новый Массив;
		МассивДокументов.Добавить(ок_ДокументОснование);
		
		Если РегистрыБухгалтерии.Хозрасчетный.ПроверитьНаличиеСозданногоДокументаЗнРДСВСтатусе(МассивДокументов, Истина) Тогда
			ТестСообщения = НСтр("ru = 'Проведение запрещено. Необходимо дождаться оплаты найденной заявки'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТестСообщения, ЭтотОбъект,,, Отказ);
		КонецЕсли;	
						
	КонецЕсли;	
	//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-01 Конец (#3490)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	СтруктураШапкиДокумента = бит_ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	//{ bit SVKushnirenko Bit 27.01.2017 #2657
	ЭтотОбъект.Движения.бит_КонтрольныеЗначенияБюджетов.ДополнительныеСвойства.Вставить("бит_БК_УстановкаСтатусаПослеПроведения", Истина);
	//} bit SVKushnirenko Bit 27.01.2017 #2657
	
	СтруктураКурсыВалют = бит_Бюджетирование.ПолучитьСтруктуруКурсовВалютСценария(ЭтотОбъект, Дата, Новый Структура("Документ, Регл, Упр, Сценарий"));
	
	ТаблицаБДДС = ПодготовитьТаблицуБДДС(СтруктураКурсыВалют);
	
	Если НЕ Отказ Тогда
		
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаБДДС, Отказ, Заголовок);
		
		// Заполним перечень виз
		Если мРежимОбновленияВиз = Перечисления.бит_РежимыОбновленияПеречняВиз.ОбновлятьПриПерепроведении ИЛИ НЕ мБылПроведен Тогда
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("ЦФО", ЦФО);		
			бит_Визирование.ОбновитьПереченьВиз(Ссылка, Дата, СтруктураПараметров);
			
		КонецЕсли; 				
			
		
		// Установим статус.
		УстановитьСтатус(РежимЗаписиДокумента.Проведение);	
		
	КонецЕсли;   	
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	//{ bit SVKushnirenko Bit 27.01.2017 #2657
	ЭтотОбъект.Движения.бит_КонтрольныеЗначенияБюджетов.ДополнительныеСвойства.Вставить("бит_БК_УстановкаСтатусаПередУдалением", Истина);
	//} bit SVKushnirenko Bit 27.01.2017 #2657
	
	СтруктураШапкиДокумента = бит_ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	СтруктураКурсыВалют = бит_Бюджетирование.ПолучитьСтруктуруКурсовВалютСценария(ЭтотОбъект, Дата, Новый Структура("Документ, Регл, Упр, Сценарий"));
	
	ТаблицаБДДС = ПодготовитьТаблицуБДДС(СтруктураКурсыВалют);
	
	бит_Бюджетирование.ПроверитьФиксацию(СтруктураШапкиДокумента.Сценарий, ТаблицаБДДС, Отказ);

	Если Отказ Тогда
	
		Возврат;
	
	КонецЕсли; 
	
	бит_ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, РучнаяКорректировка);

	Если НЕ Отказ Тогда
		
		// Очистим визы.
		бит_Визирование.ОчиститьВсеВизыБезусловно(Ссылка); 			
		
		// Установим статус.
		УстановитьСтатус(РежимЗаписиДокумента.ОтменаПроведения);		
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;			
	КонецЕсли; 
	
	мБылПроведен = Проведен;
	мРежимЗаписи = РежимЗаписи;
		
	Если НЕ Отказ И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ЗаполнитьЗависимыеОбороты();
	КонецЕсли; 

	// Выполним синхронизацию пометки на удаление объекта и дополнительных файлов.
	бит_ХранениеДополнительнойИнформации.СинхронизацияПометкиНаУдалениеУДополнительныхФайлов(ЭтотОбъект);

	// Подготовим массив типов для проверки.
	МассивТипов = бит_рлс_Основной.ПодготовитьМассивТиповДляПроверки(ЭтотОбъект);

	// Проверка на наличие "битых" ссылок в следствие работы RLS.
	бит_рлс_Основной.ПроверитьБитыеСсылкиВОбъекте(ЭтотОбъект, МассивТипов, Отказ);

	ПередЗаписьюВБП(Отказ);
	
	// Заполним аналитику в шапке документа.
	бит_ОбщегоНазначения.ЗаполнитьАналитикуВШапкеДокумента(ЭтотОбъект, БДДС, Отказ);
	
	//БИТ АКриштопов 17022016 -->>
	бит_СуммаДокумента = БДДС.Итог("Сумма");
	//БИТ АКриштопов 17022016 <<--
	
	// БИТ НАГолубева 26.02.2016 ++
	Если БДДС.Количество() > 0 Тогда//БИТ АКриштопов 18042016 ++ #2401
		Если НЕ БДДС[0].Контрагент.Пустая() Тогда
			бит_Контрагент = БДДС[0].Контрагент;
		КонецЕсли;
	КонецЕсли;//БИТ АКриштопов 180402016 #2401
	// БИТ НАГолубева 26.02.2016 --
	
	//+БиТ_Сундукова 01032016 - перенесла из процедуры "ПриЗаписи"
	Если НЕ ЗначениеЗаполнено(Номер) Тогда
		ЭтотОбъект.УстановитьНовыйНомер(); 
	КонецЕсли;
	//ОК Довбешка Т. 09.01.2017
	//Префикс = Формат(1,"ЧЦ=1");
	
	
	//ИсходныйНомер = 303840;
	Если Год(Дата)>2016 Тогда 
		Префикс = Формат(Год(Дата)-2015,"ЧЦ=1");
		
		ИсходныйНомер = 0;
	Иначе
		Префикс = Формат(1,"ЧЦ=1");
		
		ИсходныйНомер = 303840;
	КонецЕсли;
	//ОК
	Корень = Формат(ИсходныйНомер + Число(Прав(Номер,6)),"ЧЦ=6; ЧВН=; ЧГ=0");
	СтрокаРезультат = Префикс + Корень;
	
	//вычисляем постфикс
	Сумма = 0;
	Для сч = 0 по 6 Цикл
		НомерСимвола = 7-сч; //от 7 до 1
		СимволС = Сред(СтрокаРезультат,НомерСимвола,1);
		СимволЧ = Число(СимволС);
		Если Цел(НомерСимвола/2) = НомерСимвола/2 Тогда
			СимволЧ = СимволЧ * 2;
			Если СимволЧ > 9 Тогда 
				СимволЧ = СимволЧ - 9;
			КонецЕсли;
		КонецЕсли;
		Сумма = Сумма + СимволЧ;
	КонецЦикла;
	Сумма = (1-(Сумма/10 - Цел(Сумма/10)))*10;
	Если Сумма = 10 Тогда 
		Сумма = 0;
	КонецЕсли;
	СтрокаРезультат = СтрокаРезультат + Строка(Сумма);
	
	ОК_ID_Разноска = Сред(СтрокаРезультат,1,4) + "-" + Сред(СтрокаРезультат,5,4);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
	
	Если НЕ Отказ Тогда
		
		Если НЕ мРежимЗаписи = РежимЗаписиДокумента.Проведение  Тогда 			
			
			СтатусНач = мТекущийСтатус;
			УстановитьСтатус(мРежимЗаписи);		
			
		КонецЕсли; 
		
		//ОКЕЙ Рычаков А.С.(СофтЛаб) Начало 2019-10-01 (#3490)
		Если ок_КорректировкаОплаты И мРежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			
			ИнвестиционныйСценарийПланирования = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("ок_ИнвестиционныйСценарийПланирования");
			ОперационныйСценарийПланирования = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("ок_ОперационныйСценарийПланирования");
			
			Если Не (Сценарий = ИнвестиционныйСценарийПланирования 
				Или Сценарий = ОперационныйСценарийПланирования) Тогда  
				
				ТестСообщения = НСтр("ru = 'Установленный признак ''Корректировка оплаты'' не соответствует полю ''Сценарий''. Документ не проведен.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТестСообщения,ЭтотОбъект,,,Отказ);
				
			КонецЕсли;
			
		КонецЕсли;	
		//ОКЕЙ Рычаков А.С.(СофтЛаб) Конец 2019-10-01 (#3490)		
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если СверхБюджета Тогда
		// Скидываем значение флага "СверхБюджета".
		СверхБюджета = Ложь;
	КонецЕсли;
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	АктуализироватьКурсы();
	
	// БИТ НАГолубева 26.02.2016++
	//Очищаем значения и указываем текущего ответственного
	ОК_ID_Разноска = "";
	ЦФО = Справочники.Подразделения.ПустаяСсылка();
	СтатьяОборотов = Справочники.бит_СтатьиОборотов.ПустаяСсылка();
	Проект = Справочники.Проекты.ПустаяСсылка();
	//Комментарий = "";  Комментарий не трогаем
	Ответственный = Пользователи.ТекущийПользователь();
	// БИТ НАГолубева 26.02.2016--
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда
		
		// Заполнение шапки
		бит_ОбщегоНазначения.ЗаполнитьШапкуДокумента(ЭтотОбъект
		                                               , бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь")
													   , Неопределено);
													   
		Если ЗначениеЗаполнено(Сценарий) Тогда
			ИзменениеСценарияОбъект(); 
		КонецЕсли;
		
		// По умолчанию режим зависимых оборотов "Автоматический".
		// BIT AMerkulov 27-01-2016 ++
		//РежимЗависимыхОборотов = Перечисления.бит_РежимыЗависимыхОборотов.Автоматический;
		РежимЗависимыхОборотов = Перечисления.бит_РежимыЗависимыхОборотов.НеФормировать;
		// BIT AMerkulov 27-01-2016 --
		
	КонецЕсли;	
	
	//СофтЛаб Начало 2018-11-20 3091
	//ОКЕЙ Рычаков А.С.(СофтЛаб) Начало 2019-10-01 (#3490)
	//Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОперацияБух") Тогда
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОперацияБух")
		 ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КорректировкаПоступления") 
		 ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.бит_БюджетнаяОперация")
		 ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеНМА")
		 ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
		 ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.бит_ок_ОперацияАксапты")
		 //ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-26 (#ПроектИнтеграцияАксапта12)
		 ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.бит_ок_ОперацияАксапты12")
		 //ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-26 (#ПроектИнтеграцияАксапта12)
		 ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеДопРасходов") Тогда
	//ОКЕЙ Рычаков А.С.(СофтЛаб) Конец 2019-10-01 (#3490)
	
	    //ОКЕЙ Рычаков А.С.(СофтЛаб) Начало 2019-10-01 (#3490)
		//бит_Организация 		= ДанныеЗаполнения.Организация;
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.бит_БюджетнаяОперация") Тогда
			бит_Организация = ДанныеЗаполнения.бит_Организация;
		Иначе 
			бит_Организация = ДанныеЗаполнения.Организация;
		КонецЕсли;	
	    //ОКЕЙ Рычаков А.С.(СофтЛаб) Конец 2019-10-01 (#3490)	
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-14 (#3091)
		//ок_ДокументОснование 	= ДанныеЗаполнения.ДанныеЗаполнения;
		//Заменено на:
		ок_ДокументОснование 	= ДанныеЗаполнения;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-14 (#3091)		
		
		НомерЗаявки 			= бит_МеханизмДопИзмерений.ПолучитьЗначениеДопАналитики(ДанныеЗаполнения,
									   	   ПланыВидовХарактеристик.бит_ВидыДополнительныхАналитик.НайтиПоКоду("NЗАЯВКИ"), 
										   ПредопределенноеЗначение("Документ.бит_ФормаВводаБюджета.ПустаяСсылка"));
										   								   
		ВыборкаОборотыПоБюджетам = РегистрыНакопления.бит_ОборотыПоБюджетам.ВыбратьПоРегистратору(ДанныеЗаполнения);										   
		Пока ВыборкаОборотыПоБюджетам.Следующий() Цикл
			
			НоваяСтрока = БДДС.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаОборотыПоБюджетам);
			//ОКЕЙ Рычаков А.С.(СофтЛаб) Начало 2019-10-01 (#3490)
			НоваяСтрока.СуммаНДС = ВыборкаОборотыПоБюджетам.СуммаСНДСРегл - ВыборкаОборотыПоБюджетам.СуммаРегл;  	
			//ОКЕЙ Рычаков А.С.(СофтЛаб) Конец 2019-10-01 (#3490)
			
		КонецЦикла;
		
	КонецЕсли;
	//СофтЛаб Конец 2018-11-20 3091
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Обязательные измерения из разряда дополнительных.
	Для каждого КлючИЗначение Из мНастройкиИзмерений Цикл
	
		ИмяИзмерения = "БДДС." + КлючИЗначение.Ключ;
		Настройка    = КлючИЗначение.Значение;
		
		Если Настройка.Обязательное Тогда  			
			ПроверяемыеРеквизиты.Добавить(ИмяИзмерения);		
		КонецЕсли; 
	
	КонецЦикла; 
	
	Для каждого СтрокаТаблицы Из БДДС Цикл
	
		Если СтрокаТаблицы.Количество = 0 И СтрокаТаблицы.Сумма = 0 Тогда
			
			ТекстСообщения =  НСтр("ru = 'В строке №%1% табличной части ""Данные бюджета"" не заполнены ни сумма ни количество.'");
			ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, СтрокаТаблицы.НомерСтроки);
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
			Отказ = Истина;
		
		КонецЕсли; 
	
	КонецЦикла; 
	
	бит_Бюджетирование.ПроверитьОбязательныеРазрезыСтатейОборотов(ЭтотОбъект, "БДДС", Отказ, мИзмерения);
	бит_Бюджетирование.ПроверитьОбязательныеРазрезыСтатейОборотов(ЭтотОбъект, "ЗависимыеОбороты", Отказ, мИзмерения);
	
	// Установка настроек обязательности реквизитов
	СтатусДляПоискаНастроек = ?(ЗначениеЗаполнено(мТекущийСтатус), мТекущийСтатус, Справочники.бит_СтатусыОбъектов.БюджетнаяОперация_Черновик);
	бит_ОбщегоНазначения.УстановитьНастройкиОбязательностиРеквизитов(ЭтотОбъект, ПроверяемыеРеквизиты, СтатусДляПоискаНастроек); 

	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-11-19 (#3102)
	Если Не Отказ Тогда 
		ПроверитьНаНесоответствиеОрганизацииВШапкеИДоговоровТЧ(Отказ);	
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-11-19 (#3102)
	
КонецПроцедуры

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-11-19 (#3102)
Процедура ПроверитьНаНесоответствиеОрганизацииВШапкеИДоговоровТЧ(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДоговоров"	,	БДДС.ВыгрузитьКолонку("ДоговорКонтрагента"));
	Запрос.УстановитьПараметр("Организация"		, 	бит_Организация);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка В(&СписокДоговоров)
	|	И ДоговорыКонтрагентов.Организация <> &Организация";
	
	ТаблицаДоговоров = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаБДДС ИЗ БДДС Цикл 
		
		Если ТаблицаДоговоров.Найти(СтрокаБДДС.ДоговорКонтрагента, "Договор") = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		
		ТекстСообщения =  НСтр("ru = 'В строке №%1% табличной части ""Данные бюджета"" организация договора не соответствует организации документа!'");
		ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, СтрокаБДДС.НомерСтроки);
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		Отказ = Истина;
		
	КонецЦикла;	
	
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-11-19 (#3102)

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Процедура устанавливает статус документа.
// 
// Параметры:
//  РежимЗаписи - РежимЗаписиДокумента.
// 
Процедура УстановитьСтатус(вхРежимЗаписи = Неопределено) Экспорт
	
	СтрАлгоритмы              = бит_уп_Сервер.ПолучитьАлгоритмыОбъектаСистемы(ЭтотОбъект, Перечисления.бит_уп_ВидыАлгоритмов.ИзменениеСтатусовОбъектов);
	мАлгоритмИзмененияСтатуса = СтрАлгоритмы.ИзменениеСтатусовОбъектов;	
	
	Если НЕ ЗначениеЗаполнено(мАлгоритмИзмененияСтатуса) Тогда	
	
		Если вхРежимЗаписи = Неопределено Тогда
		     РежимЗаписи = РежимЗаписиДокумента.Запись;
		Иначе	
		     РежимЗаписи = вхРежимЗаписи;
		КонецЕсли;
		
		// Вычислим переменные, необходимые для установки статуса.
	    ВсеВизыПолучены = бит_Визирование.ВизыПолучены(Ссылка);
		ЕстьОтклонено   = бит_Визирование.ПринятоРешение(Ссылка, , Справочники.бит_ВидыРешенийСогласования.Отклонено);		
		
		// Определим статус.		
	    Статус = ОпределитьСтатус(мТекущийСтатус,ВсеВизыПолучены, ЕстьОтклонено,РежимЗаписи);
		
		// Если статус изменился - запишем его
		Если мТекущийСтатус <> Статус Тогда
			
			ДатаИзмененияСтатуса = ТекущаяДата();
			
			ДействиеВыполнено = бит_Визирование.УстановитьСтатусОбъекта(Ссылка
																		, Перечисления.бит_ВидыСтатусовОбъектов.Статус
																		, Статус
																		, мТекущийСтатус
																		, бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь")
																		, ДатаИзмененияСтатуса);
			
			Если ДействиеВыполнено Тогда
				мТекущийСтатус 		  = Статус;
				мДатаИзмененияСтатуса = ДатаИзмененияСтатуса;
			КонецЕсли; 	
			
		КонецЕсли;
	
	Иначе	
		
		// Выполнение установки статуса согласно алгоритма изменения статусов.
		КомментироватьВыполнение = бит_УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("КомментироватьХодВыполненияАлгоритмовПроцессов",
								бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь"));
			
        РежимСообщений = ?(КомментироватьВыполнение, "Все", "Ошибки");			
			
		СтруктураКонтекст = Новый Структура;
		СтруктураКонтекст.Вставить("ТекущийОбъект", ЭтотОбъект);
		
		бит_уп_Сервер.ВыполнитьАлгоритм(мАлгоритмИзмененияСтатуса, СтруктураКонтекст, РежимСообщений);
		
	КонецЕсли;   	
	
КонецПроцедуры

// Процедура очищает табличную часть ЗависимыеОбороты.
// 
// Параметры:
//  Нет.
// 
Процедура ОчиститьЗависимыеОбороты() Экспорт

	ЗависимыеОбороты.Очистить();

КонецПроцедуры

// Процедура заполняет табличную часть ЗависимыеОбороты.
// 
// Параметры:
//  Нет.
// 
Процедура ЗаполнитьЗависимыеОбороты() Экспорт

	УстановитьПривилегированныйРежим(Истина);	
	
	ОчиститьЗависимыеОбороты();
	
	Если РежимЗависимыхОборотов = Перечисления.бит_РежимыЗависимыхОборотов.НеФормировать Тогда
		// Не формируем зависимые обороты.
		Возврат;
	КонецЕсли;
	
	РазмерностьЕдиницы = бит_ОбщегоНазначения.ПолучитьРазмерностьЕдиницыИзмеренияСумм(ЕдиницаИзмеренияСумм);
	Измерения 		   = бит_Бюджетирование.ПолучитьИзмеренияБюджетирования("все","имя");
	
	МаксПериод = бит_Бюджетирование.ПолучитьМаксПериод(БДДС);	
	НастройкиЗависимыхОборотов = бит_Бюджетирование.ПолучитьНастройкиЗависимыхОборотов(Сценарий, МаксПериод);	
	
	Для каждого СтрокаТаблицы Из БДДС Цикл
		
		// Запомним сумму в единице документа. 
		СуммаВЕдиницеДокумента = СтрокаТаблицы.Сумма;
		
		// Расчитаем сумму в указанных единицах измерения сумм.
		СтрокаТаблицы.Сумма = бит_ОбщегоНазначения.ПересчитатьИзРазмерностиВРазмерность(СуммаВЕдиницеДокумента,
			РазмерностьЕдиницы,1);
			
		ПараметрыФормирования = бит_Бюджетирование.НовыеПараметрыФормированияЗависмыхОборотовПоСтроке();
		ПараметрыФормирования.ДатаЗаполнения 			= СтрокаТаблицы.Период;
		ПараметрыФормирования.ТекущийОбъект 			= ЭтотОбъект;
		ПараметрыФормирования.СтрокаТабличнойЧасти		= СтрокаТаблицы;
		ПараметрыФормирования.ИмяТабличнойЧастиИсточник = "БДДС";
		ПараметрыФормирования.ИмяТабличнойЧастиПриемник = "ЗависимыеОбороты";
		ПараметрыФормирования.ИзмеренияБюджетирования	= Измерения;
		ПараметрыФормирования.вхНастройкиЗависимых      = НастройкиЗависимыхОборотов;
		бит_Бюджетирование.СформироватьЗависимыеОборотыПоСтроке(ПараметрыФормирования);
		
		// После формирования зависимых оборотов по строке
		// необходимо возвратить сумму в единице документа.
		СтрокаТаблицы.Сумма = СуммаВЕдиницеДокумента;
	КонецЦикла; 
	
	УстановитьПривилегированныйРежим(Ложь);	
	
КонецПроцедуры

// Процедура обрабатывает изменение валюты документа.
// 
// Параметры:
//  Нет.
// 
Процедура ИзменениеВалютыОбъект() Экспорт
	
	СтрКурса = бит_Бюджетирование.ПолучитьКурсПоСценарию(Сценарий, ВалютаДокумента, Дата);
	КурсДокумента      = СтрКурса.Курс;
	КратностьДокумента = СтрКурса.Кратность;
	
КонецПроцедуры

// Процедура обрабатывает изменение сценария в шапке документа.
// 
// Параметры:
//  Нет.
// 
Процедура ИзменениеСценарияОбъект()  Экспорт

	ВалютаДокумента = Сценарий.Валюта;
		
	ИзменениеВалютыОбъект();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыИФункцииДляОбеспеченияПроведенияДокумента

// Функция готовит таблицу БДДС для проведения.
// 
// Возвращаемое значение:
//   СтруктураКурсыВалют - Структура.
// 
Функция ПодготовитьТаблицуБДДС(СтруктураКурсыВалют)
	
	РазмерностьСумм = бит_ОбщегоНазначения.ПолучитьРазмерностьЕдиницыИзмеренияСумм(ЕдиницаИзмеренияСумм);
	
	ТекстПолей_бит_БюджетнаяОперацияБДДС  			 = "";
	ТекстПолей_бит_БюджетнаяОперацияЗависимыеОбороты = "";
	Для каждого ТекИзмерение Из Метаданные.РегистрыНакопления.бит_ОборотыПоБюджетам.Измерения Цикл		
		
		ИмяИзмерения = ТекИзмерение.Имя;
		Если ИмяИзмерения = "Валюта" Или ИмяИзмерения = "Сценарий" Тогда
			Продолжить;		
		КонецЕсли;
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-22 (#3102)		
		Если ИмяИзмерения = "Аналитика_4" Тогда 
			ТекстПолей_бит_БюджетнаяОперацияБДДС = ТекстПолей_бит_БюджетнаяОперацияБДДС + Символы.ПС + "	бит_БюджетнаяОперацияБДДС.Ссылка.ОК_ID_Разноска КАК Аналитика_4,";	
			Продолжить;
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-22 (#3102)		
		
		// Поля запроса
		ТекстПолей_бит_БюджетнаяОперацияБДДС = ТекстПолей_бит_БюджетнаяОперацияБДДС + Символы.ПС + "	бит_БюджетнаяОперацияБДДС." + ИмяИзмерения + ",";
				
	КонецЦикла;
	ТекстПолей_бит_БюджетнаяОперацияЗависимыеОбороты = СтрЗаменить(ТекстПолей_бит_БюджетнаяОперацияБДДС, "бит_БюджетнаяОперацияБДДС", "бит_БюджетнаяОперацияЗависимыеОбороты");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	бит_БюджетнаяОперацияБДДС.Период,
	               |	бит_БюджетнаяОперацияБДДС.Ссылка.Сценарий,
				   |   " + ТекстПолей_бит_БюджетнаяОперацияБДДС + "
	               |	бит_БюджетнаяОперацияБДДС.Количество,
	               |	бит_БюджетнаяОперацияБДДС.Ссылка.ВалютаДокумента КАК Валюта,
	               |	ВЫБОР
	               |		КОГДА бит_БюджетнаяОперацияБДДС.СтатьяОборотов.ЭтоКоэффициент = ИСТИНА
	               |			ТОГДА ЕСТЬNULL(бит_БюджетнаяОперацияБДДС.Сумма, 0)
	               |		ИНАЧЕ ЕСТЬNULL(бит_БюджетнаяОперацияБДДС.Сумма, 0) * &РазмерностьСумм
	               |	КОНЕЦ КАК Сумма,
	               //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-22 (#3102)
				   //|	бит_БюджетнаяОперацияБДДС.СтатьяОборотов.СтавкаНДС КАК СтавкаНДС,
				   //Заменено на:
				   |	бит_БюджетнаяОперацияБДДС.СтавкаНДС КАК СтавкаНДС,
				   //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-22 (#3102)
				   |	ВЫБОР
	               |		КОГДА бит_БюджетнаяОперацияБДДС.СтатьяОборотов = ЗНАЧЕНИЕ(Справочник.бит_СтатьиОборотов.ПустаяСсылка)
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ бит_БюджетнаяОперацияБДДС.СтатьяОборотов.ЭтоКоэффициент
	               |	КОНЕЦ КАК ЭтоКоэффициент,
	               |	0 КАК СуммаРегл,
	               |	0 КАК СуммаУпр,
	               |	0 КАК СуммаСценарий,
				   //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-14 (#3078)
				   |	0 КАК СуммаСНДСРегл,
	               |	0 КАК СуммаСНДСУпр,
	               |	0 КАК СуммаСНДССценарий,
				   |	ВЫБОР
	               |		КОГДА бит_БюджетнаяОперацияБДДС.СтатьяОборотов.ЭтоКоэффициент = ИСТИНА
	               |			ТОГДА 1
	               |		ИНАЧЕ &РазмерностьСумм
	               |	КОНЕЦ * (ЕСТЬNULL(бит_БюджетнаяОперацияБДДС.Сумма, 0) + ЕСТЬNULL(бит_БюджетнаяОперацияБДДС.СуммаНДС, 0)) КАК СуммаСНДС,
				   //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-14 (#3078)				   
	               |	бит_БюджетнаяОперацияБДДС.Комментарий КАК Комментарий
	               |ИЗ
	               |	Документ.бит_БюджетнаяОперация.БДДС КАК бит_БюджетнаяОперацияБДДС
	               |ГДЕ
	               |	бит_БюджетнаяОперацияБДДС.Ссылка = &Ссылка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	бит_БюджетнаяОперацияЗависимыеОбороты.Период,
	               |	бит_БюджетнаяОперацияЗависимыеОбороты.Ссылка.Сценарий,
				   |   " + ТекстПолей_бит_БюджетнаяОперацияЗависимыеОбороты + "
	               |	бит_БюджетнаяОперацияЗависимыеОбороты.Количество,
	               |	бит_БюджетнаяОперацияЗависимыеОбороты.Ссылка.ВалютаДокумента,
	               |	бит_БюджетнаяОперацияЗависимыеОбороты.Сумма,
	               |	бит_БюджетнаяОперацияЗависимыеОбороты.СтатьяОборотов.СтавкаНДС,
	               |	ВЫБОР
	               |		КОГДА бит_БюджетнаяОперацияЗависимыеОбороты.СтатьяОборотов = ЗНАЧЕНИЕ(Справочник.бит_СтатьиОборотов.ПустаяСсылка)
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ бит_БюджетнаяОперацияЗависимыеОбороты.СтатьяОборотов.ЭтоКоэффициент
	               |	КОНЕЦ,
	               |	0,
	               |	0,
	               |	0,
				   //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-14 (#3078)
				   |	0,
	               |	0,
				   |	0,
	               |	0,
				   //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-14 (#3078)
	               |	""""
	               |ИЗ
	               |	Документ.бит_БюджетнаяОперация.ЗависимыеОбороты КАК бит_БюджетнаяОперацияЗависимыеОбороты
	               |ГДЕ
	               |	бит_БюджетнаяОперацияЗависимыеОбороты.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка"		   , Ссылка);			   
	Запрос.УстановитьПараметр("РазмерностьСумм", РазмерностьСумм);
	
	Результат = Запрос.Выполнить();
	
	ТаблицаБДДС = Результат.Выгрузить();
	
	КурсыПоПериодам = Неопределено;
	Если Сценарий.ИспользоватьКурсыСценария Тогда
		
		// Получим таблицу периодов
		ТаблицаПериодов = БДДС.Выгрузить();
		ТаблицаПериодов.Свернуть("Период");
		
		// Установим настройки для получения курсов по периодам.
		СтруктураПараметров = бит_Бюджетирование.ЗаполнитьСтруктуруПараметровПолученияКурсовПоПериодам(Сценарий, ВалютаДокумента);
		
		// Получим курсы по периодам
		КурсыПоПериодам = бит_КурсыВалют.ПолучитьКурсыВалютПоПериодам(ТаблицаПериодов, Сценарий, СтруктураПараметров);
		
	КонецЕсли; 
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-14 (#3078)
	//бит_Бюджетирование.ВыполнитьПересчетыВТаблицеОборотов(ТаблицаБДДС, КурсыПоПериодам, СтруктураКурсыВалют);
	//Заменено на:
	бит_Бюджетирование.ВыполнитьПересчетыВТаблицеОборотов(ТаблицаБДДС, КурсыПоПериодам, СтруктураКурсыВалют,"СуммаСНДС");
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-14 (#3078)
	
	//бит 20160122 nshevchenko обнуление количества(
	Для Каждого ТекСтр Из ТаблицаБДДС Цикл 
		ТекСтр.Количество = 0;
		//заполнение по умолчанию
		//ОКЕЙ Лобанов В.И. (СофтЛаб) Начало 2020-04-18 (#3532)
		//ТекСтр.Аналитика_3 = Перечисления.УдалитьИжтиси_бит_БК_ВариантыБюджета.ВРамкахБюджета;
		ТекСтр.Аналитика_3 = Неопределено;
		//ОКЕЙ Лобанов В.И. (СофтЛаб) Конец 2020-04-18 (#3532)
	КонецЦикла;
	//бит)	
		
	Возврат ТаблицаБДДС;
	
КонецФункции

// Процедура выполняет движения по регистрам.
//                
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаБДДС, Отказ, Заголовок)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
	соотСценарийОчищаемыеПоля = Новый Соответствие;
	мдЗнчПеречисления = Метаданные.Перечисления.бит_БК_ИзмеренияКонтроляБюджета.ЗначенияПеречисления;						
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)
	
	// Движения по регистру обороты по бюджетам
	//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-01 (#3490)
	//ТаблицаДвижений = Движения.бит_ОборотыПоБюджетам.Выгрузить();
	//ТаблицаДвижений.Очистить();
	//
	//Для Каждого СтрокаТаблицы Из ТаблицаБДДС Цикл
	//	НоваяСтрока = ТаблицаДвижений.Добавить();
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	//КонецЦикла; 
	//
	//Движения.бит_ОборотыПоБюджетам.мТаблицаДвижений = ТаблицаДвижений;
	//Движения.бит_ОборотыПоБюджетам.ДобавитьДвижение();
	
	Если Не ок_КорректировкаОплаты Тогда 
		
		//----------------------------------------------------------------------
		// Движения по регистру обороты по бюджетам
		ТаблицаДвижений = Движения.бит_ОборотыПоБюджетам.Выгрузить();
		ТаблицаДвижений.Очистить();
		
		
		Для Каждого СтрокаТаблицы Из ТаблицаБДДС Цикл
			
			НоваяСтрока = ТаблицаДвижений.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
			НоваяСтрока.бит_БК_Организация = СтруктураШапкиДокумента.бит_Организация;
			ОчиститьНеиспользуемыеИзмеренияКонтроля(НоваяСтрока,соотСценарийОчищаемыеПоля,мдЗнчПеречисления,ТаблицаДвижений.Колонки);				
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)
			
			//// Движения сторно, если необходимо
			//Если ЗначениеЗаполнено(ДатаСторно) Тогда
			//    НоваяСтрока = ТаблицаДвижений.Добавить();
			//	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			//    НоваяСтрока.Период = ДатаСторно;
			//    // Ресурсы с минусом
			//    РесурсыРегистра = Метаданные.РегистрыНакопления.бит_ОборотыПоБюджетам.Ресурсы;
			//    Для каждого ТекРес Из РесурсыРегистра Цикл
			//        ИмяРесурса = ТекРес.Имя;
			//    	НоваяСтрока[ИмяРесурса] = - НоваяСтрока[ИмяРесурса];             
			//    КонецЦикла;
			//КонецЕсли;
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-01-14 (#3138)
			НоваяСтрока.СтавкаНДС = Неопределено;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-01-14 (#3138)
			
		КонецЦикла; 
		
		Движения.бит_ОборотыПоБюджетам.мТаблицаДвижений = ТаблицаДвижений;
		Движения.бит_ОборотыПоБюджетам.ДобавитьДвижение();
		
	КонецЕсли; 
	//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-01 (#3490)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
	//Передадим кэшированные значения
	СтруктураШапкиДокумента.Вставить("соотСценарийОчищаемыеПоля", соотСценарийОчищаемыеПоля);
	СтруктураШапкиДокумента.Вставить("мдЗнчПеречисления"		, мдЗнчПеречисления);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)	
    
	// По регистру контрольные значения
 	//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-01 Начало (#3490)
	//ДвиженияПоРегиструКонтрольныхЗначений(СтруктураШапкиДокумента, ТаблицаБДДС, Отказ, Заголовок);
	Если ок_КорректировкаОплаты Тогда
		ДвиженияПоРегиструКонтрольныхЗначений_КорректировкаОплаты(СтруктураШапкиДокумента, ТаблицаБДДС);
	Иначе 
		ДвиженияПоРегиструКонтрольныхЗначений(СтруктураШапкиДокумента, ТаблицаБДДС, Отказ, Заголовок);
	КонецЕсли;	
    //ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-01 Конец (#3490)
	
	// Регистру бухгалтерии бюджетирование
    //бит_Бюджетирование.СформироватьПроводкиБюджетирования(ТаблицаБДДС, Движения.бит_Бюджетирование, , ДатаСторно);
	бит_Бюджетирование.СформироватьПроводкиБюджетирования(ТаблицаБДДС, Движения.бит_Бюджетирование);
	
КонецПроцедуры

// Процедура выполняет движения по регистру бит_КонтрольныеЗначенияБюджетов 
// и осуществляет контроль по бюджету.
// 
// Параметры:
//  СтруктураШапкиДокумента  - Структура.
//  ТаблицаРасход            - ТаблицаЗначений.
//  Отказ                    - Булево.
//  Заголовок                - Строка.
// 
Процедура ДвиженияПоРегиструКонтрольныхЗначений(СтруктураШапкиДокумента, ТаблицаБДДС, Отказ, Заголовок)
      		
	ТаблицаДляКонтроля = ТаблицаБДДС.Скопировать();

	ВалютаСценария    = Сценарий.Валюта;
	СтруктураСценарий = бит_КурсыВалют.ПолучитьКурсВалюты(ВалютаСценария,Дата);	
	
	Для каждого СтрокаТаблицы Из ТаблицаДляКонтроля Цикл
		СтрокаТаблицы.Сумма = бит_КурсыВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.Сумма
																						,ВалютаДокумента
																						,ВалютаСценария
																						,КурсДокумента
																						,СтруктураСценарий.Курс
																						,КратностьДокумента
																						,СтруктураСценарий.Кратность);
	КонецЦикла; 
																					
	МассивИсключений = Новый Массив;
	МассивИсключений.Добавить("Сценарий");
	МассивИсключений.Добавить("СтатьяОборотов");
	
	//+Сенин С.В. 15.09.16 №2595
	
	////БИТ АКриштопов 28.03.2016 ++
	//Если ТипЗнч(ЭтотОбъект.НомерЗаявки) = Тип("ДокументСсылка.бит_ФормаВводаБюджета") Тогда
	//	ОстатокФВД = ЭтотОбъект.НомерЗаявки.БДДС.Итог("ОстатокПоБюджету");
	//	Если ОстатокФВД >= 0 Тогда
	//		МассивИсключений.Добавить("Контрагент");
	//		МассивИсключений.Добавить("ДоговорКонтрагента");
	//	КонецЕсли;
	//КонецЕсли;
	////БИТ АКриштопов 28.03.2016 --
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-10 (#3078)	   
	//Если ТипЗнч(ЭтотОбъект.НомерЗаявки) = Тип("ДокументСсылка.бит_ФормаВводаБюджета")
	//	и не ЭтотОбъект.НомерЗаявки.Пустая() Тогда
	//	МассивИсключений.Добавить("Контрагент");
	//	МассивИсключений.Добавить("ДоговорКонтрагента");
	//КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-10 (#3078)
	МассивИсключений.Добавить("Аналитика_3");
	//-Сенин С.В. 15.09.16 №2595	

	ИзмеренияКонтроля = бит_КонтрольПоБюджету.КонструкторСтруктурыИзмеренияКонтроля(МассивИсключений,,,мНастройкиИзмерений);

	Периодичность = бит_КонтрольПоБюджету.ПериодичностьКонтроляСценария(Сценарий);	
	//Начало_бит_Магомедов_16.05.2016   
	//бит_КонтрольПоБюджету.СвернутьТаблицуКонтроля(ТаблицаДляКонтроля,ИзмеренияКонтроля,Периодичность);
	Если Сценарий = Справочники.СценарииПланирования.Факт_Инвест Тогда 
		бит_КонтрольПоБюджету.СвернутьТаблицуКонтроля(ТаблицаДляКонтроля,ИзмеренияКонтроля,Перечисления.бит_ПериодичностьПланирования.Месяц);
	иначе
		бит_КонтрольПоБюджету.СвернутьТаблицуКонтроля(ТаблицаДляКонтроля,ИзмеренияКонтроля,Периодичность);
	КонецЕсли;
	//Конец_бит_Магомедов_16.05.2016 
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ИзмеренияКонтроля"            ,ИзмеренияКонтроля);
	СтруктураПараметров.Вставить("Сценарий"                     ,Сценарий);
	СтруктураПараметров.Вставить("КонтролироватьНеУстановленные",Истина);
	СтруктураПараметров.Вставить("РежимКонтроля"                ,"Бюджет");

	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
	СтруктураПараметров.Вставить("РесурсыДоп", Новый Структура("СуммаСНДС"));
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)
	
	ТекстЗапроса = бит_КонтрольПоБюджету.СформироватьТекстЗапросаДляКонтроля(СтруктураПараметров);

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;	
   
	ТаблицаДляКонтроля.Сортировать("Период Возр");

	Если ТаблицаДляКонтроля.Количество() > 0 Тогда	   
		ДатаНачала    = ТаблицаДляКонтроля[0].Период;
		ДатаОкончания = ТаблицаДляКонтроля[ТаблицаДляКонтроля.Количество()-1].Период;	   
	Иначе	   
	   	ДатаНачала    = Дата;
	   	ДатаОкончания = Дата;	   
	КонецЕсли; 
   
	ДатаНач = бит_Бюджетирование.ПолучитьНачалоПериода(ДатаНачала,Периодичность);
	ДатаКон = бит_Бюджетирование.ПолучитьКонецПериода(ДатаОкончания,Периодичность);

	МассивСтатей = ТаблицаДляКонтроля.ВыгрузитьКолонку("СтатьяОборотов");
	бит_РаботаСКоллекциями.УдалитьПовторяющиесяЭлементыМассива(МассивСтатей);

	Запрос.УстановитьПараметр("ДатаНачала"    ,ДатаНач);
	Запрос.УстановитьПараметр("ДатаОкончания" ,ДатаКон);
	Запрос.УстановитьПараметр("СценарийКонтролируемый", Сценарий);
	Запрос.УстановитьПараметр("МассивСтатьяОборотов"  , МассивСтатей);
	Запрос.УстановитьПараметр("Ссылка"                , Ссылка);
	Запрос.УстановитьПараметр("ТаблицаДляКонтроля"    , ТаблицаДляКонтроля);

	бит_КонтрольПоБюджету.ЗаполнитьПараметрыПоИзмерениямКонтроля(ТаблицаДляКонтроля,ИзмеренияКонтроля,Запрос);
	
	//+Сенин С.В. 12.09.16 №2595
	ИмяИзмерения="Аналитика_2";
	МассивПараметров = ТаблицаДляКонтроля.ВыгрузитьКолонку(ИмяИзмерения);
	бит_РаботаСКоллекциями.УдалитьПовторяющиесяЭлементыМассива(МассивПараметров);		 
	Запрос.УстановитьПараметр("Массив"+ИмяИзмерения,МассивПараметров);
	ИмяИзмерения="ЦФО";
	МассивПараметров = ТаблицаДляКонтроля.ВыгрузитьКолонку(ИмяИзмерения);
	бит_РаботаСКоллекциями.УдалитьПовторяющиесяЭлементыМассива(МассивПараметров);		 
	Запрос.УстановитьПараметр("Массив"+ИмяИзмерения,МассивПараметров);
	//-Сенин С.В. 12.09.16 №2595  
	
	Результат = Запрос.Выполнить();

	НаборЗаписей = Движения.бит_КонтрольныеЗначенияБюджетов;    
	ТаблицаДвижений = НаборЗаписей.Выгрузить();
	ТаблицаДвижений.Очистить();
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-10 (#3078)
	КолонкиТаблицыДвижений = ТаблицаДвижений.Колонки;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-10 (#3078)	

	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ИзмеренияКонтроля"   ,ИзмеренияКонтроля);
	СтруктураПараметров.Вставить("Сценарий"            ,Сценарий);
	//{ bit_SVKushnirenko 17.01.2017 #2669.дпн
	//ИсходныйКод{
	//СтруктураПараметров.Вставить("КонтролироватьБюджет",Истина);
	//}ИсходныйКод
	СтруктураПараметров.Вставить("КонтролироватьБюджет", Ложь); //неявное отключение старого запутанного БК
	//} bit_SVKushnirenko 17.01.2017 #2669.дпн
	СтруктураПараметров.Вставить("СверхБюджета"        ,СверхБюджета);
	СтруктураПараметров.Вставить("РежимКонтроля"       ,"Бюджет");
	СтруктураПараметров.Вставить("Объект",			   Ссылка);
	
	бит_КонтрольПоБюджету.ОбработатьРезультатКонтроля(Результат,ТаблицаДвижений,СтруктураПараметров,Отказ,Заголовок);

	ТаблицаДвижений.ЗаполнитьЗначения(СтруктураШапкиДокумента.Сценарий, "СценарийКонтролируемый");
        
    НаборЗаписей.мТаблицаДвижений = ТаблицаДвижений;
	НаборЗаписей.ДобавитьДвижение();     

	//BIT AMerkulov 27.01.2016 ++
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	бит_БК_НастройкиБК.Группа,
	|	бит_БК_НастройкиБК.ИмяНастройки,
	|	бит_БК_НастройкиБК.Значение
	|ИЗ
	|	РегистрСведений.бит_БК_НастройкиБК КАК бит_БК_НастройкиБК
	|ГДЕ
	|	бит_БК_НастройкиБК.Группа = ""Контролирующий сценарий""");
	
	ТаблицаКонтролирующихСтатей = Запрос.Выполнить().Выгрузить();
	////+Сундукова 12.05.2016 №2456
	//ТаблицаДляКонтроля = ТаблицаБДДС.Скопировать();
	//СверхБюджета = истина;
	//-Сундукова 12.05.2016 №2456
	
	//{ bit_SVKushnirenko 25.12.2016 #2669.3
	//ИсходныйКод{
	//Если СверхБюджета Тогда
	//}ИсходныйКод
	//Безусловно проводим документ как "сверх бюджета" всегда и делаем анализ результата проведения по данным КЗБ
	//т.к. старый алгоритм заполнения не выполняет явного и верного заполнения сценария в КЗБ
	//} bit_SVKushnirenko 25.12.2016 #2669.3
	
	НаборЗаписей.Очистить();
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-10 (#3078)
	СценарийКонтролируемый = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролируемый сценарий", СтруктураШапкиДокумента.Сценарий, Справочники.СценарииПланирования.ПустаяСсылка());	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-10 (#3078)
	
	Для Каждого Стр Из ТаблицаДляКонтроля Цикл
		ДобавленноеДвижение = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(ДобавленноеДвижение, Стр);
		ДобавленноеДвижение.СуммаСценарийКонтроль = Стр.Сумма;
		
		Если Не ЗначениеЗаполнено(ДобавленноеДвижение.СценарийКонтролируемый) Тогда
			
			Отбор = Новый Структура("ИмяНастройки", ДобавленноеДвижение.Сценарий);
			НайденныеСтроки = ТаблицаКонтролирующихСтатей.НайтиСтроки(Отбор);
			
			Если НайденныеСтроки.Количество() Тогда
				ДобавленноеДвижение.СценарийКонтролируемый = ДобавленноеДвижение.Сценарий;					
				ДобавленноеДвижение.Сценарий = НайденныеСтроки[0].Значение.Получить();
				ДобавленноеДвижение.СуммаСценарийИсполнение =  ДобавленноеДвижение.СуммаСценарийКонтроль;
				ДобавленноеДвижение.СуммаСценарийКонтроль = 0;
			КонецЕсли;
		КонецЕсли;
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-10 (#3078)
		ДобавленноеДвижение.Аналитика_4 = ОК_ID_Разноска;
		
		ДобавленноеДвижение.бит_БК_Организация = СтруктураШапкиДокумента.бит_Организация;
		Если ЗначениеЗаполнено(СценарийКонтролируемый) Тогда 
			СтрокаКонтроль   = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаКонтроль, ДобавленноеДвижение);
			
			СтрокаКонтроль.СуммаСценарийКонтроль		 = СтрокаКонтроль.СуммаСценарийИсполнение;
			СтрокаКонтроль.СуммаСценарийКонтрольСНДС	 = Стр.СуммаСНДС;
			
			СтрокаКонтроль.СуммаСценарийИсполнение  	 = 0;
			СтрокаКонтроль.СуммаСценарийИсполнениеСНДС   = 0;
			
			СтрокаКонтроль.Сценарий				  = СтруктураШапкиДокумента.Сценарий;
			СтрокаКонтроль.СценарийКонтролируемый = СценарийКонтролируемый;  			
			
			бит_КонтрольПоБюджету.ОчиститьНеиспользуемыеИзмеренияКонтроля(СтрокаКонтроль,СтруктураШапкиДокумента.соотСценарийОчищаемыеПоля,СтруктураШапкиДокумента.мдЗнчПеречисления,КолонкиТаблицыДвижений);
		КонецЕсли;
		бит_КонтрольПоБюджету.ОчиститьНеиспользуемыеИзмеренияКонтроля(ДобавленноеДвижение,СтруктураШапкиДокумента.соотСценарийОчищаемыеПоля,СтруктураШапкиДокумента.мдЗнчПеречисления,КолонкиТаблицыДвижений);  				
		
		Если ДобавленноеДвижение.Сценарий <> ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_Инвест")
			 И ДобавленноеДвижение.Сценарий <> ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_У")
			 И ДобавленноеДвижение.Сценарий <> ПредопределенноеЗначение("Справочник.СценарииПланирования.Контракт_Инвест")
			 И ДобавленноеДвижение.СценарийКонтролируемый <> ПредопределенноеЗначение("Справочник.СценарииПланирования.Факт_Инвест")
			 И ДобавленноеДвижение.СценарийКонтролируемый <> ПредопределенноеЗначение("Справочник.СценарииПланирования.Факт_У")
		Тогда 
			ДобавленноеДвижение.СуммаСценарийИсполнениеСНДС = Стр.СуммаСНДС;		
		КонецЕсли;		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-10 (#3078)
		
	КонецЦикла;
	
	//{ bit_SVKushnirenko 25.12.2016 #2669.3
	//ИсходныйКод{
	//КонецЕсли;
	//}ИсходныйКод
	//Безусловно документ как "сверх бюджета" всегда и делаем анализ результата проведения по данным КЗБ
	//т.к. старый алгоритм заполнения не выполняет явного и верного заполнения колонки "сценарий" в КЗБ
	//} bit_SVKushnirenko 25.12.2016 #2669.3
	
	//{ bit_SVKushnirenko 25.12.2016 #2669.3
	//Выполнение проверки "сверх бюджета" и в случае превышения, выполнение звод отказа от записи
	
	//Получение данных ожидаемого проведения документа
	пТЗДвиженийКЗБ = НаборЗаписей.Выгрузить();
	
	//ОКЕЙ Рычаков А.С.(СофтЛаб) 2020-01-15 Начало (#3568)
	пТЗДвиженийКЗБ = пТЗДвиженийКЗБ.Скопировать(Новый Структура("СценарийКонтролируемый",СтруктураШапкиДокумента.Сценарий));
	//ОКЕЙ Рычаков А.С.(СофтЛаб) 2020-01-15 Конец (#3568)
	
	Если СверхБюджета Тогда 
		
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение("Документ проведен ""сверх бюджета""!", ЭтотОбъект.Ссылка);
	Иначе
				
		Если пТЗДвиженийКЗБ.Количество() > 0 Тогда //Сверхбюджетные документы - отключаем контроль превышения по БК ОК
			
			//Подготвка колонок для БК
			пТЗДвиженийКЗБ.Колонки.СуммаСценарийИсполнение.Имя = "Сумма";
			пТЗДвиженийКЗБ.Колонки.Сценарий.Имя = "СценарийКонтроллирующий"; 
			пТЗДвиженийКЗБ.Колонки.СценарийКонтролируемый.Имя = "Сценарий";
			//выполнение контроля по бюджету, принятие решения о возможности проведения и сообщения пользователю
			бит_БК_Общий.БюджетныйКонтрольОперативный(пТЗДвиженийКЗБ, НомерЗаявки, Ссылка, Отказ, "Проведение: "+ Ссылка);
		КонецЕсли;
	КонецЕсли;
	//} bit_SVKushnirenko 25.12.2016 #2669.3
	
	//BIT Amerkulov 27.01.2016 --
	
КонецПроцедуры

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-10 (#3078)
Процедура ОчиститьНеиспользуемыеИзмеренияКонтроля(Движение,соотСценарийОчищаемыеПоля,мдЗнчПеречисления,КолонкиТаблицыДвижений)
	
	мОчищаемыеПоля = соотСценарийОчищаемыеПоля.Получить(Движение.Сценарий);
	
	Если мОчищаемыеПоля = Неопределено Тогда 
		
		мОчищаемыеПоля = Новый Массив;
		
		бит_СписокИзмеренийКонтроляБюджета = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Измерения контроля бюджета", Движение.Сценарий, Новый СписокЗначений, "СписокЗначений"); 					
		
		Для Каждого ЗнчПеречисления ИЗ мдЗнчПеречисления Цикл 
			Если бит_СписокИзмеренийКонтроляБюджета.НайтиПоЗначению(Перечисления.бит_БК_ИзмеренияКонтроляБюджета[ЗнчПеречисления.Имя]) = Неопределено И
				НЕ ЗнчПеречисления.Имя = "Сценарий" И
				НЕ ЗнчПеречисления.Имя = "СтатьяОборотов"			
				Тогда  
				Если КолонкиТаблицыДвижений.Найти(ЗнчПеречисления.Имя)<>Неопределено Тогда 
					мОчищаемыеПоля.Добавить(ЗнчПеречисления.Имя);				
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;  
		
		соотСценарийОчищаемыеПоля.Вставить(Движение.Сценарий, мОчищаемыеПоля);		
		
	КонецЕсли;
	
	Если мОчищаемыеПоля.Количество()>0 Тогда 
		Для Каждого пИмяПоля Из мОчищаемыеПоля Цикл 
			Движение[пИмяПоля] = Неопределено;
		КонецЦикла;			
	КонецЕсли;
	
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-10 (#3078)

//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-01 Начало (#3490) 
Процедура ДвиженияПоРегиструКонтрольныхЗначений_КорректировкаОплаты(СтруктураШапкиДокумента, ТаблицаБДДС)
		
	НаборЗаписей = Движения.бит_КонтрольныеЗначенияБюджетов;    
	ТаблицаДвижений = НаборЗаписей.Выгрузить();	
	ТаблицаДвижений.Очистить();
	
	пСценарий = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролирующий сценарий", СтруктураШапкиДокумента.Сценарий, Справочники.СценарииПланирования.ПустаяСсылка());
	КолонкиТаблицыДвижений = ТаблицаДвижений.Колонки;

	Для Каждого СтрокаТаблицы Из ТаблицаБДДС Цикл
		НоваяСтрока = ТаблицаДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы,,"Аналитика_4");
		НоваяСтрока.СуммаСценарийИсполнение = СтрокаТаблицы.Сумма;
		НоваяСтрока.СуммаСценарийИсполнениеСНДС = СтрокаТаблицы.СуммаСНДС;
		НоваяСтрока.СценарийКонтролируемый = СтруктураШапкиДокумента.Сценарий;
		НоваяСтрока.Сценарий = пСценарий;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-05 (#3717)
		НоваяСтрока.бит_БК_Организация = СтруктураШапкиДокумента.бит_Организация;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-05 (#3717)
		бит_КонтрольПоБюджету.ОчиститьНеиспользуемыеИзмеренияКонтроля(НоваяСтрока,СтруктураШапкиДокумента.соотСценарийОчищаемыеПоля,СтруктураШапкиДокумента.мдЗнчПеречисления,КолонкиТаблицыДвижений);
	КонецЦикла;		
	
	НаборЗаписей.мТаблицаДвижений = ТаблицаДвижений;
	НаборЗаписей.ДобавитьДвижение();
	
	пТЗДвиженийКЗБ = НаборЗаписей.Выгрузить();
	
	Если пТЗДвиженийКЗБ.Количество() > 0 Тогда 
		
		пТЗДвиженийКЗБ.Колонки.СуммаСценарийИсполнение.Имя = "Сумма";
		пТЗДвиженийКЗБ.Колонки.Сценарий.Имя = "СценарийКонтроллирующий"; 
		пТЗДвиженийКЗБ.Колонки.СценарийКонтролируемый.Имя = "Сценарий";
		
		бит_БК_Общий.БюджетныйКонтрольОперативный(пТЗДвиженийКЗБ, НомерЗаявки, Ссылка, , "Проведение: "+ Ссылка);
		
	КонецЕсли;
		
КонецПроцедуры
//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-01 Конец (#3490)

#КонецОбласти

Процедура ПередЗаписьюВБП(Отказ)
	
	Заголовок = НСтр("ru = 'Проверка прав доступа:'");	
	Если РольДоступна("бит_рлс_ФинансистЦФО") Тогда
		// Проверка на наличие недопустимых ЦФО
		бит_рлс_Основной.ПроверитьДопустимыеЦФО(ЭтотОбъект,БДДС,"БДДС",Заголовок,Отказ);
		бит_рлс_Основной.ПроверитьДопустимыеЦФО(ЭтотОбъект,ЗависимыеОбороты,НСтр("ru = 'Зависимые обороты'"),Заголовок,Отказ);
	Иначе
		// Проверка на наличие недопустимых пар ЦФО/СтатьяОборотов.
		бит_рлс_Основной.ПроверитьДопустимыеПарыЦФОСтатьяОборотов(ЭтотОбъект,БДДС,"БДДС",Заголовок,Отказ);
		бит_рлс_Основной.ПроверитьДопустимыеПарыЦФОСтатьяОборотов(ЭтотОбъект,ЗависимыеОбороты,
			НСтр("ru = 'Зависимые обороты'"),Заголовок,Отказ);
	КонецЕсли; 
	
КонецПроцедуры

Функция ОпределитьСтатус(НачальныйСтатус, ВсеВизыПолучены, ЕстьОтклонено, вхРежимЗаписи)

    РезСтатус = НачальныйСтатус;
    
    Если вхРежимЗаписи = РежимЗаписиДокумента.Проведение 
        ИЛИ (вхРежимЗаписи = РежимЗаписиДокумента.Запись И Проведен) Тогда
        РезСтатус = Справочники.бит_СтатусыОбъектов.БюджетнаяОперация_Рабочая;
    Иначе
        РезСтатус = Справочники.бит_СтатусыОбъектов.БюджетнаяОперация_Черновик;
    КонецЕсли; 
    
    Если РезСтатус = Справочники.бит_СтатусыОбъектов.БюджетнаяОперация_Рабочая 
        ИЛИ РезСтатус = Справочники.бит_СтатусыОбъектов.БюджетнаяОперация_Утверждена 
		ИЛИ РезСтатус = Справочники.бит_СтатусыОбъектов.БюджетнаяОперация_Отклонена Тогда
		
		Если ЕстьОтклонено Тогда
			
			РезСтатус = Справочники.бит_СтатусыОбъектов.БюджетнаяОперация_Отклонена;
			
		Иначе	
			
			Если ВсеВизыПолучены Тогда
				РезСтатус = Справочники.бит_СтатусыОбъектов.БюджетнаяОперация_Утверждена;
			Иначе	
				РезСтатус = Справочники.бит_СтатусыОбъектов.БюджетнаяОперация_Рабочая;
			КонецЕсли; 
			
		КонецЕсли;
        
    КонецЕсли; 
    
    Возврат РезСтатус;
    
КонецФункции

Процедура АктуализироватьКурсы()

	Если ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
		Возврат;
	КонецЕсли; 
	
	СтрКурса = бит_КурсыВалют.ПолучитьКурсВалюты(ВалютаДокумента, ОбщегоНазначения.ТекущаяДатаПользователя());

	КурсДокумента 		= СтрКурса.Курс;
	КратностьДокумента 	= СтрКурса.Кратность;
	
КонецПроцедуры

#КонецОбласти

//БИТ АКриштопов 02032016 -->>
//Провести проверку на задвоение ID и проверку на задвоение при совпадении полей: 
//Входящий документ "Вид"+"Номер"+"Дата"+из Табличной части "Контрагент"+"Сумма". 
//При совпадении документ не проводить, выдавать ошибку.
Функция ПоискДублейОперации(ОбъектыПоиска)
	
	Если ОбъектыПоиска = "Поиск по ID" Тогда	
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	бит_БюджетнаяОперация.Ссылка
		|ИЗ
		|	Документ.бит_БюджетнаяОперация КАК бит_БюджетнаяОперация
		|ГДЕ
		|	бит_БюджетнаяОперация.ОК_ID_Разноска = &ОК_ID_Разноска
		|	И бит_БюджетнаяОперация.Ссылка <> &ЭтотОбъект";
		
		Запрос.УстановитьПараметр("ОК_ID_Разноска", ЭтотОбъект.ОК_ID_Разноска);
		Запрос.УстановитьПараметр("ЭтотОбъект", ЭтотОбъект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();	
		Если РезультатЗапроса.Количество() > 0 Тогда
			Возврат Истина;
		Иначе 
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ОбъектыПоиска = "Поля поиска" Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	бит_БюджетнаяОперацияБДДС.Контрагент,
		|	бит_БюджетнаяОперацияБДДС.Сумма,
		|	бит_БюджетнаяОперацияБДДС.Ссылка.ВидДокумента,
		|	бит_БюджетнаяОперацияБДДС.Ссылка.бит_Дата,
		|	бит_БюджетнаяОперацияБДДС.Ссылка.бит_Номер,
		|	бит_БюджетнаяОперацияБДДС.Ссылка
		|ИЗ
		|	Документ.бит_БюджетнаяОперация.БДДС КАК бит_БюджетнаяОперацияБДДС
		|ГДЕ
		|	бит_БюджетнаяОперацияБДДС.Ссылка.ВидДокумента = &ВидДокумента
		|	И бит_БюджетнаяОперацияБДДС.Ссылка.бит_Дата = &бит_Дата
		|	И бит_БюджетнаяОперацияБДДС.Ссылка.бит_Номер = &бит_Номер
		|	И бит_БюджетнаяОперацияБДДС.Контрагент В(&Контрагенты)
		|	И бит_БюджетнаяОперацияБДДС.Сумма В(&Суммы)
		|	И бит_БюджетнаяОперацияБДДС.Ссылка.Проведен = ИСТИНА
		|	И бит_БюджетнаяОперацияБДДС.Ссылка <> &ЭтотОбъект";
		
		Запрос.УстановитьПараметр("бит_Дата", бит_Дата);
		Запрос.УстановитьПараметр("бит_Номер", бит_Номер);
		Запрос.УстановитьПараметр("ВидДокумента", ВидДокумента);
		Запрос.УстановитьПараметр("Контрагенты", БДДС.ВыгрузитьКолонку("Контрагент"));
		Запрос.УстановитьПараметр("Суммы", БДДС.ВыгрузитьКолонку("Сумма"));
		Запрос.УстановитьПараметр("ЭтотОбъект", ЭтотОбъект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();	
		Если РезультатЗапроса.Количество() > 0 Тогда
			Возврат Истина;
		Иначе 
			Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;	
КонецФункции
//БИТ АКриштопов 02032016 <<--

#Область Инициализация

мРежимОбновленияВиз = Константы.бит_РежимОбновленияПеречняВиз.Получить();

// Получаем статус и дату изменения статуса для документа.
РезСтруктура = бит_Визирование.ПолучитьСтатусОбъекта(Ссылка);

мТекущийСтатус 		  = ?(ЗначениеЗаполнено(РезСтруктура.Статус), РезСтруктура.Статус, Справочники.бит_СтатусыОбъектов.ПустаяСсылка());
мДатаИзмененияСтатуса = РезСтруктура.Дата;

мИзмеренияДоп       = бит_Бюджетирование.ПолучитьИзмеренияБюджетирования("Дополнительные", "Синоним");
мИзмерения          = бит_Бюджетирование.ПолучитьИзмеренияБюджетирования("Произвольные"  , "Синоним");
мНастройкиИзмерений = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("бит_НастройкиДополнительныхИзмерений");

#КонецОбласти

#КонецЕсли
