
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	
	Заявка = Параметры.Заявка; 
	
	мТЗВыгрузка = Заявка.БДДС.Выгрузить();
	СуммаДляЗагрузки = мТЗВыгрузка.Итог("бит_БК_СуммаБезНДС");
	мТЗВыгрузка.Колонки.Вставить(0,"Выбран",Новый ОписаниеТипов("Булево"),"Выбран",);

	Для Каждого Колонка ИЗ мТЗВыгрузка.Колонки Цикл
		МассивРеквизитов = Новый Массив;
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Колонка.ТипЗначения); 	
		
		НоваяКолонка = Новый РеквизитФормы(Колонка.Имя,Новый ОписаниеТипов(Колонка.ТипЗначения), "ТЗвыгрузка");
		МассивРеквизитов.Добавить(НоваяКолонка);
		Попытка
			ИзменитьРеквизиты(МассивРеквизитов);  //Создаются колонки у ТЗ
		Исключение
			МассивРеквизитов = Новый Массив;
			МассивТипов = Новый Массив;
			МассивТипов.Добавить(Колонка.ТипЗначения);			
			НоваяКолонка = Новый РеквизитФормы(Колонка.Имя,Новый ОписаниеТипов(МассивРеквизитов), "ТЗвыгрузка");
			МассивРеквизитов.Добавить(НоваяКолонка);
			ИзменитьРеквизиты(МассивРеквизитов);
		КонецПопытки;
	КонецЦикла;
	
	
	ЗначениеВРеквизитФормы(мТЗВыгрузка,"ТЗвыгрузка");
	ЭлементТЗ = Элементы.ТЗвыгрузка;
	Для Каждого Колонка ИЗ мТЗВыгрузка.Колонки Цикл
		НовыйЭлементФормы = Элементы.Добавить("ТЗвыгрузка"+Колонка.Имя, Тип("ПолеФормы"), ЭлементТЗ); //Создается элемент формы, соответствующий колонке ТЗ
		Если Колонка.Имя = "Выбран" Тогда 
			НовыйЭлементФормы.Вид = ВидПоляФормы.ПолеФлажка;
		Иначе 	
			НовыйЭлементФормы.Вид = ВидПоляФормы.ПолеВвода;
		КонецЕсли;
		НовыйЭлементФормы.ПутьКДанным = "ТЗвыгрузка." + Колонка.Имя;
	КонецЦикла;
	

	Для каждого ТекКолонка Из  Элементы.ТЗвыгрузка.ПодчиненныеЭлементы Цикл
		//Устанавливаем заголовки
		Если ТекКолонка.Имя = "ТЗвыгрузкаАналитика_1" Тогда 
			ТекКолонка.Заголовок = "№ Заявки"
		ИначеЕсли 	ТекКолонка.Имя = "ТЗвыгрузкаАналитика_2" Тогда 
			ТекКолонка.Заголовок = "Объект"
		ИначеЕсли	 ТекКолонка.Имя = "ТЗвыгрузкаАналитика_3" Тогда 
			ТекКолонка.Заголовок = "Вариант бюджета"
		ИначеЕсли	 ТекКолонка.Имя = "ТЗвыгрузкаАналитика_4" Тогда 
			ТекКолонка.Заголовок = "ID"
		КонецЕсли;
        //устанавливаем колонку флага Выбран
		Если ТекКолонка.Имя = "ТЗвыгрузкаВыбран" Тогда
			//ТекКолонка.УстановитьЭлементУправления(Тип("Флажок"));
			//ТекКолонка.ДанныеФлажка = "Выбран";
			//ТекКолонка.ТекстШапки = "";
			//ТекКолонка.Ширина = 3;
			////ТекКолонка.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
			////ТекКолонка.ИзменениеРазмера = ИзменениеРазмераКолонки.НеИзменять;
			//ТекКолонка.Формат = "БЛ=; БИ=";
			//
			//ТекКолонка.ИзменятьВидимость = Ложь;
			//ТекКолонка.ИзменятьПозицию = Ложь; 			
			
		иначе //остальные недоступны
			ТекКолонка.ТолькоПросмотр = Истина;
			//ТекКолонка.ИзменятьВидимость = Истина;
			//ТекКолонка.ИзменятьПозицию = Истина;
		КонецЕсли;
			//устанавливаем видимость
		Если ТекКолонка.Имя = "ТЗвыгрузкаВыбран" ИЛИ
			ТекКолонка.Имя = "ТЗвыгрузкаНомерСтроки" ИЛИ
			ТекКолонка.Имя = "ТЗвыгрузкаПериод" ИЛИ
			ТекКолонка.Имя = "ТЗвыгрузкаЦФО" ИЛИ
			ТекКолонка.Имя = "ТЗвыгрузкаСтатьяОборотов" ИЛИ
			ТекКолонка.Имя = "ТЗвыгрузкаАналитика_2" ИЛИ
			ТекКолонка.Имя = "ТЗвыгрузкабит_БК_СуммаБезНДС" ИЛИ
			ТекКолонка.Имя = "ТЗвыгрузкабит_БК_СуммаЗаРамкамиБюджетаБезНДС" Тогда 			
			ТекКолонка.Видимость = Истина;
		иначе
			ТекКолонка.Видимость = Ложь;
		КонецЕсли;

		//устанавливаем отображение итогов для сумм
		Если НЕ Найти(ВРег(ТекКолонка.Имя),"СУММА") = 0 Тогда 
			ТекКолонка.ОтображатьВПодвале = Истина;
			//ТекКолонка.ОтображатьИтогиВПодвале = Истина;
		иначе
			ТекКолонка.ОтображатьВПодвале = Ложь;
		КонецЕсли;
      КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Добавить(Команда)
	
	Текст = "";
	Если Предупреждения(Текст) Тогда
		Предупреждение(Текст, 5);
		Возврат;
	КонецЕсли;
	АдресТаблицыВХранилище = АдресТаблицыВХранилище();
	Структура = Новый Структура("СпособЗагрузки, СуммаДляЗагрузки,АдресТаблицыВХранилище","Добавить", СуммаДляЗагрузки,АдресТаблицыВХранилище);
	ЭтаФорма.Закрыть(Структура);
КонецПроцедуры

Функция Предупреждения(Текст)
	Отказ = Ложь;
	
	Отбор = Новый  Структура("Выбран",Истина);
	
	ВыбранныеСтроки =ТЗвыгрузка.НайтиСтроки(Отбор); 
	Если ВыбранныеСтроки.Количество() = 0  Тогда 
		Текст = Текст + "Не выбраны строки"+ Символы.ПС;
		Отказ = Истина;
	КонецЕсли;
	Если СуммаДляЗагрузки = 0 Тогда 
		Текст = Текст + "Не указана сумма для загрузки"+ Символы.ПС;
		Отказ = Истина;
	КонецЕсли;
		
	Возврат Отказ;
КонецФункции

&НаКлиенте
Процедура ВключтьВсе(Команда)
	 УстановитьПометку(истина);	
	 ПосчитатьСуммуВыбранныхСтрок()  
КонецПроцедуры

&НаКлиенте
Процедура ВыключитьВсе(Команда)
	 УстановитьПометку(Ложь);
	 ПосчитатьСуммуВыбранныхСтрок() 
КонецПроцедуры

&НаСервере
Процедура УстановитьПометку(значение)
	
	
	Если Элементы.ТЗвыгрузка.ВыделенныеСтроки.Количество() > 1 Тогда 
		Для Каждого СтрокаВыд из Элементы.ТЗвыгрузка.ВыделенныеСтроки Цикл 
			ТЗвыгрузка.НайтиПоИдентификатору(СтрокаВыд).Оставить= значение;
		КонецЦикла;
	Иначе 
		мТЗвыгрузка = РеквизитФормыВЗначение("ТЗвыгрузка");
		мТЗвыгрузка.ЗаполнитьЗначения(значение, "Выбран");
		ЗначениеВРеквизитФормы(мТЗвыгрузка,"ТЗвыгрузка");
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура Загрузить(Команда)
	
	Текст = "";
	Если Предупреждения(Текст) Тогда
		Предупреждение(Текст, 5);
		Возврат;
	КонецЕсли;
	
	АдресТаблицыВХранилище = АдресТаблицыВХранилище();

	Структура = Новый Структура("СпособЗагрузки,СуммаДляЗагрузки,АдресТаблицыВХранилище","Загрузить", СуммаДляЗагрузки,АдресТаблицыВХранилище);
	ЭтаФорма.Закрыть(Структура);

КонецПроцедуры

&НаКлиенте
Процедура ТЗвыгрузкаПриИзменении(Элемент)
	
	 ПосчитатьСуммуВыбранныхСтрок()
	
КонецПроцедуры

&НаКлиенте
Процедура ПосчитатьСуммуВыбранныхСтрок(
	)

	СуммаВыбранных = 0;
	Для Каждого ТекСтрока Из ТЗвыгрузка Цикл
		Если ТекСтрока.Выбран Тогда 
			СуммаВыбранных = СуммаВыбранных + ТекСтрока.бит_БК_СуммаБезНДС;
		КонецЕсли;
	КонецЦикла;
	
	Выбрано = СуммаВыбранных;
	
	//ОК Калинин М. 211212
	СуммаДляЗагрузки = Выбрано;
	//ОК Калинин М. 

КонецПроцедуры 


Функция  АдресТаблицыВХранилище();
	
	АдресТоваровВХранилище = Неопределено;
	Товары = ТЗвыгрузка.Выгрузить();
	АдресТоваровВХранилище = ПоместитьВоВременноеХранилище(Товары, УникальныйИдентификатор);
	
	Возврат АдресТоваровВХранилище;

КонецФункции
