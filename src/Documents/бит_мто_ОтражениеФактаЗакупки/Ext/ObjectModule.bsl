#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
	
	Если Отказ Тогда 	
		Возврат;  	
	КонецЕсли;
	
	ЭтоНовый = ЭтоНовый();
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый);
	Если НЕ ЭтоНовый Тогда
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = "ВЫБРАТЬ
			|	ФактическиеДанные.Ссылка КАК Ссылка,
			|	ФактическиеДанные.ЗаявкаНаЗакупку КАК ЗаявкаНаЗакупку
			|ПОМЕСТИТЬ СтарыеДанные
			|ИЗ
			|	Документ.бит_мто_ОтражениеФактаЗакупки.ФактическиеДанные КАК ФактическиеДанные
			|ГДЕ
			|	ФактическиеДанные.Ссылка = &Ссылка";
		
		Запрос.Выполнить();
		ДополнительныеСвойства.Вставить("МенеджерВременныхТаблиц", Запрос.МенеджерВременныхТаблиц);
	КонецЕсли; 
	
КонецПроцедуры // ПередЗаписью()

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;			
	КонецЕсли; 
		
	 
	
	Если Отказ Тогда 	
		Возврат;  	
	КонецЕсли; 
	
	Если НЕ ДополнительныеСвойства.ЭтоНовый Тогда
		
		Если НЕ Отказ Тогда
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка", Ссылка);			
			Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ФактическиеДанные.ЗаявкаНаЗакупку КАК ЗаявкаНаЗакупку
			               |ПОМЕСТИТЬ врем
			               |ИЗ
			               |	Документ.бит_мто_ОтражениеФактаЗакупки.ФактическиеДанные КАК ФактическиеДанные
			               |ГДЕ
			               |	ФактическиеДанные.Ссылка = &Ссылка
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	СтарыеДанные.ЗаявкаНаЗакупку КАК ЗаявкаНаЗакупку
			               |ИЗ
			               |	СтарыеДанные КАК СтарыеДанные
			               |		ЛЕВОЕ СОЕДИНЕНИЕ врем КАК врем
			               |		ПО СтарыеДанные.ЗаявкаНаЗакупку = врем.ЗаявкаНаЗакупку
			               |ГДЕ
			               |	врем.ЗаявкаНаЗакупку ЕСТЬ NULL
			               |
			               |ОБЪЕДИНИТЬ ВСЕ
			               |
			               |ВЫБРАТЬ
			               |	врем.ЗаявкаНаЗакупку
			               |ИЗ
			               |	врем КАК врем
			               |		ЛЕВОЕ СОЕДИНЕНИЕ СтарыеДанные КАК СтарыеДанные
			               |		ПО (СтарыеДанные.ЗаявкаНаЗакупку = врем.ЗаявкаНаЗакупку)
			               |ГДЕ
			               |	СтарыеДанные.ЗаявкаНаЗакупку ЕСТЬ NULL";
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			МассивРазличных = Новый Массив;
			Пока Выборка.Следующий() Цикл
				Если ЗначениеЗаполнено(Выборка.ЗаявкаНаЗакупку) Тогда
					МассивРазличных.Добавить(Выборка.ЗаявкаНаЗакупку);
				КонецЕсли; 
			КонецЦикла; 
			ДополнительныеСвойства.Вставить("СтруктураРазличных", Новый Структура("МассивРазличных",МассивРазличных));
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры // ПриЗаписи()

#КонецОбласти 

#Область СлужебныйПрограммныйИнтерфейс

// Процедура проводит документ Отражение факта закупки по регистрам БИТ. 
// 
// Параметры:
//  Отражение - ДокументСсылка.бит_ОтражениеДДС.
//  Отказ - Булево.
// 
Процедура ПровестиОтражениеФактаЗакупки(Отражение, Отказ) Экспорт

	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Отражение.ДокументОснование) Тогда
	
		Возврат;
	
	КонецЕсли; 
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Регистратором является типовой первичный документ.
	Источник = Отражение.ДокументОснование.ПолучитьОбъект();
	   
	Документы.бит_мто_ОтражениеФактаЗакупки.ДвиженияПоРегистрамОтражениеФактаЗакупки(Источник, Отказ, Истина);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ПровестиОтражениеФактаЗакупки()

// Процедура выполняет заполнение документа по основанию. 
// 
// Параметры:
//  Основание - ДокументСсылка.
// 
Процедура ЗаполнитьПоОснованию(Основание) Экспорт
	
	Если ЭтотОбъект.НеСинхронизировать Тогда
		Возврат;
	КонецЕсли; 

	ТабличнаяЧастьОснование = Документы.бит_мто_ОтражениеФактаЗакупки.ПодготовитьТабличнуюЧастьПоступленияТоваровУслуг(Основание);
	
	ЭтотОбъект.УстановитьНовыйНомер();
	ЭтотОбъект.Дата 			 = Основание.Дата;
	ЭтотОбъект.ДокументОснование = Основание.Ссылка;
	ЭтотОбъект.ФактическиеДанные.Загрузить(ТабличнаяЧастьОснование);
	ЭтотОбъект.НеСинхронизировать = Истина;
	
	Для каждого Строка Из ЭтотОбъект.ФактическиеДанные Цикл
	
		Строка.Период = Основание.Дата;
	
	КонецЦикла; 
	
КонецПроцедуры // ЗаполнитьПоОснованию()

#КонецОбласти 
    	
#КонецЕсли	
