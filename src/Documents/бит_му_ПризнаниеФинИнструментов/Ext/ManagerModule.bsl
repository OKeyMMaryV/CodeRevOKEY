#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки	 - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Справка-расчет финансовых начислений в валюте регл. учета.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор				= "СправкаРасчетФинансовыхНачисленийРегл";
	КомандаПечати.Представление				= НСтр("ru = 'Справка-расчет финансовых начислений в валюте регл. учета'");
	КомандаПечати.Обработчик				= "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ДополнительныеПараметры   = Новый Структура("ВидСуммы", "Регл");
	КомандаПечати.Порядок					= 10;	
	
	// Справка-расчет финансовых начислений в валюте взаиморасчетов.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор				= "СправкаРасчетФинансовыхНачисленийВзаим";
	КомандаПечати.Представление				= НСтр("ru = 'Справка-расчет финансовых начислений в валюте взаиморасчетов'");
	КомандаПечати.Обработчик				= "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ДополнительныеПараметры   = Новый Структура("ВидСуммы", "Взаиморасчеты");
	КомандаПечати.Порядок					= 20;	
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СправкаРасчетФинансовыхНачисленийРегл") Тогда					
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СправкаРасчетФинансовыхНачисленийРегл",
			НСтр("ru = 'Справка-расчет финансовых начислений в валюте регл. учета'"), 
			ПолучитьПечатныйДокументСправкаРасчетФинансовыхНачислений(МассивОбъектов, ПараметрыПечати),,
			"Отчет.бит_му_СправкаРасчетФинансовыхНачислений.Макет");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СправкаРасчетФинансовыхНачисленийВзаим") Тогда					
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СправкаРасчетФинансовыхНачисленийВзаим",
			НСтр("ru = 'Справка-расчет финансовых начислений в валюте взаиморасчетов'"), 
			ПолучитьПечатныйДокументСправкаРасчетФинансовыхНачислений(МассивОбъектов, ПараметрыПечати),,
			"Отчет.бит_му_СправкаРасчетФинансовыхНачислений.Макет");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Функция возвращает структуру с набором флагов, для определения вида операции документа.
// 
// Параметры:
//  ВидОперации – ПеречислениеСсылка.бит_му_ВидыОперацийПризнаниеФинИнструментов.
// 
// Возвращаемое значение:
//  Результат – Структура.
// 
Функция СформироватьСтуктуруВидовОпераций(ВидОперации) Экспорт

	Результат 	 = Новый Структура;
	ВидыОпераций = Перечисления.бит_му_ВидыОперацийПризнаниеФинИнструментов;
	
	Результат.Вставить("ЭтоКредитыЗаймыПолученные", 	(ВидОперации = ВидыОпераций.ПризнаниеКредитовЗаймовПолученных) ИЛИ (ВидОперации = ВидыОпераций.ВводНачальныхОстатковКредитыЗаймыПолученные));
	Результат.Вставить("ЭтоЗаймыВыданные",				(ВидОперации = ВидыОпераций.ПризнаниеЗаймовВыданных) ИЛИ (ВидОперации = ВидыОпераций.ВводНачальныхОстатковЗаймыВыданные));
	Результат.Вставить("ЭтоДебиторскаяЗадолженность", 	(ВидОперации = ВидыОпераций.ДебиторскаяЗадолженность));
	Результат.Вставить("ЭтоКредиторскаяЗадолженность", 	(ВидОперации = ВидыОпераций.КредиторскаяЗадолженность));
	Результат.Вставить("ЭтоДебиторскаяЗадолженность", 	(ВидОперации = ВидыОпераций.ДебиторскаяЗадолженность));
	Результат.Вставить("ЭтоКредиторскаяЗадолженность", 	(ВидОперации = ВидыОпераций.КредиторскаяЗадолженность));
	
	Возврат Результат;
	
КонецФункции

// Функция вычисляет параметры необходимые для управления видимостью/доступностью и  проверки заполнения.
// 
// Параметры:
//  ДокОбъект – ДокументОбъект.бит_му_ПризнаниеФинИнструментов, Структура.
//  СтруктураОпераций - Структура.
// 
// Возвращаемое значение:
//  Результат - Структура.
// 
Функция ВычислитьПараметрыУправления(ДокОбъект, СтруктураОпераций) Экспорт

	Результат = Новый Структура;
	
	Результат.Вставить("ЭтоНерыночный", ?(ДокОбъект.ВидКредитаЗайма = Перечисления.бит_му_ВидыКредитовЗаймов.Нерыночный ,Истина, Ложь));
	Результат.Вставить("ДисконтНаСчетДоходов", ?(ДокОбъект.СпособОтраженияДисконта = Перечисления.бит_му_СпособыОтраженияДисконта.НаСчетДоходов, Истина, Ложь));
	Результат.Вставить("ОтображатьСпособОтраженияДисконта", Результат.ЭтоНерыночный И СтруктураОпераций.ЭтоКредитыЗаймыПолученные);
	Результат.Вставить("ОтображатьПараметрыДисконта",Результат.ДисконтНаСчетДоходов И СтруктураОпераций.ЭтоКредитыЗаймыПолученные);
	Результат.Вставить("ПроводкаПоДисконтуНаСчетДоходов", Результат.ДисконтНаСчетДоходов И Результат.ЭтоНерыночный И СтруктураОпераций.ЭтоКредитыЗаймыПолученные);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция возвращает табличный документ печатной формы.
// 
// Параметры:
//  МассивСсылок - Массив. Массив ссылок которые нужно распечатать.
// 	ПараметрыПечати - Структура.
// 
// Возвращаемое значение:
//  Результат – ТабличныйДокумент.
// 
Функция ПолучитьПечатныйДокументСправкаРасчетФинансовыхНачислений(МассивСсылок, ПараметрыПечати)

	Результат = Новый ТабличныйДокумент;
	
	Для каждого Документ Из МассивСсылок Цикл
		
		СтруктураПараметров = Новый Структура;
		
		СтруктураПараметров.Вставить("Организация", 					Документ.Организация);
		СтруктураПараметров.Вставить("Контрагент",						Документ.Контрагент);
		СтруктураПараметров.Вставить("ДоговорКонтрагента",				Документ.ДоговорКонтрагента);
		СтруктураПараметров.Вставить("Объект",							Документ.ДоговорКонтрагента);
		СтруктураПараметров.Вставить("ЭффективнаяСтавкаПроцента",		Документ.СтавкаЭСП);
		СтруктураПараметров.Вставить("ЭффективнаяСтавкаПроцентаМесяц", 	Документ.СтавкаЭСП / 12);
		
		Если Документ.ВидОперации <> Перечисления.бит_му_ВидыОперацийПризнаниеФинИнструментов.ДебиторскаяЗадолженность Тогда
			СтруктураПараметров.Вставить("НоминальнаяСтавка",			Документ.СтавкаНоминальная);
			СтруктураПараметров.Вставить("НоминальнаяСтавкаМесяц",		Документ.СтавкаНоминальная / 12);
		КонецЕсли;
		
		Если ТипЗнч(ПараметрыПечати) = Тип("Структура") И ПараметрыПечати.Свойство("ВидСуммы") Тогда
			СтруктураПараметров.Вставить("ВидСуммы",					ПараметрыПечати.ВидСуммы);
		КонецЕсли;
		
		Результат = Отчеты.бит_му_СправкаРасчетФинансовыхНачислений.СформироватьТабличныйДокумент(СтруктураПараметров, Результат);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
