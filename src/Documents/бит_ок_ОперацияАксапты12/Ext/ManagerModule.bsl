
Функция ТранслироватьВБК(Знач МассивДокументов) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВыбранныеОперации", МассивДокументов);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ДополнительныеДанныеПоОперациямАксапты.Документ КАК Ссылка
	|ИЗ
	|	РегистрСведений.бит_ДополнительныеДанныеПоОперациямАксапты КАК бит_ДополнительныеДанныеПоОперациямАксапты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ПО бит_ДополнительныеДанныеПоОперациямАксапты.Документ = Хозрасчетный.Регистратор
	|			И (Хозрасчетный.Активность = ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_ОборотыПоБюджетам КАК бит_ОборотыПоБюджетам
	|		ПО бит_ДополнительныеДанныеПоОперациямАксапты.Документ = бит_ОборотыПоБюджетам.Регистратор
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-10-11 (#4193)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ДополнительныеДанныеПоОперациямАксапты КАК бит_ДополнительныеДанныеПоОперациямАксаптыДокументаЗакупки
	|		ПО (бит_ДополнительныеДанныеПоОперациямАксаптыДокументаЗакупки.Документ = бит_ДополнительныеДанныеПоОперациямАксапты.Документ.ВаучерДокументаЗакупкиСсылка)
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-10-11 (#4193)
	|ГДЕ
	|	бит_ОборотыПоБюджетам.Регистратор ЕСТЬ NULL
	|	И бит_ДополнительныеДанныеПоОперациямАксапты.Документ В(&ВыбранныеОперации)
	|	И бит_ДополнительныеДанныеПоОперациямАксапты.Документ.Проведен
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-10-11 (#4193)
	|	И НЕ (бит_ДополнительныеДанныеПоОперациямАксапты.Документ.DocType = ""250""
	|		И НЕ бит_ДополнительныеДанныеПоОперациямАксаптыДокументаЗакупки.Документ ЕСТЬ NULL)
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-10-11 (#4193)
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_ДополнительныеДанныеПоОперациямАксапты.Документ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Трансляция движений выбранных документов не выполнена: Либо документы уже оттранслированы на регистры БК, либо нет движений в РСБУ, либо в РС ""Дополнительные данные по операциям аксапты"" нет записи с номером заявки");
		Возврат Ложь;
	КонецЕсли;
	
	МассивИсточники = Новый Массив;
	Источник = Справочники.бит_ОбъектыСистемы.НайтиПоРеквизиту("ИмяОбъектаПолное","РегистрНакопления.бит_ок_ОборотыАксапты12");
	Если ЗначениеЗаполнено(Источник) Тогда
		МассивИсточники.Добавить(Источник);
	КонецЕсли;
	МассивПриемники = Новый Массив;
	Приемник = Справочники.бит_ОбъектыСистемы.НайтиПоРеквизиту("ИмяОбъектаПолное","РегистрНакопления.бит_ОборотыПоБюджетам");
	Если ЗначениеЗаполнено(Приемник) Тогда
		МассивПриемники.Добавить(Приемник);
	КонецЕсли;
	Приемник = Справочники.бит_ОбъектыСистемы.НайтиПоРеквизиту("ИмяОбъектаПолное","РегистрНакопления.бит_КонтрольныеЗначенияБюджетов");
	Если ЗначениеЗаполнено(Приемник) Тогда
		МассивПриемники.Добавить(Приемник);
	КонецЕсли;
		
	ОК_ОбщегоНазначения.ВыполнитьТрансляциюОперацийАксапты12ВРегистрыБК(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка"), МассивИсточники, МассивПриемники);
		
	Возврат Истина;
	
КонецФункции

Функция ПолучитьСвязаннуюОперациюБУХ(СторнируемыйДокумент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ОперацияБух.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОперацияБух КАК ОперацияБух
	|ГДЕ
	|	НЕ ОперацияБух.ПометкаУдаления
	|	И ОперацияБух.СторнируемыйДокумент = &СторнируемыйДокумент";
	
	Запрос.УстановитьПараметр("СторнируемыйДокумент", СторнируемыйДокумент);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
			
	КонецЕсли;
	
	Возврат ПредопределенноеЗначение("Документ.ОперацияБух.ПустаяСсылка");
	
КонецФункции

Функция ПолучитьОперациюАксаптыПоВаучеру(Ваучер) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ОперацияАксапты.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.бит_ок_ОперацияАксапты12 КАК ОперацияАксапты
	|ГДЕ
	|	ОперацияАксапты.Ваучер = &Ваучер
	|	И НЕ ОперацияАксапты.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОперацияАксапты.Ссылка
	|ИЗ
	|	Документ.бит_ок_ОперацияАксапты КАК ОперацияАксапты
	|ГДЕ
	|	ОперацияАксапты.Ваучер = &Ваучер
	|	И НЕ ОперацияАксапты.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Ваучер", Ваучер);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
			
	КонецЕсли;
	
	Возврат ПредопределенноеЗначение("Документ.бит_ок_ОперацияАксапты12.ПустаяСсылка");
	
КонецФункции
