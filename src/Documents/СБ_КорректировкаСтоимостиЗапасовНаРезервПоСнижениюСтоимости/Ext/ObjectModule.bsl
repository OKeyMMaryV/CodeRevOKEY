 //+ СБ Прудникова 2011-01-10
 // Параметры соединения с SQL
 Перем Адрес;
 Перем Пользователь;
 Перем Пароль;
 Перем БазаДанных;
 Перем ТБЛ;
 Перем мТаймаут;
 Перем ПодключеноКБазе;
 // объекты для подключения к базе
 Перем СоединениеАДО, ЗапросАДО;
 Перем ГруппаНастроекМСФО;
               
 Процедура ЗагрузитьДанныеИзSQL() Экспорт
	 отказ=ложь;
	 
	 //ижтиси, шадрин, 19.08.2015(
	 ПрочитатьНастройки();
	 //ижтиси, шадрин, 19.08.2015)
	 
	 Если НЕ ЗначениеЗаполнено(Год) или НЕ ЗначениеЗаполнено(Месяц) Тогда
		 ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбраны год и месяц",,,, отказ);		
	 КонецЕсли;
	 
	 
	 
	 Если НЕ ЗначениеЗаполнено(ТБЛ) Тогда
		 ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не задана таблица в настройках!");
	 КонецЕсли;
	 
	 Если Данные.Количество() > 0 Тогда
		 Данные.Очистить();
	 КонецЕсли;
	 
	 СтруктураНастройки = Новый Структура;
	 СтруктураНастройки.Вставить("Год", Год);
	 СтруктураНастройки.Вставить("Месяц", Месяц);
	 
	 // Подключение к базе
	 Если Не ПодключениеКБазе() Тогда
		 ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Подключение отменено!",,,, отказ);		
	 КонецЕсли;
	 
	 если не отказ тогда
		 //Загрузка данных
		 ПолучениеДанных(СтруктураНастройки,отказ);
	 конецесли;
	 
 КонецПроцедуры
 
 Процедура ПолучениеДанных(СтруктураНастройки,отказ)
	 
	 //Условия запроса
	 // условие по периоду
	 ПараметрГод 	= СтрЗаменить(СтруктураНастройки.Год,Символы.НПП,"");
	 ПараметрМесяц 	= СтруктураНастройки.Месяц;
	 
	 Условие = "year = '" + ПараметрГод + "' and month = '" + ПараметрМесяц + "'";
	 
	 ЗапросАДО.CommandText = " 
	 |SELECT     MSFOTable.year
	 |			, MSFOTable.month
	 |			, SUBSTRING(MSFOTable.inventlocationid,1,9)as inventlocationid
	 |			, case 
	 |				when [GROUP].LEVELNAME IS NOT NULL then [GROUP].LEVELNAME 
	 |				when SUBGROUP.LEVELNAME IS NOT NULL then SUBGROUP.LEVELNAME 
	 |				when CATEGORY.LEVELNAME IS NOT NULL then CATEGORY.LEVELNAME 
	 |				when SUBCATEGORY.LEVELNAME IS NOT NULL then SUBCATEGORY.LEVELNAME 
	 |				else MSFOTable.levelid end as LEVELNAME
	 |			, MSFOTable.ReserveTotal
	 |FROM         [" + БазаДанных + "].[dbo].["+ТБЛ+"]as MSFOTable LEFT OUTER JOIN
	 |                      SUBGROUP ON MSFOTable.levelid = SUBGROUP.LEVELID LEFT OUTER JOIN
	 |                      SUBCATEGORY ON MSFOTable.levelid = SUBCATEGORY.LEVELID LEFT OUTER JOIN
	 |                      CATEGORY ON MSFOTable.levelid = CATEGORY.LEVELID LEFT OUTER JOIN
	 |                      [GROUP] ON MSFOTable.levelid = [GROUP].LEVELID
	 |WHERE     (MSFOTable.year = '" + ПараметрГод + "') AND (MSFOTable.month = '" + ПараметрМесяц + "')
	 |ORDER BY MSFOTable.levelid";
	 
	 
	 //Выполнение запроса
	 Сообщение				= "Начало загрузки данных: 	" + ТекущаяДата();
	 Статус					= "Запрос к экспортным таблицам SQL";
	 //ВыводСтатусаСообщения(Статус, );
	 
	 //Описание типов
	 ТипЧисло 	= Новый ОписаниеТипов("Число"); 
	 ТипСтрока 	= Новый ОписаниеТипов("Строка");
	 ТипСтрока10 = Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(10));
	 ТипСтрока20 = Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(20));
	 ТипСтрока120 = Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(120));
	 
	 
	 //Формирование таблицы для хранения и обработки результата данных
	 ТабДанные = Новый ТаблицаЗначений;
	 ТабДанные.Колонки.Добавить("year", ТипЧисло);
	 ТабДанные.Колонки.Добавить("month",ТипЧисло);
	 ТабДанные.Колонки.Добавить("inventlocationid", ТипСтрока20);
	 ТабДанные.Колонки.Добавить("LEVELNAME",ТипСтрока120);
	 ТабДанные.Колонки.Добавить("ReserveTotal",ТипЧисло);
	 
	 
	 Попытка 
		 Выборка = ЗапросАДО.Execute(); 
	 Исключение
		 Сообщить("Не удалось выполнить запрос:
		 |" + ЗапросАДО.CommandText);
	 КонецПопытки;
	 
	 Пока Не Выборка.EOF() Цикл 
		 НовСтр = ТабДанные.Добавить();
		 Для Каждого ЗначениеSQL из Выборка.Fields Цикл     			
			 НовСтр[ЗначениеSQL.Name] = ЗначениеSQL.Value;  				
		 КонецЦикла;
		 
		 Выборка.MoveNext(); 
	 КонецЦикла;	
	 
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	Таб.inventlocationid,
	                |	Таб.LEVELNAME,
	                |	Таб.ReserveTotal
	                |ПОМЕСТИТЬ Таб
	                |ИЗ
	                |	&ТабДанные КАК Таб
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	Таб.inventlocationid,
	                |	Таб.LEVELNAME,
	                |	Таб.ReserveTotal,
					//ижтиси, шадрин, 20.08.2015(
					//|	СБ_СоответствиеОбъектовСтроительства.ОбъектСтроительства,
					|	СБ_СоответствиеОбъектовСтроительства.ПраваяАналитика_1 КАК ОбъектСтроительства,
					//ижтиси, шадрин, 20.08.2015)
	                |	Номенклатура.Ссылка КАК Номенклатура
	                |ПОМЕСТИТЬ Данные
	                |ИЗ
	                |	Таб КАК Таб
					//ижтиси, шадрин, 20.08.2015(
					//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СБ_СоответствиеОбъектовСтроительства КАК СБ_СоответствиеОбъектовСтроительства
					//|		ПО Таб.inventlocationid = СБ_СоответствиеОбъектовСтроительства.inventlocationid
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СоответствияАналитик КАК СБ_СоответствиеОбъектовСтроительства
					|		ПО СБ_СоответствиеОбъектовСтроительства.ВидСоответствия = ЗНАЧЕНИЕ(Справочник.бит_ВидыСоответствийАналитик.inventlocationid_ОбъектыСтроительства)
	                |			И Таб.inventlocationid = СБ_СоответствиеОбъектовСтроительства.ЛеваяАналитика_1
					//ижтиси, шадрин, 20.08.2015)
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	                |		ПО (Номенклатура.Ссылка = &Товарчик)
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	Данные.ОбъектСтроительства КАК Объект,
	                |	СУММА(Данные.ReserveTotal) КАК СуммаРезерва,
	                |	Данные.Номенклатура,
	                |	Данные.inventlocationid
	                |ПОМЕСТИТЬ ТабДок
	                |ИЗ
	                |	Данные КАК Данные
	                |ГДЕ
	                |	Данные.ReserveTotal <> 0
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	Данные.ОбъектСтроительства,
	                |	Данные.Номенклатура,
	                |	Данные.inventlocationid
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	бит_Дополнительный_2ОстаткиИОбороты.Счет,
	                |	бит_Дополнительный_2ОстаткиИОбороты.Субконто2,
	                |	ТабДок.inventlocationid,
	                |	&Товарчик КАК Номенклатура,
	                |	ЕСТЬNULL(ТабДок.Объект, бит_Дополнительный_2ОстаткиИОбороты.Субконто2) КАК объект,
	                |	ТабДок.СуммаРезерва,
	                |	-бит_Дополнительный_2ОстаткиИОбороты.СуммаРеглНачальныйОстаток КАК СуммаНаНачалоГода,
	                |	ЕСТЬNULL(ТабДок.СуммаРезерва,0) + ЕСТЬNULL(бит_Дополнительный_2ОстаткиИОбороты.СуммаРеглНачальныйОстаток, 0) КАК СуммаЗаГод
	                |ИЗ
	                |	ТабДок КАК ТабДок
	                |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.бит_Дополнительный_2.ОстаткиИОбороты(&НачалоПериода, , , , Счет = &СчетКорЗапас, , Организация = &Организация) КАК бит_Дополнительный_2ОстаткиИОбороты
	                |		ПО (бит_Дополнительный_2ОстаткиИОбороты.Субконто2 = ТабДок.Объект)";
					
	                //ОК Аверьянова 12022014  |	бит_Дополнительный_2ОстаткиИОбороты.Субконто1, удалено из посл.части запроса
					
	 Запрос.УстановитьПараметр("Организация",Организация);				   
	 Запрос.УстановитьПараметр("НачалоПериода",Дата(Год,1,1,0,0,0));
	 Запрос.УстановитьПараметр("СчетКорЗапас",СчетПожалуйстаКорректировкиЗапасов(Отказ));		
	 Запрос.УстановитьПараметр("ТабДанные",ТабДанные);
	 Запрос.УстановитьПараметр("Товарчик",ПолучитьНастройку(ГруппаНастроекМСФО,"НоменклатураПоУмолчанию",отказ));
	 
	 Если не отказ тогда
		 Результат = Запрос.Выполнить().Выгрузить();
		 
		 //Оповестим о незаполненных объектах строительства
		 Результат_=Результат.Скопировать(Новый Структура("Объект",null));
		 Результат_.Свернуть("inventlocationid,Объект");	
		 для каждого стр из Результат_
			 цикл 
			 Сообщить("Не найдено соответствие для склада "+стр.inventlocationid+". Заполните регистр сведений «Соответствия аналитик»",СтатусСообщения.ОченьВажное);
		 конеццикла;
		 
		 Данные.Загрузить(Результат);
	 конецесли;
	 
 КонецПроцедуры
 
 Процедура РассчитатьРезерв() Экспорт
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	 |	Данные.ТоварнаяГруппа,
	 |	Данные.Объект,
	 |	Данные.Номенклатура,
	 |	Данные.Срок,
	 |	Данные.Сумма,
	 |	Данные.Процент
	 |ПОМЕСТИТЬ тз
	 |ИЗ
	 |	&Данные КАК Данные
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	тз.ТоварнаяГруппа,
	 |	тз.Объект,
	 |	тз.Номенклатура,
	 |	тз.Срок,
	 |	тз.Сумма,
	 |	тз.Процент,
	 |	тз.Сумма * тз.Процент / 100 КАК СуммаРезерва
	 |ИЗ
	 |	тз КАК тз";
	 Запрос.УстановитьПараметр("Данные",Данные);
	 
	 
	 Результат = Запрос.Выполнить().Выгрузить();
	 
	 
	 Данные.Загрузить(Результат);
	 
 КонецПроцедуры
 
 
 Функция ПодключениеКБазе()
	 
	 Если ПодключеноКБазе Тогда
		 Возврат Истина;
	 КонецЕсли;
	 // соединение с базой
	 СоединениеАДО = СоздатьСоединениеАДО(); 
	 Если СоединениеАДО = Неопределено Тогда 
		 Сообщить("Не удалось СоздатьСоединениеАДО", СтатусСообщения.Важное); 
		 Возврат Ложь; 
	 КонецЕсли; 
	 ЗапросАДО = СоздатьЗапросАДО(); 
	 Если ЗапросАДО = Неопределено Тогда 
		 Сообщить("Не удалось СоздатьЗапросАДО", СтатусСообщения.Важное); 
		 Возврат Ложь; 
	 КонецЕсли; 
	 Если Не ПодключитьсяАДОкБД(СоединениеАДО, ЗапросАДО) Тогда 
		 Сообщить("Не удалось ПодключитьсяАДОкБД", СтатусСообщения.Важное); 
		 Возврат Ложь; 
	 КонецЕсли; 
	 
	 ПодключеноКБазе = Истина;
	 Возврат Истина;
	 
 КонецФункции
 
 Функция СоздатьСоединениеАДО() Экспорт 
	 Перем СоединениеАДО; 
	 Попытка 
		 СоединениеАДО = Новый COMОбъект("ADODB.Connection"); 
	 Исключение 
		 Сообщить("Не удалось создать объект ""ADODB.Connection""", СтатусСообщения.Важное); 
		 Возврат Неопределено; 
	 КонецПопытки; 
	 Возврат СоединениеАДО; 
 КонецФункции //СоздатьСоединениеАДО() 
 
 //Создать объект ADODB.Command 
 //Возврат: 
 //   OLE - объект запрос или Неопределено 
 Функция СоздатьЗапросАДО() Экспорт 
	 Перем ЗапросАДО; 
	 Попытка 
		 ЗапросАДО = Новый COMОбъект("ADODB.Command");
		 ЗапросАДО.CommandTimeout = ?( (НЕ ЗначениеЗаполнено(мТаймаут)) ИЛИ мТаймаут=0, 600, мТаймаут);
	 Исключение 
		 Сообщить("Не удалось создать объект ""ADODB.Command""", СтатусСообщения.Важное); 
		 Возврат Неопределено; 
	 КонецПопытки; 
	 Возврат ЗапросАДО; 
 КонецФункции //СоздатьЗапросАДО() 
 
 //СоединениеАДО (OLE) - соединение 
 //ЗапросАДО (OLE)      - запрос 
 //Возврат: 
 //   Булево - удачно, нет 
 Функция ПодключитьсяАДОкБД(СоединениеАДО, ЗапросАДО)
	 
	 СтрокаСоединения = "driver={SQL Server};server="+Адрес+";uid="+Пользователь+";pwd="+Пароль+";Database="+БазаДанных; 
	 
	 
	 Попытка
		 СоединениеАДО.ConnectionTimeOut = ?( (НЕ ЗначениеЗаполнено(мТаймаут)) ИЛИ мТаймаут=0, 600, мТаймаут);
		 СоединениеАДО.Open(СтрокаСоединения); 
	 Исключение 
		 Сообщить("Не удалось установить соединение с базой данных", СтатусСообщения.Важное); 
		 Возврат Ложь; 
	 КонецПопытки; 
	 
	 ЗапросАДО.ActiveConnection = СоединениеАДО; 
	 
	 Возврат Истина; 
	 
 КонецФункции // ПодключитьсяАДОкБД()
 
 Процедура ЗаполнитьНастройки() Экспорт 
	 
	 Запрос = Новый Запрос;
	 
	 //Проверка наличия групп в регистре, если их нет, то добавляются
	 
	 Запрос.Текст = "ВЫБРАТЬ
	 |	""ЗагрузкаРезерваПоСнижениюСтоимости"" КАК Группа,
	 |	""Сервер"" КАК ИмяНастройки,
	 |	""olapdwh"" КАК Значение
	 |ПОМЕСТИТЬ ВТ_ПроверяемыеНастройки
	 |
	 |ОБЪЕДИНИТЬ ВСЕ
	 |
	 |ВЫБРАТЬ
	 |	""ЗагрузкаРезерваПоСнижениюСтоимости"",
	 |	""БД"",
	 |	""OlapDataSource""
	 |
	 |ОБЪЕДИНИТЬ ВСЕ
	 |
	 |ВЫБРАТЬ
	 |	""ЗагрузкаРезерваПоСнижениюСтоимости"",
	 |	""Login"",
	 |	""1c""
	 |
	 |ОБЪЕДИНИТЬ ВСЕ
	 |
	 |ВЫБРАТЬ
	 |	""ЗагрузкаРезерваПоСнижениюСтоимости"",
	 |	""Password"",
	 |	""forever""
	 |
	 |ОБЪЕДИНИТЬ ВСЕ
	 |
	 |ВЫБРАТЬ
	 |	""ЗагрузкаРезерваПоСнижениюСтоимости"",
	 |	""ТБЛ"",
	 |	""MSFOTable""
	 |
	 |ИНДЕКСИРОВАТЬ ПО
	 |	Группа,
	 |	ИмяНастройки
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВТ_ПроверяемыеНастройки.Группа,
	 |	ВТ_ПроверяемыеНастройки.ИмяНастройки,
	 |	ВТ_ПроверяемыеНастройки.Значение
	 |ИЗ
	 |	ВТ_ПроверяемыеНастройки КАК ВТ_ПроверяемыеНастройки
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ок_НастройкиМеханизмаИмпортаДанных КАК бит_ок_НастройкиМеханизмаИмпортаДанных
	 |		ПО ВТ_ПроверяемыеНастройки.Группа = бит_ок_НастройкиМеханизмаИмпортаДанных.Группа
	 |			И ВТ_ПроверяемыеНастройки.ИмяНастройки = бит_ок_НастройкиМеханизмаИмпортаДанных.ИмяНастройки
	 |ГДЕ
	 |	бит_ок_НастройкиМеханизмаИмпортаДанных.ИмяНастройки ЕСТЬ NULL ";
	 
	 ТЗНастройки = Запрос.Выполнить().Выгрузить();
	 
	 НачатьТранзакцию();
	 Для Каждого СтрокаНастроек из ТЗНастройки Цикл 
		 ДобавляемаяНастройка				= РегистрыСведений.бит_ок_НастройкиМеханизмаИмпортаДанных.СоздатьМенеджерЗаписи();
		 ДобавляемаяНастройка.Группа			= СтрокаНастроек.Группа;
		 ДобавляемаяНастройка.ИмяНастройки	= СтрокаНастроек.ИмяНастройки;
		 ДобавляемаяНастройка.Значение		= СтрокаНастроек.Значение;
		 ДобавляемаяНастройка.Записать(Истина);
	 КонецЦикла;
	 ЗафиксироватьТранзакцию();
	 
	 ПрочитатьНастройки();
	 
 КонецПроцедуры
 
 
 Процедура ПрочитатьНастройки() Экспорт
	 
	 // Параметры подключения
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	 |	бит_ок_НастройкиМеханизмаИмпортаДанных.ИмяНастройки,
	 |	бит_ок_НастройкиМеханизмаИмпортаДанных.Значение
	 |ИЗ
	 |	РегистрСведений.бит_ок_НастройкиМеханизмаИмпортаДанных КАК бит_ок_НастройкиМеханизмаИмпортаДанных
	 |ГДЕ
	 |	бит_ок_НастройкиМеханизмаИмпортаДанных.Группа В (&Группы)";
	 
	 Группы	= Новый Массив;
	 Группы.Добавить("ЗагрузкаРезерваПоСнижениюСтоимости");
	 Запрос.УстановитьПараметр("Группы", Группы);
	 
	 Выборка = Запрос.Выполнить().Выбрать();
	 Пока Выборка.Следующий() Цикл
		 Если Выборка.ИмяНастройки = "Сервер" Тогда
			 Адрес = Выборка.Значение;
		 ИначеЕсли Выборка.ИмяНастройки = "БД" Тогда
			 БазаДанных = Выборка.Значение;
		 ИначеЕсли Выборка.ИмяНастройки = "Login" Тогда
			 Пользователь = Выборка.Значение;
		 ИначеЕсли Выборка.ИмяНастройки = "Password" Тогда
			 Пароль = Выборка.Значение;
		 ИначеЕсли Выборка.ИмяНастройки = "ТБЛ" Тогда
			 ТБЛ = Выборка.Значение;
		 КонецЕсли;
	 КонецЦикла;
	 
 КонецПроцедуры
 
 
 Процедура ПроверкаРеквизитов(Отказ,Заголовок)
	 
	 // проверим заполнение шапки
	 СтруктураОбязательныхПолей = Новый Структура;
	 СтруктураОбязательныхПолей.Вставить("Организация");	
	 СтруктураОбязательныхПолей.Вставить("ВидДвиженияМСФО");	
	 СтруктураОбязательныхПолей.Вставить("бит_БК_ЦФО");	
	 
	 бит_ОбщегоНазначения.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект,  СтруктураОбязательныхПолей,   Отказ);
	 
	 бит_ОбщегоНазначения.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Данные", Новый Структура("Объект"),   Отказ, Заголовок); 		
 КонецПроцедуры 
 
 
 Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	 // Заголовок для сообщений об ошибках проведения.
	 Заголовок = ОбщегоНазначенияБПВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);
	 
	 ПроверкаРеквизитов(Отказ,Заголовок);
	 Если Отказ Тогда
	     Возврат;
	 КонецЕсли;
	 
	 СтруктураШапкиДокумента = бит_ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	 ТаблицаДанных = ПодготовитьТаблицуДанные(СтруктураШапкиДокумента);
	 Если Не Отказ Тогда
	     ДвиженияПоРегистрам(СтруктураШапкиДокумента,ТаблицаДанных, Отказ);
	 КонецЕсли;
	 
 КонецПроцедуры
 
 Процедура ОбработкаУдаленияПроведения(Отказ)
	 бит_ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, , Ложь);
 КонецПроцедуры
 
 
 Функция ПодготовитьТаблицуДанные(СтруктураШапкиДокумента)
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст =  "ВЫБРАТЬ
	                 |	СБ_КорректировкаСтоимостиЗапасовНаРезервПоСнижениюСтоимостиДанные.Номенклатура,
	                 |	СБ_КорректировкаСтоимостиЗапасовНаРезервПоСнижениюСтоимостиДанные.Объект,
	                 |	СБ_КорректировкаСтоимостиЗапасовНаРезервПоСнижениюСтоимостиДанные.СуммаЗаГод КАК Сумма,
	                 |	СБ_КорректировкаСтоимостиЗапасовНаРезервПоСнижениюСтоимостиДанные.Ссылка.бит_БК_ЦФО,
	                 |	СБ_КорректировкаСтоимостиЗапасовНаРезервПоСнижениюСтоимостиДанные.Ссылка.Период
	                 |ИЗ
	                 |	Документ.СБ_КорректировкаСтоимостиЗапасовНаРезервПоСнижениюСтоимости.Данные КАК СБ_КорректировкаСтоимостиЗапасовНаРезервПоСнижениюСтоимостиДанные
	                 |ГДЕ
	                 |	СБ_КорректировкаСтоимостиЗапасовНаРезервПоСнижениюСтоимостиДанные.Ссылка = &Ссылка
	                 |
	                 |СГРУППИРОВАТЬ ПО
	                 |	СБ_КорректировкаСтоимостиЗапасовНаРезервПоСнижениюСтоимостиДанные.Номенклатура,
	                 |	СБ_КорректировкаСтоимостиЗапасовНаРезервПоСнижениюСтоимостиДанные.Объект,
	                 |	СБ_КорректировкаСтоимостиЗапасовНаРезервПоСнижениюСтоимостиДанные.СуммаЗаГод,
	                 |	СБ_КорректировкаСтоимостиЗапасовНаРезервПоСнижениюСтоимостиДанные.Ссылка.бит_БК_ЦФО,
	                 |	СБ_КорректировкаСтоимостиЗапасовНаРезервПоСнижениюСтоимостиДанные.Ссылка.Период";
	 Запрос.УстановитьПараметр("Ссылка",СтруктураШапкиДокумента.Ссылка);
	 Результат = Запрос.Выполнить().Выгрузить();
	 
	 Возврат Результат;
 КонецФункции
 
 Функция ПолучитьНастройку(Группа,ИмяНастройки,отказ)
	 // +СБ. Кузнецова С. 2014-11-12 
	 //Отбор = Новый Структура("Группа,ИмяНастройки",Группа,ИмяНастройки);
	 Отбор = Новый Структура("Группа,ИмяНастройки, СБ_ПорядковыйНомерЗначения",Группа,ИмяНастройки, 0);
	 // -СБ. Кузнецова С.
	 Структура = РегистрыСведений.бит_му_Настройки.Получить(Отбор);
	 Если Структура.Количество() = 0 ИЛИ НЕ ЗначениеЗаполнено(Структура.Значение) Тогда 
		 ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не установлено значение настройки """+Группа+""" в регистре Настройки МСФО """+ИмяНастройки+""".",,,, отказ);		
	 иначе
		 возврат Структура.Значение; 
	 КонецЕсли;
	 
 КонецФункции
 
 Функция  СчетПожалуйстаКорректировкиЗапасов(отказ)
	 возврат ПолучитьНастройку(ГруппаНастроекМСФО,"Счет корректировки запасов на резерв под снижение стоимости",отказ);
 КонецФункции
 
 Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента,ТаблицаДанных, Отказ)
	 
	 Движения.бит_Дополнительный_2.Очистить();
	 
	 СтруктураПараметров = Новый Структура;
	 
	 СтруктураПараметров.Вставить("Организация",СтруктураШапкиДокумента.Организация);	
	 СтруктураПараметров.Вставить("ВидДвижения",ВидДвиженияМСФО);	
	 СтруктураПараметров.Вставить("СчетДт",ПолучитьНастройку(ГруппаНастроекМСФО,"Счет резерва по снижению стоимости",Отказ));
	 СтруктураПараметров.Вставить("СчетКт",СчетПожалуйстаКорректировкиЗапасов(Отказ));
	 
	 Если не отказ тогда
		 
		 СтруктураПараметров.Вставить("Дата",СтруктураШапкиДокумента.Дата);
		 СтруктураПараметров.Вставить("Коэффициент",1);	
		 Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл      		
			 СформироватьДвижения(СтруктураШапкиДокумента,СтрокаТаблицы,СтруктураПараметров); 		
		 КонецЦикла;
		 
		 Если ЗначениеЗаполнено(ДатаСторно) тогда	
			 СтруктураПараметров.Вставить("Дата",ДатаСторно);	
			 СтруктураПараметров.Вставить("Коэффициент",-1);	
			 Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
				 СформироватьДвижения(СтруктураШапкиДокумента,СтрокаТаблицы,СтруктураПараметров); 		
			 КонецЦикла;
		 КонецЕсли;
		 
	 КонецЕсли;
	 
 КонецПроцедуры
 
 Процедура СформироватьДвижения(СтруктураШапкиДокумента,СтрокаТаблицы,СтруктураПараметров)
	 
	 
	 Запись = Движения.бит_Дополнительный_2.Добавить();
	 Запись.Организация = СтруктураПараметров.Организация;
	 Запись.Период      = СтруктураПараметров.Дата;
	 Запись.Активность = Истина;
	 Запись.СчетДт = СтруктураПараметров.СчетДт;
	 Запись.СчетКт = СтруктураПараметров.СчетКт;
	 
	 // Заполним аналитику счета Дт.
	 бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, 1	   , СтрокаТаблицы.Объект);
	 бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, 2	   , СтрокаТаблицы.бит_БК_ЦФО);                                                                                    
	 бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, 3	   , СтрокаТаблицы.Период);                                                                                    
	 // Заполним аналитику счета Кт.
	 бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетКт, Запись.СубконтоКт, 1	   , СтрокаТаблицы.Номенклатура);
	 бит_му_ОбщегоНазначения.УстановитьСубконто(Запись.СчетКт, Запись.СубконтоКт, 2	   , СтрокаТаблицы.Объект);
	 //
	 Запись.ВидДвиженияМСФО = СтруктураПараметров.ВидДвижения;
	 Сумма = СтруктураПараметров.Коэффициент * СтрокаТаблицы.Сумма;
	 Запись.СуммаРегл  	= Сумма;
	 Запись.СуммаУпр    = Сумма;
	 Запись.СуммаМУ    = Сумма;
 КонецПроцедуры

 //ижтиси, шадрин, 19.08.2015(
 Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	 
	 Если ЭтоНовый() Тогда
		 бит_ОбщегоНазначения.ЗаполнитьШапкуДокумента(ЭтотОбъект
		                                               ,бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь"));
	 КонецЕсли;
	
 КонецПроцедуры
 //ижтиси, шадрин, 19.08.2015)
 
 
 ПодключеноКБазе 		= Ложь;
 мТаймаут 				= 0;
ГруппаНастроекМСФО=  "Корректировка стоимости запасов на резерв по снижению стоимости"; 
 
 
 
