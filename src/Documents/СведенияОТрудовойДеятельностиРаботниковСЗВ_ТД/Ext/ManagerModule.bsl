#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(Сотрудники.Сотрудник, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_ФормаСЗВ_ТД";
	КомандаПечати.Представление = НСтр("ru = 'СЗВ-ТД'");
	КомандаПечати.Порядок = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ФормаСЗВ_ТД") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"ПФ_MXL_ФормаСЗВ_ТД", 
			НСтр("ru = 'СЗВ-ТД'"), 
			ПечатнаяФормаСЗВ_ТД(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция ИмяФайла(Организация, Дата, УИД = Неопределено) Экспорт

	Если УИД = Неопределено Тогда
		УИД = Новый УникальныйИдентификатор;
	КонецЕсли;	
	
	Параметры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрационныйНомерПФР");
	
	Возврат "ПФР"
			+ "_" + ?(ЗначениеЗаполнено(Параметры.РегистрационныйНомерПФР), Параметры.РегистрационныйНомерПФР, "")
			+ "_СЗВ-ТД"
			+ "_" + Формат(Дата, "ДФ=ггггММдд")
			+ "_" + УИД;
			
КонецФункции	
			
Функция ВыборкаПоШапкеДокумента(МассивОбъектов)	
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТДанныеДокументовДополненные(Запрос.МенеджерВременныхТаблиц, МассивОбъектов);  
	
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТДанныеДокументовДополненные";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ВыборкаПоСотрудникам(МассивОбъектов)
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТДанныеДокументовДополненные(Запрос.МенеджерВременныхТаблиц, МассивОбъектов);  
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДокументовДополненные.Ссылка КАК Ссылка,
		|	ДанныеДокументовДополненные.Дата КАК Дата,
		|	ДанныеДокументовДополненные.Номер КАК Номер,
		|	ДанныеДокументовДополненные.Организация КАК Организация,
		|	ДанныеДокументовДополненные.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ДанныеДокументовДополненные.Наименование КАК Наименование,
		|	ДанныеДокументовДополненные.НаименованиеПолное КАК НаименованиеПолное,
		|	ДанныеДокументовДополненные.ИНН КАК ИНН,
		|	ДанныеДокументовДополненные.КПП КАК КПП,
		|	ДанныеДокументовДополненные.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
		|	ДанныеДокументовДополненные.ОГРН КАК ОГРН,
		|	ДанныеДокументовДополненные.Ответственный КАК Ответственный,
		|	ДанныеДокументовДополненные.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
		|	ДанныеДокументовДополненные.КодПоОКПО КАК КодПоОКПО,
		|	ДанныеДокументовДополненные.НаименованиеОКОПФ КАК НаименованиеОКОПФ,
		|	ДанныеДокументовДополненные.НаименованиеСокращенное КАК НаименованиеСокращенное,
		|	ДанныеДокументовДополненные.ИмяФайлаДляПФР КАК ИмяФайлаДляПФР,
		|	ДанныеДокументовДополненные.ОтчетныйПериод КАК ОтчетныйПериод,
		|	ДанныеДокументовДополненные.ДолжностьРуководителя КАК ДолжностьРуководителя,
		|	ДанныеДокументовДополненные.Руководитель КАК Руководитель,
		|	ДанныеДокументовДополненные.ФамилияРуководителя КАК ФамилияРуководителя,
		|	ДанныеДокументовДополненные.ИмяРуководителя КАК ИмяРуководителя,
		|	ДанныеДокументовДополненные.ОтчествоРуководителя КАК ОтчествоРуководителя,
		|	ДанныеДокументовДополненные.РуководительРасшифровкаПодписи КАК РуководительРасшифровкаПодписи,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.Сотрудник КАК Сотрудник,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.Фамилия КАК Фамилия,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.Имя КАК Имя,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.Отчество КАК Отчество,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.ДатаРождения КАК ДатаРождения,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.ЗаявлениеОПродолжении КАК ЗаявлениеОПродолжении,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.ЗаявлениеОПредоставлении КАК ЗаявлениеОПредоставлении,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.НомерСтроки КАК НомерСтрокиСотрудника,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.ЗаявлениеОПродолжении.Дата КАК ЗаявлениеОПродолженииДата,
		|	ВЫБОР
		|		КОГДА СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.ЗаявлениеОПродолженииОтмена
		|			ТОГДА ""2""
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ЗаявлениеОПродолженииСтатус,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.ЗаявлениеОПредоставлении.Дата КАК ЗаявлениеОПредоставленииДата,
		|	ВЫБОР
		|		КОГДА СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.ЗаявлениеОПредоставленииОтмена
		|			ТОГДА ""2""
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ЗаявлениеОПредоставленииСтатус,
		|	ВЫБОР
		|		КОГДА СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.ЗаявлениеОПродолженииОтмена
		|			ТОГДА ""Х""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ОтменаЗаявленияОПродолжении,
		|	ВЫБОР
		|		КОГДА СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.ЗаявлениеОПредоставленииОтмена
		|			ТОГДА ""Х""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ОтменаЗаявленияОПредоставлении
		|ПОМЕСТИТЬ ВТДанныеСотрудников
		|ИЗ
		|	ВТДанныеДокументовДополненные КАК ДанныеДокументовДополненные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Сотрудники КАК СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники
		|		ПО ДанныеДокументовДополненные.Ссылка = СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеСотрудников.Ссылка КАК Ссылка,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.НомерСтроки КАК НомерСтроки,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ЯвляетсяСовместителем КАК ЯвляетсяСовместителем,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ДатаМероприятия КАК ДатаМероприятия,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ВидМероприятия КАК ВидМероприятия,
		|	ЕСТЬNULL(СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Подразделение.Наименование, """") КАК Подразделение,
		|	ЕСТЬNULL(СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Должность.Наименование, """") КАК Должность,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.РазрядКатегория КАК РазрядКатегория,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ТрудоваяФункция КАК ТрудоваяФункция,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ТрудоваяФункция.Наименование КАК ВидПР,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ТрудоваяФункция.КодПрофессиональнойДеятельности КАК ТрудоваяФункцияКод,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольнения.Статья КАК ОснованиеУвольненияСтатья,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольнения.Часть КАК ОснованиеУвольненияЧасть,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольнения.Пункт КАК ОснованиеУвольненияПункт,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольнения.Подпункт КАК ОснованиеУвольненияПодпункт,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.НомерДокументаОснования КАК НомерДокументаОснования,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.СерияДокументаОснования КАК СерияДокументаОснования,
		|	ВЫБОР
		|		КОГДА СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольнения <> НЕОПРЕДЕЛЕНО
		|			ТОГДА ЕСТЬNULL(ПредставленияОснованийУвольнения.ТекстОснования, СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольнения.ТекстОснования)
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ОснованиеПричиныУвольнения,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Сведения КАК Сведения,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ДатаС КАК ДатаС,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ДатаПо КАК ДатаПо,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ДатаОтмены КАК ДатаОтмены,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Идентификатор КАК Идентификатор,
		|	ДанныеСотрудников.Дата КАК Дата,
		|	ДанныеСотрудников.Организация КАК Организация,
		|	ДанныеСотрудников.ОтчетныйПериод КАК ОтчетныйПериод,
		|	ДанныеСотрудников.Сотрудник КАК Сотрудник,
		|	ДанныеСотрудников.Сотрудник КАК ФизическоеЛицо,
		|	ДанныеСотрудников.НомерСтрокиСотрудника КАК НомерСтрокиСотрудника,
		|	ДанныеСотрудников.Фамилия КАК Фамилия,
		|	ДанныеСотрудников.Имя КАК Имя,
		|	ДанныеСотрудников.Отчество КАК Отчество,
		|	ДанныеСотрудников.ДатаРождения КАК ДатаРождения,
		|	ДанныеСотрудников.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	ДанныеСотрудников.ЗаявлениеОПродолжении КАК ЗаявлениеОПродолжении,
		|	ДанныеСотрудников.ЗаявлениеОПредоставлении КАК ЗаявлениеОПредоставлении,
		|	ДанныеСотрудников.НаименованиеСокращенное КАК ОрганизацияНаименованиеСокращенное,
		|	ДанныеСотрудников.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	ДанныеСотрудников.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
		|	ДанныеСотрудников.ИНН КАК ИНН,
		|	ДанныеСотрудников.КПП КАК КПП,
		|	ДанныеСотрудников.Руководитель КАК Руководитель,
		|	ДанныеСотрудников.РуководительРасшифровкаПодписи КАК РуководительРасшифровкаПодписи,
		|	ДанныеСотрудников.ДолжностьРуководителя КАК ДолжностьРуководителя,
		|	ВЫБОР
		|		КОГДА СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ДатаОтмены > ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ""Х""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ПризнакОтмены,
		|	ДанныеСотрудников.ЗаявлениеОПродолженииДата КАК ЗаявлениеОПродолженииДата,
		|	ДанныеСотрудников.ЗаявлениеОПродолженииСтатус КАК ЗаявлениеОПродолженииСтатус,
		|	ДанныеСотрудников.ЗаявлениеОПредоставленииДата КАК ЗаявлениеОПредоставленииДата,
		|	ДанныеСотрудников.ЗаявлениеОПредоставленииСтатус КАК ЗаявлениеОПредоставленииСтатус,
		|	ДанныеСотрудников.ОтменаЗаявленияОПродолжении КАК ОтменаЗаявленияОПродолжении,
		|	ДанныеСотрудников.ОтменаЗаявленияОПредоставлении КАК ОтменаЗаявленияОПредоставлении,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Подразделение.Наименование КАК ПодразделениеНаименованиеДляТК
		|ИЗ
		|	ВТДанныеСотрудников КАК ДанныеСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Мероприятия КАК СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредставленияОснованийУвольнения КАК ПредставленияОснованийУвольнения
		|			ПО СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ОснованиеУвольнения = ПредставленияОснованийУвольнения.Объект
		|		ПО ДанныеСотрудников.Ссылка = СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Ссылка
		|			И ДанныеСотрудников.Сотрудник = СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтрокиСотрудника,
		|	ДатаМероприятия,
		|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выбрать();
	
КонецФункции	

Процедура СоздатьВТДанныеДокументовДополненные(МенеджерВременныхТаблиц, МассивОбъектов)
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ОписаниеИсточникаДанных = ПерсонифицированныйУчет.ОписаниеИсточникаДанныхДляСоздатьВТСведенияОбОрганизациях();
	ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД";
	ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
	ОписаниеИсточникаДанных.ИмяПоляПериод = "Дата";
	ОписаниеИсточникаДанных.СписокСсылок = МассивОбъектов;

	ПерсонифицированныйУчет.СоздатьВТСведенияОбОрганизацияхПоОписаниюДокументаИсточникаДанных(Запрос.МенеджерВременныхТаблиц, ОписаниеИсточникаДанных);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Ссылка КАК Ссылка,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Номер КАК Номер,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Дата КАК Дата,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Организация КАК Организация,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ОтчетныйПериод КАК ОтчетныйПериод,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ДокументПринятВПФР КАК ДокументПринятВПФР,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ИмяФайлаДляПФР КАК ИмяФайлаДляПФР,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Руководитель КАК Руководитель,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ДолжностьРуководителя КАК ДолжностьРуководителя,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ФайлСформирован КАК ФайлСформирован,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Ответственный КАК Ответственный,
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ОкончаниеОтчетногоПериода КАК ОкончаниеОтчетногоПериода
		|ПОМЕСТИТЬ ВТДанныеДокументов
		|ИЗ
		|	Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД КАК СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД
		|ГДЕ
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Ссылка В(&МассивОбъектов)";
	
	Запрос.Выполнить();
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Истина, "Руководитель", "ВТДанныеДокументов");  
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДокументов.Ссылка КАК Ссылка,
		|	ДанныеДокументов.Дата КАК Дата,
		|	ДанныеДокументов.Номер КАК Номер,
		|	ДанныеДокументов.Организация КАК Организация,
		|	ДанныеДокументов.Ответственный КАК Ответственный,
		|	ДанныеДокументов.ИмяФайлаДляПФР КАК ИмяФайлаДляПФР,
		|	ДанныеДокументов.ОтчетныйПериод КАК ОтчетныйПериод,
		|	ЕСТЬNULL(ДанныеДокументов.ДолжностьРуководителя.Наименование, """") КАК ДолжностьРуководителя,
		|	ЕСТЬNULL(ФИООтветственныхЛиц.ФИОПолные, """") КАК Руководитель,
		|	ЕСТЬNULL(ФИООтветственныхЛиц.Фамилия, """") КАК ФамилияРуководителя,
		|	ЕСТЬNULL(ФИООтветственныхЛиц.Имя, """") КАК ИмяРуководителя,
		|	ЕСТЬNULL(ФИООтветственныхЛиц.Отчество, """") КАК ОтчествоРуководителя,
		|	ЕСТЬNULL(ФИООтветственныхЛиц.РасшифровкаПодписи, """") КАК РуководительРасшифровкаПодписи,
		|	СведенияОбОрганизациях.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	СведенияОбОрганизациях.Наименование КАК Наименование,
		|	СведенияОбОрганизациях.НаименованиеСокращенное КАК НаименованиеСокращенное,
		|	СведенияОбОрганизациях.НаименованиеПолное КАК НаименованиеПолное,
		|	СведенияОбОрганизациях.ИНН КАК ИНН,
		|	СведенияОбОрганизациях.КПП КАК КПП,
		|	СведенияОбОрганизациях.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
		|	СведенияОбОрганизациях.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
		|	СведенияОбОрганизациях.ОГРН КАК ОГРН,
		|	СведенияОбОрганизациях.КодПоОКПО КАК КодПоОКПО,
		|	СведенияОбОрганизациях.НаименованиеОКОПФ КАК НаименованиеОКОПФ
		|ПОМЕСТИТЬ ВТДанныеДокументовДополненные
		|ИЗ
		|	ВТДанныеДокументов КАК ДанныеДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОрганизациях КАК СведенияОбОрганизациях
		|		ПО ДанныеДокументов.Организация = СведенияОбОрганизациях.Организация
		|			И ДанныеДокументов.Дата = СведенияОбОрганизациях.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИООтветственныхЛиц
		|		ПО ДанныеДокументов.Ссылка = ФИООтветственныхЛиц.Ссылка
		|			И ДанныеДокументов.Руководитель = ФИООтветственныхЛиц.ФизическоеЛицо";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция СформироватьВыходнойФайл(Ссылка) 
	
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Ссылка);
	
	ВыборкаПоШапкеДокумента = ВыборкаПоШапкеДокумента(МассивСсылок);
	ВыборкаПоШапкеДокумента.Следующий();
		
	ВыборкаПоРаботникам = ВыборкаПоСотрудникам(МассивСсылок);
	
	// Загружаем формат файла сведений
	ДеревоФорматаXML = ПолучитьОбщийМакет("ФорматПФР_ЭТК_2019XML");
	ТекстФорматаXML = ДеревоФорматаXML.ПолучитьТекст();
	
	ДеревоФормата = ЗарплатаКадры.ЗагрузитьXMLВДокументDOM(ТекстФорматаXML);
	
	ФорматСЗВ_ТД = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СЗВ_ТД");
	
	ФорматЗЛ = ОбщегоНазначения.СкопироватьРекурсивно(ФорматСЗВ_ТД.ЗЛ.Значение);
	ФорматСЗВ_ТД.Удалить("ЗЛ");
	
	НаборЗаписейДатаЗаполнения = Новый Структура("ДатаЗаполнения", ОбщегоНазначения.СкопироватьРекурсивно(ФорматСЗВ_ТД.ДатаЗаполнения));
	ФорматСЗВ_ТД.Удалить("ДатаЗаполнения");
	
	НаборЗаписейРуководитель = Новый Структура("Руководитель", ОбщегоНазначения.СкопироватьРекурсивно(ФорматСЗВ_ТД.Руководитель));
	ФорматСЗВ_ТД.Удалить("Руководитель");
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ЗарплатаКадры.СоздатьДеревоXML();
	
	Атрибуты = Новый Соответствие;
	Атрибуты.Вставить("xmlns", "http://пф.рф/СЗВ-ТД/2019-12-20");
	Атрибуты.Вставить("xmlns:УТ2", "http://пф.рф/УТ/2017-08-21");
	Атрибуты.Вставить("xmlns:АФ5", "http://пф.рф/АФ/2018-12-07");
	УзелПФР = ЗарплатаКадры.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "ЭДПФР", "", Атрибуты);
	
	// Данные формы и страхователя
	НаборЗаписейРаботодатель = ФорматСЗВ_ТД.Работодатель.Значение;
	НаименованиеКраткое = СокрЛП(ВРег(ВыборкаПоШапкеДокумента.НаименованиеСокращенное));
	ПерсонифицированныйУчет.УдалитьПробелыРядомСДефисом(НаименованиеКраткое);
	НаборЗаписейРаботодатель.НаименованиеОрганизации = НаименованиеКраткое;
	НаборЗаписейРаботодатель.УТ2__РегНомер = ВыборкаПоШапкеДокумента.РегистрационныйНомерПФР;
	НаборЗаписейРаботодатель.УТ2__ИНН = ВыборкаПоШапкеДокумента.ИНН;
	Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.КПП) Тогда
		НаборЗаписейРаботодатель.УТ2__КПП = ВыборкаПоШапкеДокумента.КПП;
	Иначе
		НаборЗаписейРаботодатель.Удалить("УТ2__КПП");
		СтрокаПоляКПП = ФорматСЗВ_ТД.Работодатель.Поля.Найти("УТ2__КПП", "ИмяПоля");
		Если СтрокаПоляКПП <> Неопределено Тогда
			ФорматСЗВ_ТД.Работодатель.Поля.Удалить(СтрокаПоляКПП);
		КонецЕсли;		
	КонецЕсли;
	
	НаборЗаписейОтчетныйПериод = ФорматСЗВ_ТД.ОтчетныйПериод.Значение;
	НаборЗаписейОтчетныйПериод.Месяц = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Строка(Месяц(ВыборкаПоШапкеДокумента.ОтчетныйПериод)), 2);
	НаборЗаписейОтчетныйПериод.КалендарныйГод = Год(ВыборкаПоШапкеДокумента.ОтчетныйПериод);
	
	УзелФормы = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПФР, "СЗВ-ТД", "");
	ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелФормы, ФорматСЗВ_ТД);
	
	ФорматТрудоваяДеятельность = ОбщегоНазначения.СкопироватьРекурсивно(ФорматЗЛ.ТрудоваяДеятельность.Значение);
	ФорматЗЛ.Удалить("ТрудоваяДеятельность");
	
	ФорматМероприятие = ОбщегоНазначения.СкопироватьРекурсивно(ФорматТрудоваяДеятельность.Мероприятие.Значение);
	ФорматТрудоваяДеятельность.Удалить("Мероприятие");
	
	ФорматМероприятиеОтменяемое = ОбщегоНазначения.СкопироватьРекурсивно(ФорматТрудоваяДеятельность.МероприятиеОтменяемое.Значение);
	ФорматТрудоваяДеятельность.Удалить("МероприятиеОтменяемое");
	
	Пока ВыборкаПоРаботникам.СледующийПоЗначениюПоля("НомерСтрокиСотрудника") Цикл
	
		НаборЗаписейЗЛ = ОбщегоНазначения.СкопироватьРекурсивно(ФорматЗЛ);
		
		// Данные по сотруднику
		Фамилия = СокрЛП(ВыборкаПоРаботникам.Фамилия);
		Имя = СокрЛП(ВыборкаПоРаботникам.Имя);
		Отчество = СокрЛП(ВыборкаПоРаботникам.Отчество);
		
		НаборЗаписейФИО = НаборЗаписейЗЛ.УТ2__ФИО.Значение;
		НаборЗаписейФИО.УТ2__Фамилия = ВРег(Фамилия);
		НаборЗаписейФИО.УТ2__Имя = ВРег(Имя);
		НаборЗаписейФИО.УТ2__Отчество = ВРег(Отчество);
		
		ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейЗЛ.УТ2__ФИО, "УТ2__Отчество");
		
		НаборЗаписейЗЛ.ДатаРождения.Значение = Формат(ВыборкаПоРаботникам.ДатаРождения, "ДФ=yyyy-MM-dd");
		
		НаборЗаписейЗЛ.УТ2__СНИЛС.Значение = ВыборкаПоРаботникам.СтраховойНомерПФР;
		
		Если ЗначениеЗаполнено(ВыборкаПоРаботникам.ЗаявлениеОПредоставленииДата) Тогда
			ЗаявлениеОПредоставлении = НаборЗаписейЗЛ.Заявления.Значение.ЗаявлениеОПредоставлении.Значение;
			ЗаявлениеОПредоставлении.Дата.Значение = Формат(ВыборкаПоРаботникам.ЗаявлениеОПредоставленииДата, "ДФ=yyyy-MM-dd");
			ЗаявлениеОПредоставлении.СтатусЗаявленияОПредоставлении.Значение = ВыборкаПоРаботникам.ЗаявлениеОПредоставленииСтатус;
		Иначе
			НаборЗаписейЗЛ.Заявления.Значение.ЗаявлениеОПредоставлении.НеВыводитьВФайл = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаПоРаботникам.ЗаявлениеОПродолженииДата) Тогда
			ЗаявлениеОПродолжении = НаборЗаписейЗЛ.Заявления.Значение.ЗаявлениеОПродолжении.Значение;
			ЗаявлениеОПродолжении.Дата.Значение = Формат(ВыборкаПоРаботникам.ЗаявлениеОПродолженииДата, "ДФ=yyyy-MM-dd");
			ЗаявлениеОПродолжении.СтатусЗаявленияОПродолжении.Значение = ВыборкаПоРаботникам.ЗаявлениеОПродолженииСтатус;
		Иначе
			НаборЗаписейЗЛ.Заявления.Значение.ЗаявлениеОПродолжении.НеВыводитьВФайл = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ВыборкаПоРаботникам.ЗаявлениеОПредоставленииДата) 
			И Не ЗначениеЗаполнено(ВыборкаПоРаботникам.ЗаявлениеОПродолжении) Тогда
		    НаборЗаписейЗЛ.Заявления.НеВыводитьВФайл = Истина;
		КонецЕсли;
		
		УзелСотрудника = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелФормы, "ЗЛ", "");
		ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелСотрудника, НаборЗаписейЗЛ);
		
		Мероприятия = Новый Массив;
		ОтменяемыеМероприятия = Новый Массив;
		
		Пока ВыборкаПоРаботникам.Следующий() Цикл
			
			Если Не ЗначениеЗаполнено(ВыборкаПоРаботникам.ВидМероприятия) Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаПоРаботникам.ДатаОтмены) Тогда
				
				НаборЗаписейМероприятиеОтменяемое = ОбщегоНазначения.СкопироватьРекурсивно(ФорматМероприятиеОтменяемое);
				НаборЗаписейМероприятиеОтменяемое.UUID.Значение = ВыборкаПоРаботникам.Идентификатор;
				НаборЗаписейМероприятиеОтменяемое.ДатаМероприятия.Значение = Формат(ВыборкаПоРаботникам.ДатаМероприятия, "ДФ=yyyy-MM-dd");
				НаборЗаписейМероприятиеОтменяемое.ДатаОтмены.Значение = Формат(ВыборкаПоРаботникам.ДатаОтмены, "ДФ=yyyy-MM-dd");
				НаборЗаписейМероприятиеОтменяемое.Вид.Значение = КодВидаМероприятия(ВыборкаПоРаботникам.ВидМероприятия);
				НаборЗаписейМероприятиеОтменяемое.ЯвляетсяСовместителем.Значение = ?(ВыборкаПоРаботникам.ЯвляетсяСовместителем, 1, 0);
				
				ОтменяемыеМероприятия.Добавить(НаборЗаписейМероприятиеОтменяемое);
				
			Иначе
				
				НаборЗаписейМероприятие = ОбщегоНазначения.СкопироватьРекурсивно(ФорматМероприятие);
				НаборЗаписейМероприятие.UUID.Значение = ВыборкаПоРаботникам.Идентификатор;
				НаборЗаписейМероприятие.Дата.Значение = Формат(ВыборкаПоРаботникам.ДатаМероприятия, "ДФ=yyyy-MM-dd");
				НаборЗаписейМероприятие.Вид.Значение = КодВидаМероприятия(ВыборкаПоРаботникам.ВидМероприятия);
				НаборЗаписейМероприятие.Сведения.Значение = ВыборкаПоРаботникам.Сведения;
				НаборЗаписейМероприятие.Должность.Значение = Строка(ВыборкаПоРаботникам.Должность) 
					+ ?(ЗначениеЗаполнено(ВыборкаПоРаботникам.КодПоРееструДолжностей), " " + ВыборкаПоРаботникам.КодПоРееструДолжностей, "")
					+ ?(ЗначениеЗаполнено(ВыборкаПоРаботникам.РазрядКатегория), ", " + ВыборкаПоРаботникам.РазрядКатегория, "");
				НаборЗаписейМероприятие.ЯвляетсяСовместителем.Значение = ?(ВыборкаПоРаботникам.ЯвляетсяСовместителем, "1", "0");
				НаборЗаписейМероприятие.СтруктурноеПодразделение.Значение = Строка(ВыборкаПоРаботникам.ПодразделениеНаименованиеДляТК);
				НаборЗаписейМероприятие.ВидПР.Значение = ВыборкаПоРаботникам.ВидПР;
				НаборЗаписейМероприятие.КодВФ.Значение = ВыборкаПоРаботникам.ТрудоваяФункцияКод;
				НаборЗаписейМероприятие.ДатаС.Значение = Формат(ВыборкаПоРаботникам.ДатаС, "ДФ=yyyy-MM-dd");
				НаборЗаписейМероприятие.ДатаПо.Значение = Формат(ВыборкаПоРаботникам.ДатаПо, "ДФ=yyyy-MM-dd");
				
				Если ВыборкаПоРаботникам.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Увольнение Тогда
					НаборЗаписейМероприятие.Причина.Значение = Строка(ВыборкаПоРаботникам.ОснованиеПричиныУвольнения);
					НаборЗаписейМероприятие.ОснованиеУвольнения.Значение.УТ2__НормативныйДокумент = КадровыйУчет.НормативныйДокументОснованияУвольнения(ВыборкаПоРаботникам.ОснованиеУвольнения);
					НаборЗаписейМероприятие.ОснованиеУвольнения.Значение.УТ2__Статья = ВыборкаПоРаботникам.ОснованиеУвольненияСтатья;
					НаборЗаписейМероприятие.ОснованиеУвольнения.Значение.УТ2__Часть = ВыборкаПоРаботникам.ОснованиеУвольненияЧасть;
					НаборЗаписейМероприятие.ОснованиеУвольнения.Значение.УТ2__Пункт = ВыборкаПоРаботникам.ОснованиеУвольненияПункт;
					НаборЗаписейМероприятие.ОснованиеУвольнения.Значение.УТ2__Подпункт = ВыборкаПоРаботникам.ОснованиеУвольненияПодпункт;
					ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейМероприятие.ОснованиеУвольнения, "УТ2__НормативныйДокумент");
					ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейМероприятие.ОснованиеУвольнения, "УТ2__Статья");
					ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейМероприятие.ОснованиеУвольнения, "УТ2__Часть");
					ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейМероприятие.ОснованиеУвольнения, "УТ2__Пункт");
					ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейМероприятие.ОснованиеУвольнения, "УТ2__Подпункт");
				Иначе 
					НаборЗаписейМероприятие.ОснованиеУвольнения.НеВыводитьВФайл = Истина;
				КонецЕсли;
				
				НаборЗаписейОснование = НаборЗаписейМероприятие.Основание.Значение;
				НаборЗаписейОснование.Наименование.Значение = ВыборкаПоРаботникам.НаименованиеДокументаОснования;
				НаборЗаписейОснование.Дата.Значение = Формат(ВыборкаПоРаботникам.ДатаДокументаОснования, "ДФ=yyyy-MM-dd");;
				НаборЗаписейОснование.Номер.Значение = ВыборкаПоРаботникам.НомерДокументаОснования;
				НаборЗаписейОснование.Серия.Значение = ВыборкаПоРаботникам.СерияДокументаОснования;
				
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.Сведения, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.Должность, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.СтруктурноеПодразделение, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.ВидПР, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.КодВФ, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.Причина, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.ДатаС, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейМероприятие.ДатаПо, "Значение");
				ПерсонифицированныйУчет.УстановитьВыводВФайл(НаборЗаписейОснование.Серия, "Значение");
				
				Мероприятия.Добавить(НаборЗаписейМероприятие);
				
			КонецЕсли;
			
		КонецЦикла;
			
		Если Мероприятия.Количество() = 0 И ОтменяемыеМероприятия.Количество() = 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		УзелТрудоваяДеятельность = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелСотрудника, "ТрудоваяДеятельность", "");
		
		Для Каждого НаборЗаписейМероприятие Из Мероприятия Цикл 
			УзелМероприятие = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелТрудоваяДеятельность, "Мероприятие", "");
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелМероприятие, НаборЗаписейМероприятие);
		КонецЦикла;
		
		Для Каждого НаборЗаписейМероприятиеОтменяемое Из ОтменяемыеМероприятия Цикл 
			УзелМероприятиеОтменяемое = ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелТрудоваяДеятельность, "МероприятиеОтменяемое", "");
			ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелМероприятиеОтменяемое, НаборЗаписейМероприятиеОтменяемое);
		КонецЦикла;
		
	КонецЦикла;
	
	НаборЗаписейДатаЗаполнения.ДатаЗаполнения.Значение = Формат(ВыборкаПоШапкеДокумента.Дата, "ДФ=yyyy-MM-dd");
	ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелФормы, НаборЗаписейДатаЗаполнения);
	
	НаборЗаписейРуководитель.Руководитель.Значение.УТ2__Должность.Значение = ВРег(ВыборкаПоШапкеДокумента.ДолжностьРуководителя);
	НаборЗаписейФИО = НаборЗаписейРуководитель.Руководитель.Значение.УТ2__ФИО.Значение;
	НаборЗаписейФИО.УТ2__Фамилия = ВРег(ВыборкаПоШапкеДокумента.ФамилияРуководителя);
	НаборЗаписейФИО.УТ2__Имя = ВРег(ВыборкаПоШапкеДокумента.ИмяРуководителя);
	НаборЗаписейФИО.УТ2__Отчество = ВРег(ВыборкаПоШапкеДокумента.ОтчествоРуководителя);
	ПерсонифицированныйУчет.УстановитьВыводВФайлСвойстваЗначенияЭлемента(НаборЗаписейРуководитель.Руководитель.Значение.УТ2__ФИО, "УТ2__Отчество");
	ЗарплатаКадры.ДобавитьИнформациюВДерево(УзелФормы, НаборЗаписейРуководитель);
	
	// Служебная информация о файле
	НаборЗаписейСлужебнаяИнформация = ЗарплатаКадры.ЗагрузитьФорматНабораЗаписей(ДеревоФормата, "СлужебнаяИнформация");
	Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР) Тогда
		ЧастиИмениФайла = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СокрЛП(ВыборкаПоШапкеДокумента.ИмяФайлаДляПФР),"_");
		НаборЗаписейСлужебнаяИнформация.АФ5__GUID.Значение = ЧастиИмениФайла[ЧастиИмениФайла.ВГраница()];
	КонецЕсли;
	НаборЗаписейСлужебнаяИнформация.АФ5__ДатаВремя.Значение = ПерсонифицированныйУчет.ПредставлениеДатыВФорматеdateTimeСЧасовымПоясом(ВыборкаПоШапкеДокумента.Дата);
	ЗарплатаКадры.ДобавитьИнформациюВДерево(ЗарплатаКадры.ДобавитьУзелВДеревоXML(УзелПФР, "СлужебнаяИнформация",""), НаборЗаписейСлужебнаяИнформация);
	
	// Преобразуем дерево в строковое описание XML
	ПотокВыгрузкиXML = ЗарплатаКадры.СоздатьПотокXML(, "UTF-8");
	ЗарплатаКадры.ЗаписатьУзелДереваXMLВXML(ДеревоВыгрузки, ПотокВыгрузкиXML, "xsi", "http://www.w3.org/2001/XMLSchema-instance", Ложь);
	ТекстФайла = ЗарплатаКадры.ЗаписатьПотокXML(ПотокВыгрузкиXML);
	
	Возврат СтрЗаменить(ТекстФайла, "__", ":");
	
КонецФункции // СформироватьВыходнойФайл()

Процедура ОбработкаФормированияФайла(Объект) Экспорт	
	
	ТекстФайла = СформироватьВыходнойФайл(Объект.Ссылка);
	ЗарплатаКадры.ЗаписатьФайлВАрхив(Объект.Ссылка, Объект.ИмяФайлаДляПФР, ТекстФайла, , "UTF-8", Ложь, Ложь);
	
КонецПроцедуры

Функция ВыгрузитьФайлыВоВременноеХранилище(Ссылка, УникальныйИдентификатор = Неопределено) Экспорт
	
	ДанныеФайла = ЗарплатаКадры.ПолучитьДанныеФайла(Ссылка, УникальныйИдентификатор);
	
	ОписаниеВыгруженногоФайла = ПерсонифицированныйУчет.ОписаниеВыгруженногоФайлаОтчетности();
	
	ОписаниеВыгруженногоФайла.Владелец = Ссылка;
	ОписаниеВыгруженногоФайла.АдресВоВременномХранилище = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
	ОписаниеВыгруженногоФайла.ИмяФайла = ДанныеФайла.ИмяФайла;
	ОписаниеВыгруженногоФайла.ПроверятьCheckXML = Ложь;
	ОписаниеВыгруженногоФайла.ПроверятьCheckUFA = Истина;
	ОписаниеВыгруженногоФайла.ПроверятьПОПД = Истина;
	
	ВыгруженныеФайлы = Новый Массив;
	ВыгруженныеФайлы.Добавить(ОписаниеВыгруженногоФайла);
	
	Возврат ВыгруженныеФайлы;
	
КонецФункции

Функция КодВидаМероприятия(ВидМероприятия)
	
	КодыМероприятий = Новый Соответствие;
	КодыМероприятий.Вставить(Перечисления.ВидыМероприятийТрудовойДеятельности.Прием, 1);
	КодыМероприятий.Вставить(Перечисления.ВидыМероприятийТрудовойДеятельности.Перевод, 2);
	КодыМероприятий.Вставить(Перечисления.ВидыМероприятийТрудовойДеятельности.Переименование, 3);
	КодыМероприятий.Вставить(Перечисления.ВидыМероприятийТрудовойДеятельности.УстановлениеВторойПрофессии, 4);
	КодыМероприятий.Вставить(Перечисления.ВидыМероприятийТрудовойДеятельности.Увольнение, 5);
	КодыМероприятий.Вставить(Перечисления.ВидыМероприятийТрудовойДеятельности.ЗапретЗаниматьДолжность, 6);
	
	Возврат КодыМероприятий.Получить(ВидМероприятия);
	
КонецФункции

Функция СтруктураПолейМероприятий() Экспорт 
	
	СтруктураПолей = Новый Структура;
	Реквизиты = Метаданные.Документы.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ТабличныеЧасти.Мероприятия.Реквизиты;
	Для Каждого Реквизит Из Реквизиты Цикл
		СтруктураПолей.Вставить(Реквизит.Имя);
	КонецЦикла;
	
	Возврат СтруктураПолей;
	
КонецФункции

Функция ПечатнаяФормаСЗВ_ТД(МассивОбъектов, ОбъектыПечати)
	
	Выборка = ВыборкаПоСотрудникам(МассивОбъектов);
	
	Возврат ЭлектронныеТрудовыеКнижки.ВывестиМакетыДокументов(Выборка, "Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.ПФ_MXL_ФормаСЗВ_ТД", ОбъектыПечати);;
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьСотрудниковСЗВ_ТД(ПараметрыОбновления = Неопределено) Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Сотрудники.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Сотрудники КАК Сотрудники
	               |ГДЕ
	               |	Сотрудники.Сотрудник = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	               |	И Сотрудники.УдалитьСотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)";
	
	РезультатЗапроса = Запрос.Выполнить();			   
				   
	Если РезультатЗапроса.Пустой() Тогда 
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл 
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Сотрудники = ОбщегоНазначения.ВыгрузитьКолонку(ДокументОбъект.Сотрудники, "УдалитьСотрудник");
		ФизическиеЛица = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники, "ФизическоеЛицо");
		
		Для Каждого СтрокаСотрудника Из ДокументОбъект.Сотрудники Цикл 
			СтрокаСотрудника.Сотрудник = ФизическиеЛица[СтрокаСотрудника.УдалитьСотрудник];
		КонецЦикла;
		
		Для Каждого СтрокаМероприятия Из ДокументОбъект.Мероприятия Цикл 
			СтрокаМероприятия.Сотрудник = ФизическиеЛица[СтрокаМероприятия.УдалитьСотрудник];
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьЯвляетсяСовместителемВМероприятиях(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Сотрудники КАК СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД.Мероприятия КАК СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия
		|		ПО СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.Ссылка = СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Ссылка
		|			И СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.Сотрудник = СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.Сотрудник
		|ГДЕ
		|	СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.УдалитьЯвляетсяСовместителем <> ЕСТЬNULL(СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДМероприятия.ЯвляетсяСовместителем, СведенияОТрудовойДеятельностиРаботниковСЗВ_ТДСотрудники.УдалитьЯвляетсяСовместителем)";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.СведенияОТрудовойДеятельностиРаботниковСЗВ_ТД", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Для Каждого СтрокаСотрудника Из ДокументОбъект.Сотрудники Цикл
			
			МероприятияСотрудника = ДокументОбъект.Мероприятия.НайтиСтроки(Новый Структура("Сотрудник", СтрокаСотрудника.Сотрудник));
			Для Каждого СтрокаМероприятия Из МероприятияСотрудника Цикл
				СтрокаМероприятия.ЯвляетсяСовместителем = СтрокаСотрудника.УдалитьЯвляетсяСовместителем;
			КонецЦикла;
			
		КонецЦикла;
		
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
