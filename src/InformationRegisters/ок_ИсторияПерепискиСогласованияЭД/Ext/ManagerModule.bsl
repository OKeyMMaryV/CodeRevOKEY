//ОКЕЙ Вдовиченко Г.В(СофтЛаб) 2019-05-13 (#3340)

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-07-22 (#3780)
//Процедура ОбновитьИсторию(ЭлектронныйДокумент, Отправитель, Направление,  ИдентификаторОповещения = "", Комментарий = "", Решение = Неопределено, Тема = "") Экспорт
Процедура ОбновитьИсторию(ЭлектронныйДокумент, Отправитель, Направление,  ИдентификаторОповещения = "", Комментарий = "", Решение = Неопределено, Тема = "",
			КорректировкаДатыСобытия = 0
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-01-13 (#3997)
			,Получатель = Неопределено) Экспорт
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-01-13 (#3997)
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-07-22 (#3780)
	
	Если Не ЗначениеЗаполнено(ЭлектронныйДокумент) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-07-22 (#3780)
	//ДатаСобытия = ТекущаяДатаСеанса();
	ДатаСобытия = ТекущаяДатаСеанса() + КорректировкаДатыСобытия;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-07-22 (#3780)
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭлектронныйДокумент, "НомерВерсииЭД, ок_ДатаРедакции");
	
	Набор = РегистрыСведений.ок_ИсторияПерепискиСогласованияЭД.СоздатьНаборЗаписей();
	Набор.Отбор.ЭлектронныйДокумент.Установить(ЭлектронныйДокумент);
	Набор.Отбор.ДатаСобытия.Установить(ДатаСобытия);
	Набор.Отбор.Отправитель.Установить(Отправитель);
	Набор.Отбор.ИдентификаторОповещения.Установить(ИдентификаторОповещения);
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-01-13 (#3997)
	Набор.Отбор.Получатель.Установить(Получатель);
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-01-13 (#3997)
	
	Запись = Набор.Добавить();
	Запись.ЭлектронныйДокумент = ЭлектронныйДокумент;
	Запись.ДатаСобытия = ДатаСобытия;
	Запись.Отправитель = Отправитель;
	Запись.ИдентификаторОповещения = ИдентификаторОповещения;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-01-13 (#3997)
	Запись.Получатель = Получатель;	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-01-13 (#3997)
	Запись.ДатаРедакции = РеквизитыДокумента.ок_ДатаРедакции;
	Запись.НомерРедакции = РеквизитыДокумента.НомерВерсииЭД;
	Запись.Направление = Направление;
	Запись.Решение = Решение;
	Запись.Комментарий = Комментарий;
	Запись.Тема = Тема;
	
	Набор.Записать();
	
КонецПроцедуры	

Процедура ОбновитьИсториюПриОтправкеОповещения(ИдентификаторОповещения) Экспорт
	
	Если Не ЗначениеЗаполнено(ИдентификаторОповещения) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Набор = РегистрыСведений.ок_ИсторияПерепискиСогласованияЭД.СоздатьНаборЗаписей();
	Набор.Отбор.ИдентификаторОповещения.Установить(ИдентификаторОповещения);
	Набор.Прочитать();
	
	Записывать = Ложь;
	Для каждого Запись Из Набор Цикл
		Если Запись.Направление <> Перечисления.СтатусыПисем.Исходящее Тогда
			Продолжить;
		КонецЕсли;	
		Запись.Направление = Перечисления.СтатусыПисем.Отправленное;
		Записывать = Истина;
	КонецЦикла;	
	
	Если Записывать Тогда
		Набор.Записать();
	КонецЕсли;	
	
КонецПроцедуры	

Функция ПолучитьТекстЗапросаПереписки()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Данные.ЭлектронныйДокумент КАК ЭлектронныйДокумент,
	|	Данные.ДатаСобытия КАК ДатаСобытия,
	|	Данные.Отправитель КАК Отправитель,
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-01-11 №3997
	|	Данные.Получатель КАК Получатель,
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-01-11 №3997
	|	Данные.ДатаРедакции КАК ДатаРедакции,
	|	Данные.Направление КАК Направление,
	|	Данные.Решение КАК Решение,
	|	Данные.НомерРедакции КАК НомерРедакции,
	|	Данные.Комментарий КАК Комментарий,
	|	Данные.Тема КАК Тема
	|ИЗ
	|	РегистрСведений.ок_ИсторияПерепискиСогласованияЭД КАК Данные
	|ГДЕ
	|	Данные.ЭлектронныйДокумент = &ЭлектронныйДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаСобытия"
	;
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ПолучитьИсториюПерепискиДокумента(Документ) Экспорт
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	
	Запрос.Текст = ПолучитьТекстЗапросаПереписки();
	
	Запрос.УстановитьПараметр("ЭлектронныйДокумент", Документ);

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПодготовитьТекстПерепискиДокумента(Документ, СтруктураСообщения) Экспорт
	
	ТекстДляПисьма = "";
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат ТекстДляПисьма;
	КонецЕсли;	
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	
	Запрос.Текст = ПолучитьТекстЗапросаПереписки();
	
	Запрос.УстановитьПараметр("ЭлектронныйДокумент", Документ);

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ТекстДляПисьма;
	КонецЕсли;	
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-02-03 (#3997) 
	//СтруктураПолей = Новый Структура("ДатаСобытия, Тема, Направление, Отправитель, Комментарий");
	СтруктураПолей = Новый Структура("ДатаСобытия, Тема, Направление, Отправитель, Получатель, Комментарий");
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-02-03 (#3997) 
	
	ЭтоHTML = СтруктураСообщения.Свойство("ТипТекстаСообщения") И СтруктураСообщения.ТипТекстаСообщения = Строка(ТипТекстаПочтовогоСообщения.HTML);
	Если ЭтоHTML Тогда
		ТекстДляПисьма = ТекстДляПисьма + "<TABLE style=""font-size: 80%"" cellspacing=""0"" border=""1"" cellpadding=""0"" width = 1200px>";
		// вывод колонок таблицы
		ТекстДляПисьма = ТекстДляПисьма + "<TR>";
		// заполним строку
		Для Каждого Поле Из СтруктураПолей Цикл
			ТекстДляПисьма = ТекстДляПисьма + "<TD style = ""padding-right:10px;width:310px;"">";
			ТекстДляПисьма = ТекстДляПисьма + Поле.Ключ;
			ТекстДляПисьма = ТекстДляПисьма + "</TD>";
		КонецЦикла;
		
		ТекстДляПисьма = ТекстДляПисьма + "</TR>";
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПолей, Выборка);
		
		Если ЭтоHTML Тогда 
			ТекстДляПисьма = ТекстДляПисьма + "<TR>";
			// заполним строку
			Для Каждого Поле Из СтруктураПолей Цикл
				ТекстДляПисьма = ТекстДляПисьма + "<TD style = ""padding-right:10px;width:310px;"">";
				ТекстДляПисьма = ТекстДляПисьма + Поле.Значение;
				ТекстДляПисьма = ТекстДляПисьма + "</TD>";
			КонецЦикла;
			
			ТекстДляПисьма = ТекстДляПисьма + "</TR>";
			
		Иначе
			ТекстДляПисьма = ТекстДляПисьма + Символы.ПС;
			
			// заполним строку
			Для Каждого Поле Из СтруктураПолей Цикл
				ТекстДляПисьма = ТекстДляПисьма + Поле.Значение;
				ТекстДляПисьма = ТекстДляПисьма + ";";
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЭтоHTML Тогда
		ТекстДляПисьма = ТекстДляПисьма + "</TABLE>";
	КонецЕсли;
	
	Возврат ТекстДляПисьма;
	
КонецФункции	

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-01-21 (#3997)
Функция ПолучитьТекстЗапросаПерепискиПользователя()
	
	ТекстЗапроса = 	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_НазначенныеЗаместители.Заместитель КАК Заместитель,
	|	бит_НазначенныеЗаместители.Пользователь КАК Пользователь,
	|	бит_БК_Инициаторы.Ссылка КАК Инициатор
	|ПОМЕСТИТЬ ВТ_ЗаместителиИВизы
	|ИЗ
	|	РегистрСведений.бит_НазначенныеЗаместители КАК бит_НазначенныеЗаместители
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_ГруппыВиз.ВизыГруппы КАК бит_ГруппыВизВизыГруппы
	|		ПО бит_НазначенныеЗаместители.Виза = бит_ГруппыВизВизыГруппы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_БК_Инициаторы КАК бит_БК_Инициаторы
	|		ПО бит_НазначенныеЗаместители.Заместитель = бит_БК_Инициаторы.Пользователь
	|ГДЕ
	|	бит_НазначенныеЗаместители.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_СостоянияЗаместителей.Назначен)
	|	И бит_НазначенныеЗаместители.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
	|	И бит_НазначенныеЗаместители.ДатаНачала <= &ТекущаяДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ок_ИсторияПерепискиСогласованияЭД.ЭлектронныйДокумент КАК ЭлектронныйДокумент,
	|	ок_ИсторияПерепискиСогласованияЭД.ДатаСобытия КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА ок_ИсторияПерепискиСогласованияЭД.Отправитель ССЫЛКА Справочник.бит_БК_Инициаторы
	|			ТОГДА ок_ИсторияПерепискиСогласованияЭД.Отправитель.Пользователь
	|		ИНАЧЕ ок_ИсторияПерепискиСогласованияЭД.Отправитель
	|	КОНЕЦ КАК Отправитель,
	|	ВЫБОР
	|		КОГДА ок_ИсторияПерепискиСогласованияЭД.Получатель ССЫЛКА Справочник.бит_БК_Инициаторы
	|			ТОГДА ок_ИсторияПерепискиСогласованияЭД.Получатель.Пользователь
	|		ИНАЧЕ ок_ИсторияПерепискиСогласованияЭД.Получатель
	|	КОНЕЦ КАК Получатель,
	|	ок_ИсторияПерепискиСогласованияЭД.ДатаРедакции КАК ДатаРедакции,
	|	ок_ИсторияПерепискиСогласованияЭД.Направление КАК Направление,
	|	ок_ИсторияПерепискиСогласованияЭД.Решение КАК Решение,
	|	ок_ИсторияПерепискиСогласованияЭД.НомерРедакции КАК НомерРедакции,
	|	ПОДСТРОКА(ок_ИсторияПерепискиСогласованияЭД.Комментарий, 1, 255) КАК Комментарий,
	|	ПОДСТРОКА(ок_ИсторияПерепискиСогласованияЭД.Тема, 1, 255) КАК Тема
	|ПОМЕСТИТЬ ИсторияДокумента
	|ИЗ
	|	РегистрСведений.ок_ИсторияПерепискиСогласованияЭД КАК ок_ИсторияПерепискиСогласованияЭД
	|ГДЕ
	|	ок_ИсторияПерепискиСогласованияЭД.ЭлектронныйДокумент = &ЭлектронныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Данные.ЭлектронныйДокумент КАК ЭлектронныйДокумент,
	|	Данные.ДатаСобытия КАК ДатаСобытия,
	|	Данные.Отправитель КАК Отправитель,
	|	Данные.Получатель КАК Получатель,
	|	Данные.ДатаРедакции КАК ДатаРедакции,
	|	Данные.Направление КАК Направление,
	|	Данные.Решение КАК Решение,
	|	Данные.НомерРедакции КАК НомерРедакции,
	|	ПОДСТРОКА(Данные.Комментарий, 1, 255) КАК Комментарий,
	|	ПОДСТРОКА(Данные.Тема, 1, 255) КАК Тема
	|ИЗ
	|	ИсторияДокумента КАК Данные
	|ГДЕ
	|	(Данные.Отправитель = &Пользователь
	|			ИЛИ Данные.Получатель = &Пользователь)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.ЭлектронныйДокумент,
	|	Данные.ДатаСобытия,
	|	Данные.Отправитель,
	|	Данные.Получатель,
	|	Данные.ДатаРедакции,
	|	Данные.Направление,
	|	Данные.Решение,
	|	Данные.НомерРедакции,
	|	ПОДСТРОКА(Данные.Комментарий, 1, 255),
	|	ПОДСТРОКА(Данные.Тема, 1, 255)
	|ИЗ
	|	ИсторияДокумента КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаместителиИВизы КАК ВТ_ЗаместителиИВизы
	|		ПО (Данные.Отправитель = ВТ_ЗаместителиИВизы.Пользователь
	|				ИЛИ Данные.Получатель = ВТ_ЗаместителиИВизы.Пользователь)
	|ГДЕ
	|	(ВТ_ЗаместителиИВизы.Инициатор = &Инициатор
	|			ИЛИ ВТ_ЗаместителиИВизы.Заместитель = &Пользователь)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.ЭлектронныйДокумент,
	|	Данные.ДатаСобытия,
	|	Данные.Отправитель,
	|	Данные.Получатель,
	|	Данные.ДатаРедакции,
	|	Данные.Направление,
	|	Данные.Решение,
	|	Данные.НомерРедакции,
	|	ПОДСТРОКА(Данные.Комментарий, 1, 255),
	|	ПОДСТРОКА(Данные.Тема, 1, 255)
	|ИЗ
	|	ИсторияДокумента КАК Данные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗаместителиИВизы КАК ВТ_ЗаместителиИВизы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗаместителиИВизы КАК ВТ_ЗаместителиЗаместителей
	|			ПО (ВТ_ЗаместителиЗаместителей.Пользователь = ВТ_ЗаместителиИВизы.Заместитель)
	|		ПО (Данные.Отправитель = ВТ_ЗаместителиИВизы.Пользователь
	|				ИЛИ Данные.Получатель = ВТ_ЗаместителиИВизы.Пользователь)
	|ГДЕ
	|	(ВТ_ЗаместителиЗаместителей.Инициатор = &Инициатор
	|			ИЛИ ВТ_ЗаместителиЗаместителей.Заместитель = &Пользователь)";
	 
	Возврат ТекстЗапроса;
	
КонецФункции	

//Пользователь - СправочникСсылка.Пользователи
Функция ПолучитьИсториюПерепискиДокументаПоПользователю(Документ, Пользователь) Экспорт
	
	Если Не ЗначениеЗаполнено(Документ) ИЛИ Не ЗначениеЗаполнено(Пользователь) Тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаПерепискиПользователя();
	
	Запрос.УстановитьПараметр("ЭлектронныйДокумент", Документ);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("Инициатор", ПараметрыСеанса.бит_БК_ТекущийИнициатор);

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-01-21 (#3997) 