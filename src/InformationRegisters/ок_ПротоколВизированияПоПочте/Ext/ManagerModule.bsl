
// Записывает результат выполнения по сообщению
Процедура ЗаписатьРезультатВыполненияПоСообщению(Сообщение = Неопределено, РезультатВыполнения, Описание = "", Документ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи = РегистрыСведений.ок_ПротоколВизированияПоПочте.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Период = ТекущаяДатаСеанса();
	Если ЗначениеЗаполнено(Сообщение) Тогда
		МенеджерЗаписи.ИдентификаторСообщения 	= Сообщение.ИдентификаторСообщения;
		МенеджерЗаписи.Отправитель 				= Сообщение.Отправитель;
		МенеджерЗаписи.ДатаОтправки 			= Сообщение.ДатаОтправления;
		МенеджерЗаписи.Тема						= Сообщение.Тема;
	КонецЕсли;	
	
	МенеджерЗаписи.РезультатВыполнения = РезультатВыполнения;
	МенеджерЗаписи.Описание = Описание;
	МенеджерЗаписи.Документ = Документ;
	
	МенеджерЗаписи.Записать();
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-11 (#4235)
	Если РезультатВыполнения <> Перечисления.ок_РезультатВыполненияЗадачиПоПочте.Выполнена
		И РезультатВыполнения <> Перечисления.ок_РезультатВыполненияЗадачиПоПочте.ВСообщенииНеУказанОбязательныйНомерЗаявки Тогда
		мТекстСообщения = "%1:
						|Отправитель – %2
						|Идентификатор сообщения - %3
						|Тема письма - %4
						|Комментарий - %5";
		мТекстСообщения = СтрШаблон(мТекстСообщения,
									РезультатВыполнения,
									Сообщение.Отправитель,
									Сообщение.ИдентификаторСообщения,
									Сообщение.Тема,
									Описание);

		ЗаписьЖурналаРегистрации("Обработка входящих писем", УровеньЖурналаРегистрации.Ошибка, Документ.Метаданные(), Документ, мТекстСообщения);
	КонецЕсли;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-11 (#4235)
КонецПроцедуры

// Удаляет устаревшие записи регистра
Процедура ОчиститьРегистрОтУстаревшихЗаписей() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// настройку по сроку хранения получим из настроек БК
	СрокХранения = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Согласование по почте", "Срок хранения протокола визирования по почте");	
	СрокХранения = ?(ЗначениеЗаполнено(СрокХранения), Число(СрокХранения), 0);
	
	Если СрокХранения <> 0 Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПротоколВыполненияЗадачПоПочте.Период,
			|	ПротоколВыполненияЗадачПоПочте.ИдентификаторСообщения,
			|	ПротоколВыполненияЗадачПоПочте.РезультатВыполнения
			|ИЗ
			|	РегистрСведений.ок_ПротоколВизированияПоПочте КАК ПротоколВыполненияЗадачПоПочте
			|ГДЕ
			|	ПротоколВыполненияЗадачПоПочте.Период < &Период";
			
		Период = ТекущаяДатаСеанса() - (86400 * СрокХранения);
		Запрос.УстановитьПараметр("Период", Период);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			МенеджерЗаписи = РегистрыСведений.ок_ПротоколВизированияПоПочте.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
			МенеджерЗаписи.Прочитать();
			МенеджерЗаписи.Удалить();
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция УдалитьСообщенияИнтернетПочта(
	УчетнаяЗапись,
	Идентификаторы) Экспорт
	
	// Установим соединение.
	СообщениеОбОшибке = "";
	Соединение = ИнтернетПочтаУстановитьСоединение(УчетнаяЗапись, СообщениеОбОшибке);
	Если Соединение = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Результат = УдалитьСообщенияВПочтовомЯщике(
		Соединение,
		Идентификаторы);
		
	Соединение.Отключиться();
	
	Возврат Истина;
	
КонецФункции

// Удаляет сообщения в почтовом ящике.
//
// Параметры:
// - Соединение (ИнтернетПочта)
// - Идентификаторы (Массив) массив идентификаторов удаляемых сообщений
// - СообщениеОбОшибке (Строка) - необязательный
//
Функция УдалитьСообщенияВПочтовомЯщике(
	Соединение,
	Идентификаторы,
	СообщениеОбОшибке = Неопределено) Экспорт
	
	СообщениеОбОшибке = "";
	
	Попытка
		
		Соединение.УдалитьСообщения(Идентификаторы);
		
	Исключение
		
		СообщениеОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

// Устанавливает соединение с почтовым сервером.
// Параметры:
// - УчетнаяЗапись (УчетныеЗаписиЭлектроннойПочты)
// - Пароль (Строка) - необязательный
//
Функция ИнтернетПочтаУстановитьСоединение(
	Знач УчетнаяЗапись,
	СообщениеОбОшибке = Неопределено,
	ИспользоватьДляПолучения = Истина) 
	
	СообщениеОбОшибке = "";
	ПараметрыУчетнойЗаписи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(УчетнаяЗапись, 
		"ИспользоватьДляОтправки, ИспользоватьДляПолучения, ПротоколВходящейПочты");
	
	Попытка
		
		Профиль = Неопределено;	
		
		Профиль = РаботаСПочтовымиСообщениямиСлужебный.ИнтернетПочтовыйПрофиль(
			УчетнаяЗапись, 
			ИспользоватьДляПолучения);
		
		ПротоколИнтернет = ПротоколИнтернетПочты.POP3;
		Если ПараметрыУчетнойЗаписи.ПротоколВходящейПочты = "IMAP" Тогда
			ПротоколИнтернет = ПротоколИнтернетПочты.IMAP;
		Иначе
			Если ИспользоватьДляПолучения Тогда
				ПротоколИнтернет = ПротоколИнтернетПочты.POP3;
			Иначе	
				ПротоколИнтернет = ПротоколИнтернетПочты.SMTP;
			КонецЕсли;		
		КонецЕсли;	
		
		Соединение = Новый ИнтернетПочта;
		Если ПротоколИнтернет = ПротоколИнтернетПочты.SMTP Тогда
			Соединение.Подключиться(Профиль);
		Иначе	
			Соединение.Подключиться(Профиль, ПротоколИнтернет);
		КонецЕсли;	
		
	Исключение
		
		СообщениеОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		
		Возврат Неопределено;
		
	КонецПопытки;
	
	Возврат Соединение;
	
КонецФункции