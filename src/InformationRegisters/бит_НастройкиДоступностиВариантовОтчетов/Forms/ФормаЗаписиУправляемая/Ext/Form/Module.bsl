
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.бит_НастройкиДоступностиВариантовОтчетов;
		
	бит_РаботаСДиалогамиСервер.ФормаЗаписиРегистраПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтотОбъект);

	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьКэшЗначений();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если Запись.ИспользоватьПриОткрытии Тогда
		бит_ОтчетыСервер.СброситьИспользоватьПриОткрытии(Запись.ВариантНастройка, Запись.Пользователь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантНастройкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	бит_РаботаСДиалогамиКлиент.НачалоВыбораСоставного(ЭтаФорма
	                                                   , Элемент
	                                                   , Запись
	                                                   , "ВариантНастройка"
													   , фКэшЗначений.СписокТиповВариантНастройка
													   , СтандартнаяОбработка);
													   
КонецПроцедуры // ВариантНастройкаНачалоВыбора()

&НаКлиенте
Процедура ВариантНастройкаОчистка(Элемент, СтандартнаяОбработка)
	
	Элемент.ВыбиратьТип = Истина;
	
КонецПроцедуры // ВариантНастройкаОчистка()

&НаКлиенте
Процедура ПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	бит_РаботаСДиалогамиКлиент.НачалоВыбораСоставного(ЭтаФорма
	                                                   , Элемент
	                                                   , Запись
	                                                   , "Пользователь"
													   , фКэшЗначений.СписокТиповПользователь
													   , СтандартнаяОбработка);
													   
КонецПроцедуры // ПользовательНачалоВыбора()

&НаКлиенте
Процедура ПользовательОчистка(Элемент, СтандартнаяОбработка)
	
	Элемент.ВыбиратьТип = Истина;
	
КонецПроцедуры // ПользовательОчистка()

&НаКлиенте
Процедура ПросмотрПриИзменении(Элемент)
	
	Если Не Запись.Просмотр Тогда	
		Запись.Изменение 			   = Ложь;	
	    Запись.ИспользоватьПриОткрытии = Ложь;
	КонецЕсли;
	
КонецПроцедуры // ПросмотрПриИзменении()

&НаКлиенте
Процедура ИзменениеПриИзменении(Элемент)
	
	Если Запись.Изменение Тогда	
		Запись.Просмотр = Истина;	
	КонецЕсли;
	
КонецПроцедуры // ИзменениеПриИзменении()

&НаКлиенте
Процедура ИспользоватьПриОткрытииПриИзменении(Элемент)
	
	Если Запись.ИспользоватьПриОткрытии Тогда
		Запись.Просмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры // ИспользоватьПриОткрытииПриИзменении()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура заполняет кэш значений доступный на сервере и клиенте.
// 
&НаСервере
Процедура ЗаполнитьКэшЗначений()

	// Заполним список типов для быстрого выбора составных типов.
	ИзмеренияРегистра = Метаданные.РегистрыСведений.бит_НастройкиДоступностиВариантовОтчетов.Измерения;
	МассивТипов  = ИзмеренияРегистра.Пользователь.Тип.Типы();
	СписокТиповПользователь 	= бит_ОбщегоНазначения.ПодготовитьСписокВыбораТипа(МассивТипов);
	МассивТипов  = ИзмеренияРегистра.ВариантНастройка.Тип.Типы();
	СписокТиповВариантНастройка = бит_ОбщегоНазначения.ПодготовитьСписокВыбораТипа(МассивТипов);
           	
	фКэшЗначений = Новый Структура;
	фКэшЗначений.Вставить("СписокТиповПользователь"     , СписокТиповПользователь);
	фКэшЗначений.Вставить("СписокТиповВариантНастройка" , СписокТиповВариантНастройка);
	      
КонецПроцедуры // ЗаполнитьКэшЗначений() 

#КонецОбласти  
