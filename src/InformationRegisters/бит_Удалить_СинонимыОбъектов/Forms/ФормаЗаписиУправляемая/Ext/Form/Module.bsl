
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	бит_РаботаСДиалогамиСервер.ФормаЗаписиРегистраПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтотОбъект);

	ЗаполнитьКэшЗначений(фКэшЗначений);
	
	ПолучитьСписокВидовФормДляОбъекта();
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбъектПриИзменении(Элемент)
	
    // Проверим правильность указания вида формы для объекта.
    ПроверитьПравильностьУказанияВидаФормыДляОбъекта();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьКэшЗначений(КэшированныеЗначения)
	
	КэшированныеЗначения = Новый Структура;
	
	// Заполним общий массив видов форм объектов.
	ОбщийМассивВидовФорм = Новый Массив;
	
	ОбщийМассивВидовФорм.Добавить(Перечисления.бит_ВидыФормОбъекта.Списка);
	ОбщийМассивВидовФорм.Добавить(Перечисления.бит_ВидыФормОбъекта.Выбора);
	
	КэшированныеЗначения.Вставить("ОбщийМассивВидовФорм", ОбщийМассивВидовФорм);
	
КонецПроцедуры

// Процедура проверяет правильность указания вида формы для объекта.
// 
&НаСервере
Процедура ПроверитьПравильностьУказанияВидаФормыДляОбъекта()
    
    // Получим список видов форм доступные для объекта.
    СписокВидовФорм = ПолучитьСписокВидовФормДляОбъекта();
    
    // Если такого вида формы нет для объекта, тогда очистим вид формы.
    Если СписокВидовФорм.НайтиПоЗначению(Запись.ВидФормы) = Неопределено Тогда
        
        Запись.ВидФормы = Перечисления.бит_ВидыФормОбъекта.ПустаяСсылка();
        
        // Если для текущего вида объекта только один вид формы, тогда
        // установим его.
        Если СписокВидовФорм.Количество() = 1 Тогда
            Запись.ВидФормы = СписокВидовФорм[0].Значение;
        КонецЕсли;
        
    КонецЕсли;
    
КонецПроцедуры // ПроверимПравильностьУказанияВидаФормыДляОбъекта()

// Функция получения списка видов форм для объекта.
// 
// Возвращаемое значение:
//  СписокВидовФорм - СписокЗначений.
// 
&НаСервере
Функция ПолучитьСписокВидовФормДляОбъекта()
    
    СписокВидовФорм = Новый СписокЗначений;
    
    Если НЕ ЗначениеЗаполнено(Запись.Объект) Тогда
        Возврат СписокВидовФорм;
    КонецЕсли;
    
    ВидОбъекта           = Запись.Объект.ВидОбъекта;
    ПеречислениеМенеджер = Перечисления.бит_ВидыОбъектовСистемы;
    
    Если НЕ (ВидОбъекта = ПеречислениеМенеджер.Отчет
        ИЛИ ВидОбъекта = ПеречислениеМенеджер.Обработка) Тогда
        // Загрузим общий массив видов форм.
        СписокВидовФорм.ЗагрузитьЗначения(фКэшЗначений.ОбщийМассивВидовФорм);
    КонецЕсли;
    
    // Получим массив дополнительных видов форм.
    ДополнительныеВидыФорм = Новый Массив;
    
    Если ВидОбъекта = ПеречислениеМенеджер.Документ Тогда
        
        ДополнительныеВидыФорм.Добавить(Перечисления.бит_ВидыФормОбъекта.Документа);
        
    ИначеЕсли Не (ВидОбъекта = ПеречислениеМенеджер.РегистрНакопления
        Или ВидОбъекта = ПеречислениеМенеджер.РегистрБухгалтерии) Тогда
        
        ДополнительныеВидыФорм.Добавить(Перечисления.бит_ВидыФормОбъекта.Элемента);
        
    КонецЕсли;
    
    // Получим массив исключаемых видов форм.
    ИсключаемыеВидыФорм = Новый Массив;
    
    Если ВидОбъекта = ПеречислениеМенеджер.РегистрСведений
        Или ВидОбъекта = ПеречислениеМенеджер.РегистрНакопления
        Или ВидОбъекта = ПеречислениеМенеджер.РегистрБухгалтерии Тогда
        
        ИсключаемыеВидыФорм.Добавить(Перечисления.бит_ВидыФормОбъекта.Выбора);
        
    КонецЕсли;
    
    Для Каждого ТекЭлемент Из ДополнительныеВидыФорм Цикл
        СписокВидовФорм.Добавить(ТекЭлемент);
    КонецЦикла;
    
    Для Каждого ТекЭлемент Из ИсключаемыеВидыФорм Цикл
        
        НайденныйЭлемент = СписокВидовФорм.НайтиПоЗначению(ТекЭлемент);
        СписокВидовФорм.Удалить(НайденныйЭлемент);
        
    КонецЦикла;
    
    // Заполним картинку для элементов списка значений.
    Для Каждого ТекЭлемент Из СписокВидовФорм Цикл
        ТекЭлемент.Картинка = БиблиотекаКартинок.бит_Реквизит;
    КонецЦикла;
    
    СписокВидовФорм.СортироватьПоЗначению();
	
	Элементы.ВидФормы.СписокВыбора.Очистить();
	Элементы.ВидФормы.СписокВыбора.ЗагрузитьЗначения(СписокВидовФорм.ВыгрузитьЗначения());
	
    Возврат СписокВидовФорм;
    
КонецФункции // ПолучитьСписокВидовФормДляОбъекта()

#КонецОбласти
