
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЕстьКорректировки = ЕстьКорректировки(Запись.ОбъектСистемы, Запись.Организация, 
							Дата('00010101'), Запись.ДатаОткрытогоПериода);

	Элементы.Организация.ТолькоПросмотр   = ЕстьКорректировки;
	Элементы.ОбъектСистемы.ТолькоПросмотр = ЕстьКорректировки;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	бит_РаботаСДиалогамиСервер.ФормаЗаписиРегистраПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтотОбъект);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустой() И Параметры.ЗначениеКопирования.Пустой() Тогда
		Если Параметры.ЗначенияЗаполнения.Свойство("ОбъектСистемы") Тогда
			Элементы.ОбъектСистемы.ТолькоПросмотр = ЗначениеЗаполнено(Параметры.ЗначенияЗаполнения.ОбъектСистемы);
		КонецЕсли; 
	КонецЕсли;
	
	ПодготовитьФормуНаСервере();
	УправлениеФормой();
	
	мТекущаяДатаОткрытогоПериода = Запись.ДатаОткрытогоПериода;
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаОткрытогоПериодаПриИзменении(Элемент)
	
	Отказ = Ложь;
	
	// Проверка возможности сдвига даты открытого периода назад.
	Если Запись.ДатаОткрытогоПериода < мТекущаяДатаОткрытогоПериода 
	 ИЛИ НЕ ЗначениеЗаполнено(мТекущаяДатаОткрытогоПериода) Тогда
		
		ДатаНачала    	  = Запись.ДатаОткрытогоПериода;
		ДатаОкончания 	  = мТекущаяДатаОткрытогоПериода;
		ЕстьКорректировки = ЕстьКорректировки(Запись.ОбъектСистемы, Запись.Организация, ДатаНачала, ДатаОкончания);
		
		Если ЕстьКорректировки Тогда
			
			Уточнение = Нстр("ru = 'В периоде %1 есть корректировочные записи.'"); 
			Уточнение = СтрШаблон(Уточнение, ПредставлениеПериода(ДатаНачала, ?(ЗначениеЗаполнено(ДатаОкончания), КонецДня(ДатаОкончания),ДатаОкончания)));
			
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("ПОЛЕ", "Корректность",
								Нстр("ru = 'Дата открытого периода'"),,,Уточнение);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ДатаОткрытогоПериода", "Запись", Отказ);
		КонецЕсли;
	КонецЕсли; 
	
	Если Отказ Тогда
		Запись.ДатаОткрытогоПериода = мТекущаяДатаОткрытогоПериода;
		Возврат;
	КонецЕсли; 
	
	// Предупреждение при сдвиге даты открытого периода далее текущей даты.
	Если НачалоДня(Запись.ДатаОткрытогоПериода) > НачалоДня(ТекущаяДата()) 
	   И Запись.ДатаОткрытогоПериода > мТекущаяДатаОткрытогоПериода Тогда
		
		ТекстСообщения = "Дата открытого периода %1 больше текущей даты %2. Продолжить?";
		ТекстСообщения = СтрШаблон(ТекстСообщения,  Формат(Запись.ДатаОткрытогоПериода,"ДФ=dd.MM.yyyy"), Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy"));
		Оповещение 	   = Новый ОписаниеОповещения("ДатаОткрытогоПериодаПриИзмененииЗавешение", ЭтотОбъект); 				 
		ПоказатьВопрос(Оповещение, ТекстСообщения, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет, Нстр("ru = 'Начало открытого периода'")); 
	КонецЕсли;
	 
КонецПроцедуры

// Процедура - обработчик оповещения "ВопросОПродолженииПриСдвигеДатыОткрытогоПериодаДальшеТекущейДатыЗавершение".
// 
&НаКлиенте
Процедура ДатаОткрытогоПериодаПриИзмененииЗавешение(Ответ, ДополнительныеДанные) Экспорт
	
	Если НЕ Ответ = КодВозвратаДиалога.Да Тогда
		Запись.ДатаОткрытогоПериода = мТекущаяДатаОткрытогоПериода;
	КонецЕсли;
	
КонецПроцедуры // ВопросОПродолженииПриСдвигеДатыОткрытогоПериодаДальшеТекущейДатыЗавершение()

&НаКлиенте
Процедура ОбъектСистемыПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЕстьКорректировки(ОбъектСистемы, Организация, ДатаНачала, ДатаОкончания)
	
	ЕстьКорректировки = бит_КонтрольЗакрытогоПериода.ЕстьКорректировки(ОбъектСистемы, 
								Организация, ДатаНачала, ДатаОкончания);
	Возврат ЕстьКорректировки;
	
КонецФункции
 
&НаСервере
Процедура ПодготовитьФормуНаСервере()

	МетаРегистрыБухгалтерии = Метаданные.РегистрыБухгалтерии;
	
	Для Каждого ТекущийМетаРегистр Из МетаРегистрыБухгалтерии Цикл
		
		Если бит_РаботаСМетаданными.ЕстьРеквизит("ВидПроводки", ТекущийМетаРегистр)
		 ИЛИ бит_РаботаСМетаданными.ЕстьРеквизит("ДатаФормирования", ТекущийМетаРегистр) Тогда
			
			ОбъектСистемы = бит_ПраваДоступа.ПолучитьОбъектДоступаПоМетаданным(ТекущийМетаРегистр);
			
			Если ЗначениеЗаполнено(ОбъектСистемы) Тогда
				Элементы.ОбъектСистемы.СписокВыбора.Добавить(ОбъектСистемы);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере 
Процедура УправлениеФормой()

	Элементы.ДатаОткрытогоПериода.Доступность = ЗначениеЗаполнено(Запись.ОбъектСистемы);

КонецПроцедуры

#КонецОбласти

//БИТ Тртилек 29.08.2012 проверка монопольного режима
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ПроверкаМонопольногоРежима() Тогда
		Предупреждение("Установка даты открытого периода должна выполняться в монопольном режиме.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры
///БИТ Тртилек

//1С-ИжТиСи, Кондратьев, 03.2020, обновление, некомментированный исправленный код (
&НаСервере
Функция ПроверкаМонопольногоРежима()
	//++ СВВ {[+](фрагмент добавлен), Сапожников Вадим 20.07.2015 17:43:42
	Попытка
		УстановитьМонопольныйРежим(Истина);
		Возврат Истина;
	Исключение
		УстановитьМонопольныйРежим(Ложь);
		Возврат Ложь;
	КонецПопытки;
	//-- СВВ}Сапожников Вадим 20.07.2015 17:43:42
КонецФункции
//1С-ИжТиСи, Кондратьев, 03.2020, обновление, некомментированный исправленный код )