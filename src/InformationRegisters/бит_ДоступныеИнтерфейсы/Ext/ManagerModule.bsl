#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Процедура проверяет правильность настроек доступности интерфеса в регистре бит_ДоступныеИнтерфейсы 
// и устанавливает новые настройки, согласно настройкам пользователя. 
// 
// Параметры:
//  ТекПользователь - СправочникСсылка.Пользователи.
// 
Процедура ПроверитьУстановитьДоступностьРусскогоИнтерфейса(ТекПользователь) Экспорт

  Если НЕ ЗначениеЗаполнено(ТекПользователь) Тогда
  
  	Возврат;
  
  КонецЕсли; 	
  
  УстановитьПривилегированныйРежим(Истина);
  
  флДоступенРусский = ОпределитьДоступностьРусскогоИнтерфейса(ТекПользователь);
  
  Запрос = Новый Запрос;
  Запрос.УстановитьПараметр("Пользователь", ТекПользователь);
  Запрос.Текст = "ВЫБРАТЬ
                 |	бит_ДоступныеИнтерфейсы.ДоступенРусский
                 |ИЗ
                 |	РегистрСведений.бит_ДоступныеИнтерфейсы КАК бит_ДоступныеИнтерфейсы
                 |ГДЕ
                 |	бит_ДоступныеИнтерфейсы.Пользователь = &Пользователь";
				 
  Результат = Запрос.Выполнить();
  
  флУстановить = Истина;
  
  Выборка = Результат.Выбрать();
  
  Если Выборка.Следующий() Тогда
  
  	 флУстановить = ?(Выборка.ДоступенРусский <> флДоступенРусский, Истина, Ложь);
  
  КонецЕсли; 
  
  Если флУстановить Тогда
	  
	 УстановитьДоступностьИнтерфейса(ТекПользователь, флДоступенРусский);
	 
  КонецЕсли; 
  
  УстановитьПривилегированныйРежим(Ложь);
  
КонецПроцедуры // ПроверитьУстановитьДоступностьИнтерфейса()

// Процедура устанавливает доступность интерфейса.
// 
// Параметры:
//  ТекПользователь - СправочникСсылка.Пользователи
//  ДоступенРусский - Булево.
// 
Процедура УстановитьДоступностьИнтерфейса(ТекПользователь, ДоступенРусский) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.бит_ДоступныеИнтерфейсы.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Пользователь = ТекПользователь;
	МенеджерЗаписи.ДоступенРусский = ДоступенРусский;
	
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		ТекстСообщения =  НСтр("ru = 'Не удалось установить доступность интерфейса пользователю ""%1%""! Описание ошибки : ""%2%"".'");
		ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, ТекПользователь, ОписаниеОшибки());
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
	КонецПопытки;
	
КонецПроцедуры // УстановитьДоступностьИнтерфейса()

// Функция определяет доступность русского интерфейса пользователю.
// 
// Параметры:
//  ТекПользователь - СправочникСсылка.Пользователи.
// 
// Возвращаемое значение:
//  флДоступенРусский - Булево.
// 
Функция ОпределитьДоступностьРусскогоИнтерфейса(ТекПользователь = Неопределено) Экспорт
	
	флДоступенРусский = Истина;
	
	Если бит_ОбщегоНазначения.ЭтоИнтернационаяПоставка() Тогда
		
		Если ЗначениеЗаполнено(ТекПользователь) Тогда
			
			ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ТекПользователь.ИдентификаторПользователяИБ);
			
		Иначе
			
			ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
			
		КонецЕсли; 
		
		
		Если НЕ ПользовательИБ = Неопределено Тогда
			
			Если ПользовательИБ.Язык <> Неопределено И ПользовательИБ.Язык <> Метаданные.Языки.Русский Тогда
				
				флДоступенРусский = Ложь;
				
			Иначе	
				
				флДоступенРусский = Истина;
				
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЕсли; 
	
	Возврат флДоступенРусский;
	
КонецФункции // ОпределитьДоступностьРусскогоИнтерфейса()

// Процедура заполняет регистр, определяющий доступ к русскому интерфейсу.
// 
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию() Экспорт

	Если НЕ бит_ОбщегоНазначения.ЭтоИнтернационаяПоставка() Тогда
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Пользователь
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ДоступныеИнтерфейсы КАК бит_ДоступныеИнтерфейсы
	|		ПО Пользователи.Ссылка = бит_ДоступныеИнтерфейсы.Пользователь
	|ГДЕ
	|	бит_ДоступныеИнтерфейсы.Пользователь ЕСТЬ NULL ";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		флДоступенРусский = ОпределитьДоступностьРусскогоИнтерфейса(Выборка.Пользователь);
		УстановитьДоступностьИнтерфейса(Выборка.Пользователь, флДоступенРусский);
	КонецЦикла; 
	
КонецПроцедуры // ОбработатьДанныеДляПереходаНаНовуюВерсию()

#КонецОбласти 

#КонецЕсли
