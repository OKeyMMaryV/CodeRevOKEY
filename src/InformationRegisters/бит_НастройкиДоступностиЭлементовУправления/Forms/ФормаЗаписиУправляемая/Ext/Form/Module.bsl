
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.бит_НастройкиДоступностиЭлементовУправления;
	
	бит_РаботаСДиалогамиСервер.ФормаЗаписиРегистраПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтотОбъект);

	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Связи параметров выбора.
	НовыйМассив = Новый Массив;
	
	РежимОчищать = РежимИзмененияСвязанногоЗначения.Очищать;
	Связь_ОбъектСитемы = Новый СвязьПараметраВыбора("Отбор.ОбъектСистемы", "Запись.ОбъектСистемы", РежимОчищать);
	Связь_ТипФормы     = Новый СвязьПараметраВыбора("Отбор.ТипФормы", "Запись.ТипФормы", РежимОчищать);
	
	НовыйМассив.Добавить(Связь_ОбъектСитемы);
	МассивСвязей_ТипФормы = Новый ФиксированныйМассив(НовыйМассив); 
	Элементы.ТипФормы.СвязиПараметровВыбора = МассивСвязей_ТипФормы;

	НовыйМассив.Добавить(Связь_ТипФормы);
	МассивСвязей_ИмяЭлемента = Новый ФиксированныйМассив(НовыйМассив);
	Элементы.ИмяЭлементаУправления.СвязиПараметровВыбора = МассивСвязей_ИмяЭлемента;
	  	
	ЗаполнитьКэшЗначений();
	
	Если Запись.ТипФормы = "Управляемая" Тогда
		Элементы.Видимость.Доступность    = Истина;
		Элементы.Обязательное.Доступность = Истина;
	КонецЕсли;
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-05-18 (#МДМ)
	Элементы.ИмяЭлементаУправления.РедактированиеТекста = Истина;
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-05-18 (#МДМ)
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-07-12 (#4242)
	ДобавитьЭлементыНаФорму();
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-07-12 (#4242)
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбъектСистемыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	СписокВидовОбъектов = Новый СписокЗначений;
	СписокВидовОбъектов.Добавить(фКэшЗначений.ВидОбъектаДокумент);
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-12 (#МДМ)
	СписокВидовОбъектов.Добавить(ПредопределенноеЗначение("Перечисление.бит_ВидыОбъектовСистемы.Справочник"));
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-12 (#МДМ)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВидыОбъектов"           , СписокВидовОбъектов);
	ПараметрыФормы.Вставить("ТекущийОбъектСистемы"   , Запись.ОбъектСистемы);
	ПараметрыФормы.Вставить("ДоступныеОбъектыСистемы", фКэшЗначений.ДоступныеОбъектыСистемы);
	ОткрытьФорму("ОбщаяФорма.бит_ФормаВыбораОбъектовСистемыУправляемая", ПараметрыФормы,Элемент);
	
КонецПроцедуры // ОбъектСистемыНачалоВыбора()

&НаКлиенте
Процедура ТипФормыПриИзменении(Элемент)
	
	Если Запись.ТипФормы = "Управляемая" Тогда
		Элементы.Видимость.Доступность = Истина;
		Элементы.Обязательное.Доступность = Истина;
	Иначе 	
	    Запись.Видимость = Истина;
		Элементы.Видимость.Доступность = Ложь;
		Элементы.Обязательное.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры // ТипФормыПриИзменении()

&НаКлиенте
Процедура ИмяЭлементаУправленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	фТекущееИмяЭлементаУправления = Запись.ИмяЭлементаУправления;
	                             
	// Откроем форму выбора элемента управления
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОбъектСистемы", Запись.ОбъектСистемы);
	ПараметрыФормы.Вставить("ТекущееИмя"   , Запись.ИмяЭлементаУправления);
	ПараметрыФормы.Вставить("ТипФормы"     , Запись.ТипФормы);
	
	Оповещение = Новый ОписаниеОповещения("ИмяЭлементаУправленияНачалоВыбораОкончание", ЭтотОбъект); 
	ОткрытьФорму("ОбщаяФорма.бит_ФормаВыбораИмениЭлементаУправляемая",ПараметрыФормы,ЭтаФорма,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры // ИмяЭлементаУправленияНачалоВыбора()

&НаКлиенте
Процедура СтатусНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ПолучитьСпиокВыбораСтатусов(Запись.ОбъектСистемы);
		
КонецПроцедуры // СтатусНачалоВыбора()

&НаКлиенте
Процедура ДоступностьПриИзменении(Элемент)
	
	Если Запись.ТипФормы = "Управляемая" 
		И Запись.Доступность Тогда
	
		Запись.Видимость = Истина;	
	
	КонецЕсли;
	
	Если НЕ Запись.Доступность Тогда
	
		Запись.Обязательное = Ложь;
	
	КонецЕсли;
	
КонецПроцедуры // ДоступностьПриИзменении()

&НаКлиенте
Процедура ВидимостьПриИзменении(Элемент)
	
	Если Запись.ТипФормы = "Управляемая" 
		И Не Запись.Видимость Тогда
	
		Запись.Доступность  = Ложь;	
		Запись.Обязательное = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры // ВидимостьПриИзменении()

&НаКлиенте
Процедура ОбязательноеПриИзменении(Элемент)
	
	Если Запись.Обязательное Тогда
	
		Запись.Доступность = Истина;
		Запись.Видимость   = Истина;
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура окончание процедуры "ИмяЭлементаУправленияНачалоВыбора".
// 
&НаКлиенте 
Процедура ИмяЭлементаУправленияНачалоВыбораОкончание(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
	
		// Сохраним результат выбора
		Запись.ИмяЭлементаУправления = ?(ЗначениеЗаполнено(РезультатВыбора), РезультатВыбора, фТекущееИмяЭлементаУправления);
		фТекущееИмяЭлементаУправления = Запись.ИмяЭлементаУправления;
	
	КонецЕсли; 
	
КонецПроцедуры // ИмяЭлементаУправленияНачалоВыбораОкончание()

// Процедура заполняет кэш значений.
//
&НаСервере
Процедура ЗаполнитьКэшЗначений()
     	
	// Кеш значений
	фКэшЗначений = Новый Структура;
	
	ВидыОбъектов.Добавить(Перечисления.бит_ВидыОбъектовСистемы.Документ);
	фКэшЗначений.Вставить("ВидОбъектаДокумент" ,Перечисления.бит_ВидыОбъектовСистемы.Документ);
	
	// Доступные объекты
	ДоступныеОбъектыСистемы = бит_Визирование.ВизируемыеОбъектыСистемы();
	ДобавитьОбъектВСписок(ДоступныеОбъектыСистемы, "бит_вго_ПодтверждениеСверкиВГО");
	ДобавитьОбъектВСписок(ДоступныеОбъектыСистемы, "бит_кзн_ПлатежнаяПозиция");
	ДобавитьОбъектВСписок(ДоступныеОбъектыСистемы, "бит_кзн_ПозицияПоступления");
	УдалитьОбъектИзСписка(ДоступныеОбъектыСистемы, "бит_ВерсияОтчета"); 
	УдалитьОбъектИзСписка(ДоступныеОбъектыСистемы, "бит_удалить_ВалютныйСвоп"); 
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-12 (#МДМ)
	ДобавитьОбъектВСписок_Справочник(ДоступныеОбъектыСистемы, "Контрагенты");
	ДобавитьОбъектВСписок_Справочник(ДоступныеОбъектыСистемы, "ДоговорыКонтрагентов");
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-12 (#МДМ)
	фКэшЗначений.Вставить("ДоступныеОбъектыСистемы", ДоступныеОбъектыСистемы);

КонецПроцедуры // ЗаполнитьКэшЗначений()

// Процедура добавляет объект в список.
//
// Параметры:
//  ДоступныеОбъектыСистемы - СписокЗначений.
//  ИмяДокумента  			- Строка.
//
&НаСервереБезКонтекста
Процедура ДобавитьОбъектВСписок(ДоступныеОбъектыСистемы, ИмяДокумента)

	ОбъектМета = Метаданные.Документы.Найти(ИмяДокумента);
	Если ОбъектМета <> Неопределено Тогда
		ОбъектСистемы = бит_ПраваДоступа.ПолучитьОбъектДоступаПоМетаданным(ОбъектМета);
		ДоступныеОбъектыСистемы.Добавить(ОбъектСистемы);
	КонецЕсли;

КонецПроцедуры // ДобавитьОбъектВСписок()

// Процедура удаляет объект из списка.
//
// Параметры:
//  ДоступныеОбъектыСистемы - СписокЗначений.
//  ИмяДокумента  			- Строка.
//
&НаСервереБезКонтекста
Процедура УдалитьОбъектИзСписка(ДоступныеОбъектыСистемы, ИмяДокумента)

	ОбъектМета = Метаданные.Документы.Найти(ИмяДокумента);
	Если ОбъектМета <> Неопределено Тогда
		ОбъектСистемы = бит_ПраваДоступа.ПолучитьОбъектДоступаПоМетаданным(ОбъектМета);
		ЭлементУдаляемый = ДоступныеОбъектыСистемы.НайтиПоЗначению(ОбъектСистемы);
		Если ЭлементУдаляемый <> Неопределено Тогда
			ДоступныеОбъектыСистемы.Удалить(ЭлементУдаляемый);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // УдалитьОбъектИзСписка()

// Функция получает список выбора статусов по объекту системы.
//
// Параметры:
//  ОбъектСистемы - СправочникСсылка.бит_ОбъектыСистемы.
//  
// Возвращаемое значение:
//   Список значений.
//
&НаСервереБезКонтекста
Функция ПолучитьСпиокВыбораСтатусов(ОбъектСистемы)

	ДанныеВыбора = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОбъектСистемы", ОбъектСистемы);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	бит_СтатусыОбъектов.Ссылка
	|ИЗ
	|	Справочник.бит_СтатусыОбъектов КАК бит_СтатусыОбъектов
	|ГДЕ
	|	бит_СтатусыОбъектов.Объект = &ОбъектСистемы
	|	
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-08-11 (#4227)
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ок_СтатусыВходящегоЭлектронногоДокументооборота.Ссылка
	|ИЗ
	|	Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота КАК ок_СтатусыВходящегоЭлектронногоДокументооборота
	|ГДЕ
	|	&ТипЗначенияОбъекта = ТИП(Документ.ЭлектронныйДокументВходящий)
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-08-11 (#4227)
	|";
	
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-08-11 (#4227)
	ТипЗначенияОбъекта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектСистемы, "ТипЗначенияОбъекта").Получить();
	Запрос.УстановитьПараметр("ТипЗначенияОбъекта", ТипЗначенияОбъекта);
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-08-11 (#4227)
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка);	
	КонецЦикла;                               		

	Возврат ДанныеВыбора;
	
КонецФункции // ПолучитьСпиокВыбораСтатусов()

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-12 (#МДМ)
// Процедура добавляет объект в список (Справочник).
//
// Параметры:
//  ДоступныеОбъектыСистемы - СписокЗначений.
//  ИмяДокумента  			- Строка.
//
&НаСервереБезКонтекста
Процедура ДобавитьОбъектВСписок_Справочник(ДоступныеОбъектыСистемы, ИмяДокумента)

	ОбъектМета = Метаданные.Справочники.Найти(ИмяДокумента);
	Если ОбъектМета <> Неопределено Тогда
		ОбъектСистемы = бит_ПраваДоступа.ПолучитьОбъектДоступаПоМетаданным(ОбъектМета);
		ДоступныеОбъектыСистемы.Добавить(ОбъектСистемы);
	КонецЕсли;

КонецПроцедуры // ДобавитьОбъектВСписок()

// Процедура удаляет объект из списка (Справочник).
//
// Параметры:
//  ДоступныеОбъектыСистемы - СписокЗначений.
//  ИмяДокумента  			- Строка.
//
&НаСервереБезКонтекста
Процедура УдалитьОбъектИзСписка_Справочник(ДоступныеОбъектыСистемы, ИмяДокумента)

	ОбъектМета = Метаданные.Справочники.Найти(ИмяДокумента);
	Если ОбъектМета <> Неопределено Тогда
		ОбъектСистемы = бит_ПраваДоступа.ПолучитьОбъектДоступаПоМетаданным(ОбъектМета);
		ЭлементУдаляемый = ДоступныеОбъектыСистемы.НайтиПоЗначению(ОбъектСистемы);
		Если ЭлементУдаляемый <> Неопределено Тогда
			ДоступныеОбъектыСистемы.Удалить(ЭлементУдаляемый);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // УдалитьОбъектИзСписка()
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-12 (#МДМ)

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-07-12 (#4242)
// Общая процедура для всех новых не типовых элементов на форме
//
//
&НаСервере
Процедура ДобавитьЭлементыНаФорму()

	ГруппаДополнительныеЭлементы = Элементы.Вставить("ГруппаДополнительныеЭлементы", Тип("ГруппаФормы"));
	ГруппаДополнительныеЭлементы.Вид 					= ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаДополнительныеЭлементы.Группировка 			= ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаДополнительныеЭлементы.ОтображатьЗаголовок 	= Ложь;
	ГруппаДополнительныеЭлементы.Отображение 			= ОтображениеОбычнойГруппы.Нет;
	
	// ок_ПрименятьНастройкиКРодительскимЭлементам
	СтруктураПараметровЭлементаФормы = Новый Структура();		
	СтруктураПараметровЭлементаФормы.Вставить("Вид",			ВидПоляФормы.ПолеФлажка);
	СтруктураПараметровЭлементаФормы.Вставить("Имя", 			"ок_ПрименятьНастройкиКРодительскимЭлементам");
	СтруктураПараметровЭлементаФормы.Вставить("Заголовок", 		НСтр("ru = 'Применять настройки к родительским элементам'"));
	СтруктураПараметровЭлементаФормы.Вставить("ПутьКДанным", 	"Запись.ок_ПрименятьНастройкиКРодительскимЭлементам");
	СтруктураПараметровЭлементаФормы.Вставить("Родитель", 		"ГруппаДополнительныеЭлементы");
	СтруктураПараметровЭлементаФормы.Вставить("Видимость", 		Истина);
	СтруктураПараметровЭлементаФормы.Вставить("Доступность", 	Истина);
	СтруктураПараметровЭлементаФормы.Вставить("ТолькоПросмотр", Ложь);
	
	ок_УправлениеФормами.ДобавитьЭлементНаФорму(ЭтаФорма, СтруктураПараметровЭлементаФормы);

	// ок_ДополнительныйПриоритет
	СтруктураПараметровЭлементаФормы = Новый Структура();		
	СтруктураПараметровЭлементаФормы.Вставить("Вид",					ВидПоляФормы.ПолеВвода);
	СтруктураПараметровЭлементаФормы.Вставить("Имя", 					"ок_ДополнительныйПриоритет");
	СтруктураПараметровЭлементаФормы.Вставить("Заголовок", 				НСтр("ru = 'Дополнительный приоритет'"));
	СтруктураПараметровЭлементаФормы.Вставить("ПутьКДанным", 			"Запись.ок_ДополнительныйПриоритет");
	СтруктураПараметровЭлементаФормы.Вставить("Родитель", 				"ГруппаДополнительныеЭлементы");
	СтруктураПараметровЭлементаФормы.Вставить("ОтображениеПодсказки", 	ОтображениеПодсказки.Кнопка);
	СтруктураПараметровЭлементаФормы.Вставить("Видимость", 				Истина);
	СтруктураПараметровЭлементаФормы.Вставить("Доступность", 			Истина);
	СтруктураПараметровЭлементаФормы.Вставить("ТолькоПросмотр", 		Ложь);
	
	ок_УправлениеФормами.ДобавитьЭлементНаФорму(ЭтаФорма, СтруктураПараметровЭлементаФормы);
	
	// ок_Комментарий
	СтруктураПараметровЭлементаФормы = Новый Структура();		
	СтруктураПараметровЭлементаФормы.Вставить("Вид",					ВидПоляФормы.ПолеВвода);
	СтруктураПараметровЭлементаФормы.Вставить("Имя", 					"ок_Комментарий");
	СтруктураПараметровЭлементаФормы.Вставить("Заголовок", 				НСтр("ru = 'Комментарий'"));
	СтруктураПараметровЭлементаФормы.Вставить("ПутьКДанным", 			"Запись.ок_Комментарий");
	СтруктураПараметровЭлементаФормы.Вставить("Родитель", 				"ГруппаДополнительныеЭлементы");
	СтруктураПараметровЭлементаФормы.Вставить("МногострочныйРежим",		Истина);
	СтруктураПараметровЭлементаФормы.Вставить("Высота",					3);
	СтруктураПараметровЭлементаФормы.Вставить("РастягиватьПоВертикали",	Ложь);
	СтруктураПараметровЭлементаФормы.Вставить("Видимость", 				Истина);
	СтруктураПараметровЭлементаФормы.Вставить("Доступность", 			Истина);
	СтруктураПараметровЭлементаФормы.Вставить("ТолькоПросмотр", 		Ложь);
	
	ок_УправлениеФормами.ДобавитьЭлементНаФорму(ЭтаФорма, СтруктураПараметровЭлементаФормы);
	
КонецПроцедуры // ДобавитьЭлементыНаФорму()
 
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-07-12 (#4242)

#КонецОбласти  
