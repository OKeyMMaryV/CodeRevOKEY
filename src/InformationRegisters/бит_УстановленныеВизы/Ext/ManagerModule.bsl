#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция НуженКомментарий(ПараметрыПроверки) Экспорт
	
	Результат = Ложь;
	
	МетаданныеОбъекта = ПараметрыПроверки.Объект.Метаданные();
	ОбъектСистемы = бит_ПраваДоступа.ПолучитьОбъектДоступаПоМетаданным(МетаданныеОбъекта);
					
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОбъектСистемы", ОбъектСистемы);
	Запрос.УстановитьПараметр("ВидРешения",    ПараметрыПроверки.РешениеКонечное);
	  
	Запрос.Текст =  "ВЫБРАТЬ ПЕРВЫЕ 1
	                |	НазначениеРешенийСогласования.НеобходимКомментарийЗадача КАК НеобходимКомментарийЗадача
	                |ИЗ
	                |	РегистрСведений.бит_НазначениеВидовРешенийСогласования КАК НазначениеРешенийСогласования
	                |ГДЕ
	                |	(НазначениеРешенийСогласования.ОбъектСистемы = ЗНАЧЕНИЕ(Справочник.бит_ОбъектыСистемы.ПустаяСсылка)
	                |			ИЛИ НазначениеРешенийСогласования.ОбъектСистемы = &ОбъектСистемы)
	                |	И НазначениеРешенийСогласования.ВидРешения = &ВидРешения
	                |	И НазначениеРешенийСогласования.НеобходимКомментарийЗадача = ИСТИНА
					|   И &УсловиеОрганизация";
	
	Если бит_РаботаСМетаданными.ЕстьРеквизит("Организация",МетаданныеОбъекта) Тогда		
		СтрокаЗамены = "(НазначениеРешенийСогласования.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	                    |			ИЛИ НазначениеРешенийСогласования.Организация = &Организация)";
	                   
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОрганизация", СтрокаЗамены);
		
		Организация   = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыПроверки.Объект, "Организация");
		Запрос.УстановитьПараметр("Организация", Организация);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &УсловиеОрганизация", "");
	КонецЕсли; 
	
	РезультатЗапроса = Запрос.Выполнить();

	Если Не РезультатЗапроса.Пустой() Тогда	
		Запрос2 = Новый Запрос;
		Запрос2.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Задачи.Ссылка
			|ИЗ
			|	Задача.бит_уп_Задача КАК Задачи
			|ГДЕ
			|	Задачи.Виза = &Виза
			|	И Задачи.Предмет = &Объект";
		
		Запрос2.УстановитьПараметр("Виза", ПараметрыПроверки.Виза);
		Запрос2.УстановитьПараметр("Объект", ПараметрыПроверки.Объект);
		
		Результат = Запрос2.Выполнить().Пустой() И Не ЗначениеЗаполнено(ПараметрыПроверки.Комментарий);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция НовыеПараметрыНуженКомментарий() Экспорт

	ПараметрыПроверки = Новый Структура;
	ПараметрыПроверки.Вставить("Объект");
	ПараметрыПроверки.Вставить("РешениеКонечное");
	ПараметрыПроверки.Вставить("Комментарий");
	ПараметрыПроверки.Вставить("Виза");

	Возврат ПараметрыПроверки;

КонецФункции
 
#КонецОбласти

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-01-25 (#3997)
Функция ПолучитьТекстЗапросаПереписки()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_УстановленныеВизы.Объект КАК Объект,
	|	бит_УстановленныеВизы.Виза КАК Виза,
	|	бит_УстановленныеВизы.Пользователь КАК Пользователь,
	|	бит_УстановленныеВизы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	бит_УстановленныеВизы.ДатаУстановки КАК ДатаУстановки,
	|	бит_УстановленныеВизы.Комментарий КАК Комментарий,
	|	бит_УстановленныеВизы.Решение КАК Решение
	|ИЗ
	|	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы
	|ГДЕ
	|	бит_УстановленныеВизы.Объект = &Объект"
	;
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ПодготовитьТекстПерепискиДокумента(Документ, СтруктураСообщения) Экспорт
	
	ТекстДляПисьма = "";
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат ТекстДляПисьма;
	КонецЕсли;	
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	
	Запрос.Текст = ПолучитьТекстЗапросаПереписки();
	
	Запрос.УстановитьПараметр("Объект", Документ);

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ТекстДляПисьма;
	КонецЕсли;	
	
	СтруктураПолей = Новый Структура("Виза, ФизическоеЛицо, Пользователь, Решение, ДатаУстановки, Комментарий", "Виза", "Роль", "ФИО", "Решение", "Срок принятия решения", "Комментарий");
	
	ЭтоHTML = СтруктураСообщения.Свойство("ТипТекстаСообщения") И СтруктураСообщения.ТипТекстаСообщения = Строка(ТипТекстаПочтовогоСообщения.HTML);
	Если ЭтоHTML Тогда
		ТекстДляПисьма = ТекстДляПисьма + "<TABLE style=""font-size: 80%"" cellspacing=""0"" border=""1"" cellpadding=""0"" width = 1200px>";
		// вывод колонок таблицы
		ТекстДляПисьма = ТекстДляПисьма + "<TR>";
		// заполним строку
		Для Каждого Поле Из СтруктураПолей Цикл
			ТекстДляПисьма = ТекстДляПисьма + "<TD style = ""padding-right:10px;width:310px;"">";
			ТекстДляПисьма = ТекстДляПисьма + Поле.Значение;
			ТекстДляПисьма = ТекстДляПисьма + "</TD>";
		КонецЦикла;
		
		ТекстДляПисьма = ТекстДляПисьма + "</TR>";
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПолей, Выборка);
		
		Если ЭтоHTML Тогда 
			ТекстДляПисьма = ТекстДляПисьма + "<TR>";
			// заполним строку
			Для Каждого Поле Из СтруктураПолей Цикл
				ТекстДляПисьма = ТекстДляПисьма + "<TD style = ""padding-right:10px;width:310px;"">";
				ТекстДляПисьма = ТекстДляПисьма + Поле.Значение;
				ТекстДляПисьма = ТекстДляПисьма + "</TD>";
			КонецЦикла;
			
			ТекстДляПисьма = ТекстДляПисьма + "</TR>";
			
		Иначе
			ТекстДляПисьма = ТекстДляПисьма + Символы.ПС;
			
			// заполним строку
			Для Каждого Поле Из СтруктураПолей Цикл
				ТекстДляПисьма = ТекстДляПисьма + Поле.Значение;
				ТекстДляПисьма = ТекстДляПисьма + ";";
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЭтоHTML Тогда
		ТекстДляПисьма = ТекстДляПисьма + "</TABLE>";
	КонецЕсли;
	
	Возврат ТекстДляПисьма;
	
КонецФункции	
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-01-25 (#3997) 

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-10-25 (#2921)
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-17 (#2971)
//Функция ДополнитьТаблицуЗаписей(ТаблицаЗаписей, Алгоритм, ДатаУстановкиВизы, Документ, РанееПринятыеРешения, флВыполнятьПоэтапно, ИДПервогоДоступного) Экспорт
//Заменено на:
Функция ДополнитьТаблицуЗаписей(ТаблицаЗаписей, Алгоритм, ДатаУстановкиВизы, Документ, РанееПринятыеРешения, флВыполнятьПоэтапно, ИДПоследнегоДоступного) Экспорт
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-17 (#2971)
	
	КопияТаблицыЗаписей = ТаблицаЗаписей.Скопировать();
	
	КолонкаОбработана = КопияТаблицыЗаписей.Колонки.Найти("Обработана");
	Если КолонкаОбработана <> Неопределено Тогда 
		КопияТаблицыЗаписей.Колонки.Удалить(КолонкаОбработана);
	КонецЕсли;
	
	локТаблицаТочкиВизы  = бит_уп_Сервер.ПолучитьТаблицуТочек(Алгоритм,КопияТаблицыЗаписей);		
	бит_уп_Сервер.ОпределитьДоступностьТочек(локТаблицаТочкиВизы,флВыполнятьПоэтапно);
			
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-17 (#2971)
	//ТаблицаДоступныхТочек = локТаблицаТочкиВизы.Скопировать(Новый Структура("Доступность",Истина));
	//Заменено на:
	ТаблицаДоступныхТочек = локТаблицаТочкиВизы.Скопировать(Новый Структура("Доступность,Решение",Истина,ПредопределенноеЗначение("Справочник.бит_ВидыРешенийСогласования.ПустаяСсылка")));
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-17 (#2971)
	
	Если ТаблицаДоступныхТочек.Количество() = 0 ИЛИ
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-17 (#2971)		
		//ИДПервогоДоступного = ТаблицаДоступныхТочек[0].ИД
		//Заменено на:
		ИДПоследнегоДоступного = ТаблицаДоступныхТочек[ТаблицаДоступныхТочек.Количество()-1].ИД
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-17 (#2971)
	Тогда 
		Возврат ТаблицаЗаписей;
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура("ТочкаАлгоритма");
	
	Для Каждого ДоступнаяТочка Из ТаблицаДоступныхТочек Цикл 
		
		СтруктураПоиска.Вставить("ТочкаАлгоритма"	,	ДоступнаяТочка.Точка);
					
		СтрокиВизы = КопияТаблицыЗаписей.НайтиСтроки(СтруктураПоиска);
		Для Каждого СтрокаВизы Из СтрокиВизы Цикл 	
			
			РанееПринятоеРешение = РанееПринятыеРешения.Найти(СтрокаВизы.ФизическоеЛицо);
			
			Если РанееПринятоеРешение = Неопределено И 
				 ТипЗнч(СтрокаВизы.ФизическоеЛицо) = Тип("СправочникСсылка.бит_БК_Инициаторы")				 
			Тогда                                                                                                         	
				РанееПринятоеРешение = РанееПринятыеРешения.Найти(СтрокаВизы.ФизическоеЛицо.Пользователь);
			КонецЕсли;
			
			ВремяНаУстановку = СтрокаВизы.Виза.ВремяНаУстановку;
			Если СтрокаВизы.ФизическоеЛицо = Справочники.бит_БК_Инициаторы.СБ_НеЗадан И 
				НЕ ЗначениеЗаполнено(СтрокаВизы.Решение)
			Тогда 
				СтрокаВизы.Решение = ПредопределенноеЗначение("Справочник.бит_ВидыРешенийСогласования.Согласовано");
				СтрокаВизы.ДатаУстановки	= ДатаУстановкиВизы;
				
				Если ЗначениеЗаполнено(ВремяНаУстановку) Тогда
					СтрокаВизы.ВремяНаУстановку = ВремяНаУстановку*60;
					ДатаКрайняя = ТекущаяДата() + ВремяНаУстановку*60; 
					СтрокаВизы.ДатаКрайняя = бит_Визирование.ПолучитьКрайнююДату(Документ, ТекущаяДата(), ДатаКрайняя);
				КонецЕсли;
				СтрокаВизы.Пользователь		= СтрокаВизы.ФизическоеЛицо.Пользователь;
			ИначеЕсли РанееПринятоеРешение<>Неопределено И Не ЗначениеЗаполнено(СтрокаВизы.Решение) Тогда
				СтрокаВизы.Решение = РанееПринятоеРешение.Решение;
				Если СтрокаВизы.ДатаУстановки = Дата('00010101') Тогда 
					СтрокаВизы.ДатаУстановки	= ДатаУстановкиВизы;
				КонецЕсли;
				Если ЗначениеЗаполнено(ВремяНаУстановку) Тогда
					СтрокаВизы.ВремяНаУстановку = ВремяНаУстановку*60;
				КонецЕсли;
				Если СтрокаВизы.ДатаКрайняя = Дата('00010101') Тогда 
					ДатаКрайняя = ТекущаяДата() + ВремяНаУстановку*60; 					
					СтрокаВизы.ДатаКрайняя = бит_Визирование.ПолучитьКрайнююДату(Документ, ТекущаяДата(), ДатаКрайняя);
				КонецЕсли;				
				Если Не ЗначениеЗаполнено(СтрокаВизы.Пользователь) Тогда 
					СтрокаВизы.Пользователь		= РанееПринятоеРешение.Пользователь;
				КонецЕсли;
			Иначе
				Если ЗначениеЗаполнено(ВремяНаУстановку) Тогда
					СтрокаВизы.ВремяНаУстановку = ВремяНаУстановку*60;
				КонецЕсли;
				Если СтрокаВизы.ДатаКрайняя = Дата('00010101') Тогда 
					ДатаКрайняя = ТекущаяДата() + ВремяНаУстановку*60; 
					СтрокаВизы.ДатаКрайняя = бит_Визирование.ПолучитьКрайнююДату(Документ, ТекущаяДата(), ДатаКрайняя);					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-17 (#2971)
	//Возврат ДополнитьТаблицуЗаписей(КопияТаблицыЗаписей, Алгоритм, ДатаУстановкиВизы, Документ, РанееПринятыеРешения, флВыполнятьПоэтапно, ТаблицаДоступныхТочек[0].ИД);
	//Заменено на:
	Возврат ДополнитьТаблицуЗаписей(КопияТаблицыЗаписей, Алгоритм, ДатаУстановкиВизы, Документ, РанееПринятыеРешения, флВыполнятьПоэтапно, ТаблицаДоступныхТочек[ТаблицаДоступныхТочек.Количество()-1].ИД);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-17 (#2971)
	
КонецФункции
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-10-25 (#2921)

#КонецЕсли