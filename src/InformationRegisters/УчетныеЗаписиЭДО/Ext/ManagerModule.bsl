#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаЗаписи"
		ИЛИ Не ОбменСКонтрагентамиСлужебный.ПрямойОбменДоступен() Тогда
		Возврат;
	КонецЕсли;
	
	КлючЗаписи = Неопределено;
	Если Не Параметры.Свойство("Ключ", КлючЗаписи)
		ИЛИ Не ЗначениеЗаполнено(КлючЗаписи.ИдентификаторЭДО) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныеЗаписиЭДО.ИдентификаторЭДО КАК ИдентификаторЭДО
		|ИЗ
		|	РегистрСведений.УчетныеЗаписиЭДО КАК УчетныеЗаписиЭДО
		|ГДЕ
		|	УчетныеЗаписиЭДО.ИдентификаторЭДО = &ИдентификаторЭДО
		|	И УчетныеЗаписиЭДО.СпособОбменаЭД В (&СпособыОбмена)";
		
	Запрос.УстановитьПараметр("ИдентификаторЭДО", КлючЗаписи.ИдентификаторЭДО);
	Запрос.УстановитьПараметр("СпособыОбмена", ОбменСКонтрагентамиСлужебный.СпособыПрямогоОбмена());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ВыбраннаяФорма = "УчетнаяЗаписьПрямогоОбмена";
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыеДанныеЗаполнения() Экспорт
	
	ДанныеЗаполнения = ОбменСКонтрагентамиСлужебныйКлиентСервер.НовыйДанныеЗаполненияУчетнойЗаписиЭДО();
	
	ДанныеЗаполнения.ДатаПолученияЭД = ТекущаяДатаСеанса();
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

Процедура НоваяУчетнаяЗаписьЭДО(Знач ДанныеЗаполнения, Отказ) Экспорт
	
	ПустыеДанныеЗаполнения = НовыеДанныеЗаполнения();
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(ДанныеЗаполнения, ПустыеДанныеЗаполнения, Ложь);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныеЗаписиЭДО.ИдентификаторЭДО КАК ИдентификаторЭДО
		|ИЗ
		|	РегистрСведений.УчетныеЗаписиЭДО КАК УчетныеЗаписиЭДО
		|ГДЕ
		|	УчетныеЗаписиЭДО.Организация = &Организация
		|	И УчетныеЗаписиЭДО.ИдентификаторЭДО = &ИдентификаторЭДО";
	
	
	Запрос.УстановитьПараметр("ИдентификаторЭДО", ДанныеЗаполнения.ИдентификаторЭДО);
	Запрос.УстановитьПараметр("Организация"     , ДанныеЗаполнения.Организация);
	
	Если Не Запрос.Выполнить().Пустой() Тогда
		Шаблон = НСтр("ru = 'Учетная запись организации %2 с идентификатором %1 уже существует'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, ДанныеЗаполнения.ИдентификаторЭДО, ДанныеЗаполнения.Организация);
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		Возврат;
	ИначеЕсли Не ЗначениеЗаполнено(ДанныеЗаполнения.ИдентификаторЭДО)
				Или Не ЗначениеЗаполнено(ДанныеЗаполнения.Организация) Тогда 
				
				ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не заполнены обязательные реквизиты учетной записи.'"),,,,Отказ);
				
				Возврат;
				
	КонецЕсли;
	
	Попытка
		Запись = РегистрыСведений.УчетныеЗаписиЭДО.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, ДанныеЗаполнения);
		Запись.Записать();
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ВидОперации = НСтр("ru = 'Создание новой учетной записи ЭДО'");
		ПодробныйТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
		КраткийТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		ЭлектронноеВзаимодействие.ОбработатьОшибку(ВидОперации, ПодробныйТекстОшибки, КраткийТекстОшибки, "ОбменСКонтрагентами");
		
		Отказ = Истина;
		
	КонецПопытки;
	
КонецПроцедуры

Функция ДанныеУчетнойЗаписиЭДОПоИдентификатору(ИдентификаторЭДО) Экспорт 
	
	Данные = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	УчетныеЗаписиЭДО.Организация КАК Организация,
		|	УчетныеЗаписиЭДО.ОператорЭДО КАК ОператорЭДО,
		|	УчетныеЗаписиЭДО.СпособОбменаЭД КАК СпособОбменаЭД,
		|	УчетныеЗаписиЭДО.ИдентификаторЭДО КАК ИдентификаторОрганизации
		|ИЗ
		|	РегистрСведений.УчетныеЗаписиЭДО КАК УчетныеЗаписиЭДО
		|ГДЕ
		|	УчетныеЗаписиЭДО.ИдентификаторЭДО = &ИдентификаторЭДО";
	
	Запрос.УстановитьПараметр("ИдентификаторЭДО", ИдентификаторЭДО);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ТаблицаРезультат = РезультатЗапроса.Выгрузить();
	
	Если ТаблицаРезультат.Количество() > 0 Тогда
		
		Данные = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРезультат[0]);
		
	КонецЕсли;
	
	Возврат Данные;
	
КонецФункции

Процедура УдалитьУчетнуюЗаписьЭДО(Параметры, АдресРезультата = Неопределено) Экспорт
	
	Отказ                     = Ложь;
	ИдентификаторЭДО          = Неопределено;
	
	Параметры.Свойство("ИдентификаторЭДО", ИдентификаторЭДО);
	
	Если Не ЗначениеЗаполнено(ИдентификаторЭДО) Тогда
		Отказ = Истина;
		Если АдресРезультата <> Неопределено Тогда
			ПоместитьВоВременноеХранилище(Отказ, АдресРезультата);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НастройкиОтправкиЭлектронныхДокументовПоВидам.Отправитель КАК Отправитель,
		|	НастройкиОтправкиЭлектронныхДокументовПоВидам.Получатель КАК Получатель,
		|	НастройкиОтправкиЭлектронныхДокументовПоВидам.Договор КАК Договор,
		|	НастройкиОтправкиЭлектронныхДокументовПоВидам.ВидДокумента КАК ВидДокумента
		|ИЗ
		|	РегистрСведений.НастройкиОтправкиЭлектронныхДокументовПоВидам КАК НастройкиОтправкиЭлектронныхДокументовПоВидам
		|ГДЕ
		|	НастройкиОтправкиЭлектронныхДокументовПоВидам.ИдентификаторОтправителя = &ИдентификаторЭДО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СостоянияОбменовЭДЧерезОператоровЭДО.ИдентификаторОрганизации КАК ИдентификаторОрганизации
		|ИЗ
		|	РегистрСведений.СостоянияОбменовЭДЧерезОператоровЭДО КАК СостоянияОбменовЭДЧерезОператоровЭДО
		|ГДЕ
		|	СостоянияОбменовЭДЧерезОператоровЭДО.ИдентификаторОрганизации = &ИдентификаторЭДО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АбонентыЭДО.ИдентификаторЭДО КАК ИдентификаторЭДО
		|ИЗ
		|	РегистрСведений.АбонентыЭДО КАК АбонентыЭДО
		|ГДЕ
		|	АбонентыЭДО.ИдентификаторЭДО = &ИдентификаторЭДО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	НастройкиПолученияЭлектронныхДокументов.ИдентификаторПолучателя КАК ИдентификаторПолучателя
		|ИЗ
		|	РегистрСведений.НастройкиПолученияЭлектронныхДокументов КАК НастройкиПолученияЭлектронныхДокументов
		|ГДЕ
		|	НастройкиПолученияЭлектронныхДокументов.ИдентификаторПолучателя = &ИдентификаторЭДО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПриглашенияКОбменуЭлектроннымиДокументами.ИдентификаторОрганизации КАК ИдентификаторОрганизации
		|ИЗ
		|	РегистрСведений.ПриглашенияКОбменуЭлектроннымиДокументами КАК ПриглашенияКОбменуЭлектроннымиДокументами
		|ГДЕ
		|	ПриглашенияКОбменуЭлектроннымиДокументами.ИдентификаторОрганизации = &ИдентификаторЭДО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УчетныеЗаписиЭДО.ИдентификаторЭДО КАК ИдентификаторЭДО,
		|	УчетныеЗаписиЭДО.СпособОбменаЭД КАК СпособОбменаЭД
		|ИЗ
		|	РегистрСведений.УчетныеЗаписиЭДО КАК УчетныеЗаписиЭДО
		|ГДЕ
		|	УчетныеЗаписиЭДО.ИдентификаторЭДО = &ИдентификаторЭДО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НаличиеНовыхЭлектронныхДокументов.ИдентификаторЭДО КАК ИдентификаторЭДО
		|ИЗ
		|	РегистрСведений.НаличиеНовыхЭлектронныхДокументов КАК НаличиеНовыхЭлектронныхДокументов
		|ГДЕ
		|	НаличиеНовыхЭлектронныхДокументов.ИдентификаторЭДО = &ИдентификаторЭДО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СертификатыУчетныхЗаписейЭДО.ИдентификаторЭДО КАК ИдентификаторЭДО
		|ИЗ
		|	РегистрСведений.СертификатыУчетныхЗаписейЭДО КАК СертификатыУчетныхЗаписейЭДО
		|ГДЕ
		|	СертификатыУчетныхЗаписейЭДО.ИдентификаторЭДО = &ИдентификаторЭДО";
	
	Запрос.УстановитьПараметр("ИдентификаторЭДО", ИдентификаторЭДО);
	
	// Удаляем все под текущими правами пользователя.
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	НачатьТранзакцию();
	Попытка
		
		НастройкиОтправкиЭлектронныхДокументовПоВидам = РезультатыЗапросов[0].Выбрать();
		Пока НастройкиОтправкиЭлектронныхДокументовПоВидам.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.НастройкиОтправкиЭлектронныхДокументовПоВидам.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Отправитель.Установить(НастройкиОтправкиЭлектронныхДокументовПоВидам.Отправитель);
			НаборЗаписей.Отбор.Получатель.Установить(НастройкиОтправкиЭлектронныхДокументовПоВидам.Получатель);
			НаборЗаписей.Отбор.Договор.Установить(НастройкиОтправкиЭлектронныхДокументовПоВидам.Договор);
			НаборЗаписей.Отбор.ВидДокумента.Установить(НастройкиОтправкиЭлектронныхДокументовПоВидам.ВидДокумента);
			НаборЗаписей.Записать();
		КонецЦикла;
		
		СостоянияОбменовЭДЧерезОператоровЭДО = РезультатыЗапросов[1].Выбрать();
		Пока СостоянияОбменовЭДЧерезОператоровЭДО.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.СостоянияОбменовЭДЧерезОператоровЭДО.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ИдентификаторОрганизации.Установить(СостоянияОбменовЭДЧерезОператоровЭДО.ИдентификаторОрганизации);
			НаборЗаписей.Записать();
		КонецЦикла;
		
		АбонентыЭДО = РезультатыЗапросов[2].Выбрать();
		Пока АбонентыЭДО.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.АбонентыЭДО.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ИдентификаторЭДО.Установить(АбонентыЭДО.ИдентификаторЭДО);
			НаборЗаписей.Записать();
		КонецЦикла;
		
		НастройкиПолученияЭлектронныхДокументов = РезультатыЗапросов[3].Выбрать();
		Пока НастройкиПолученияЭлектронныхДокументов.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.НастройкиПолученияЭлектронныхДокументов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ИдентификаторПолучателя.Установить(НастройкиПолученияЭлектронныхДокументов.ИдентификаторПолучателя);
			НаборЗаписей.Записать();
		КонецЦикла;
		
		ПриглашенияКОбменуЭлектроннымиДокументами = РезультатыЗапросов[4].Выбрать();
		Пока ПриглашенияКОбменуЭлектроннымиДокументами.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.ПриглашенияКОбменуЭлектроннымиДокументами.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ИдентификаторОрганизации.Установить(ПриглашенияКОбменуЭлектроннымиДокументами.ИдентификаторОрганизации);
			НаборЗаписей.Записать();
		КонецЦикла;
		
		УчетныеЗаписиЭДО = РезультатыЗапросов[5].Выбрать();
		Пока УчетныеЗаписиЭДО.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.УчетныеЗаписиЭДО.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ИдентификаторЭДО.Установить(УчетныеЗаписиЭДО.ИдентификаторЭДО);
			НаборЗаписей.Записать();
			
			Если УчетныеЗаписиЭДО.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезFTP Тогда
				УстановитьПривилегированныйРежим(Истина);
				ОбщегоНазначения.УдалитьДанныеИзБезопасногоХранилища(УчетныеЗаписиЭДО.ИдентификаторЭДО);
				УстановитьПривилегированныйРежим(Ложь);
			КонецЕсли;
		КонецЦикла;
		
		НаличиеНовыхЭлектронныхДокументов = РезультатыЗапросов[6].Выбрать();
		Пока НаличиеНовыхЭлектронныхДокументов.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.НаличиеНовыхЭлектронныхДокументов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ИдентификаторЭДО.Установить(НаличиеНовыхЭлектронныхДокументов.ИдентификаторЭДО);
			НаборЗаписей.Записать();
		КонецЦикла;
		
		СертификатыУчетныхЗаписейЭДО = РезультатыЗапросов[7].Выбрать();
		Пока СертификатыУчетныхЗаписейЭДО.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.СертификатыУчетныхЗаписейЭДО.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ИдентификаторЭДО.Установить(СертификатыУчетныхЗаписейЭДО.ИдентификаторЭДО);
			НаборЗаписей.Записать();
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		Информация = ИнформацияОбОшибке();
		
		Отказ = Истина;
		
		ЭлектронноеВзаимодействие.ОбработатьОшибку(НСтр("ru = 'Удаление настроек учетной записи ЭДО'"),
			ПодробноеПредставлениеОшибки(Информация));
			
	КонецПопытки;
	
	Если АдресРезультата <> Неопределено Тогда
		ПоместитьВоВременноеХранилище(Отказ, АдресРезультата);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

//1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО (
Функция ПолучитьЗначенияРеквизитовУчетнойЗаписиЭДОПоИдентификатору(ИдентификаторЭДО, Знач Реквизиты) Экспорт 
	
	Если ТипЗнч(Реквизиты) = Тип("Строка") Тогда
		Если ПустаяСтрока(Реквизиты) Тогда
			Возврат Новый Структура;
		КонецЕсли;
		Реквизиты = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Реквизиты, ",", Истина);
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура;
	Если ТипЗнч(Реквизиты) = Тип("Структура") Или ТипЗнч(Реквизиты) = Тип("ФиксированнаяСтруктура") Тогда
		СтруктураРеквизитов = Реквизиты;
	ИначеЕсли ТипЗнч(Реквизиты) = Тип("Массив") Или ТипЗнч(Реквизиты) = Тип("ФиксированныйМассив") Тогда
		Для Каждого Реквизит Из Реквизиты Цикл
			СтруктураРеквизитов.Вставить(СтрЗаменить(Реквизит, ".", ""), Реквизит);
		КонецЦикла;
	Иначе
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Неверный тип второго параметра Реквизиты: %1'"),
			Строка(ТипЗнч(Реквизиты)));
	КонецЕсли;
	
	Результат = Новый Структура;
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		Результат.Вставить(КлючИЗначение.Ключ);
	КонецЦикла;

	ТекстПолей = "";
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		ИмяПоля   = ?(ЗначениеЗаполнено(КлючИЗначение.Значение),
		              СокрЛП(КлючИЗначение.Значение),
		              СокрЛП(КлючИЗначение.Ключ));
		
		Псевдоним = СокрЛП(КлючИЗначение.Ключ);
		
		Если ИмяПоля = "Ссылка" Тогда
			ИмяПоля = "ИдентификаторЭДО";
		ИначеЕсли ИмяПоля = "АдресСервера" Тогда
			ИмяПоля = "ПутьFTP";
		ИначеЕсли ИмяПоля = "Логин" Тогда
			Результат.Логин = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ИдентификаторЭДО, "ЛогинFTP");
			Продолжить;
		ИначеЕсли ИмяПоля = "Пароль" Тогда
			Результат.Пароль = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ИдентификаторЭДО, "ПарольFTP");
			Продолжить;
		КонецЕсли;	
		
		ТекстПолей  = ТекстПолей + ?(ПустаяСтрока(ТекстПолей), "", ",") + "
		|	" + ИмяПоля + " КАК " + Псевдоним;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИдентификаторЭДО", ИдентификаторЭДО);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|" + ТекстПолей + "
	|ИЗ
	|	РегистрСведений.УчетныеЗаписиЭДО КАК ПсевдонимЗаданнойТаблицы
	|ГДЕ
	|	ПсевдонимЗаданнойТаблицы.ИдентификаторЭДО = &ИдентификаторЭДО
	|	ИЛИ ПсевдонимЗаданнойТаблицы.Организация = &ИдентификаторЭДО
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	Возврат Результат;
	
КонецФункции

Функция ЗначениеРеквизитаРегистра(Ссылка, ИмяРеквизита) Экспорт
	
	Если ПустаяСтрока(ИмяРеквизита) Тогда 
		ВызватьИсключение 
			НСтр("ru = 'Неверный второй параметр ИмяРеквизита в функции ОбщегоНазначения.ЗначениеРеквизитаОбъекта: 
			           |- Имя реквизита должно быть заполнено'");
	КонецЕсли;
	
	Результат = ПолучитьЗначенияРеквизитовУчетнойЗаписиЭДОПоИдентификатору(Ссылка, ИмяРеквизита);
	Возврат Результат[СтрЗаменить(ИмяРеквизита, ".", "")];
	
КонецФункции 
//1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО )

#КонецЕсли
