
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	бит_РаботаСДиалогамиСервер.ФормаСпискаРегистраПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтотОбъект);
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	ТекущаяЗапись = Источник.Запись;
	ОбъектСистемы = ТекущаяЗапись.ОбъектСистемы;
	МаскаКода     = ТекущаяЗапись.МаскаКода;
	МаскаТекущая  = ТекущаяЗапись.МаскаТекущая;
	
	Если МаскаКода <> МаскаТекущая И ЕстьОбъектыДляКонвертации(ОбъектСистемы) Тогда
		ТекстСообщения = Нстр("ru = 'Необходимо конвертировать коды для объекта %1%.'");
		ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, Строка(ОбъектСистемы));
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры // СписокОбработкаЗаписиНового()

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	
	Если Не ВозможноУдалитьЗапись(Элемент.ВыделенныеСтроки) Тогда
		Отказ = Истина; 	
	КонецЕсли;          	

КонецПроцедуры // СписокПередУдалением()

&НаКлиенте
Процедура КонвертироватьКоды(Команда)
	
	МассивИзмененных = КонвертироватьКодыСервер();
	
	Если МассивИзмененных.Количество() > 0 Тогда
		
		МассивВыделенных = Элементы.Список.ВыделенныеСтроки;
		Для каждого ИзмененныйТип Из МассивИзмененных Цикл			
			ОповеститьОбИзменении(Тип(ИзмененныйТип));
		КонецЦикла;
	
		ТекстСообщения = Нстр("ru = 'Выполнена конвертация кодов.'");		
				
	Иначе	
		
		ТекстСообщения = Нстр("ru = 'Конвертация кодов не выполнена.'");
		
	КонецЕсли;
	
	бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
	
КонецПроцедуры // КонвертироватьКоды()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ВозможноУдалитьЗапись(Знач ВыделенныеСтроки)

	ВозможноУдалить = Истина;
	
	Для каждого ЭлЗапись Из ВыделенныеСтроки Цикл
		
		ТекОбъектСистемы = ЭлЗапись.ОбъектСистемы;
		ТекИмяРеквизита  = ЭлЗапись.ИмяРеквизита;
		
		Если Лев(ТекОбъектСистемы.ИмяОбъектаПолное, 10) = "ПланСчетов" Тогда
			
			ТекстСообщения = Нстр("ru = 'Нельзя удалить запись для плана счетов. (%1% - %2%)'");
			ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, ТекОбъектСистемы, ТекИмяРеквизита);
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
			ВозможноУдалить = Ложь;
			
		Иначе 					
			
			МаскаПоУмолчанию = РегистрыСведений.бит_МаскиКодов.ПолучитьМаскуКодаПоУмолчанию(ТекОбъектСистемы, ТекИмяРеквизита);
			
			МенеджерЗаписи = РегистрыСведений.бит_МаскиКодов.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ОбъектСистемы = ТекОбъектСистемы;
			МенеджерЗаписи.ИмяРеквизита  = ТекИмяРеквизита; 		
			МенеджерЗаписи.Прочитать();	
			
			Если МаскаПоУмолчанию <> МенеджерЗаписи.МаскаТекущая Тогда
				
				ТекстСообщения = Нстр("ru = 'Нельзя удалить запись с установленной маской отличной от маски по умолчанию. (%1% - %2%)'");
				ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, ТекОбъектСистемы, ТекИмяРеквизита);
				бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
					 
				ВозможноУдалить = Ложь;	
			
			КонецЕсли;
		
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат ВозможноУдалить;
	
КонецФункции // ВозможноУдалитьЗапись()

&НаСервере
Функция КонвертироватьКодыСервер()
	
	МассивВыделенных = Элементы.Список.ВыделенныеСтроки;
	Если МассивВыделенных.Количество() > 0 Тогда
		
		МассивИзмененных = РегистрыСведений.бит_МаскиКодов.КонвертироватьКоды(МассивВыделенных);
		Элементы.Список.Обновить();		
	
	КонецЕсли;
	
	Возврат МассивИзмененных;

КонецФункции // КонвертироватьКодыСервер()
             
&НаСервере
Функция ЕстьОбъектыДляКонвертации(ТекОбъектСистемы)

	Если ТекОбъектСистемы.ВидОбъекта = Перечисления.бит_ВидыОбъектовСистемы.ПланСчетов Тогда 		
		Выборка = ПланыСчетов[ТекОбъектСистемы.ИмяОбъекта].Выбрать();	            		
	ИначеЕсли ТекОбъектСистемы.ВидОбъекта = Перечисления.бит_ВидыОбъектовСистемы.Справочник Тогда 		
		Выборка = Справочники[ТекОбъектСистемы.ИмяОбъекта].Выбрать();  	
	КонецЕсли;  	

	ЕстьОбъекты = Выборка.Следующий();
	
	Возврат ЕстьОбъекты;
	
КонецФункции // ЕстьОбъектыДляКонвертации() 

#КонецОбласти
