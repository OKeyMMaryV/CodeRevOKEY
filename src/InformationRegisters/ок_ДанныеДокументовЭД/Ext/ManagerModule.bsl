//ОКЕЙ Вдовиченко Г.В(СофтЛаб) 2020-02-17 (#3623)

Процедура ОбновитьДанныеДокумента(ЭлектронныйДокумент) Экспорт
	
	Если Не ЗначениеЗаполнено(ЭлектронныйДокумент) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Данные.Ссылка КАК Ссылка,
		//ОКЕЙ Бублик А.А(СофтЛаб) Начало 2020-08-03 (#3816)
		//|	Данные.ПрофильНастроекЭДО КАК ПрофильНастроекЭДО,
		|	Данные.ИдентификаторОрганизации КАК ИдентификаторОрганизации,
		//ОКЕЙ Бублик А.А(СофтЛаб) Конец 2020-08-03 (#3816)
		|	Данные.ок_Статус КАК ок_Статус,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(Данные.ПричинаОтклонения КАК СТРОКА(10))) <> """"
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Отклонен,
		|	ДанныеДокументыОснования.НомерСтроки КАК НомерСтроки,
		|	ДанныеДокументыОснования.ДокументОснование КАК ДокументОснование,
		|	ВЫБОР
		|		КОГДА ДанныеДокументыОснования.ДокументОснование ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьУчетныйДокумент,
		|	ВЫБОР
		|		КОГДА ДанныеЗагружаемыеДокументы.ВидЗагружаемогоДокумента ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК СоздаватьУчетныйДокумент
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	Документ.ЭлектронныйДокументВходящий КАК Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭлектронныйДокументВходящий.ДокументыОснования КАК ДанныеДокументыОснования
		|		ПО (ДанныеДокументыОснования.Ссылка = Данные.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭлектронныйДокументВходящий.ок_ЗагружаемыеДокументы КАК ДанныеЗагружаемыеДокументы
		|		ПО (ДанныеЗагружаемыеДокументы.Ссылка = Данные.Ссылка)
		|ГДЕ
		|	Данные.Ссылка = &ЭлектронныйДокумент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Ссылка КАК Ссылка,
		|	МИНИМУМ(ВТ.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ВТМинимальныеСтроки
		|ИЗ
		|	ВТ КАК ВТ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Ссылка КАК Ссылка,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА МинимальныеСтроки.Ссылка ЕСТЬ NULL
		|				ТОГДА НЕОПРЕДЕЛЕНО
		|			ИНАЧЕ ВТ.ДокументОснование
		|		КОНЕЦ) КАК ДокументОснование,
		|	МАКСИМУМ(ВТ.СоздаватьУчетныйДокумент) КАК СоздаватьУчетныйДокумент,
		|	МАКСИМУМ(ВТ.ЕстьУчетныйДокумент) КАК ЕстьУчетныйДокумент,
		//ОКЕЙ Бублик А.А(СофтЛаб) Начало 2020-08-03 (#3816)
		//|	ВТ.ПрофильНастроекЭДО КАК ПрофильНастроекЭДО,
		|	ВТ.ИдентификаторОрганизации КАК ИдентификаторОрганизации,
		//ОКЕЙ Бублик А.А(СофтЛаб) Конец 2020-08-03 (#3816)
		|	ВТ.ок_Статус КАК ок_Статус,
		|	ВТ.Отклонен КАК Отклонен
		|ПОМЕСТИТЬ ВТДанные
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМинимальныеСтроки КАК МинимальныеСтроки
		|		ПО ВТ.Ссылка = МинимальныеСтроки.Ссылка
		|			И ВТ.НомерСтроки = МинимальныеСтроки.НомерСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ.Ссылка,
		//ОКЕЙ Бублик А.А(СофтЛаб) Начало 2020-08-03 (#3816)
		//|	ВТ.ПрофильНастроекЭДО,
		|	ВТ.ИдентификаторОрганизации,
		//ОКЕЙ Бублик А.А(СофтЛаб) Конец 2020-08-03 (#3816)
		|	ВТ.ок_Статус,
		|	ВТ.Отклонен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Данные.Ссылка КАК Документ,
		|	МАКСИМУМ(ВЫБОР
		//ОКЕЙ Бублик А.А(СофтЛаб) Начало 2020-08-03 (#3816)
		//|			КОГДА Данные.ПрофильНастроекЭДО = ЗНАЧЕНИЕ(Справочник.ПрофилиНастроекЭДО.ПустаяСсылка)
		|			КОГДА Данные.ИдентификаторОрганизации = """"
		//ОКЕЙ Бублик А.А(СофтЛаб) Конец 2020-08-03 (#3816)
		|				ТОГДА ВЫБОР
		|						КОГДА Данные.ок_Статус = ЗНАЧЕНИЕ(Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.Согласован)
		|								ИЛИ Данные.ок_Статус = ЗНАЧЕНИЕ(Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.Завершен)
		|							ТОГДА Данные.СоздаватьУчетныйДокумент
		|									И НЕ Данные.ЕстьУчетныйДокумент
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОГДА Данные.ок_Статус = ЗНАЧЕНИЕ(Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.Подписать)
		|					ИЛИ Данные.ок_Статус = ЗНАЧЕНИЕ(Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.Отправлен)
		|					ИЛИ Данные.ок_Статус = ЗНАЧЕНИЕ(Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.Завершен)
		|				ТОГДА ВЫБОР
		|						КОГДА Данные.Отклонен
		|							ТОГДА ЛОЖЬ
		|						КОГДА Данные.ЕстьУчетныйДокумент
		|							ТОГДА ЛОЖЬ
		|						КОГДА НЕ ФайлыДляОтражения.ТипЭлементаВерсииЭД ЕСТЬ NULL
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ТребуетОтраженияВУчете,
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-11 (#4376)
		|	МАКСИМУМ(Данные.Отклонен ИЛИ Данные.ЕстьУчетныйДокумент) КАК НеОтражатьВУчете,
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-11 (#4376)
		|	Данные.ДокументОснование КАК ДокументУчета,
		|	МАКСИМУМ(НЕ Акты.ВладелецФайла ЕСТЬ NULL) КАК Акт,
		|	МАКСИМУМ(НЕ Накладные.ВладелецФайла ЕСТЬ NULL) КАК Накладная,
		|	МАКСИМУМ(НЕ УПД.ВладелецФайла ЕСТЬ NULL) КАК УПД,
		|	МАКСИМУМ(НЕ СчетФактуры.ВладелецФайла ЕСТЬ NULL) КАК СчетФактура,
		|	МАКСИМУМ(НЕ Неформализованные.ВладелецФайла ЕСТЬ NULL) КАК Неформализованный,
		|	МАКСИМУМ(НЕ Счета.ВладелецФайла ЕСТЬ NULL) КАК Счет
		|ИЗ
		|	ВТДанные КАК Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭДПрисоединенныеФайлы КАК Акты
		|		ПО Данные.Ссылка = Акты.ВладелецФайла
		|			И (Акты.ок_ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ок_ТипыДокументовЭД.Акт))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭДПрисоединенныеФайлы КАК Накладные
		|		ПО Данные.Ссылка = Накладные.ВладелецФайла
		|			И (Накладные.ок_ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ок_ТипыДокументовЭД.Накладная))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭДПрисоединенныеФайлы КАК УПД
		|		ПО Данные.Ссылка = УПД.ВладелецФайла
		|			И (УПД.ок_ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ок_ТипыДокументовЭД.УПД))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭДПрисоединенныеФайлы КАК СчетФактуры
		|		ПО Данные.Ссылка = СчетФактуры.ВладелецФайла
		|			И (СчетФактуры.ок_ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ок_ТипыДокументовЭД.СчетФактура))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭДПрисоединенныеФайлы КАК Неформализованные
		|		ПО Данные.Ссылка = Неформализованные.ВладелецФайла
		|			И (Неформализованные.ок_ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ок_ТипыДокументовЭД.Неформализованный))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭДПрисоединенныеФайлы КАК Счета
		|		ПО Данные.Ссылка = Счета.ВладелецФайла
		|			И (Счета.ок_ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ок_ТипыДокументовЭД.Счет))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭДПрисоединенныеФайлы КАК ФайлыДляОтражения
		|		ПО Данные.Ссылка = ФайлыДляОтражения.ВладелецФайла
		|			И (ФайлыДляОтражения.ок_ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ок_ТипыДокументовЭД.СчетФактура)
		|				ИЛИ ФайлыДляОтражения.ок_ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ок_ТипыДокументовЭД.УПД)
		|				ИЛИ ФайлыДляОтражения.ок_ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ок_ТипыДокументовЭД.УКД)
		|				ИЛИ ФайлыДляОтражения.ок_ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ок_ТипыДокументовЭД.Акт)
		|				ИЛИ ФайлыДляОтражения.ок_ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ок_ТипыДокументовЭД.Накладная)
		|				ИЛИ ФайлыДляОтражения.ок_ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ок_ТипыДокументовЭД.КорректировкаПоступления))
		|
		|СГРУППИРОВАТЬ ПО
		|	Данные.Ссылка,
		|	Данные.ДокументОснование";
	
	Запрос.УстановитьПараметр("ЭлектронныйДокумент", ЭлектронныйДокумент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;	
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	

	Набор = РегистрыСведений.ок_ДанныеДокументовЭД.СоздатьНаборЗаписей();
	Набор.Отбор.Документ.Установить(Выборка.Документ);
	Набор.Прочитать();
	
	//проверка на измененность	
	Записывать = Истина;
	Если Набор.Количество() > 0 Тогда
		Записывать = Ложь;
		Для каждого Реквизит из Метаданные.РегистрыСведений.ок_ДанныеДокументовЭД.Реквизиты Цикл
			Если Набор[0][Реквизит.Имя] <> Выборка[Реквизит.Имя] Тогда
				Записывать = Истина;
				Прервать;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	
	
	Если Не Записывать Тогда
		Возврат;
	КонецЕсли;	
	
	Набор.Очистить();
	Запись = Набор.Добавить();
	ЗаполнитьЗначенияСвойств(Запись, Выборка);
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-11 (#4376)
	Если ТипЗнч(ЭлектронныйДокумент) = Тип("ДокументСсылка.ЭлектронныйДокументВходящий")
		И НЕ Выборка.ТребуетОтраженияВУчете
		И НЕ Выборка.НеОтражатьВУчете
		И ЭлектронныйДокумент.ок_СоздаватьУчетныйДокументКопированием
		И ЗначениеЗаполнено(ЭлектронныйДокумент.ок_ДокументКопирования) Тогда
		Запись.ТребуетОтраженияВУчете = Истина;
	КонецЕсли;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-11 (#4376)	
	Набор.Записать();
	
КонецПроцедуры	
