&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьЭлементыНаФорме(Истина, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектПриИзменении(Элемент)
	
	Запись.Реквизит				 = Неопределено;
	Запись.РеквизитСиноним		 = Неопределено;
	Запись.ТабличнаяЧасть	     = Неопределено;
	Запись.ТабличнаяЧастьСиноним = Неопределено;
	
	ОбновитьЭлементыНаФорме(Истина, Истина);
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Запись.Объект = Неопределено; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Тип") Тогда
		
		ВыбранноеЗначение = Новый(ВыбранноеЗначение);
		
	КонецЕсли;
	
	Запись.Объект = ВыбранноеЗначение;
	
	ОбновитьЭлементыНаФорме(Истина, Истина);
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПриИзменении(Элемент)
	
	ЭлементВыбора = Элементы.ТабличнаяЧасть.СписокВыбора.НайтиПоЗначению(Запись.ТабличнаяЧасть);
	
	Если ЭлементВыбора = Неопределено Тогда
		
		Запись.ТабличнаяЧастьСиноним = Неопределено;	    
		
	Иначе
		
		Запись.ТабличнаяЧастьСиноним = ЭлементВыбора.Представление;
		
	КонецЕсли;
	
	Запись.Реквизит			= Неопределено;
	Запись.РеквизитСиноним 	= Неопределено;
	ОбновитьЭлементыНаФорме(Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитПриИзменении(Элемент)
	
	ЭлементВыбора = Элементы.Реквизит.СписокВыбора.НайтиПоЗначению(Запись.Реквизит);
	
	Если ЭлементВыбора = Неопределено Тогда
		
		Запись.РеквизитСиноним = Неопределено;	   
		
	Иначе
		
		Запись.РеквизитСиноним = ЭлементВыбора.Представление;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыНаФорме(Реквизит = Ложь, ТабличнаяЧасть = Ложь)
	
	Если Запись.Объект = Неопределено Тогда
		
		Элементы.ТабличнаяЧасть.СписокВыбора.Очистить();
		Элементы.ТабличнаяЧасть.Доступность = Ложь;
		Запись.ТабличнаяЧасть 				= Неопределено;
		Запись.ТабличнаяЧастьСиноним 		= Неопределено;
		
		Элементы.Реквизит.СписокВыбора.Очистить();
		
		Элементы.Реквизит.Доступность 	= Ложь;
		Запись.Реквизит 				= Неопределено;
		Запись.РеквизитСиноним 			= Неопределено;
		
	Иначе
		
		Элементы.ТабличнаяЧасть.Доступность = Истина;
		Элементы.Реквизит.Доступность 		= Истина;
		
		Если ТабличнаяЧасть Тогда
			
			СписокВыбора_ТабличнаяЧасть = ПолучитьСписокВыбора(Ложь, Истина);
			Элементы.ТабличнаяЧасть.СписокВыбора.Очистить();
			Для каждого ЭлементВыбора Из СписокВыбора_ТабличнаяЧасть Цикл
				
				Элементы.ТабличнаяЧасть.СписокВыбора.Добавить(ЭлементВыбора.Значение, ЭлементВыбора.Представление);
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если Реквизит Тогда
			
			СписокВыбора_Реквизит = ПолучитьСписокВыбора(Истина, ?(ЗначениеЗаполнено(Запись.ТабличнаяЧасть), Запись.ТабличнаяЧасть, Ложь));
			Элементы.Реквизит.СписокВыбора.Очистить();
			
			Для каждого ЭлементВыбора Из СписокВыбора_Реквизит Цикл
				
				Представление = ЭлементВыбора.Представление;
				Если Найти(НРег(ЭлементВыбора.Значение), "аналитика_")
					И Лев(НРег(ЭлементВыбора.Значение), 10) = "аналитика_" Тогда
					Представление = ПолучитьПредставлениеАналитики(ЭлементВыбора.Значение, ЭлементВыбора.Представление);
				КонецЕсли; 
				
				Элементы.Реквизит.СписокВыбора.Добавить(ЭлементВыбора.Значение, Представление);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокВыбора(Реквизит = Ложь, ТабличнаяЧасть = Ложь)

	СписокВыбора = Новый СписокЗначений();
	
	ТипОбъекта = Запись.Объект.ТипЗначенияОбъекта.Получить();
	Если ТипЗнч(ТипОбъекта) = Тип("Тип") Тогда
		МД = Метаданные.НайтиПоТипу(ТипОбъекта);
	Иначе
		МД = Метаданные.НайтиПоПолномуИмени(Запись.Объект.ИмяОбъектаПолное);
	КонецЕсли;
	
	Если МД = Неопределено Тогда
		Возврат СписокВыбора;
	КонецЕсли;
	
	Если Реквизит = Истина Тогда
		
		Если ТипЗнч(ТабличнаяЧасть) = Тип("Строка")
			И ТабличнаяЧасть <> "" Тогда
			
			ТекущаяТЧ = МД.ТабличныеЧасти.Найти(ТабличнаяЧасть);
			
			Если ТекущаяТЧ = Неопределено Тогда
				
				Сообщить("Указанной ТЧ " + ТабличнаяЧасть + " не существует", СтатусСообщения.Внимание);
				
				Запись.ТабличнаяЧасть     	 = Неопределено;
				Запись.ТабличнаяЧастьСиноним = Неопределено;
				
				Для каждого ТекущийРеквизит Из МД.Реквизиты Цикл
					СписокВыбора.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
				КонецЦикла;
				
				Для каждого ТекущийРеквизит Из МД.СтандартныеРеквизиты Цикл
					СписокВыбора.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
				КонецЦикла;
				
				//Команды
				СписокВыбора.Добавить("ФормаПровести", 			"Команда ""Провести""");
				СписокВыбора.Добавить("ФормаПровестиИЗакрыть", 	"Команда ""Провести и закрыть""");
				СписокВыбора.Добавить("ФормаЗаписать", 			"Команда ""Записать""");
				
				Возврат СписокВыбора;
				
			КонецЕсли;
			
			Для каждого ТекущийРеквизит Из ТекущаяТЧ.Реквизиты Цикл
				СписокВыбора.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
			КонецЦикла;
			
			Для каждого ТекущийРеквизит Из ТекущаяТЧ.СтандартныеРеквизиты Цикл
				СписокВыбора.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
			КонецЦикла;
			
			СписокВыбора.Добавить("Скопировать", 				"Команда ""Скопировать""");
			СписокВыбора.Добавить("Добавить", 					"Команда ""Добавить""");
			СписокВыбора.Добавить("Удалить", 					"Команда ""Удалить""");
			СписокВыбора.Добавить("КонтекстноеМенюСкопировать", "Команда контекстного меню ""Скопировать""");
			СписокВыбора.Добавить("КонтекстноеМенюДобавить", 	"Команда контекстного меню ""Добавить""");
			СписокВыбора.Добавить("КонтекстноеМенюУдалить", 	"Команда контекстного меню ""Удалить""");
			
		Иначе
			
			Для каждого ТекущийРеквизит Из МД.Реквизиты Цикл
				СписокВыбора.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
			КонецЦикла;
			
			Для каждого ТекущийРеквизит Из МД.СтандартныеРеквизиты Цикл
				СписокВыбора.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
			КонецЦикла;
			
			//Команды
			СписокВыбора.Добавить("ФормаПровести", 			"Команда ""Провести""");
			СписокВыбора.Добавить("ФормаПровестиИЗакрыть", 	"Команда ""Провести и закрыть""");
			СписокВыбора.Добавить("ФормаЗаписать", 			"Команда ""Записать""");
			
		КонецЕсли;
		
	ИначеЕсли ТабличнаяЧасть = Истина Тогда
		
		Для каждого ТекущаяТЧ Из МД.ТабличныеЧасти Цикл
			СписокВыбора.Добавить(ТекущаяТЧ.Имя, ТекущаяТЧ.Синоним);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СписокВыбора;
	
КонецФункции

&НаСервере
Функция ПолучитьПредставлениеАналитики(ИмяАналитики, ПредставлениеПоУмолчанию = "")

	НастройкиИзмерений = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("бит_НастройкиДополнительныхИзмерений");
	ЗначениеАналитики = НастройкиИзмерений.Получить(ИмяАналитики);

	Если ЗначениеАналитики = Неопределено Тогда
		Возврат ПредставлениеПоУмолчанию;
	КонецЕсли; 
	
	Возврат ЗначениеАналитики.Синоним;
	
КонецФункции

&НаКлиенте
Процедура УправлениеФормой()
	
	Если Запись.Объект = Неопределено Тогда
		
		Элементы.Объект.ПодсказкаВвода = "Объект не выбран.";
		
	Иначе
		
		Элементы.Объект.ПодсказкаВвода = Строка(ТипЗнч(Запись.Объект));
		
	КонецЕсли;
	
КонецПроцедуры