
&НаКлиенте
Процедура Прочитать(Команда)
	
	ПрочитатьНаСервере();	
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаСервере()
	
	НаборЗаписей_Объект = РеквизитФормыВЗначение("НаборЗаписей");
	
	НаборЗаписей_Объект.Отбор.Объект.Установить(Объект);
	НаборЗаписей_Объект.Отбор.Виза.Установить(Виза);
	НаборЗаписей_Объект.Прочитать();
	
	ЗначениеВДанныеФормы(НаборЗаписей_Объект, НаборЗаписей);
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	Если ПроверитьНаличиеЗаписейВРегистре() Тогда
	
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма);
		ПоказатьВопрос(Оповещение,"По указанным измерениям уже существуют записи в регистре. 
									|Продолжить выполнение операции?", Режим, 0);
		
		Возврат;
	КонецЕсли;
	
	ЗаписатьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

	ЗаписатьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	
	НаборЗаписей_Объект = РеквизитФормыВЗначение("НаборЗаписей");
	НаборЗаписей_Объект.Отбор.Объект.Установить(Объект);
	НаборЗаписей_Объект.Отбор.Виза.Установить(Виза);
	
	Для каждого ЭлементНабора Из НаборЗаписей_Объект Цикл
		ЭлементНабора.Объект = Объект;
		ЭлементНабора.Виза = Виза;
	КонецЦикла; 
	
	НаборЗаписей_Объект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектПриИзменении(Элемент)
	
	НаборЗаписей.Очистить();
	
	ТекущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
	ОбновитьЭлементыНаФорме(Истина, Истина, ТекущиеДанные);
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Объект = ВыбранноеЗначение;
	
	ТекущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
	ОбновитьЭлементыНаФорме(Истина, Истина, ТекущиеДанные);
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейТабличнаяЧастьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
	
	ЭлементВыбора = Элементы.НаборЗаписейТабличнаяЧасть.СписокВыбора.НайтиПоЗначению(ТекущиеДанные.ТабличнаяЧасть);
	Если ЭлементВыбора = Неопределено Тогда
		ТекущиеДанные.ТабличнаяЧастьСиноним = Неопределено;		
	Иначе
		ТекущиеДанные.ТабличнаяЧастьСиноним = ЭлементВыбора.Представление;
	КонецЕсли;
	
	ТекущиеДанные.Реквизит 		= Неопределено;
	ТекущиеДанные.РеквизитСиноним 	= Неопределено;
	ОбновитьЭлементыНаФорме(Истина, Ложь, ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейРеквизитПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
	
	ЭлементВыбора = Элементы.НаборЗаписейРеквизит.СписокВыбора.НайтиПоЗначению(ТекущиеДанные.Реквизит);
	Если ЭлементВыбора = Неопределено Тогда
		ТекущиеДанные.РеквизитСиноним = Неопределено;		
	Иначе
		ТекущиеДанные.РеквизитСиноним = ЭлементВыбора.Представление;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЭлементыНаФорме(Реквизит = Ложь, ТабличнаяЧасть = Ложь, ТекущиеДанные = Неопределено)
	
	Если Объект = Неопределено Тогда
		
		Элементы.НаборЗаписейТабличнаяЧасть.СписокВыбора.Очистить();
		Элементы.НаборЗаписейТабличнаяЧасть.Доступность = Ложь;
		
		Элементы.НаборЗаписейРеквизит.СписокВыбора.Очистить();
		Элементы.НаборЗаписейРеквизит.Доступность 		= Ложь;
		
		Если ТекущиеДанные <> Неопределено Тогда
		
			ТекущиеДанные.ТабличнаяЧасть 		= Неопределено;
			ТекущиеДанные.ТабличнаяЧастьСиноним = Неопределено;
			ТекущиеДанные.Реквизит 				= Неопределено;
			ТекущиеДанные.РеквизитСиноним 		= Неопределено;
		
		КонецЕсли; 
		
	Иначе
		
		Элементы.НаборЗаписейТабличнаяЧасть.Доступность = Истина;
		Элементы.НаборЗаписейРеквизит.Доступность 		= Истина;
		
		Если ТабличнаяЧасть Тогда
		
			СписокВыбора_ТабличнаяЧасть = ПолучитьСписокВыбора(Ложь, Истина);
			Элементы.НаборЗаписейТабличнаяЧасть.СписокВыбора.Очистить();
			Для каждого ЭлементВыбора Из СписокВыбора_ТабличнаяЧасть Цикл
				Элементы.НаборЗаписейТабличнаяЧасть.СписокВыбора.Добавить(ЭлементВыбора.Значение, ЭлементВыбора.Представление);
			КонецЦикла;
			
		КонецЕсли; 
		
		Если Реквизит Тогда
			
			Если ТекущиеДанные <> Неопределено Тогда
				СписокВыбора_Реквизит = ПолучитьСписокВыбора(Истина, ?(ЗначениеЗаполнено(ТекущиеДанные.ТабличнаяЧасть), ТекущиеДанные.ТабличнаяЧасть, Ложь));
			Иначе
				СписокВыбора_Реквизит = ПолучитьСписокВыбора(Истина, Ложь);
			КонецЕсли;

			Элементы.НаборЗаписейРеквизит.СписокВыбора.Очистить();
			Для каждого ЭлементВыбора Из СписокВыбора_Реквизит Цикл
				
				Представление = ЭлементВыбора.Представление;
				Если Найти(НРег(ЭлементВыбора.Значение), "аналитика_")
					И Лев(НРег(ЭлементВыбора.Значение), 10) = "аналитика_" Тогда
					Представление = ПолучитьПредставлениеАналитики(ЭлементВыбора.Значение, ЭлементВыбора.Представление);
				КонецЕсли; 
				
				Элементы.НаборЗаписейРеквизит.СписокВыбора.Добавить(ЭлементВыбора.Значение, Представление);
				
			КонецЦикла;
		
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокВыбора(Реквизит = Ложь, ТабличнаяЧасть = Ложь)
	
	СписокВыбора = Новый СписокЗначений();
	
	ТипОбъекта = Объект.ТипЗначенияОбъекта.Получить();
	Если ТипЗнч(ТипОбъекта) = Тип("Тип") Тогда
		МД = Метаданные.НайтиПоТипу(ТипОбъекта);
	Иначе
		МД = Метаданные.НайтиПоПолномуИмени(Объект.ИмяОбъектаПолное);
	КонецЕсли;
	
	Если МД = Неопределено Тогда
		Возврат СписокВыбора;
	КонецЕсли;
	
	Если Реквизит = Истина Тогда
	
		Если ТипЗнч(ТабличнаяЧасть) = Тип("Строка")
			И ТабличнаяЧасть <> "" Тогда
			
			ТекущаяТЧ = МД.ТабличныеЧасти.Найти(ТабличнаяЧасть);
			Если ТекущаяТЧ = Неопределено Тогда
				
				Сообщить("Указанной ТЧ " + ТабличнаяЧасть + " не существует", СтатусСообщения.Внимание);
				
				ТекущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
				Если ТекущиеДанные <> Неопределено Тогда
					ТекущиеДанные.ТабличнаяЧасть 		= Неопределено;
					ТекущиеДанные.ТабличнаяЧастьСиноним = Неопределено;
				КонецЕсли; 
				
				Для каждого ТекущийРеквизит Из МД.Реквизиты Цикл
					СписокВыбора.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
				КонецЦикла;
				Для каждого ТекущийРеквизит Из МД.СтандартныеРеквизиты Цикл
					СписокВыбора.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
				КонецЦикла;
				
				//Команды
				СписокВыбора.Добавить("ФормаПровести", 			"Команда ""Провести""");
				СписокВыбора.Добавить("ФормаПровестиИЗакрыть", 	"Команда ""Провести и закрыть""");
				СписокВыбора.Добавить("ФормаЗаписать", 			"Команда ""Записать""");
			
				Возврат СписокВыбора;
				
			КонецЕсли;
			
			Для каждого ТекущийРеквизит Из ТекущаяТЧ.Реквизиты Цикл
				СписокВыбора.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
			КонецЦикла;
			Для каждого ТекущийРеквизит Из ТекущаяТЧ.СтандартныеРеквизиты Цикл
				СписокВыбора.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
			КонецЦикла;
			
			СписокВыбора.Добавить("Скопировать", 				"Команда ""Скопировать""");
			СписокВыбора.Добавить("Добавить", 					"Команда ""Добавить""");
			СписокВыбора.Добавить("Удалить", 					"Команда ""Удалить""");
			СписокВыбора.Добавить("КонтекстноеМенюСкопировать", "Команда контекстного меню ""Скопировать""");
			СписокВыбора.Добавить("КонтекстноеМенюДобавить", 	"Команда контекстного меню ""Добавить""");
			СписокВыбора.Добавить("КонтекстноеМенюУдалить", 	"Команда контекстного меню ""Удалить""");
			
		Иначе
			
			Для каждого ТекущийРеквизит Из МД.Реквизиты Цикл
				СписокВыбора.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
			КонецЦикла;
			Для каждого ТекущийРеквизит Из МД.СтандартныеРеквизиты Цикл
				СписокВыбора.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
			КонецЦикла;
			
			//Команды
			СписокВыбора.Добавить("ФормаПровести", 			"Команда ""Провести""");
			СписокВыбора.Добавить("ФормаПровестиИЗакрыть", 	"Команда ""Провести и закрыть""");
			СписокВыбора.Добавить("ФормаЗаписать", 			"Команда ""Записать""");
			
		КонецЕсли; 
		
	ИначеЕсли ТабличнаяЧасть = Истина Тогда
		
		Для каждого ТекущаяТЧ Из МД.ТабличныеЧасти Цикл
			СписокВыбора.Добавить(ТекущаяТЧ.Имя, ТекущаяТЧ.Синоним);
		КонецЦикла;
		
	КонецЕсли; 

	Возврат СписокВыбора;
	
КонецФункции

&НаКлиенте
Процедура УправлениеФормой()
	
	Если НЕ ЗначениеЗаполнено(Объект) Тогда
		
		Элементы.Объект.ПодсказкаВвода = "Объект не выбран.";

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьНаличиеЗаписейВРегистре()

	НаборЗаписей_Проверка = РегистрыСведений.ок_НастройкиДоступностиПолейОбъектовДляРедактирования.СоздатьНаборЗаписей();
	НаборЗаписей_Проверка.Отбор.Объект.Установить(Объект);
	НаборЗаписей_Проверка.Отбор.Виза.Установить(Виза);
	НаборЗаписей_Проверка.Прочитать();
	
	Возврат НаборЗаписей_Проверка.Количество() > 0;

КонецФункции
 
&НаСервере
Функция ПолучитьПредставлениеАналитики(ИмяАналитики, ПредставлениеПоУмолчанию = "")

	НастройкиИзмерений = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("бит_НастройкиДополнительныхИзмерений");
	ЗначениеАналитики = НастройкиИзмерений.Получить(ИмяАналитики);

	Если ЗначениеАналитики = Неопределено Тогда
		Возврат ПредставлениеПоУмолчанию;
	КонецЕсли; 
	
	Возврат ЗначениеАналитики.Синоним;
	
КонецФункции

&НаКлиенте
Процедура НаборЗаписейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Копирование Тогда
		
		ТекущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
		ОбновитьЭлементыНаФорме(Истина, Истина, ТекущиеДанные);
	
	КонецЕсли; 
	
КонецПроцедуры
