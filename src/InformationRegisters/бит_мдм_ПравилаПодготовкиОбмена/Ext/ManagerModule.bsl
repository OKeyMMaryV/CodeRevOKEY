#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс
	
// Функция получает правила подготовки обмена.
// 
// Возвращаемое значение:
//  Правила - Соответствие.
// 
Функция ПолучитьПравила() Экспорт

	// Получение настроек подготовки обмена
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	бит_мдм_ПравилаПодготовкиОбмена.Источник КАК Источник,
	               |	бит_мдм_ПравилаПодготовкиОбмена.ВидИнформационнойБазыПриемник,
	               |	бит_мдм_ПравилаПодготовкиОбмена.ИнформационнаяБазаПриемник КАК ИнформационнаяБазаПриемник,
	               |	бит_мдм_ПравилаПодготовкиОбмена.Приемник КАК Приемник,
	               |	бит_мдм_ПравилаПодготовкиОбмена.Правило
	               |ИЗ
	               |	РегистрСведений.бит_мдм_ПравилаПодготовкиОбмена КАК бит_мдм_ПравилаПодготовкиОбмена
	               |ИТОГИ ПО
	               |	Источник";
	
	РезультатПравила = Запрос.Выполнить();
	
	// Подготовим массив источников для отбора
	ТабВрем = РезультатПравила.Выгрузить();
	ТабВрем.Свернуть("Источник");
	МассивИсточников = ТабВрем.ВыгрузитьКолонку("Источник");
	
	// Подготовим правила для отбора
	Правила = Новый Соответствие;
	
	ВыборкаИсточник = РезультатПравила.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаИсточник.Следующий() Цикл
		
		 МассивПравил = Новый Массив;
		
		 Выборка = ВыборкаИсточник.Выбрать();
		 
		 Пока Выборка.Следующий() Цикл
		 
		 	  НастройкаМиграции = Новый Структура;
			  НастройкаМиграции.Вставить("ВидИнформационнойБазы", Выборка.ВидИнформационнойБазыПриемник);
			  НастройкаМиграции.Вставить("ИнформационнаяБаза", Выборка.ИнформационнаяБазаПриемник);
			  НастройкаМиграции.Вставить("ОписаниеОбъекта", Выборка.Приемник);
			  НастройкаМиграции.Вставить("Правило", Выборка.Правило);
			  
			  МассивПравил.Добавить(НастройкаМиграции);
			  
		 КонецЦикла; // Выборка детали
		 
		 Правила.Вставить(ВыборкаИсточник.Источник, МассивПравил);
		 
	 КонецЦикла; // Выборка источник
	 
	РезДанные = Новый Структура;
	РезДанные.Вставить("МассивИсточников", МассивИсточников);
	РезДанные.Вставить("Правила", Правила);
	 
	Возврат РезДанные;
	
КонецФункции // ПолучитьПравила()

// Функция назначает правила регистрации, если они еще не назначены.
// 
// Параметры:
//    ИБ - СправочникСсылка.бит_мпд_ВидыИнформационныхБаз
//    вхВидОбъекта - Строка, ПеречислениеСсылка.бит_мдм_ВидыОбъектовОбмена
//    ИмяОбъекта - Строка.
// 
// Возвращаемое значение:
//  флСтатус - Число.
// 
Функция НазначитьПравило(ИБ, вхВидОбъекта, ИмяОбъекта, РежимСообщений = "Все") Экспорт
	
	РежимыВывода = бит_ОбщегоНазначения.ОпределитьРежимыВывода(РежимСообщений);
	
	флСтатус = 0;
	
	Если ТипЗнч(вхВидОбъекта) = Тип("ПеречислениеСсылка.бит_мдм_ВидыОбъектовОбмена") Тогда
		
		ВидОбъекта = вхВидОбъекта;
		
	Иначе	
		
		ВидОбъекта = Перечисления.бит_мдм_ВидыОбъектовОбмена[вхВидОбъекта];
		
	КонецЕсли; 
	
	ВидИБТекущая = Справочники.бит_мпд_ВидыИнформационныхБаз.ТекущаяИнформационнаяБаза;	
	ОписаниеОбъектаИсточник = Справочники.бит_мдм_ОписанияОбъектовОбмена.НайтиЭлемент(ВидИБТекущая, ВидОбъекта, ИмяОбъекта);
	
	ВидИБ = ИБ.ВидИнформационнойБазы;
	ОписаниеОбъектаПриемник = Справочники.бит_мдм_ОписанияОбъектовОбмена.НайтиЭлемент(ВидИБ, ВидОбъекта, ИмяОбъекта);
	
	Если ЗначениеЗаполнено(ОписаниеОбъектаПриемник) И ЗначениеЗаполнено(ОписаниеОбъектаИсточник) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Приемник", ОписаниеОбъектаПриемник);
		Запрос.УстановитьПараметр("Источник", ОписаниеОбъектаИсточник);
		
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	бит_мдм_ПравилаПодготовкиОбмена.Источник,
		               |	бит_мдм_ПравилаПодготовкиОбмена.ВидИнформационнойБазыПриемник,
		               |	бит_мдм_ПравилаПодготовкиОбмена.ИнформационнаяБазаПриемник,
		               |	бит_мдм_ПравилаПодготовкиОбмена.Приемник
		               |ИЗ
		               |	РегистрСведений.бит_мдм_ПравилаПодготовкиОбмена КАК бит_мдм_ПравилаПодготовкиОбмена
		               |ГДЕ
		               |	бит_мдм_ПравилаПодготовкиОбмена.Источник = &Источник
		               |	И бит_мдм_ПравилаПодготовкиОбмена.Приемник = &Приемник";
		
		Результат = Запрос.Выполнить();				
		
		Если Результат.Пустой() Тогда
			
			МенеджерЗаписи = РегистрыСведений.бит_мдм_ПравилаПодготовкиОбмена.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Источник                      = ОписаниеОбъектаИсточник;
			МенеджерЗаписи.ВидИнформационнойБазыПриемник = ВидИБ;
			МенеджерЗаписи.ИнформационнаяБазаПриемник    = ИБ;
			МенеджерЗаписи.Приемник                      = ОписаниеОбъектаПриемник;
			
			Попытка
				
				МенеджерЗаписи.Записать();
				флСтатус = 2;
				
				Если РежимыВывода.ВыводитьИнформацию Тогда
					
					ТекстСообщения = НСтр("ru = 'Назначены правила подготовки обмена для объекта обмена ""%1%"".'");
					ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, ОписаниеОбъектаПриемник);
					бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
					
				КонецЕсли; 
				
				
			Исключение
				
				Если РежимыВывода.ВыводитьОшибки Тогда
					
					ТекстСообщения = НСтр("ru = 'Не удалось назначить правила подготовки обмена для объекта обмена ""%1%""!'");
					ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, ОписаниеОбъектаПриемник);
					бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
					
				КонецЕсли; 
				
				флСтатус = -1;
				
			КонецПопытки;
			
		Иначе
			
			// Уже создано
			флСтатус = 1;
			
			Если РежимыВывода.ВыводитьИнформацию Тогда
				
				ТекстСообщения = НСтр("ru = 'Для объекта обмена ""%1%"" правила подготовки обмена уже назначены.'");
				ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, ОписаниеОбъектаПриемник);
				бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
				
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЕсли; 
	
	Возврат флСтатус;
	
КонецФункции // НазначитьПравило()

#КонецОбласти


#КонецЕсли
