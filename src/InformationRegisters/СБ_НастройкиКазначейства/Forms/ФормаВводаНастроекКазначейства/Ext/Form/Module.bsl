&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастройкиКазначейства = Метаданные.РегистрыСведений.СБ_НастройкиКазначейства;
	
	Если НЕ ПравоДоступа("Чтение", НастройкиКазначейства) Тогда
		Отказ = Истина;
	ИначеЕсли НЕ ПравоДоступа("Изменение", НастройкиКазначейства) Тогда	
	   	ТолькоПросмотр = Истина;
	КонецЕсли; 
	
	ТипСтатьиОборотов		= Новый ОписаниеТипов("СправочникСсылка.бит_СтатьиОборотов");
	ТипВизы					= Новый ОписаниеТипов("СправочникСсылка.бит_Визы");
	
	ТипДопРеквизиты			= Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.бит_ВидыДополнительныхАналитик");
		
	//Реквизиты формы
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("СтатусЗаявки_Ошибка", Новый ОписаниеТипов("СправочникСсылка.бит_СтатусыОбъектов")));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("ТипОбъекта_ВидыПереводов", Новый ОписаниеТипов("СправочникСсылка.бит_ОбъектыСистемы")));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("ОперативныйСценарийПланирования", Новый ОписаниеТипов("СправочникСсылка.СценарииПланирования")));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("СтатьяОборотов_ПриобретениеЗданий", ТипСтатьиОборотов));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("СтатьяОборотов_ПриобретениеЗемли", ТипСтатьиОборотов));
	
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Виза_БухгалтерБК", 		ТипВизы));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Виза_БухгалтерОС", 		ТипВизы));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Виза_ФинКонтрольИвест", 	ТипВизы));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Виза_ФинКонтрольОпер", 	ТипВизы));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Виза_Казначей", 			ТипВизы));
	
	МассивРеквизитов.Добавить(Новый РеквизитФормы("ДопРеквизит_ПрофильРазноски", 			ТипДопРеквизиты));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("ДопРеквизит_Инициатор", 					ТипДопРеквизиты));
	
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Свойство_СрокИсполнения", 					Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения")));
	
	МассивРеквизитов.Добавить(Новый РеквизитФормы("СписокСтатейОборотов_ПриобритениеОборудования", Новый ОписаниеТипов("СписокЗначений")));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("СписокОрганизаций_НеПогашатьЗадолженность", Новый ОписаниеТипов("СписокЗначений")));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("СписокОрганизаций_ФормироватьЗаявкиНаОплату", Новый ОписаниеТипов("СписокЗначений")));
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-17 (#3065)
	МассивРеквизитов.Добавить(Новый РеквизитФормы("ок_ОперационныйСценарийПланирования"	 , Новый ОписаниеТипов("СправочникСсылка.СценарииПланирования")));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("ок_ИнвестиционныйСценарийПланирования", Новый ОписаниеТипов("СправочникСсылка.СценарииПланирования")));
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-17 (#3065)	
	
	//СофтЛаб Начало 2019-08-07 #3420
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_ФормированиеЗнРДС_КалендарьОплат",									Новый ОписаниеТипов("СправочникСсылка.ПроизводственныеКалендари"),,								"Календарь оплат"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_ФормированиеЗнРДС_КоличествоРабочихДнейИсполненияЗадачи", 			Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный)),,"Количество рабочих дней исполнения задачи"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_ФормированиеЗнРДС_СписокСчетовВзаиморасчетовДляФормированияЗнРДС",	Новый ОписаниеТипов("СписокЗначений"),,															"Список счетов для формирования заявок на оплату"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_ФормированиеЗнРДС_СписокСчетовПроверкиДЗ", 							Новый ОписаниеТипов("СписокЗначений"),,															"Список счетов проверки ДЗ"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_ФормированиеЗнРДС_СтатусыЗаявокДляИсключений", 						Новый ОписаниеТипов("СписокЗначений"),,															"Статусы заявок для исключений"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_ФормированиеЗнРДС_СоздаватьЗаявкиНеПозднее", 							Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный)),,"Создавать заявки не позднее"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_ФормированиеЗнРДС_СвойствоПриоритетаОплаты", 							Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения"),,			"Свойство приоритета оплаты"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_ФормированиеЗнРДС_РуководительГруппыУчета",							Новый ОписаниеТипов("СправочникСсылка.бит_РолиИсполнителей"),,									"Руководитель группы учета"));
	//СофтЛаб Конец 2019-08-07 #3420
	
	//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-10-19 (#3437)
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_ВидОперации", 													Новый ОписаниеТипов("ПеречислениеСсылка.бит_ВидыОперацийЗаявкаНаРасходование"),, 				"Вид операции"));	
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_ФормаОплаты", 													Новый ОписаниеТипов("ПеречислениеСсылка.бит_ВидыДенежныхСредств"),, 							"Форма оплаты"));	
    МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_Статус",														    Новый ОписаниеТипов("СправочникСсылка.бит_СтатусыОбъектов"),, 									"Статус"));	
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_Важность", 														Новый ОписаниеТипов("ПеречислениеСсылка.бит_Важность"),, 										"Важность"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_СтатьяОборотовБДДС", 											Новый ОписаниеТипов("СправочникСсылка.бит_СтатьиОборотов"),, 									"Статья оборотов БДДС"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_Валюта", 														Новый ОписаниеТипов("СправочникСсылка.Валюты"),, 												"Валюта"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_СтавкаНДС", 														Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"),, 											"Ставка НДС"));
    МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_ТипЗаявки", 														Новый ОписаниеТипов("ПеречислениеСсылка.бит_ТипыЗаявокНаРасходованиеСредств"),, 				"Тип заявки"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_ТипПлатежа", 													Новый ОписаниеТипов("СправочникСсылка.бит_ТипыПлатежей"),, 										"Тип платежа"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_ПрофильРазноски",												Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(10)),, 								"Профиль разноски"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_НеВключатьВПлатежныйКалендарь", 									Новый ОписаниеТипов("Булево"),, 																"Не включать в платежный календарь"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_КазначейскаяЗаявка", 											Новый ОписаниеТипов("Булево"),, 																"Казначейская заявка"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_СверхБюджета", 													Новый ОписаниеТипов("Булево"),, 																"Сверх бюджета"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_НаличиеДЗ", 														Новый ОписаниеТипов("Булево"),, 																"НаличиеДЗ"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_ОснованиеПлатежа", 												Новый ОписаниеТипов("ПеречислениеСсылка.бит_ОснованияПлатежа"),, 								"Основание платежа"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_УсловияПоКурсу", 												Новый ОписаниеТипов("ПеречислениеСсылка.бит_УсловияПоКурсу"),, 									"Условия по курсу"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_Очередность", 													Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(1, 0, ДопустимыйЗнак.Неотрицательный)),,"Очередность"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_ВидПеречисления", 												Новый ОписаниеТипов("ПеречислениеСсылка.ВидыПеречисленийВБюджет"),, 							"Вид перечисления"));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Ок_БОСС_СтатусСоставителя",												Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(2)),, 								"Статус составителя"));

	//ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-10-19 (#3437)

	ИзменитьРеквизиты(МассивРеквизитов);
	
	//Инициализация списков
	ЭтаФорма["СписокСтатейОборотов_ПриобритениеОборудования"].ТипЗначения 	= ТипСтатьиОборотов;
	ЭтаФорма["СписокОрганизаций_НеПогашатьЗадолженность"].ТипЗначения 		= Новый ОписаниеТипов("СправочникСсылка.Организации");
	ЭтаФорма["СписокОрганизаций_ФормироватьЗаявкиНаОплату"].ТипЗначения 	= Новый ОписаниеТипов("СправочникСсылка.Организации");
	
	//СофтЛаб Начало 2019-08-07 #3420
	ЭтаФорма["Ок_ФормированиеЗнРДС_СписокСчетовВзаиморасчетовДляФормированияЗнРДС"].ТипЗначения = Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный");
	ЭтаФорма["Ок_ФормированиеЗнРДС_СписокСчетовПроверкиДЗ"].ТипЗначения 						= Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный");
	ЭтаФорма["Ок_ФормированиеЗнРДС_СтатусыЗаявокДляИсключений"].ТипЗначения 					= Новый ОписаниеТипов("СправочникСсылка.бит_СтатусыОбъектов");
	//СофтЛаб Конец 2019-08-07 #3420
	
	//Элементы формы
	ГруппаКонстанты = Элементы.Константы;
	
	ДобавитьЭлементФормы("СтатусЗаявки_Ошибка"
		, "Статус заявки ""Ошибка"""
		, ГруппаКонстанты
		);
	
	ДобавитьЭлементФормы("ТипОбъекта_ВидыПереводов"
		, "Тип ""Виды переводов"""
		, ГруппаКонстанты
		);
		
	ДобавитьЭлементФормы("ОперативныйСценарийПланирования"
		, "Оперативный сценарий планирования"
		, ГруппаКонстанты
		);
	
	ДобавитьЭлементФормы("СтатьяОборотов_ПриобретениеЗданий"
		, "Приобретение зданий"
		, ГруппаКонстанты
		);
	
	ДобавитьЭлементФормы("СтатьяОборотов_ПриобретениеЗемли"
		, "Приобретение земли"
		, ГруппаКонстанты
		);
	
	ДобавитьЭлементФормы("СписокСтатейОборотов_ПриобритениеОборудования"
		, "Приобретение оборудования"
		, ГруппаКонстанты
		);
		
	ДобавитьЭлементФормы("ДопРеквизит_ПрофильРазноски"
		, "Доп. реквизит ""Профиль разноски"""
		, ГруппаКонстанты
		);
	
	ДобавитьЭлементФормы("ДопРеквизит_Инициатор"
		, "Доп. реквизит ""Инициатор"""
		, ГруппаКонстанты
		);
		
	ДобавитьЭлементФормы("Свойство_СрокИсполнения"
		, "Свойство ""Срок исполнения"""
		, ГруппаКонстанты
		);
	
	ДобавитьЭлементФормы("СписокОрганизаций_НеПогашатьЗадолженность"
		, "Не погашать задолженность"
		, ГруппаКонстанты
		);
	
	ДобавитьЭлементФормы("СписокОрганизаций_ФормироватьЗаявкиНаОплату"
		, "Формировать заявки на оплату (организации)"
		, ГруппаКонстанты
		);
		
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-05 (#3065)
	ДобавитьЭлементФормы("ок_ОперационныйСценарийПланирования"
		, "Операционный сценарий планирования"
		, ГруппаКонстанты
		);
	ДобавитьЭлементФормы("ок_ИнвестиционныйСценарийПланирования"
		, "Инвестиционный сценарий планирования"
		, ГруппаКонстанты
		);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-05 (#3065)
	
	//СофтЛаб Начало 2019-08-07 #3420
	ГруппаЗнРДС = ДобавитьГруппуФормы("ок_НастройкиФормированияЗаявокНаОплату"
					, "Настройки формирования заявок на оплату"
					, ГруппаКонстанты
					);
		
	Для каждого РеквизитФормы Из ЭтаФорма.ПолучитьРеквизиты() Цикл
	
		Если СтрНайти(НРег(РеквизитФормы.Имя), НРег("Ок_ФормированиеЗнРДС")) <> 0 Тогда
		
			ДобавитьЭлементФормы(РеквизитФормы.Имя
				, РеквизитФормы.Заголовок
				, ГруппаЗнРДС
				);
		
		КонецЕсли; 
	
	КонецЦикла;
	//СофтЛаб Конец 2019-08-07 #3420
	
	//Визы
	ГруппаВизы = Элементы.Визы;
		
	ДобавитьЭлементФормы("Виза_БухгалтерБК"
		, "Бухгалтер (банк.группа)"
		, ГруппаВизы
		);
	
	ДобавитьЭлементФормы("Виза_БухгалтерОС"
		, "Бухгалтер (ОС)"
		, ГруппаВизы
		);
	
	ДобавитьЭлементФормы("Виза_ФинКонтрольИвест"
		, "Финансовый контролер (инвестиционный)"
		, ГруппаВизы
		);
	
	ДобавитьЭлементФормы("Виза_ФинКонтрольОпер"
		, "Финансовый контролер (операционный)"
		, ГруппаВизы
		);
	
	ДобавитьЭлементФормы("Виза_Казначей"
		, "Казначей"
		, ГруппаВизы
		);
		
	//Клиент банк
	ГруппаКлиентБанк = Элементы.КлиентБанк;
	
	//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-10-19 (#3437)
	
	//БОСС
	СтраницаБОСС = Элементы.БОСС;
	
	ГруппаБОСС = ДобавитьГруппуФормы("ок_ЗагрузкаАлиментовИзБОСС"
					, "Загрузка алиментов из БОСС"
					, СтраницаБОСС
					);
	
	Для каждого РеквизитФормы Из ЭтаФорма.ПолучитьРеквизиты() Цикл
		
		Если СтрНайти(НРег(РеквизитФормы.Имя), НРег("Ок_БОСС")) <> 0 Тогда
			
			ДобавитьЭлементФормы(РеквизитФормы.Имя
			, РеквизитФормы.Заголовок
			, ГруппаБОСС
			);
			
		КонецЕсли; 
		
	КонецЦикла;
	
	Элементы.Ок_БОСС_ПрофильРазноски.УстановитьДействие("НачалоВыбора", "Ок_БОСС_ПрофильРазноскиНачалоВыбора");
	Элементы.Ок_БОСС_ПрофильРазноски.КнопкаВыбора = Истина;
	//ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-10-19 (#3437)

	
	//Заполним автоматически
	
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-11-05 (#4407)
	//ВосстановитьЗначенияКонстант();	
	ВосстановитьЗначенияНастроекИзКонстант();
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-11-05 (#4407)
	
	ЗаполнитьЗначенияПоУмолчанию();
	
	//ОКЕЙ Рычаков А.C. (СофтЛаб) Начало 2019-12-08 (#3437)
	МассивРеквизитов = Новый Массив; 

	РеквизитыФормы = ЭтаФорма.ПолучитьРеквизиты(); 
	
	Для Каждого Реквизит Из РеквизитыФормы Цикл	
		МассивРеквизитов.Добавить(Реквизит.Имя);		
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СБ_НастройкиКазначейства.Идентификатор КАК Идентификатор,
	                      |	СБ_НастройкиКазначейства.Значение КАК Значение,
	                      |	СБ_НастройкиКазначейства.ЗначениеВХранилище КАК ЗначениеВХранилище,
	                      |	СБ_НастройкиКазначейства.ХранилищеЗначения КАК ХранилищеЗначения,
	                      |	СБ_НастройкиКазначейства.ок_ПредставлениеНастройки КАК ПредставлениеНастройки,
	                      |	СБ_НастройкиКазначейства.ок_ПредставлениеРаздела КАК ПредставлениеРаздела,
	                      |	СБ_НастройкиКазначейства.ок_Комментарий КАК Комментарий,
	                      |	ВЫБОР
	                      |		КОГДА СБ_НастройкиКазначейства.Идентификатор В (&МассивРеквизитов)
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК ЕстьРеквизит
	                      |ПОМЕСТИТЬ ВТ_ТаблицаДанных
	                      |ИЗ
	                      |	РегистрСведений.СБ_НастройкиКазначейства КАК СБ_НастройкиКазначейства
	                      |ГДЕ
	                      |	СБ_НастройкиКазначейства.ок_ПредставлениеРаздела <> """"
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ТаблицаДанных.Идентификатор КАК Идентификатор,
	                      |	ВТ_ТаблицаДанных.Значение КАК Значение,
	                      |	ВТ_ТаблицаДанных.ЗначениеВХранилище КАК ЗначениеВХранилище,
	                      |	ВТ_ТаблицаДанных.ХранилищеЗначения КАК ХранилищеЗначения,
	                      |	ВТ_ТаблицаДанных.ПредставлениеНастройки КАК ПредставлениеНастройки,
	                      |	ВТ_ТаблицаДанных.ПредставлениеРаздела КАК ПредставлениеРаздела,
	                      |	ВТ_ТаблицаДанных.Комментарий КАК Комментарий
	                      |ИЗ
	                      |	ВТ_ТаблицаДанных КАК ВТ_ТаблицаДанных
	                      |ГДЕ
	                      |	НЕ ВТ_ТаблицаДанных.ЕстьРеквизит
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ТаблицаДанных.Идентификатор КАК Идентификатор,
	                      |	ВТ_ТаблицаДанных.Значение КАК Значение,
	                      |	ВТ_ТаблицаДанных.ЗначениеВХранилище КАК ЗначениеВХранилище,
	                      |	ВТ_ТаблицаДанных.ХранилищеЗначения КАК ХранилищеЗначения,
	                      |	ВТ_ТаблицаДанных.ПредставлениеНастройки КАК ПредставлениеНастройки,
	                      |	ВТ_ТаблицаДанных.ПредставлениеРаздела КАК ПредставлениеРаздела,
	                      |	ВТ_ТаблицаДанных.Комментарий КАК Комментарий
	                      |ИЗ
	                      |	ВТ_ТаблицаДанных КАК ВТ_ТаблицаДанных
	                      |ИТОГИ ПО
	                      |	ПредставлениеРаздела");
	
	Запрос.УстановитьПараметр("МассивРеквизитов",МассивРеквизитов);
						  
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	МассивРеквизитов = Новый Массив;
	
	ВыборкаПоРеквизитам = РезультатЗапроса[1].Выбрать(); 
	
	Пока ВыборкаПоРеквизитам.Следующий() Цикл
		
		МассивТипов = Новый Массив;
			
		Если ВыборкаПоРеквизитам.ЗначениеВХранилище Тогда
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-07-08 (#4242)
			//МассивТипов.Добавить(ТипЗНЧ(ВыборкаПоРеквизитам.ХранилищеЗначения.Получить()));	
			ЗначениеХранилища = ВыборкаПоРеквизитам.ХранилищеЗначения.Получить();
			Если ЗначениеХранилища = Неопределено Тогда
				МассивТипов.Добавить(Тип("СписокЗначений"));	
			Иначе
				МассивТипов.Добавить(ТипЗНЧ(ВыборкаПоРеквизитам.ХранилищеЗначения.Получить()));	
			КонецЕсли; 
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-07-08 (#4242)
		Иначе	
			МассивТипов.Добавить(ТипЗНЧ(ВыборкаПоРеквизитам.Значение));
		КонецЕсли;
			
		мОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
			
		МассивРеквизитов.Добавить(Новый РеквизитФормы(ВыборкаПоРеквизитам.Идентификатор, мОписаниеТипов,,ВыборкаПоРеквизитам.ПредставлениеНастройки));
		
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивРеквизитов);
	

	ВыборкаПредставлениеРаздела = РезультатЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Страница = 0;
	
	СоответствиеСтраниц = Новый Соответствие;
	
	Для Каждого ТекСтраница Из Элементы.ГруппаСтраницы.ПодчиненныеЭлементы Цикл
		СоответствиеСтраниц.Вставить(НРег(?(ЗначениеЗаполнено(ТекСтраница.Заголовок),ТекСтраница.Заголовок,ТекСтраница.Имя)),ТекСтраница);
	КонецЦикла;	
		
	Пока ВыборкаПредставлениеРаздела.Следующий() Цикл
		
		ПредставлениеРаздела = ВыборкаПредставлениеРаздела.ПредставлениеРаздела;
		
		ВыборкаДетальныеЗаписи = ВыборкаПредставлениеРаздела.Выбрать();
		
		НайденноеСоответствие = СоответствиеСтраниц.Получить(НРег(ПредставлениеРаздела));
		
		Если НайденноеСоответствие <> Неопределено Тогда 
			ГруппаВкладка = НайденноеСоответствие;	
		Иначе 
			
			ГруппаВкладка = Элементы.Добавить("ГруппаСтраница" + Страница, Тип("ГруппаФормы"), Элементы.ГруппаСтраницы);
			ГруппаВкладка.Вид = ВидГруппыФормы.Страница;
			ГруппаВкладка.Заголовок	= ПредставлениеРаздела;
			ГруппаВкладка.РастягиватьПоВертикали = Истина;
			ГруппаВкладка.РастягиватьПоГоризонтали = Истина;
			Страница = Страница + 1;
			
		КонецЕсли;
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			НайденныйЭлемент = Элементы.Найти(ВыборкаДетальныеЗаписи.Идентификатор);
			
			Если НайденныйЭлемент <> Неопределено Тогда 
				Элементы.Переместить(НайденныйЭлемент,ГруппаВкладка);
			Иначе 	
				ПредставлениеНастройки = ?(ПустаяСтрока(ВыборкаДетальныеЗаписи.ПредставлениеНастройки),ВыборкаДетальныеЗаписи.Идентификатор,ВыборкаДетальныеЗаписи.ПредставлениеНастройки);
				
				НовыйЭлемент = Элементы.Добавить(ВыборкаДетальныеЗаписи.Идентификатор, Тип("ПолеФормы"), ГруппаВкладка);
				НовыйЭлемент.ПутьКДанным = ВыборкаДетальныеЗаписи.Идентификатор;
				НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
				НовыйЭлемент.Заголовок = ПредставлениеНастройки;
				НовыйЭлемент.Подсказка = ВыборкаДетальныеЗаписи.Комментарий;
				НовыйЭлемент.УстановитьДействие("ПриИзменении", "ЭлементФормыПриИзменении");
				
				Если ВыборкаДетальныеЗаписи.ЗначениеВХранилище Тогда
					ЗначениеИзХранилища = ВыборкаДетальныеЗаписи.ХранилищеЗначения.Получить();
					ЭтаФорма[ВыборкаДетальныеЗаписи.Идентификатор] = ЗначениеИзХранилища;
					Если ТипЗНЧ(ЗначениеИзХранилища) = Тип("СписокЗначений") И 
						ЗначениеИзХранилища.Количество() > 0 Тогда
						МассивТиповСпискаЗначений = Новый Массив;
						МассивТиповСпискаЗначений.Добавить(ТипЗнч(ЗначениеИзХранилища.Получить(0).Значение));
						ЭтаФорма[ВыборкаДетальныеЗаписи.Идентификатор].ТипЗначения = Новый ОписаниеТипов(МассивТиповСпискаЗначений);
					КонецЕсли;
				Иначе	
					ЭтаФорма[ВыборкаДетальныеЗаписи.Идентификатор] = ВыборкаДетальныеЗаписи.Значение;		
				КонецЕсли; 
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	//ОКЕЙ Рычаков А.C. (СофтЛаб) Конец  2019-12-08 (#3437)
	
КонецПроцедуры

//СофтЛаб Начало 2019-08-07 #3420
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭтаФорма["Ок_ФормированиеЗнРДС_СписокСчетовВзаиморасчетовДляФормированияЗнРДС"].ТипЗначения = 	Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный");
	ЭтаФорма["Ок_ФормированиеЗнРДС_СписокСчетовПроверкиДЗ"].ТипЗначения = 							Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный");
	ЭтаФорма["Ок_ФормированиеЗнРДС_СтатусыЗаявокДляИсключений"].ТипЗначения = 						Новый ОписаниеТипов("СправочникСсылка.бит_СтатусыОбъектов");
	
КонецПроцедуры
//СофтЛаб Конец 2019-08-07 #3420

// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-11-05 (#4407)
// Устарела. Следует использовать "ВосстановитьЗначенияНастроекИзКонстант"
// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-11-05 (#4407)
&НаСервере
Процедура ВосстановитьЗначенияКонстант()

	Для каждого Реквизит Из ПолучитьРеквизиты() Цикл
		
		ВосстановитьЗначениеКонстанты(Реквизит.Имя);
		
	КонецЦикла;

КонецПроцедуры

// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-11-05 (#4407)
// Устарела. Следует использовать "ВосстановитьЗначенияНастроекИзКонстант"
//ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-11-05 (#4407)
&НаСервере
Процедура ВосстановитьЗначениеКонстанты(Идентификатор)

	ЭтаФорма[Идентификатор] = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты(Идентификатор);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияПоУмолчанию()

	Если НЕ ЗначениеЗаполнено(ЭтаФорма["СтатьяОборотов_ПриобретениеЗданий"]) Тогда
		ЭтаФорма["СтатьяОборотов_ПриобретениеЗданий"] = Справочники.бит_СтатьиОборотов.НайтиПоКоду("000000371");		
	КонецЕсли; 	

	Если НЕ ЗначениеЗаполнено(ЭтаФорма["СтатьяОборотов_ПриобретениеЗемли"]) Тогда
		ЭтаФорма["СтатьяОборотов_ПриобретениеЗемли"] = Справочники.бит_СтатьиОборотов.НайтиПоКоду("000000372");		
	КонецЕсли; 	

	Если НЕ ЗначениеЗаполнено(ЭтаФорма["СписокСтатейОборотов_ПриобритениеОборудования"]) Тогда
		
		СписокСтатейОборотов_ПриобритениеОборудования = ЭтаФорма["СписокСтатейОборотов_ПриобритениеОборудования"];
		СписокСтатейОборотов_ПриобритениеОборудования.Добавить(Справочники.бит_СтатьиОборотов.НайтиПоКоду("000000373"));		
		СписокСтатейОборотов_ПриобритениеОборудования.Добавить(Справочники.бит_СтатьиОборотов.НайтиПоКоду("000000374"));		
		СписокСтатейОборотов_ПриобритениеОборудования.Добавить(Справочники.бит_СтатьиОборотов.НайтиПоКоду("000000375"));
		
	КонецЕсли; 	
	
	Если НЕ ЗначениеЗаполнено(СтатьяДДС_Инкассация) Тогда
		СтатьяДДС_Инкассация =  Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("94000000090");	
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(ШаблонСообщений) Тогда
		
		ШаблонСообщенийОбъект = Справочники.бит_фн_ШаблоныСообщений.СоздатьЭлемент();
		ШаблонСообщенийОбъект.Наименование 			= "Проведение списания с расчетного счета";
		ШаблонСообщенийОбъект.ТипТекстаСообщения 	= "ПростойТекст";
		
		ШаблонСообщенийОбъект.Сообщение_Заголовок =
		"Проведен документ ""Списание с расчетного счета № {{ТекущийОбъект.Номер}} от {{ТекущийОбъект.Дата}}""";
		
		ШаблонСообщенийОбъект.Сообщение_Текст = 
		"Проведен документ ""Списание с расчетного счета № {{ТекущийОбъект.Номер}} от {{ТекущийОбъект.Дата}}""
		|№ заявки:		{{НомерЗаявки}} 
		|Плательщик: 	{{ТекущийОбъект.Организация}}
		|Контрагент: 	{{ТекущийОбъект.Контрагент}}
		|Сумма:			{{ТекущийОбъект.СуммаДокумента}}
		|Назначение плажежа: {{ТекущийОбъект.НазначениеПлатежа}}";
		
		ШаблонСообщенийОбъект.Сообщение_Подпись = 
		"Письмо отправлено автоматичсекой рассылкой информационной базы БИТ:Финанс.
		|Просьба не отвечать на это письмо.";
		
		ШаблонСообщенийОбъект.Записать();
		
		ШаблонСообщений = ШаблонСообщенийОбъект.Ссылка;
		
		СБ_КазначействоСервер.УстановитьЗначениеКонстанты(ШаблонСообщений, ЭтаФорма["ШаблонСообщений"]);		
		
	КонецЕсли; 
	
КонецПроцедуры
 

&НаСервере
Процедура ПолучитьНайтиСчет(Идентификатор, Код)
	
	Счет = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты(Идентификатор);
	Если НЕ ЗначениеЗаполнено(Счет) Тогда
		ЭтаФорма[Идентификатор] = ПланыСчетов.Хозрасчетный.НайтиПоКоду(Код);	
	Иначе
		ЭтаФорма[Идентификатор] = Счет;	
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция ДобавитьЭлементФормы(Идентификатор, Заголовок, Родитель)
	
	НовыйЭлемент = Элементы.Добавить(Идентификатор, Тип("ПолеФормы"), Родитель);
	НовыйЭлемент.ПутьКДанным 					= Идентификатор;
	НовыйЭлемент.Вид 							= ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.Заголовок						= Заголовок;
	
	Возврат НовыйЭлемент;
	
КонецФункции

//СофтЛаб Начало 2019-08-07 #3420
&НаСервере
Функция ДобавитьГруппуФормы(Идентификатор, Заголовок, Родитель)
	
	НовыйЭлемент = Элементы.Добавить(Идентификатор, Тип("ГруппаФормы"), Родитель);
	НовыйЭлемент.Вид 							= ВидГруппыФормы.ОбычнаяГруппа;
	НовыйЭлемент.Заголовок						= Заголовок;
	
	Возврат НовыйЭлемент;
	
КонецФункции
//СофтЛаб Конец 2019-08-07 #3420

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьКонстантыНаСервере();	
КонецПроцедуры

&НаСервере
Процедура СохранитьКонстантыНаСервере()
	Для каждого Реквизит Из ПолучитьРеквизиты() Цикл
		
		ЗначениеРеквизита = ЭтаФорма[Реквизит.Имя];
		Если ТипЗнч(ЗначениеРеквизита) = Тип("СписокЗначений") Тогда
		//ОКЕЙ Рычаков А.C. (СофтЛаб) Начало 2019-12-08 (#3437)	
		//	СБ_КазначействоСервер.УстановитьЗначениеКонстанты(Реквизит.Имя, ЭтаФорма[Реквизит.Имя], Истина)
		//Иначе
		//	СБ_КазначействоСервер.УстановитьЗначениеКонстанты(Реквизит.Имя, ЭтаФорма[Реквизит.Имя]);
			СБ_КазначействоСервер.УстановитьЗначениеКонстантыNEW(Реквизит.Имя, ЭтаФорма[Реквизит.Имя], Истина)
		Иначе
			СБ_КазначействоСервер.УстановитьЗначениеКонстантыNEW(Реквизит.Имя, ЭтаФорма[Реквизит.Имя], Ложь);
		//ОКЕЙ Рычаков А.C. (СофтЛаб) Конец  2019-12-08 (#3437)	
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-10-20 (#3437)
Процедура Ок_БОСС_ПрофильРазноскиНачалоВыбора (Элемент, ДанныеВыбора, СтандартнаяОбработка)	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Организация,  СБ_ПрофильРазноски", ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"), ЭтаФорма.Ок_БОСС_ПрофильРазноски);
	ОповещениеОВыбореПрофиля = Новый ОписаниеОповещения ("ЗавершениеВыбораПрофиляРазноски", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.СБ_ФормаВыбораПрофиляРазноски", ПараметрыФормы, ЭтаФорма,,,,ОповещениеОВыбореПрофиля);	
КонецПроцедуры

Процедура ЗавершениеВыбораПрофиляРазноски (СтруктураВыбора, ДополнительныеПараметры)
	Если ТипЗнч(СтруктураВыбора) = Тип("Структура") И СтруктураВыбора.Свойство("Код") Тогда	
		ЭтаФорма.Ок_БОСС_ПрофильРазноски = СтруктураВыбора.Код;
	КонецЕсли;	
КонецПроцедуры
//ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-10-20 (#3437)

// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-11-05 (#4407)
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВосстановитьЗначенияНастроекИзКонстант()
	
	ИдентификаторыНастроек = Новый Массив;
	
	РеквизитыФормы = ПолучитьРеквизиты();
	
	Для каждого РеквизитФормы Из РеквизитыФормы Цикл
		ИдентификаторыНастроек.Добавить(РеквизитФормы.Имя);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначенияКонстант.Идентификатор КАК Идентификатор,
	|	ЗначенияКонстант.Значение КАК Значение,
	|	ЗначенияКонстант.ЗначениеВХранилище КАК ЗначениеВХранилище,
	|	ЗначенияКонстант.ХранилищеЗначения КАК ХранилищеЗначения
	|ИЗ
	|	РегистрСведений.СБ_НастройкиКазначейства КАК ЗначенияКонстант
	|ГДЕ
	|	ЗначенияКонстант.Идентификатор В(&ИдентификаторыНастроек)";
	
	Запрос.УстановитьПараметр("ИдентификаторыНастроек", ИдентификаторыНастроек);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЭтотОбъект[Выборка.Идентификатор] = ?(Выборка.ЗначениеВХранилище, 
													Выборка.ХранилищеЗначения.Получить(),
													Выборка.Значение);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-11-05 (#4407)