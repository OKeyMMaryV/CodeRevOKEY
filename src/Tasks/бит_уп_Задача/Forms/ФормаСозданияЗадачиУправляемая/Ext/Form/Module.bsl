
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("СтруктураЗадачи") Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры.СтруктураЗадачи);
	КонецЕсли;
	
	Если Параметры.Свойство("Основание") Тогда
		Предмет = Параметры.Основание;
	КонецЕсли;
	
	Параметры.Свойство("ЗадачаОснование",ЗадачаОснование);
	
	Если ЗначениеЗаполнено(ЗадачаОснование) Тогда
	
		Важность       = ЗадачаОснование.Важность;
		СрокИсполнения = ЗадачаОснование.СрокИсполнения;
		Наименование   = ЗадачаОснование.Наименование;
		Описание       = ЗадачаОснование.Описание;
		Предмет        = ЗадачаОснование.Предмет;
	
	КонецЕсли; 
	
	// Изменение кода. Начало. 05.04.2017{{
	Если Параметры.Свойство("ЗадачаКопирование") Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры.ЗадачаКопирование)
	КонецЕсли;
	// Изменение кода. Конец. 05.04.2017}}
	
	Важность = Перечисления.бит_уп_ВидыВажностиЗадач.Средняя;
	
	МаксКоличествоОбъектов = бит_уп_Сервер.МаксимальноеКоличествоОбъектовАдресации();
	НастройкиАдресации = Справочники.бит_РолиИсполнителей.НастройкиОбъектовАдресации(РольИсполнителя);	
	
	СрокИсполнения = КонецДня(ТекущаяДата());
	
	УстановитьВидимость();
	
	Если ЗначениеЗаполнено(ЗадачаОснование) Тогда
		
		ЭтаФорма.Заголовок = "Создание задачи на основании";
		
	Иначе	
		
		ЭтаФорма.Заголовок = "Создание задачи";
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если СпособАдресации = 0 Тогда
		
		// Адресация по исполнителю - РольИсполнителя не обязательна.
		Сч =  ПроверяемыеРеквизиты.Найти("РольИсполнителя");
		
		Если ТипЗнч(Сч) = Тип("Число") Тогда
		
			ПроверяемыеРеквизиты.Удалить(Сч);
		
		КонецЕсли; 
		
	ИначеЕсли СпособАдресации = 1 Тогда	
		
		// Адресация по роли - Исполнитель не обязательный.
		Сч =  ПроверяемыеРеквизиты.Найти("Исполнитель");
		
		Если ТипЗнч(Сч) = Тип("Число") Тогда
		
			ПроверяемыеРеквизиты.Удалить(Сч);
		
		КонецЕсли; 
		
		Для Сч = 1 По МаксКоличествоОбъектов Цикл
		
			ИмяРеквизита = "ОбъектАдресации_"+Сч;
			
			ТекНастройка = Неопределено;
			НастройкиАдресации.Свойство(ИмяРеквизита, ТекНастройка);
			
			Если НЕ ТекНастройка = Неопределено И ТекНастройка.Обязательный Тогда
			
				ПроверяемыеРеквизиты.Добавить(ИмяРеквизита);
			
			КонецЕсли; 
		
		КонецЦикла; 
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РольИсполнителяПриИзменении(Элемент)
	
	ИзменениеРолиИсполнителя();
	
КонецПроцедуры

&НаКлиенте
Процедура СпособАдресацииПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектАдресации_1Очистка(Элемент, СтандартнаяОбработка)
	
	ОчисткаОбъектаАдресации("ОбъектАдресации_1");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектАдресации_2Очистка(Элемент, СтандартнаяОбработка)
	
	ОчисткаОбъектаАдресации("ОбъектАдресации_2");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектАдресации_3Очистка(Элемент, СтандартнаяОбработка)
	
	ОчисткаОбъектаАдресации("ОбъектАдресации_3");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаСоздатьЗадачу(Команда)
	
	ЗадачаСсылка = ВыполнитьСозданиеЗадачи();
	Если ЗначениеЗаполнено(ЗадачаСсылка) Тогда
		ОповеститьОбИзменении(Тип("ЗадачаСсылка.бит_уп_Задача"));
		Закрыть();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьЗадачуПрикрепитьФайлы(Команда)
	
	СообщениеВопрос = НСтр("ru = 'В результате выполнения команды будет создана задача и осуществлен переход в форму прикрепления файлов. Продолжить?'");
		
	ОповещениеВопрос = Новый ОписаниеОповещения("СоздатьЗадачуОповещение", ЭтотОбъект);
	ПоказатьВопрос(ОповещениеВопрос, СообщениеВопрос, РежимДиалогаВопрос.ДаНет, 30);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗадачуОповещение(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗадачаСсылка = ВыполнитьСозданиеЗадачи();
		Если ЗначениеЗаполнено(ЗадачаСсылка) Тогда
			ОповеститьОбИзменении(Тип("ЗадачаСсылка.бит_уп_Задача"));
			Закрыть();
			ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы", Новый Структура("ВладелецФайла", ЗадачаСсылка));
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция выполняет создание задачи.
// 
// Возвращаемое значение:
//  флДействиеВыполнено - Булево.
// 
&НаСервере
Функция ВыполнитьСозданиеЗадачи()
	
	флДанныеЗаполнены = ПроверитьЗаполнение();
		
	Если флДанныеЗаполнены Тогда
		
		СтрЗадача = Задачи.бит_уп_Задача.СтруктураЗадачи();
		ЗаполнитьЗначенияСвойств(СтрЗадача, ЭтаФорма);
		
		ЗадачаСсылка = Задачи.бит_уп_Задача.СоздатьНовуюЗадачу(СтрЗадача, МаксКоличествоОбъектов);
		
	КонецЕсли; 

	Возврат ЗадачаСсылка;
	
КонецФункции // ВыполнитьСозданиеЗадачи()

// Процедура управляет видимостью элементов формы. 
// 
&НаСервере
Процедура УстановитьВидимость()
	
	флЭтоАдресацияИсполнителю = ?(СпособАдресации = 0,Истина,Ложь);
	флЭтоАдресацияРоли        = ?(СпособАдресации = 1,Истина,Ложь);
	
	Элементы.Исполнитель.Видимость         = флЭтоАдресацияИсполнителю;
	Элементы.ГруппаАдресацияРоли.Видимость = флЭтоАдресацияРоли;
	
	бит_уп_Сервер.НастроитьПоляОбъектовАдресации(Элементы, НастройкиАдресации, МаксКоличествоОбъектов);
	
	Элементы.ЗадачаОснование.Видимость = ЗначениеЗаполнено(ЗадачаОснование);
	
	Элементы.Виза.Видимость = ЗначениеЗаполнено(Виза);
	
КонецПроцедуры // УстановитьВидимость()

// Процедура обрабатывает изменение роли исполнителя. 
// 
&НаСервере
Процедура ИзменениеРолиИсполнителя()

	НастройкиАдресации = Справочники.бит_РолиИсполнителей.НастройкиОбъектовАдресации(РольИсполнителя);

	бит_уп_Сервер.НазначитьТипыОбъектовАдресации(ЭтаФорма, НастройкиАдресации, МаксКоличествоОбъектов);
	
	УстановитьВидимость();

КонецПроцедуры // ИзменениеРолиИсполнителя()

// Процедура осуществляет очистку объекта адресации. 
// 
// Параметры:
//  Имя - Строка.
// 
&НаКлиенте
Процедура ОчисткаОбъектаАдресации(Имя)
	
	ТекНастройка = Неопределено;
	НастройкиАдресации.Свойство(Имя, ТекНастройка);
	
	Если НЕ ТекНастройка = Неопределено Тогда
		
		ЭтаФорма[Имя] = ТекНастройка.Тип.ПривестиЗначение(ЭтаФорма[Имя]);
		
	Иначе
		
		ЭтаФорма[Имя] = Неопределено;
		
	КонецЕсли; 
	
КонецПроцедуры // ОчисткаОбъектаАдресации()

#КонецОбласти

